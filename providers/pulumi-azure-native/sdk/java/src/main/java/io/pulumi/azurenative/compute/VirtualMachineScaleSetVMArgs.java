// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.compute.inputs.AdditionalCapabilitiesArgs;
import io.pulumi.azurenative.compute.inputs.DiagnosticsProfileArgs;
import io.pulumi.azurenative.compute.inputs.HardwareProfileArgs;
import io.pulumi.azurenative.compute.inputs.NetworkProfileArgs;
import io.pulumi.azurenative.compute.inputs.OSProfileArgs;
import io.pulumi.azurenative.compute.inputs.PlanArgs;
import io.pulumi.azurenative.compute.inputs.SecurityProfileArgs;
import io.pulumi.azurenative.compute.inputs.StorageProfileArgs;
import io.pulumi.azurenative.compute.inputs.SubResourceArgs;
import io.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetVMNetworkProfileConfigurationArgs;
import io.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetVMProtectionPolicyArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualMachineScaleSetVMArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualMachineScaleSetVMArgs Empty = new VirtualMachineScaleSetVMArgs();

    /**
     * Specifies additional capabilities enabled or disabled on the virtual machine in the scale set. For instance: whether the virtual machine has the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     * 
     */
    @InputImport(name="additionalCapabilities")
        private final @Nullable Input<AdditionalCapabilitiesArgs> additionalCapabilities;

    public Input<AdditionalCapabilitiesArgs> getAdditionalCapabilities() {
        return this.additionalCapabilities == null ? Input.empty() : this.additionalCapabilities;
    }

    /**
     * Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). <br><br> For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates) <br><br> Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.
     * 
     */
    @InputImport(name="availabilitySet")
        private final @Nullable Input<SubResourceArgs> availabilitySet;

    public Input<SubResourceArgs> getAvailabilitySet() {
        return this.availabilitySet == null ? Input.empty() : this.availabilitySet;
    }

    /**
     * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
     * 
     */
    @InputImport(name="diagnosticsProfile")
        private final @Nullable Input<DiagnosticsProfileArgs> diagnosticsProfile;

    public Input<DiagnosticsProfileArgs> getDiagnosticsProfile() {
        return this.diagnosticsProfile == null ? Input.empty() : this.diagnosticsProfile;
    }

    /**
     * Specifies the hardware settings for the virtual machine.
     * 
     */
    @InputImport(name="hardwareProfile")
        private final @Nullable Input<HardwareProfileArgs> hardwareProfile;

    public Input<HardwareProfileArgs> getHardwareProfile() {
        return this.hardwareProfile == null ? Input.empty() : this.hardwareProfile;
    }

    /**
     * The instance ID of the virtual machine.
     * 
     */
    @InputImport(name="instanceId")
        private final @Nullable Input<String> instanceId;

    public Input<String> getInstanceId() {
        return this.instanceId == null ? Input.empty() : this.instanceId;
    }

    /**
     * Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15
     * 
     */
    @InputImport(name="licenseType")
        private final @Nullable Input<String> licenseType;

    public Input<String> getLicenseType() {
        return this.licenseType == null ? Input.empty() : this.licenseType;
    }

    /**
     * Resource location
     * 
     */
    @InputImport(name="location")
        private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Specifies the network interfaces of the virtual machine.
     * 
     */
    @InputImport(name="networkProfile")
        private final @Nullable Input<NetworkProfileArgs> networkProfile;

    public Input<NetworkProfileArgs> getNetworkProfile() {
        return this.networkProfile == null ? Input.empty() : this.networkProfile;
    }

    /**
     * Specifies the network profile configuration of the virtual machine.
     * 
     */
    @InputImport(name="networkProfileConfiguration")
        private final @Nullable Input<VirtualMachineScaleSetVMNetworkProfileConfigurationArgs> networkProfileConfiguration;

    public Input<VirtualMachineScaleSetVMNetworkProfileConfigurationArgs> getNetworkProfileConfiguration() {
        return this.networkProfileConfiguration == null ? Input.empty() : this.networkProfileConfiguration;
    }

    /**
     * Specifies the operating system settings for the virtual machine.
     * 
     */
    @InputImport(name="osProfile")
        private final @Nullable Input<OSProfileArgs> osProfile;

    public Input<OSProfileArgs> getOsProfile() {
        return this.osProfile == null ? Input.empty() : this.osProfile;
    }

    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     * 
     */
    @InputImport(name="plan")
        private final @Nullable Input<PlanArgs> plan;

    public Input<PlanArgs> getPlan() {
        return this.plan == null ? Input.empty() : this.plan;
    }

    /**
     * Specifies the protection policy of the virtual machine.
     * 
     */
    @InputImport(name="protectionPolicy")
        private final @Nullable Input<VirtualMachineScaleSetVMProtectionPolicyArgs> protectionPolicy;

    public Input<VirtualMachineScaleSetVMProtectionPolicyArgs> getProtectionPolicy() {
        return this.protectionPolicy == null ? Input.empty() : this.protectionPolicy;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
        private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the Security related profile settings for the virtual machine.
     * 
     */
    @InputImport(name="securityProfile")
        private final @Nullable Input<SecurityProfileArgs> securityProfile;

    public Input<SecurityProfileArgs> getSecurityProfile() {
        return this.securityProfile == null ? Input.empty() : this.securityProfile;
    }

    /**
     * Specifies the storage settings for the virtual machine disks.
     * 
     */
    @InputImport(name="storageProfile")
        private final @Nullable Input<StorageProfileArgs> storageProfile;

    public Input<StorageProfileArgs> getStorageProfile() {
        return this.storageProfile == null ? Input.empty() : this.storageProfile;
    }

    /**
     * Resource tags
     * 
     */
    @InputImport(name="tags")
        private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01
     * 
     */
    @InputImport(name="userData")
        private final @Nullable Input<String> userData;

    public Input<String> getUserData() {
        return this.userData == null ? Input.empty() : this.userData;
    }

    /**
     * The name of the VM scale set where the extension should be create or updated.
     * 
     */
    @InputImport(name="vmScaleSetName", required=true)
        private final Input<String> vmScaleSetName;

    public Input<String> getVmScaleSetName() {
        return this.vmScaleSetName;
    }

    public VirtualMachineScaleSetVMArgs(
        @Nullable Input<AdditionalCapabilitiesArgs> additionalCapabilities,
        @Nullable Input<SubResourceArgs> availabilitySet,
        @Nullable Input<DiagnosticsProfileArgs> diagnosticsProfile,
        @Nullable Input<HardwareProfileArgs> hardwareProfile,
        @Nullable Input<String> instanceId,
        @Nullable Input<String> licenseType,
        @Nullable Input<String> location,
        @Nullable Input<NetworkProfileArgs> networkProfile,
        @Nullable Input<VirtualMachineScaleSetVMNetworkProfileConfigurationArgs> networkProfileConfiguration,
        @Nullable Input<OSProfileArgs> osProfile,
        @Nullable Input<PlanArgs> plan,
        @Nullable Input<VirtualMachineScaleSetVMProtectionPolicyArgs> protectionPolicy,
        Input<String> resourceGroupName,
        @Nullable Input<SecurityProfileArgs> securityProfile,
        @Nullable Input<StorageProfileArgs> storageProfile,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> userData,
        Input<String> vmScaleSetName) {
        this.additionalCapabilities = additionalCapabilities;
        this.availabilitySet = availabilitySet;
        this.diagnosticsProfile = diagnosticsProfile;
        this.hardwareProfile = hardwareProfile;
        this.instanceId = instanceId;
        this.licenseType = licenseType;
        this.location = location;
        this.networkProfile = networkProfile;
        this.networkProfileConfiguration = networkProfileConfiguration;
        this.osProfile = osProfile;
        this.plan = plan;
        this.protectionPolicy = protectionPolicy;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.securityProfile = securityProfile;
        this.storageProfile = storageProfile;
        this.tags = tags;
        this.userData = userData;
        this.vmScaleSetName = Objects.requireNonNull(vmScaleSetName, "expected parameter 'vmScaleSetName' to be non-null");
    }

    private VirtualMachineScaleSetVMArgs() {
        this.additionalCapabilities = Input.empty();
        this.availabilitySet = Input.empty();
        this.diagnosticsProfile = Input.empty();
        this.hardwareProfile = Input.empty();
        this.instanceId = Input.empty();
        this.licenseType = Input.empty();
        this.location = Input.empty();
        this.networkProfile = Input.empty();
        this.networkProfileConfiguration = Input.empty();
        this.osProfile = Input.empty();
        this.plan = Input.empty();
        this.protectionPolicy = Input.empty();
        this.resourceGroupName = Input.empty();
        this.securityProfile = Input.empty();
        this.storageProfile = Input.empty();
        this.tags = Input.empty();
        this.userData = Input.empty();
        this.vmScaleSetName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineScaleSetVMArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AdditionalCapabilitiesArgs> additionalCapabilities;
        private @Nullable Input<SubResourceArgs> availabilitySet;
        private @Nullable Input<DiagnosticsProfileArgs> diagnosticsProfile;
        private @Nullable Input<HardwareProfileArgs> hardwareProfile;
        private @Nullable Input<String> instanceId;
        private @Nullable Input<String> licenseType;
        private @Nullable Input<String> location;
        private @Nullable Input<NetworkProfileArgs> networkProfile;
        private @Nullable Input<VirtualMachineScaleSetVMNetworkProfileConfigurationArgs> networkProfileConfiguration;
        private @Nullable Input<OSProfileArgs> osProfile;
        private @Nullable Input<PlanArgs> plan;
        private @Nullable Input<VirtualMachineScaleSetVMProtectionPolicyArgs> protectionPolicy;
        private Input<String> resourceGroupName;
        private @Nullable Input<SecurityProfileArgs> securityProfile;
        private @Nullable Input<StorageProfileArgs> storageProfile;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> userData;
        private Input<String> vmScaleSetName;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineScaleSetVMArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalCapabilities = defaults.additionalCapabilities;
    	      this.availabilitySet = defaults.availabilitySet;
    	      this.diagnosticsProfile = defaults.diagnosticsProfile;
    	      this.hardwareProfile = defaults.hardwareProfile;
    	      this.instanceId = defaults.instanceId;
    	      this.licenseType = defaults.licenseType;
    	      this.location = defaults.location;
    	      this.networkProfile = defaults.networkProfile;
    	      this.networkProfileConfiguration = defaults.networkProfileConfiguration;
    	      this.osProfile = defaults.osProfile;
    	      this.plan = defaults.plan;
    	      this.protectionPolicy = defaults.protectionPolicy;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.securityProfile = defaults.securityProfile;
    	      this.storageProfile = defaults.storageProfile;
    	      this.tags = defaults.tags;
    	      this.userData = defaults.userData;
    	      this.vmScaleSetName = defaults.vmScaleSetName;
        }

        public Builder setAdditionalCapabilities(@Nullable Input<AdditionalCapabilitiesArgs> additionalCapabilities) {
            this.additionalCapabilities = additionalCapabilities;
            return this;
        }

        public Builder setAdditionalCapabilities(@Nullable AdditionalCapabilitiesArgs additionalCapabilities) {
            this.additionalCapabilities = Input.ofNullable(additionalCapabilities);
            return this;
        }

        public Builder setAvailabilitySet(@Nullable Input<SubResourceArgs> availabilitySet) {
            this.availabilitySet = availabilitySet;
            return this;
        }

        public Builder setAvailabilitySet(@Nullable SubResourceArgs availabilitySet) {
            this.availabilitySet = Input.ofNullable(availabilitySet);
            return this;
        }

        public Builder setDiagnosticsProfile(@Nullable Input<DiagnosticsProfileArgs> diagnosticsProfile) {
            this.diagnosticsProfile = diagnosticsProfile;
            return this;
        }

        public Builder setDiagnosticsProfile(@Nullable DiagnosticsProfileArgs diagnosticsProfile) {
            this.diagnosticsProfile = Input.ofNullable(diagnosticsProfile);
            return this;
        }

        public Builder setHardwareProfile(@Nullable Input<HardwareProfileArgs> hardwareProfile) {
            this.hardwareProfile = hardwareProfile;
            return this;
        }

        public Builder setHardwareProfile(@Nullable HardwareProfileArgs hardwareProfile) {
            this.hardwareProfile = Input.ofNullable(hardwareProfile);
            return this;
        }

        public Builder setInstanceId(@Nullable Input<String> instanceId) {
            this.instanceId = instanceId;
            return this;
        }

        public Builder setInstanceId(@Nullable String instanceId) {
            this.instanceId = Input.ofNullable(instanceId);
            return this;
        }

        public Builder setLicenseType(@Nullable Input<String> licenseType) {
            this.licenseType = licenseType;
            return this;
        }

        public Builder setLicenseType(@Nullable String licenseType) {
            this.licenseType = Input.ofNullable(licenseType);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setNetworkProfile(@Nullable Input<NetworkProfileArgs> networkProfile) {
            this.networkProfile = networkProfile;
            return this;
        }

        public Builder setNetworkProfile(@Nullable NetworkProfileArgs networkProfile) {
            this.networkProfile = Input.ofNullable(networkProfile);
            return this;
        }

        public Builder setNetworkProfileConfiguration(@Nullable Input<VirtualMachineScaleSetVMNetworkProfileConfigurationArgs> networkProfileConfiguration) {
            this.networkProfileConfiguration = networkProfileConfiguration;
            return this;
        }

        public Builder setNetworkProfileConfiguration(@Nullable VirtualMachineScaleSetVMNetworkProfileConfigurationArgs networkProfileConfiguration) {
            this.networkProfileConfiguration = Input.ofNullable(networkProfileConfiguration);
            return this;
        }

        public Builder setOsProfile(@Nullable Input<OSProfileArgs> osProfile) {
            this.osProfile = osProfile;
            return this;
        }

        public Builder setOsProfile(@Nullable OSProfileArgs osProfile) {
            this.osProfile = Input.ofNullable(osProfile);
            return this;
        }

        public Builder setPlan(@Nullable Input<PlanArgs> plan) {
            this.plan = plan;
            return this;
        }

        public Builder setPlan(@Nullable PlanArgs plan) {
            this.plan = Input.ofNullable(plan);
            return this;
        }

        public Builder setProtectionPolicy(@Nullable Input<VirtualMachineScaleSetVMProtectionPolicyArgs> protectionPolicy) {
            this.protectionPolicy = protectionPolicy;
            return this;
        }

        public Builder setProtectionPolicy(@Nullable VirtualMachineScaleSetVMProtectionPolicyArgs protectionPolicy) {
            this.protectionPolicy = Input.ofNullable(protectionPolicy);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setSecurityProfile(@Nullable Input<SecurityProfileArgs> securityProfile) {
            this.securityProfile = securityProfile;
            return this;
        }

        public Builder setSecurityProfile(@Nullable SecurityProfileArgs securityProfile) {
            this.securityProfile = Input.ofNullable(securityProfile);
            return this;
        }

        public Builder setStorageProfile(@Nullable Input<StorageProfileArgs> storageProfile) {
            this.storageProfile = storageProfile;
            return this;
        }

        public Builder setStorageProfile(@Nullable StorageProfileArgs storageProfile) {
            this.storageProfile = Input.ofNullable(storageProfile);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setUserData(@Nullable Input<String> userData) {
            this.userData = userData;
            return this;
        }

        public Builder setUserData(@Nullable String userData) {
            this.userData = Input.ofNullable(userData);
            return this;
        }

        public Builder setVmScaleSetName(Input<String> vmScaleSetName) {
            this.vmScaleSetName = Objects.requireNonNull(vmScaleSetName);
            return this;
        }

        public Builder setVmScaleSetName(String vmScaleSetName) {
            this.vmScaleSetName = Input.of(Objects.requireNonNull(vmScaleSetName));
            return this;
        }
        public VirtualMachineScaleSetVMArgs build() {
            return new VirtualMachineScaleSetVMArgs(additionalCapabilities, availabilitySet, diagnosticsProfile, hardwareProfile, instanceId, licenseType, location, networkProfile, networkProfileConfiguration, osProfile, plan, protectionPolicy, resourceGroupName, securityProfile, storageProfile, tags, userData, vmScaleSetName);
        }
    }
}
