// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Describes the partition scheme of a singleton-partitioned, or non-partitioned service.
 * 
 */
public final class SingletonPartitionSchemeDescriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final SingletonPartitionSchemeDescriptionArgs Empty = new SingletonPartitionSchemeDescriptionArgs();

    /**
     * Enumerates the ways that a service can be partitioned.
     * Expected value is 'Singleton'.
     * 
     */
    @InputImport(name="partitionScheme", required=true)
      private final Input<String> partitionScheme;

    public Input<String> getPartitionScheme() {
        return this.partitionScheme;
    }

    public SingletonPartitionSchemeDescriptionArgs(Input<String> partitionScheme) {
        this.partitionScheme = Objects.requireNonNull(partitionScheme, "expected parameter 'partitionScheme' to be non-null");
    }

    private SingletonPartitionSchemeDescriptionArgs() {
        this.partitionScheme = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SingletonPartitionSchemeDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> partitionScheme;

        public Builder() {
    	      // Empty
        }

        public Builder(SingletonPartitionSchemeDescriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.partitionScheme = defaults.partitionScheme;
        }

        public Builder setPartitionScheme(Input<String> partitionScheme) {
            this.partitionScheme = Objects.requireNonNull(partitionScheme);
            return this;
        }

        public Builder setPartitionScheme(String partitionScheme) {
            this.partitionScheme = Input.of(Objects.requireNonNull(partitionScheme));
            return this;
        }
        public SingletonPartitionSchemeDescriptionArgs build() {
            return new SingletonPartitionSchemeDescriptionArgs(partitionScheme);
        }
    }
}
