// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.inputs;

import io.pulumi.azurenative.datamigration.inputs.MigrateSqlServerSqlDbSyncDatabaseInputArgs;
import io.pulumi.azurenative.datamigration.inputs.MigrationValidationOptionsArgs;
import io.pulumi.azurenative.datamigration.inputs.SqlConnectionInfoArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
 * 
 */
public final class MigrateSqlServerSqlDbSyncTaskInputArgs extends io.pulumi.resources.ResourceArgs {

    public static final MigrateSqlServerSqlDbSyncTaskInputArgs Empty = new MigrateSqlServerSqlDbSyncTaskInputArgs();

    /**
     * Databases to migrate
     * 
     */
    @Import(name="selectedDatabases", required=true)
      private final Output<List<MigrateSqlServerSqlDbSyncDatabaseInputArgs>> selectedDatabases;

    public Output<List<MigrateSqlServerSqlDbSyncDatabaseInputArgs>> getSelectedDatabases() {
        return this.selectedDatabases;
    }

    /**
     * Information for connecting to source
     * 
     */
    @Import(name="sourceConnectionInfo", required=true)
      private final Output<SqlConnectionInfoArgs> sourceConnectionInfo;

    public Output<SqlConnectionInfoArgs> getSourceConnectionInfo() {
        return this.sourceConnectionInfo;
    }

    /**
     * Information for connecting to target
     * 
     */
    @Import(name="targetConnectionInfo", required=true)
      private final Output<SqlConnectionInfoArgs> targetConnectionInfo;

    public Output<SqlConnectionInfoArgs> getTargetConnectionInfo() {
        return this.targetConnectionInfo;
    }

    /**
     * Validation options
     * 
     */
    @Import(name="validationOptions")
      private final @Nullable Output<MigrationValidationOptionsArgs> validationOptions;

    public Output<MigrationValidationOptionsArgs> getValidationOptions() {
        return this.validationOptions == null ? Output.empty() : this.validationOptions;
    }

    public MigrateSqlServerSqlDbSyncTaskInputArgs(
        Output<List<MigrateSqlServerSqlDbSyncDatabaseInputArgs>> selectedDatabases,
        Output<SqlConnectionInfoArgs> sourceConnectionInfo,
        Output<SqlConnectionInfoArgs> targetConnectionInfo,
        @Nullable Output<MigrationValidationOptionsArgs> validationOptions) {
        this.selectedDatabases = Objects.requireNonNull(selectedDatabases, "expected parameter 'selectedDatabases' to be non-null");
        this.sourceConnectionInfo = Objects.requireNonNull(sourceConnectionInfo, "expected parameter 'sourceConnectionInfo' to be non-null");
        this.targetConnectionInfo = Objects.requireNonNull(targetConnectionInfo, "expected parameter 'targetConnectionInfo' to be non-null");
        this.validationOptions = validationOptions;
    }

    private MigrateSqlServerSqlDbSyncTaskInputArgs() {
        this.selectedDatabases = Output.empty();
        this.sourceConnectionInfo = Output.empty();
        this.targetConnectionInfo = Output.empty();
        this.validationOptions = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateSqlServerSqlDbSyncTaskInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<MigrateSqlServerSqlDbSyncDatabaseInputArgs>> selectedDatabases;
        private Output<SqlConnectionInfoArgs> sourceConnectionInfo;
        private Output<SqlConnectionInfoArgs> targetConnectionInfo;
        private @Nullable Output<MigrationValidationOptionsArgs> validationOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrateSqlServerSqlDbSyncTaskInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.selectedDatabases = defaults.selectedDatabases;
    	      this.sourceConnectionInfo = defaults.sourceConnectionInfo;
    	      this.targetConnectionInfo = defaults.targetConnectionInfo;
    	      this.validationOptions = defaults.validationOptions;
        }

        public Builder selectedDatabases(Output<List<MigrateSqlServerSqlDbSyncDatabaseInputArgs>> selectedDatabases) {
            this.selectedDatabases = Objects.requireNonNull(selectedDatabases);
            return this;
        }
        public Builder selectedDatabases(List<MigrateSqlServerSqlDbSyncDatabaseInputArgs> selectedDatabases) {
            this.selectedDatabases = Output.of(Objects.requireNonNull(selectedDatabases));
            return this;
        }
        public Builder selectedDatabases(MigrateSqlServerSqlDbSyncDatabaseInputArgs... selectedDatabases) {
            return selectedDatabases(List.of(selectedDatabases));
        }
        public Builder sourceConnectionInfo(Output<SqlConnectionInfoArgs> sourceConnectionInfo) {
            this.sourceConnectionInfo = Objects.requireNonNull(sourceConnectionInfo);
            return this;
        }
        public Builder sourceConnectionInfo(SqlConnectionInfoArgs sourceConnectionInfo) {
            this.sourceConnectionInfo = Output.of(Objects.requireNonNull(sourceConnectionInfo));
            return this;
        }
        public Builder targetConnectionInfo(Output<SqlConnectionInfoArgs> targetConnectionInfo) {
            this.targetConnectionInfo = Objects.requireNonNull(targetConnectionInfo);
            return this;
        }
        public Builder targetConnectionInfo(SqlConnectionInfoArgs targetConnectionInfo) {
            this.targetConnectionInfo = Output.of(Objects.requireNonNull(targetConnectionInfo));
            return this;
        }
        public Builder validationOptions(@Nullable Output<MigrationValidationOptionsArgs> validationOptions) {
            this.validationOptions = validationOptions;
            return this;
        }
        public Builder validationOptions(@Nullable MigrationValidationOptionsArgs validationOptions) {
            this.validationOptions = Output.ofNullable(validationOptions);
            return this;
        }        public MigrateSqlServerSqlDbSyncTaskInputArgs build() {
            return new MigrateSqlServerSqlDbSyncTaskInputArgs(selectedDatabases, sourceConnectionInfo, targetConnectionInfo, validationOptions);
        }
    }
}
