// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DedicatedHostAllocatableVMResponse {
    /**
     * Maximum number of VMs of size vmSize that can fit in the dedicated host's remaining capacity.
     * 
     */
    private final @Nullable Double count;
    /**
     * VM size in terms of which the unutilized capacity is represented.
     * 
     */
    private final @Nullable String vmSize;

    @CustomType.Constructor
    private DedicatedHostAllocatableVMResponse(
        @CustomType.Parameter("count") @Nullable Double count,
        @CustomType.Parameter("vmSize") @Nullable String vmSize) {
        this.count = count;
        this.vmSize = vmSize;
    }

    /**
     * Maximum number of VMs of size vmSize that can fit in the dedicated host's remaining capacity.
     * 
    */
    public Optional<Double> getCount() {
        return Optional.ofNullable(this.count);
    }
    /**
     * VM size in terms of which the unutilized capacity is represented.
     * 
    */
    public Optional<String> getVmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DedicatedHostAllocatableVMResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Double count;
        private @Nullable String vmSize;

        public Builder() {
    	      // Empty
        }

        public Builder(DedicatedHostAllocatableVMResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.vmSize = defaults.vmSize;
        }

        public Builder count(@Nullable Double count) {
            this.count = count;
            return this;
        }
        public Builder vmSize(@Nullable String vmSize) {
            this.vmSize = vmSize;
            return this;
        }        public DedicatedHostAllocatableVMResponse build() {
            return new DedicatedHostAllocatableVMResponse(count, vmSize);
        }
    }
}
