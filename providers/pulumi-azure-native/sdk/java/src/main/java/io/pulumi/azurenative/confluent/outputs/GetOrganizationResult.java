// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.confluent.outputs;

import io.pulumi.azurenative.confluent.outputs.OrganizationResourcePropertiesResponseOfferDetail;
import io.pulumi.azurenative.confluent.outputs.OrganizationResourcePropertiesResponseUserDetail;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetOrganizationResult {
    private final String createdTime;
    private final String id;
    private final @Nullable String location;
    private final String name;
    private final @Nullable OrganizationResourcePropertiesResponseOfferDetail offerDetail;
    private final String organizationId;
    private final String provisioningState;
    private final String ssoUrl;
    private final @Nullable Map<String,String> tags;
    private final String type;
    private final @Nullable OrganizationResourcePropertiesResponseUserDetail userDetail;

    @OutputCustomType.Constructor({"createdTime","id","location","name","offerDetail","organizationId","provisioningState","ssoUrl","tags","type","userDetail"})
    private GetOrganizationResult(
        String createdTime,
        String id,
        @Nullable String location,
        String name,
        @Nullable OrganizationResourcePropertiesResponseOfferDetail offerDetail,
        String organizationId,
        String provisioningState,
        String ssoUrl,
        @Nullable Map<String,String> tags,
        String type,
        @Nullable OrganizationResourcePropertiesResponseUserDetail userDetail) {
        this.createdTime = Objects.requireNonNull(createdTime);
        this.id = Objects.requireNonNull(id);
        this.location = location;
        this.name = Objects.requireNonNull(name);
        this.offerDetail = offerDetail;
        this.organizationId = Objects.requireNonNull(organizationId);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.ssoUrl = Objects.requireNonNull(ssoUrl);
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.userDetail = userDetail;
    }

    public String getCreatedTime() {
        return this.createdTime;
    }
    public String getId() {
        return this.id;
    }
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public String getName() {
        return this.name;
    }
    public Optional<OrganizationResourcePropertiesResponseOfferDetail> getOfferDetail() {
        return Optional.ofNullable(this.offerDetail);
    }
    public String getOrganizationId() {
        return this.organizationId;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public String getSsoUrl() {
        return this.ssoUrl;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }
    public Optional<OrganizationResourcePropertiesResponseUserDetail> getUserDetail() {
        return Optional.ofNullable(this.userDetail);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createdTime;
        private String id;
        private @Nullable String location;
        private String name;
        private @Nullable OrganizationResourcePropertiesResponseOfferDetail offerDetail;
        private String organizationId;
        private String provisioningState;
        private String ssoUrl;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable OrganizationResourcePropertiesResponseUserDetail userDetail;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOrganizationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTime = defaults.createdTime;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.offerDetail = defaults.offerDetail;
    	      this.organizationId = defaults.organizationId;
    	      this.provisioningState = defaults.provisioningState;
    	      this.ssoUrl = defaults.ssoUrl;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.userDetail = defaults.userDetail;
        }

        public Builder setCreatedTime(String createdTime) {
            this.createdTime = Objects.requireNonNull(createdTime);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOfferDetail(@Nullable OrganizationResourcePropertiesResponseOfferDetail offerDetail) {
            this.offerDetail = offerDetail;
            return this;
        }

        public Builder setOrganizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setSsoUrl(String ssoUrl) {
            this.ssoUrl = Objects.requireNonNull(ssoUrl);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUserDetail(@Nullable OrganizationResourcePropertiesResponseUserDetail userDetail) {
            this.userDetail = userDetail;
            return this;
        }

        public GetOrganizationResult build() {
            return new GetOrganizationResult(createdTime, id, location, name, offerDetail, organizationId, provisioningState, ssoUrl, tags, type, userDetail);
        }
    }
}
