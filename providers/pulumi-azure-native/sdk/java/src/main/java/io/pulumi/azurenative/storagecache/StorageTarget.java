// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagecache;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.storagecache.StorageTargetArgs;
import io.pulumi.azurenative.storagecache.outputs.BlobNfsTargetResponse;
import io.pulumi.azurenative.storagecache.outputs.ClfsTargetResponse;
import io.pulumi.azurenative.storagecache.outputs.NamespaceJunctionResponse;
import io.pulumi.azurenative.storagecache.outputs.Nfs3TargetResponse;
import io.pulumi.azurenative.storagecache.outputs.SystemDataResponse;
import io.pulumi.azurenative.storagecache.outputs.UnknownTargetResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Type of the Storage Target.
 * API Version: 2021-03-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:storagecache:StorageTarget st1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/scgroup/providers/Microsoft.StorageCache/caches/sc1/storagetargets/st1 
 * ```
 * 
 */
@ResourceType(type="azure-native:storagecache:StorageTarget")
public class StorageTarget extends io.pulumi.resources.CustomResource {
    /**
     * Properties when targetType is blobNfs.
     * 
     */
    @OutputExport(name="blobNfs", type=BlobNfsTargetResponse.class, parameters={})
    private Output</* @Nullable */ BlobNfsTargetResponse> blobNfs;

    /**
     * @return Properties when targetType is blobNfs.
     * 
     */
    public Output</* @Nullable */ BlobNfsTargetResponse> getBlobNfs() {
        return this.blobNfs;
    }
    /**
     * Properties when targetType is clfs.
     * 
     */
    @OutputExport(name="clfs", type=ClfsTargetResponse.class, parameters={})
    private Output</* @Nullable */ ClfsTargetResponse> clfs;

    /**
     * @return Properties when targetType is clfs.
     * 
     */
    public Output</* @Nullable */ ClfsTargetResponse> getClfs() {
        return this.clfs;
    }
    /**
     * List of Cache namespace junctions to target for namespace associations.
     * 
     */
    @OutputExport(name="junctions", type=List.class, parameters={NamespaceJunctionResponse.class})
    private Output</* @Nullable */ List<NamespaceJunctionResponse>> junctions;

    /**
     * @return List of Cache namespace junctions to target for namespace associations.
     * 
     */
    public Output</* @Nullable */ List<NamespaceJunctionResponse>> getJunctions() {
        return this.junctions;
    }
    /**
     * Region name string.
     * 
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Region name string.
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * Name of the Storage Target.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the Storage Target.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Properties when targetType is nfs3.
     * 
     */
    @OutputExport(name="nfs3", type=Nfs3TargetResponse.class, parameters={})
    private Output</* @Nullable */ Nfs3TargetResponse> nfs3;

    /**
     * @return Properties when targetType is nfs3.
     * 
     */
    public Output</* @Nullable */ Nfs3TargetResponse> getNfs3() {
        return this.nfs3;
    }
    /**
     * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
     * 
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output</* @Nullable */ String> provisioningState;

    /**
     * @return ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
     * 
     */
    public Output</* @Nullable */ String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The system meta data relating to this resource.
     * 
     */
    @OutputExport(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return The system meta data relating to this resource.
     * 
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * Type of the Storage Target.
     * 
     */
    @OutputExport(name="targetType", type=String.class, parameters={})
    private Output<String> targetType;

    /**
     * @return Type of the Storage Target.
     * 
     */
    public Output<String> getTargetType() {
        return this.targetType;
    }
    /**
     * Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * Properties when targetType is unknown.
     * 
     */
    @OutputExport(name="unknown", type=UnknownTargetResponse.class, parameters={})
    private Output</* @Nullable */ UnknownTargetResponse> unknown;

    /**
     * @return Properties when targetType is unknown.
     * 
     */
    public Output</* @Nullable */ UnknownTargetResponse> getUnknown() {
        return this.unknown;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StorageTarget(String name) {
        this(name, StorageTargetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StorageTarget(String name, StorageTargetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StorageTarget(String name, StorageTargetArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:storagecache:StorageTarget", name, args == null ? StorageTargetArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private StorageTarget(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:storagecache:StorageTarget", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:storagecache/v20190801preview:StorageTarget").build()),
                Input.of(Alias.builder().setType("azure-native:storagecache/v20191101:StorageTarget").build()),
                Input.of(Alias.builder().setType("azure-native:storagecache/v20200301:StorageTarget").build()),
                Input.of(Alias.builder().setType("azure-native:storagecache/v20201001:StorageTarget").build()),
                Input.of(Alias.builder().setType("azure-native:storagecache/v20210301:StorageTarget").build()),
                Input.of(Alias.builder().setType("azure-native:storagecache/v20210501:StorageTarget").build()),
                Input.of(Alias.builder().setType("azure-native:storagecache/v20210901:StorageTarget").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StorageTarget get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new StorageTarget(name, id, options);
    }
}
