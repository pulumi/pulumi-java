// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AutoScaleSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final AutoScaleSettingsArgs Empty = new AutoScaleSettingsArgs();

    /**
     * Maximum number of instances for this deployment.
     * 
     */
    @Import(name="maxInstances")
      private final @Nullable Output<Integer> maxInstances;

    public Output<Integer> getMaxInstances() {
        return this.maxInstances == null ? Output.empty() : this.maxInstances;
    }

    /**
     * Minimum number of instances for this deployment.
     * 
     */
    @Import(name="minInstances")
      private final @Nullable Output<Integer> minInstances;

    public Output<Integer> getMinInstances() {
        return this.minInstances == null ? Output.empty() : this.minInstances;
    }

    /**
     * The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
     * 
     */
    @Import(name="pollingInterval")
      private final @Nullable Output<String> pollingInterval;

    public Output<String> getPollingInterval() {
        return this.pollingInterval == null ? Output.empty() : this.pollingInterval;
    }

    /**
     * Expected value is 'Auto'.
     * 
     */
    @Import(name="scaleType", required=true)
      private final Output<String> scaleType;

    public Output<String> getScaleType() {
        return this.scaleType;
    }

    /**
     * Target CPU usage for the autoscaler.
     * 
     */
    @Import(name="targetUtilizationPercentage")
      private final @Nullable Output<Integer> targetUtilizationPercentage;

    public Output<Integer> getTargetUtilizationPercentage() {
        return this.targetUtilizationPercentage == null ? Output.empty() : this.targetUtilizationPercentage;
    }

    public AutoScaleSettingsArgs(
        @Nullable Output<Integer> maxInstances,
        @Nullable Output<Integer> minInstances,
        @Nullable Output<String> pollingInterval,
        Output<String> scaleType,
        @Nullable Output<Integer> targetUtilizationPercentage) {
        this.maxInstances = maxInstances;
        this.minInstances = minInstances;
        this.pollingInterval = pollingInterval;
        this.scaleType = Objects.requireNonNull(scaleType, "expected parameter 'scaleType' to be non-null");
        this.targetUtilizationPercentage = targetUtilizationPercentage;
    }

    private AutoScaleSettingsArgs() {
        this.maxInstances = Output.empty();
        this.minInstances = Output.empty();
        this.pollingInterval = Output.empty();
        this.scaleType = Output.empty();
        this.targetUtilizationPercentage = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoScaleSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> maxInstances;
        private @Nullable Output<Integer> minInstances;
        private @Nullable Output<String> pollingInterval;
        private Output<String> scaleType;
        private @Nullable Output<Integer> targetUtilizationPercentage;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoScaleSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxInstances = defaults.maxInstances;
    	      this.minInstances = defaults.minInstances;
    	      this.pollingInterval = defaults.pollingInterval;
    	      this.scaleType = defaults.scaleType;
    	      this.targetUtilizationPercentage = defaults.targetUtilizationPercentage;
        }

        public Builder maxInstances(@Nullable Output<Integer> maxInstances) {
            this.maxInstances = maxInstances;
            return this;
        }

        public Builder maxInstances(@Nullable Integer maxInstances) {
            this.maxInstances = Output.ofNullable(maxInstances);
            return this;
        }

        public Builder minInstances(@Nullable Output<Integer> minInstances) {
            this.minInstances = minInstances;
            return this;
        }

        public Builder minInstances(@Nullable Integer minInstances) {
            this.minInstances = Output.ofNullable(minInstances);
            return this;
        }

        public Builder pollingInterval(@Nullable Output<String> pollingInterval) {
            this.pollingInterval = pollingInterval;
            return this;
        }

        public Builder pollingInterval(@Nullable String pollingInterval) {
            this.pollingInterval = Output.ofNullable(pollingInterval);
            return this;
        }

        public Builder scaleType(Output<String> scaleType) {
            this.scaleType = Objects.requireNonNull(scaleType);
            return this;
        }

        public Builder scaleType(String scaleType) {
            this.scaleType = Output.of(Objects.requireNonNull(scaleType));
            return this;
        }

        public Builder targetUtilizationPercentage(@Nullable Output<Integer> targetUtilizationPercentage) {
            this.targetUtilizationPercentage = targetUtilizationPercentage;
            return this;
        }

        public Builder targetUtilizationPercentage(@Nullable Integer targetUtilizationPercentage) {
            this.targetUtilizationPercentage = Output.ofNullable(targetUtilizationPercentage);
            return this;
        }
        public AutoScaleSettingsArgs build() {
            return new AutoScaleSettingsArgs(maxInstances, minInstances, pollingInterval, scaleType, targetUtilizationPercentage);
        }
    }
}
