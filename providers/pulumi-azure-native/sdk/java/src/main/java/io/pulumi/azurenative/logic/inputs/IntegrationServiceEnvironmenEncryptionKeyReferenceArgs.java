// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic.inputs;

import io.pulumi.azurenative.logic.inputs.ResourceReferenceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The encryption key details for the integration service environment.
 * 
 */
public final class IntegrationServiceEnvironmenEncryptionKeyReferenceArgs extends io.pulumi.resources.ResourceArgs {

    public static final IntegrationServiceEnvironmenEncryptionKeyReferenceArgs Empty = new IntegrationServiceEnvironmenEncryptionKeyReferenceArgs();

    /**
     * Gets the key name in the Key Vault.
     * 
     */
    @InputImport(name="keyName")
      private final @Nullable Input<String> keyName;

    public Input<String> getKeyName() {
        return this.keyName == null ? Input.empty() : this.keyName;
    }

    /**
     * The key vault reference.
     * 
     */
    @InputImport(name="keyVault")
      private final @Nullable Input<ResourceReferenceArgs> keyVault;

    public Input<ResourceReferenceArgs> getKeyVault() {
        return this.keyVault == null ? Input.empty() : this.keyVault;
    }

    /**
     * Gets the version of the key specified in the keyName property.
     * 
     */
    @InputImport(name="keyVersion")
      private final @Nullable Input<String> keyVersion;

    public Input<String> getKeyVersion() {
        return this.keyVersion == null ? Input.empty() : this.keyVersion;
    }

    public IntegrationServiceEnvironmenEncryptionKeyReferenceArgs(
        @Nullable Input<String> keyName,
        @Nullable Input<ResourceReferenceArgs> keyVault,
        @Nullable Input<String> keyVersion) {
        this.keyName = keyName;
        this.keyVault = keyVault;
        this.keyVersion = keyVersion;
    }

    private IntegrationServiceEnvironmenEncryptionKeyReferenceArgs() {
        this.keyName = Input.empty();
        this.keyVault = Input.empty();
        this.keyVersion = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationServiceEnvironmenEncryptionKeyReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> keyName;
        private @Nullable Input<ResourceReferenceArgs> keyVault;
        private @Nullable Input<String> keyVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationServiceEnvironmenEncryptionKeyReferenceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyName = defaults.keyName;
    	      this.keyVault = defaults.keyVault;
    	      this.keyVersion = defaults.keyVersion;
        }

        public Builder setKeyName(@Nullable Input<String> keyName) {
            this.keyName = keyName;
            return this;
        }

        public Builder setKeyName(@Nullable String keyName) {
            this.keyName = Input.ofNullable(keyName);
            return this;
        }

        public Builder setKeyVault(@Nullable Input<ResourceReferenceArgs> keyVault) {
            this.keyVault = keyVault;
            return this;
        }

        public Builder setKeyVault(@Nullable ResourceReferenceArgs keyVault) {
            this.keyVault = Input.ofNullable(keyVault);
            return this;
        }

        public Builder setKeyVersion(@Nullable Input<String> keyVersion) {
            this.keyVersion = keyVersion;
            return this;
        }

        public Builder setKeyVersion(@Nullable String keyVersion) {
            this.keyVersion = Input.ofNullable(keyVersion);
            return this;
        }
        public IntegrationServiceEnvironmenEncryptionKeyReferenceArgs build() {
            return new IntegrationServiceEnvironmenEncryptionKeyReferenceArgs(keyName, keyVault, keyVersion);
        }
    }
}
