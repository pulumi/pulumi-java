// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.azurenative.media.inputs.MediaGraphPemCertificateListArgs;
import io.pulumi.azurenative.media.inputs.MediaGraphTlsValidationOptionsArgs;
import io.pulumi.azurenative.media.inputs.MediaGraphUsernamePasswordCredentialsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An endpoint which must be connected over TLS/SSL.
 * 
 */
public final class MediaGraphTlsEndpointArgs extends io.pulumi.resources.ResourceArgs {

    public static final MediaGraphTlsEndpointArgs Empty = new MediaGraphTlsEndpointArgs();

    /**
     * Polymorphic credentials to present to the endpoint.
     * 
     */
    @InputImport(name="credentials")
      private final @Nullable Input<MediaGraphUsernamePasswordCredentialsArgs> credentials;

    public Input<MediaGraphUsernamePasswordCredentialsArgs> getCredentials() {
        return this.credentials == null ? Input.empty() : this.credentials;
    }

    /**
     * The discriminator for derived types.
     * Expected value is '#Microsoft.Media.MediaGraphTlsEndpoint'.
     * 
     */
    @InputImport(name="odataType", required=true)
      private final Input<String> odataType;

    public Input<String> getOdataType() {
        return this.odataType;
    }

    /**
     * What certificates should be trusted when authenticating a TLS connection. Null designates that Azure Media's source of trust should be used.
     * 
     */
    @InputImport(name="trustedCertificates")
      private final @Nullable Input<MediaGraphPemCertificateListArgs> trustedCertificates;

    public Input<MediaGraphPemCertificateListArgs> getTrustedCertificates() {
        return this.trustedCertificates == null ? Input.empty() : this.trustedCertificates;
    }

    /**
     * Url for the endpoint.
     * 
     */
    @InputImport(name="url", required=true)
      private final Input<String> url;

    public Input<String> getUrl() {
        return this.url;
    }

    /**
     * Validation options to use when authenticating a TLS connection. By default, strict validation is used.
     * 
     */
    @InputImport(name="validationOptions")
      private final @Nullable Input<MediaGraphTlsValidationOptionsArgs> validationOptions;

    public Input<MediaGraphTlsValidationOptionsArgs> getValidationOptions() {
        return this.validationOptions == null ? Input.empty() : this.validationOptions;
    }

    public MediaGraphTlsEndpointArgs(
        @Nullable Input<MediaGraphUsernamePasswordCredentialsArgs> credentials,
        Input<String> odataType,
        @Nullable Input<MediaGraphPemCertificateListArgs> trustedCertificates,
        Input<String> url,
        @Nullable Input<MediaGraphTlsValidationOptionsArgs> validationOptions) {
        this.credentials = credentials;
        this.odataType = Objects.requireNonNull(odataType, "expected parameter 'odataType' to be non-null");
        this.trustedCertificates = trustedCertificates;
        this.url = Objects.requireNonNull(url, "expected parameter 'url' to be non-null");
        this.validationOptions = validationOptions;
    }

    private MediaGraphTlsEndpointArgs() {
        this.credentials = Input.empty();
        this.odataType = Input.empty();
        this.trustedCertificates = Input.empty();
        this.url = Input.empty();
        this.validationOptions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MediaGraphTlsEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<MediaGraphUsernamePasswordCredentialsArgs> credentials;
        private Input<String> odataType;
        private @Nullable Input<MediaGraphPemCertificateListArgs> trustedCertificates;
        private Input<String> url;
        private @Nullable Input<MediaGraphTlsValidationOptionsArgs> validationOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(MediaGraphTlsEndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentials = defaults.credentials;
    	      this.odataType = defaults.odataType;
    	      this.trustedCertificates = defaults.trustedCertificates;
    	      this.url = defaults.url;
    	      this.validationOptions = defaults.validationOptions;
        }

        public Builder credentials(@Nullable Input<MediaGraphUsernamePasswordCredentialsArgs> credentials) {
            this.credentials = credentials;
            return this;
        }

        public Builder credentials(@Nullable MediaGraphUsernamePasswordCredentialsArgs credentials) {
            this.credentials = Input.ofNullable(credentials);
            return this;
        }

        public Builder odataType(Input<String> odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder odataType(String odataType) {
            this.odataType = Input.of(Objects.requireNonNull(odataType));
            return this;
        }

        public Builder trustedCertificates(@Nullable Input<MediaGraphPemCertificateListArgs> trustedCertificates) {
            this.trustedCertificates = trustedCertificates;
            return this;
        }

        public Builder trustedCertificates(@Nullable MediaGraphPemCertificateListArgs trustedCertificates) {
            this.trustedCertificates = Input.ofNullable(trustedCertificates);
            return this;
        }

        public Builder url(Input<String> url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }

        public Builder url(String url) {
            this.url = Input.of(Objects.requireNonNull(url));
            return this;
        }

        public Builder validationOptions(@Nullable Input<MediaGraphTlsValidationOptionsArgs> validationOptions) {
            this.validationOptions = validationOptions;
            return this;
        }

        public Builder validationOptions(@Nullable MediaGraphTlsValidationOptionsArgs validationOptions) {
            this.validationOptions = Input.ofNullable(validationOptions);
            return this;
        }
        public MediaGraphTlsEndpointArgs build() {
            return new MediaGraphTlsEndpointArgs(credentials, odataType, trustedCertificates, url, validationOptions);
        }
    }
}
