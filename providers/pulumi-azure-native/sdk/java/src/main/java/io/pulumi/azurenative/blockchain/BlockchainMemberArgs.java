// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.blockchain;

import io.pulumi.azurenative.blockchain.enums.BlockchainProtocol;
import io.pulumi.azurenative.blockchain.inputs.BlockchainMemberNodesSkuArgs;
import io.pulumi.azurenative.blockchain.inputs.FirewallRuleArgs;
import io.pulumi.azurenative.blockchain.inputs.SkuArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BlockchainMemberArgs extends io.pulumi.resources.ResourceArgs {

    public static final BlockchainMemberArgs Empty = new BlockchainMemberArgs();

    /**
     * Blockchain member name.
     * 
     */
    @Import(name="blockchainMemberName")
      private final @Nullable Output<String> blockchainMemberName;

    public Output<String> getBlockchainMemberName() {
        return this.blockchainMemberName == null ? Codegen.empty() : this.blockchainMemberName;
    }

    /**
     * Gets or sets the consortium for the blockchain member.
     * 
     */
    @Import(name="consortium")
      private final @Nullable Output<String> consortium;

    public Output<String> getConsortium() {
        return this.consortium == null ? Codegen.empty() : this.consortium;
    }

    /**
     * Sets the managed consortium management account password.
     * 
     */
    @Import(name="consortiumManagementAccountPassword")
      private final @Nullable Output<String> consortiumManagementAccountPassword;

    public Output<String> getConsortiumManagementAccountPassword() {
        return this.consortiumManagementAccountPassword == null ? Codegen.empty() : this.consortiumManagementAccountPassword;
    }

    /**
     * Gets the display name of the member in the consortium.
     * 
     */
    @Import(name="consortiumMemberDisplayName")
      private final @Nullable Output<String> consortiumMemberDisplayName;

    public Output<String> getConsortiumMemberDisplayName() {
        return this.consortiumMemberDisplayName == null ? Codegen.empty() : this.consortiumMemberDisplayName;
    }

    /**
     * Gets the role of the member in the consortium.
     * 
     */
    @Import(name="consortiumRole")
      private final @Nullable Output<String> consortiumRole;

    public Output<String> getConsortiumRole() {
        return this.consortiumRole == null ? Codegen.empty() : this.consortiumRole;
    }

    /**
     * Gets or sets firewall rules
     * 
     */
    @Import(name="firewallRules")
      private final @Nullable Output<List<FirewallRuleArgs>> firewallRules;

    public Output<List<FirewallRuleArgs>> getFirewallRules() {
        return this.firewallRules == null ? Codegen.empty() : this.firewallRules;
    }

    /**
     * The GEO location of the blockchain service.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Sets the basic auth password of the blockchain member.
     * 
     */
    @Import(name="password")
      private final @Nullable Output<String> password;

    public Output<String> getPassword() {
        return this.password == null ? Codegen.empty() : this.password;
    }

    /**
     * Gets or sets the blockchain protocol.
     * 
     */
    @Import(name="protocol")
      private final @Nullable Output<Either<String,BlockchainProtocol>> protocol;

    public Output<Either<String,BlockchainProtocol>> getProtocol() {
        return this.protocol == null ? Codegen.empty() : this.protocol;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the blockchain member Sku.
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<SkuArgs> sku;

    public Output<SkuArgs> getSku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * Tags of the service which is a list of key value pairs that describes the resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * Gets or sets the blockchain validator nodes Sku.
     * 
     */
    @Import(name="validatorNodesSku")
      private final @Nullable Output<BlockchainMemberNodesSkuArgs> validatorNodesSku;

    public Output<BlockchainMemberNodesSkuArgs> getValidatorNodesSku() {
        return this.validatorNodesSku == null ? Codegen.empty() : this.validatorNodesSku;
    }

    public BlockchainMemberArgs(
        @Nullable Output<String> blockchainMemberName,
        @Nullable Output<String> consortium,
        @Nullable Output<String> consortiumManagementAccountPassword,
        @Nullable Output<String> consortiumMemberDisplayName,
        @Nullable Output<String> consortiumRole,
        @Nullable Output<List<FirewallRuleArgs>> firewallRules,
        @Nullable Output<String> location,
        @Nullable Output<String> password,
        @Nullable Output<Either<String,BlockchainProtocol>> protocol,
        Output<String> resourceGroupName,
        @Nullable Output<SkuArgs> sku,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<BlockchainMemberNodesSkuArgs> validatorNodesSku) {
        this.blockchainMemberName = blockchainMemberName;
        this.consortium = consortium;
        this.consortiumManagementAccountPassword = consortiumManagementAccountPassword;
        this.consortiumMemberDisplayName = consortiumMemberDisplayName;
        this.consortiumRole = consortiumRole;
        this.firewallRules = firewallRules;
        this.location = location;
        this.password = password;
        this.protocol = protocol;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sku = sku;
        this.tags = tags;
        this.validatorNodesSku = validatorNodesSku;
    }

    private BlockchainMemberArgs() {
        this.blockchainMemberName = Codegen.empty();
        this.consortium = Codegen.empty();
        this.consortiumManagementAccountPassword = Codegen.empty();
        this.consortiumMemberDisplayName = Codegen.empty();
        this.consortiumRole = Codegen.empty();
        this.firewallRules = Codegen.empty();
        this.location = Codegen.empty();
        this.password = Codegen.empty();
        this.protocol = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
        this.validatorNodesSku = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BlockchainMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> blockchainMemberName;
        private @Nullable Output<String> consortium;
        private @Nullable Output<String> consortiumManagementAccountPassword;
        private @Nullable Output<String> consortiumMemberDisplayName;
        private @Nullable Output<String> consortiumRole;
        private @Nullable Output<List<FirewallRuleArgs>> firewallRules;
        private @Nullable Output<String> location;
        private @Nullable Output<String> password;
        private @Nullable Output<Either<String,BlockchainProtocol>> protocol;
        private Output<String> resourceGroupName;
        private @Nullable Output<SkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<BlockchainMemberNodesSkuArgs> validatorNodesSku;

        public Builder() {
    	      // Empty
        }

        public Builder(BlockchainMemberArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockchainMemberName = defaults.blockchainMemberName;
    	      this.consortium = defaults.consortium;
    	      this.consortiumManagementAccountPassword = defaults.consortiumManagementAccountPassword;
    	      this.consortiumMemberDisplayName = defaults.consortiumMemberDisplayName;
    	      this.consortiumRole = defaults.consortiumRole;
    	      this.firewallRules = defaults.firewallRules;
    	      this.location = defaults.location;
    	      this.password = defaults.password;
    	      this.protocol = defaults.protocol;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.validatorNodesSku = defaults.validatorNodesSku;
        }

        public Builder blockchainMemberName(@Nullable Output<String> blockchainMemberName) {
            this.blockchainMemberName = blockchainMemberName;
            return this;
        }
        public Builder blockchainMemberName(@Nullable String blockchainMemberName) {
            this.blockchainMemberName = Codegen.ofNullable(blockchainMemberName);
            return this;
        }
        public Builder consortium(@Nullable Output<String> consortium) {
            this.consortium = consortium;
            return this;
        }
        public Builder consortium(@Nullable String consortium) {
            this.consortium = Codegen.ofNullable(consortium);
            return this;
        }
        public Builder consortiumManagementAccountPassword(@Nullable Output<String> consortiumManagementAccountPassword) {
            this.consortiumManagementAccountPassword = consortiumManagementAccountPassword;
            return this;
        }
        public Builder consortiumManagementAccountPassword(@Nullable String consortiumManagementAccountPassword) {
            this.consortiumManagementAccountPassword = Codegen.ofNullable(consortiumManagementAccountPassword);
            return this;
        }
        public Builder consortiumMemberDisplayName(@Nullable Output<String> consortiumMemberDisplayName) {
            this.consortiumMemberDisplayName = consortiumMemberDisplayName;
            return this;
        }
        public Builder consortiumMemberDisplayName(@Nullable String consortiumMemberDisplayName) {
            this.consortiumMemberDisplayName = Codegen.ofNullable(consortiumMemberDisplayName);
            return this;
        }
        public Builder consortiumRole(@Nullable Output<String> consortiumRole) {
            this.consortiumRole = consortiumRole;
            return this;
        }
        public Builder consortiumRole(@Nullable String consortiumRole) {
            this.consortiumRole = Codegen.ofNullable(consortiumRole);
            return this;
        }
        public Builder firewallRules(@Nullable Output<List<FirewallRuleArgs>> firewallRules) {
            this.firewallRules = firewallRules;
            return this;
        }
        public Builder firewallRules(@Nullable List<FirewallRuleArgs> firewallRules) {
            this.firewallRules = Codegen.ofNullable(firewallRules);
            return this;
        }
        public Builder firewallRules(FirewallRuleArgs... firewallRules) {
            return firewallRules(List.of(firewallRules));
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder password(@Nullable Output<String> password) {
            this.password = password;
            return this;
        }
        public Builder password(@Nullable String password) {
            this.password = Codegen.ofNullable(password);
            return this;
        }
        public Builder protocol(@Nullable Output<Either<String,BlockchainProtocol>> protocol) {
            this.protocol = protocol;
            return this;
        }
        public Builder protocol(@Nullable Either<String,BlockchainProtocol> protocol) {
            this.protocol = Codegen.ofNullable(protocol);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder sku(@Nullable Output<SkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable SkuArgs sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder validatorNodesSku(@Nullable Output<BlockchainMemberNodesSkuArgs> validatorNodesSku) {
            this.validatorNodesSku = validatorNodesSku;
            return this;
        }
        public Builder validatorNodesSku(@Nullable BlockchainMemberNodesSkuArgs validatorNodesSku) {
            this.validatorNodesSku = Codegen.ofNullable(validatorNodesSku);
            return this;
        }        public BlockchainMemberArgs build() {
            return new BlockchainMemberArgs(blockchainMemberName, consortium, consortiumManagementAccountPassword, consortiumMemberDisplayName, consortiumRole, firewallRules, location, password, protocol, resourceGroupName, sku, tags, validatorNodesSku);
        }
    }
}
