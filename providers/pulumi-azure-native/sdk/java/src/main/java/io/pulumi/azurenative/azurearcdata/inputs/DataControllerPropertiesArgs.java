// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurearcdata.inputs;

import io.pulumi.azurenative.azurearcdata.inputs.BasicLoginInformationArgs;
import io.pulumi.azurenative.azurearcdata.inputs.LogAnalyticsWorkspaceConfigArgs;
import io.pulumi.azurenative.azurearcdata.inputs.OnPremisePropertyArgs;
import io.pulumi.azurenative.azurearcdata.inputs.UploadServicePrincipalArgs;
import io.pulumi.azurenative.azurearcdata.inputs.UploadWatermarkArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The data controller properties.
 * 
 */
public final class DataControllerPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataControllerPropertiesArgs Empty = new DataControllerPropertiesArgs();

    /**
     * Username and password for basic login authentication.
     * 
     */
    @Import(name="basicLoginInformation")
      private final @Nullable Output<BasicLoginInformationArgs> basicLoginInformation;

    public Output<BasicLoginInformationArgs> basicLoginInformation() {
        return this.basicLoginInformation == null ? Codegen.empty() : this.basicLoginInformation;
    }

    /**
     * The raw kubernetes information
     * 
     */
    @Import(name="k8sRaw")
      private final @Nullable Output<Object> k8sRaw;

    public Output<Object> k8sRaw() {
        return this.k8sRaw == null ? Codegen.empty() : this.k8sRaw;
    }

    /**
     * Last uploaded date from Kubernetes cluster. Defaults to current date time
     * 
     */
    @Import(name="lastUploadedDate")
      private final @Nullable Output<String> lastUploadedDate;

    public Output<String> lastUploadedDate() {
        return this.lastUploadedDate == null ? Codegen.empty() : this.lastUploadedDate;
    }

    /**
     * Log analytics workspace id and primary key
     * 
     */
    @Import(name="logAnalyticsWorkspaceConfig")
      private final @Nullable Output<LogAnalyticsWorkspaceConfigArgs> logAnalyticsWorkspaceConfig;

    public Output<LogAnalyticsWorkspaceConfigArgs> logAnalyticsWorkspaceConfig() {
        return this.logAnalyticsWorkspaceConfig == null ? Codegen.empty() : this.logAnalyticsWorkspaceConfig;
    }

    /**
     * Properties from the Kubernetes data controller
     * 
     */
    @Import(name="onPremiseProperty")
      private final @Nullable Output<OnPremisePropertyArgs> onPremiseProperty;

    public Output<OnPremisePropertyArgs> onPremiseProperty() {
        return this.onPremiseProperty == null ? Codegen.empty() : this.onPremiseProperty;
    }

    /**
     * Service principal for uploading billing, metrics and logs.
     * 
     */
    @Import(name="uploadServicePrincipal")
      private final @Nullable Output<UploadServicePrincipalArgs> uploadServicePrincipal;

    public Output<UploadServicePrincipalArgs> uploadServicePrincipal() {
        return this.uploadServicePrincipal == null ? Codegen.empty() : this.uploadServicePrincipal;
    }

    /**
     * Properties on upload watermark.  Mostly timestamp for each upload data type
     * 
     */
    @Import(name="uploadWatermark")
      private final @Nullable Output<UploadWatermarkArgs> uploadWatermark;

    public Output<UploadWatermarkArgs> uploadWatermark() {
        return this.uploadWatermark == null ? Codegen.empty() : this.uploadWatermark;
    }

    public DataControllerPropertiesArgs(
        @Nullable Output<BasicLoginInformationArgs> basicLoginInformation,
        @Nullable Output<Object> k8sRaw,
        @Nullable Output<String> lastUploadedDate,
        @Nullable Output<LogAnalyticsWorkspaceConfigArgs> logAnalyticsWorkspaceConfig,
        @Nullable Output<OnPremisePropertyArgs> onPremiseProperty,
        @Nullable Output<UploadServicePrincipalArgs> uploadServicePrincipal,
        @Nullable Output<UploadWatermarkArgs> uploadWatermark) {
        this.basicLoginInformation = basicLoginInformation;
        this.k8sRaw = k8sRaw;
        this.lastUploadedDate = lastUploadedDate;
        this.logAnalyticsWorkspaceConfig = logAnalyticsWorkspaceConfig;
        this.onPremiseProperty = onPremiseProperty;
        this.uploadServicePrincipal = uploadServicePrincipal;
        this.uploadWatermark = uploadWatermark;
    }

    private DataControllerPropertiesArgs() {
        this.basicLoginInformation = Codegen.empty();
        this.k8sRaw = Codegen.empty();
        this.lastUploadedDate = Codegen.empty();
        this.logAnalyticsWorkspaceConfig = Codegen.empty();
        this.onPremiseProperty = Codegen.empty();
        this.uploadServicePrincipal = Codegen.empty();
        this.uploadWatermark = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataControllerPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<BasicLoginInformationArgs> basicLoginInformation;
        private @Nullable Output<Object> k8sRaw;
        private @Nullable Output<String> lastUploadedDate;
        private @Nullable Output<LogAnalyticsWorkspaceConfigArgs> logAnalyticsWorkspaceConfig;
        private @Nullable Output<OnPremisePropertyArgs> onPremiseProperty;
        private @Nullable Output<UploadServicePrincipalArgs> uploadServicePrincipal;
        private @Nullable Output<UploadWatermarkArgs> uploadWatermark;

        public Builder() {
    	      // Empty
        }

        public Builder(DataControllerPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basicLoginInformation = defaults.basicLoginInformation;
    	      this.k8sRaw = defaults.k8sRaw;
    	      this.lastUploadedDate = defaults.lastUploadedDate;
    	      this.logAnalyticsWorkspaceConfig = defaults.logAnalyticsWorkspaceConfig;
    	      this.onPremiseProperty = defaults.onPremiseProperty;
    	      this.uploadServicePrincipal = defaults.uploadServicePrincipal;
    	      this.uploadWatermark = defaults.uploadWatermark;
        }

        public Builder basicLoginInformation(@Nullable Output<BasicLoginInformationArgs> basicLoginInformation) {
            this.basicLoginInformation = basicLoginInformation;
            return this;
        }
        public Builder basicLoginInformation(@Nullable BasicLoginInformationArgs basicLoginInformation) {
            this.basicLoginInformation = Codegen.ofNullable(basicLoginInformation);
            return this;
        }
        public Builder k8sRaw(@Nullable Output<Object> k8sRaw) {
            this.k8sRaw = k8sRaw;
            return this;
        }
        public Builder k8sRaw(@Nullable Object k8sRaw) {
            this.k8sRaw = Codegen.ofNullable(k8sRaw);
            return this;
        }
        public Builder lastUploadedDate(@Nullable Output<String> lastUploadedDate) {
            this.lastUploadedDate = lastUploadedDate;
            return this;
        }
        public Builder lastUploadedDate(@Nullable String lastUploadedDate) {
            this.lastUploadedDate = Codegen.ofNullable(lastUploadedDate);
            return this;
        }
        public Builder logAnalyticsWorkspaceConfig(@Nullable Output<LogAnalyticsWorkspaceConfigArgs> logAnalyticsWorkspaceConfig) {
            this.logAnalyticsWorkspaceConfig = logAnalyticsWorkspaceConfig;
            return this;
        }
        public Builder logAnalyticsWorkspaceConfig(@Nullable LogAnalyticsWorkspaceConfigArgs logAnalyticsWorkspaceConfig) {
            this.logAnalyticsWorkspaceConfig = Codegen.ofNullable(logAnalyticsWorkspaceConfig);
            return this;
        }
        public Builder onPremiseProperty(@Nullable Output<OnPremisePropertyArgs> onPremiseProperty) {
            this.onPremiseProperty = onPremiseProperty;
            return this;
        }
        public Builder onPremiseProperty(@Nullable OnPremisePropertyArgs onPremiseProperty) {
            this.onPremiseProperty = Codegen.ofNullable(onPremiseProperty);
            return this;
        }
        public Builder uploadServicePrincipal(@Nullable Output<UploadServicePrincipalArgs> uploadServicePrincipal) {
            this.uploadServicePrincipal = uploadServicePrincipal;
            return this;
        }
        public Builder uploadServicePrincipal(@Nullable UploadServicePrincipalArgs uploadServicePrincipal) {
            this.uploadServicePrincipal = Codegen.ofNullable(uploadServicePrincipal);
            return this;
        }
        public Builder uploadWatermark(@Nullable Output<UploadWatermarkArgs> uploadWatermark) {
            this.uploadWatermark = uploadWatermark;
            return this;
        }
        public Builder uploadWatermark(@Nullable UploadWatermarkArgs uploadWatermark) {
            this.uploadWatermark = Codegen.ofNullable(uploadWatermark);
            return this;
        }        public DataControllerPropertiesArgs build() {
            return new DataControllerPropertiesArgs(basicLoginInformation, k8sRaw, lastUploadedDate, logAnalyticsWorkspaceConfig, onPremiseProperty, uploadServicePrincipal, uploadWatermark);
        }
    }
}
