// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.netapp;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.netapp.BackupArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Backup of a Volume
 * API Version: 2020-12-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:netapp:Backup account1/pool1/volume1/backup1 /subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/backups/backup1 
 * ```
 * 
 */
@ResourceType(type="azure-native:netapp:Backup")
public class Backup extends io.pulumi.resources.CustomResource {
    /**
     * UUID v4 used to identify the Backup
     * 
     */
    @Export(name="backupId", type=String.class, parameters={})
    private Output<String> backupId;

    /**
     * @return UUID v4 used to identify the Backup
     * 
     */
    public Output<String> getBackupId() {
        return this.backupId;
    }
    /**
     * Type of backup Manual or Scheduled
     * 
     */
    @Export(name="backupType", type=String.class, parameters={})
    private Output<String> backupType;

    /**
     * @return Type of backup Manual or Scheduled
     * 
     */
    public Output<String> getBackupType() {
        return this.backupType;
    }
    /**
     * The creation date of the backup
     * 
     */
    @Export(name="creationDate", type=String.class, parameters={})
    private Output<String> creationDate;

    /**
     * @return The creation date of the backup
     * 
     */
    public Output<String> getCreationDate() {
        return this.creationDate;
    }
    /**
     * Failure reason
     * 
     */
    @Export(name="failureReason", type=String.class, parameters={})
    private Output<String> failureReason;

    /**
     * @return Failure reason
     * 
     */
    public Output<String> getFailureReason() {
        return this.failureReason;
    }
    /**
     * Label for backup
     * 
     */
    @Export(name="label", type=String.class, parameters={})
    private Output</* @Nullable */ String> label;

    /**
     * @return Label for backup
     * 
     */
    public Output</* @Nullable */ String> getLabel() {
        return this.label;
    }
    /**
     * Resource location
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Resource location
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * Resource name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Azure lifecycle management
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Azure lifecycle management
     * 
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Size of backup
     * 
     */
    @Export(name="size", type=Double.class, parameters={})
    private Output<Double> size;

    /**
     * @return Size of backup
     * 
     */
    public Output<Double> getSize() {
        return this.size;
    }
    /**
     * Resource type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * Volume name
     * 
     */
    @Export(name="volumeName", type=String.class, parameters={})
    private Output<String> volumeName;

    /**
     * @return Volume name
     * 
     */
    public Output<String> getVolumeName() {
        return this.volumeName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Backup(String name) {
        this(name, BackupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Backup(String name, BackupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Backup(String name, BackupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:netapp:Backup", name, args == null ? BackupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Backup(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:netapp:Backup", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:netapp/v20200501:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20200601:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20200701:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20200801:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20200901:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20201101:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20201201:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20210201:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20210401:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20210401preview:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20210601:Backup").build()),
                Output.of(Alias.builder().type("azure-native:netapp/v20210801:Backup").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Backup get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Backup(name, id, options);
    }
}
