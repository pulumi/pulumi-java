// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.ExtendedLocationArgs;
import io.pulumi.azurenative.network.inputs.FrontendIPConfigurationArgs;
import io.pulumi.azurenative.network.inputs.PrivateLinkServiceIpConfigurationArgs;
import io.pulumi.azurenative.network.inputs.PrivateLinkServicePropertiesAutoApprovalArgs;
import io.pulumi.azurenative.network.inputs.PrivateLinkServicePropertiesVisibilityArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Private link service resource.
 * 
 */
public final class PrivateLinkServiceArgs extends io.pulumi.resources.ResourceArgs {

    public static final PrivateLinkServiceArgs Empty = new PrivateLinkServiceArgs();

    /**
     * The auto-approval list of the private link service.
     * 
     */
    @Import(name="autoApproval")
      private final @Nullable Output<PrivateLinkServicePropertiesAutoApprovalArgs> autoApproval;

    public Output<PrivateLinkServicePropertiesAutoApprovalArgs> autoApproval() {
        return this.autoApproval == null ? Codegen.empty() : this.autoApproval;
    }

    /**
     * Whether the private link service is enabled for proxy protocol or not.
     * 
     */
    @Import(name="enableProxyProtocol")
      private final @Nullable Output<Boolean> enableProxyProtocol;

    public Output<Boolean> enableProxyProtocol() {
        return this.enableProxyProtocol == null ? Codegen.empty() : this.enableProxyProtocol;
    }

    /**
     * The extended location of the load balancer.
     * 
     */
    @Import(name="extendedLocation")
      private final @Nullable Output<ExtendedLocationArgs> extendedLocation;

    public Output<ExtendedLocationArgs> extendedLocation() {
        return this.extendedLocation == null ? Codegen.empty() : this.extendedLocation;
    }

    /**
     * The list of Fqdn.
     * 
     */
    @Import(name="fqdns")
      private final @Nullable Output<List<String>> fqdns;

    public Output<List<String>> fqdns() {
        return this.fqdns == null ? Codegen.empty() : this.fqdns;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * An array of private link service IP configurations.
     * 
     */
    @Import(name="ipConfigurations")
      private final @Nullable Output<List<PrivateLinkServiceIpConfigurationArgs>> ipConfigurations;

    public Output<List<PrivateLinkServiceIpConfigurationArgs>> ipConfigurations() {
        return this.ipConfigurations == null ? Codegen.empty() : this.ipConfigurations;
    }

    /**
     * An array of references to the load balancer IP configurations.
     * 
     */
    @Import(name="loadBalancerFrontendIpConfigurations")
      private final @Nullable Output<List<FrontendIPConfigurationArgs>> loadBalancerFrontendIpConfigurations;

    public Output<List<FrontendIPConfigurationArgs>> loadBalancerFrontendIpConfigurations() {
        return this.loadBalancerFrontendIpConfigurations == null ? Codegen.empty() : this.loadBalancerFrontendIpConfigurations;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The visibility list of the private link service.
     * 
     */
    @Import(name="visibility")
      private final @Nullable Output<PrivateLinkServicePropertiesVisibilityArgs> visibility;

    public Output<PrivateLinkServicePropertiesVisibilityArgs> visibility() {
        return this.visibility == null ? Codegen.empty() : this.visibility;
    }

    public PrivateLinkServiceArgs(
        @Nullable Output<PrivateLinkServicePropertiesAutoApprovalArgs> autoApproval,
        @Nullable Output<Boolean> enableProxyProtocol,
        @Nullable Output<ExtendedLocationArgs> extendedLocation,
        @Nullable Output<List<String>> fqdns,
        @Nullable Output<String> id,
        @Nullable Output<List<PrivateLinkServiceIpConfigurationArgs>> ipConfigurations,
        @Nullable Output<List<FrontendIPConfigurationArgs>> loadBalancerFrontendIpConfigurations,
        @Nullable Output<String> location,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<PrivateLinkServicePropertiesVisibilityArgs> visibility) {
        this.autoApproval = autoApproval;
        this.enableProxyProtocol = enableProxyProtocol;
        this.extendedLocation = extendedLocation;
        this.fqdns = fqdns;
        this.id = id;
        this.ipConfigurations = ipConfigurations;
        this.loadBalancerFrontendIpConfigurations = loadBalancerFrontendIpConfigurations;
        this.location = location;
        this.tags = tags;
        this.visibility = visibility;
    }

    private PrivateLinkServiceArgs() {
        this.autoApproval = Codegen.empty();
        this.enableProxyProtocol = Codegen.empty();
        this.extendedLocation = Codegen.empty();
        this.fqdns = Codegen.empty();
        this.id = Codegen.empty();
        this.ipConfigurations = Codegen.empty();
        this.loadBalancerFrontendIpConfigurations = Codegen.empty();
        this.location = Codegen.empty();
        this.tags = Codegen.empty();
        this.visibility = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateLinkServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<PrivateLinkServicePropertiesAutoApprovalArgs> autoApproval;
        private @Nullable Output<Boolean> enableProxyProtocol;
        private @Nullable Output<ExtendedLocationArgs> extendedLocation;
        private @Nullable Output<List<String>> fqdns;
        private @Nullable Output<String> id;
        private @Nullable Output<List<PrivateLinkServiceIpConfigurationArgs>> ipConfigurations;
        private @Nullable Output<List<FrontendIPConfigurationArgs>> loadBalancerFrontendIpConfigurations;
        private @Nullable Output<String> location;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<PrivateLinkServicePropertiesVisibilityArgs> visibility;

        public Builder() {
    	      // Empty
        }

        public Builder(PrivateLinkServiceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoApproval = defaults.autoApproval;
    	      this.enableProxyProtocol = defaults.enableProxyProtocol;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.fqdns = defaults.fqdns;
    	      this.id = defaults.id;
    	      this.ipConfigurations = defaults.ipConfigurations;
    	      this.loadBalancerFrontendIpConfigurations = defaults.loadBalancerFrontendIpConfigurations;
    	      this.location = defaults.location;
    	      this.tags = defaults.tags;
    	      this.visibility = defaults.visibility;
        }

        public Builder autoApproval(@Nullable Output<PrivateLinkServicePropertiesAutoApprovalArgs> autoApproval) {
            this.autoApproval = autoApproval;
            return this;
        }
        public Builder autoApproval(@Nullable PrivateLinkServicePropertiesAutoApprovalArgs autoApproval) {
            this.autoApproval = Codegen.ofNullable(autoApproval);
            return this;
        }
        public Builder enableProxyProtocol(@Nullable Output<Boolean> enableProxyProtocol) {
            this.enableProxyProtocol = enableProxyProtocol;
            return this;
        }
        public Builder enableProxyProtocol(@Nullable Boolean enableProxyProtocol) {
            this.enableProxyProtocol = Codegen.ofNullable(enableProxyProtocol);
            return this;
        }
        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        public Builder extendedLocation(@Nullable ExtendedLocationArgs extendedLocation) {
            this.extendedLocation = Codegen.ofNullable(extendedLocation);
            return this;
        }
        public Builder fqdns(@Nullable Output<List<String>> fqdns) {
            this.fqdns = fqdns;
            return this;
        }
        public Builder fqdns(@Nullable List<String> fqdns) {
            this.fqdns = Codegen.ofNullable(fqdns);
            return this;
        }
        public Builder fqdns(String... fqdns) {
            return fqdns(List.of(fqdns));
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder ipConfigurations(@Nullable Output<List<PrivateLinkServiceIpConfigurationArgs>> ipConfigurations) {
            this.ipConfigurations = ipConfigurations;
            return this;
        }
        public Builder ipConfigurations(@Nullable List<PrivateLinkServiceIpConfigurationArgs> ipConfigurations) {
            this.ipConfigurations = Codegen.ofNullable(ipConfigurations);
            return this;
        }
        public Builder ipConfigurations(PrivateLinkServiceIpConfigurationArgs... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }
        public Builder loadBalancerFrontendIpConfigurations(@Nullable Output<List<FrontendIPConfigurationArgs>> loadBalancerFrontendIpConfigurations) {
            this.loadBalancerFrontendIpConfigurations = loadBalancerFrontendIpConfigurations;
            return this;
        }
        public Builder loadBalancerFrontendIpConfigurations(@Nullable List<FrontendIPConfigurationArgs> loadBalancerFrontendIpConfigurations) {
            this.loadBalancerFrontendIpConfigurations = Codegen.ofNullable(loadBalancerFrontendIpConfigurations);
            return this;
        }
        public Builder loadBalancerFrontendIpConfigurations(FrontendIPConfigurationArgs... loadBalancerFrontendIpConfigurations) {
            return loadBalancerFrontendIpConfigurations(List.of(loadBalancerFrontendIpConfigurations));
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder visibility(@Nullable Output<PrivateLinkServicePropertiesVisibilityArgs> visibility) {
            this.visibility = visibility;
            return this;
        }
        public Builder visibility(@Nullable PrivateLinkServicePropertiesVisibilityArgs visibility) {
            this.visibility = Codegen.ofNullable(visibility);
            return this;
        }        public PrivateLinkServiceArgs build() {
            return new PrivateLinkServiceArgs(autoApproval, enableProxyProtocol, extendedLocation, fqdns, id, ipConfigurations, loadBalancerFrontendIpConfigurations, location, tags, visibility);
        }
    }
}
