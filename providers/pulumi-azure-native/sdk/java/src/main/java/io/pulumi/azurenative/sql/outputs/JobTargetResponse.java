// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class JobTargetResponse {
    private final @Nullable String databaseName;
    private final @Nullable String elasticPoolName;
    private final @Nullable String membershipType;
    private final @Nullable String refreshCredential;
    private final @Nullable String serverName;
    private final @Nullable String shardMapName;
    private final String type;

    @OutputCustomType.Constructor({"databaseName","elasticPoolName","membershipType","refreshCredential","serverName","shardMapName","type"})
    private JobTargetResponse(
        @Nullable String databaseName,
        @Nullable String elasticPoolName,
        @Nullable String membershipType,
        @Nullable String refreshCredential,
        @Nullable String serverName,
        @Nullable String shardMapName,
        String type) {
        this.databaseName = databaseName;
        this.elasticPoolName = elasticPoolName;
        this.membershipType = membershipType;
        this.refreshCredential = refreshCredential;
        this.serverName = serverName;
        this.shardMapName = shardMapName;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getDatabaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    public Optional<String> getElasticPoolName() {
        return Optional.ofNullable(this.elasticPoolName);
    }
    public Optional<String> getMembershipType() {
        return Optional.ofNullable(this.membershipType);
    }
    public Optional<String> getRefreshCredential() {
        return Optional.ofNullable(this.refreshCredential);
    }
    public Optional<String> getServerName() {
        return Optional.ofNullable(this.serverName);
    }
    public Optional<String> getShardMapName() {
        return Optional.ofNullable(this.shardMapName);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTargetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String databaseName;
        private @Nullable String elasticPoolName;
        private @Nullable String membershipType;
        private @Nullable String refreshCredential;
        private @Nullable String serverName;
        private @Nullable String shardMapName;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(JobTargetResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.elasticPoolName = defaults.elasticPoolName;
    	      this.membershipType = defaults.membershipType;
    	      this.refreshCredential = defaults.refreshCredential;
    	      this.serverName = defaults.serverName;
    	      this.shardMapName = defaults.shardMapName;
    	      this.type = defaults.type;
        }

        public Builder setDatabaseName(@Nullable String databaseName) {
            this.databaseName = databaseName;
            return this;
        }

        public Builder setElasticPoolName(@Nullable String elasticPoolName) {
            this.elasticPoolName = elasticPoolName;
            return this;
        }

        public Builder setMembershipType(@Nullable String membershipType) {
            this.membershipType = membershipType;
            return this;
        }

        public Builder setRefreshCredential(@Nullable String refreshCredential) {
            this.refreshCredential = refreshCredential;
            return this;
        }

        public Builder setServerName(@Nullable String serverName) {
            this.serverName = serverName;
            return this;
        }

        public Builder setShardMapName(@Nullable String shardMapName) {
            this.shardMapName = shardMapName;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public JobTargetResponse build() {
            return new JobTargetResponse(databaseName, elasticPoolName, membershipType, refreshCredential, serverName, shardMapName, type);
        }
    }
}
