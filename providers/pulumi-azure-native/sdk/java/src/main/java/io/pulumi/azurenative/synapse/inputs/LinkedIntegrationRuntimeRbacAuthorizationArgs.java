// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * The role based access control (RBAC) authorization type integration runtime.
 * 
 */
public final class LinkedIntegrationRuntimeRbacAuthorizationArgs extends io.pulumi.resources.ResourceArgs {

    public static final LinkedIntegrationRuntimeRbacAuthorizationArgs Empty = new LinkedIntegrationRuntimeRbacAuthorizationArgs();

    /**
     * The authorization type for integration runtime sharing.
     * Expected value is 'RBAC'.
     * 
     */
    @InputImport(name="authorizationType", required=true)
      private final Input<String> authorizationType;

    public Input<String> getAuthorizationType() {
        return this.authorizationType;
    }

    /**
     * The resource identifier of the integration runtime to be shared.
     * 
     */
    @InputImport(name="resourceId", required=true)
      private final Input<String> resourceId;

    public Input<String> getResourceId() {
        return this.resourceId;
    }

    public LinkedIntegrationRuntimeRbacAuthorizationArgs(
        Input<String> authorizationType,
        Input<String> resourceId) {
        this.authorizationType = Objects.requireNonNull(authorizationType, "expected parameter 'authorizationType' to be non-null");
        this.resourceId = Objects.requireNonNull(resourceId, "expected parameter 'resourceId' to be non-null");
    }

    private LinkedIntegrationRuntimeRbacAuthorizationArgs() {
        this.authorizationType = Input.empty();
        this.resourceId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinkedIntegrationRuntimeRbacAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> authorizationType;
        private Input<String> resourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(LinkedIntegrationRuntimeRbacAuthorizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationType = defaults.authorizationType;
    	      this.resourceId = defaults.resourceId;
        }

        public Builder setAuthorizationType(Input<String> authorizationType) {
            this.authorizationType = Objects.requireNonNull(authorizationType);
            return this;
        }

        public Builder setAuthorizationType(String authorizationType) {
            this.authorizationType = Input.of(Objects.requireNonNull(authorizationType));
            return this;
        }

        public Builder setResourceId(Input<String> resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }

        public Builder setResourceId(String resourceId) {
            this.resourceId = Input.of(Objects.requireNonNull(resourceId));
            return this;
        }
        public LinkedIntegrationRuntimeRbacAuthorizationArgs build() {
            return new LinkedIntegrationRuntimeRbacAuthorizationArgs(authorizationType, resourceId);
        }
    }
}
