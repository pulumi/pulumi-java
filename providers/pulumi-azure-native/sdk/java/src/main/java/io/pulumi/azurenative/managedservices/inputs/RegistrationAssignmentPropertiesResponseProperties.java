// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.managedservices.inputs;

import io.pulumi.azurenative.managedservices.inputs.AuthorizationResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistrationAssignmentPropertiesResponseProperties extends io.pulumi.resources.InvokeArgs {

    public static final RegistrationAssignmentPropertiesResponseProperties Empty = new RegistrationAssignmentPropertiesResponseProperties();

    @InputImport(name="authorizations")
    private final @Nullable List<AuthorizationResponse> authorizations;

    public List<AuthorizationResponse> getAuthorizations() {
        return this.authorizations == null ? List.of() : this.authorizations;
    }

    @InputImport(name="description")
    private final @Nullable String description;

    public Optional<String> getDescription() {
        return this.description == null ? Optional.empty() : Optional.ofNullable(this.description);
    }

    @InputImport(name="managedByTenantId")
    private final @Nullable String managedByTenantId;

    public Optional<String> getManagedByTenantId() {
        return this.managedByTenantId == null ? Optional.empty() : Optional.ofNullable(this.managedByTenantId);
    }

    @InputImport(name="managedByTenantName")
    private final @Nullable String managedByTenantName;

    public Optional<String> getManagedByTenantName() {
        return this.managedByTenantName == null ? Optional.empty() : Optional.ofNullable(this.managedByTenantName);
    }

    @InputImport(name="manageeTenantId")
    private final @Nullable String manageeTenantId;

    public Optional<String> getManageeTenantId() {
        return this.manageeTenantId == null ? Optional.empty() : Optional.ofNullable(this.manageeTenantId);
    }

    @InputImport(name="manageeTenantName")
    private final @Nullable String manageeTenantName;

    public Optional<String> getManageeTenantName() {
        return this.manageeTenantName == null ? Optional.empty() : Optional.ofNullable(this.manageeTenantName);
    }

    @InputImport(name="provisioningState")
    private final @Nullable String provisioningState;

    public Optional<String> getProvisioningState() {
        return this.provisioningState == null ? Optional.empty() : Optional.ofNullable(this.provisioningState);
    }

    @InputImport(name="registrationDefinitionName")
    private final @Nullable String registrationDefinitionName;

    public Optional<String> getRegistrationDefinitionName() {
        return this.registrationDefinitionName == null ? Optional.empty() : Optional.ofNullable(this.registrationDefinitionName);
    }

    public RegistrationAssignmentPropertiesResponseProperties(
        @Nullable List<AuthorizationResponse> authorizations,
        @Nullable String description,
        @Nullable String managedByTenantId,
        @Nullable String managedByTenantName,
        @Nullable String manageeTenantId,
        @Nullable String manageeTenantName,
        @Nullable String provisioningState,
        @Nullable String registrationDefinitionName) {
        this.authorizations = authorizations;
        this.description = description;
        this.managedByTenantId = managedByTenantId;
        this.managedByTenantName = managedByTenantName;
        this.manageeTenantId = manageeTenantId;
        this.manageeTenantName = manageeTenantName;
        this.provisioningState = provisioningState;
        this.registrationDefinitionName = registrationDefinitionName;
    }

    private RegistrationAssignmentPropertiesResponseProperties() {
        this.authorizations = List.of();
        this.description = null;
        this.managedByTenantId = null;
        this.managedByTenantName = null;
        this.manageeTenantId = null;
        this.manageeTenantName = null;
        this.provisioningState = null;
        this.registrationDefinitionName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistrationAssignmentPropertiesResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<AuthorizationResponse> authorizations;
        private @Nullable String description;
        private @Nullable String managedByTenantId;
        private @Nullable String managedByTenantName;
        private @Nullable String manageeTenantId;
        private @Nullable String manageeTenantName;
        private @Nullable String provisioningState;
        private @Nullable String registrationDefinitionName;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistrationAssignmentPropertiesResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizations = defaults.authorizations;
    	      this.description = defaults.description;
    	      this.managedByTenantId = defaults.managedByTenantId;
    	      this.managedByTenantName = defaults.managedByTenantName;
    	      this.manageeTenantId = defaults.manageeTenantId;
    	      this.manageeTenantName = defaults.manageeTenantName;
    	      this.provisioningState = defaults.provisioningState;
    	      this.registrationDefinitionName = defaults.registrationDefinitionName;
        }

        public Builder setAuthorizations(@Nullable List<AuthorizationResponse> authorizations) {
            this.authorizations = authorizations;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setManagedByTenantId(@Nullable String managedByTenantId) {
            this.managedByTenantId = managedByTenantId;
            return this;
        }

        public Builder setManagedByTenantName(@Nullable String managedByTenantName) {
            this.managedByTenantName = managedByTenantName;
            return this;
        }

        public Builder setManageeTenantId(@Nullable String manageeTenantId) {
            this.manageeTenantId = manageeTenantId;
            return this;
        }

        public Builder setManageeTenantName(@Nullable String manageeTenantName) {
            this.manageeTenantName = manageeTenantName;
            return this;
        }

        public Builder setProvisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }

        public Builder setRegistrationDefinitionName(@Nullable String registrationDefinitionName) {
            this.registrationDefinitionName = registrationDefinitionName;
            return this;
        }

        public RegistrationAssignmentPropertiesResponseProperties build() {
            return new RegistrationAssignmentPropertiesResponseProperties(authorizations, description, managedByTenantId, managedByTenantName, manageeTenantId, manageeTenantName, provisioningState, registrationDefinitionName);
        }
    }
}
