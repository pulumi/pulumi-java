// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
 * For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
 * 
 */
public final class HandlerMappingResponse extends io.pulumi.resources.InvokeArgs {

    public static final HandlerMappingResponse Empty = new HandlerMappingResponse();

    /**
     * Command-line arguments to be passed to the script processor.
     * 
     */
    @InputImport(name="arguments")
    private final @Nullable String arguments;

    public Optional<String> getArguments() {
        return this.arguments == null ? Optional.empty() : Optional.ofNullable(this.arguments);
    }

    /**
     * Requests with this extension will be handled using the specified FastCGI application.
     * 
     */
    @InputImport(name="extension")
    private final @Nullable String extension;

    public Optional<String> getExtension() {
        return this.extension == null ? Optional.empty() : Optional.ofNullable(this.extension);
    }

    /**
     * The absolute path to the FastCGI application.
     * 
     */
    @InputImport(name="scriptProcessor")
    private final @Nullable String scriptProcessor;

    public Optional<String> getScriptProcessor() {
        return this.scriptProcessor == null ? Optional.empty() : Optional.ofNullable(this.scriptProcessor);
    }

    public HandlerMappingResponse(
        @Nullable String arguments,
        @Nullable String extension,
        @Nullable String scriptProcessor) {
        this.arguments = arguments;
        this.extension = extension;
        this.scriptProcessor = scriptProcessor;
    }

    private HandlerMappingResponse() {
        this.arguments = null;
        this.extension = null;
        this.scriptProcessor = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HandlerMappingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arguments;
        private @Nullable String extension;
        private @Nullable String scriptProcessor;

        public Builder() {
    	      // Empty
        }

        public Builder(HandlerMappingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arguments = defaults.arguments;
    	      this.extension = defaults.extension;
    	      this.scriptProcessor = defaults.scriptProcessor;
        }

        public Builder setArguments(@Nullable String arguments) {
            this.arguments = arguments;
            return this;
        }

        public Builder setExtension(@Nullable String extension) {
            this.extension = extension;
            return this;
        }

        public Builder setScriptProcessor(@Nullable String scriptProcessor) {
            this.scriptProcessor = scriptProcessor;
            return this;
        }

        public HandlerMappingResponse build() {
            return new HandlerMappingResponse(arguments, extension, scriptProcessor);
        }
    }
}
