// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.enums.HTTPConfigurationMethod;
import io.pulumi.azurenative.network.inputs.HTTPHeaderArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConnectionMonitorHttpConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConnectionMonitorHttpConfigurationArgs Empty = new ConnectionMonitorHttpConfigurationArgs();

    @InputImport(name="method")
    private final @Nullable Input<Either<String,HTTPConfigurationMethod>> method;

    public Input<Either<String,HTTPConfigurationMethod>> getMethod() {
        return this.method == null ? Input.empty() : this.method;
    }

    @InputImport(name="path")
    private final @Nullable Input<String> path;

    public Input<String> getPath() {
        return this.path == null ? Input.empty() : this.path;
    }

    @InputImport(name="port")
    private final @Nullable Input<Integer> port;

    public Input<Integer> getPort() {
        return this.port == null ? Input.empty() : this.port;
    }

    @InputImport(name="preferHTTPS")
    private final @Nullable Input<Boolean> preferHTTPS;

    public Input<Boolean> getPreferHTTPS() {
        return this.preferHTTPS == null ? Input.empty() : this.preferHTTPS;
    }

    @InputImport(name="requestHeaders")
    private final @Nullable Input<List<HTTPHeaderArgs>> requestHeaders;

    public Input<List<HTTPHeaderArgs>> getRequestHeaders() {
        return this.requestHeaders == null ? Input.empty() : this.requestHeaders;
    }

    @InputImport(name="validStatusCodeRanges")
    private final @Nullable Input<List<String>> validStatusCodeRanges;

    public Input<List<String>> getValidStatusCodeRanges() {
        return this.validStatusCodeRanges == null ? Input.empty() : this.validStatusCodeRanges;
    }

    public ConnectionMonitorHttpConfigurationArgs(
        @Nullable Input<Either<String,HTTPConfigurationMethod>> method,
        @Nullable Input<String> path,
        @Nullable Input<Integer> port,
        @Nullable Input<Boolean> preferHTTPS,
        @Nullable Input<List<HTTPHeaderArgs>> requestHeaders,
        @Nullable Input<List<String>> validStatusCodeRanges) {
        this.method = method;
        this.path = path;
        this.port = port;
        this.preferHTTPS = preferHTTPS;
        this.requestHeaders = requestHeaders;
        this.validStatusCodeRanges = validStatusCodeRanges;
    }

    private ConnectionMonitorHttpConfigurationArgs() {
        this.method = Input.empty();
        this.path = Input.empty();
        this.port = Input.empty();
        this.preferHTTPS = Input.empty();
        this.requestHeaders = Input.empty();
        this.validStatusCodeRanges = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionMonitorHttpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,HTTPConfigurationMethod>> method;
        private @Nullable Input<String> path;
        private @Nullable Input<Integer> port;
        private @Nullable Input<Boolean> preferHTTPS;
        private @Nullable Input<List<HTTPHeaderArgs>> requestHeaders;
        private @Nullable Input<List<String>> validStatusCodeRanges;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionMonitorHttpConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.method = defaults.method;
    	      this.path = defaults.path;
    	      this.port = defaults.port;
    	      this.preferHTTPS = defaults.preferHTTPS;
    	      this.requestHeaders = defaults.requestHeaders;
    	      this.validStatusCodeRanges = defaults.validStatusCodeRanges;
        }

        public Builder setMethod(@Nullable Input<Either<String,HTTPConfigurationMethod>> method) {
            this.method = method;
            return this;
        }

        public Builder setMethod(@Nullable Either<String,HTTPConfigurationMethod> method) {
            this.method = Input.ofNullable(method);
            return this;
        }

        public Builder setPath(@Nullable Input<String> path) {
            this.path = path;
            return this;
        }

        public Builder setPath(@Nullable String path) {
            this.path = Input.ofNullable(path);
            return this;
        }

        public Builder setPort(@Nullable Input<Integer> port) {
            this.port = port;
            return this;
        }

        public Builder setPort(@Nullable Integer port) {
            this.port = Input.ofNullable(port);
            return this;
        }

        public Builder setPreferHTTPS(@Nullable Input<Boolean> preferHTTPS) {
            this.preferHTTPS = preferHTTPS;
            return this;
        }

        public Builder setPreferHTTPS(@Nullable Boolean preferHTTPS) {
            this.preferHTTPS = Input.ofNullable(preferHTTPS);
            return this;
        }

        public Builder setRequestHeaders(@Nullable Input<List<HTTPHeaderArgs>> requestHeaders) {
            this.requestHeaders = requestHeaders;
            return this;
        }

        public Builder setRequestHeaders(@Nullable List<HTTPHeaderArgs> requestHeaders) {
            this.requestHeaders = Input.ofNullable(requestHeaders);
            return this;
        }

        public Builder setValidStatusCodeRanges(@Nullable Input<List<String>> validStatusCodeRanges) {
            this.validStatusCodeRanges = validStatusCodeRanges;
            return this;
        }

        public Builder setValidStatusCodeRanges(@Nullable List<String> validStatusCodeRanges) {
            this.validStatusCodeRanges = Input.ofNullable(validStatusCodeRanges);
            return this;
        }

        public ConnectionMonitorHttpConfigurationArgs build() {
            return new ConnectionMonitorHttpConfigurationArgs(method, path, port, preferHTTPS, requestHeaders, validStatusCodeRanges);
        }
    }
}
