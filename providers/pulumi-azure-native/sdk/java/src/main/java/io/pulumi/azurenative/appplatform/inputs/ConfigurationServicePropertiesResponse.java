// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.appplatform.inputs;

import io.pulumi.azurenative.appplatform.inputs.ConfigurationServiceInstanceResponse;
import io.pulumi.azurenative.appplatform.inputs.ConfigurationServiceResourceRequestsResponse;
import io.pulumi.azurenative.appplatform.inputs.ConfigurationServiceSettingsResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Application Configuration Service properties payload
 * 
 */
public final class ConfigurationServicePropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final ConfigurationServicePropertiesResponse Empty = new ConfigurationServicePropertiesResponse();

    /**
     * Collection of instances belong to Application Configuration Service.
     * 
     */
    @InputImport(name="instances", required=true)
        private final List<ConfigurationServiceInstanceResponse> instances;

    public List<ConfigurationServiceInstanceResponse> getInstances() {
        return this.instances;
    }

    /**
     * State of the Application Configuration Service.
     * 
     */
    @InputImport(name="provisioningState", required=true)
        private final String provisioningState;

    public String getProvisioningState() {
        return this.provisioningState;
    }

    /**
     * The requested resource quantity for required CPU and Memory.
     * 
     */
    @InputImport(name="resourceRequests", required=true)
        private final ConfigurationServiceResourceRequestsResponse resourceRequests;

    public ConfigurationServiceResourceRequestsResponse getResourceRequests() {
        return this.resourceRequests;
    }

    /**
     * The settings of Application Configuration Service.
     * 
     */
    @InputImport(name="settings")
        private final @Nullable ConfigurationServiceSettingsResponse settings;

    public Optional<ConfigurationServiceSettingsResponse> getSettings() {
        return this.settings == null ? Optional.empty() : Optional.ofNullable(this.settings);
    }

    public ConfigurationServicePropertiesResponse(
        List<ConfigurationServiceInstanceResponse> instances,
        String provisioningState,
        ConfigurationServiceResourceRequestsResponse resourceRequests,
        @Nullable ConfigurationServiceSettingsResponse settings) {
        this.instances = Objects.requireNonNull(instances, "expected parameter 'instances' to be non-null");
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.resourceRequests = Objects.requireNonNull(resourceRequests, "expected parameter 'resourceRequests' to be non-null");
        this.settings = settings;
    }

    private ConfigurationServicePropertiesResponse() {
        this.instances = List.of();
        this.provisioningState = null;
        this.resourceRequests = null;
        this.settings = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigurationServicePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ConfigurationServiceInstanceResponse> instances;
        private String provisioningState;
        private ConfigurationServiceResourceRequestsResponse resourceRequests;
        private @Nullable ConfigurationServiceSettingsResponse settings;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigurationServicePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instances = defaults.instances;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceRequests = defaults.resourceRequests;
    	      this.settings = defaults.settings;
        }

        public Builder setInstances(List<ConfigurationServiceInstanceResponse> instances) {
            this.instances = Objects.requireNonNull(instances);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setResourceRequests(ConfigurationServiceResourceRequestsResponse resourceRequests) {
            this.resourceRequests = Objects.requireNonNull(resourceRequests);
            return this;
        }

        public Builder setSettings(@Nullable ConfigurationServiceSettingsResponse settings) {
            this.settings = settings;
            return this;
        }
        public ConfigurationServicePropertiesResponse build() {
            return new ConfigurationServicePropertiesResponse(instances, provisioningState, resourceRequests, settings);
        }
    }
}
