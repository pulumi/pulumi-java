// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.apimanagement.CertificateArgs;
import io.pulumi.azurenative.apimanagement.outputs.KeyVaultContractPropertiesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Certificate details.
 * API Version: 2020-12-01.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### ApiManagementCreateCertificate
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var certificate = new AzureNative.ApiManagement.Certificate("certificate", new AzureNative.ApiManagement.CertificateArgs
 *         {
 *             CertificateId = "tempcert",
 *             Data = "****************Base 64 Encoded Certificate *******************************",
 *             Password = "****Certificate Password******",
 *             ResourceGroupName = "rg1",
 *             ServiceName = "apimService1",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	apimanagement "github.com/pulumi/pulumi-azure-native/sdk/go/azure/apimanagement"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := apimanagement.NewCertificate(ctx, "certificate", &apimanagement.CertificateArgs{
 * 			CertificateId:     pulumi.String("tempcert"),
 * 			Data:              pulumi.String("****************Base 64 Encoded Certificate *******************************"),
 * 			Password:          pulumi.String("****Certificate Password******"),
 * 			ResourceGroupName: pulumi.String("rg1"),
 * 			ServiceName:       pulumi.String("apimService1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const certificate = new azure_native.apimanagement.Certificate("certificate", {
 *     certificateId: "tempcert",
 *     data: "****************Base 64 Encoded Certificate *******************************",
 *     password: "****Certificate Password******",
 *     resourceGroupName: "rg1",
 *     serviceName: "apimService1",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * certificate = azure_native.apimanagement.Certificate("certificate",
 *     certificate_id="tempcert",
 *     data="****************Base 64 Encoded Certificate *******************************",
 *     password="****Certificate Password******",
 *     resource_group_name="rg1",
 *     service_name="apimService1")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### ApiManagementCreateCertificateWithKeyVault
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var certificate = new AzureNative.ApiManagement.Certificate("certificate", new AzureNative.ApiManagement.CertificateArgs
 *         {
 *             CertificateId = "templateCertkv",
 *             KeyVault = new AzureNative.ApiManagement.Inputs.KeyVaultContractCreatePropertiesArgs
 *             {
 *                 IdentityClientId = "ceaa6b06-c00f-43ef-99ac-f53d1fe876a0",
 *                 SecretIdentifier = "https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert",
 *             },
 *             ResourceGroupName = "rg1",
 *             ServiceName = "apimService1",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	apimanagement "github.com/pulumi/pulumi-azure-native/sdk/go/azure/apimanagement"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := apimanagement.NewCertificate(ctx, "certificate", &apimanagement.CertificateArgs{
 * 			CertificateId: pulumi.String("templateCertkv"),
 * 			KeyVault: &apimanagement.KeyVaultContractCreatePropertiesArgs{
 * 				IdentityClientId: pulumi.String("ceaa6b06-c00f-43ef-99ac-f53d1fe876a0"),
 * 				SecretIdentifier: pulumi.String("https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert"),
 * 			},
 * 			ResourceGroupName: pulumi.String("rg1"),
 * 			ServiceName:       pulumi.String("apimService1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const certificate = new azure_native.apimanagement.Certificate("certificate", {
 *     certificateId: "templateCertkv",
 *     keyVault: {
 *         identityClientId: "ceaa6b06-c00f-43ef-99ac-f53d1fe876a0",
 *         secretIdentifier: "https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert",
 *     },
 *     resourceGroupName: "rg1",
 *     serviceName: "apimService1",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * certificate = azure_native.apimanagement.Certificate("certificate",
 *     certificate_id="templateCertkv",
 *     key_vault=azure_native.apimanagement.KeyVaultContractCreatePropertiesArgs(
 *         identity_client_id="ceaa6b06-c00f-43ef-99ac-f53d1fe876a0",
 *         secret_identifier="https://rpbvtkeyvaultintegration.vault-int.azure-int.net/secrets/msitestingCert",
 *     ),
 *     resource_group_name="rg1",
 *     service_name="apimService1")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:apimanagement:Certificate templateCertkv /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/certificates/templateCertkv 
 * ```
 * 
 */
@ResourceType(type="azure-native:apimanagement:Certificate")
public class Certificate extends io.pulumi.resources.CustomResource {
    /**
     * Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
     * 
     */
    @Export(name="expirationDate", type=String.class, parameters={})
    private Output<String> expirationDate;

    /**
     * @return Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
     * 
     */
    public Output<String> getExpirationDate() {
        return this.expirationDate;
    }
    /**
     * KeyVault location details of the certificate.
     */
    @Export(name="keyVault", type=KeyVaultContractPropertiesResponse.class, parameters={})
    private Output</* @Nullable */ KeyVaultContractPropertiesResponse> keyVault;

    /**
     * @return KeyVault location details of the certificate.
     */
    public Output</* @Nullable */ KeyVaultContractPropertiesResponse> getKeyVault() {
        return this.keyVault;
    }
    /**
     * Resource name.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Subject attribute of the certificate.
     */
    @Export(name="subject", type=String.class, parameters={})
    private Output<String> subject;

    /**
     * @return Subject attribute of the certificate.
     */
    public Output<String> getSubject() {
        return this.subject;
    }
    /**
     * Thumbprint of the certificate.
     */
    @Export(name="thumbprint", type=String.class, parameters={})
    private Output<String> thumbprint;

    /**
     * @return Thumbprint of the certificate.
     */
    public Output<String> getThumbprint() {
        return this.thumbprint;
    }
    /**
     * Resource type for API Management resource.
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type for API Management resource.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Certificate(String name) {
        this(name, CertificateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Certificate(String name, CertificateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Certificate(String name, CertificateArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:apimanagement:Certificate", name, args == null ? CertificateArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Certificate(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:apimanagement:Certificate", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:apimanagement/v20160707:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20161010:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20170301:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20180101:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20180601preview:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20190101:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20191201:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20191201preview:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20200601preview:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20201201:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20210101preview:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20210401preview:Certificate").build()),
                Output.of(Alias.builder().type("azure-native:apimanagement/v20210801:Certificate").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Certificate get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Certificate(name, id, options);
    }
}
