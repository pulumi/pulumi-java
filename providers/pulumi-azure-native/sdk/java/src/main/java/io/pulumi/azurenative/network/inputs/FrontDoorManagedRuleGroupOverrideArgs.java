// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.FrontDoorManagedRuleOverrideArgs;
import io.pulumi.azurenative.network.inputs.ManagedRuleExclusionArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines a managed rule group override setting.
 * 
 */
public final class FrontDoorManagedRuleGroupOverrideArgs extends io.pulumi.resources.ResourceArgs {

    public static final FrontDoorManagedRuleGroupOverrideArgs Empty = new FrontDoorManagedRuleGroupOverrideArgs();

    /**
     * Describes the exclusions that are applied to all rules in the group.
     * 
     */
    @Import(name="exclusions")
      private final @Nullable Output<List<ManagedRuleExclusionArgs>> exclusions;

    public Output<List<ManagedRuleExclusionArgs>> getExclusions() {
        return this.exclusions == null ? Output.empty() : this.exclusions;
    }

    /**
     * Describes the managed rule group to override.
     * 
     */
    @Import(name="ruleGroupName", required=true)
      private final Output<String> ruleGroupName;

    public Output<String> getRuleGroupName() {
        return this.ruleGroupName;
    }

    /**
     * List of rules that will be disabled. If none specified, all rules in the group will be disabled.
     * 
     */
    @Import(name="rules")
      private final @Nullable Output<List<FrontDoorManagedRuleOverrideArgs>> rules;

    public Output<List<FrontDoorManagedRuleOverrideArgs>> getRules() {
        return this.rules == null ? Output.empty() : this.rules;
    }

    public FrontDoorManagedRuleGroupOverrideArgs(
        @Nullable Output<List<ManagedRuleExclusionArgs>> exclusions,
        Output<String> ruleGroupName,
        @Nullable Output<List<FrontDoorManagedRuleOverrideArgs>> rules) {
        this.exclusions = exclusions;
        this.ruleGroupName = Objects.requireNonNull(ruleGroupName, "expected parameter 'ruleGroupName' to be non-null");
        this.rules = rules;
    }

    private FrontDoorManagedRuleGroupOverrideArgs() {
        this.exclusions = Output.empty();
        this.ruleGroupName = Output.empty();
        this.rules = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontDoorManagedRuleGroupOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ManagedRuleExclusionArgs>> exclusions;
        private Output<String> ruleGroupName;
        private @Nullable Output<List<FrontDoorManagedRuleOverrideArgs>> rules;

        public Builder() {
    	      // Empty
        }

        public Builder(FrontDoorManagedRuleGroupOverrideArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exclusions = defaults.exclusions;
    	      this.ruleGroupName = defaults.ruleGroupName;
    	      this.rules = defaults.rules;
        }

        public Builder exclusions(@Nullable Output<List<ManagedRuleExclusionArgs>> exclusions) {
            this.exclusions = exclusions;
            return this;
        }
        public Builder exclusions(@Nullable List<ManagedRuleExclusionArgs> exclusions) {
            this.exclusions = Output.ofNullable(exclusions);
            return this;
        }
        public Builder exclusions(ManagedRuleExclusionArgs... exclusions) {
            return exclusions(List.of(exclusions));
        }
        public Builder ruleGroupName(Output<String> ruleGroupName) {
            this.ruleGroupName = Objects.requireNonNull(ruleGroupName);
            return this;
        }
        public Builder ruleGroupName(String ruleGroupName) {
            this.ruleGroupName = Output.of(Objects.requireNonNull(ruleGroupName));
            return this;
        }
        public Builder rules(@Nullable Output<List<FrontDoorManagedRuleOverrideArgs>> rules) {
            this.rules = rules;
            return this;
        }
        public Builder rules(@Nullable List<FrontDoorManagedRuleOverrideArgs> rules) {
            this.rules = Output.ofNullable(rules);
            return this;
        }
        public Builder rules(FrontDoorManagedRuleOverrideArgs... rules) {
            return rules(List.of(rules));
        }        public FrontDoorManagedRuleGroupOverrideArgs build() {
            return new FrontDoorManagedRuleGroupOverrideArgs(exclusions, ruleGroupName, rules);
        }
    }
}
