// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.inputs;

import io.pulumi.azurenative.servicefabricmesh.inputs.GatewayDestinationResponse;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Describes the tcp configuration for external connectivity for this network.
 * 
 */
public final class TcpConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final TcpConfigResponse Empty = new TcpConfigResponse();

    /**
     * Describes destination endpoint for routing traffic.
     * 
     */
    @Import(name="destination", required=true)
      private final GatewayDestinationResponse destination;

    public GatewayDestinationResponse destination() {
        return this.destination;
    }

    /**
     * tcp gateway config name.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String name() {
        return this.name;
    }

    /**
     * Specifies the port at which the service endpoint below needs to be exposed.
     * 
     */
    @Import(name="port", required=true)
      private final Integer port;

    public Integer port() {
        return this.port;
    }

    public TcpConfigResponse(
        GatewayDestinationResponse destination,
        String name,
        Integer port) {
        this.destination = Objects.requireNonNull(destination, "expected parameter 'destination' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
    }

    private TcpConfigResponse() {
        this.destination = null;
        this.name = null;
        this.port = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TcpConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayDestinationResponse destination;
        private String name;
        private Integer port;

        public Builder() {
    	      // Empty
        }

        public Builder(TcpConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.name = defaults.name;
    	      this.port = defaults.port;
        }

        public Builder destination(GatewayDestinationResponse destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }        public TcpConfigResponse build() {
            return new TcpConfigResponse(destination, name, port);
        }
    }
}
