// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.policyinsights;

import io.pulumi.azurenative.policyinsights.enums.ComplianceState;
import io.pulumi.azurenative.policyinsights.inputs.AttestationEvidenceArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AttestationAtResourceGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final AttestationAtResourceGroupArgs Empty = new AttestationAtResourceGroupArgs();

    /**
     * The name of the attestation.
     * 
     */
    @Import(name="attestationName")
      private final @Nullable Output<String> attestationName;

    public Output<String> getAttestationName() {
        return this.attestationName == null ? Output.empty() : this.attestationName;
    }

    /**
     * Comments describing why this attestation was created.
     * 
     */
    @Import(name="comments")
      private final @Nullable Output<String> comments;

    public Output<String> getComments() {
        return this.comments == null ? Output.empty() : this.comments;
    }

    /**
     * The compliance state that should be set on the resource.
     * 
     */
    @Import(name="complianceState")
      private final @Nullable Output<Either<String,ComplianceState>> complianceState;

    public Output<Either<String,ComplianceState>> getComplianceState() {
        return this.complianceState == null ? Output.empty() : this.complianceState;
    }

    /**
     * The evidence supporting the compliance state set in this attestation.
     * 
     */
    @Import(name="evidence")
      private final @Nullable Output<List<AttestationEvidenceArgs>> evidence;

    public Output<List<AttestationEvidenceArgs>> getEvidence() {
        return this.evidence == null ? Output.empty() : this.evidence;
    }

    /**
     * The time the compliance state should expire.
     * 
     */
    @Import(name="expiresOn")
      private final @Nullable Output<String> expiresOn;

    public Output<String> getExpiresOn() {
        return this.expiresOn == null ? Output.empty() : this.expiresOn;
    }

    /**
     * The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
     * 
     */
    @Import(name="owner")
      private final @Nullable Output<String> owner;

    public Output<String> getOwner() {
        return this.owner == null ? Output.empty() : this.owner;
    }

    /**
     * The resource ID of the policy assignment that the attestation is setting the state for.
     * 
     */
    @Import(name="policyAssignmentId", required=true)
      private final Output<String> policyAssignmentId;

    public Output<String> getPolicyAssignmentId() {
        return this.policyAssignmentId;
    }

    /**
     * The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
     * 
     */
    @Import(name="policyDefinitionReferenceId")
      private final @Nullable Output<String> policyDefinitionReferenceId;

    public Output<String> getPolicyDefinitionReferenceId() {
        return this.policyDefinitionReferenceId == null ? Output.empty() : this.policyDefinitionReferenceId;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public AttestationAtResourceGroupArgs(
        @Nullable Output<String> attestationName,
        @Nullable Output<String> comments,
        @Nullable Output<Either<String,ComplianceState>> complianceState,
        @Nullable Output<List<AttestationEvidenceArgs>> evidence,
        @Nullable Output<String> expiresOn,
        @Nullable Output<String> owner,
        Output<String> policyAssignmentId,
        @Nullable Output<String> policyDefinitionReferenceId,
        Output<String> resourceGroupName) {
        this.attestationName = attestationName;
        this.comments = comments;
        this.complianceState = complianceState;
        this.evidence = evidence;
        this.expiresOn = expiresOn;
        this.owner = owner;
        this.policyAssignmentId = Objects.requireNonNull(policyAssignmentId, "expected parameter 'policyAssignmentId' to be non-null");
        this.policyDefinitionReferenceId = policyDefinitionReferenceId;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private AttestationAtResourceGroupArgs() {
        this.attestationName = Output.empty();
        this.comments = Output.empty();
        this.complianceState = Output.empty();
        this.evidence = Output.empty();
        this.expiresOn = Output.empty();
        this.owner = Output.empty();
        this.policyAssignmentId = Output.empty();
        this.policyDefinitionReferenceId = Output.empty();
        this.resourceGroupName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttestationAtResourceGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> attestationName;
        private @Nullable Output<String> comments;
        private @Nullable Output<Either<String,ComplianceState>> complianceState;
        private @Nullable Output<List<AttestationEvidenceArgs>> evidence;
        private @Nullable Output<String> expiresOn;
        private @Nullable Output<String> owner;
        private Output<String> policyAssignmentId;
        private @Nullable Output<String> policyDefinitionReferenceId;
        private Output<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(AttestationAtResourceGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attestationName = defaults.attestationName;
    	      this.comments = defaults.comments;
    	      this.complianceState = defaults.complianceState;
    	      this.evidence = defaults.evidence;
    	      this.expiresOn = defaults.expiresOn;
    	      this.owner = defaults.owner;
    	      this.policyAssignmentId = defaults.policyAssignmentId;
    	      this.policyDefinitionReferenceId = defaults.policyDefinitionReferenceId;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder attestationName(@Nullable Output<String> attestationName) {
            this.attestationName = attestationName;
            return this;
        }

        public Builder attestationName(@Nullable String attestationName) {
            this.attestationName = Output.ofNullable(attestationName);
            return this;
        }

        public Builder comments(@Nullable Output<String> comments) {
            this.comments = comments;
            return this;
        }

        public Builder comments(@Nullable String comments) {
            this.comments = Output.ofNullable(comments);
            return this;
        }

        public Builder complianceState(@Nullable Output<Either<String,ComplianceState>> complianceState) {
            this.complianceState = complianceState;
            return this;
        }

        public Builder complianceState(@Nullable Either<String,ComplianceState> complianceState) {
            this.complianceState = Output.ofNullable(complianceState);
            return this;
        }

        public Builder evidence(@Nullable Output<List<AttestationEvidenceArgs>> evidence) {
            this.evidence = evidence;
            return this;
        }

        public Builder evidence(@Nullable List<AttestationEvidenceArgs> evidence) {
            this.evidence = Output.ofNullable(evidence);
            return this;
        }

        public Builder expiresOn(@Nullable Output<String> expiresOn) {
            this.expiresOn = expiresOn;
            return this;
        }

        public Builder expiresOn(@Nullable String expiresOn) {
            this.expiresOn = Output.ofNullable(expiresOn);
            return this;
        }

        public Builder owner(@Nullable Output<String> owner) {
            this.owner = owner;
            return this;
        }

        public Builder owner(@Nullable String owner) {
            this.owner = Output.ofNullable(owner);
            return this;
        }

        public Builder policyAssignmentId(Output<String> policyAssignmentId) {
            this.policyAssignmentId = Objects.requireNonNull(policyAssignmentId);
            return this;
        }

        public Builder policyAssignmentId(String policyAssignmentId) {
            this.policyAssignmentId = Output.of(Objects.requireNonNull(policyAssignmentId));
            return this;
        }

        public Builder policyDefinitionReferenceId(@Nullable Output<String> policyDefinitionReferenceId) {
            this.policyDefinitionReferenceId = policyDefinitionReferenceId;
            return this;
        }

        public Builder policyDefinitionReferenceId(@Nullable String policyDefinitionReferenceId) {
            this.policyDefinitionReferenceId = Output.ofNullable(policyDefinitionReferenceId);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public AttestationAtResourceGroupArgs build() {
            return new AttestationAtResourceGroupArgs(attestationName, comments, complianceState, evidence, expiresOn, owner, policyAssignmentId, policyDefinitionReferenceId, resourceGroupName);
        }
    }
}
