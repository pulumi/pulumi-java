// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databox.inputs;

import io.pulumi.azurenative.databox.inputs.AccountCredentialDetailsResponse;
import io.pulumi.azurenative.databox.inputs.ApplianceNetworkConfigurationResponse;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The secrets related to a databox heavy.
 * 
 */
public final class DataBoxHeavySecretResponse extends io.pulumi.resources.InvokeArgs {

    public static final DataBoxHeavySecretResponse Empty = new DataBoxHeavySecretResponse();

    /**
     * Per account level access credentials.
     * 
     */
    @Import(name="accountCredentialDetails", required=true)
      private final List<AccountCredentialDetailsResponse> accountCredentialDetails;

    public List<AccountCredentialDetailsResponse> accountCredentialDetails() {
        return this.accountCredentialDetails;
    }

    /**
     * Password for out of the box experience on device.
     * 
     */
    @Import(name="devicePassword", required=true)
      private final String devicePassword;

    public String devicePassword() {
        return this.devicePassword;
    }

    /**
     * Serial number of the assigned device.
     * 
     */
    @Import(name="deviceSerialNumber", required=true)
      private final String deviceSerialNumber;

    public String deviceSerialNumber() {
        return this.deviceSerialNumber;
    }

    /**
     * The base 64 encoded public key to authenticate with the device
     * 
     */
    @Import(name="encodedValidationCertPubKey", required=true)
      private final String encodedValidationCertPubKey;

    public String encodedValidationCertPubKey() {
        return this.encodedValidationCertPubKey;
    }

    /**
     * Network configuration of the appliance.
     * 
     */
    @Import(name="networkConfigurations", required=true)
      private final List<ApplianceNetworkConfigurationResponse> networkConfigurations;

    public List<ApplianceNetworkConfigurationResponse> networkConfigurations() {
        return this.networkConfigurations;
    }

    public DataBoxHeavySecretResponse(
        List<AccountCredentialDetailsResponse> accountCredentialDetails,
        String devicePassword,
        String deviceSerialNumber,
        String encodedValidationCertPubKey,
        List<ApplianceNetworkConfigurationResponse> networkConfigurations) {
        this.accountCredentialDetails = Objects.requireNonNull(accountCredentialDetails, "expected parameter 'accountCredentialDetails' to be non-null");
        this.devicePassword = Objects.requireNonNull(devicePassword, "expected parameter 'devicePassword' to be non-null");
        this.deviceSerialNumber = Objects.requireNonNull(deviceSerialNumber, "expected parameter 'deviceSerialNumber' to be non-null");
        this.encodedValidationCertPubKey = Objects.requireNonNull(encodedValidationCertPubKey, "expected parameter 'encodedValidationCertPubKey' to be non-null");
        this.networkConfigurations = Objects.requireNonNull(networkConfigurations, "expected parameter 'networkConfigurations' to be non-null");
    }

    private DataBoxHeavySecretResponse() {
        this.accountCredentialDetails = List.of();
        this.devicePassword = null;
        this.deviceSerialNumber = null;
        this.encodedValidationCertPubKey = null;
        this.networkConfigurations = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataBoxHeavySecretResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<AccountCredentialDetailsResponse> accountCredentialDetails;
        private String devicePassword;
        private String deviceSerialNumber;
        private String encodedValidationCertPubKey;
        private List<ApplianceNetworkConfigurationResponse> networkConfigurations;

        public Builder() {
    	      // Empty
        }

        public Builder(DataBoxHeavySecretResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountCredentialDetails = defaults.accountCredentialDetails;
    	      this.devicePassword = defaults.devicePassword;
    	      this.deviceSerialNumber = defaults.deviceSerialNumber;
    	      this.encodedValidationCertPubKey = defaults.encodedValidationCertPubKey;
    	      this.networkConfigurations = defaults.networkConfigurations;
        }

        public Builder accountCredentialDetails(List<AccountCredentialDetailsResponse> accountCredentialDetails) {
            this.accountCredentialDetails = Objects.requireNonNull(accountCredentialDetails);
            return this;
        }
        public Builder accountCredentialDetails(AccountCredentialDetailsResponse... accountCredentialDetails) {
            return accountCredentialDetails(List.of(accountCredentialDetails));
        }
        public Builder devicePassword(String devicePassword) {
            this.devicePassword = Objects.requireNonNull(devicePassword);
            return this;
        }
        public Builder deviceSerialNumber(String deviceSerialNumber) {
            this.deviceSerialNumber = Objects.requireNonNull(deviceSerialNumber);
            return this;
        }
        public Builder encodedValidationCertPubKey(String encodedValidationCertPubKey) {
            this.encodedValidationCertPubKey = Objects.requireNonNull(encodedValidationCertPubKey);
            return this;
        }
        public Builder networkConfigurations(List<ApplianceNetworkConfigurationResponse> networkConfigurations) {
            this.networkConfigurations = Objects.requireNonNull(networkConfigurations);
            return this;
        }
        public Builder networkConfigurations(ApplianceNetworkConfigurationResponse... networkConfigurations) {
            return networkConfigurations(List.of(networkConfigurations));
        }        public DataBoxHeavySecretResponse build() {
            return new DataBoxHeavySecretResponse(accountCredentialDetails, devicePassword, deviceSerialNumber, encodedValidationCertPubKey, networkConfigurations);
        }
    }
}
