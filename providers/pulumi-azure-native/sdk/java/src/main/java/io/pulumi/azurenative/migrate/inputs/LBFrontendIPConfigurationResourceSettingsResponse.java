// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.migrate.inputs;

import io.pulumi.azurenative.migrate.inputs.SubnetReferenceResponse;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines load balancer frontend IP configuration properties.
 * 
 */
public final class LBFrontendIPConfigurationResourceSettingsResponse extends io.pulumi.resources.InvokeArgs {

    public static final LBFrontendIPConfigurationResourceSettingsResponse Empty = new LBFrontendIPConfigurationResourceSettingsResponse();

    /**
     * Gets or sets the frontend IP configuration name.
     * 
     */
    @Import(name="name")
      private final @Nullable String name;

    public Optional<String> getName() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    /**
     * Gets or sets the IP address of the Load Balancer.This is only specified if a specific
     * private IP address shall be allocated from the subnet specified in subnetRef.
     * 
     */
    @Import(name="privateIpAddress")
      private final @Nullable String privateIpAddress;

    public Optional<String> getPrivateIpAddress() {
        return this.privateIpAddress == null ? Optional.empty() : Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * Gets or sets PrivateIP allocation method (Static/Dynamic).
     * 
     */
    @Import(name="privateIpAllocationMethod")
      private final @Nullable String privateIpAllocationMethod;

    public Optional<String> getPrivateIpAllocationMethod() {
        return this.privateIpAllocationMethod == null ? Optional.empty() : Optional.ofNullable(this.privateIpAllocationMethod);
    }

    /**
     * Defines reference to subnet.
     * 
     */
    @Import(name="subnet")
      private final @Nullable SubnetReferenceResponse subnet;

    public Optional<SubnetReferenceResponse> getSubnet() {
        return this.subnet == null ? Optional.empty() : Optional.ofNullable(this.subnet);
    }

    /**
     * Gets or sets the csv list of zones.
     * 
     */
    @Import(name="zones")
      private final @Nullable String zones;

    public Optional<String> getZones() {
        return this.zones == null ? Optional.empty() : Optional.ofNullable(this.zones);
    }

    public LBFrontendIPConfigurationResourceSettingsResponse(
        @Nullable String name,
        @Nullable String privateIpAddress,
        @Nullable String privateIpAllocationMethod,
        @Nullable SubnetReferenceResponse subnet,
        @Nullable String zones) {
        this.name = name;
        this.privateIpAddress = privateIpAddress;
        this.privateIpAllocationMethod = privateIpAllocationMethod;
        this.subnet = subnet;
        this.zones = zones;
    }

    private LBFrontendIPConfigurationResourceSettingsResponse() {
        this.name = null;
        this.privateIpAddress = null;
        this.privateIpAllocationMethod = null;
        this.subnet = null;
        this.zones = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LBFrontendIPConfigurationResourceSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String name;
        private @Nullable String privateIpAddress;
        private @Nullable String privateIpAllocationMethod;
        private @Nullable SubnetReferenceResponse subnet;
        private @Nullable String zones;

        public Builder() {
    	      // Empty
        }

        public Builder(LBFrontendIPConfigurationResourceSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.privateIpAllocationMethod = defaults.privateIpAllocationMethod;
    	      this.subnet = defaults.subnet;
    	      this.zones = defaults.zones;
        }

        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder privateIpAddress(@Nullable String privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }
        public Builder privateIpAllocationMethod(@Nullable String privateIpAllocationMethod) {
            this.privateIpAllocationMethod = privateIpAllocationMethod;
            return this;
        }
        public Builder subnet(@Nullable SubnetReferenceResponse subnet) {
            this.subnet = subnet;
            return this;
        }
        public Builder zones(@Nullable String zones) {
            this.zones = zones;
            return this;
        }        public LBFrontendIPConfigurationResourceSettingsResponse build() {
            return new LBFrontendIPConfigurationResourceSettingsResponse(name, privateIpAddress, privateIpAllocationMethod, subnet, zones);
        }
    }
}
