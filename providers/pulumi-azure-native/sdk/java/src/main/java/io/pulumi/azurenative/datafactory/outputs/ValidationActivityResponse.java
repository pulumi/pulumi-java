// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.outputs;

import io.pulumi.azurenative.datafactory.outputs.ActivityDependencyResponse;
import io.pulumi.azurenative.datafactory.outputs.DatasetReferenceResponse;
import io.pulumi.azurenative.datafactory.outputs.UserPropertyResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ValidationActivityResponse {
    private final @Nullable Object childItems;
    private final DatasetReferenceResponse dataset;
    private final @Nullable List<ActivityDependencyResponse> dependsOn;
    private final @Nullable String description;
    private final @Nullable Object minimumSize;
    private final String name;
    private final @Nullable Object sleep;
    private final @Nullable Object timeout;
    private final String type;
    private final @Nullable List<UserPropertyResponse> userProperties;

    @OutputCustomType.Constructor({"childItems","dataset","dependsOn","description","minimumSize","name","sleep","timeout","type","userProperties"})
    private ValidationActivityResponse(
        @Nullable Object childItems,
        DatasetReferenceResponse dataset,
        @Nullable List<ActivityDependencyResponse> dependsOn,
        @Nullable String description,
        @Nullable Object minimumSize,
        String name,
        @Nullable Object sleep,
        @Nullable Object timeout,
        String type,
        @Nullable List<UserPropertyResponse> userProperties) {
        this.childItems = childItems;
        this.dataset = Objects.requireNonNull(dataset);
        this.dependsOn = dependsOn;
        this.description = description;
        this.minimumSize = minimumSize;
        this.name = Objects.requireNonNull(name);
        this.sleep = sleep;
        this.timeout = timeout;
        this.type = Objects.requireNonNull(type);
        this.userProperties = userProperties;
    }

    public Optional<Object> getChildItems() {
        return Optional.ofNullable(this.childItems);
    }
    public DatasetReferenceResponse getDataset() {
        return this.dataset;
    }
    public List<ActivityDependencyResponse> getDependsOn() {
        return this.dependsOn == null ? List.of() : this.dependsOn;
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Object> getMinimumSize() {
        return Optional.ofNullable(this.minimumSize);
    }
    public String getName() {
        return this.name;
    }
    public Optional<Object> getSleep() {
        return Optional.ofNullable(this.sleep);
    }
    public Optional<Object> getTimeout() {
        return Optional.ofNullable(this.timeout);
    }
    public String getType() {
        return this.type;
    }
    public List<UserPropertyResponse> getUserProperties() {
        return this.userProperties == null ? List.of() : this.userProperties;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ValidationActivityResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object childItems;
        private DatasetReferenceResponse dataset;
        private @Nullable List<ActivityDependencyResponse> dependsOn;
        private @Nullable String description;
        private @Nullable Object minimumSize;
        private String name;
        private @Nullable Object sleep;
        private @Nullable Object timeout;
        private String type;
        private @Nullable List<UserPropertyResponse> userProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(ValidationActivityResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childItems = defaults.childItems;
    	      this.dataset = defaults.dataset;
    	      this.dependsOn = defaults.dependsOn;
    	      this.description = defaults.description;
    	      this.minimumSize = defaults.minimumSize;
    	      this.name = defaults.name;
    	      this.sleep = defaults.sleep;
    	      this.timeout = defaults.timeout;
    	      this.type = defaults.type;
    	      this.userProperties = defaults.userProperties;
        }

        public Builder setChildItems(@Nullable Object childItems) {
            this.childItems = childItems;
            return this;
        }

        public Builder setDataset(DatasetReferenceResponse dataset) {
            this.dataset = Objects.requireNonNull(dataset);
            return this;
        }

        public Builder setDependsOn(@Nullable List<ActivityDependencyResponse> dependsOn) {
            this.dependsOn = dependsOn;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setMinimumSize(@Nullable Object minimumSize) {
            this.minimumSize = minimumSize;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSleep(@Nullable Object sleep) {
            this.sleep = sleep;
            return this;
        }

        public Builder setTimeout(@Nullable Object timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUserProperties(@Nullable List<UserPropertyResponse> userProperties) {
            this.userProperties = userProperties;
            return this;
        }

        public ValidationActivityResponse build() {
            return new ValidationActivityResponse(childItems, dataset, dependsOn, description, minimumSize, name, sleep, timeout, type, userProperties);
        }
    }
}
