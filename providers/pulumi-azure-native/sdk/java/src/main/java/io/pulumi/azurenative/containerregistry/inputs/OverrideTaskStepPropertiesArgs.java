// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.inputs;

import io.pulumi.azurenative.containerregistry.inputs.ArgumentArgs;
import io.pulumi.azurenative.containerregistry.inputs.SetValueArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OverrideTaskStepPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final OverrideTaskStepPropertiesArgs Empty = new OverrideTaskStepPropertiesArgs();

    /**
     * Gets or sets the collection of override arguments to be used when
     * executing a build step.
     * 
     */
    @Import(name="arguments")
      private final @Nullable Output<List<ArgumentArgs>> arguments;

    public Output<List<ArgumentArgs>> arguments() {
        return this.arguments == null ? Codegen.empty() : this.arguments;
    }

    /**
     * The source context against which run has to be queued.
     * 
     */
    @Import(name="contextPath")
      private final @Nullable Output<String> contextPath;

    public Output<String> contextPath() {
        return this.contextPath == null ? Codegen.empty() : this.contextPath;
    }

    /**
     * The file against which run has to be queued.
     * 
     */
    @Import(name="file")
      private final @Nullable Output<String> file;

    public Output<String> file() {
        return this.file == null ? Codegen.empty() : this.file;
    }

    /**
     * The name of the target build stage for the docker build.
     * 
     */
    @Import(name="target")
      private final @Nullable Output<String> target;

    public Output<String> target() {
        return this.target == null ? Codegen.empty() : this.target;
    }

    /**
     * Base64 encoded update trigger token that will be attached with the base image trigger webhook.
     * 
     */
    @Import(name="updateTriggerToken")
      private final @Nullable Output<String> updateTriggerToken;

    public Output<String> updateTriggerToken() {
        return this.updateTriggerToken == null ? Codegen.empty() : this.updateTriggerToken;
    }

    /**
     * The collection of overridable values that can be passed when running a Task.
     * 
     */
    @Import(name="values")
      private final @Nullable Output<List<SetValueArgs>> values;

    public Output<List<SetValueArgs>> values() {
        return this.values == null ? Codegen.empty() : this.values;
    }

    public OverrideTaskStepPropertiesArgs(
        @Nullable Output<List<ArgumentArgs>> arguments,
        @Nullable Output<String> contextPath,
        @Nullable Output<String> file,
        @Nullable Output<String> target,
        @Nullable Output<String> updateTriggerToken,
        @Nullable Output<List<SetValueArgs>> values) {
        this.arguments = arguments;
        this.contextPath = contextPath;
        this.file = file;
        this.target = target;
        this.updateTriggerToken = updateTriggerToken;
        this.values = values;
    }

    private OverrideTaskStepPropertiesArgs() {
        this.arguments = Codegen.empty();
        this.contextPath = Codegen.empty();
        this.file = Codegen.empty();
        this.target = Codegen.empty();
        this.updateTriggerToken = Codegen.empty();
        this.values = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OverrideTaskStepPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ArgumentArgs>> arguments;
        private @Nullable Output<String> contextPath;
        private @Nullable Output<String> file;
        private @Nullable Output<String> target;
        private @Nullable Output<String> updateTriggerToken;
        private @Nullable Output<List<SetValueArgs>> values;

        public Builder() {
    	      // Empty
        }

        public Builder(OverrideTaskStepPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arguments = defaults.arguments;
    	      this.contextPath = defaults.contextPath;
    	      this.file = defaults.file;
    	      this.target = defaults.target;
    	      this.updateTriggerToken = defaults.updateTriggerToken;
    	      this.values = defaults.values;
        }

        public Builder arguments(@Nullable Output<List<ArgumentArgs>> arguments) {
            this.arguments = arguments;
            return this;
        }
        public Builder arguments(@Nullable List<ArgumentArgs> arguments) {
            this.arguments = Codegen.ofNullable(arguments);
            return this;
        }
        public Builder arguments(ArgumentArgs... arguments) {
            return arguments(List.of(arguments));
        }
        public Builder contextPath(@Nullable Output<String> contextPath) {
            this.contextPath = contextPath;
            return this;
        }
        public Builder contextPath(@Nullable String contextPath) {
            this.contextPath = Codegen.ofNullable(contextPath);
            return this;
        }
        public Builder file(@Nullable Output<String> file) {
            this.file = file;
            return this;
        }
        public Builder file(@Nullable String file) {
            this.file = Codegen.ofNullable(file);
            return this;
        }
        public Builder target(@Nullable Output<String> target) {
            this.target = target;
            return this;
        }
        public Builder target(@Nullable String target) {
            this.target = Codegen.ofNullable(target);
            return this;
        }
        public Builder updateTriggerToken(@Nullable Output<String> updateTriggerToken) {
            this.updateTriggerToken = updateTriggerToken;
            return this;
        }
        public Builder updateTriggerToken(@Nullable String updateTriggerToken) {
            this.updateTriggerToken = Codegen.ofNullable(updateTriggerToken);
            return this;
        }
        public Builder values(@Nullable Output<List<SetValueArgs>> values) {
            this.values = values;
            return this;
        }
        public Builder values(@Nullable List<SetValueArgs> values) {
            this.values = Codegen.ofNullable(values);
            return this;
        }
        public Builder values(SetValueArgs... values) {
            return values(List.of(values));
        }        public OverrideTaskStepPropertiesArgs build() {
            return new OverrideTaskStepPropertiesArgs(arguments, contextPath, file, target, updateTriggerToken, values);
        }
    }
}
