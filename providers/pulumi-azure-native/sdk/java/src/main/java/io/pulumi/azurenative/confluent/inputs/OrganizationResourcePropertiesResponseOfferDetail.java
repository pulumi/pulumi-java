// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.confluent.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Confluent offer detail
 * 
 */
public final class OrganizationResourcePropertiesResponseOfferDetail extends io.pulumi.resources.InvokeArgs {

    public static final OrganizationResourcePropertiesResponseOfferDetail Empty = new OrganizationResourcePropertiesResponseOfferDetail();

    /**
     * Offer Id
     * 
     */
    @Import(name="id")
      private final @Nullable String id;

    public Optional<String> getId() {
        return this.id == null ? Optional.empty() : Optional.ofNullable(this.id);
    }

    /**
     * Offer Plan Id
     * 
     */
    @Import(name="planId")
      private final @Nullable String planId;

    public Optional<String> getPlanId() {
        return this.planId == null ? Optional.empty() : Optional.ofNullable(this.planId);
    }

    /**
     * Offer Plan Name
     * 
     */
    @Import(name="planName")
      private final @Nullable String planName;

    public Optional<String> getPlanName() {
        return this.planName == null ? Optional.empty() : Optional.ofNullable(this.planName);
    }

    /**
     * Publisher Id
     * 
     */
    @Import(name="publisherId")
      private final @Nullable String publisherId;

    public Optional<String> getPublisherId() {
        return this.publisherId == null ? Optional.empty() : Optional.ofNullable(this.publisherId);
    }

    /**
     * SaaS Offer Status
     * 
     */
    @Import(name="status", required=true)
      private final String status;

    public String getStatus() {
        return this.status;
    }

    /**
     * Offer Plan Term unit
     * 
     */
    @Import(name="termUnit")
      private final @Nullable String termUnit;

    public Optional<String> getTermUnit() {
        return this.termUnit == null ? Optional.empty() : Optional.ofNullable(this.termUnit);
    }

    public OrganizationResourcePropertiesResponseOfferDetail(
        @Nullable String id,
        @Nullable String planId,
        @Nullable String planName,
        @Nullable String publisherId,
        String status,
        @Nullable String termUnit) {
        this.id = id;
        this.planId = planId;
        this.planName = planName;
        this.publisherId = publisherId;
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
        this.termUnit = termUnit;
    }

    private OrganizationResourcePropertiesResponseOfferDetail() {
        this.id = null;
        this.planId = null;
        this.planName = null;
        this.publisherId = null;
        this.status = null;
        this.termUnit = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationResourcePropertiesResponseOfferDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String id;
        private @Nullable String planId;
        private @Nullable String planName;
        private @Nullable String publisherId;
        private String status;
        private @Nullable String termUnit;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationResourcePropertiesResponseOfferDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.planId = defaults.planId;
    	      this.planName = defaults.planName;
    	      this.publisherId = defaults.publisherId;
    	      this.status = defaults.status;
    	      this.termUnit = defaults.termUnit;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder planId(@Nullable String planId) {
            this.planId = planId;
            return this;
        }
        public Builder planName(@Nullable String planName) {
            this.planName = planName;
            return this;
        }
        public Builder publisherId(@Nullable String publisherId) {
            this.publisherId = publisherId;
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder termUnit(@Nullable String termUnit) {
            this.termUnit = termUnit;
            return this;
        }        public OrganizationResourcePropertiesResponseOfferDetail build() {
            return new OrganizationResourcePropertiesResponseOfferDetail(id, planId, planName, publisherId, status, termUnit);
        }
    }
}
