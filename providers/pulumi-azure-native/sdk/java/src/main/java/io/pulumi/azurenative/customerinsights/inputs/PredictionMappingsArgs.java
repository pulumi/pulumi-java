// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Definition of the link mapping of prediction.
 * 
 */
public final class PredictionMappingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final PredictionMappingsArgs Empty = new PredictionMappingsArgs();

    /**
     * The grade of the link mapping.
     * 
     */
    @InputImport(name="grade", required=true)
    private final Input<String> grade;

    public Input<String> getGrade() {
        return this.grade;
    }

    /**
     * The reason of the link mapping.
     * 
     */
    @InputImport(name="reason", required=true)
    private final Input<String> reason;

    public Input<String> getReason() {
        return this.reason;
    }

    /**
     * The score of the link mapping.
     * 
     */
    @InputImport(name="score", required=true)
    private final Input<String> score;

    public Input<String> getScore() {
        return this.score;
    }

    public PredictionMappingsArgs(
        Input<String> grade,
        Input<String> reason,
        Input<String> score) {
        this.grade = Objects.requireNonNull(grade, "expected parameter 'grade' to be non-null");
        this.reason = Objects.requireNonNull(reason, "expected parameter 'reason' to be non-null");
        this.score = Objects.requireNonNull(score, "expected parameter 'score' to be non-null");
    }

    private PredictionMappingsArgs() {
        this.grade = Input.empty();
        this.reason = Input.empty();
        this.score = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PredictionMappingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> grade;
        private Input<String> reason;
        private Input<String> score;

        public Builder() {
    	      // Empty
        }

        public Builder(PredictionMappingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.grade = defaults.grade;
    	      this.reason = defaults.reason;
    	      this.score = defaults.score;
        }

        public Builder setGrade(Input<String> grade) {
            this.grade = Objects.requireNonNull(grade);
            return this;
        }

        public Builder setGrade(String grade) {
            this.grade = Input.of(Objects.requireNonNull(grade));
            return this;
        }

        public Builder setReason(Input<String> reason) {
            this.reason = Objects.requireNonNull(reason);
            return this;
        }

        public Builder setReason(String reason) {
            this.reason = Input.of(Objects.requireNonNull(reason));
            return this;
        }

        public Builder setScore(Input<String> score) {
            this.score = Objects.requireNonNull(score);
            return this;
        }

        public Builder setScore(String score) {
            this.score = Input.of(Objects.requireNonNull(score));
            return this;
        }

        public PredictionMappingsArgs build() {
            return new PredictionMappingsArgs(grade, reason, score);
        }
    }
}
