// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.azurenative.datafactory.inputs.LinkedIntegrationRuntimeResponse;
import io.pulumi.azurenative.datafactory.inputs.SelfHostedIntegrationRuntimeNodeResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SelfHostedIntegrationRuntimeStatusResponse extends io.pulumi.resources.InvokeArgs {

    public static final SelfHostedIntegrationRuntimeStatusResponse Empty = new SelfHostedIntegrationRuntimeStatusResponse();

    @InputImport(name="autoUpdate", required=true)
    private final String autoUpdate;

    public String getAutoUpdate() {
        return this.autoUpdate;
    }

    @InputImport(name="autoUpdateETA", required=true)
    private final String autoUpdateETA;

    public String getAutoUpdateETA() {
        return this.autoUpdateETA;
    }

    @InputImport(name="capabilities", required=true)
    private final Map<String,String> capabilities;

    public Map<String,String> getCapabilities() {
        return this.capabilities;
    }

    @InputImport(name="createTime", required=true)
    private final String createTime;

    public String getCreateTime() {
        return this.createTime;
    }

    @InputImport(name="dataFactoryName", required=true)
    private final String dataFactoryName;

    public String getDataFactoryName() {
        return this.dataFactoryName;
    }

    @InputImport(name="internalChannelEncryption", required=true)
    private final String internalChannelEncryption;

    public String getInternalChannelEncryption() {
        return this.internalChannelEncryption;
    }

    @InputImport(name="latestVersion", required=true)
    private final String latestVersion;

    public String getLatestVersion() {
        return this.latestVersion;
    }

    @InputImport(name="links")
    private final @Nullable List<LinkedIntegrationRuntimeResponse> links;

    public List<LinkedIntegrationRuntimeResponse> getLinks() {
        return this.links == null ? List.of() : this.links;
    }

    @InputImport(name="localTimeZoneOffset", required=true)
    private final String localTimeZoneOffset;

    public String getLocalTimeZoneOffset() {
        return this.localTimeZoneOffset;
    }

    @InputImport(name="nodes")
    private final @Nullable List<SelfHostedIntegrationRuntimeNodeResponse> nodes;

    public List<SelfHostedIntegrationRuntimeNodeResponse> getNodes() {
        return this.nodes == null ? List.of() : this.nodes;
    }

    @InputImport(name="pushedVersion", required=true)
    private final String pushedVersion;

    public String getPushedVersion() {
        return this.pushedVersion;
    }

    @InputImport(name="scheduledUpdateDate", required=true)
    private final String scheduledUpdateDate;

    public String getScheduledUpdateDate() {
        return this.scheduledUpdateDate;
    }

    @InputImport(name="serviceUrls", required=true)
    private final List<String> serviceUrls;

    public List<String> getServiceUrls() {
        return this.serviceUrls;
    }

    @InputImport(name="state", required=true)
    private final String state;

    public String getState() {
        return this.state;
    }

    @InputImport(name="taskQueueId", required=true)
    private final String taskQueueId;

    public String getTaskQueueId() {
        return this.taskQueueId;
    }

    @InputImport(name="type", required=true)
    private final String type;

    public String getType() {
        return this.type;
    }

    @InputImport(name="updateDelayOffset", required=true)
    private final String updateDelayOffset;

    public String getUpdateDelayOffset() {
        return this.updateDelayOffset;
    }

    @InputImport(name="version", required=true)
    private final String version;

    public String getVersion() {
        return this.version;
    }

    @InputImport(name="versionStatus", required=true)
    private final String versionStatus;

    public String getVersionStatus() {
        return this.versionStatus;
    }

    public SelfHostedIntegrationRuntimeStatusResponse(
        String autoUpdate,
        String autoUpdateETA,
        Map<String,String> capabilities,
        String createTime,
        String dataFactoryName,
        String internalChannelEncryption,
        String latestVersion,
        @Nullable List<LinkedIntegrationRuntimeResponse> links,
        String localTimeZoneOffset,
        @Nullable List<SelfHostedIntegrationRuntimeNodeResponse> nodes,
        String pushedVersion,
        String scheduledUpdateDate,
        List<String> serviceUrls,
        String state,
        String taskQueueId,
        String type,
        String updateDelayOffset,
        String version,
        String versionStatus) {
        this.autoUpdate = Objects.requireNonNull(autoUpdate, "expected parameter 'autoUpdate' to be non-null");
        this.autoUpdateETA = Objects.requireNonNull(autoUpdateETA, "expected parameter 'autoUpdateETA' to be non-null");
        this.capabilities = Objects.requireNonNull(capabilities, "expected parameter 'capabilities' to be non-null");
        this.createTime = Objects.requireNonNull(createTime, "expected parameter 'createTime' to be non-null");
        this.dataFactoryName = Objects.requireNonNull(dataFactoryName, "expected parameter 'dataFactoryName' to be non-null");
        this.internalChannelEncryption = Objects.requireNonNull(internalChannelEncryption, "expected parameter 'internalChannelEncryption' to be non-null");
        this.latestVersion = Objects.requireNonNull(latestVersion, "expected parameter 'latestVersion' to be non-null");
        this.links = links;
        this.localTimeZoneOffset = Objects.requireNonNull(localTimeZoneOffset, "expected parameter 'localTimeZoneOffset' to be non-null");
        this.nodes = nodes;
        this.pushedVersion = Objects.requireNonNull(pushedVersion, "expected parameter 'pushedVersion' to be non-null");
        this.scheduledUpdateDate = Objects.requireNonNull(scheduledUpdateDate, "expected parameter 'scheduledUpdateDate' to be non-null");
        this.serviceUrls = Objects.requireNonNull(serviceUrls, "expected parameter 'serviceUrls' to be non-null");
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
        this.taskQueueId = Objects.requireNonNull(taskQueueId, "expected parameter 'taskQueueId' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.updateDelayOffset = Objects.requireNonNull(updateDelayOffset, "expected parameter 'updateDelayOffset' to be non-null");
        this.version = Objects.requireNonNull(version, "expected parameter 'version' to be non-null");
        this.versionStatus = Objects.requireNonNull(versionStatus, "expected parameter 'versionStatus' to be non-null");
    }

    private SelfHostedIntegrationRuntimeStatusResponse() {
        this.autoUpdate = null;
        this.autoUpdateETA = null;
        this.capabilities = Map.of();
        this.createTime = null;
        this.dataFactoryName = null;
        this.internalChannelEncryption = null;
        this.latestVersion = null;
        this.links = List.of();
        this.localTimeZoneOffset = null;
        this.nodes = List.of();
        this.pushedVersion = null;
        this.scheduledUpdateDate = null;
        this.serviceUrls = List.of();
        this.state = null;
        this.taskQueueId = null;
        this.type = null;
        this.updateDelayOffset = null;
        this.version = null;
        this.versionStatus = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SelfHostedIntegrationRuntimeStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String autoUpdate;
        private String autoUpdateETA;
        private Map<String,String> capabilities;
        private String createTime;
        private String dataFactoryName;
        private String internalChannelEncryption;
        private String latestVersion;
        private @Nullable List<LinkedIntegrationRuntimeResponse> links;
        private String localTimeZoneOffset;
        private @Nullable List<SelfHostedIntegrationRuntimeNodeResponse> nodes;
        private String pushedVersion;
        private String scheduledUpdateDate;
        private List<String> serviceUrls;
        private String state;
        private String taskQueueId;
        private String type;
        private String updateDelayOffset;
        private String version;
        private String versionStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(SelfHostedIntegrationRuntimeStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoUpdate = defaults.autoUpdate;
    	      this.autoUpdateETA = defaults.autoUpdateETA;
    	      this.capabilities = defaults.capabilities;
    	      this.createTime = defaults.createTime;
    	      this.dataFactoryName = defaults.dataFactoryName;
    	      this.internalChannelEncryption = defaults.internalChannelEncryption;
    	      this.latestVersion = defaults.latestVersion;
    	      this.links = defaults.links;
    	      this.localTimeZoneOffset = defaults.localTimeZoneOffset;
    	      this.nodes = defaults.nodes;
    	      this.pushedVersion = defaults.pushedVersion;
    	      this.scheduledUpdateDate = defaults.scheduledUpdateDate;
    	      this.serviceUrls = defaults.serviceUrls;
    	      this.state = defaults.state;
    	      this.taskQueueId = defaults.taskQueueId;
    	      this.type = defaults.type;
    	      this.updateDelayOffset = defaults.updateDelayOffset;
    	      this.version = defaults.version;
    	      this.versionStatus = defaults.versionStatus;
        }

        public Builder setAutoUpdate(String autoUpdate) {
            this.autoUpdate = Objects.requireNonNull(autoUpdate);
            return this;
        }

        public Builder setAutoUpdateETA(String autoUpdateETA) {
            this.autoUpdateETA = Objects.requireNonNull(autoUpdateETA);
            return this;
        }

        public Builder setCapabilities(Map<String,String> capabilities) {
            this.capabilities = Objects.requireNonNull(capabilities);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDataFactoryName(String dataFactoryName) {
            this.dataFactoryName = Objects.requireNonNull(dataFactoryName);
            return this;
        }

        public Builder setInternalChannelEncryption(String internalChannelEncryption) {
            this.internalChannelEncryption = Objects.requireNonNull(internalChannelEncryption);
            return this;
        }

        public Builder setLatestVersion(String latestVersion) {
            this.latestVersion = Objects.requireNonNull(latestVersion);
            return this;
        }

        public Builder setLinks(@Nullable List<LinkedIntegrationRuntimeResponse> links) {
            this.links = links;
            return this;
        }

        public Builder setLocalTimeZoneOffset(String localTimeZoneOffset) {
            this.localTimeZoneOffset = Objects.requireNonNull(localTimeZoneOffset);
            return this;
        }

        public Builder setNodes(@Nullable List<SelfHostedIntegrationRuntimeNodeResponse> nodes) {
            this.nodes = nodes;
            return this;
        }

        public Builder setPushedVersion(String pushedVersion) {
            this.pushedVersion = Objects.requireNonNull(pushedVersion);
            return this;
        }

        public Builder setScheduledUpdateDate(String scheduledUpdateDate) {
            this.scheduledUpdateDate = Objects.requireNonNull(scheduledUpdateDate);
            return this;
        }

        public Builder setServiceUrls(List<String> serviceUrls) {
            this.serviceUrls = Objects.requireNonNull(serviceUrls);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setTaskQueueId(String taskQueueId) {
            this.taskQueueId = Objects.requireNonNull(taskQueueId);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUpdateDelayOffset(String updateDelayOffset) {
            this.updateDelayOffset = Objects.requireNonNull(updateDelayOffset);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Builder setVersionStatus(String versionStatus) {
            this.versionStatus = Objects.requireNonNull(versionStatus);
            return this;
        }

        public SelfHostedIntegrationRuntimeStatusResponse build() {
            return new SelfHostedIntegrationRuntimeStatusResponse(autoUpdate, autoUpdateETA, capabilities, createTime, dataFactoryName, internalChannelEncryption, latestVersion, links, localTimeZoneOffset, nodes, pushedVersion, scheduledUpdateDate, serviceUrls, state, taskQueueId, type, updateDelayOffset, version, versionStatus);
        }
    }
}
