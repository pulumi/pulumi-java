// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement.outputs;

import io.pulumi.azurenative.apimanagement.outputs.ApiVersionSetContractDetailsResponse;
import io.pulumi.azurenative.apimanagement.outputs.AuthenticationSettingsContractResponse;
import io.pulumi.azurenative.apimanagement.outputs.SubscriptionKeyParameterNamesContractResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetApiResult {
    private final @Nullable String apiRevision;
    private final @Nullable String apiRevisionDescription;
    private final @Nullable String apiType;
    private final @Nullable String apiVersion;
    private final @Nullable String apiVersionDescription;
    private final @Nullable ApiVersionSetContractDetailsResponse apiVersionSet;
    private final @Nullable String apiVersionSetId;
    private final @Nullable AuthenticationSettingsContractResponse authenticationSettings;
    private final @Nullable String description;
    private final @Nullable String displayName;
    private final String id;
    private final @Nullable Boolean isCurrent;
    private final Boolean isOnline;
    private final String name;
    private final String path;
    private final @Nullable List<String> protocols;
    private final @Nullable String serviceUrl;
    private final @Nullable String sourceApiId;
    private final @Nullable SubscriptionKeyParameterNamesContractResponse subscriptionKeyParameterNames;
    private final @Nullable Boolean subscriptionRequired;
    private final String type;

    @OutputCustomType.Constructor({"apiRevision","apiRevisionDescription","apiType","apiVersion","apiVersionDescription","apiVersionSet","apiVersionSetId","authenticationSettings","description","displayName","id","isCurrent","isOnline","name","path","protocols","serviceUrl","sourceApiId","subscriptionKeyParameterNames","subscriptionRequired","type"})
    private GetApiResult(
        @Nullable String apiRevision,
        @Nullable String apiRevisionDescription,
        @Nullable String apiType,
        @Nullable String apiVersion,
        @Nullable String apiVersionDescription,
        @Nullable ApiVersionSetContractDetailsResponse apiVersionSet,
        @Nullable String apiVersionSetId,
        @Nullable AuthenticationSettingsContractResponse authenticationSettings,
        @Nullable String description,
        @Nullable String displayName,
        String id,
        @Nullable Boolean isCurrent,
        Boolean isOnline,
        String name,
        String path,
        @Nullable List<String> protocols,
        @Nullable String serviceUrl,
        @Nullable String sourceApiId,
        @Nullable SubscriptionKeyParameterNamesContractResponse subscriptionKeyParameterNames,
        @Nullable Boolean subscriptionRequired,
        String type) {
        this.apiRevision = apiRevision;
        this.apiRevisionDescription = apiRevisionDescription;
        this.apiType = apiType;
        this.apiVersion = apiVersion;
        this.apiVersionDescription = apiVersionDescription;
        this.apiVersionSet = apiVersionSet;
        this.apiVersionSetId = apiVersionSetId;
        this.authenticationSettings = authenticationSettings;
        this.description = description;
        this.displayName = displayName;
        this.id = Objects.requireNonNull(id);
        this.isCurrent = isCurrent;
        this.isOnline = Objects.requireNonNull(isOnline);
        this.name = Objects.requireNonNull(name);
        this.path = Objects.requireNonNull(path);
        this.protocols = protocols;
        this.serviceUrl = serviceUrl;
        this.sourceApiId = sourceApiId;
        this.subscriptionKeyParameterNames = subscriptionKeyParameterNames;
        this.subscriptionRequired = subscriptionRequired;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getApiRevision() {
        return Optional.ofNullable(this.apiRevision);
    }
    public Optional<String> getApiRevisionDescription() {
        return Optional.ofNullable(this.apiRevisionDescription);
    }
    public Optional<String> getApiType() {
        return Optional.ofNullable(this.apiType);
    }
    public Optional<String> getApiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }
    public Optional<String> getApiVersionDescription() {
        return Optional.ofNullable(this.apiVersionDescription);
    }
    public Optional<ApiVersionSetContractDetailsResponse> getApiVersionSet() {
        return Optional.ofNullable(this.apiVersionSet);
    }
    public Optional<String> getApiVersionSetId() {
        return Optional.ofNullable(this.apiVersionSetId);
    }
    public Optional<AuthenticationSettingsContractResponse> getAuthenticationSettings() {
        return Optional.ofNullable(this.authenticationSettings);
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> getDisplayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String getId() {
        return this.id;
    }
    public Optional<Boolean> getIsCurrent() {
        return Optional.ofNullable(this.isCurrent);
    }
    public Boolean getIsOnline() {
        return this.isOnline;
    }
    public String getName() {
        return this.name;
    }
    public String getPath() {
        return this.path;
    }
    public List<String> getProtocols() {
        return this.protocols == null ? List.of() : this.protocols;
    }
    public Optional<String> getServiceUrl() {
        return Optional.ofNullable(this.serviceUrl);
    }
    public Optional<String> getSourceApiId() {
        return Optional.ofNullable(this.sourceApiId);
    }
    public Optional<SubscriptionKeyParameterNamesContractResponse> getSubscriptionKeyParameterNames() {
        return Optional.ofNullable(this.subscriptionKeyParameterNames);
    }
    public Optional<Boolean> getSubscriptionRequired() {
        return Optional.ofNullable(this.subscriptionRequired);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String apiRevision;
        private @Nullable String apiRevisionDescription;
        private @Nullable String apiType;
        private @Nullable String apiVersion;
        private @Nullable String apiVersionDescription;
        private @Nullable ApiVersionSetContractDetailsResponse apiVersionSet;
        private @Nullable String apiVersionSetId;
        private @Nullable AuthenticationSettingsContractResponse authenticationSettings;
        private @Nullable String description;
        private @Nullable String displayName;
        private String id;
        private @Nullable Boolean isCurrent;
        private Boolean isOnline;
        private String name;
        private String path;
        private @Nullable List<String> protocols;
        private @Nullable String serviceUrl;
        private @Nullable String sourceApiId;
        private @Nullable SubscriptionKeyParameterNamesContractResponse subscriptionKeyParameterNames;
        private @Nullable Boolean subscriptionRequired;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApiResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiRevision = defaults.apiRevision;
    	      this.apiRevisionDescription = defaults.apiRevisionDescription;
    	      this.apiType = defaults.apiType;
    	      this.apiVersion = defaults.apiVersion;
    	      this.apiVersionDescription = defaults.apiVersionDescription;
    	      this.apiVersionSet = defaults.apiVersionSet;
    	      this.apiVersionSetId = defaults.apiVersionSetId;
    	      this.authenticationSettings = defaults.authenticationSettings;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.isCurrent = defaults.isCurrent;
    	      this.isOnline = defaults.isOnline;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.protocols = defaults.protocols;
    	      this.serviceUrl = defaults.serviceUrl;
    	      this.sourceApiId = defaults.sourceApiId;
    	      this.subscriptionKeyParameterNames = defaults.subscriptionKeyParameterNames;
    	      this.subscriptionRequired = defaults.subscriptionRequired;
    	      this.type = defaults.type;
        }

        public Builder setApiRevision(@Nullable String apiRevision) {
            this.apiRevision = apiRevision;
            return this;
        }

        public Builder setApiRevisionDescription(@Nullable String apiRevisionDescription) {
            this.apiRevisionDescription = apiRevisionDescription;
            return this;
        }

        public Builder setApiType(@Nullable String apiType) {
            this.apiType = apiType;
            return this;
        }

        public Builder setApiVersion(@Nullable String apiVersion) {
            this.apiVersion = apiVersion;
            return this;
        }

        public Builder setApiVersionDescription(@Nullable String apiVersionDescription) {
            this.apiVersionDescription = apiVersionDescription;
            return this;
        }

        public Builder setApiVersionSet(@Nullable ApiVersionSetContractDetailsResponse apiVersionSet) {
            this.apiVersionSet = apiVersionSet;
            return this;
        }

        public Builder setApiVersionSetId(@Nullable String apiVersionSetId) {
            this.apiVersionSetId = apiVersionSetId;
            return this;
        }

        public Builder setAuthenticationSettings(@Nullable AuthenticationSettingsContractResponse authenticationSettings) {
            this.authenticationSettings = authenticationSettings;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIsCurrent(@Nullable Boolean isCurrent) {
            this.isCurrent = isCurrent;
            return this;
        }

        public Builder setIsOnline(Boolean isOnline) {
            this.isOnline = Objects.requireNonNull(isOnline);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPath(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }

        public Builder setProtocols(@Nullable List<String> protocols) {
            this.protocols = protocols;
            return this;
        }

        public Builder setServiceUrl(@Nullable String serviceUrl) {
            this.serviceUrl = serviceUrl;
            return this;
        }

        public Builder setSourceApiId(@Nullable String sourceApiId) {
            this.sourceApiId = sourceApiId;
            return this;
        }

        public Builder setSubscriptionKeyParameterNames(@Nullable SubscriptionKeyParameterNamesContractResponse subscriptionKeyParameterNames) {
            this.subscriptionKeyParameterNames = subscriptionKeyParameterNames;
            return this;
        }

        public Builder setSubscriptionRequired(@Nullable Boolean subscriptionRequired) {
            this.subscriptionRequired = subscriptionRequired;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetApiResult build() {
            return new GetApiResult(apiRevision, apiRevisionDescription, apiType, apiVersion, apiVersionDescription, apiVersionSet, apiVersionSetId, authenticationSettings, description, displayName, id, isCurrent, isOnline, name, path, protocols, serviceUrl, sourceApiId, subscriptionKeyParameterNames, subscriptionRequired, type);
        }
    }
}
