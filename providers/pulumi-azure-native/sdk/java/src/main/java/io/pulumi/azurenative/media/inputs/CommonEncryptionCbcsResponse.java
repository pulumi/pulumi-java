// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.azurenative.media.inputs.CbcsDrmConfigurationResponse;
import io.pulumi.azurenative.media.inputs.EnabledProtocolsResponse;
import io.pulumi.azurenative.media.inputs.StreamingPolicyContentKeysResponse;
import io.pulumi.azurenative.media.inputs.TrackSelectionResponse;
import io.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Class for CommonEncryptionCbcs encryption scheme
 * 
 */
public final class CommonEncryptionCbcsResponse extends io.pulumi.resources.InvokeArgs {

    public static final CommonEncryptionCbcsResponse Empty = new CommonEncryptionCbcsResponse();

    /**
     * Representing which tracks should not be encrypted
     * 
     */
    @Import(name="clearTracks")
      private final @Nullable List<TrackSelectionResponse> clearTracks;

    public List<TrackSelectionResponse> getClearTracks() {
        return this.clearTracks == null ? List.of() : this.clearTracks;
    }

    /**
     * Representing default content key for each encryption scheme and separate content keys for specific tracks
     * 
     */
    @Import(name="contentKeys")
      private final @Nullable StreamingPolicyContentKeysResponse contentKeys;

    public Optional<StreamingPolicyContentKeysResponse> getContentKeys() {
        return this.contentKeys == null ? Optional.empty() : Optional.ofNullable(this.contentKeys);
    }

    /**
     * Configuration of DRMs for current encryption scheme
     * 
     */
    @Import(name="drm")
      private final @Nullable CbcsDrmConfigurationResponse drm;

    public Optional<CbcsDrmConfigurationResponse> getDrm() {
        return this.drm == null ? Optional.empty() : Optional.ofNullable(this.drm);
    }

    /**
     * Representing supported protocols
     * 
     */
    @Import(name="enabledProtocols")
      private final @Nullable EnabledProtocolsResponse enabledProtocols;

    public Optional<EnabledProtocolsResponse> getEnabledProtocols() {
        return this.enabledProtocols == null ? Optional.empty() : Optional.ofNullable(this.enabledProtocols);
    }

    public CommonEncryptionCbcsResponse(
        @Nullable List<TrackSelectionResponse> clearTracks,
        @Nullable StreamingPolicyContentKeysResponse contentKeys,
        @Nullable CbcsDrmConfigurationResponse drm,
        @Nullable EnabledProtocolsResponse enabledProtocols) {
        this.clearTracks = clearTracks;
        this.contentKeys = contentKeys;
        this.drm = drm;
        this.enabledProtocols = enabledProtocols;
    }

    private CommonEncryptionCbcsResponse() {
        this.clearTracks = List.of();
        this.contentKeys = null;
        this.drm = null;
        this.enabledProtocols = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CommonEncryptionCbcsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<TrackSelectionResponse> clearTracks;
        private @Nullable StreamingPolicyContentKeysResponse contentKeys;
        private @Nullable CbcsDrmConfigurationResponse drm;
        private @Nullable EnabledProtocolsResponse enabledProtocols;

        public Builder() {
    	      // Empty
        }

        public Builder(CommonEncryptionCbcsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clearTracks = defaults.clearTracks;
    	      this.contentKeys = defaults.contentKeys;
    	      this.drm = defaults.drm;
    	      this.enabledProtocols = defaults.enabledProtocols;
        }

        public Builder clearTracks(@Nullable List<TrackSelectionResponse> clearTracks) {
            this.clearTracks = clearTracks;
            return this;
        }

        public Builder contentKeys(@Nullable StreamingPolicyContentKeysResponse contentKeys) {
            this.contentKeys = contentKeys;
            return this;
        }

        public Builder drm(@Nullable CbcsDrmConfigurationResponse drm) {
            this.drm = drm;
            return this;
        }

        public Builder enabledProtocols(@Nullable EnabledProtocolsResponse enabledProtocols) {
            this.enabledProtocols = enabledProtocols;
            return this;
        }
        public CommonEncryptionCbcsResponse build() {
            return new CommonEncryptionCbcsResponse(clearTracks, contentKeys, drm, enabledProtocols);
        }
    }
}
