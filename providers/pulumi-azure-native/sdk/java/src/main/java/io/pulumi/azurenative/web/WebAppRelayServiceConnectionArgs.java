// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebAppRelayServiceConnectionArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebAppRelayServiceConnectionArgs Empty = new WebAppRelayServiceConnectionArgs();

    @InputImport(name="biztalkUri")
    private final @Nullable Input<String> biztalkUri;

    public Input<String> getBiztalkUri() {
        return this.biztalkUri == null ? Input.empty() : this.biztalkUri;
    }

    @InputImport(name="entityConnectionString")
    private final @Nullable Input<String> entityConnectionString;

    public Input<String> getEntityConnectionString() {
        return this.entityConnectionString == null ? Input.empty() : this.entityConnectionString;
    }

    @InputImport(name="entityName")
    private final @Nullable Input<String> entityName;

    public Input<String> getEntityName() {
        return this.entityName == null ? Input.empty() : this.entityName;
    }

    @InputImport(name="hostname")
    private final @Nullable Input<String> hostname;

    public Input<String> getHostname() {
        return this.hostname == null ? Input.empty() : this.hostname;
    }

    /**
     * Kind of resource.
     * 
     */
    @InputImport(name="kind")
    private final @Nullable Input<String> kind;

    public Input<String> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    /**
     * Name of the app.
     * 
     */
    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="port")
    private final @Nullable Input<Integer> port;

    public Input<Integer> getPort() {
        return this.port == null ? Input.empty() : this.port;
    }

    @InputImport(name="resourceConnectionString")
    private final @Nullable Input<String> resourceConnectionString;

    public Input<String> getResourceConnectionString() {
        return this.resourceConnectionString == null ? Input.empty() : this.resourceConnectionString;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="resourceType")
    private final @Nullable Input<String> resourceType;

    public Input<String> getPropResourceType() {
        return this.resourceType == null ? Input.empty() : this.resourceType;
    }

    public WebAppRelayServiceConnectionArgs(
        @Nullable Input<String> biztalkUri,
        @Nullable Input<String> entityConnectionString,
        @Nullable Input<String> entityName,
        @Nullable Input<String> hostname,
        @Nullable Input<String> kind,
        Input<String> name,
        @Nullable Input<Integer> port,
        @Nullable Input<String> resourceConnectionString,
        Input<String> resourceGroupName,
        @Nullable Input<String> resourceType) {
        this.biztalkUri = biztalkUri;
        this.entityConnectionString = entityConnectionString;
        this.entityName = entityName;
        this.hostname = hostname;
        this.kind = kind;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.port = port;
        this.resourceConnectionString = resourceConnectionString;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceType = resourceType;
    }

    private WebAppRelayServiceConnectionArgs() {
        this.biztalkUri = Input.empty();
        this.entityConnectionString = Input.empty();
        this.entityName = Input.empty();
        this.hostname = Input.empty();
        this.kind = Input.empty();
        this.name = Input.empty();
        this.port = Input.empty();
        this.resourceConnectionString = Input.empty();
        this.resourceGroupName = Input.empty();
        this.resourceType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAppRelayServiceConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> biztalkUri;
        private @Nullable Input<String> entityConnectionString;
        private @Nullable Input<String> entityName;
        private @Nullable Input<String> hostname;
        private @Nullable Input<String> kind;
        private Input<String> name;
        private @Nullable Input<Integer> port;
        private @Nullable Input<String> resourceConnectionString;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> resourceType;

        public Builder() {
    	      // Empty
        }

        public Builder(WebAppRelayServiceConnectionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.biztalkUri = defaults.biztalkUri;
    	      this.entityConnectionString = defaults.entityConnectionString;
    	      this.entityName = defaults.entityName;
    	      this.hostname = defaults.hostname;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.port = defaults.port;
    	      this.resourceConnectionString = defaults.resourceConnectionString;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceType = defaults.resourceType;
        }

        public Builder setBiztalkUri(@Nullable Input<String> biztalkUri) {
            this.biztalkUri = biztalkUri;
            return this;
        }

        public Builder setBiztalkUri(@Nullable String biztalkUri) {
            this.biztalkUri = Input.ofNullable(biztalkUri);
            return this;
        }

        public Builder setEntityConnectionString(@Nullable Input<String> entityConnectionString) {
            this.entityConnectionString = entityConnectionString;
            return this;
        }

        public Builder setEntityConnectionString(@Nullable String entityConnectionString) {
            this.entityConnectionString = Input.ofNullable(entityConnectionString);
            return this;
        }

        public Builder setEntityName(@Nullable Input<String> entityName) {
            this.entityName = entityName;
            return this;
        }

        public Builder setEntityName(@Nullable String entityName) {
            this.entityName = Input.ofNullable(entityName);
            return this;
        }

        public Builder setHostname(@Nullable Input<String> hostname) {
            this.hostname = hostname;
            return this;
        }

        public Builder setHostname(@Nullable String hostname) {
            this.hostname = Input.ofNullable(hostname);
            return this;
        }

        public Builder setKind(@Nullable Input<String> kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setPort(@Nullable Input<Integer> port) {
            this.port = port;
            return this;
        }

        public Builder setPort(@Nullable Integer port) {
            this.port = Input.ofNullable(port);
            return this;
        }

        public Builder setResourceConnectionString(@Nullable Input<String> resourceConnectionString) {
            this.resourceConnectionString = resourceConnectionString;
            return this;
        }

        public Builder setResourceConnectionString(@Nullable String resourceConnectionString) {
            this.resourceConnectionString = Input.ofNullable(resourceConnectionString);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setResourceType(@Nullable Input<String> resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        public Builder setResourceType(@Nullable String resourceType) {
            this.resourceType = Input.ofNullable(resourceType);
            return this;
        }

        public WebAppRelayServiceConnectionArgs build() {
            return new WebAppRelayServiceConnectionArgs(biztalkUri, entityConnectionString, entityName, hostname, kind, name, port, resourceConnectionString, resourceGroupName, resourceType);
        }
    }
}
