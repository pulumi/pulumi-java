// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databricks.outputs;

import io.pulumi.azurenative.databricks.outputs.AddressSpaceResponse;
import io.pulumi.azurenative.databricks.outputs.VirtualNetworkPeeringPropertiesFormatResponseDatabricksVirtualNetwork;
import io.pulumi.azurenative.databricks.outputs.VirtualNetworkPeeringPropertiesFormatResponseRemoteVirtualNetwork;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetvNetPeeringResult {
    private final @Nullable Boolean allowForwardedTraffic;
    private final @Nullable Boolean allowGatewayTransit;
    private final @Nullable Boolean allowVirtualNetworkAccess;
    private final @Nullable AddressSpaceResponse databricksAddressSpace;
    private final @Nullable VirtualNetworkPeeringPropertiesFormatResponseDatabricksVirtualNetwork databricksVirtualNetwork;
    private final String id;
    private final String name;
    private final String peeringState;
    private final String provisioningState;
    private final @Nullable AddressSpaceResponse remoteAddressSpace;
    private final VirtualNetworkPeeringPropertiesFormatResponseRemoteVirtualNetwork remoteVirtualNetwork;
    private final String type;
    private final @Nullable Boolean useRemoteGateways;

    @OutputCustomType.Constructor({"allowForwardedTraffic","allowGatewayTransit","allowVirtualNetworkAccess","databricksAddressSpace","databricksVirtualNetwork","id","name","peeringState","provisioningState","remoteAddressSpace","remoteVirtualNetwork","type","useRemoteGateways"})
    private GetvNetPeeringResult(
        @Nullable Boolean allowForwardedTraffic,
        @Nullable Boolean allowGatewayTransit,
        @Nullable Boolean allowVirtualNetworkAccess,
        @Nullable AddressSpaceResponse databricksAddressSpace,
        @Nullable VirtualNetworkPeeringPropertiesFormatResponseDatabricksVirtualNetwork databricksVirtualNetwork,
        String id,
        String name,
        String peeringState,
        String provisioningState,
        @Nullable AddressSpaceResponse remoteAddressSpace,
        VirtualNetworkPeeringPropertiesFormatResponseRemoteVirtualNetwork remoteVirtualNetwork,
        String type,
        @Nullable Boolean useRemoteGateways) {
        this.allowForwardedTraffic = allowForwardedTraffic;
        this.allowGatewayTransit = allowGatewayTransit;
        this.allowVirtualNetworkAccess = allowVirtualNetworkAccess;
        this.databricksAddressSpace = databricksAddressSpace;
        this.databricksVirtualNetwork = databricksVirtualNetwork;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.peeringState = Objects.requireNonNull(peeringState);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.remoteAddressSpace = remoteAddressSpace;
        this.remoteVirtualNetwork = Objects.requireNonNull(remoteVirtualNetwork);
        this.type = Objects.requireNonNull(type);
        this.useRemoteGateways = useRemoteGateways;
    }

    public Optional<Boolean> getAllowForwardedTraffic() {
        return Optional.ofNullable(this.allowForwardedTraffic);
    }
    public Optional<Boolean> getAllowGatewayTransit() {
        return Optional.ofNullable(this.allowGatewayTransit);
    }
    public Optional<Boolean> getAllowVirtualNetworkAccess() {
        return Optional.ofNullable(this.allowVirtualNetworkAccess);
    }
    public Optional<AddressSpaceResponse> getDatabricksAddressSpace() {
        return Optional.ofNullable(this.databricksAddressSpace);
    }
    public Optional<VirtualNetworkPeeringPropertiesFormatResponseDatabricksVirtualNetwork> getDatabricksVirtualNetwork() {
        return Optional.ofNullable(this.databricksVirtualNetwork);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public String getPeeringState() {
        return this.peeringState;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<AddressSpaceResponse> getRemoteAddressSpace() {
        return Optional.ofNullable(this.remoteAddressSpace);
    }
    public VirtualNetworkPeeringPropertiesFormatResponseRemoteVirtualNetwork getRemoteVirtualNetwork() {
        return this.remoteVirtualNetwork;
    }
    public String getType() {
        return this.type;
    }
    public Optional<Boolean> getUseRemoteGateways() {
        return Optional.ofNullable(this.useRemoteGateways);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetvNetPeeringResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowForwardedTraffic;
        private @Nullable Boolean allowGatewayTransit;
        private @Nullable Boolean allowVirtualNetworkAccess;
        private @Nullable AddressSpaceResponse databricksAddressSpace;
        private @Nullable VirtualNetworkPeeringPropertiesFormatResponseDatabricksVirtualNetwork databricksVirtualNetwork;
        private String id;
        private String name;
        private String peeringState;
        private String provisioningState;
        private @Nullable AddressSpaceResponse remoteAddressSpace;
        private VirtualNetworkPeeringPropertiesFormatResponseRemoteVirtualNetwork remoteVirtualNetwork;
        private String type;
        private @Nullable Boolean useRemoteGateways;

        public Builder() {
    	      // Empty
        }

        public Builder(GetvNetPeeringResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowForwardedTraffic = defaults.allowForwardedTraffic;
    	      this.allowGatewayTransit = defaults.allowGatewayTransit;
    	      this.allowVirtualNetworkAccess = defaults.allowVirtualNetworkAccess;
    	      this.databricksAddressSpace = defaults.databricksAddressSpace;
    	      this.databricksVirtualNetwork = defaults.databricksVirtualNetwork;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.peeringState = defaults.peeringState;
    	      this.provisioningState = defaults.provisioningState;
    	      this.remoteAddressSpace = defaults.remoteAddressSpace;
    	      this.remoteVirtualNetwork = defaults.remoteVirtualNetwork;
    	      this.type = defaults.type;
    	      this.useRemoteGateways = defaults.useRemoteGateways;
        }

        public Builder setAllowForwardedTraffic(@Nullable Boolean allowForwardedTraffic) {
            this.allowForwardedTraffic = allowForwardedTraffic;
            return this;
        }

        public Builder setAllowGatewayTransit(@Nullable Boolean allowGatewayTransit) {
            this.allowGatewayTransit = allowGatewayTransit;
            return this;
        }

        public Builder setAllowVirtualNetworkAccess(@Nullable Boolean allowVirtualNetworkAccess) {
            this.allowVirtualNetworkAccess = allowVirtualNetworkAccess;
            return this;
        }

        public Builder setDatabricksAddressSpace(@Nullable AddressSpaceResponse databricksAddressSpace) {
            this.databricksAddressSpace = databricksAddressSpace;
            return this;
        }

        public Builder setDatabricksVirtualNetwork(@Nullable VirtualNetworkPeeringPropertiesFormatResponseDatabricksVirtualNetwork databricksVirtualNetwork) {
            this.databricksVirtualNetwork = databricksVirtualNetwork;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPeeringState(String peeringState) {
            this.peeringState = Objects.requireNonNull(peeringState);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRemoteAddressSpace(@Nullable AddressSpaceResponse remoteAddressSpace) {
            this.remoteAddressSpace = remoteAddressSpace;
            return this;
        }

        public Builder setRemoteVirtualNetwork(VirtualNetworkPeeringPropertiesFormatResponseRemoteVirtualNetwork remoteVirtualNetwork) {
            this.remoteVirtualNetwork = Objects.requireNonNull(remoteVirtualNetwork);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUseRemoteGateways(@Nullable Boolean useRemoteGateways) {
            this.useRemoteGateways = useRemoteGateways;
            return this;
        }

        public GetvNetPeeringResult build() {
            return new GetvNetPeeringResult(allowForwardedTraffic, allowGatewayTransit, allowVirtualNetworkAccess, databricksAddressSpace, databricksVirtualNetwork, id, name, peeringState, provisioningState, remoteAddressSpace, remoteVirtualNetwork, type, useRemoteGateways);
        }
    }
}
