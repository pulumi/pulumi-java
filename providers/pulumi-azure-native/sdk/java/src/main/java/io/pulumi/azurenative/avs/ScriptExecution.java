// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.avs;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.avs.ScriptExecutionArgs;
import io.pulumi.azurenative.avs.outputs.PSCredentialExecutionParameterResponse;
import io.pulumi.azurenative.avs.outputs.ScriptSecureStringExecutionParameterResponse;
import io.pulumi.azurenative.avs.outputs.ScriptStringExecutionParameterResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:avs:ScriptExecution")
public class ScriptExecution extends io.pulumi.resources.CustomResource {
    @OutputExport(name="errors", type=List.class, parameters={String.class})
    private Output<List<String>> errors;

    public Output<List<String>> getErrors() {
        return this.errors;
    }
    @OutputExport(name="failureReason", type=String.class, parameters={})
    private Output</* @Nullable */ String> failureReason;

    public Output</* @Nullable */ String> getFailureReason() {
        return this.failureReason;
    }
    @OutputExport(name="finishedAt", type=String.class, parameters={})
    private Output<String> finishedAt;

    public Output<String> getFinishedAt() {
        return this.finishedAt;
    }
    @OutputExport(name="hiddenParameters", type=List.class, parameters={Object.class})
    private Output</* @Nullable */ List<Object>> hiddenParameters;

    public Output</* @Nullable */ List<Object>> getHiddenParameters() {
        return this.hiddenParameters;
    }
    @OutputExport(name="information", type=List.class, parameters={String.class})
    private Output<List<String>> information;

    public Output<List<String>> getInformation() {
        return this.information;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="namedOutputs", type=Map.class, parameters={String.class, Object.class})
    private Output</* @Nullable */ Map<String,Object>> namedOutputs;

    public Output</* @Nullable */ Map<String,Object>> getNamedOutputs() {
        return this.namedOutputs;
    }
    @OutputExport(name="output", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> output;

    public Output</* @Nullable */ List<String>> getOutput() {
        return this.output;
    }
    @OutputExport(name="parameters", type=List.class, parameters={Object.class})
    private Output</* @Nullable */ List<Object>> parameters;

    public Output</* @Nullable */ List<Object>> getParameters() {
        return this.parameters;
    }
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    @OutputExport(name="retention", type=String.class, parameters={})
    private Output</* @Nullable */ String> retention;

    public Output</* @Nullable */ String> getRetention() {
        return this.retention;
    }
    @OutputExport(name="scriptCmdletId", type=String.class, parameters={})
    private Output</* @Nullable */ String> scriptCmdletId;

    public Output</* @Nullable */ String> getScriptCmdletId() {
        return this.scriptCmdletId;
    }
    @OutputExport(name="startedAt", type=String.class, parameters={})
    private Output<String> startedAt;

    public Output<String> getStartedAt() {
        return this.startedAt;
    }
    @OutputExport(name="submittedAt", type=String.class, parameters={})
    private Output<String> submittedAt;

    public Output<String> getSubmittedAt() {
        return this.submittedAt;
    }
    @OutputExport(name="timeout", type=String.class, parameters={})
    private Output<String> timeout;

    public Output<String> getTimeout() {
        return this.timeout;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="warnings", type=List.class, parameters={String.class})
    private Output<List<String>> warnings;

    public Output<List<String>> getWarnings() {
        return this.warnings;
    }

    public ScriptExecution(String name, ScriptExecutionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:avs:ScriptExecution", name, args == null ? ScriptExecutionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ScriptExecution(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:avs:ScriptExecution", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:avs/v20210601:ScriptExecution").build()),
                Input.of(Alias.builder().setType("azure-native:avs/v20211201:ScriptExecution").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static ScriptExecution get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ScriptExecution(name, id, options);
    }
}
