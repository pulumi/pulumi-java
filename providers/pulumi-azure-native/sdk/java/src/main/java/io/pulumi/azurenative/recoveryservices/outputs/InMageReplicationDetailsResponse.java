// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.outputs;

import io.pulumi.azurenative.recoveryservices.outputs.HealthErrorResponse;
import io.pulumi.azurenative.recoveryservices.outputs.InMageAgentDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.InMageProtectedDiskDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.InitialReplicationDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.OSDiskDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.VMNicDetailsResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class InMageReplicationDetailsResponse {
    private final @Nullable String activeSiteType;
    private final @Nullable InMageAgentDetailsResponse agentDetails;
    private final @Nullable String azureStorageAccountId;
    private final @Nullable Double compressedDataRateInMB;
    private final @Nullable Map<String,String> consistencyPoints;
    private final @Nullable List<String> datastores;
    private final @Nullable String discoveryType;
    private final @Nullable String diskResized;
    private final @Nullable String infrastructureVmId;
    private final String instanceType;
    private final @Nullable String ipAddress;
    private final @Nullable String lastHeartbeat;
    private final @Nullable String lastRpoCalculatedTime;
    private final @Nullable String lastUpdateReceivedTime;
    private final @Nullable String masterTargetId;
    private final @Nullable String multiVmGroupId;
    private final @Nullable String multiVmGroupName;
    private final @Nullable String multiVmSyncStatus;
    private final @Nullable OSDiskDetailsResponse osDetails;
    private final @Nullable String osVersion;
    private final @Nullable String processServerId;
    private final @Nullable List<InMageProtectedDiskDetailsResponse> protectedDisks;
    private final @Nullable String protectionStage;
    private final @Nullable String rebootAfterUpdateStatus;
    private final @Nullable String replicaId;
    private final @Nullable InitialReplicationDetailsResponse resyncDetails;
    private final @Nullable String retentionWindowEnd;
    private final @Nullable String retentionWindowStart;
    private final @Nullable Double rpoInSeconds;
    private final @Nullable Integer sourceVmCpuCount;
    private final @Nullable Integer sourceVmRamSizeInMB;
    private final @Nullable Double uncompressedDataRateInMB;
    private final @Nullable String vCenterInfrastructureId;
    private final @Nullable List<HealthErrorResponse> validationErrors;
    private final @Nullable String vmId;
    private final @Nullable List<VMNicDetailsResponse> vmNics;
    private final @Nullable String vmProtectionState;
    private final @Nullable String vmProtectionStateDescription;

    @OutputCustomType.Constructor({"activeSiteType","agentDetails","azureStorageAccountId","compressedDataRateInMB","consistencyPoints","datastores","discoveryType","diskResized","infrastructureVmId","instanceType","ipAddress","lastHeartbeat","lastRpoCalculatedTime","lastUpdateReceivedTime","masterTargetId","multiVmGroupId","multiVmGroupName","multiVmSyncStatus","osDetails","osVersion","processServerId","protectedDisks","protectionStage","rebootAfterUpdateStatus","replicaId","resyncDetails","retentionWindowEnd","retentionWindowStart","rpoInSeconds","sourceVmCpuCount","sourceVmRamSizeInMB","uncompressedDataRateInMB","vCenterInfrastructureId","validationErrors","vmId","vmNics","vmProtectionState","vmProtectionStateDescription"})
    private InMageReplicationDetailsResponse(
        @Nullable String activeSiteType,
        @Nullable InMageAgentDetailsResponse agentDetails,
        @Nullable String azureStorageAccountId,
        @Nullable Double compressedDataRateInMB,
        @Nullable Map<String,String> consistencyPoints,
        @Nullable List<String> datastores,
        @Nullable String discoveryType,
        @Nullable String diskResized,
        @Nullable String infrastructureVmId,
        String instanceType,
        @Nullable String ipAddress,
        @Nullable String lastHeartbeat,
        @Nullable String lastRpoCalculatedTime,
        @Nullable String lastUpdateReceivedTime,
        @Nullable String masterTargetId,
        @Nullable String multiVmGroupId,
        @Nullable String multiVmGroupName,
        @Nullable String multiVmSyncStatus,
        @Nullable OSDiskDetailsResponse osDetails,
        @Nullable String osVersion,
        @Nullable String processServerId,
        @Nullable List<InMageProtectedDiskDetailsResponse> protectedDisks,
        @Nullable String protectionStage,
        @Nullable String rebootAfterUpdateStatus,
        @Nullable String replicaId,
        @Nullable InitialReplicationDetailsResponse resyncDetails,
        @Nullable String retentionWindowEnd,
        @Nullable String retentionWindowStart,
        @Nullable Double rpoInSeconds,
        @Nullable Integer sourceVmCpuCount,
        @Nullable Integer sourceVmRamSizeInMB,
        @Nullable Double uncompressedDataRateInMB,
        @Nullable String vCenterInfrastructureId,
        @Nullable List<HealthErrorResponse> validationErrors,
        @Nullable String vmId,
        @Nullable List<VMNicDetailsResponse> vmNics,
        @Nullable String vmProtectionState,
        @Nullable String vmProtectionStateDescription) {
        this.activeSiteType = activeSiteType;
        this.agentDetails = agentDetails;
        this.azureStorageAccountId = azureStorageAccountId;
        this.compressedDataRateInMB = compressedDataRateInMB;
        this.consistencyPoints = consistencyPoints;
        this.datastores = datastores;
        this.discoveryType = discoveryType;
        this.diskResized = diskResized;
        this.infrastructureVmId = infrastructureVmId;
        this.instanceType = Objects.requireNonNull(instanceType);
        this.ipAddress = ipAddress;
        this.lastHeartbeat = lastHeartbeat;
        this.lastRpoCalculatedTime = lastRpoCalculatedTime;
        this.lastUpdateReceivedTime = lastUpdateReceivedTime;
        this.masterTargetId = masterTargetId;
        this.multiVmGroupId = multiVmGroupId;
        this.multiVmGroupName = multiVmGroupName;
        this.multiVmSyncStatus = multiVmSyncStatus;
        this.osDetails = osDetails;
        this.osVersion = osVersion;
        this.processServerId = processServerId;
        this.protectedDisks = protectedDisks;
        this.protectionStage = protectionStage;
        this.rebootAfterUpdateStatus = rebootAfterUpdateStatus;
        this.replicaId = replicaId;
        this.resyncDetails = resyncDetails;
        this.retentionWindowEnd = retentionWindowEnd;
        this.retentionWindowStart = retentionWindowStart;
        this.rpoInSeconds = rpoInSeconds;
        this.sourceVmCpuCount = sourceVmCpuCount;
        this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
        this.uncompressedDataRateInMB = uncompressedDataRateInMB;
        this.vCenterInfrastructureId = vCenterInfrastructureId;
        this.validationErrors = validationErrors;
        this.vmId = vmId;
        this.vmNics = vmNics;
        this.vmProtectionState = vmProtectionState;
        this.vmProtectionStateDescription = vmProtectionStateDescription;
    }

    public Optional<String> getActiveSiteType() {
        return Optional.ofNullable(this.activeSiteType);
    }
    public Optional<InMageAgentDetailsResponse> getAgentDetails() {
        return Optional.ofNullable(this.agentDetails);
    }
    public Optional<String> getAzureStorageAccountId() {
        return Optional.ofNullable(this.azureStorageAccountId);
    }
    public Optional<Double> getCompressedDataRateInMB() {
        return Optional.ofNullable(this.compressedDataRateInMB);
    }
    public Map<String,String> getConsistencyPoints() {
        return this.consistencyPoints == null ? Map.of() : this.consistencyPoints;
    }
    public List<String> getDatastores() {
        return this.datastores == null ? List.of() : this.datastores;
    }
    public Optional<String> getDiscoveryType() {
        return Optional.ofNullable(this.discoveryType);
    }
    public Optional<String> getDiskResized() {
        return Optional.ofNullable(this.diskResized);
    }
    public Optional<String> getInfrastructureVmId() {
        return Optional.ofNullable(this.infrastructureVmId);
    }
    public String getInstanceType() {
        return this.instanceType;
    }
    public Optional<String> getIpAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    public Optional<String> getLastHeartbeat() {
        return Optional.ofNullable(this.lastHeartbeat);
    }
    public Optional<String> getLastRpoCalculatedTime() {
        return Optional.ofNullable(this.lastRpoCalculatedTime);
    }
    public Optional<String> getLastUpdateReceivedTime() {
        return Optional.ofNullable(this.lastUpdateReceivedTime);
    }
    public Optional<String> getMasterTargetId() {
        return Optional.ofNullable(this.masterTargetId);
    }
    public Optional<String> getMultiVmGroupId() {
        return Optional.ofNullable(this.multiVmGroupId);
    }
    public Optional<String> getMultiVmGroupName() {
        return Optional.ofNullable(this.multiVmGroupName);
    }
    public Optional<String> getMultiVmSyncStatus() {
        return Optional.ofNullable(this.multiVmSyncStatus);
    }
    public Optional<OSDiskDetailsResponse> getOsDetails() {
        return Optional.ofNullable(this.osDetails);
    }
    public Optional<String> getOsVersion() {
        return Optional.ofNullable(this.osVersion);
    }
    public Optional<String> getProcessServerId() {
        return Optional.ofNullable(this.processServerId);
    }
    public List<InMageProtectedDiskDetailsResponse> getProtectedDisks() {
        return this.protectedDisks == null ? List.of() : this.protectedDisks;
    }
    public Optional<String> getProtectionStage() {
        return Optional.ofNullable(this.protectionStage);
    }
    public Optional<String> getRebootAfterUpdateStatus() {
        return Optional.ofNullable(this.rebootAfterUpdateStatus);
    }
    public Optional<String> getReplicaId() {
        return Optional.ofNullable(this.replicaId);
    }
    public Optional<InitialReplicationDetailsResponse> getResyncDetails() {
        return Optional.ofNullable(this.resyncDetails);
    }
    public Optional<String> getRetentionWindowEnd() {
        return Optional.ofNullable(this.retentionWindowEnd);
    }
    public Optional<String> getRetentionWindowStart() {
        return Optional.ofNullable(this.retentionWindowStart);
    }
    public Optional<Double> getRpoInSeconds() {
        return Optional.ofNullable(this.rpoInSeconds);
    }
    public Optional<Integer> getSourceVmCpuCount() {
        return Optional.ofNullable(this.sourceVmCpuCount);
    }
    public Optional<Integer> getSourceVmRamSizeInMB() {
        return Optional.ofNullable(this.sourceVmRamSizeInMB);
    }
    public Optional<Double> getUncompressedDataRateInMB() {
        return Optional.ofNullable(this.uncompressedDataRateInMB);
    }
    public Optional<String> getVCenterInfrastructureId() {
        return Optional.ofNullable(this.vCenterInfrastructureId);
    }
    public List<HealthErrorResponse> getValidationErrors() {
        return this.validationErrors == null ? List.of() : this.validationErrors;
    }
    public Optional<String> getVmId() {
        return Optional.ofNullable(this.vmId);
    }
    public List<VMNicDetailsResponse> getVmNics() {
        return this.vmNics == null ? List.of() : this.vmNics;
    }
    public Optional<String> getVmProtectionState() {
        return Optional.ofNullable(this.vmProtectionState);
    }
    public Optional<String> getVmProtectionStateDescription() {
        return Optional.ofNullable(this.vmProtectionStateDescription);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InMageReplicationDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String activeSiteType;
        private @Nullable InMageAgentDetailsResponse agentDetails;
        private @Nullable String azureStorageAccountId;
        private @Nullable Double compressedDataRateInMB;
        private @Nullable Map<String,String> consistencyPoints;
        private @Nullable List<String> datastores;
        private @Nullable String discoveryType;
        private @Nullable String diskResized;
        private @Nullable String infrastructureVmId;
        private String instanceType;
        private @Nullable String ipAddress;
        private @Nullable String lastHeartbeat;
        private @Nullable String lastRpoCalculatedTime;
        private @Nullable String lastUpdateReceivedTime;
        private @Nullable String masterTargetId;
        private @Nullable String multiVmGroupId;
        private @Nullable String multiVmGroupName;
        private @Nullable String multiVmSyncStatus;
        private @Nullable OSDiskDetailsResponse osDetails;
        private @Nullable String osVersion;
        private @Nullable String processServerId;
        private @Nullable List<InMageProtectedDiskDetailsResponse> protectedDisks;
        private @Nullable String protectionStage;
        private @Nullable String rebootAfterUpdateStatus;
        private @Nullable String replicaId;
        private @Nullable InitialReplicationDetailsResponse resyncDetails;
        private @Nullable String retentionWindowEnd;
        private @Nullable String retentionWindowStart;
        private @Nullable Double rpoInSeconds;
        private @Nullable Integer sourceVmCpuCount;
        private @Nullable Integer sourceVmRamSizeInMB;
        private @Nullable Double uncompressedDataRateInMB;
        private @Nullable String vCenterInfrastructureId;
        private @Nullable List<HealthErrorResponse> validationErrors;
        private @Nullable String vmId;
        private @Nullable List<VMNicDetailsResponse> vmNics;
        private @Nullable String vmProtectionState;
        private @Nullable String vmProtectionStateDescription;

        public Builder() {
    	      // Empty
        }

        public Builder(InMageReplicationDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeSiteType = defaults.activeSiteType;
    	      this.agentDetails = defaults.agentDetails;
    	      this.azureStorageAccountId = defaults.azureStorageAccountId;
    	      this.compressedDataRateInMB = defaults.compressedDataRateInMB;
    	      this.consistencyPoints = defaults.consistencyPoints;
    	      this.datastores = defaults.datastores;
    	      this.discoveryType = defaults.discoveryType;
    	      this.diskResized = defaults.diskResized;
    	      this.infrastructureVmId = defaults.infrastructureVmId;
    	      this.instanceType = defaults.instanceType;
    	      this.ipAddress = defaults.ipAddress;
    	      this.lastHeartbeat = defaults.lastHeartbeat;
    	      this.lastRpoCalculatedTime = defaults.lastRpoCalculatedTime;
    	      this.lastUpdateReceivedTime = defaults.lastUpdateReceivedTime;
    	      this.masterTargetId = defaults.masterTargetId;
    	      this.multiVmGroupId = defaults.multiVmGroupId;
    	      this.multiVmGroupName = defaults.multiVmGroupName;
    	      this.multiVmSyncStatus = defaults.multiVmSyncStatus;
    	      this.osDetails = defaults.osDetails;
    	      this.osVersion = defaults.osVersion;
    	      this.processServerId = defaults.processServerId;
    	      this.protectedDisks = defaults.protectedDisks;
    	      this.protectionStage = defaults.protectionStage;
    	      this.rebootAfterUpdateStatus = defaults.rebootAfterUpdateStatus;
    	      this.replicaId = defaults.replicaId;
    	      this.resyncDetails = defaults.resyncDetails;
    	      this.retentionWindowEnd = defaults.retentionWindowEnd;
    	      this.retentionWindowStart = defaults.retentionWindowStart;
    	      this.rpoInSeconds = defaults.rpoInSeconds;
    	      this.sourceVmCpuCount = defaults.sourceVmCpuCount;
    	      this.sourceVmRamSizeInMB = defaults.sourceVmRamSizeInMB;
    	      this.uncompressedDataRateInMB = defaults.uncompressedDataRateInMB;
    	      this.vCenterInfrastructureId = defaults.vCenterInfrastructureId;
    	      this.validationErrors = defaults.validationErrors;
    	      this.vmId = defaults.vmId;
    	      this.vmNics = defaults.vmNics;
    	      this.vmProtectionState = defaults.vmProtectionState;
    	      this.vmProtectionStateDescription = defaults.vmProtectionStateDescription;
        }

        public Builder setActiveSiteType(@Nullable String activeSiteType) {
            this.activeSiteType = activeSiteType;
            return this;
        }

        public Builder setAgentDetails(@Nullable InMageAgentDetailsResponse agentDetails) {
            this.agentDetails = agentDetails;
            return this;
        }

        public Builder setAzureStorageAccountId(@Nullable String azureStorageAccountId) {
            this.azureStorageAccountId = azureStorageAccountId;
            return this;
        }

        public Builder setCompressedDataRateInMB(@Nullable Double compressedDataRateInMB) {
            this.compressedDataRateInMB = compressedDataRateInMB;
            return this;
        }

        public Builder setConsistencyPoints(@Nullable Map<String,String> consistencyPoints) {
            this.consistencyPoints = consistencyPoints;
            return this;
        }

        public Builder setDatastores(@Nullable List<String> datastores) {
            this.datastores = datastores;
            return this;
        }

        public Builder setDiscoveryType(@Nullable String discoveryType) {
            this.discoveryType = discoveryType;
            return this;
        }

        public Builder setDiskResized(@Nullable String diskResized) {
            this.diskResized = diskResized;
            return this;
        }

        public Builder setInfrastructureVmId(@Nullable String infrastructureVmId) {
            this.infrastructureVmId = infrastructureVmId;
            return this;
        }

        public Builder setInstanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }

        public Builder setIpAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }

        public Builder setLastHeartbeat(@Nullable String lastHeartbeat) {
            this.lastHeartbeat = lastHeartbeat;
            return this;
        }

        public Builder setLastRpoCalculatedTime(@Nullable String lastRpoCalculatedTime) {
            this.lastRpoCalculatedTime = lastRpoCalculatedTime;
            return this;
        }

        public Builder setLastUpdateReceivedTime(@Nullable String lastUpdateReceivedTime) {
            this.lastUpdateReceivedTime = lastUpdateReceivedTime;
            return this;
        }

        public Builder setMasterTargetId(@Nullable String masterTargetId) {
            this.masterTargetId = masterTargetId;
            return this;
        }

        public Builder setMultiVmGroupId(@Nullable String multiVmGroupId) {
            this.multiVmGroupId = multiVmGroupId;
            return this;
        }

        public Builder setMultiVmGroupName(@Nullable String multiVmGroupName) {
            this.multiVmGroupName = multiVmGroupName;
            return this;
        }

        public Builder setMultiVmSyncStatus(@Nullable String multiVmSyncStatus) {
            this.multiVmSyncStatus = multiVmSyncStatus;
            return this;
        }

        public Builder setOsDetails(@Nullable OSDiskDetailsResponse osDetails) {
            this.osDetails = osDetails;
            return this;
        }

        public Builder setOsVersion(@Nullable String osVersion) {
            this.osVersion = osVersion;
            return this;
        }

        public Builder setProcessServerId(@Nullable String processServerId) {
            this.processServerId = processServerId;
            return this;
        }

        public Builder setProtectedDisks(@Nullable List<InMageProtectedDiskDetailsResponse> protectedDisks) {
            this.protectedDisks = protectedDisks;
            return this;
        }

        public Builder setProtectionStage(@Nullable String protectionStage) {
            this.protectionStage = protectionStage;
            return this;
        }

        public Builder setRebootAfterUpdateStatus(@Nullable String rebootAfterUpdateStatus) {
            this.rebootAfterUpdateStatus = rebootAfterUpdateStatus;
            return this;
        }

        public Builder setReplicaId(@Nullable String replicaId) {
            this.replicaId = replicaId;
            return this;
        }

        public Builder setResyncDetails(@Nullable InitialReplicationDetailsResponse resyncDetails) {
            this.resyncDetails = resyncDetails;
            return this;
        }

        public Builder setRetentionWindowEnd(@Nullable String retentionWindowEnd) {
            this.retentionWindowEnd = retentionWindowEnd;
            return this;
        }

        public Builder setRetentionWindowStart(@Nullable String retentionWindowStart) {
            this.retentionWindowStart = retentionWindowStart;
            return this;
        }

        public Builder setRpoInSeconds(@Nullable Double rpoInSeconds) {
            this.rpoInSeconds = rpoInSeconds;
            return this;
        }

        public Builder setSourceVmCpuCount(@Nullable Integer sourceVmCpuCount) {
            this.sourceVmCpuCount = sourceVmCpuCount;
            return this;
        }

        public Builder setSourceVmRamSizeInMB(@Nullable Integer sourceVmRamSizeInMB) {
            this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
            return this;
        }

        public Builder setUncompressedDataRateInMB(@Nullable Double uncompressedDataRateInMB) {
            this.uncompressedDataRateInMB = uncompressedDataRateInMB;
            return this;
        }

        public Builder setVCenterInfrastructureId(@Nullable String vCenterInfrastructureId) {
            this.vCenterInfrastructureId = vCenterInfrastructureId;
            return this;
        }

        public Builder setValidationErrors(@Nullable List<HealthErrorResponse> validationErrors) {
            this.validationErrors = validationErrors;
            return this;
        }

        public Builder setVmId(@Nullable String vmId) {
            this.vmId = vmId;
            return this;
        }

        public Builder setVmNics(@Nullable List<VMNicDetailsResponse> vmNics) {
            this.vmNics = vmNics;
            return this;
        }

        public Builder setVmProtectionState(@Nullable String vmProtectionState) {
            this.vmProtectionState = vmProtectionState;
            return this;
        }

        public Builder setVmProtectionStateDescription(@Nullable String vmProtectionStateDescription) {
            this.vmProtectionStateDescription = vmProtectionStateDescription;
            return this;
        }

        public InMageReplicationDetailsResponse build() {
            return new InMageReplicationDetailsResponse(activeSiteType, agentDetails, azureStorageAccountId, compressedDataRateInMB, consistencyPoints, datastores, discoveryType, diskResized, infrastructureVmId, instanceType, ipAddress, lastHeartbeat, lastRpoCalculatedTime, lastUpdateReceivedTime, masterTargetId, multiVmGroupId, multiVmGroupName, multiVmSyncStatus, osDetails, osVersion, processServerId, protectedDisks, protectionStage, rebootAfterUpdateStatus, replicaId, resyncDetails, retentionWindowEnd, retentionWindowStart, rpoInSeconds, sourceVmCpuCount, sourceVmRamSizeInMB, uncompressedDataRateInMB, vCenterInfrastructureId, validationErrors, vmId, vmNics, vmProtectionState, vmProtectionStateDescription);
        }
    }
}
