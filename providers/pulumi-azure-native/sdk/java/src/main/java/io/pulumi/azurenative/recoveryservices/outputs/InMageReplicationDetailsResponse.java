// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.outputs;

import io.pulumi.azurenative.recoveryservices.outputs.HealthErrorResponse;
import io.pulumi.azurenative.recoveryservices.outputs.InMageAgentDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.InMageProtectedDiskDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.InitialReplicationDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.OSDiskDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.VMNicDetailsResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class InMageReplicationDetailsResponse {
    /**
     * The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
     * 
     */
    private final @Nullable String activeSiteType;
    /**
     * The agent details.
     * 
     */
    private final @Nullable InMageAgentDetailsResponse agentDetails;
    /**
     * A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
     * 
     */
    private final @Nullable String azureStorageAccountId;
    /**
     * The compressed data change rate in MB.
     * 
     */
    private final @Nullable Double compressedDataRateInMB;
    /**
     * The collection of Consistency points.
     * 
     */
    private final @Nullable Map<String,String> consistencyPoints;
    /**
     * The data stores of the on-premise machine Value can be list of strings that contain data store names
     * 
     */
    private final @Nullable List<String> datastores;
    /**
     * A value indicating the discovery type of the machine.
     * 
     */
    private final @Nullable String discoveryType;
    /**
     * A value indicating whether any disk is resized for this VM.
     * 
     */
    private final @Nullable String diskResized;
    /**
     * The infrastructure VM Id.
     * 
     */
    private final @Nullable String infrastructureVmId;
    /**
     * Gets the Instance type.
     * Expected value is 'InMage'.
     * 
     */
    private final String instanceType;
    /**
     * The source IP address.
     * 
     */
    private final @Nullable String ipAddress;
    /**
     * The last heartbeat received from the source server.
     * 
     */
    private final @Nullable String lastHeartbeat;
    /**
     * The last RPO calculated time.
     * 
     */
    private final @Nullable String lastRpoCalculatedTime;
    /**
     * The last update time received from on-prem components.
     * 
     */
    private final @Nullable String lastUpdateReceivedTime;
    /**
     * The master target Id.
     * 
     */
    private final @Nullable String masterTargetId;
    /**
     * The multi vm group Id, if any.
     * 
     */
    private final @Nullable String multiVmGroupId;
    /**
     * The multi vm group name, if any.
     * 
     */
    private final @Nullable String multiVmGroupName;
    /**
     * A value indicating whether the multi vm sync is enabled or disabled.
     * 
     */
    private final @Nullable String multiVmSyncStatus;
    /**
     * The OS details.
     * 
     */
    private final @Nullable OSDiskDetailsResponse osDetails;
    /**
     * The OS Version of the protected item.
     * 
     */
    private final @Nullable String osVersion;
    /**
     * The process server Id.
     * 
     */
    private final @Nullable String processServerId;
    /**
     * The list of protected disks.
     * 
     */
    private final @Nullable List<InMageProtectedDiskDetailsResponse> protectedDisks;
    /**
     * The protection stage.
     * 
     */
    private final @Nullable String protectionStage;
    /**
     * A value indicating whether the source server requires a restart after update.
     * 
     */
    private final @Nullable String rebootAfterUpdateStatus;
    /**
     * The replica id of the protected item.
     * 
     */
    private final @Nullable String replicaId;
    /**
     * The resync details of the machine
     * 
     */
    private final @Nullable InitialReplicationDetailsResponse resyncDetails;
    /**
     * The retention window end time.
     * 
     */
    private final @Nullable String retentionWindowEnd;
    /**
     * The retention window start time.
     * 
     */
    private final @Nullable String retentionWindowStart;
    /**
     * The RPO in seconds.
     * 
     */
    private final @Nullable Double rpoInSeconds;
    /**
     * The CPU count of the VM on the primary side.
     * 
     */
    private final @Nullable Integer sourceVmCpuCount;
    /**
     * The RAM size of the VM on the primary side.
     * 
     */
    private final @Nullable Integer sourceVmRamSizeInMB;
    /**
     * The uncompressed data change rate in MB.
     * 
     */
    private final @Nullable Double uncompressedDataRateInMB;
    /**
     * The vCenter infrastructure Id.
     * 
     */
    private final @Nullable String vCenterInfrastructureId;
    /**
     * The validation errors of the on-premise machine Value can be list of validation errors
     * 
     */
    private final @Nullable List<HealthErrorResponse> validationErrors;
    /**
     * The virtual machine Id.
     * 
     */
    private final @Nullable String vmId;
    /**
     * The PE Network details.
     * 
     */
    private final @Nullable List<VMNicDetailsResponse> vmNics;
    /**
     * The protection state for the vm.
     * 
     */
    private final @Nullable String vmProtectionState;
    /**
     * The protection state description for the vm.
     * 
     */
    private final @Nullable String vmProtectionStateDescription;

    @OutputCustomType.Constructor
    private InMageReplicationDetailsResponse(
        @OutputCustomType.Parameter("activeSiteType") @Nullable String activeSiteType,
        @OutputCustomType.Parameter("agentDetails") @Nullable InMageAgentDetailsResponse agentDetails,
        @OutputCustomType.Parameter("azureStorageAccountId") @Nullable String azureStorageAccountId,
        @OutputCustomType.Parameter("compressedDataRateInMB") @Nullable Double compressedDataRateInMB,
        @OutputCustomType.Parameter("consistencyPoints") @Nullable Map<String,String> consistencyPoints,
        @OutputCustomType.Parameter("datastores") @Nullable List<String> datastores,
        @OutputCustomType.Parameter("discoveryType") @Nullable String discoveryType,
        @OutputCustomType.Parameter("diskResized") @Nullable String diskResized,
        @OutputCustomType.Parameter("infrastructureVmId") @Nullable String infrastructureVmId,
        @OutputCustomType.Parameter("instanceType") String instanceType,
        @OutputCustomType.Parameter("ipAddress") @Nullable String ipAddress,
        @OutputCustomType.Parameter("lastHeartbeat") @Nullable String lastHeartbeat,
        @OutputCustomType.Parameter("lastRpoCalculatedTime") @Nullable String lastRpoCalculatedTime,
        @OutputCustomType.Parameter("lastUpdateReceivedTime") @Nullable String lastUpdateReceivedTime,
        @OutputCustomType.Parameter("masterTargetId") @Nullable String masterTargetId,
        @OutputCustomType.Parameter("multiVmGroupId") @Nullable String multiVmGroupId,
        @OutputCustomType.Parameter("multiVmGroupName") @Nullable String multiVmGroupName,
        @OutputCustomType.Parameter("multiVmSyncStatus") @Nullable String multiVmSyncStatus,
        @OutputCustomType.Parameter("osDetails") @Nullable OSDiskDetailsResponse osDetails,
        @OutputCustomType.Parameter("osVersion") @Nullable String osVersion,
        @OutputCustomType.Parameter("processServerId") @Nullable String processServerId,
        @OutputCustomType.Parameter("protectedDisks") @Nullable List<InMageProtectedDiskDetailsResponse> protectedDisks,
        @OutputCustomType.Parameter("protectionStage") @Nullable String protectionStage,
        @OutputCustomType.Parameter("rebootAfterUpdateStatus") @Nullable String rebootAfterUpdateStatus,
        @OutputCustomType.Parameter("replicaId") @Nullable String replicaId,
        @OutputCustomType.Parameter("resyncDetails") @Nullable InitialReplicationDetailsResponse resyncDetails,
        @OutputCustomType.Parameter("retentionWindowEnd") @Nullable String retentionWindowEnd,
        @OutputCustomType.Parameter("retentionWindowStart") @Nullable String retentionWindowStart,
        @OutputCustomType.Parameter("rpoInSeconds") @Nullable Double rpoInSeconds,
        @OutputCustomType.Parameter("sourceVmCpuCount") @Nullable Integer sourceVmCpuCount,
        @OutputCustomType.Parameter("sourceVmRamSizeInMB") @Nullable Integer sourceVmRamSizeInMB,
        @OutputCustomType.Parameter("uncompressedDataRateInMB") @Nullable Double uncompressedDataRateInMB,
        @OutputCustomType.Parameter("vCenterInfrastructureId") @Nullable String vCenterInfrastructureId,
        @OutputCustomType.Parameter("validationErrors") @Nullable List<HealthErrorResponse> validationErrors,
        @OutputCustomType.Parameter("vmId") @Nullable String vmId,
        @OutputCustomType.Parameter("vmNics") @Nullable List<VMNicDetailsResponse> vmNics,
        @OutputCustomType.Parameter("vmProtectionState") @Nullable String vmProtectionState,
        @OutputCustomType.Parameter("vmProtectionStateDescription") @Nullable String vmProtectionStateDescription) {
        this.activeSiteType = activeSiteType;
        this.agentDetails = agentDetails;
        this.azureStorageAccountId = azureStorageAccountId;
        this.compressedDataRateInMB = compressedDataRateInMB;
        this.consistencyPoints = consistencyPoints;
        this.datastores = datastores;
        this.discoveryType = discoveryType;
        this.diskResized = diskResized;
        this.infrastructureVmId = infrastructureVmId;
        this.instanceType = instanceType;
        this.ipAddress = ipAddress;
        this.lastHeartbeat = lastHeartbeat;
        this.lastRpoCalculatedTime = lastRpoCalculatedTime;
        this.lastUpdateReceivedTime = lastUpdateReceivedTime;
        this.masterTargetId = masterTargetId;
        this.multiVmGroupId = multiVmGroupId;
        this.multiVmGroupName = multiVmGroupName;
        this.multiVmSyncStatus = multiVmSyncStatus;
        this.osDetails = osDetails;
        this.osVersion = osVersion;
        this.processServerId = processServerId;
        this.protectedDisks = protectedDisks;
        this.protectionStage = protectionStage;
        this.rebootAfterUpdateStatus = rebootAfterUpdateStatus;
        this.replicaId = replicaId;
        this.resyncDetails = resyncDetails;
        this.retentionWindowEnd = retentionWindowEnd;
        this.retentionWindowStart = retentionWindowStart;
        this.rpoInSeconds = rpoInSeconds;
        this.sourceVmCpuCount = sourceVmCpuCount;
        this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
        this.uncompressedDataRateInMB = uncompressedDataRateInMB;
        this.vCenterInfrastructureId = vCenterInfrastructureId;
        this.validationErrors = validationErrors;
        this.vmId = vmId;
        this.vmNics = vmNics;
        this.vmProtectionState = vmProtectionState;
        this.vmProtectionStateDescription = vmProtectionStateDescription;
    }

    /**
     * The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
     * 
    */
    public Optional<String> getActiveSiteType() {
        return Optional.ofNullable(this.activeSiteType);
    }
    /**
     * The agent details.
     * 
    */
    public Optional<InMageAgentDetailsResponse> getAgentDetails() {
        return Optional.ofNullable(this.agentDetails);
    }
    /**
     * A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
     * 
    */
    public Optional<String> getAzureStorageAccountId() {
        return Optional.ofNullable(this.azureStorageAccountId);
    }
    /**
     * The compressed data change rate in MB.
     * 
    */
    public Optional<Double> getCompressedDataRateInMB() {
        return Optional.ofNullable(this.compressedDataRateInMB);
    }
    /**
     * The collection of Consistency points.
     * 
    */
    public Map<String,String> getConsistencyPoints() {
        return this.consistencyPoints == null ? Map.of() : this.consistencyPoints;
    }
    /**
     * The data stores of the on-premise machine Value can be list of strings that contain data store names
     * 
    */
    public List<String> getDatastores() {
        return this.datastores == null ? List.of() : this.datastores;
    }
    /**
     * A value indicating the discovery type of the machine.
     * 
    */
    public Optional<String> getDiscoveryType() {
        return Optional.ofNullable(this.discoveryType);
    }
    /**
     * A value indicating whether any disk is resized for this VM.
     * 
    */
    public Optional<String> getDiskResized() {
        return Optional.ofNullable(this.diskResized);
    }
    /**
     * The infrastructure VM Id.
     * 
    */
    public Optional<String> getInfrastructureVmId() {
        return Optional.ofNullable(this.infrastructureVmId);
    }
    /**
     * Gets the Instance type.
     * Expected value is 'InMage'.
     * 
    */
    public String getInstanceType() {
        return this.instanceType;
    }
    /**
     * The source IP address.
     * 
    */
    public Optional<String> getIpAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * The last heartbeat received from the source server.
     * 
    */
    public Optional<String> getLastHeartbeat() {
        return Optional.ofNullable(this.lastHeartbeat);
    }
    /**
     * The last RPO calculated time.
     * 
    */
    public Optional<String> getLastRpoCalculatedTime() {
        return Optional.ofNullable(this.lastRpoCalculatedTime);
    }
    /**
     * The last update time received from on-prem components.
     * 
    */
    public Optional<String> getLastUpdateReceivedTime() {
        return Optional.ofNullable(this.lastUpdateReceivedTime);
    }
    /**
     * The master target Id.
     * 
    */
    public Optional<String> getMasterTargetId() {
        return Optional.ofNullable(this.masterTargetId);
    }
    /**
     * The multi vm group Id, if any.
     * 
    */
    public Optional<String> getMultiVmGroupId() {
        return Optional.ofNullable(this.multiVmGroupId);
    }
    /**
     * The multi vm group name, if any.
     * 
    */
    public Optional<String> getMultiVmGroupName() {
        return Optional.ofNullable(this.multiVmGroupName);
    }
    /**
     * A value indicating whether the multi vm sync is enabled or disabled.
     * 
    */
    public Optional<String> getMultiVmSyncStatus() {
        return Optional.ofNullable(this.multiVmSyncStatus);
    }
    /**
     * The OS details.
     * 
    */
    public Optional<OSDiskDetailsResponse> getOsDetails() {
        return Optional.ofNullable(this.osDetails);
    }
    /**
     * The OS Version of the protected item.
     * 
    */
    public Optional<String> getOsVersion() {
        return Optional.ofNullable(this.osVersion);
    }
    /**
     * The process server Id.
     * 
    */
    public Optional<String> getProcessServerId() {
        return Optional.ofNullable(this.processServerId);
    }
    /**
     * The list of protected disks.
     * 
    */
    public List<InMageProtectedDiskDetailsResponse> getProtectedDisks() {
        return this.protectedDisks == null ? List.of() : this.protectedDisks;
    }
    /**
     * The protection stage.
     * 
    */
    public Optional<String> getProtectionStage() {
        return Optional.ofNullable(this.protectionStage);
    }
    /**
     * A value indicating whether the source server requires a restart after update.
     * 
    */
    public Optional<String> getRebootAfterUpdateStatus() {
        return Optional.ofNullable(this.rebootAfterUpdateStatus);
    }
    /**
     * The replica id of the protected item.
     * 
    */
    public Optional<String> getReplicaId() {
        return Optional.ofNullable(this.replicaId);
    }
    /**
     * The resync details of the machine
     * 
    */
    public Optional<InitialReplicationDetailsResponse> getResyncDetails() {
        return Optional.ofNullable(this.resyncDetails);
    }
    /**
     * The retention window end time.
     * 
    */
    public Optional<String> getRetentionWindowEnd() {
        return Optional.ofNullable(this.retentionWindowEnd);
    }
    /**
     * The retention window start time.
     * 
    */
    public Optional<String> getRetentionWindowStart() {
        return Optional.ofNullable(this.retentionWindowStart);
    }
    /**
     * The RPO in seconds.
     * 
    */
    public Optional<Double> getRpoInSeconds() {
        return Optional.ofNullable(this.rpoInSeconds);
    }
    /**
     * The CPU count of the VM on the primary side.
     * 
    */
    public Optional<Integer> getSourceVmCpuCount() {
        return Optional.ofNullable(this.sourceVmCpuCount);
    }
    /**
     * The RAM size of the VM on the primary side.
     * 
    */
    public Optional<Integer> getSourceVmRamSizeInMB() {
        return Optional.ofNullable(this.sourceVmRamSizeInMB);
    }
    /**
     * The uncompressed data change rate in MB.
     * 
    */
    public Optional<Double> getUncompressedDataRateInMB() {
        return Optional.ofNullable(this.uncompressedDataRateInMB);
    }
    /**
     * The vCenter infrastructure Id.
     * 
    */
    public Optional<String> getVCenterInfrastructureId() {
        return Optional.ofNullable(this.vCenterInfrastructureId);
    }
    /**
     * The validation errors of the on-premise machine Value can be list of validation errors
     * 
    */
    public List<HealthErrorResponse> getValidationErrors() {
        return this.validationErrors == null ? List.of() : this.validationErrors;
    }
    /**
     * The virtual machine Id.
     * 
    */
    public Optional<String> getVmId() {
        return Optional.ofNullable(this.vmId);
    }
    /**
     * The PE Network details.
     * 
    */
    public List<VMNicDetailsResponse> getVmNics() {
        return this.vmNics == null ? List.of() : this.vmNics;
    }
    /**
     * The protection state for the vm.
     * 
    */
    public Optional<String> getVmProtectionState() {
        return Optional.ofNullable(this.vmProtectionState);
    }
    /**
     * The protection state description for the vm.
     * 
    */
    public Optional<String> getVmProtectionStateDescription() {
        return Optional.ofNullable(this.vmProtectionStateDescription);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InMageReplicationDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String activeSiteType;
        private @Nullable InMageAgentDetailsResponse agentDetails;
        private @Nullable String azureStorageAccountId;
        private @Nullable Double compressedDataRateInMB;
        private @Nullable Map<String,String> consistencyPoints;
        private @Nullable List<String> datastores;
        private @Nullable String discoveryType;
        private @Nullable String diskResized;
        private @Nullable String infrastructureVmId;
        private String instanceType;
        private @Nullable String ipAddress;
        private @Nullable String lastHeartbeat;
        private @Nullable String lastRpoCalculatedTime;
        private @Nullable String lastUpdateReceivedTime;
        private @Nullable String masterTargetId;
        private @Nullable String multiVmGroupId;
        private @Nullable String multiVmGroupName;
        private @Nullable String multiVmSyncStatus;
        private @Nullable OSDiskDetailsResponse osDetails;
        private @Nullable String osVersion;
        private @Nullable String processServerId;
        private @Nullable List<InMageProtectedDiskDetailsResponse> protectedDisks;
        private @Nullable String protectionStage;
        private @Nullable String rebootAfterUpdateStatus;
        private @Nullable String replicaId;
        private @Nullable InitialReplicationDetailsResponse resyncDetails;
        private @Nullable String retentionWindowEnd;
        private @Nullable String retentionWindowStart;
        private @Nullable Double rpoInSeconds;
        private @Nullable Integer sourceVmCpuCount;
        private @Nullable Integer sourceVmRamSizeInMB;
        private @Nullable Double uncompressedDataRateInMB;
        private @Nullable String vCenterInfrastructureId;
        private @Nullable List<HealthErrorResponse> validationErrors;
        private @Nullable String vmId;
        private @Nullable List<VMNicDetailsResponse> vmNics;
        private @Nullable String vmProtectionState;
        private @Nullable String vmProtectionStateDescription;

        public Builder() {
    	      // Empty
        }

        public Builder(InMageReplicationDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeSiteType = defaults.activeSiteType;
    	      this.agentDetails = defaults.agentDetails;
    	      this.azureStorageAccountId = defaults.azureStorageAccountId;
    	      this.compressedDataRateInMB = defaults.compressedDataRateInMB;
    	      this.consistencyPoints = defaults.consistencyPoints;
    	      this.datastores = defaults.datastores;
    	      this.discoveryType = defaults.discoveryType;
    	      this.diskResized = defaults.diskResized;
    	      this.infrastructureVmId = defaults.infrastructureVmId;
    	      this.instanceType = defaults.instanceType;
    	      this.ipAddress = defaults.ipAddress;
    	      this.lastHeartbeat = defaults.lastHeartbeat;
    	      this.lastRpoCalculatedTime = defaults.lastRpoCalculatedTime;
    	      this.lastUpdateReceivedTime = defaults.lastUpdateReceivedTime;
    	      this.masterTargetId = defaults.masterTargetId;
    	      this.multiVmGroupId = defaults.multiVmGroupId;
    	      this.multiVmGroupName = defaults.multiVmGroupName;
    	      this.multiVmSyncStatus = defaults.multiVmSyncStatus;
    	      this.osDetails = defaults.osDetails;
    	      this.osVersion = defaults.osVersion;
    	      this.processServerId = defaults.processServerId;
    	      this.protectedDisks = defaults.protectedDisks;
    	      this.protectionStage = defaults.protectionStage;
    	      this.rebootAfterUpdateStatus = defaults.rebootAfterUpdateStatus;
    	      this.replicaId = defaults.replicaId;
    	      this.resyncDetails = defaults.resyncDetails;
    	      this.retentionWindowEnd = defaults.retentionWindowEnd;
    	      this.retentionWindowStart = defaults.retentionWindowStart;
    	      this.rpoInSeconds = defaults.rpoInSeconds;
    	      this.sourceVmCpuCount = defaults.sourceVmCpuCount;
    	      this.sourceVmRamSizeInMB = defaults.sourceVmRamSizeInMB;
    	      this.uncompressedDataRateInMB = defaults.uncompressedDataRateInMB;
    	      this.vCenterInfrastructureId = defaults.vCenterInfrastructureId;
    	      this.validationErrors = defaults.validationErrors;
    	      this.vmId = defaults.vmId;
    	      this.vmNics = defaults.vmNics;
    	      this.vmProtectionState = defaults.vmProtectionState;
    	      this.vmProtectionStateDescription = defaults.vmProtectionStateDescription;
        }

        public Builder setActiveSiteType(@Nullable String activeSiteType) {
            this.activeSiteType = activeSiteType;
            return this;
        }

        public Builder setAgentDetails(@Nullable InMageAgentDetailsResponse agentDetails) {
            this.agentDetails = agentDetails;
            return this;
        }

        public Builder setAzureStorageAccountId(@Nullable String azureStorageAccountId) {
            this.azureStorageAccountId = azureStorageAccountId;
            return this;
        }

        public Builder setCompressedDataRateInMB(@Nullable Double compressedDataRateInMB) {
            this.compressedDataRateInMB = compressedDataRateInMB;
            return this;
        }

        public Builder setConsistencyPoints(@Nullable Map<String,String> consistencyPoints) {
            this.consistencyPoints = consistencyPoints;
            return this;
        }

        public Builder setDatastores(@Nullable List<String> datastores) {
            this.datastores = datastores;
            return this;
        }

        public Builder setDiscoveryType(@Nullable String discoveryType) {
            this.discoveryType = discoveryType;
            return this;
        }

        public Builder setDiskResized(@Nullable String diskResized) {
            this.diskResized = diskResized;
            return this;
        }

        public Builder setInfrastructureVmId(@Nullable String infrastructureVmId) {
            this.infrastructureVmId = infrastructureVmId;
            return this;
        }

        public Builder setInstanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }

        public Builder setIpAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }

        public Builder setLastHeartbeat(@Nullable String lastHeartbeat) {
            this.lastHeartbeat = lastHeartbeat;
            return this;
        }

        public Builder setLastRpoCalculatedTime(@Nullable String lastRpoCalculatedTime) {
            this.lastRpoCalculatedTime = lastRpoCalculatedTime;
            return this;
        }

        public Builder setLastUpdateReceivedTime(@Nullable String lastUpdateReceivedTime) {
            this.lastUpdateReceivedTime = lastUpdateReceivedTime;
            return this;
        }

        public Builder setMasterTargetId(@Nullable String masterTargetId) {
            this.masterTargetId = masterTargetId;
            return this;
        }

        public Builder setMultiVmGroupId(@Nullable String multiVmGroupId) {
            this.multiVmGroupId = multiVmGroupId;
            return this;
        }

        public Builder setMultiVmGroupName(@Nullable String multiVmGroupName) {
            this.multiVmGroupName = multiVmGroupName;
            return this;
        }

        public Builder setMultiVmSyncStatus(@Nullable String multiVmSyncStatus) {
            this.multiVmSyncStatus = multiVmSyncStatus;
            return this;
        }

        public Builder setOsDetails(@Nullable OSDiskDetailsResponse osDetails) {
            this.osDetails = osDetails;
            return this;
        }

        public Builder setOsVersion(@Nullable String osVersion) {
            this.osVersion = osVersion;
            return this;
        }

        public Builder setProcessServerId(@Nullable String processServerId) {
            this.processServerId = processServerId;
            return this;
        }

        public Builder setProtectedDisks(@Nullable List<InMageProtectedDiskDetailsResponse> protectedDisks) {
            this.protectedDisks = protectedDisks;
            return this;
        }

        public Builder setProtectionStage(@Nullable String protectionStage) {
            this.protectionStage = protectionStage;
            return this;
        }

        public Builder setRebootAfterUpdateStatus(@Nullable String rebootAfterUpdateStatus) {
            this.rebootAfterUpdateStatus = rebootAfterUpdateStatus;
            return this;
        }

        public Builder setReplicaId(@Nullable String replicaId) {
            this.replicaId = replicaId;
            return this;
        }

        public Builder setResyncDetails(@Nullable InitialReplicationDetailsResponse resyncDetails) {
            this.resyncDetails = resyncDetails;
            return this;
        }

        public Builder setRetentionWindowEnd(@Nullable String retentionWindowEnd) {
            this.retentionWindowEnd = retentionWindowEnd;
            return this;
        }

        public Builder setRetentionWindowStart(@Nullable String retentionWindowStart) {
            this.retentionWindowStart = retentionWindowStart;
            return this;
        }

        public Builder setRpoInSeconds(@Nullable Double rpoInSeconds) {
            this.rpoInSeconds = rpoInSeconds;
            return this;
        }

        public Builder setSourceVmCpuCount(@Nullable Integer sourceVmCpuCount) {
            this.sourceVmCpuCount = sourceVmCpuCount;
            return this;
        }

        public Builder setSourceVmRamSizeInMB(@Nullable Integer sourceVmRamSizeInMB) {
            this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
            return this;
        }

        public Builder setUncompressedDataRateInMB(@Nullable Double uncompressedDataRateInMB) {
            this.uncompressedDataRateInMB = uncompressedDataRateInMB;
            return this;
        }

        public Builder setVCenterInfrastructureId(@Nullable String vCenterInfrastructureId) {
            this.vCenterInfrastructureId = vCenterInfrastructureId;
            return this;
        }

        public Builder setValidationErrors(@Nullable List<HealthErrorResponse> validationErrors) {
            this.validationErrors = validationErrors;
            return this;
        }

        public Builder setVmId(@Nullable String vmId) {
            this.vmId = vmId;
            return this;
        }

        public Builder setVmNics(@Nullable List<VMNicDetailsResponse> vmNics) {
            this.vmNics = vmNics;
            return this;
        }

        public Builder setVmProtectionState(@Nullable String vmProtectionState) {
            this.vmProtectionState = vmProtectionState;
            return this;
        }

        public Builder setVmProtectionStateDescription(@Nullable String vmProtectionStateDescription) {
            this.vmProtectionStateDescription = vmProtectionStateDescription;
            return this;
        }
        public InMageReplicationDetailsResponse build() {
            return new InMageReplicationDetailsResponse(activeSiteType, agentDetails, azureStorageAccountId, compressedDataRateInMB, consistencyPoints, datastores, discoveryType, diskResized, infrastructureVmId, instanceType, ipAddress, lastHeartbeat, lastRpoCalculatedTime, lastUpdateReceivedTime, masterTargetId, multiVmGroupId, multiVmGroupName, multiVmSyncStatus, osDetails, osVersion, processServerId, protectedDisks, protectionStage, rebootAfterUpdateStatus, replicaId, resyncDetails, retentionWindowEnd, retentionWindowStart, rpoInSeconds, sourceVmCpuCount, sourceVmRamSizeInMB, uncompressedDataRateInMB, vCenterInfrastructureId, validationErrors, vmId, vmNics, vmProtectionState, vmProtectionStateDescription);
        }
    }
}
