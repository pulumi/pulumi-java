// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.healthcareapis.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IotEventHubIngestionEndpointConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final IotEventHubIngestionEndpointConfigurationArgs Empty = new IotEventHubIngestionEndpointConfigurationArgs();

    @InputImport(name="consumerGroup")
    private final @Nullable Input<String> consumerGroup;

    public Input<String> getConsumerGroup() {
        return this.consumerGroup == null ? Input.empty() : this.consumerGroup;
    }

    @InputImport(name="eventHubName")
    private final @Nullable Input<String> eventHubName;

    public Input<String> getEventHubName() {
        return this.eventHubName == null ? Input.empty() : this.eventHubName;
    }

    @InputImport(name="fullyQualifiedEventHubNamespace")
    private final @Nullable Input<String> fullyQualifiedEventHubNamespace;

    public Input<String> getFullyQualifiedEventHubNamespace() {
        return this.fullyQualifiedEventHubNamespace == null ? Input.empty() : this.fullyQualifiedEventHubNamespace;
    }

    public IotEventHubIngestionEndpointConfigurationArgs(
        @Nullable Input<String> consumerGroup,
        @Nullable Input<String> eventHubName,
        @Nullable Input<String> fullyQualifiedEventHubNamespace) {
        this.consumerGroup = consumerGroup;
        this.eventHubName = eventHubName;
        this.fullyQualifiedEventHubNamespace = fullyQualifiedEventHubNamespace;
    }

    private IotEventHubIngestionEndpointConfigurationArgs() {
        this.consumerGroup = Input.empty();
        this.eventHubName = Input.empty();
        this.fullyQualifiedEventHubNamespace = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IotEventHubIngestionEndpointConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> consumerGroup;
        private @Nullable Input<String> eventHubName;
        private @Nullable Input<String> fullyQualifiedEventHubNamespace;

        public Builder() {
    	      // Empty
        }

        public Builder(IotEventHubIngestionEndpointConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerGroup = defaults.consumerGroup;
    	      this.eventHubName = defaults.eventHubName;
    	      this.fullyQualifiedEventHubNamespace = defaults.fullyQualifiedEventHubNamespace;
        }

        public Builder setConsumerGroup(@Nullable Input<String> consumerGroup) {
            this.consumerGroup = consumerGroup;
            return this;
        }

        public Builder setConsumerGroup(@Nullable String consumerGroup) {
            this.consumerGroup = Input.ofNullable(consumerGroup);
            return this;
        }

        public Builder setEventHubName(@Nullable Input<String> eventHubName) {
            this.eventHubName = eventHubName;
            return this;
        }

        public Builder setEventHubName(@Nullable String eventHubName) {
            this.eventHubName = Input.ofNullable(eventHubName);
            return this;
        }

        public Builder setFullyQualifiedEventHubNamespace(@Nullable Input<String> fullyQualifiedEventHubNamespace) {
            this.fullyQualifiedEventHubNamespace = fullyQualifiedEventHubNamespace;
            return this;
        }

        public Builder setFullyQualifiedEventHubNamespace(@Nullable String fullyQualifiedEventHubNamespace) {
            this.fullyQualifiedEventHubNamespace = Input.ofNullable(fullyQualifiedEventHubNamespace);
            return this;
        }

        public IotEventHubIngestionEndpointConfigurationArgs build() {
            return new IotEventHubIngestionEndpointConfigurationArgs(consumerGroup, eventHubName, fullyQualifiedEventHubNamespace);
        }
    }
}
