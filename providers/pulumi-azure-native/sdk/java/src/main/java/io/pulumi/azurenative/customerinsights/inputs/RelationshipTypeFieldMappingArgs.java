// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Map a field of profile to its corresponding StrongId in Related Profile.
 * 
 */
public final class RelationshipTypeFieldMappingArgs extends io.pulumi.resources.ResourceArgs {

    public static final RelationshipTypeFieldMappingArgs Empty = new RelationshipTypeFieldMappingArgs();

    /**
     * Specifies the fieldName in profile.
     * 
     */
    @Import(name="profileFieldName", required=true)
      private final Output<String> profileFieldName;

    public Output<String> getProfileFieldName() {
        return this.profileFieldName;
    }

    /**
     * Specifies the KeyProperty (from StrongId) of the related profile.
     * 
     */
    @Import(name="relatedProfileKeyProperty", required=true)
      private final Output<String> relatedProfileKeyProperty;

    public Output<String> getRelatedProfileKeyProperty() {
        return this.relatedProfileKeyProperty;
    }

    public RelationshipTypeFieldMappingArgs(
        Output<String> profileFieldName,
        Output<String> relatedProfileKeyProperty) {
        this.profileFieldName = Objects.requireNonNull(profileFieldName, "expected parameter 'profileFieldName' to be non-null");
        this.relatedProfileKeyProperty = Objects.requireNonNull(relatedProfileKeyProperty, "expected parameter 'relatedProfileKeyProperty' to be non-null");
    }

    private RelationshipTypeFieldMappingArgs() {
        this.profileFieldName = Output.empty();
        this.relatedProfileKeyProperty = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RelationshipTypeFieldMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> profileFieldName;
        private Output<String> relatedProfileKeyProperty;

        public Builder() {
    	      // Empty
        }

        public Builder(RelationshipTypeFieldMappingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.profileFieldName = defaults.profileFieldName;
    	      this.relatedProfileKeyProperty = defaults.relatedProfileKeyProperty;
        }

        public Builder profileFieldName(Output<String> profileFieldName) {
            this.profileFieldName = Objects.requireNonNull(profileFieldName);
            return this;
        }

        public Builder profileFieldName(String profileFieldName) {
            this.profileFieldName = Output.of(Objects.requireNonNull(profileFieldName));
            return this;
        }

        public Builder relatedProfileKeyProperty(Output<String> relatedProfileKeyProperty) {
            this.relatedProfileKeyProperty = Objects.requireNonNull(relatedProfileKeyProperty);
            return this;
        }

        public Builder relatedProfileKeyProperty(String relatedProfileKeyProperty) {
            this.relatedProfileKeyProperty = Output.of(Objects.requireNonNull(relatedProfileKeyProperty));
            return this;
        }
        public RelationshipTypeFieldMappingArgs build() {
            return new RelationshipTypeFieldMappingArgs(profileFieldName, relatedProfileKeyProperty);
        }
    }
}
