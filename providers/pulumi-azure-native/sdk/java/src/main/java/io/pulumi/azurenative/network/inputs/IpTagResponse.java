// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpTagResponse extends io.pulumi.resources.InvokeArgs {

    public static final IpTagResponse Empty = new IpTagResponse();

    @InputImport(name="ipTagType")
    private final @Nullable String ipTagType;

    public Optional<String> getIpTagType() {
        return this.ipTagType == null ? Optional.empty() : Optional.ofNullable(this.ipTagType);
    }

    @InputImport(name="tag")
    private final @Nullable String tag;

    public Optional<String> getTag() {
        return this.tag == null ? Optional.empty() : Optional.ofNullable(this.tag);
    }

    public IpTagResponse(
        @Nullable String ipTagType,
        @Nullable String tag) {
        this.ipTagType = ipTagType;
        this.tag = tag;
    }

    private IpTagResponse() {
        this.ipTagType = null;
        this.tag = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IpTagResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String ipTagType;
        private @Nullable String tag;

        public Builder() {
    	      // Empty
        }

        public Builder(IpTagResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipTagType = defaults.ipTagType;
    	      this.tag = defaults.tag;
        }

        public Builder setIpTagType(@Nullable String ipTagType) {
            this.ipTagType = ipTagType;
            return this;
        }

        public Builder setTag(@Nullable String tag) {
            this.tag = tag;
            return this;
        }

        public IpTagResponse build() {
            return new IpTagResponse(ipTagType, tag);
        }
    }
}
