// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.subscription.inputs;

import io.pulumi.azurenative.subscription.enums.Workload;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Put subscription properties.
 * 
 */
public final class PutAliasRequestPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final PutAliasRequestPropertiesArgs Empty = new PutAliasRequestPropertiesArgs();

    /**
     * Determines whether subscription is fieldLed, partnerLed or LegacyEA
     * 
     */
    @InputImport(name="billingScope")
      private final @Nullable Input<String> billingScope;

    public Input<String> getBillingScope() {
        return this.billingScope == null ? Input.empty() : this.billingScope;
    }

    /**
     * The friendly name of the subscription.
     * 
     */
    @InputImport(name="displayName")
      private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * Reseller ID, basically MPN Id
     * 
     */
    @InputImport(name="resellerId")
      private final @Nullable Input<String> resellerId;

    public Input<String> getResellerId() {
        return this.resellerId == null ? Input.empty() : this.resellerId;
    }

    /**
     * This parameter can be used to create alias for existing subscription Id
     * 
     */
    @InputImport(name="subscriptionId")
      private final @Nullable Input<String> subscriptionId;

    public Input<String> getSubscriptionId() {
        return this.subscriptionId == null ? Input.empty() : this.subscriptionId;
    }

    /**
     * The workload type of the subscription. It can be either Production or DevTest.
     * 
     */
    @InputImport(name="workload")
      private final @Nullable Input<Either<String,Workload>> workload;

    public Input<Either<String,Workload>> getWorkload() {
        return this.workload == null ? Input.empty() : this.workload;
    }

    public PutAliasRequestPropertiesArgs(
        @Nullable Input<String> billingScope,
        @Nullable Input<String> displayName,
        @Nullable Input<String> resellerId,
        @Nullable Input<String> subscriptionId,
        @Nullable Input<Either<String,Workload>> workload) {
        this.billingScope = billingScope;
        this.displayName = displayName;
        this.resellerId = resellerId;
        this.subscriptionId = subscriptionId;
        this.workload = workload;
    }

    private PutAliasRequestPropertiesArgs() {
        this.billingScope = Input.empty();
        this.displayName = Input.empty();
        this.resellerId = Input.empty();
        this.subscriptionId = Input.empty();
        this.workload = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PutAliasRequestPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> billingScope;
        private @Nullable Input<String> displayName;
        private @Nullable Input<String> resellerId;
        private @Nullable Input<String> subscriptionId;
        private @Nullable Input<Either<String,Workload>> workload;

        public Builder() {
    	      // Empty
        }

        public Builder(PutAliasRequestPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingScope = defaults.billingScope;
    	      this.displayName = defaults.displayName;
    	      this.resellerId = defaults.resellerId;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.workload = defaults.workload;
        }

        public Builder billingScope(@Nullable Input<String> billingScope) {
            this.billingScope = billingScope;
            return this;
        }

        public Builder billingScope(@Nullable String billingScope) {
            this.billingScope = Input.ofNullable(billingScope);
            return this;
        }

        public Builder displayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder resellerId(@Nullable Input<String> resellerId) {
            this.resellerId = resellerId;
            return this;
        }

        public Builder resellerId(@Nullable String resellerId) {
            this.resellerId = Input.ofNullable(resellerId);
            return this;
        }

        public Builder subscriptionId(@Nullable Input<String> subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }

        public Builder subscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = Input.ofNullable(subscriptionId);
            return this;
        }

        public Builder workload(@Nullable Input<Either<String,Workload>> workload) {
            this.workload = workload;
            return this;
        }

        public Builder workload(@Nullable Either<String,Workload> workload) {
            this.workload = Input.ofNullable(workload);
            return this;
        }
        public PutAliasRequestPropertiesArgs build() {
            return new PutAliasRequestPropertiesArgs(billingScope, displayName, resellerId, subscriptionId, workload);
        }
    }
}
