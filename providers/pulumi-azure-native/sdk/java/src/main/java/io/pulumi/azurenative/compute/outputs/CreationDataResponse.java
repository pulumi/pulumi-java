// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.outputs;

import io.pulumi.azurenative.compute.outputs.ImageDiskReferenceResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class CreationDataResponse {
    private final String createOption;
    private final @Nullable ImageDiskReferenceResponse galleryImageReference;
    private final @Nullable ImageDiskReferenceResponse imageReference;
    private final @Nullable Integer logicalSectorSize;
    private final @Nullable String sourceResourceId;
    private final String sourceUniqueId;
    private final @Nullable String sourceUri;
    private final @Nullable String storageAccountId;
    private final @Nullable Double uploadSizeBytes;

    @OutputCustomType.Constructor({"createOption","galleryImageReference","imageReference","logicalSectorSize","sourceResourceId","sourceUniqueId","sourceUri","storageAccountId","uploadSizeBytes"})
    private CreationDataResponse(
        String createOption,
        @Nullable ImageDiskReferenceResponse galleryImageReference,
        @Nullable ImageDiskReferenceResponse imageReference,
        @Nullable Integer logicalSectorSize,
        @Nullable String sourceResourceId,
        String sourceUniqueId,
        @Nullable String sourceUri,
        @Nullable String storageAccountId,
        @Nullable Double uploadSizeBytes) {
        this.createOption = Objects.requireNonNull(createOption);
        this.galleryImageReference = galleryImageReference;
        this.imageReference = imageReference;
        this.logicalSectorSize = logicalSectorSize;
        this.sourceResourceId = sourceResourceId;
        this.sourceUniqueId = Objects.requireNonNull(sourceUniqueId);
        this.sourceUri = sourceUri;
        this.storageAccountId = storageAccountId;
        this.uploadSizeBytes = uploadSizeBytes;
    }

    public String getCreateOption() {
        return this.createOption;
    }
    public Optional<ImageDiskReferenceResponse> getGalleryImageReference() {
        return Optional.ofNullable(this.galleryImageReference);
    }
    public Optional<ImageDiskReferenceResponse> getImageReference() {
        return Optional.ofNullable(this.imageReference);
    }
    public Optional<Integer> getLogicalSectorSize() {
        return Optional.ofNullable(this.logicalSectorSize);
    }
    public Optional<String> getSourceResourceId() {
        return Optional.ofNullable(this.sourceResourceId);
    }
    public String getSourceUniqueId() {
        return this.sourceUniqueId;
    }
    public Optional<String> getSourceUri() {
        return Optional.ofNullable(this.sourceUri);
    }
    public Optional<String> getStorageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }
    public Optional<Double> getUploadSizeBytes() {
        return Optional.ofNullable(this.uploadSizeBytes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CreationDataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createOption;
        private @Nullable ImageDiskReferenceResponse galleryImageReference;
        private @Nullable ImageDiskReferenceResponse imageReference;
        private @Nullable Integer logicalSectorSize;
        private @Nullable String sourceResourceId;
        private String sourceUniqueId;
        private @Nullable String sourceUri;
        private @Nullable String storageAccountId;
        private @Nullable Double uploadSizeBytes;

        public Builder() {
    	      // Empty
        }

        public Builder(CreationDataResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createOption = defaults.createOption;
    	      this.galleryImageReference = defaults.galleryImageReference;
    	      this.imageReference = defaults.imageReference;
    	      this.logicalSectorSize = defaults.logicalSectorSize;
    	      this.sourceResourceId = defaults.sourceResourceId;
    	      this.sourceUniqueId = defaults.sourceUniqueId;
    	      this.sourceUri = defaults.sourceUri;
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.uploadSizeBytes = defaults.uploadSizeBytes;
        }

        public Builder setCreateOption(String createOption) {
            this.createOption = Objects.requireNonNull(createOption);
            return this;
        }

        public Builder setGalleryImageReference(@Nullable ImageDiskReferenceResponse galleryImageReference) {
            this.galleryImageReference = galleryImageReference;
            return this;
        }

        public Builder setImageReference(@Nullable ImageDiskReferenceResponse imageReference) {
            this.imageReference = imageReference;
            return this;
        }

        public Builder setLogicalSectorSize(@Nullable Integer logicalSectorSize) {
            this.logicalSectorSize = logicalSectorSize;
            return this;
        }

        public Builder setSourceResourceId(@Nullable String sourceResourceId) {
            this.sourceResourceId = sourceResourceId;
            return this;
        }

        public Builder setSourceUniqueId(String sourceUniqueId) {
            this.sourceUniqueId = Objects.requireNonNull(sourceUniqueId);
            return this;
        }

        public Builder setSourceUri(@Nullable String sourceUri) {
            this.sourceUri = sourceUri;
            return this;
        }

        public Builder setStorageAccountId(@Nullable String storageAccountId) {
            this.storageAccountId = storageAccountId;
            return this;
        }

        public Builder setUploadSizeBytes(@Nullable Double uploadSizeBytes) {
            this.uploadSizeBytes = uploadSizeBytes;
            return this;
        }

        public CreationDataResponse build() {
            return new CreationDataResponse(createOption, galleryImageReference, imageReference, logicalSectorSize, sourceResourceId, sourceUniqueId, sourceUri, storageAccountId, uploadSizeBytes);
        }
    }
}
