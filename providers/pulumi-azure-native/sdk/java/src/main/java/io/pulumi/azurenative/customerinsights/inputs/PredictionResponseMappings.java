// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Definition of the link mapping of prediction.
 * 
 */
public final class PredictionResponseMappings extends io.pulumi.resources.InvokeArgs {

    public static final PredictionResponseMappings Empty = new PredictionResponseMappings();

    /**
     * The grade of the link mapping.
     * 
     */
    @Import(name="grade", required=true)
      private final String grade;

    public String grade() {
        return this.grade;
    }

    /**
     * The reason of the link mapping.
     * 
     */
    @Import(name="reason", required=true)
      private final String reason;

    public String reason() {
        return this.reason;
    }

    /**
     * The score of the link mapping.
     * 
     */
    @Import(name="score", required=true)
      private final String score;

    public String score() {
        return this.score;
    }

    public PredictionResponseMappings(
        String grade,
        String reason,
        String score) {
        this.grade = Objects.requireNonNull(grade, "expected parameter 'grade' to be non-null");
        this.reason = Objects.requireNonNull(reason, "expected parameter 'reason' to be non-null");
        this.score = Objects.requireNonNull(score, "expected parameter 'score' to be non-null");
    }

    private PredictionResponseMappings() {
        this.grade = null;
        this.reason = null;
        this.score = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PredictionResponseMappings defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String grade;
        private String reason;
        private String score;

        public Builder() {
    	      // Empty
        }

        public Builder(PredictionResponseMappings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.grade = defaults.grade;
    	      this.reason = defaults.reason;
    	      this.score = defaults.score;
        }

        public Builder grade(String grade) {
            this.grade = Objects.requireNonNull(grade);
            return this;
        }
        public Builder reason(String reason) {
            this.reason = Objects.requireNonNull(reason);
            return this;
        }
        public Builder score(String score) {
            this.score = Objects.requireNonNull(score);
            return this;
        }        public PredictionResponseMappings build() {
            return new PredictionResponseMappings(grade, reason, score);
        }
    }
}
