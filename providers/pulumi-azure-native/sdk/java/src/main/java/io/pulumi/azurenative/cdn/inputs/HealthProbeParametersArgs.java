// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn.inputs;

import io.pulumi.azurenative.cdn.enums.HealthProbeRequestType;
import io.pulumi.azurenative.cdn.enums.ProbeProtocol;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The JSON object that contains the properties to send health probes to origin.
 * 
 */
public final class HealthProbeParametersArgs extends io.pulumi.resources.ResourceArgs {

    public static final HealthProbeParametersArgs Empty = new HealthProbeParametersArgs();

    /**
     * The number of seconds between health probes.Default is 240sec.
     * 
     */
    @Import(name="probeIntervalInSeconds")
      private final @Nullable Output<Integer> probeIntervalInSeconds;

    public Output<Integer> getProbeIntervalInSeconds() {
        return this.probeIntervalInSeconds == null ? Output.empty() : this.probeIntervalInSeconds;
    }

    /**
     * The path relative to the origin that is used to determine the health of the origin.
     * 
     */
    @Import(name="probePath")
      private final @Nullable Output<String> probePath;

    public Output<String> getProbePath() {
        return this.probePath == null ? Output.empty() : this.probePath;
    }

    /**
     * Protocol to use for health probe.
     * 
     */
    @Import(name="probeProtocol")
      private final @Nullable Output<ProbeProtocol> probeProtocol;

    public Output<ProbeProtocol> getProbeProtocol() {
        return this.probeProtocol == null ? Output.empty() : this.probeProtocol;
    }

    /**
     * The type of health probe request that is made.
     * 
     */
    @Import(name="probeRequestType")
      private final @Nullable Output<HealthProbeRequestType> probeRequestType;

    public Output<HealthProbeRequestType> getProbeRequestType() {
        return this.probeRequestType == null ? Output.empty() : this.probeRequestType;
    }

    public HealthProbeParametersArgs(
        @Nullable Output<Integer> probeIntervalInSeconds,
        @Nullable Output<String> probePath,
        @Nullable Output<ProbeProtocol> probeProtocol,
        @Nullable Output<HealthProbeRequestType> probeRequestType) {
        this.probeIntervalInSeconds = probeIntervalInSeconds;
        this.probePath = probePath;
        this.probeProtocol = probeProtocol;
        this.probeRequestType = probeRequestType;
    }

    private HealthProbeParametersArgs() {
        this.probeIntervalInSeconds = Output.empty();
        this.probePath = Output.empty();
        this.probeProtocol = Output.empty();
        this.probeRequestType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HealthProbeParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> probeIntervalInSeconds;
        private @Nullable Output<String> probePath;
        private @Nullable Output<ProbeProtocol> probeProtocol;
        private @Nullable Output<HealthProbeRequestType> probeRequestType;

        public Builder() {
    	      // Empty
        }

        public Builder(HealthProbeParametersArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.probeIntervalInSeconds = defaults.probeIntervalInSeconds;
    	      this.probePath = defaults.probePath;
    	      this.probeProtocol = defaults.probeProtocol;
    	      this.probeRequestType = defaults.probeRequestType;
        }

        public Builder probeIntervalInSeconds(@Nullable Output<Integer> probeIntervalInSeconds) {
            this.probeIntervalInSeconds = probeIntervalInSeconds;
            return this;
        }
        public Builder probeIntervalInSeconds(@Nullable Integer probeIntervalInSeconds) {
            this.probeIntervalInSeconds = Output.ofNullable(probeIntervalInSeconds);
            return this;
        }
        public Builder probePath(@Nullable Output<String> probePath) {
            this.probePath = probePath;
            return this;
        }
        public Builder probePath(@Nullable String probePath) {
            this.probePath = Output.ofNullable(probePath);
            return this;
        }
        public Builder probeProtocol(@Nullable Output<ProbeProtocol> probeProtocol) {
            this.probeProtocol = probeProtocol;
            return this;
        }
        public Builder probeProtocol(@Nullable ProbeProtocol probeProtocol) {
            this.probeProtocol = Output.ofNullable(probeProtocol);
            return this;
        }
        public Builder probeRequestType(@Nullable Output<HealthProbeRequestType> probeRequestType) {
            this.probeRequestType = probeRequestType;
            return this;
        }
        public Builder probeRequestType(@Nullable HealthProbeRequestType probeRequestType) {
            this.probeRequestType = Output.ofNullable(probeRequestType);
            return this;
        }        public HealthProbeParametersArgs build() {
            return new HealthProbeParametersArgs(probeIntervalInSeconds, probePath, probeProtocol, probeRequestType);
        }
    }
}
