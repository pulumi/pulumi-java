// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.outputs;

import io.pulumi.azurenative.insights.outputs.RuleManagementEventDataSourceResponse;
import io.pulumi.azurenative.insights.outputs.RuleMetricDataSourceResponse;
import io.pulumi.core.Either;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ThresholdRuleConditionResponse {
    private final @Nullable Either<RuleManagementEventDataSourceResponse,RuleMetricDataSourceResponse> dataSource;
    private final String odataType;
    private final String operator;
    private final Double threshold;
    private final @Nullable String timeAggregation;
    private final @Nullable String windowSize;

    @OutputCustomType.Constructor({"dataSource","odataType","operator","threshold","timeAggregation","windowSize"})
    private ThresholdRuleConditionResponse(
        @Nullable Either<RuleManagementEventDataSourceResponse,RuleMetricDataSourceResponse> dataSource,
        String odataType,
        String operator,
        Double threshold,
        @Nullable String timeAggregation,
        @Nullable String windowSize) {
        this.dataSource = dataSource;
        this.odataType = Objects.requireNonNull(odataType);
        this.operator = Objects.requireNonNull(operator);
        this.threshold = Objects.requireNonNull(threshold);
        this.timeAggregation = timeAggregation;
        this.windowSize = windowSize;
    }

    public Optional<Either<RuleManagementEventDataSourceResponse,RuleMetricDataSourceResponse>> getDataSource() {
        return Optional.ofNullable(this.dataSource);
    }
    public String getOdataType() {
        return this.odataType;
    }
    public String getOperator() {
        return this.operator;
    }
    public Double getThreshold() {
        return this.threshold;
    }
    public Optional<String> getTimeAggregation() {
        return Optional.ofNullable(this.timeAggregation);
    }
    public Optional<String> getWindowSize() {
        return Optional.ofNullable(this.windowSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThresholdRuleConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Either<RuleManagementEventDataSourceResponse,RuleMetricDataSourceResponse> dataSource;
        private String odataType;
        private String operator;
        private Double threshold;
        private @Nullable String timeAggregation;
        private @Nullable String windowSize;

        public Builder() {
    	      // Empty
        }

        public Builder(ThresholdRuleConditionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSource = defaults.dataSource;
    	      this.odataType = defaults.odataType;
    	      this.operator = defaults.operator;
    	      this.threshold = defaults.threshold;
    	      this.timeAggregation = defaults.timeAggregation;
    	      this.windowSize = defaults.windowSize;
        }

        public Builder setDataSource(@Nullable Either<RuleManagementEventDataSourceResponse,RuleMetricDataSourceResponse> dataSource) {
            this.dataSource = dataSource;
            return this;
        }

        public Builder setOdataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder setOperator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }

        public Builder setThreshold(Double threshold) {
            this.threshold = Objects.requireNonNull(threshold);
            return this;
        }

        public Builder setTimeAggregation(@Nullable String timeAggregation) {
            this.timeAggregation = timeAggregation;
            return this;
        }

        public Builder setWindowSize(@Nullable String windowSize) {
            this.windowSize = windowSize;
            return this;
        }

        public ThresholdRuleConditionResponse build() {
            return new ThresholdRuleConditionResponse(dataSource, odataType, operator, threshold, timeAggregation, windowSize);
        }
    }
}
