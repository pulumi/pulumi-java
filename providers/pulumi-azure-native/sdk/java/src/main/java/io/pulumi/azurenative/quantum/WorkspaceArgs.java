// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.quantum;

import io.pulumi.azurenative.quantum.inputs.ProviderArgs;
import io.pulumi.azurenative.quantum.inputs.QuantumWorkspaceIdentityArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkspaceArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkspaceArgs Empty = new WorkspaceArgs();

    /**
     * Managed Identity information.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<QuantumWorkspaceIdentityArgs> identity;

    public Output<QuantumWorkspaceIdentityArgs> identity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * List of Providers selected for this Workspace
     * 
     */
    @Import(name="providers")
      private final @Nullable Output<List<ProviderArgs>> providers;

    public Output<List<ProviderArgs>> providers() {
        return this.providers == null ? Codegen.empty() : this.providers;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * ARM Resource Id of the storage account associated with this workspace.
     * 
     */
    @Import(name="storageAccount")
      private final @Nullable Output<String> storageAccount;

    public Output<String> storageAccount() {
        return this.storageAccount == null ? Codegen.empty() : this.storageAccount;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The name of the quantum workspace resource.
     * 
     */
    @Import(name="workspaceName")
      private final @Nullable Output<String> workspaceName;

    public Output<String> workspaceName() {
        return this.workspaceName == null ? Codegen.empty() : this.workspaceName;
    }

    public WorkspaceArgs(
        @Nullable Output<QuantumWorkspaceIdentityArgs> identity,
        @Nullable Output<String> location,
        @Nullable Output<List<ProviderArgs>> providers,
        Output<String> resourceGroupName,
        @Nullable Output<String> storageAccount,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> workspaceName) {
        this.identity = identity;
        this.location = location;
        this.providers = providers;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.storageAccount = storageAccount;
        this.tags = tags;
        this.workspaceName = workspaceName;
    }

    private WorkspaceArgs() {
        this.identity = Codegen.empty();
        this.location = Codegen.empty();
        this.providers = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.storageAccount = Codegen.empty();
        this.tags = Codegen.empty();
        this.workspaceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<QuantumWorkspaceIdentityArgs> identity;
        private @Nullable Output<String> location;
        private @Nullable Output<List<ProviderArgs>> providers;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> storageAccount;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkspaceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.providers = defaults.providers;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.storageAccount = defaults.storageAccount;
    	      this.tags = defaults.tags;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder identity(@Nullable Output<QuantumWorkspaceIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable QuantumWorkspaceIdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder providers(@Nullable Output<List<ProviderArgs>> providers) {
            this.providers = providers;
            return this;
        }
        public Builder providers(@Nullable List<ProviderArgs> providers) {
            this.providers = Codegen.ofNullable(providers);
            return this;
        }
        public Builder providers(ProviderArgs... providers) {
            return providers(List.of(providers));
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder storageAccount(@Nullable Output<String> storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }
        public Builder storageAccount(@Nullable String storageAccount) {
            this.storageAccount = Codegen.ofNullable(storageAccount);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder workspaceName(@Nullable Output<String> workspaceName) {
            this.workspaceName = workspaceName;
            return this;
        }
        public Builder workspaceName(@Nullable String workspaceName) {
            this.workspaceName = Codegen.ofNullable(workspaceName);
            return this;
        }        public WorkspaceArgs build() {
            return new WorkspaceArgs(identity, location, providers, resourceGroupName, storageAccount, tags, workspaceName);
        }
    }
}
