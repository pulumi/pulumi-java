// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.quantum;

import io.pulumi.azurenative.quantum.inputs.ProviderArgs;
import io.pulumi.azurenative.quantum.inputs.QuantumWorkspaceIdentityArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkspaceArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkspaceArgs Empty = new WorkspaceArgs();

    /**
     * Managed Identity information.
     * 
     */
    @InputImport(name="identity")
    private final @Nullable Input<QuantumWorkspaceIdentityArgs> identity;

    public Input<QuantumWorkspaceIdentityArgs> getIdentity() {
        return this.identity == null ? Input.empty() : this.identity;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * List of Providers selected for this Workspace
     * 
     */
    @InputImport(name="providers")
    private final @Nullable Input<List<ProviderArgs>> providers;

    public Input<List<ProviderArgs>> getProviders() {
        return this.providers == null ? Input.empty() : this.providers;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * ARM Resource Id of the storage account associated with this workspace.
     * 
     */
    @InputImport(name="storageAccount")
    private final @Nullable Input<String> storageAccount;

    public Input<String> getStorageAccount() {
        return this.storageAccount == null ? Input.empty() : this.storageAccount;
    }

    /**
     * Resource tags.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The name of the quantum workspace resource.
     * 
     */
    @InputImport(name="workspaceName")
    private final @Nullable Input<String> workspaceName;

    public Input<String> getWorkspaceName() {
        return this.workspaceName == null ? Input.empty() : this.workspaceName;
    }

    public WorkspaceArgs(
        @Nullable Input<QuantumWorkspaceIdentityArgs> identity,
        @Nullable Input<String> location,
        @Nullable Input<List<ProviderArgs>> providers,
        Input<String> resourceGroupName,
        @Nullable Input<String> storageAccount,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> workspaceName) {
        this.identity = identity;
        this.location = location;
        this.providers = providers;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.storageAccount = storageAccount;
        this.tags = tags;
        this.workspaceName = workspaceName;
    }

    private WorkspaceArgs() {
        this.identity = Input.empty();
        this.location = Input.empty();
        this.providers = Input.empty();
        this.resourceGroupName = Input.empty();
        this.storageAccount = Input.empty();
        this.tags = Input.empty();
        this.workspaceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<QuantumWorkspaceIdentityArgs> identity;
        private @Nullable Input<String> location;
        private @Nullable Input<List<ProviderArgs>> providers;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> storageAccount;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkspaceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.providers = defaults.providers;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.storageAccount = defaults.storageAccount;
    	      this.tags = defaults.tags;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder setIdentity(@Nullable Input<QuantumWorkspaceIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }

        public Builder setIdentity(@Nullable QuantumWorkspaceIdentityArgs identity) {
            this.identity = Input.ofNullable(identity);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setProviders(@Nullable Input<List<ProviderArgs>> providers) {
            this.providers = providers;
            return this;
        }

        public Builder setProviders(@Nullable List<ProviderArgs> providers) {
            this.providers = Input.ofNullable(providers);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setStorageAccount(@Nullable Input<String> storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }

        public Builder setStorageAccount(@Nullable String storageAccount) {
            this.storageAccount = Input.ofNullable(storageAccount);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setWorkspaceName(@Nullable Input<String> workspaceName) {
            this.workspaceName = workspaceName;
            return this;
        }

        public Builder setWorkspaceName(@Nullable String workspaceName) {
            this.workspaceName = Input.ofNullable(workspaceName);
            return this;
        }

        public WorkspaceArgs build() {
            return new WorkspaceArgs(identity, location, providers, resourceGroupName, storageAccount, tags, workspaceName);
        }
    }
}
