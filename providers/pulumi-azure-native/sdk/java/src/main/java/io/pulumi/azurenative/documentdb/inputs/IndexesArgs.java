// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb.inputs;

import io.pulumi.azurenative.documentdb.enums.DataType;
import io.pulumi.azurenative.documentdb.enums.IndexKind;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The indexes for the path.
 * 
 */
public final class IndexesArgs extends io.pulumi.resources.ResourceArgs {

    public static final IndexesArgs Empty = new IndexesArgs();

    /**
     * The datatype for which the indexing behavior is applied to.
     * 
     */
    @InputImport(name="dataType")
    private final @Nullable Input<Either<String,DataType>> dataType;

    public Input<Either<String,DataType>> getDataType() {
        return this.dataType == null ? Input.empty() : this.dataType;
    }

    /**
     * Indicates the type of index.
     * 
     */
    @InputImport(name="kind")
    private final @Nullable Input<Either<String,IndexKind>> kind;

    public Input<Either<String,IndexKind>> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    /**
     * The precision of the index. -1 is maximum precision.
     * 
     */
    @InputImport(name="precision")
    private final @Nullable Input<Integer> precision;

    public Input<Integer> getPrecision() {
        return this.precision == null ? Input.empty() : this.precision;
    }

    public IndexesArgs(
        @Nullable Input<Either<String,DataType>> dataType,
        @Nullable Input<Either<String,IndexKind>> kind,
        @Nullable Input<Integer> precision) {
        this.dataType = dataType == null ? Input.ofLeft("String") : dataType;
        this.kind = kind == null ? Input.ofLeft("Hash") : kind;
        this.precision = precision;
    }

    private IndexesArgs() {
        this.dataType = Input.empty();
        this.kind = Input.empty();
        this.precision = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IndexesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,DataType>> dataType;
        private @Nullable Input<Either<String,IndexKind>> kind;
        private @Nullable Input<Integer> precision;

        public Builder() {
    	      // Empty
        }

        public Builder(IndexesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataType = defaults.dataType;
    	      this.kind = defaults.kind;
    	      this.precision = defaults.precision;
        }

        public Builder setDataType(@Nullable Input<Either<String,DataType>> dataType) {
            this.dataType = dataType;
            return this;
        }

        public Builder setDataType(@Nullable Either<String,DataType> dataType) {
            this.dataType = Input.ofNullable(dataType);
            return this;
        }

        public Builder setKind(@Nullable Input<Either<String,IndexKind>> kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKind(@Nullable Either<String,IndexKind> kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder setPrecision(@Nullable Input<Integer> precision) {
            this.precision = precision;
            return this;
        }

        public Builder setPrecision(@Nullable Integer precision) {
            this.precision = Input.ofNullable(precision);
            return this;
        }

        public IndexesArgs build() {
            return new IndexesArgs(dataType, kind, precision);
        }
    }
}
