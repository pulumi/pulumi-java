// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.aadiam;

import io.pulumi.azurenative.aadiam.inputs.LogSettingsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DiagnosticSettingArgs extends io.pulumi.resources.ResourceArgs {

    public static final DiagnosticSettingArgs Empty = new DiagnosticSettingArgs();

    /**
     * The resource Id for the event hub authorization rule.
     * 
     */
    @InputImport(name="eventHubAuthorizationRuleId")
      private final @Nullable Output<String> eventHubAuthorizationRuleId;

    public Output<String> getEventHubAuthorizationRuleId() {
        return this.eventHubAuthorizationRuleId == null ? Output.empty() : this.eventHubAuthorizationRuleId;
    }

    /**
     * The name of the event hub. If none is specified, the default event hub will be selected.
     * 
     */
    @InputImport(name="eventHubName")
      private final @Nullable Output<String> eventHubName;

    public Output<String> getEventHubName() {
        return this.eventHubName == null ? Output.empty() : this.eventHubName;
    }

    /**
     * The list of logs settings.
     * 
     */
    @InputImport(name="logs")
      private final @Nullable Output<List<LogSettingsArgs>> logs;

    public Output<List<LogSettingsArgs>> getLogs() {
        return this.logs == null ? Output.empty() : this.logs;
    }

    /**
     * The name of the diagnostic setting.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
     * 
     */
    @InputImport(name="serviceBusRuleId")
      private final @Nullable Output<String> serviceBusRuleId;

    public Output<String> getServiceBusRuleId() {
        return this.serviceBusRuleId == null ? Output.empty() : this.serviceBusRuleId;
    }

    /**
     * The resource ID of the storage account to which you would like to send Diagnostic Logs.
     * 
     */
    @InputImport(name="storageAccountId")
      private final @Nullable Output<String> storageAccountId;

    public Output<String> getStorageAccountId() {
        return this.storageAccountId == null ? Output.empty() : this.storageAccountId;
    }

    /**
     * The workspace ID (resource ID of a Log Analytics workspace) for a Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
     * 
     */
    @InputImport(name="workspaceId")
      private final @Nullable Output<String> workspaceId;

    public Output<String> getWorkspaceId() {
        return this.workspaceId == null ? Output.empty() : this.workspaceId;
    }

    public DiagnosticSettingArgs(
        @Nullable Output<String> eventHubAuthorizationRuleId,
        @Nullable Output<String> eventHubName,
        @Nullable Output<List<LogSettingsArgs>> logs,
        @Nullable Output<String> name,
        @Nullable Output<String> serviceBusRuleId,
        @Nullable Output<String> storageAccountId,
        @Nullable Output<String> workspaceId) {
        this.eventHubAuthorizationRuleId = eventHubAuthorizationRuleId;
        this.eventHubName = eventHubName;
        this.logs = logs;
        this.name = name;
        this.serviceBusRuleId = serviceBusRuleId;
        this.storageAccountId = storageAccountId;
        this.workspaceId = workspaceId;
    }

    private DiagnosticSettingArgs() {
        this.eventHubAuthorizationRuleId = Output.empty();
        this.eventHubName = Output.empty();
        this.logs = Output.empty();
        this.name = Output.empty();
        this.serviceBusRuleId = Output.empty();
        this.storageAccountId = Output.empty();
        this.workspaceId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiagnosticSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> eventHubAuthorizationRuleId;
        private @Nullable Output<String> eventHubName;
        private @Nullable Output<List<LogSettingsArgs>> logs;
        private @Nullable Output<String> name;
        private @Nullable Output<String> serviceBusRuleId;
        private @Nullable Output<String> storageAccountId;
        private @Nullable Output<String> workspaceId;

        public Builder() {
    	      // Empty
        }

        public Builder(DiagnosticSettingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventHubAuthorizationRuleId = defaults.eventHubAuthorizationRuleId;
    	      this.eventHubName = defaults.eventHubName;
    	      this.logs = defaults.logs;
    	      this.name = defaults.name;
    	      this.serviceBusRuleId = defaults.serviceBusRuleId;
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.workspaceId = defaults.workspaceId;
        }

        public Builder eventHubAuthorizationRuleId(@Nullable Output<String> eventHubAuthorizationRuleId) {
            this.eventHubAuthorizationRuleId = eventHubAuthorizationRuleId;
            return this;
        }

        public Builder eventHubAuthorizationRuleId(@Nullable String eventHubAuthorizationRuleId) {
            this.eventHubAuthorizationRuleId = Output.ofNullable(eventHubAuthorizationRuleId);
            return this;
        }

        public Builder eventHubName(@Nullable Output<String> eventHubName) {
            this.eventHubName = eventHubName;
            return this;
        }

        public Builder eventHubName(@Nullable String eventHubName) {
            this.eventHubName = Output.ofNullable(eventHubName);
            return this;
        }

        public Builder logs(@Nullable Output<List<LogSettingsArgs>> logs) {
            this.logs = logs;
            return this;
        }

        public Builder logs(@Nullable List<LogSettingsArgs> logs) {
            this.logs = Output.ofNullable(logs);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder serviceBusRuleId(@Nullable Output<String> serviceBusRuleId) {
            this.serviceBusRuleId = serviceBusRuleId;
            return this;
        }

        public Builder serviceBusRuleId(@Nullable String serviceBusRuleId) {
            this.serviceBusRuleId = Output.ofNullable(serviceBusRuleId);
            return this;
        }

        public Builder storageAccountId(@Nullable Output<String> storageAccountId) {
            this.storageAccountId = storageAccountId;
            return this;
        }

        public Builder storageAccountId(@Nullable String storageAccountId) {
            this.storageAccountId = Output.ofNullable(storageAccountId);
            return this;
        }

        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            this.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceId(@Nullable String workspaceId) {
            this.workspaceId = Output.ofNullable(workspaceId);
            return this;
        }
        public DiagnosticSettingArgs build() {
            return new DiagnosticSettingArgs(eventHubAuthorizationRuleId, eventHubName, logs, name, serviceBusRuleId, storageAccountId, workspaceId);
        }
    }
}
