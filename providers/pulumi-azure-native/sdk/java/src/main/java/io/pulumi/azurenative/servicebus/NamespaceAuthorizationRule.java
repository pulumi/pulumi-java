// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicebus;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.servicebus.NamespaceAuthorizationRuleArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Description of a namespace authorization rule.
 * API Version: 2017-04-01.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### NameSpaceAuthorizationRuleCreate
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var namespaceAuthorizationRule = new AzureNative.ServiceBus.NamespaceAuthorizationRule("namespaceAuthorizationRule", new AzureNative.ServiceBus.NamespaceAuthorizationRuleArgs
 *         {
 *             AuthorizationRuleName = "sdk-AuthRules-1788",
 *             NamespaceName = "sdk-Namespace-6914",
 *             ResourceGroupName = "ArunMonocle",
 *             Rights = 
 *             {
 *                 "Listen",
 *                 "Send",
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	servicebus "github.com/pulumi/pulumi-azure-native/sdk/go/azure/servicebus"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := servicebus.NewNamespaceAuthorizationRule(ctx, "namespaceAuthorizationRule", &servicebus.NamespaceAuthorizationRuleArgs{
 * 			AuthorizationRuleName: pulumi.String("sdk-AuthRules-1788"),
 * 			NamespaceName:         pulumi.String("sdk-Namespace-6914"),
 * 			ResourceGroupName:     pulumi.String("ArunMonocle"),
 * 			Rights: servicebus.AccessRightsArray{
 * 				"Listen",
 * 				"Send",
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const namespaceAuthorizationRule = new azure_native.servicebus.NamespaceAuthorizationRule("namespaceAuthorizationRule", {
 *     authorizationRuleName: "sdk-AuthRules-1788",
 *     namespaceName: "sdk-Namespace-6914",
 *     resourceGroupName: "ArunMonocle",
 *     rights: [
 *         "Listen",
 *         "Send",
 *     ],
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * namespace_authorization_rule = azure_native.servicebus.NamespaceAuthorizationRule("namespaceAuthorizationRule",
 *     authorization_rule_name="sdk-AuthRules-1788",
 *     namespace_name="sdk-Namespace-6914",
 *     resource_group_name="ArunMonocle",
 *     rights=[
 *         "Listen",
 *         "Send",
 *     ])
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:servicebus:NamespaceAuthorizationRule sdk-AuthRules-1788 /subscriptions/5f750a97-50d9-4e36-8081-c9ee4c0210d4/resourceGroups/ArunMonocle/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-6914/AuthorizationRules/sdk-AuthRules-1788 
 * ```
 * 
 */
@ResourceType(type="azure-native:servicebus:NamespaceAuthorizationRule")
public class NamespaceAuthorizationRule extends io.pulumi.resources.CustomResource {
    /**
     * Resource name
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The rights associated with the rule.
     */
    @Export(name="rights", type=List.class, parameters={String.class})
    private Output<List<String>> rights;

    /**
     * @return The rights associated with the rule.
     */
    public Output<List<String>> getRights() {
        return this.rights;
    }
    /**
     * Resource type
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NamespaceAuthorizationRule(String name) {
        this(name, NamespaceAuthorizationRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NamespaceAuthorizationRule(String name, NamespaceAuthorizationRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NamespaceAuthorizationRule(String name, NamespaceAuthorizationRuleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicebus:NamespaceAuthorizationRule", name, args == null ? NamespaceAuthorizationRuleArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private NamespaceAuthorizationRule(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicebus:NamespaceAuthorizationRule", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:servicebus/v20140901:NamespaceAuthorizationRule").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20150801:NamespaceAuthorizationRule").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20170401:NamespaceAuthorizationRule").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20180101preview:NamespaceAuthorizationRule").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20210101preview:NamespaceAuthorizationRule").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20210601preview:NamespaceAuthorizationRule").build()),
                Output.of(Alias.builder().type("azure-native:servicebus/v20211101:NamespaceAuthorizationRule").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NamespaceAuthorizationRule get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new NamespaceAuthorizationRule(name, id, options);
    }
}
