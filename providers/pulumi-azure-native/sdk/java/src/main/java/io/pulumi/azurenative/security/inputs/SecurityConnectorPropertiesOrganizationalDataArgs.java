// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security.inputs;

import io.pulumi.azurenative.security.enums.OrganizationMembershipType;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The multi cloud account's organizational data
 * 
 */
public final class SecurityConnectorPropertiesOrganizationalDataArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecurityConnectorPropertiesOrganizationalDataArgs Empty = new SecurityConnectorPropertiesOrganizationalDataArgs();

    /**
     * If the multi cloud account is of membership type organization, list of accounts excluded from offering
     * 
     */
    @Import(name="excludedAccountIds")
      private final @Nullable Output<List<String>> excludedAccountIds;

    public Output<List<String>> getExcludedAccountIds() {
        return this.excludedAccountIds == null ? Output.empty() : this.excludedAccountIds;
    }

    /**
     * The multi cloud account's membership type in the organization
     * 
     */
    @Import(name="organizationMembershipType")
      private final @Nullable Output<Either<String,OrganizationMembershipType>> organizationMembershipType;

    public Output<Either<String,OrganizationMembershipType>> getOrganizationMembershipType() {
        return this.organizationMembershipType == null ? Output.empty() : this.organizationMembershipType;
    }

    /**
     * If the multi cloud account is not of membership type organization, this will be the ID of the account's parent
     * 
     */
    @Import(name="parentHierarchyId")
      private final @Nullable Output<String> parentHierarchyId;

    public Output<String> getParentHierarchyId() {
        return this.parentHierarchyId == null ? Output.empty() : this.parentHierarchyId;
    }

    /**
     * If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
     * 
     */
    @Import(name="stacksetName")
      private final @Nullable Output<String> stacksetName;

    public Output<String> getStacksetName() {
        return this.stacksetName == null ? Output.empty() : this.stacksetName;
    }

    public SecurityConnectorPropertiesOrganizationalDataArgs(
        @Nullable Output<List<String>> excludedAccountIds,
        @Nullable Output<Either<String,OrganizationMembershipType>> organizationMembershipType,
        @Nullable Output<String> parentHierarchyId,
        @Nullable Output<String> stacksetName) {
        this.excludedAccountIds = excludedAccountIds;
        this.organizationMembershipType = organizationMembershipType;
        this.parentHierarchyId = parentHierarchyId;
        this.stacksetName = stacksetName;
    }

    private SecurityConnectorPropertiesOrganizationalDataArgs() {
        this.excludedAccountIds = Output.empty();
        this.organizationMembershipType = Output.empty();
        this.parentHierarchyId = Output.empty();
        this.stacksetName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityConnectorPropertiesOrganizationalDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> excludedAccountIds;
        private @Nullable Output<Either<String,OrganizationMembershipType>> organizationMembershipType;
        private @Nullable Output<String> parentHierarchyId;
        private @Nullable Output<String> stacksetName;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityConnectorPropertiesOrganizationalDataArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludedAccountIds = defaults.excludedAccountIds;
    	      this.organizationMembershipType = defaults.organizationMembershipType;
    	      this.parentHierarchyId = defaults.parentHierarchyId;
    	      this.stacksetName = defaults.stacksetName;
        }

        public Builder excludedAccountIds(@Nullable Output<List<String>> excludedAccountIds) {
            this.excludedAccountIds = excludedAccountIds;
            return this;
        }

        public Builder excludedAccountIds(@Nullable List<String> excludedAccountIds) {
            this.excludedAccountIds = Output.ofNullable(excludedAccountIds);
            return this;
        }

        public Builder organizationMembershipType(@Nullable Output<Either<String,OrganizationMembershipType>> organizationMembershipType) {
            this.organizationMembershipType = organizationMembershipType;
            return this;
        }

        public Builder organizationMembershipType(@Nullable Either<String,OrganizationMembershipType> organizationMembershipType) {
            this.organizationMembershipType = Output.ofNullable(organizationMembershipType);
            return this;
        }

        public Builder parentHierarchyId(@Nullable Output<String> parentHierarchyId) {
            this.parentHierarchyId = parentHierarchyId;
            return this;
        }

        public Builder parentHierarchyId(@Nullable String parentHierarchyId) {
            this.parentHierarchyId = Output.ofNullable(parentHierarchyId);
            return this;
        }

        public Builder stacksetName(@Nullable Output<String> stacksetName) {
            this.stacksetName = stacksetName;
            return this;
        }

        public Builder stacksetName(@Nullable String stacksetName) {
            this.stacksetName = Output.ofNullable(stacksetName);
            return this;
        }
        public SecurityConnectorPropertiesOrganizationalDataArgs build() {
            return new SecurityConnectorPropertiesOrganizationalDataArgs(excludedAccountIds, organizationMembershipType, parentHierarchyId, stacksetName);
        }
    }
}
