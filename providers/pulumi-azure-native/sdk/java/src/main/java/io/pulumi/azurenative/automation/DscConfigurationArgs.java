// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation;

import io.pulumi.azurenative.automation.inputs.ContentSourceArgs;
import io.pulumi.azurenative.automation.inputs.DscConfigurationParameterArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DscConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DscConfigurationArgs Empty = new DscConfigurationArgs();

    /**
     * The name of the automation account.
     * 
     */
    @Import(name="automationAccountName", required=true)
      private final Output<String> automationAccountName;

    public Output<String> getAutomationAccountName() {
        return this.automationAccountName;
    }

    /**
     * The create or update parameters for configuration.
     * 
     */
    @Import(name="configurationName")
      private final @Nullable Output<String> configurationName;

    public Output<String> getConfigurationName() {
        return this.configurationName == null ? Output.empty() : this.configurationName;
    }

    /**
     * Gets or sets the description of the configuration.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Gets or sets the location of the resource.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Gets or sets progress log option.
     * 
     */
    @Import(name="logProgress")
      private final @Nullable Output<Boolean> logProgress;

    public Output<Boolean> getLogProgress() {
        return this.logProgress == null ? Output.empty() : this.logProgress;
    }

    /**
     * Gets or sets verbose log option.
     * 
     */
    @Import(name="logVerbose")
      private final @Nullable Output<Boolean> logVerbose;

    public Output<Boolean> getLogVerbose() {
        return this.logVerbose == null ? Output.empty() : this.logVerbose;
    }

    /**
     * Gets or sets name of the resource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Gets or sets the configuration parameters.
     * 
     */
    @Import(name="parameters")
      private final @Nullable Output<Map<String,DscConfigurationParameterArgs>> parameters;

    public Output<Map<String,DscConfigurationParameterArgs>> getParameters() {
        return this.parameters == null ? Output.empty() : this.parameters;
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the source.
     * 
     */
    @Import(name="source", required=true)
      private final Output<ContentSourceArgs> source;

    public Output<ContentSourceArgs> getSource() {
        return this.source;
    }

    /**
     * Gets or sets the tags attached to the resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public DscConfigurationArgs(
        Output<String> automationAccountName,
        @Nullable Output<String> configurationName,
        @Nullable Output<String> description,
        @Nullable Output<String> location,
        @Nullable Output<Boolean> logProgress,
        @Nullable Output<Boolean> logVerbose,
        @Nullable Output<String> name,
        @Nullable Output<Map<String,DscConfigurationParameterArgs>> parameters,
        Output<String> resourceGroupName,
        Output<ContentSourceArgs> source,
        @Nullable Output<Map<String,String>> tags) {
        this.automationAccountName = Objects.requireNonNull(automationAccountName, "expected parameter 'automationAccountName' to be non-null");
        this.configurationName = configurationName;
        this.description = description;
        this.location = location;
        this.logProgress = logProgress;
        this.logVerbose = logVerbose;
        this.name = name;
        this.parameters = parameters;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.source = Objects.requireNonNull(source, "expected parameter 'source' to be non-null");
        this.tags = tags;
    }

    private DscConfigurationArgs() {
        this.automationAccountName = Output.empty();
        this.configurationName = Output.empty();
        this.description = Output.empty();
        this.location = Output.empty();
        this.logProgress = Output.empty();
        this.logVerbose = Output.empty();
        this.name = Output.empty();
        this.parameters = Output.empty();
        this.resourceGroupName = Output.empty();
        this.source = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DscConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> automationAccountName;
        private @Nullable Output<String> configurationName;
        private @Nullable Output<String> description;
        private @Nullable Output<String> location;
        private @Nullable Output<Boolean> logProgress;
        private @Nullable Output<Boolean> logVerbose;
        private @Nullable Output<String> name;
        private @Nullable Output<Map<String,DscConfigurationParameterArgs>> parameters;
        private Output<String> resourceGroupName;
        private Output<ContentSourceArgs> source;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DscConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automationAccountName = defaults.automationAccountName;
    	      this.configurationName = defaults.configurationName;
    	      this.description = defaults.description;
    	      this.location = defaults.location;
    	      this.logProgress = defaults.logProgress;
    	      this.logVerbose = defaults.logVerbose;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.source = defaults.source;
    	      this.tags = defaults.tags;
        }

        public Builder automationAccountName(Output<String> automationAccountName) {
            this.automationAccountName = Objects.requireNonNull(automationAccountName);
            return this;
        }

        public Builder automationAccountName(String automationAccountName) {
            this.automationAccountName = Output.of(Objects.requireNonNull(automationAccountName));
            return this;
        }

        public Builder configurationName(@Nullable Output<String> configurationName) {
            this.configurationName = configurationName;
            return this;
        }

        public Builder configurationName(@Nullable String configurationName) {
            this.configurationName = Output.ofNullable(configurationName);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder logProgress(@Nullable Output<Boolean> logProgress) {
            this.logProgress = logProgress;
            return this;
        }

        public Builder logProgress(@Nullable Boolean logProgress) {
            this.logProgress = Output.ofNullable(logProgress);
            return this;
        }

        public Builder logVerbose(@Nullable Output<Boolean> logVerbose) {
            this.logVerbose = logVerbose;
            return this;
        }

        public Builder logVerbose(@Nullable Boolean logVerbose) {
            this.logVerbose = Output.ofNullable(logVerbose);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder parameters(@Nullable Output<Map<String,DscConfigurationParameterArgs>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder parameters(@Nullable Map<String,DscConfigurationParameterArgs> parameters) {
            this.parameters = Output.ofNullable(parameters);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder source(Output<ContentSourceArgs> source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder source(ContentSourceArgs source) {
            this.source = Output.of(Objects.requireNonNull(source));
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public DscConfigurationArgs build() {
            return new DscConfigurationArgs(automationAccountName, configurationName, description, location, logProgress, logVerbose, name, parameters, resourceGroupName, source, tags);
        }
    }
}
