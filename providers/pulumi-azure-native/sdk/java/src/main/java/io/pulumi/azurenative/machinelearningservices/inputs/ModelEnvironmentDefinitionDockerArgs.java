// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.inputs.ModelDockerSectionBaseImageRegistryArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The definition of a Docker container.
 * 
 */
public final class ModelEnvironmentDefinitionDockerArgs extends io.pulumi.resources.ResourceArgs {

    public static final ModelEnvironmentDefinitionDockerArgs Empty = new ModelEnvironmentDefinitionDockerArgs();

    /**
     * Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
     * 
     */
    @InputImport(name="baseDockerfile")
      private final @Nullable Output<String> baseDockerfile;

    public Output<String> getBaseDockerfile() {
        return this.baseDockerfile == null ? Output.empty() : this.baseDockerfile;
    }

    /**
     * Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
     * 
     */
    @InputImport(name="baseImage")
      private final @Nullable Output<String> baseImage;

    public Output<String> getBaseImage() {
        return this.baseImage == null ? Output.empty() : this.baseImage;
    }

    /**
     * Image registry that contains the base image.
     * 
     */
    @InputImport(name="baseImageRegistry")
      private final @Nullable Output<ModelDockerSectionBaseImageRegistryArgs> baseImageRegistry;

    public Output<ModelDockerSectionBaseImageRegistryArgs> getBaseImageRegistry() {
        return this.baseImageRegistry == null ? Output.empty() : this.baseImageRegistry;
    }

    public ModelEnvironmentDefinitionDockerArgs(
        @Nullable Output<String> baseDockerfile,
        @Nullable Output<String> baseImage,
        @Nullable Output<ModelDockerSectionBaseImageRegistryArgs> baseImageRegistry) {
        this.baseDockerfile = baseDockerfile;
        this.baseImage = baseImage;
        this.baseImageRegistry = baseImageRegistry;
    }

    private ModelEnvironmentDefinitionDockerArgs() {
        this.baseDockerfile = Output.empty();
        this.baseImage = Output.empty();
        this.baseImageRegistry = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelEnvironmentDefinitionDockerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> baseDockerfile;
        private @Nullable Output<String> baseImage;
        private @Nullable Output<ModelDockerSectionBaseImageRegistryArgs> baseImageRegistry;

        public Builder() {
    	      // Empty
        }

        public Builder(ModelEnvironmentDefinitionDockerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseDockerfile = defaults.baseDockerfile;
    	      this.baseImage = defaults.baseImage;
    	      this.baseImageRegistry = defaults.baseImageRegistry;
        }

        public Builder baseDockerfile(@Nullable Output<String> baseDockerfile) {
            this.baseDockerfile = baseDockerfile;
            return this;
        }

        public Builder baseDockerfile(@Nullable String baseDockerfile) {
            this.baseDockerfile = Output.ofNullable(baseDockerfile);
            return this;
        }

        public Builder baseImage(@Nullable Output<String> baseImage) {
            this.baseImage = baseImage;
            return this;
        }

        public Builder baseImage(@Nullable String baseImage) {
            this.baseImage = Output.ofNullable(baseImage);
            return this;
        }

        public Builder baseImageRegistry(@Nullable Output<ModelDockerSectionBaseImageRegistryArgs> baseImageRegistry) {
            this.baseImageRegistry = baseImageRegistry;
            return this;
        }

        public Builder baseImageRegistry(@Nullable ModelDockerSectionBaseImageRegistryArgs baseImageRegistry) {
            this.baseImageRegistry = Output.ofNullable(baseImageRegistry);
            return this;
        }
        public ModelEnvironmentDefinitionDockerArgs build() {
            return new ModelEnvironmentDefinitionDockerArgs(baseDockerfile, baseImage, baseImageRegistry);
        }
    }
}
