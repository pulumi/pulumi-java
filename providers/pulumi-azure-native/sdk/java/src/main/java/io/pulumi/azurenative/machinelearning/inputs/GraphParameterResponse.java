// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearning.inputs;

import io.pulumi.azurenative.machinelearning.inputs.GraphParameterLinkResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines a global parameter in the graph.
 * 
 */
public final class GraphParameterResponse extends io.pulumi.resources.InvokeArgs {

    public static final GraphParameterResponse Empty = new GraphParameterResponse();

    /**
     * Description of this graph parameter.
     * 
     */
    @InputImport(name="description")
      private final @Nullable String description;

    public Optional<String> getDescription() {
        return this.description == null ? Optional.empty() : Optional.ofNullable(this.description);
    }

    /**
     * Association links for this parameter to nodes in the graph.
     * 
     */
    @InputImport(name="links", required=true)
      private final List<GraphParameterLinkResponse> links;

    public List<GraphParameterLinkResponse> getLinks() {
        return this.links;
    }

    /**
     * Graph parameter's type.
     * 
     */
    @InputImport(name="type", required=true)
      private final String type;

    public String getType() {
        return this.type;
    }

    public GraphParameterResponse(
        @Nullable String description,
        List<GraphParameterLinkResponse> links,
        String type) {
        this.description = description;
        this.links = Objects.requireNonNull(links, "expected parameter 'links' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private GraphParameterResponse() {
        this.description = null;
        this.links = List.of();
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GraphParameterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private List<GraphParameterLinkResponse> links;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GraphParameterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.links = defaults.links;
    	      this.type = defaults.type;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setLinks(List<GraphParameterLinkResponse> links) {
            this.links = Objects.requireNonNull(links);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GraphParameterResponse build() {
            return new GraphParameterResponse(description, links, type);
        }
    }
}
