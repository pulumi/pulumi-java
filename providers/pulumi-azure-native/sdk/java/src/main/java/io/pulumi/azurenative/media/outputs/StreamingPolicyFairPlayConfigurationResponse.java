// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class StreamingPolicyFairPlayConfigurationResponse {
    private final Boolean allowPersistentLicense;
    private final @Nullable String customLicenseAcquisitionUrlTemplate;

    @OutputCustomType.Constructor({"allowPersistentLicense","customLicenseAcquisitionUrlTemplate"})
    private StreamingPolicyFairPlayConfigurationResponse(
        Boolean allowPersistentLicense,
        @Nullable String customLicenseAcquisitionUrlTemplate) {
        this.allowPersistentLicense = Objects.requireNonNull(allowPersistentLicense);
        this.customLicenseAcquisitionUrlTemplate = customLicenseAcquisitionUrlTemplate;
    }

    public Boolean getAllowPersistentLicense() {
        return this.allowPersistentLicense;
    }
    public Optional<String> getCustomLicenseAcquisitionUrlTemplate() {
        return Optional.ofNullable(this.customLicenseAcquisitionUrlTemplate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingPolicyFairPlayConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean allowPersistentLicense;
        private @Nullable String customLicenseAcquisitionUrlTemplate;

        public Builder() {
    	      // Empty
        }

        public Builder(StreamingPolicyFairPlayConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowPersistentLicense = defaults.allowPersistentLicense;
    	      this.customLicenseAcquisitionUrlTemplate = defaults.customLicenseAcquisitionUrlTemplate;
        }

        public Builder setAllowPersistentLicense(Boolean allowPersistentLicense) {
            this.allowPersistentLicense = Objects.requireNonNull(allowPersistentLicense);
            return this;
        }

        public Builder setCustomLicenseAcquisitionUrlTemplate(@Nullable String customLicenseAcquisitionUrlTemplate) {
            this.customLicenseAcquisitionUrlTemplate = customLicenseAcquisitionUrlTemplate;
            return this;
        }

        public StreamingPolicyFairPlayConfigurationResponse build() {
            return new StreamingPolicyFairPlayConfigurationResponse(allowPersistentLicense, customLicenseAcquisitionUrlTemplate);
        }
    }
}
