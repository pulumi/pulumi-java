// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.signalrservice.inputs;

import io.pulumi.azurenative.signalrservice.enums.SignalRSkuTier;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The billing information of the SignalR resource.
 * 
 */
public final class ResourceSkuArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourceSkuArgs Empty = new ResourceSkuArgs();

    /**
     * Optional, integer. The unit count of SignalR resource. 1 by default.
     * 
     * If present, following values are allowed:
     *     Free: 1
     *     Standard: 1,2,5,10,20,50,100
     * 
     */
    @InputImport(name="capacity")
      private final @Nullable Input<Integer> capacity;

    public Input<Integer> getCapacity() {
        return this.capacity == null ? Input.empty() : this.capacity;
    }

    /**
     * The name of the SKU. Required.
     * 
     * Allowed values: Standard_S1, Free_F1
     * 
     */
    @InputImport(name="name", required=true)
      private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    /**
     * Optional tier of this particular SKU. 'Standard' or 'Free'.
     * 
     * `Basic` is deprecated, use `Standard` instead.
     * 
     */
    @InputImport(name="tier")
      private final @Nullable Input<Either<String,SignalRSkuTier>> tier;

    public Input<Either<String,SignalRSkuTier>> getTier() {
        return this.tier == null ? Input.empty() : this.tier;
    }

    public ResourceSkuArgs(
        @Nullable Input<Integer> capacity,
        Input<String> name,
        @Nullable Input<Either<String,SignalRSkuTier>> tier) {
        this.capacity = capacity;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.tier = tier;
    }

    private ResourceSkuArgs() {
        this.capacity = Input.empty();
        this.name = Input.empty();
        this.tier = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceSkuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> capacity;
        private Input<String> name;
        private @Nullable Input<Either<String,SignalRSkuTier>> tier;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceSkuArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacity = defaults.capacity;
    	      this.name = defaults.name;
    	      this.tier = defaults.tier;
        }

        public Builder capacity(@Nullable Input<Integer> capacity) {
            this.capacity = capacity;
            return this;
        }

        public Builder capacity(@Nullable Integer capacity) {
            this.capacity = Input.ofNullable(capacity);
            return this;
        }

        public Builder name(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder name(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder tier(@Nullable Input<Either<String,SignalRSkuTier>> tier) {
            this.tier = tier;
            return this;
        }

        public Builder tier(@Nullable Either<String,SignalRSkuTier> tier) {
            this.tier = Input.ofNullable(tier);
            return this;
        }
        public ResourceSkuArgs build() {
            return new ResourceSkuArgs(capacity, name, tier);
        }
    }
}
