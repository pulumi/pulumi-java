// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.ManagedServiceIdentityResponse;
import io.pulumi.azurenative.web.outputs.ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse;
import io.pulumi.azurenative.web.outputs.SkuDescriptionResponse;
import io.pulumi.azurenative.web.outputs.StaticSiteBuildPropertiesResponse;
import io.pulumi.azurenative.web.outputs.StaticSiteTemplateOptionsResponse;
import io.pulumi.azurenative.web.outputs.StaticSiteUserProvidedFunctionAppResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetStaticSiteResult {
    private final @Nullable Boolean allowConfigFileUpdates;
    private final @Nullable String branch;
    private final @Nullable StaticSiteBuildPropertiesResponse buildProperties;
    private final String contentDistributionEndpoint;
    private final List<String> customDomains;
    private final String defaultHostname;
    private final String id;
    private final @Nullable ManagedServiceIdentityResponse identity;
    private final String keyVaultReferenceIdentity;
    private final @Nullable String kind;
    private final String location;
    private final String name;
    private final List<ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse> privateEndpointConnections;
    private final String provider;
    private final @Nullable String repositoryToken;
    private final @Nullable String repositoryUrl;
    private final @Nullable SkuDescriptionResponse sku;
    private final @Nullable String stagingEnvironmentPolicy;
    private final @Nullable Map<String,String> tags;
    private final @Nullable StaticSiteTemplateOptionsResponse templateProperties;
    private final String type;
    private final List<StaticSiteUserProvidedFunctionAppResponse> userProvidedFunctionApps;

    @OutputCustomType.Constructor({"allowConfigFileUpdates","branch","buildProperties","contentDistributionEndpoint","customDomains","defaultHostname","id","identity","keyVaultReferenceIdentity","kind","location","name","privateEndpointConnections","provider","repositoryToken","repositoryUrl","sku","stagingEnvironmentPolicy","tags","templateProperties","type","userProvidedFunctionApps"})
    private GetStaticSiteResult(
        @Nullable Boolean allowConfigFileUpdates,
        @Nullable String branch,
        @Nullable StaticSiteBuildPropertiesResponse buildProperties,
        String contentDistributionEndpoint,
        List<String> customDomains,
        String defaultHostname,
        String id,
        @Nullable ManagedServiceIdentityResponse identity,
        String keyVaultReferenceIdentity,
        @Nullable String kind,
        String location,
        String name,
        List<ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse> privateEndpointConnections,
        String provider,
        @Nullable String repositoryToken,
        @Nullable String repositoryUrl,
        @Nullable SkuDescriptionResponse sku,
        @Nullable String stagingEnvironmentPolicy,
        @Nullable Map<String,String> tags,
        @Nullable StaticSiteTemplateOptionsResponse templateProperties,
        String type,
        List<StaticSiteUserProvidedFunctionAppResponse> userProvidedFunctionApps) {
        this.allowConfigFileUpdates = allowConfigFileUpdates;
        this.branch = branch;
        this.buildProperties = buildProperties;
        this.contentDistributionEndpoint = Objects.requireNonNull(contentDistributionEndpoint);
        this.customDomains = Objects.requireNonNull(customDomains);
        this.defaultHostname = Objects.requireNonNull(defaultHostname);
        this.id = Objects.requireNonNull(id);
        this.identity = identity;
        this.keyVaultReferenceIdentity = Objects.requireNonNull(keyVaultReferenceIdentity);
        this.kind = kind;
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
        this.provider = Objects.requireNonNull(provider);
        this.repositoryToken = repositoryToken;
        this.repositoryUrl = repositoryUrl;
        this.sku = sku;
        this.stagingEnvironmentPolicy = stagingEnvironmentPolicy;
        this.tags = tags;
        this.templateProperties = templateProperties;
        this.type = Objects.requireNonNull(type);
        this.userProvidedFunctionApps = Objects.requireNonNull(userProvidedFunctionApps);
    }

    public Optional<Boolean> getAllowConfigFileUpdates() {
        return Optional.ofNullable(this.allowConfigFileUpdates);
    }
    public Optional<String> getBranch() {
        return Optional.ofNullable(this.branch);
    }
    public Optional<StaticSiteBuildPropertiesResponse> getBuildProperties() {
        return Optional.ofNullable(this.buildProperties);
    }
    public String getContentDistributionEndpoint() {
        return this.contentDistributionEndpoint;
    }
    public List<String> getCustomDomains() {
        return this.customDomains;
    }
    public String getDefaultHostname() {
        return this.defaultHostname;
    }
    public String getId() {
        return this.id;
    }
    public Optional<ManagedServiceIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public String getKeyVaultReferenceIdentity() {
        return this.keyVaultReferenceIdentity;
    }
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public List<ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse> getPrivateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    public String getProvider() {
        return this.provider;
    }
    public Optional<String> getRepositoryToken() {
        return Optional.ofNullable(this.repositoryToken);
    }
    public Optional<String> getRepositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }
    public Optional<SkuDescriptionResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public Optional<String> getStagingEnvironmentPolicy() {
        return Optional.ofNullable(this.stagingEnvironmentPolicy);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<StaticSiteTemplateOptionsResponse> getTemplateProperties() {
        return Optional.ofNullable(this.templateProperties);
    }
    public String getType() {
        return this.type;
    }
    public List<StaticSiteUserProvidedFunctionAppResponse> getUserProvidedFunctionApps() {
        return this.userProvidedFunctionApps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStaticSiteResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowConfigFileUpdates;
        private @Nullable String branch;
        private @Nullable StaticSiteBuildPropertiesResponse buildProperties;
        private String contentDistributionEndpoint;
        private List<String> customDomains;
        private String defaultHostname;
        private String id;
        private @Nullable ManagedServiceIdentityResponse identity;
        private String keyVaultReferenceIdentity;
        private @Nullable String kind;
        private String location;
        private String name;
        private List<ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse> privateEndpointConnections;
        private String provider;
        private @Nullable String repositoryToken;
        private @Nullable String repositoryUrl;
        private @Nullable SkuDescriptionResponse sku;
        private @Nullable String stagingEnvironmentPolicy;
        private @Nullable Map<String,String> tags;
        private @Nullable StaticSiteTemplateOptionsResponse templateProperties;
        private String type;
        private List<StaticSiteUserProvidedFunctionAppResponse> userProvidedFunctionApps;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStaticSiteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowConfigFileUpdates = defaults.allowConfigFileUpdates;
    	      this.branch = defaults.branch;
    	      this.buildProperties = defaults.buildProperties;
    	      this.contentDistributionEndpoint = defaults.contentDistributionEndpoint;
    	      this.customDomains = defaults.customDomains;
    	      this.defaultHostname = defaults.defaultHostname;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.keyVaultReferenceIdentity = defaults.keyVaultReferenceIdentity;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provider = defaults.provider;
    	      this.repositoryToken = defaults.repositoryToken;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.sku = defaults.sku;
    	      this.stagingEnvironmentPolicy = defaults.stagingEnvironmentPolicy;
    	      this.tags = defaults.tags;
    	      this.templateProperties = defaults.templateProperties;
    	      this.type = defaults.type;
    	      this.userProvidedFunctionApps = defaults.userProvidedFunctionApps;
        }

        public Builder setAllowConfigFileUpdates(@Nullable Boolean allowConfigFileUpdates) {
            this.allowConfigFileUpdates = allowConfigFileUpdates;
            return this;
        }

        public Builder setBranch(@Nullable String branch) {
            this.branch = branch;
            return this;
        }

        public Builder setBuildProperties(@Nullable StaticSiteBuildPropertiesResponse buildProperties) {
            this.buildProperties = buildProperties;
            return this;
        }

        public Builder setContentDistributionEndpoint(String contentDistributionEndpoint) {
            this.contentDistributionEndpoint = Objects.requireNonNull(contentDistributionEndpoint);
            return this;
        }

        public Builder setCustomDomains(List<String> customDomains) {
            this.customDomains = Objects.requireNonNull(customDomains);
            return this;
        }

        public Builder setDefaultHostname(String defaultHostname) {
            this.defaultHostname = Objects.requireNonNull(defaultHostname);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable ManagedServiceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setKeyVaultReferenceIdentity(String keyVaultReferenceIdentity) {
            this.keyVaultReferenceIdentity = Objects.requireNonNull(keyVaultReferenceIdentity);
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPrivateEndpointConnections(List<ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }

        public Builder setProvider(String provider) {
            this.provider = Objects.requireNonNull(provider);
            return this;
        }

        public Builder setRepositoryToken(@Nullable String repositoryToken) {
            this.repositoryToken = repositoryToken;
            return this;
        }

        public Builder setRepositoryUrl(@Nullable String repositoryUrl) {
            this.repositoryUrl = repositoryUrl;
            return this;
        }

        public Builder setSku(@Nullable SkuDescriptionResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setStagingEnvironmentPolicy(@Nullable String stagingEnvironmentPolicy) {
            this.stagingEnvironmentPolicy = stagingEnvironmentPolicy;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTemplateProperties(@Nullable StaticSiteTemplateOptionsResponse templateProperties) {
            this.templateProperties = templateProperties;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUserProvidedFunctionApps(List<StaticSiteUserProvidedFunctionAppResponse> userProvidedFunctionApps) {
            this.userProvidedFunctionApps = Objects.requireNonNull(userProvidedFunctionApps);
            return this;
        }

        public GetStaticSiteResult build() {
            return new GetStaticSiteResult(allowConfigFileUpdates, branch, buildProperties, contentDistributionEndpoint, customDomains, defaultHostname, id, identity, keyVaultReferenceIdentity, kind, location, name, privateEndpointConnections, provider, repositoryToken, repositoryUrl, sku, stagingEnvironmentPolicy, tags, templateProperties, type, userProvidedFunctionApps);
        }
    }
}
