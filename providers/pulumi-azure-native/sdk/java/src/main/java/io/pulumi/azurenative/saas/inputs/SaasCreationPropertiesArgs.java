// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.saas.inputs;

import io.pulumi.azurenative.saas.enums.PaymentChannelType;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * properties for creation saas
 * 
 */
public final class SaasCreationPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final SaasCreationPropertiesArgs Empty = new SaasCreationPropertiesArgs();

    /**
     * Whether the SaaS subscription will auto renew upon term end.
     * 
     */
    @Import(name="autoRenew")
      private final @Nullable Output<Boolean> autoRenew;

    public Output<Boolean> getAutoRenew() {
        return this.autoRenew == null ? Codegen.empty() : this.autoRenew;
    }

    /**
     * The offer id.
     * 
     */
    @Import(name="offerId")
      private final @Nullable Output<String> offerId;

    public Output<String> getOfferId() {
        return this.offerId == null ? Codegen.empty() : this.offerId;
    }

    /**
     * The metadata about the SaaS subscription such as the AzureSubscriptionId and ResourceUri.
     * 
     */
    @Import(name="paymentChannelMetadata")
      private final @Nullable Output<Map<String,String>> paymentChannelMetadata;

    public Output<Map<String,String>> getPaymentChannelMetadata() {
        return this.paymentChannelMetadata == null ? Codegen.empty() : this.paymentChannelMetadata;
    }

    /**
     * The Payment channel for the SaasSubscription.
     * 
     */
    @Import(name="paymentChannelType")
      private final @Nullable Output<Either<String,PaymentChannelType>> paymentChannelType;

    public Output<Either<String,PaymentChannelType>> getPaymentChannelType() {
        return this.paymentChannelType == null ? Codegen.empty() : this.paymentChannelType;
    }

    /**
     * The publisher id.
     * 
     */
    @Import(name="publisherId")
      private final @Nullable Output<String> publisherId;

    public Output<String> getPublisherId() {
        return this.publisherId == null ? Codegen.empty() : this.publisherId;
    }

    /**
     * The environment in the publisher side for this resource.
     * 
     */
    @Import(name="publisherTestEnvironment")
      private final @Nullable Output<String> publisherTestEnvironment;

    public Output<String> getPublisherTestEnvironment() {
        return this.publisherTestEnvironment == null ? Codegen.empty() : this.publisherTestEnvironment;
    }

    /**
     * The seat count.
     * 
     */
    @Import(name="quantity")
      private final @Nullable Output<Double> quantity;

    public Output<Double> getQuantity() {
        return this.quantity == null ? Codegen.empty() : this.quantity;
    }

    /**
     * The SaaS resource name.
     * 
     */
    @Import(name="saasResourceName")
      private final @Nullable Output<String> saasResourceName;

    public Output<String> getSaasResourceName() {
        return this.saasResourceName == null ? Codegen.empty() : this.saasResourceName;
    }

    /**
     * The saas session id used for dev service migration request.
     * 
     */
    @Import(name="saasSessionId")
      private final @Nullable Output<String> saasSessionId;

    public Output<String> getSaasSessionId() {
        return this.saasSessionId == null ? Codegen.empty() : this.saasSessionId;
    }

    /**
     * The saas subscription id used for tenant to subscription level migration request.
     * 
     */
    @Import(name="saasSubscriptionId")
      private final @Nullable Output<String> saasSubscriptionId;

    public Output<String> getSaasSubscriptionId() {
        return this.saasSubscriptionId == null ? Codegen.empty() : this.saasSubscriptionId;
    }

    /**
     * The plan id.
     * 
     */
    @Import(name="skuId")
      private final @Nullable Output<String> skuId;

    public Output<String> getSkuId() {
        return this.skuId == null ? Codegen.empty() : this.skuId;
    }

    /**
     * The current Term id.
     * 
     */
    @Import(name="termId")
      private final @Nullable Output<String> termId;

    public Output<String> getTermId() {
        return this.termId == null ? Codegen.empty() : this.termId;
    }

    public SaasCreationPropertiesArgs(
        @Nullable Output<Boolean> autoRenew,
        @Nullable Output<String> offerId,
        @Nullable Output<Map<String,String>> paymentChannelMetadata,
        @Nullable Output<Either<String,PaymentChannelType>> paymentChannelType,
        @Nullable Output<String> publisherId,
        @Nullable Output<String> publisherTestEnvironment,
        @Nullable Output<Double> quantity,
        @Nullable Output<String> saasResourceName,
        @Nullable Output<String> saasSessionId,
        @Nullable Output<String> saasSubscriptionId,
        @Nullable Output<String> skuId,
        @Nullable Output<String> termId) {
        this.autoRenew = autoRenew;
        this.offerId = offerId;
        this.paymentChannelMetadata = paymentChannelMetadata;
        this.paymentChannelType = paymentChannelType;
        this.publisherId = publisherId;
        this.publisherTestEnvironment = publisherTestEnvironment;
        this.quantity = quantity;
        this.saasResourceName = saasResourceName;
        this.saasSessionId = saasSessionId;
        this.saasSubscriptionId = saasSubscriptionId;
        this.skuId = skuId;
        this.termId = termId;
    }

    private SaasCreationPropertiesArgs() {
        this.autoRenew = Codegen.empty();
        this.offerId = Codegen.empty();
        this.paymentChannelMetadata = Codegen.empty();
        this.paymentChannelType = Codegen.empty();
        this.publisherId = Codegen.empty();
        this.publisherTestEnvironment = Codegen.empty();
        this.quantity = Codegen.empty();
        this.saasResourceName = Codegen.empty();
        this.saasSessionId = Codegen.empty();
        this.saasSubscriptionId = Codegen.empty();
        this.skuId = Codegen.empty();
        this.termId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SaasCreationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> autoRenew;
        private @Nullable Output<String> offerId;
        private @Nullable Output<Map<String,String>> paymentChannelMetadata;
        private @Nullable Output<Either<String,PaymentChannelType>> paymentChannelType;
        private @Nullable Output<String> publisherId;
        private @Nullable Output<String> publisherTestEnvironment;
        private @Nullable Output<Double> quantity;
        private @Nullable Output<String> saasResourceName;
        private @Nullable Output<String> saasSessionId;
        private @Nullable Output<String> saasSubscriptionId;
        private @Nullable Output<String> skuId;
        private @Nullable Output<String> termId;

        public Builder() {
    	      // Empty
        }

        public Builder(SaasCreationPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRenew = defaults.autoRenew;
    	      this.offerId = defaults.offerId;
    	      this.paymentChannelMetadata = defaults.paymentChannelMetadata;
    	      this.paymentChannelType = defaults.paymentChannelType;
    	      this.publisherId = defaults.publisherId;
    	      this.publisherTestEnvironment = defaults.publisherTestEnvironment;
    	      this.quantity = defaults.quantity;
    	      this.saasResourceName = defaults.saasResourceName;
    	      this.saasSessionId = defaults.saasSessionId;
    	      this.saasSubscriptionId = defaults.saasSubscriptionId;
    	      this.skuId = defaults.skuId;
    	      this.termId = defaults.termId;
        }

        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            this.autoRenew = autoRenew;
            return this;
        }
        public Builder autoRenew(@Nullable Boolean autoRenew) {
            this.autoRenew = Codegen.ofNullable(autoRenew);
            return this;
        }
        public Builder offerId(@Nullable Output<String> offerId) {
            this.offerId = offerId;
            return this;
        }
        public Builder offerId(@Nullable String offerId) {
            this.offerId = Codegen.ofNullable(offerId);
            return this;
        }
        public Builder paymentChannelMetadata(@Nullable Output<Map<String,String>> paymentChannelMetadata) {
            this.paymentChannelMetadata = paymentChannelMetadata;
            return this;
        }
        public Builder paymentChannelMetadata(@Nullable Map<String,String> paymentChannelMetadata) {
            this.paymentChannelMetadata = Codegen.ofNullable(paymentChannelMetadata);
            return this;
        }
        public Builder paymentChannelType(@Nullable Output<Either<String,PaymentChannelType>> paymentChannelType) {
            this.paymentChannelType = paymentChannelType;
            return this;
        }
        public Builder paymentChannelType(@Nullable Either<String,PaymentChannelType> paymentChannelType) {
            this.paymentChannelType = Codegen.ofNullable(paymentChannelType);
            return this;
        }
        public Builder publisherId(@Nullable Output<String> publisherId) {
            this.publisherId = publisherId;
            return this;
        }
        public Builder publisherId(@Nullable String publisherId) {
            this.publisherId = Codegen.ofNullable(publisherId);
            return this;
        }
        public Builder publisherTestEnvironment(@Nullable Output<String> publisherTestEnvironment) {
            this.publisherTestEnvironment = publisherTestEnvironment;
            return this;
        }
        public Builder publisherTestEnvironment(@Nullable String publisherTestEnvironment) {
            this.publisherTestEnvironment = Codegen.ofNullable(publisherTestEnvironment);
            return this;
        }
        public Builder quantity(@Nullable Output<Double> quantity) {
            this.quantity = quantity;
            return this;
        }
        public Builder quantity(@Nullable Double quantity) {
            this.quantity = Codegen.ofNullable(quantity);
            return this;
        }
        public Builder saasResourceName(@Nullable Output<String> saasResourceName) {
            this.saasResourceName = saasResourceName;
            return this;
        }
        public Builder saasResourceName(@Nullable String saasResourceName) {
            this.saasResourceName = Codegen.ofNullable(saasResourceName);
            return this;
        }
        public Builder saasSessionId(@Nullable Output<String> saasSessionId) {
            this.saasSessionId = saasSessionId;
            return this;
        }
        public Builder saasSessionId(@Nullable String saasSessionId) {
            this.saasSessionId = Codegen.ofNullable(saasSessionId);
            return this;
        }
        public Builder saasSubscriptionId(@Nullable Output<String> saasSubscriptionId) {
            this.saasSubscriptionId = saasSubscriptionId;
            return this;
        }
        public Builder saasSubscriptionId(@Nullable String saasSubscriptionId) {
            this.saasSubscriptionId = Codegen.ofNullable(saasSubscriptionId);
            return this;
        }
        public Builder skuId(@Nullable Output<String> skuId) {
            this.skuId = skuId;
            return this;
        }
        public Builder skuId(@Nullable String skuId) {
            this.skuId = Codegen.ofNullable(skuId);
            return this;
        }
        public Builder termId(@Nullable Output<String> termId) {
            this.termId = termId;
            return this;
        }
        public Builder termId(@Nullable String termId) {
            this.termId = Codegen.ofNullable(termId);
            return this;
        }        public SaasCreationPropertiesArgs build() {
            return new SaasCreationPropertiesArgs(autoRenew, offerId, paymentChannelMetadata, paymentChannelType, publisherId, publisherTestEnvironment, quantity, saasResourceName, saasSessionId, saasSubscriptionId, skuId, termId);
        }
    }
}
