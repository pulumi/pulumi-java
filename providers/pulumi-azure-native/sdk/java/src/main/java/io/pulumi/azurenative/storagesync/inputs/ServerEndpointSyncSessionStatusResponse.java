// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagesync.inputs;

import io.pulumi.azurenative.storagesync.inputs.ServerEndpointFilesNotSyncingErrorResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Sync Session status object.
 * 
 */
public final class ServerEndpointSyncSessionStatusResponse extends io.pulumi.resources.InvokeArgs {

    public static final ServerEndpointSyncSessionStatusResponse Empty = new ServerEndpointSyncSessionStatusResponse();

    /**
     * Array of per-item errors coming from the last sync session.
     * 
     */
    @InputImport(name="filesNotSyncingErrors", required=true)
    private final List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors;

    public List<ServerEndpointFilesNotSyncingErrorResponse> getFilesNotSyncingErrors() {
        return this.filesNotSyncingErrors;
    }

    /**
     * Sync mode
     * 
     */
    @InputImport(name="lastSyncMode", required=true)
    private final String lastSyncMode;

    public String getLastSyncMode() {
        return this.lastSyncMode;
    }

    /**
     * Last sync per item error count.
     * 
     */
    @InputImport(name="lastSyncPerItemErrorCount", required=true)
    private final Double lastSyncPerItemErrorCount;

    public Double getLastSyncPerItemErrorCount() {
        return this.lastSyncPerItemErrorCount;
    }

    /**
     * Last sync result (HResult)
     * 
     */
    @InputImport(name="lastSyncResult", required=true)
    private final Integer lastSyncResult;

    public Integer getLastSyncResult() {
        return this.lastSyncResult;
    }

    /**
     * Last sync success timestamp
     * 
     */
    @InputImport(name="lastSyncSuccessTimestamp", required=true)
    private final String lastSyncSuccessTimestamp;

    public String getLastSyncSuccessTimestamp() {
        return this.lastSyncSuccessTimestamp;
    }

    /**
     * Last sync timestamp
     * 
     */
    @InputImport(name="lastSyncTimestamp", required=true)
    private final String lastSyncTimestamp;

    public String getLastSyncTimestamp() {
        return this.lastSyncTimestamp;
    }

    /**
     * Count of persistent files not syncing.
     * 
     */
    @InputImport(name="persistentFilesNotSyncingCount", required=true)
    private final Double persistentFilesNotSyncingCount;

    public Double getPersistentFilesNotSyncingCount() {
        return this.persistentFilesNotSyncingCount;
    }

    /**
     * Count of transient files not syncing.
     * 
     */
    @InputImport(name="transientFilesNotSyncingCount", required=true)
    private final Double transientFilesNotSyncingCount;

    public Double getTransientFilesNotSyncingCount() {
        return this.transientFilesNotSyncingCount;
    }

    public ServerEndpointSyncSessionStatusResponse(
        List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors,
        String lastSyncMode,
        Double lastSyncPerItemErrorCount,
        Integer lastSyncResult,
        String lastSyncSuccessTimestamp,
        String lastSyncTimestamp,
        Double persistentFilesNotSyncingCount,
        Double transientFilesNotSyncingCount) {
        this.filesNotSyncingErrors = Objects.requireNonNull(filesNotSyncingErrors, "expected parameter 'filesNotSyncingErrors' to be non-null");
        this.lastSyncMode = Objects.requireNonNull(lastSyncMode, "expected parameter 'lastSyncMode' to be non-null");
        this.lastSyncPerItemErrorCount = Objects.requireNonNull(lastSyncPerItemErrorCount, "expected parameter 'lastSyncPerItemErrorCount' to be non-null");
        this.lastSyncResult = Objects.requireNonNull(lastSyncResult, "expected parameter 'lastSyncResult' to be non-null");
        this.lastSyncSuccessTimestamp = Objects.requireNonNull(lastSyncSuccessTimestamp, "expected parameter 'lastSyncSuccessTimestamp' to be non-null");
        this.lastSyncTimestamp = Objects.requireNonNull(lastSyncTimestamp, "expected parameter 'lastSyncTimestamp' to be non-null");
        this.persistentFilesNotSyncingCount = Objects.requireNonNull(persistentFilesNotSyncingCount, "expected parameter 'persistentFilesNotSyncingCount' to be non-null");
        this.transientFilesNotSyncingCount = Objects.requireNonNull(transientFilesNotSyncingCount, "expected parameter 'transientFilesNotSyncingCount' to be non-null");
    }

    private ServerEndpointSyncSessionStatusResponse() {
        this.filesNotSyncingErrors = List.of();
        this.lastSyncMode = null;
        this.lastSyncPerItemErrorCount = null;
        this.lastSyncResult = null;
        this.lastSyncSuccessTimestamp = null;
        this.lastSyncTimestamp = null;
        this.persistentFilesNotSyncingCount = null;
        this.transientFilesNotSyncingCount = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerEndpointSyncSessionStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors;
        private String lastSyncMode;
        private Double lastSyncPerItemErrorCount;
        private Integer lastSyncResult;
        private String lastSyncSuccessTimestamp;
        private String lastSyncTimestamp;
        private Double persistentFilesNotSyncingCount;
        private Double transientFilesNotSyncingCount;

        public Builder() {
    	      // Empty
        }

        public Builder(ServerEndpointSyncSessionStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filesNotSyncingErrors = defaults.filesNotSyncingErrors;
    	      this.lastSyncMode = defaults.lastSyncMode;
    	      this.lastSyncPerItemErrorCount = defaults.lastSyncPerItemErrorCount;
    	      this.lastSyncResult = defaults.lastSyncResult;
    	      this.lastSyncSuccessTimestamp = defaults.lastSyncSuccessTimestamp;
    	      this.lastSyncTimestamp = defaults.lastSyncTimestamp;
    	      this.persistentFilesNotSyncingCount = defaults.persistentFilesNotSyncingCount;
    	      this.transientFilesNotSyncingCount = defaults.transientFilesNotSyncingCount;
        }

        public Builder setFilesNotSyncingErrors(List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors) {
            this.filesNotSyncingErrors = Objects.requireNonNull(filesNotSyncingErrors);
            return this;
        }

        public Builder setLastSyncMode(String lastSyncMode) {
            this.lastSyncMode = Objects.requireNonNull(lastSyncMode);
            return this;
        }

        public Builder setLastSyncPerItemErrorCount(Double lastSyncPerItemErrorCount) {
            this.lastSyncPerItemErrorCount = Objects.requireNonNull(lastSyncPerItemErrorCount);
            return this;
        }

        public Builder setLastSyncResult(Integer lastSyncResult) {
            this.lastSyncResult = Objects.requireNonNull(lastSyncResult);
            return this;
        }

        public Builder setLastSyncSuccessTimestamp(String lastSyncSuccessTimestamp) {
            this.lastSyncSuccessTimestamp = Objects.requireNonNull(lastSyncSuccessTimestamp);
            return this;
        }

        public Builder setLastSyncTimestamp(String lastSyncTimestamp) {
            this.lastSyncTimestamp = Objects.requireNonNull(lastSyncTimestamp);
            return this;
        }

        public Builder setPersistentFilesNotSyncingCount(Double persistentFilesNotSyncingCount) {
            this.persistentFilesNotSyncingCount = Objects.requireNonNull(persistentFilesNotSyncingCount);
            return this;
        }

        public Builder setTransientFilesNotSyncingCount(Double transientFilesNotSyncingCount) {
            this.transientFilesNotSyncingCount = Objects.requireNonNull(transientFilesNotSyncingCount);
            return this;
        }

        public ServerEndpointSyncSessionStatusResponse build() {
            return new ServerEndpointSyncSessionStatusResponse(filesNotSyncingErrors, lastSyncMode, lastSyncPerItemErrorCount, lastSyncResult, lastSyncSuccessTimestamp, lastSyncTimestamp, persistentFilesNotSyncingCount, transientFilesNotSyncingCount);
        }
    }
}
