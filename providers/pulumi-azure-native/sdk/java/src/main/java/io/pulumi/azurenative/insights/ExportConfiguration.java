// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.insights.ExportConfigurationArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:insights:ExportConfiguration")
public class ExportConfiguration extends io.pulumi.resources.CustomResource {
    @OutputExport(name="applicationName", type=String.class, parameters={})
    private Output<String> applicationName;

    public Output<String> getApplicationName() {
        return this.applicationName;
    }
    @OutputExport(name="containerName", type=String.class, parameters={})
    private Output<String> containerName;

    public Output<String> getContainerName() {
        return this.containerName;
    }
    @OutputExport(name="destinationAccountId", type=String.class, parameters={})
    private Output<String> destinationAccountId;

    public Output<String> getDestinationAccountId() {
        return this.destinationAccountId;
    }
    @OutputExport(name="destinationStorageLocationId", type=String.class, parameters={})
    private Output<String> destinationStorageLocationId;

    public Output<String> getDestinationStorageLocationId() {
        return this.destinationStorageLocationId;
    }
    @OutputExport(name="destinationStorageSubscriptionId", type=String.class, parameters={})
    private Output<String> destinationStorageSubscriptionId;

    public Output<String> getDestinationStorageSubscriptionId() {
        return this.destinationStorageSubscriptionId;
    }
    @OutputExport(name="destinationType", type=String.class, parameters={})
    private Output<String> destinationType;

    public Output<String> getDestinationType() {
        return this.destinationType;
    }
    @OutputExport(name="exportId", type=String.class, parameters={})
    private Output<String> exportId;

    public Output<String> getExportId() {
        return this.exportId;
    }
    @OutputExport(name="exportStatus", type=String.class, parameters={})
    private Output<String> exportStatus;

    public Output<String> getExportStatus() {
        return this.exportStatus;
    }
    @OutputExport(name="instrumentationKey", type=String.class, parameters={})
    private Output<String> instrumentationKey;

    public Output<String> getInstrumentationKey() {
        return this.instrumentationKey;
    }
    @OutputExport(name="isUserEnabled", type=String.class, parameters={})
    private Output<String> isUserEnabled;

    public Output<String> getIsUserEnabled() {
        return this.isUserEnabled;
    }
    @OutputExport(name="lastGapTime", type=String.class, parameters={})
    private Output<String> lastGapTime;

    public Output<String> getLastGapTime() {
        return this.lastGapTime;
    }
    @OutputExport(name="lastSuccessTime", type=String.class, parameters={})
    private Output<String> lastSuccessTime;

    public Output<String> getLastSuccessTime() {
        return this.lastSuccessTime;
    }
    @OutputExport(name="lastUserUpdate", type=String.class, parameters={})
    private Output<String> lastUserUpdate;

    public Output<String> getLastUserUpdate() {
        return this.lastUserUpdate;
    }
    @OutputExport(name="notificationQueueEnabled", type=String.class, parameters={})
    private Output</* @Nullable */ String> notificationQueueEnabled;

    public Output</* @Nullable */ String> getNotificationQueueEnabled() {
        return this.notificationQueueEnabled;
    }
    @OutputExport(name="permanentErrorReason", type=String.class, parameters={})
    private Output<String> permanentErrorReason;

    public Output<String> getPermanentErrorReason() {
        return this.permanentErrorReason;
    }
    @OutputExport(name="recordTypes", type=String.class, parameters={})
    private Output</* @Nullable */ String> recordTypes;

    public Output</* @Nullable */ String> getRecordTypes() {
        return this.recordTypes;
    }
    @OutputExport(name="resourceGroup", type=String.class, parameters={})
    private Output<String> resourceGroup;

    public Output<String> getResourceGroup() {
        return this.resourceGroup;
    }
    @OutputExport(name="storageName", type=String.class, parameters={})
    private Output<String> storageName;

    public Output<String> getStorageName() {
        return this.storageName;
    }
    @OutputExport(name="subscriptionId", type=String.class, parameters={})
    private Output<String> subscriptionId;

    public Output<String> getSubscriptionId() {
        return this.subscriptionId;
    }

    public ExportConfiguration(String name, ExportConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:insights:ExportConfiguration", name, args == null ? ExportConfigurationArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ExportConfiguration(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:insights:ExportConfiguration", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:insights/v20150501:ExportConfiguration").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static ExportConfiguration get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ExportConfiguration(name, id, options);
    }
}
