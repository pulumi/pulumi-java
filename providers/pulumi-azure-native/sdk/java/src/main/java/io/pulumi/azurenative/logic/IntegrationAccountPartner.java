// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.logic.outputs.PartnerContentResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * The integration account partner.
API Version: 2019-05-01.

{{% examples %}}
## Example Usage
{{% example %}}
### Create or update a partner
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var integrationAccountPartner = new AzureNative.Logic.IntegrationAccountPartner("integrationAccountPartner", new AzureNative.Logic.IntegrationAccountPartnerArgs
        {
            Content = new AzureNative.Logic.Inputs.PartnerContentArgs
            {
                B2b = new AzureNative.Logic.Inputs.B2BPartnerContentArgs
                {
                    BusinessIdentities = 
                    {
                        new AzureNative.Logic.Inputs.BusinessIdentityArgs
                        {
                            Qualifier = "AA",
                            Value = "ZZ",
                        },
                    },
                },
            },
            IntegrationAccountName = "testIntegrationAccount",
            Location = "westus",
            Metadata = ,
            PartnerName = "testPartner",
            PartnerType = "B2B",
            ResourceGroupName = "testResourceGroup",
            Tags = ,
        });
    }

}

```

```go
package main

import (
	logic "github.com/pulumi/pulumi-azure-native/sdk/go/azure/logic"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := logic.NewIntegrationAccountPartner(ctx, "integrationAccountPartner", &logic.IntegrationAccountPartnerArgs{
			Content: &logic.PartnerContentArgs{
				B2b: &logic.B2BPartnerContentArgs{
					BusinessIdentities: logic.BusinessIdentityArray{
						&logic.BusinessIdentityArgs{
							Qualifier: pulumi.String("AA"),
							Value:     pulumi.String("ZZ"),
						},
					},
				},
			},
			IntegrationAccountName: pulumi.String("testIntegrationAccount"),
			Location:               pulumi.String("westus"),
			Metadata:               nil,
			PartnerName:            pulumi.String("testPartner"),
			PartnerType:            pulumi.String("B2B"),
			ResourceGroupName:      pulumi.String("testResourceGroup"),
			Tags:                   nil,
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const integrationAccountPartner = new azure_native.logic.IntegrationAccountPartner("integrationAccountPartner", {
    content: {
        b2b: {
            businessIdentities: [{
                qualifier: "AA",
                value: "ZZ",
            }],
        },
    },
    integrationAccountName: "testIntegrationAccount",
    location: "westus",
    metadata: {},
    partnerName: "testPartner",
    partnerType: "B2B",
    resourceGroupName: "testResourceGroup",
    tags: {},
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

integration_account_partner = azure_native.logic.IntegrationAccountPartner("integrationAccountPartner",
    content=azure_native.logic.PartnerContentArgs(
        b2b=azure_native.logic.B2BPartnerContentArgs(
            business_identities=[azure_native.logic.BusinessIdentityArgs(
                qualifier="AA",
                value="ZZ",
            )],
        ),
    ),
    integration_account_name="testIntegrationAccount",
    location="westus",
    metadata={},
    partner_name="testPartner",
    partner_type="B2B",
    resource_group_name="testResourceGroup",
    tags={})

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:logic:IntegrationAccountPartner testPartner /subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/flowrg/providers/Microsoft.Logic/integrationAccounts/testIntegrationAccount/partners/testPartner 
```

 */
@ResourceType(type="azure-native:logic:IntegrationAccountPartner")
public class IntegrationAccountPartner extends io.pulumi.resources.CustomResource {
    /**
     * The changed time.
     */
    @OutputExport(name="changedTime", type=String.class, parameters={})
    private Output<String> changedTime;

    /**
     * @return The changed time.
     */
    public Output<String> getChangedTime() {
        return this.changedTime;
    }
    /**
     * The partner content.
     */
    @OutputExport(name="content", type=PartnerContentResponse.class, parameters={})
    private Output<PartnerContentResponse> content;

    /**
     * @return The partner content.
     */
    public Output<PartnerContentResponse> getContent() {
        return this.content;
    }
    /**
     * The created time.
     */
    @OutputExport(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    /**
     * @return The created time.
     */
    public Output<String> getCreatedTime() {
        return this.createdTime;
    }
    /**
     * The resource location.
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The resource location.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * The metadata.
     */
    @OutputExport(name="metadata", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> metadata;

    /**
     * @return The metadata.
     */
    public Output</* @Nullable */ Object> getMetadata() {
        return this.metadata;
    }
    /**
     * Gets the resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Gets the resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The partner type.
     */
    @OutputExport(name="partnerType", type=String.class, parameters={})
    private Output<String> partnerType;

    /**
     * @return The partner type.
     */
    public Output<String> getPartnerType() {
        return this.partnerType;
    }
    /**
     * The resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Gets the resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Gets the resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IntegrationAccountPartner(String name, IntegrationAccountPartnerArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:logic:IntegrationAccountPartner", name, args == null ? IntegrationAccountPartnerArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private IntegrationAccountPartner(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:logic:IntegrationAccountPartner", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:logic/v20150801preview:IntegrationAccountPartner").build()),
                Input.of(Alias.builder().setType("azure-native:logic/v20160601:IntegrationAccountPartner").build()),
                Input.of(Alias.builder().setType("azure-native:logic/v20180701preview:IntegrationAccountPartner").build()),
                Input.of(Alias.builder().setType("azure-native:logic/v20190501:IntegrationAccountPartner").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IntegrationAccountPartner get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new IntegrationAccountPartner(name, id, options);
    }
}
