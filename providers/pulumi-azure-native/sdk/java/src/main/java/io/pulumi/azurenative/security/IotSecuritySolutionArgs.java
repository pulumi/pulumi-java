// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security;

import io.pulumi.azurenative.security.enums.DataSource;
import io.pulumi.azurenative.security.enums.ExportData;
import io.pulumi.azurenative.security.enums.SecuritySolutionStatus;
import io.pulumi.azurenative.security.enums.UnmaskedIpLoggingStatus;
import io.pulumi.azurenative.security.inputs.AdditionalWorkspacesPropertiesArgs;
import io.pulumi.azurenative.security.inputs.RecommendationConfigurationPropertiesArgs;
import io.pulumi.azurenative.security.inputs.UserDefinedResourcesPropertiesArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IotSecuritySolutionArgs extends io.pulumi.resources.ResourceArgs {

    public static final IotSecuritySolutionArgs Empty = new IotSecuritySolutionArgs();

    /**
     * List of additional workspaces
     * 
     */
    @InputImport(name="additionalWorkspaces")
    private final @Nullable Input<List<AdditionalWorkspacesPropertiesArgs>> additionalWorkspaces;

    public Input<List<AdditionalWorkspacesPropertiesArgs>> getAdditionalWorkspaces() {
        return this.additionalWorkspaces == null ? Input.empty() : this.additionalWorkspaces;
    }

    /**
     * Disabled data sources. Disabling these data sources compromises the system.
     * 
     */
    @InputImport(name="disabledDataSources")
    private final @Nullable Input<List<Either<String,DataSource>>> disabledDataSources;

    public Input<List<Either<String,DataSource>>> getDisabledDataSources() {
        return this.disabledDataSources == null ? Input.empty() : this.disabledDataSources;
    }

    /**
     * Resource display name.
     * 
     */
    @InputImport(name="displayName", required=true)
    private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    /**
     * List of additional options for exporting to workspace data.
     * 
     */
    @InputImport(name="export")
    private final @Nullable Input<List<Either<String,ExportData>>> export;

    public Input<List<Either<String,ExportData>>> getExport() {
        return this.export == null ? Input.empty() : this.export;
    }

    /**
     * IoT Hub resource IDs
     * 
     */
    @InputImport(name="iotHubs", required=true)
    private final Input<List<String>> iotHubs;

    public Input<List<String>> getIotHubs() {
        return this.iotHubs;
    }

    /**
     * The resource location.
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * List of the configuration status for each recommendation type.
     * 
     */
    @InputImport(name="recommendationsConfiguration")
    private final @Nullable Input<List<RecommendationConfigurationPropertiesArgs>> recommendationsConfiguration;

    public Input<List<RecommendationConfigurationPropertiesArgs>> getRecommendationsConfiguration() {
        return this.recommendationsConfiguration == null ? Input.empty() : this.recommendationsConfiguration;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the IoT Security solution.
     * 
     */
    @InputImport(name="solutionName")
    private final @Nullable Input<String> solutionName;

    public Input<String> getSolutionName() {
        return this.solutionName == null ? Input.empty() : this.solutionName;
    }

    /**
     * Status of the IoT Security solution.
     * 
     */
    @InputImport(name="status")
    private final @Nullable Input<Either<String,SecuritySolutionStatus>> status;

    public Input<Either<String,SecuritySolutionStatus>> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    /**
     * Resource tags
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Unmasked IP address logging status
     * 
     */
    @InputImport(name="unmaskedIpLoggingStatus")
    private final @Nullable Input<Either<String,UnmaskedIpLoggingStatus>> unmaskedIpLoggingStatus;

    public Input<Either<String,UnmaskedIpLoggingStatus>> getUnmaskedIpLoggingStatus() {
        return this.unmaskedIpLoggingStatus == null ? Input.empty() : this.unmaskedIpLoggingStatus;
    }

    /**
     * Properties of the IoT Security solution's user defined resources.
     * 
     */
    @InputImport(name="userDefinedResources")
    private final @Nullable Input<UserDefinedResourcesPropertiesArgs> userDefinedResources;

    public Input<UserDefinedResourcesPropertiesArgs> getUserDefinedResources() {
        return this.userDefinedResources == null ? Input.empty() : this.userDefinedResources;
    }

    /**
     * Workspace resource ID
     * 
     */
    @InputImport(name="workspace")
    private final @Nullable Input<String> workspace;

    public Input<String> getWorkspace() {
        return this.workspace == null ? Input.empty() : this.workspace;
    }

    public IotSecuritySolutionArgs(
        @Nullable Input<List<AdditionalWorkspacesPropertiesArgs>> additionalWorkspaces,
        @Nullable Input<List<Either<String,DataSource>>> disabledDataSources,
        Input<String> displayName,
        @Nullable Input<List<Either<String,ExportData>>> export,
        Input<List<String>> iotHubs,
        @Nullable Input<String> location,
        @Nullable Input<List<RecommendationConfigurationPropertiesArgs>> recommendationsConfiguration,
        Input<String> resourceGroupName,
        @Nullable Input<String> solutionName,
        @Nullable Input<Either<String,SecuritySolutionStatus>> status,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Either<String,UnmaskedIpLoggingStatus>> unmaskedIpLoggingStatus,
        @Nullable Input<UserDefinedResourcesPropertiesArgs> userDefinedResources,
        @Nullable Input<String> workspace) {
        this.additionalWorkspaces = additionalWorkspaces;
        this.disabledDataSources = disabledDataSources;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.export = export;
        this.iotHubs = Objects.requireNonNull(iotHubs, "expected parameter 'iotHubs' to be non-null");
        this.location = location;
        this.recommendationsConfiguration = recommendationsConfiguration;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.solutionName = solutionName;
        this.status = status == null ? Input.ofLeft("Enabled") : status;
        this.tags = tags;
        this.unmaskedIpLoggingStatus = unmaskedIpLoggingStatus == null ? Input.ofLeft("Disabled") : unmaskedIpLoggingStatus;
        this.userDefinedResources = userDefinedResources;
        this.workspace = workspace;
    }

    private IotSecuritySolutionArgs() {
        this.additionalWorkspaces = Input.empty();
        this.disabledDataSources = Input.empty();
        this.displayName = Input.empty();
        this.export = Input.empty();
        this.iotHubs = Input.empty();
        this.location = Input.empty();
        this.recommendationsConfiguration = Input.empty();
        this.resourceGroupName = Input.empty();
        this.solutionName = Input.empty();
        this.status = Input.empty();
        this.tags = Input.empty();
        this.unmaskedIpLoggingStatus = Input.empty();
        this.userDefinedResources = Input.empty();
        this.workspace = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IotSecuritySolutionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<AdditionalWorkspacesPropertiesArgs>> additionalWorkspaces;
        private @Nullable Input<List<Either<String,DataSource>>> disabledDataSources;
        private Input<String> displayName;
        private @Nullable Input<List<Either<String,ExportData>>> export;
        private Input<List<String>> iotHubs;
        private @Nullable Input<String> location;
        private @Nullable Input<List<RecommendationConfigurationPropertiesArgs>> recommendationsConfiguration;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> solutionName;
        private @Nullable Input<Either<String,SecuritySolutionStatus>> status;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Either<String,UnmaskedIpLoggingStatus>> unmaskedIpLoggingStatus;
        private @Nullable Input<UserDefinedResourcesPropertiesArgs> userDefinedResources;
        private @Nullable Input<String> workspace;

        public Builder() {
    	      // Empty
        }

        public Builder(IotSecuritySolutionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalWorkspaces = defaults.additionalWorkspaces;
    	      this.disabledDataSources = defaults.disabledDataSources;
    	      this.displayName = defaults.displayName;
    	      this.export = defaults.export;
    	      this.iotHubs = defaults.iotHubs;
    	      this.location = defaults.location;
    	      this.recommendationsConfiguration = defaults.recommendationsConfiguration;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.solutionName = defaults.solutionName;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.unmaskedIpLoggingStatus = defaults.unmaskedIpLoggingStatus;
    	      this.userDefinedResources = defaults.userDefinedResources;
    	      this.workspace = defaults.workspace;
        }

        public Builder setAdditionalWorkspaces(@Nullable Input<List<AdditionalWorkspacesPropertiesArgs>> additionalWorkspaces) {
            this.additionalWorkspaces = additionalWorkspaces;
            return this;
        }

        public Builder setAdditionalWorkspaces(@Nullable List<AdditionalWorkspacesPropertiesArgs> additionalWorkspaces) {
            this.additionalWorkspaces = Input.ofNullable(additionalWorkspaces);
            return this;
        }

        public Builder setDisabledDataSources(@Nullable Input<List<Either<String,DataSource>>> disabledDataSources) {
            this.disabledDataSources = disabledDataSources;
            return this;
        }

        public Builder setDisabledDataSources(@Nullable List<Either<String,DataSource>> disabledDataSources) {
            this.disabledDataSources = Input.ofNullable(disabledDataSources);
            return this;
        }

        public Builder setDisplayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder setExport(@Nullable Input<List<Either<String,ExportData>>> export) {
            this.export = export;
            return this;
        }

        public Builder setExport(@Nullable List<Either<String,ExportData>> export) {
            this.export = Input.ofNullable(export);
            return this;
        }

        public Builder setIotHubs(Input<List<String>> iotHubs) {
            this.iotHubs = Objects.requireNonNull(iotHubs);
            return this;
        }

        public Builder setIotHubs(List<String> iotHubs) {
            this.iotHubs = Input.of(Objects.requireNonNull(iotHubs));
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setRecommendationsConfiguration(@Nullable Input<List<RecommendationConfigurationPropertiesArgs>> recommendationsConfiguration) {
            this.recommendationsConfiguration = recommendationsConfiguration;
            return this;
        }

        public Builder setRecommendationsConfiguration(@Nullable List<RecommendationConfigurationPropertiesArgs> recommendationsConfiguration) {
            this.recommendationsConfiguration = Input.ofNullable(recommendationsConfiguration);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setSolutionName(@Nullable Input<String> solutionName) {
            this.solutionName = solutionName;
            return this;
        }

        public Builder setSolutionName(@Nullable String solutionName) {
            this.solutionName = Input.ofNullable(solutionName);
            return this;
        }

        public Builder setStatus(@Nullable Input<Either<String,SecuritySolutionStatus>> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable Either<String,SecuritySolutionStatus> status) {
            this.status = Input.ofNullable(status);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setUnmaskedIpLoggingStatus(@Nullable Input<Either<String,UnmaskedIpLoggingStatus>> unmaskedIpLoggingStatus) {
            this.unmaskedIpLoggingStatus = unmaskedIpLoggingStatus;
            return this;
        }

        public Builder setUnmaskedIpLoggingStatus(@Nullable Either<String,UnmaskedIpLoggingStatus> unmaskedIpLoggingStatus) {
            this.unmaskedIpLoggingStatus = Input.ofNullable(unmaskedIpLoggingStatus);
            return this;
        }

        public Builder setUserDefinedResources(@Nullable Input<UserDefinedResourcesPropertiesArgs> userDefinedResources) {
            this.userDefinedResources = userDefinedResources;
            return this;
        }

        public Builder setUserDefinedResources(@Nullable UserDefinedResourcesPropertiesArgs userDefinedResources) {
            this.userDefinedResources = Input.ofNullable(userDefinedResources);
            return this;
        }

        public Builder setWorkspace(@Nullable Input<String> workspace) {
            this.workspace = workspace;
            return this;
        }

        public Builder setWorkspace(@Nullable String workspace) {
            this.workspace = Input.ofNullable(workspace);
            return this;
        }

        public IotSecuritySolutionArgs build() {
            return new IotSecuritySolutionArgs(additionalWorkspaces, disabledDataSources, displayName, export, iotHubs, location, recommendationsConfiguration, resourceGroupName, solutionName, status, tags, unmaskedIpLoggingStatus, userDefinedResources, workspace);
        }
    }
}
