// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.labservices.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AutoShutdownProfileResponse {
    private final @Nullable String disconnectDelay;
    private final @Nullable String idleDelay;
    private final @Nullable String noConnectDelay;
    private final @Nullable String shutdownOnDisconnect;
    private final @Nullable String shutdownOnIdle;
    private final @Nullable String shutdownWhenNotConnected;

    @OutputCustomType.Constructor({"disconnectDelay","idleDelay","noConnectDelay","shutdownOnDisconnect","shutdownOnIdle","shutdownWhenNotConnected"})
    private AutoShutdownProfileResponse(
        @Nullable String disconnectDelay,
        @Nullable String idleDelay,
        @Nullable String noConnectDelay,
        @Nullable String shutdownOnDisconnect,
        @Nullable String shutdownOnIdle,
        @Nullable String shutdownWhenNotConnected) {
        this.disconnectDelay = disconnectDelay;
        this.idleDelay = idleDelay;
        this.noConnectDelay = noConnectDelay;
        this.shutdownOnDisconnect = shutdownOnDisconnect;
        this.shutdownOnIdle = shutdownOnIdle;
        this.shutdownWhenNotConnected = shutdownWhenNotConnected;
    }

    public Optional<String> getDisconnectDelay() {
        return Optional.ofNullable(this.disconnectDelay);
    }
    public Optional<String> getIdleDelay() {
        return Optional.ofNullable(this.idleDelay);
    }
    public Optional<String> getNoConnectDelay() {
        return Optional.ofNullable(this.noConnectDelay);
    }
    public Optional<String> getShutdownOnDisconnect() {
        return Optional.ofNullable(this.shutdownOnDisconnect);
    }
    public Optional<String> getShutdownOnIdle() {
        return Optional.ofNullable(this.shutdownOnIdle);
    }
    public Optional<String> getShutdownWhenNotConnected() {
        return Optional.ofNullable(this.shutdownWhenNotConnected);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoShutdownProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String disconnectDelay;
        private @Nullable String idleDelay;
        private @Nullable String noConnectDelay;
        private @Nullable String shutdownOnDisconnect;
        private @Nullable String shutdownOnIdle;
        private @Nullable String shutdownWhenNotConnected;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoShutdownProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disconnectDelay = defaults.disconnectDelay;
    	      this.idleDelay = defaults.idleDelay;
    	      this.noConnectDelay = defaults.noConnectDelay;
    	      this.shutdownOnDisconnect = defaults.shutdownOnDisconnect;
    	      this.shutdownOnIdle = defaults.shutdownOnIdle;
    	      this.shutdownWhenNotConnected = defaults.shutdownWhenNotConnected;
        }

        public Builder setDisconnectDelay(@Nullable String disconnectDelay) {
            this.disconnectDelay = disconnectDelay;
            return this;
        }

        public Builder setIdleDelay(@Nullable String idleDelay) {
            this.idleDelay = idleDelay;
            return this;
        }

        public Builder setNoConnectDelay(@Nullable String noConnectDelay) {
            this.noConnectDelay = noConnectDelay;
            return this;
        }

        public Builder setShutdownOnDisconnect(@Nullable String shutdownOnDisconnect) {
            this.shutdownOnDisconnect = shutdownOnDisconnect;
            return this;
        }

        public Builder setShutdownOnIdle(@Nullable String shutdownOnIdle) {
            this.shutdownOnIdle = shutdownOnIdle;
            return this;
        }

        public Builder setShutdownWhenNotConnected(@Nullable String shutdownWhenNotConnected) {
            this.shutdownWhenNotConnected = shutdownWhenNotConnected;
            return this;
        }

        public AutoShutdownProfileResponse build() {
            return new AutoShutdownProfileResponse(disconnectDelay, idleDelay, noConnectDelay, shutdownOnDisconnect, shutdownOnIdle, shutdownWhenNotConnected);
        }
    }
}
