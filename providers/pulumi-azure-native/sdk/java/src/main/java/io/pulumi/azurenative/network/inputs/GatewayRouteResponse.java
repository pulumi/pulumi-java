// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Gateway routing details.
 * 
 */
public final class GatewayRouteResponse extends io.pulumi.resources.InvokeArgs {

    public static final GatewayRouteResponse Empty = new GatewayRouteResponse();

    /**
     * The route's AS path sequence.
     * 
     */
    @Import(name="asPath", required=true)
      private final String asPath;

    public String asPath() {
        return this.asPath;
    }

    /**
     * The gateway's local address.
     * 
     */
    @Import(name="localAddress", required=true)
      private final String localAddress;

    public String localAddress() {
        return this.localAddress;
    }

    /**
     * The route's network prefix.
     * 
     */
    @Import(name="network", required=true)
      private final String network;

    public String network() {
        return this.network;
    }

    /**
     * The route's next hop.
     * 
     */
    @Import(name="nextHop", required=true)
      private final String nextHop;

    public String nextHop() {
        return this.nextHop;
    }

    /**
     * The source this route was learned from.
     * 
     */
    @Import(name="origin", required=true)
      private final String origin;

    public String origin() {
        return this.origin;
    }

    /**
     * The peer this route was learned from.
     * 
     */
    @Import(name="sourcePeer", required=true)
      private final String sourcePeer;

    public String sourcePeer() {
        return this.sourcePeer;
    }

    /**
     * The route's weight.
     * 
     */
    @Import(name="weight", required=true)
      private final Integer weight;

    public Integer weight() {
        return this.weight;
    }

    public GatewayRouteResponse(
        String asPath,
        String localAddress,
        String network,
        String nextHop,
        String origin,
        String sourcePeer,
        Integer weight) {
        this.asPath = Objects.requireNonNull(asPath, "expected parameter 'asPath' to be non-null");
        this.localAddress = Objects.requireNonNull(localAddress, "expected parameter 'localAddress' to be non-null");
        this.network = Objects.requireNonNull(network, "expected parameter 'network' to be non-null");
        this.nextHop = Objects.requireNonNull(nextHop, "expected parameter 'nextHop' to be non-null");
        this.origin = Objects.requireNonNull(origin, "expected parameter 'origin' to be non-null");
        this.sourcePeer = Objects.requireNonNull(sourcePeer, "expected parameter 'sourcePeer' to be non-null");
        this.weight = Objects.requireNonNull(weight, "expected parameter 'weight' to be non-null");
    }

    private GatewayRouteResponse() {
        this.asPath = null;
        this.localAddress = null;
        this.network = null;
        this.nextHop = null;
        this.origin = null;
        this.sourcePeer = null;
        this.weight = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayRouteResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String asPath;
        private String localAddress;
        private String network;
        private String nextHop;
        private String origin;
        private String sourcePeer;
        private Integer weight;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayRouteResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asPath = defaults.asPath;
    	      this.localAddress = defaults.localAddress;
    	      this.network = defaults.network;
    	      this.nextHop = defaults.nextHop;
    	      this.origin = defaults.origin;
    	      this.sourcePeer = defaults.sourcePeer;
    	      this.weight = defaults.weight;
        }

        public Builder asPath(String asPath) {
            this.asPath = Objects.requireNonNull(asPath);
            return this;
        }
        public Builder localAddress(String localAddress) {
            this.localAddress = Objects.requireNonNull(localAddress);
            return this;
        }
        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        public Builder nextHop(String nextHop) {
            this.nextHop = Objects.requireNonNull(nextHop);
            return this;
        }
        public Builder origin(String origin) {
            this.origin = Objects.requireNonNull(origin);
            return this;
        }
        public Builder sourcePeer(String sourcePeer) {
            this.sourcePeer = Objects.requireNonNull(sourcePeer);
            return this;
        }
        public Builder weight(Integer weight) {
            this.weight = Objects.requireNonNull(weight);
            return this;
        }        public GatewayRouteResponse build() {
            return new GatewayRouteResponse(asPath, localAddress, network, nextHop, origin, sourcePeer, weight);
        }
    }
}
