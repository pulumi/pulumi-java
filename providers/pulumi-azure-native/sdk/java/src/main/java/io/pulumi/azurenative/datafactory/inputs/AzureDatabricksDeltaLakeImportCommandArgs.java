// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Azure Databricks Delta Lake import command settings.
 * 
 */
public final class AzureDatabricksDeltaLakeImportCommandArgs extends io.pulumi.resources.ResourceArgs {

    public static final AzureDatabricksDeltaLakeImportCommandArgs Empty = new AzureDatabricksDeltaLakeImportCommandArgs();

    /**
     * Specify the date format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
     * 
     */
    @InputImport(name="dateFormat")
      private final @Nullable Output<Object> dateFormat;

    public Output<Object> getDateFormat() {
        return this.dateFormat == null ? Output.empty() : this.dateFormat;
    }

    /**
     * Specify the timestamp format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
     * 
     */
    @InputImport(name="timestampFormat")
      private final @Nullable Output<Object> timestampFormat;

    public Output<Object> getTimestampFormat() {
        return this.timestampFormat == null ? Output.empty() : this.timestampFormat;
    }

    /**
     * The import setting type.
     * Expected value is 'AzureDatabricksDeltaLakeImportCommand'.
     * 
     */
    @InputImport(name="type", required=true)
      private final Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    public AzureDatabricksDeltaLakeImportCommandArgs(
        @Nullable Output<Object> dateFormat,
        @Nullable Output<Object> timestampFormat,
        Output<String> type) {
        this.dateFormat = dateFormat;
        this.timestampFormat = timestampFormat;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private AzureDatabricksDeltaLakeImportCommandArgs() {
        this.dateFormat = Output.empty();
        this.timestampFormat = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureDatabricksDeltaLakeImportCommandArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> dateFormat;
        private @Nullable Output<Object> timestampFormat;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureDatabricksDeltaLakeImportCommandArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dateFormat = defaults.dateFormat;
    	      this.timestampFormat = defaults.timestampFormat;
    	      this.type = defaults.type;
        }

        public Builder dateFormat(@Nullable Output<Object> dateFormat) {
            this.dateFormat = dateFormat;
            return this;
        }

        public Builder dateFormat(@Nullable Object dateFormat) {
            this.dateFormat = Output.ofNullable(dateFormat);
            return this;
        }

        public Builder timestampFormat(@Nullable Output<Object> timestampFormat) {
            this.timestampFormat = timestampFormat;
            return this;
        }

        public Builder timestampFormat(@Nullable Object timestampFormat) {
            this.timestampFormat = Output.ofNullable(timestampFormat);
            return this;
        }

        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }
        public AzureDatabricksDeltaLakeImportCommandArgs build() {
            return new AzureDatabricksDeltaLakeImportCommandArgs(dateFormat, timestampFormat, type);
        }
    }
}
