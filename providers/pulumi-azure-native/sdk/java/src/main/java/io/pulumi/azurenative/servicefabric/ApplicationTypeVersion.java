// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric;

import io.pulumi.azurenative.Utilities;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * An application type version resource for the specified application type name resource.
API Version: 2020-03-01.

{{% examples %}}
## Example Usage
{{% example %}}
### Put an application type version
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var applicationTypeVersion = new AzureNative.ServiceFabric.ApplicationTypeVersion("applicationTypeVersion", new AzureNative.ServiceFabric.ApplicationTypeVersionArgs
        {
            AppPackageUrl = "http://fakelink.test.com/MyAppType",
            ApplicationTypeName = "myAppType",
            ClusterName = "myCluster",
            ResourceGroupName = "resRg",
            Version = "1.0",
        });
    }

}

```

```go
package main

import (
	servicefabric "github.com/pulumi/pulumi-azure-native/sdk/go/azure/servicefabric"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := servicefabric.NewApplicationTypeVersion(ctx, "applicationTypeVersion", &servicefabric.ApplicationTypeVersionArgs{
			AppPackageUrl:       pulumi.String("http://fakelink.test.com/MyAppType"),
			ApplicationTypeName: pulumi.String("myAppType"),
			ClusterName:         pulumi.String("myCluster"),
			ResourceGroupName:   pulumi.String("resRg"),
			Version:             pulumi.String("1.0"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const applicationTypeVersion = new azure_native.servicefabric.ApplicationTypeVersion("applicationTypeVersion", {
    appPackageUrl: "http://fakelink.test.com/MyAppType",
    applicationTypeName: "myAppType",
    clusterName: "myCluster",
    resourceGroupName: "resRg",
    version: "1.0",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

application_type_version = azure_native.servicefabric.ApplicationTypeVersion("applicationTypeVersion",
    app_package_url="http://fakelink.test.com/MyAppType",
    application_type_name="myAppType",
    cluster_name="myCluster",
    resource_group_name="resRg",
    version="1.0")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:servicefabric:ApplicationTypeVersion myCluster /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applicationTypes/myAppType/versions/1.0 
```

 */
@ResourceType(type="azure-native:servicefabric:ApplicationTypeVersion")
public class ApplicationTypeVersion extends io.pulumi.resources.CustomResource {
    /**
     * The URL to the application package
     */
    @OutputExport(name="appPackageUrl", type=String.class, parameters={})
    private Output<String> appPackageUrl;

    /**
     * @return The URL to the application package
     */
    public Output<String> getAppPackageUrl() {
        return this.appPackageUrl;
    }
    /**
     * List of application type parameters that can be overridden when creating or updating the application.
     */
    @OutputExport(name="defaultParameterList", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> defaultParameterList;

    /**
     * @return List of application type parameters that can be overridden when creating or updating the application.
     */
    public Output<Map<String,String>> getDefaultParameterList() {
        return this.defaultParameterList;
    }
    /**
     * Azure resource etag.
     */
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return Azure resource etag.
     */
    public Output<String> getEtag() {
        return this.etag;
    }
    /**
     * It will be deprecated in New API, resource location depends on the parent resource.
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return It will be deprecated in New API, resource location depends on the parent resource.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * Azure resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Azure resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The current deployment or provisioning state, which only appears in the response
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The current deployment or provisioning state, which only appears in the response
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Azure resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Azure resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Azure resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Azure resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApplicationTypeVersion(String name, ApplicationTypeVersionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicefabric:ApplicationTypeVersion", name, args == null ? ApplicationTypeVersionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ApplicationTypeVersion(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicefabric:ApplicationTypeVersion", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20170701preview:ApplicationTypeVersion").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20190301:ApplicationTypeVersion").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20190301preview:ApplicationTypeVersion").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20190601preview:ApplicationTypeVersion").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20191101preview:ApplicationTypeVersion").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20200301:ApplicationTypeVersion").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20201201preview:ApplicationTypeVersion").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20210601:ApplicationTypeVersion").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApplicationTypeVersion get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ApplicationTypeVersion(name, id, options);
    }
}
