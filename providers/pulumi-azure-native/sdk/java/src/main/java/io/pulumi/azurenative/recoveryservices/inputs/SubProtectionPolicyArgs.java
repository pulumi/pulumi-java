// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.azurenative.recoveryservices.enums.PolicyType;
import io.pulumi.azurenative.recoveryservices.inputs.LogSchedulePolicyArgs;
import io.pulumi.azurenative.recoveryservices.inputs.LongTermRetentionPolicyArgs;
import io.pulumi.azurenative.recoveryservices.inputs.LongTermSchedulePolicyArgs;
import io.pulumi.azurenative.recoveryservices.inputs.SimpleRetentionPolicyArgs;
import io.pulumi.azurenative.recoveryservices.inputs.SimpleSchedulePolicyArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Sub-protection policy which includes schedule and retention
 * 
 */
public final class SubProtectionPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubProtectionPolicyArgs Empty = new SubProtectionPolicyArgs();

    /**
     * Type of backup policy type
     * 
     */
    @InputImport(name="policyType")
      private final @Nullable Input<Either<String,PolicyType>> policyType;

    public Input<Either<String,PolicyType>> getPolicyType() {
        return this.policyType == null ? Input.empty() : this.policyType;
    }

    /**
     * Retention policy with the details on backup copy retention ranges.
     * 
     */
    @InputImport(name="retentionPolicy")
      private final @Nullable Input<Either<LongTermRetentionPolicyArgs,SimpleRetentionPolicyArgs>> retentionPolicy;

    public Input<Either<LongTermRetentionPolicyArgs,SimpleRetentionPolicyArgs>> getRetentionPolicy() {
        return this.retentionPolicy == null ? Input.empty() : this.retentionPolicy;
    }

    /**
     * Backup schedule specified as part of backup policy.
     * 
     */
    @InputImport(name="schedulePolicy")
      private final @Nullable Input<Object> schedulePolicy;

    public Input<Object> getSchedulePolicy() {
        return this.schedulePolicy == null ? Input.empty() : this.schedulePolicy;
    }

    public SubProtectionPolicyArgs(
        @Nullable Input<Either<String,PolicyType>> policyType,
        @Nullable Input<Either<LongTermRetentionPolicyArgs,SimpleRetentionPolicyArgs>> retentionPolicy,
        @Nullable Input<Object> schedulePolicy) {
        this.policyType = policyType;
        this.retentionPolicy = retentionPolicy;
        this.schedulePolicy = schedulePolicy;
    }

    private SubProtectionPolicyArgs() {
        this.policyType = Input.empty();
        this.retentionPolicy = Input.empty();
        this.schedulePolicy = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubProtectionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,PolicyType>> policyType;
        private @Nullable Input<Either<LongTermRetentionPolicyArgs,SimpleRetentionPolicyArgs>> retentionPolicy;
        private @Nullable Input<Object> schedulePolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(SubProtectionPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policyType = defaults.policyType;
    	      this.retentionPolicy = defaults.retentionPolicy;
    	      this.schedulePolicy = defaults.schedulePolicy;
        }

        public Builder policyType(@Nullable Input<Either<String,PolicyType>> policyType) {
            this.policyType = policyType;
            return this;
        }

        public Builder policyType(@Nullable Either<String,PolicyType> policyType) {
            this.policyType = Input.ofNullable(policyType);
            return this;
        }

        public Builder retentionPolicy(@Nullable Input<Either<LongTermRetentionPolicyArgs,SimpleRetentionPolicyArgs>> retentionPolicy) {
            this.retentionPolicy = retentionPolicy;
            return this;
        }

        public Builder retentionPolicy(@Nullable Either<LongTermRetentionPolicyArgs,SimpleRetentionPolicyArgs> retentionPolicy) {
            this.retentionPolicy = Input.ofNullable(retentionPolicy);
            return this;
        }

        public Builder schedulePolicy(@Nullable Input<Object> schedulePolicy) {
            this.schedulePolicy = schedulePolicy;
            return this;
        }

        public Builder schedulePolicy(@Nullable Object schedulePolicy) {
            this.schedulePolicy = Input.ofNullable(schedulePolicy);
            return this;
        }
        public SubProtectionPolicyArgs build() {
            return new SubProtectionPolicyArgs(policyType, retentionPolicy, schedulePolicy);
        }
    }
}
