// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An Application Insights component daily data volume cap
 * 
 */
public final class ApplicationInsightsComponentDataVolumeCapArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApplicationInsightsComponentDataVolumeCapArgs Empty = new ApplicationInsightsComponentDataVolumeCapArgs();

    /**
     * Daily data volume cap in GB.
     * 
     */
    @InputImport(name="cap")
      private final @Nullable Output<Double> cap;

    public Output<Double> getCap() {
        return this.cap == null ? Output.empty() : this.cap;
    }

    /**
     * Do not send a notification email when the daily data volume cap is met.
     * 
     */
    @InputImport(name="stopSendNotificationWhenHitCap")
      private final @Nullable Output<Boolean> stopSendNotificationWhenHitCap;

    public Output<Boolean> getStopSendNotificationWhenHitCap() {
        return this.stopSendNotificationWhenHitCap == null ? Output.empty() : this.stopSendNotificationWhenHitCap;
    }

    /**
     * Reserved, not used for now.
     * 
     */
    @InputImport(name="stopSendNotificationWhenHitThreshold")
      private final @Nullable Output<Boolean> stopSendNotificationWhenHitThreshold;

    public Output<Boolean> getStopSendNotificationWhenHitThreshold() {
        return this.stopSendNotificationWhenHitThreshold == null ? Output.empty() : this.stopSendNotificationWhenHitThreshold;
    }

    /**
     * Reserved, not used for now.
     * 
     */
    @InputImport(name="warningThreshold")
      private final @Nullable Output<Integer> warningThreshold;

    public Output<Integer> getWarningThreshold() {
        return this.warningThreshold == null ? Output.empty() : this.warningThreshold;
    }

    public ApplicationInsightsComponentDataVolumeCapArgs(
        @Nullable Output<Double> cap,
        @Nullable Output<Boolean> stopSendNotificationWhenHitCap,
        @Nullable Output<Boolean> stopSendNotificationWhenHitThreshold,
        @Nullable Output<Integer> warningThreshold) {
        this.cap = cap;
        this.stopSendNotificationWhenHitCap = stopSendNotificationWhenHitCap;
        this.stopSendNotificationWhenHitThreshold = stopSendNotificationWhenHitThreshold;
        this.warningThreshold = warningThreshold;
    }

    private ApplicationInsightsComponentDataVolumeCapArgs() {
        this.cap = Output.empty();
        this.stopSendNotificationWhenHitCap = Output.empty();
        this.stopSendNotificationWhenHitThreshold = Output.empty();
        this.warningThreshold = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationInsightsComponentDataVolumeCapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Double> cap;
        private @Nullable Output<Boolean> stopSendNotificationWhenHitCap;
        private @Nullable Output<Boolean> stopSendNotificationWhenHitThreshold;
        private @Nullable Output<Integer> warningThreshold;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationInsightsComponentDataVolumeCapArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cap = defaults.cap;
    	      this.stopSendNotificationWhenHitCap = defaults.stopSendNotificationWhenHitCap;
    	      this.stopSendNotificationWhenHitThreshold = defaults.stopSendNotificationWhenHitThreshold;
    	      this.warningThreshold = defaults.warningThreshold;
        }

        public Builder cap(@Nullable Output<Double> cap) {
            this.cap = cap;
            return this;
        }

        public Builder cap(@Nullable Double cap) {
            this.cap = Output.ofNullable(cap);
            return this;
        }

        public Builder stopSendNotificationWhenHitCap(@Nullable Output<Boolean> stopSendNotificationWhenHitCap) {
            this.stopSendNotificationWhenHitCap = stopSendNotificationWhenHitCap;
            return this;
        }

        public Builder stopSendNotificationWhenHitCap(@Nullable Boolean stopSendNotificationWhenHitCap) {
            this.stopSendNotificationWhenHitCap = Output.ofNullable(stopSendNotificationWhenHitCap);
            return this;
        }

        public Builder stopSendNotificationWhenHitThreshold(@Nullable Output<Boolean> stopSendNotificationWhenHitThreshold) {
            this.stopSendNotificationWhenHitThreshold = stopSendNotificationWhenHitThreshold;
            return this;
        }

        public Builder stopSendNotificationWhenHitThreshold(@Nullable Boolean stopSendNotificationWhenHitThreshold) {
            this.stopSendNotificationWhenHitThreshold = Output.ofNullable(stopSendNotificationWhenHitThreshold);
            return this;
        }

        public Builder warningThreshold(@Nullable Output<Integer> warningThreshold) {
            this.warningThreshold = warningThreshold;
            return this;
        }

        public Builder warningThreshold(@Nullable Integer warningThreshold) {
            this.warningThreshold = Output.ofNullable(warningThreshold);
            return this;
        }
        public ApplicationInsightsComponentDataVolumeCapArgs build() {
            return new ApplicationInsightsComponentDataVolumeCapArgs(cap, stopSendNotificationWhenHitCap, stopSendNotificationWhenHitThreshold, warningThreshold);
        }
    }
}
