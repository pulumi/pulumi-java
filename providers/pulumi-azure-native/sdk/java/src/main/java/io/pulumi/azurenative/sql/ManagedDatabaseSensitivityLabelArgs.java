// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.sql.enums.SensitivityLabelRank;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ManagedDatabaseSensitivityLabelArgs extends io.pulumi.resources.ResourceArgs {

    public static final ManagedDatabaseSensitivityLabelArgs Empty = new ManagedDatabaseSensitivityLabelArgs();

    /**
     * The name of the column.
     * 
     */
    @InputImport(name="columnName", required=true)
    private final Input<String> columnName;

    public Input<String> getColumnName() {
        return this.columnName;
    }

    /**
     * The name of the database.
     * 
     */
    @InputImport(name="databaseName", required=true)
    private final Input<String> databaseName;

    public Input<String> getDatabaseName() {
        return this.databaseName;
    }

    /**
     * The information type.
     * 
     */
    @InputImport(name="informationType")
    private final @Nullable Input<String> informationType;

    public Input<String> getInformationType() {
        return this.informationType == null ? Input.empty() : this.informationType;
    }

    /**
     * The information type ID.
     * 
     */
    @InputImport(name="informationTypeId")
    private final @Nullable Input<String> informationTypeId;

    public Input<String> getInformationTypeId() {
        return this.informationTypeId == null ? Input.empty() : this.informationTypeId;
    }

    /**
     * The label ID.
     * 
     */
    @InputImport(name="labelId")
    private final @Nullable Input<String> labelId;

    public Input<String> getLabelId() {
        return this.labelId == null ? Input.empty() : this.labelId;
    }

    /**
     * The label name.
     * 
     */
    @InputImport(name="labelName")
    private final @Nullable Input<String> labelName;

    public Input<String> getLabelName() {
        return this.labelName == null ? Input.empty() : this.labelName;
    }

    /**
     * The name of the managed instance.
     * 
     */
    @InputImport(name="managedInstanceName", required=true)
    private final Input<String> managedInstanceName;

    public Input<String> getManagedInstanceName() {
        return this.managedInstanceName;
    }

    @InputImport(name="rank")
    private final @Nullable Input<SensitivityLabelRank> rank;

    public Input<SensitivityLabelRank> getRank() {
        return this.rank == null ? Input.empty() : this.rank;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the schema.
     * 
     */
    @InputImport(name="schemaName", required=true)
    private final Input<String> schemaName;

    public Input<String> getSchemaName() {
        return this.schemaName;
    }

    /**
     * The source of the sensitivity label.
     * 
     */
    @InputImport(name="sensitivityLabelSource")
    private final @Nullable Input<String> sensitivityLabelSource;

    public Input<String> getSensitivityLabelSource() {
        return this.sensitivityLabelSource == null ? Input.empty() : this.sensitivityLabelSource;
    }

    /**
     * The name of the table.
     * 
     */
    @InputImport(name="tableName", required=true)
    private final Input<String> tableName;

    public Input<String> getTableName() {
        return this.tableName;
    }

    public ManagedDatabaseSensitivityLabelArgs(
        Input<String> columnName,
        Input<String> databaseName,
        @Nullable Input<String> informationType,
        @Nullable Input<String> informationTypeId,
        @Nullable Input<String> labelId,
        @Nullable Input<String> labelName,
        Input<String> managedInstanceName,
        @Nullable Input<SensitivityLabelRank> rank,
        Input<String> resourceGroupName,
        Input<String> schemaName,
        @Nullable Input<String> sensitivityLabelSource,
        Input<String> tableName) {
        this.columnName = Objects.requireNonNull(columnName, "expected parameter 'columnName' to be non-null");
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.informationType = informationType;
        this.informationTypeId = informationTypeId;
        this.labelId = labelId;
        this.labelName = labelName;
        this.managedInstanceName = Objects.requireNonNull(managedInstanceName, "expected parameter 'managedInstanceName' to be non-null");
        this.rank = rank;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.schemaName = Objects.requireNonNull(schemaName, "expected parameter 'schemaName' to be non-null");
        this.sensitivityLabelSource = sensitivityLabelSource;
        this.tableName = Objects.requireNonNull(tableName, "expected parameter 'tableName' to be non-null");
    }

    private ManagedDatabaseSensitivityLabelArgs() {
        this.columnName = Input.empty();
        this.databaseName = Input.empty();
        this.informationType = Input.empty();
        this.informationTypeId = Input.empty();
        this.labelId = Input.empty();
        this.labelName = Input.empty();
        this.managedInstanceName = Input.empty();
        this.rank = Input.empty();
        this.resourceGroupName = Input.empty();
        this.schemaName = Input.empty();
        this.sensitivityLabelSource = Input.empty();
        this.tableName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedDatabaseSensitivityLabelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> columnName;
        private Input<String> databaseName;
        private @Nullable Input<String> informationType;
        private @Nullable Input<String> informationTypeId;
        private @Nullable Input<String> labelId;
        private @Nullable Input<String> labelName;
        private Input<String> managedInstanceName;
        private @Nullable Input<SensitivityLabelRank> rank;
        private Input<String> resourceGroupName;
        private Input<String> schemaName;
        private @Nullable Input<String> sensitivityLabelSource;
        private Input<String> tableName;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedDatabaseSensitivityLabelArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnName = defaults.columnName;
    	      this.databaseName = defaults.databaseName;
    	      this.informationType = defaults.informationType;
    	      this.informationTypeId = defaults.informationTypeId;
    	      this.labelId = defaults.labelId;
    	      this.labelName = defaults.labelName;
    	      this.managedInstanceName = defaults.managedInstanceName;
    	      this.rank = defaults.rank;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.schemaName = defaults.schemaName;
    	      this.sensitivityLabelSource = defaults.sensitivityLabelSource;
    	      this.tableName = defaults.tableName;
        }

        public Builder setColumnName(Input<String> columnName) {
            this.columnName = Objects.requireNonNull(columnName);
            return this;
        }

        public Builder setColumnName(String columnName) {
            this.columnName = Input.of(Objects.requireNonNull(columnName));
            return this;
        }

        public Builder setDatabaseName(Input<String> databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }

        public Builder setDatabaseName(String databaseName) {
            this.databaseName = Input.of(Objects.requireNonNull(databaseName));
            return this;
        }

        public Builder setInformationType(@Nullable Input<String> informationType) {
            this.informationType = informationType;
            return this;
        }

        public Builder setInformationType(@Nullable String informationType) {
            this.informationType = Input.ofNullable(informationType);
            return this;
        }

        public Builder setInformationTypeId(@Nullable Input<String> informationTypeId) {
            this.informationTypeId = informationTypeId;
            return this;
        }

        public Builder setInformationTypeId(@Nullable String informationTypeId) {
            this.informationTypeId = Input.ofNullable(informationTypeId);
            return this;
        }

        public Builder setLabelId(@Nullable Input<String> labelId) {
            this.labelId = labelId;
            return this;
        }

        public Builder setLabelId(@Nullable String labelId) {
            this.labelId = Input.ofNullable(labelId);
            return this;
        }

        public Builder setLabelName(@Nullable Input<String> labelName) {
            this.labelName = labelName;
            return this;
        }

        public Builder setLabelName(@Nullable String labelName) {
            this.labelName = Input.ofNullable(labelName);
            return this;
        }

        public Builder setManagedInstanceName(Input<String> managedInstanceName) {
            this.managedInstanceName = Objects.requireNonNull(managedInstanceName);
            return this;
        }

        public Builder setManagedInstanceName(String managedInstanceName) {
            this.managedInstanceName = Input.of(Objects.requireNonNull(managedInstanceName));
            return this;
        }

        public Builder setRank(@Nullable Input<SensitivityLabelRank> rank) {
            this.rank = rank;
            return this;
        }

        public Builder setRank(@Nullable SensitivityLabelRank rank) {
            this.rank = Input.ofNullable(rank);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setSchemaName(Input<String> schemaName) {
            this.schemaName = Objects.requireNonNull(schemaName);
            return this;
        }

        public Builder setSchemaName(String schemaName) {
            this.schemaName = Input.of(Objects.requireNonNull(schemaName));
            return this;
        }

        public Builder setSensitivityLabelSource(@Nullable Input<String> sensitivityLabelSource) {
            this.sensitivityLabelSource = sensitivityLabelSource;
            return this;
        }

        public Builder setSensitivityLabelSource(@Nullable String sensitivityLabelSource) {
            this.sensitivityLabelSource = Input.ofNullable(sensitivityLabelSource);
            return this;
        }

        public Builder setTableName(Input<String> tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }

        public Builder setTableName(String tableName) {
            this.tableName = Input.of(Objects.requireNonNull(tableName));
            return this;
        }

        public ManagedDatabaseSensitivityLabelArgs build() {
            return new ManagedDatabaseSensitivityLabelArgs(columnName, databaseName, informationType, informationTypeId, labelId, labelName, managedInstanceName, rank, resourceGroupName, schemaName, sensitivityLabelSource, tableName);
        }
    }
}
