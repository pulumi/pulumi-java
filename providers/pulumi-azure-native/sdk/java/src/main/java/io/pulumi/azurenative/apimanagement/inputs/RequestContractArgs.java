// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement.inputs;

import io.pulumi.azurenative.apimanagement.inputs.ParameterContractArgs;
import io.pulumi.azurenative.apimanagement.inputs.RepresentationContractArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Operation request details.
 * 
 */
public final class RequestContractArgs extends io.pulumi.resources.ResourceArgs {

    public static final RequestContractArgs Empty = new RequestContractArgs();

    /**
     * Operation request description.
     * 
     */
    @InputImport(name="description")
        private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Collection of operation request headers.
     * 
     */
    @InputImport(name="headers")
        private final @Nullable Input<List<ParameterContractArgs>> headers;

    public Input<List<ParameterContractArgs>> getHeaders() {
        return this.headers == null ? Input.empty() : this.headers;
    }

    /**
     * Collection of operation request query parameters.
     * 
     */
    @InputImport(name="queryParameters")
        private final @Nullable Input<List<ParameterContractArgs>> queryParameters;

    public Input<List<ParameterContractArgs>> getQueryParameters() {
        return this.queryParameters == null ? Input.empty() : this.queryParameters;
    }

    /**
     * Collection of operation request representations.
     * 
     */
    @InputImport(name="representations")
        private final @Nullable Input<List<RepresentationContractArgs>> representations;

    public Input<List<RepresentationContractArgs>> getRepresentations() {
        return this.representations == null ? Input.empty() : this.representations;
    }

    public RequestContractArgs(
        @Nullable Input<String> description,
        @Nullable Input<List<ParameterContractArgs>> headers,
        @Nullable Input<List<ParameterContractArgs>> queryParameters,
        @Nullable Input<List<RepresentationContractArgs>> representations) {
        this.description = description;
        this.headers = headers;
        this.queryParameters = queryParameters;
        this.representations = representations;
    }

    private RequestContractArgs() {
        this.description = Input.empty();
        this.headers = Input.empty();
        this.queryParameters = Input.empty();
        this.representations = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RequestContractArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<List<ParameterContractArgs>> headers;
        private @Nullable Input<List<ParameterContractArgs>> queryParameters;
        private @Nullable Input<List<RepresentationContractArgs>> representations;

        public Builder() {
    	      // Empty
        }

        public Builder(RequestContractArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.headers = defaults.headers;
    	      this.queryParameters = defaults.queryParameters;
    	      this.representations = defaults.representations;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setHeaders(@Nullable Input<List<ParameterContractArgs>> headers) {
            this.headers = headers;
            return this;
        }

        public Builder setHeaders(@Nullable List<ParameterContractArgs> headers) {
            this.headers = Input.ofNullable(headers);
            return this;
        }

        public Builder setQueryParameters(@Nullable Input<List<ParameterContractArgs>> queryParameters) {
            this.queryParameters = queryParameters;
            return this;
        }

        public Builder setQueryParameters(@Nullable List<ParameterContractArgs> queryParameters) {
            this.queryParameters = Input.ofNullable(queryParameters);
            return this;
        }

        public Builder setRepresentations(@Nullable Input<List<RepresentationContractArgs>> representations) {
            this.representations = representations;
            return this;
        }

        public Builder setRepresentations(@Nullable List<RepresentationContractArgs> representations) {
            this.representations = Input.ofNullable(representations);
            return this;
        }
        public RequestContractArgs build() {
            return new RequestContractArgs(description, headers, queryParameters, representations);
        }
    }
}
