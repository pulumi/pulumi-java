// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.virtualmachineimages.inputs;

import io.pulumi.azurenative.virtualmachineimages.inputs.PlatformImagePurchasePlanArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes an image source from [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
 * 
 */
public final class ImageTemplatePlatformImageSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ImageTemplatePlatformImageSourceArgs Empty = new ImageTemplatePlatformImageSourceArgs();

    /**
     * Image offer from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
     * 
     */
    @Import(name="offer")
      private final @Nullable Output<String> offer;

    public Output<String> getOffer() {
        return this.offer == null ? Output.empty() : this.offer;
    }

    /**
     * Optional configuration of purchase plan for platform image.
     * 
     */
    @Import(name="planInfo")
      private final @Nullable Output<PlatformImagePurchasePlanArgs> planInfo;

    public Output<PlatformImagePurchasePlanArgs> getPlanInfo() {
        return this.planInfo == null ? Output.empty() : this.planInfo;
    }

    /**
     * Image Publisher in [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
     * 
     */
    @Import(name="publisher")
      private final @Nullable Output<String> publisher;

    public Output<String> getPublisher() {
        return this.publisher == null ? Output.empty() : this.publisher;
    }

    /**
     * Image sku from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<String> sku;

    public Output<String> getSku() {
        return this.sku == null ? Output.empty() : this.sku;
    }

    /**
     * Specifies the type of source image you want to start with.
     * Expected value is 'PlatformImage'.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    /**
     * Image version from the [Azure Gallery Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages). If 'latest' is specified here, the version is evaluated when the image build takes place, not when the template is submitted. Specifying 'latest' could cause ROUNDTRIP_INCONSISTENT_PROPERTY issue which will be fixed.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<String> version;

    public Output<String> getVersion() {
        return this.version == null ? Output.empty() : this.version;
    }

    public ImageTemplatePlatformImageSourceArgs(
        @Nullable Output<String> offer,
        @Nullable Output<PlatformImagePurchasePlanArgs> planInfo,
        @Nullable Output<String> publisher,
        @Nullable Output<String> sku,
        Output<String> type,
        @Nullable Output<String> version) {
        this.offer = offer;
        this.planInfo = planInfo;
        this.publisher = publisher;
        this.sku = sku;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.version = version;
    }

    private ImageTemplatePlatformImageSourceArgs() {
        this.offer = Output.empty();
        this.planInfo = Output.empty();
        this.publisher = Output.empty();
        this.sku = Output.empty();
        this.type = Output.empty();
        this.version = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageTemplatePlatformImageSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> offer;
        private @Nullable Output<PlatformImagePurchasePlanArgs> planInfo;
        private @Nullable Output<String> publisher;
        private @Nullable Output<String> sku;
        private Output<String> type;
        private @Nullable Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageTemplatePlatformImageSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.offer = defaults.offer;
    	      this.planInfo = defaults.planInfo;
    	      this.publisher = defaults.publisher;
    	      this.sku = defaults.sku;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        public Builder offer(@Nullable Output<String> offer) {
            this.offer = offer;
            return this;
        }

        public Builder offer(@Nullable String offer) {
            this.offer = Output.ofNullable(offer);
            return this;
        }

        public Builder planInfo(@Nullable Output<PlatformImagePurchasePlanArgs> planInfo) {
            this.planInfo = planInfo;
            return this;
        }

        public Builder planInfo(@Nullable PlatformImagePurchasePlanArgs planInfo) {
            this.planInfo = Output.ofNullable(planInfo);
            return this;
        }

        public Builder publisher(@Nullable Output<String> publisher) {
            this.publisher = publisher;
            return this;
        }

        public Builder publisher(@Nullable String publisher) {
            this.publisher = Output.ofNullable(publisher);
            return this;
        }

        public Builder sku(@Nullable Output<String> sku) {
            this.sku = sku;
            return this;
        }

        public Builder sku(@Nullable String sku) {
            this.sku = Output.ofNullable(sku);
            return this;
        }

        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }

        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }

        public Builder version(@Nullable String version) {
            this.version = Output.ofNullable(version);
            return this;
        }
        public ImageTemplatePlatformImageSourceArgs build() {
            return new ImageTemplatePlatformImageSourceArgs(offer, planInfo, publisher, sku, type, version);
        }
    }
}
