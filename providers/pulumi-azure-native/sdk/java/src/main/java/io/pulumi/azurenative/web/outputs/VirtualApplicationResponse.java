// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.VirtualDirectoryResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class VirtualApplicationResponse {
    private final @Nullable String physicalPath;
    private final @Nullable Boolean preloadEnabled;
    private final @Nullable List<VirtualDirectoryResponse> virtualDirectories;
    private final @Nullable String virtualPath;

    @OutputCustomType.Constructor({"physicalPath","preloadEnabled","virtualDirectories","virtualPath"})
    private VirtualApplicationResponse(
        @Nullable String physicalPath,
        @Nullable Boolean preloadEnabled,
        @Nullable List<VirtualDirectoryResponse> virtualDirectories,
        @Nullable String virtualPath) {
        this.physicalPath = physicalPath;
        this.preloadEnabled = preloadEnabled;
        this.virtualDirectories = virtualDirectories;
        this.virtualPath = virtualPath;
    }

    public Optional<String> getPhysicalPath() {
        return Optional.ofNullable(this.physicalPath);
    }
    public Optional<Boolean> getPreloadEnabled() {
        return Optional.ofNullable(this.preloadEnabled);
    }
    public List<VirtualDirectoryResponse> getVirtualDirectories() {
        return this.virtualDirectories == null ? List.of() : this.virtualDirectories;
    }
    public Optional<String> getVirtualPath() {
        return Optional.ofNullable(this.virtualPath);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualApplicationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String physicalPath;
        private @Nullable Boolean preloadEnabled;
        private @Nullable List<VirtualDirectoryResponse> virtualDirectories;
        private @Nullable String virtualPath;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualApplicationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.physicalPath = defaults.physicalPath;
    	      this.preloadEnabled = defaults.preloadEnabled;
    	      this.virtualDirectories = defaults.virtualDirectories;
    	      this.virtualPath = defaults.virtualPath;
        }

        public Builder setPhysicalPath(@Nullable String physicalPath) {
            this.physicalPath = physicalPath;
            return this;
        }

        public Builder setPreloadEnabled(@Nullable Boolean preloadEnabled) {
            this.preloadEnabled = preloadEnabled;
            return this;
        }

        public Builder setVirtualDirectories(@Nullable List<VirtualDirectoryResponse> virtualDirectories) {
            this.virtualDirectories = virtualDirectories;
            return this;
        }

        public Builder setVirtualPath(@Nullable String virtualPath) {
            this.virtualPath = virtualPath;
            return this;
        }

        public VirtualApplicationResponse build() {
            return new VirtualApplicationResponse(physicalPath, preloadEnabled, virtualDirectories, virtualPath);
        }
    }
}
