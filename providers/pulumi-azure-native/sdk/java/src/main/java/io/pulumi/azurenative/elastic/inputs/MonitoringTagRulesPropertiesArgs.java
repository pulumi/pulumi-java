// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.elastic.inputs;

import io.pulumi.azurenative.elastic.enums.ProvisioningState;
import io.pulumi.azurenative.elastic.inputs.LogRulesArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Definition of the properties for a TagRules resource.
 * 
 */
public final class MonitoringTagRulesPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final MonitoringTagRulesPropertiesArgs Empty = new MonitoringTagRulesPropertiesArgs();

    /**
     * Rules for sending logs.
     * 
     */
    @Import(name="logRules")
      private final @Nullable Output<LogRulesArgs> logRules;

    public Output<LogRulesArgs> logRules() {
        return this.logRules == null ? Codegen.empty() : this.logRules;
    }

    /**
     * Provisioning state of the monitoring tag rules.
     * 
     */
    @Import(name="provisioningState")
      private final @Nullable Output<Either<String,ProvisioningState>> provisioningState;

    public Output<Either<String,ProvisioningState>> provisioningState() {
        return this.provisioningState == null ? Codegen.empty() : this.provisioningState;
    }

    public MonitoringTagRulesPropertiesArgs(
        @Nullable Output<LogRulesArgs> logRules,
        @Nullable Output<Either<String,ProvisioningState>> provisioningState) {
        this.logRules = logRules;
        this.provisioningState = provisioningState;
    }

    private MonitoringTagRulesPropertiesArgs() {
        this.logRules = Codegen.empty();
        this.provisioningState = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringTagRulesPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<LogRulesArgs> logRules;
        private @Nullable Output<Either<String,ProvisioningState>> provisioningState;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoringTagRulesPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logRules = defaults.logRules;
    	      this.provisioningState = defaults.provisioningState;
        }

        public Builder logRules(@Nullable Output<LogRulesArgs> logRules) {
            this.logRules = logRules;
            return this;
        }
        public Builder logRules(@Nullable LogRulesArgs logRules) {
            this.logRules = Codegen.ofNullable(logRules);
            return this;
        }
        public Builder provisioningState(@Nullable Output<Either<String,ProvisioningState>> provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        public Builder provisioningState(@Nullable Either<String,ProvisioningState> provisioningState) {
            this.provisioningState = Codegen.ofNullable(provisioningState);
            return this;
        }        public MonitoringTagRulesPropertiesArgs build() {
            return new MonitoringTagRulesPropertiesArgs(logRules, provisioningState);
        }
    }
}
