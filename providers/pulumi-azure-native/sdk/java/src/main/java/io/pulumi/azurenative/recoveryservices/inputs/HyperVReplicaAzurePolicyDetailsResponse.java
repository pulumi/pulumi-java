// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Hyper-V Replica Azure specific protection profile details.
 * 
 */
public final class HyperVReplicaAzurePolicyDetailsResponse extends io.pulumi.resources.InvokeArgs {

    public static final HyperVReplicaAzurePolicyDetailsResponse Empty = new HyperVReplicaAzurePolicyDetailsResponse();

    /**
     * The active storage account Id.
     * 
     */
    @Import(name="activeStorageAccountId")
      private final @Nullable String activeStorageAccountId;

    public Optional<String> activeStorageAccountId() {
        return this.activeStorageAccountId == null ? Optional.empty() : Optional.ofNullable(this.activeStorageAccountId);
    }

    /**
     * The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
     * 
     */
    @Import(name="applicationConsistentSnapshotFrequencyInHours")
      private final @Nullable Integer applicationConsistentSnapshotFrequencyInHours;

    public Optional<Integer> applicationConsistentSnapshotFrequencyInHours() {
        return this.applicationConsistentSnapshotFrequencyInHours == null ? Optional.empty() : Optional.ofNullable(this.applicationConsistentSnapshotFrequencyInHours);
    }

    /**
     * A value indicating whether encryption is enabled for virtual machines in this cloud.
     * 
     */
    @Import(name="encryption")
      private final @Nullable String encryption;

    public Optional<String> encryption() {
        return this.encryption == null ? Optional.empty() : Optional.ofNullable(this.encryption);
    }

    /**
     * Gets the class type. Overridden in derived classes.
     * Expected value is 'HyperVReplicaAzure'.
     * 
     */
    @Import(name="instanceType", required=true)
      private final String instanceType;

    public String instanceType() {
        return this.instanceType;
    }

    /**
     * The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
     * 
     */
    @Import(name="onlineReplicationStartTime")
      private final @Nullable String onlineReplicationStartTime;

    public Optional<String> onlineReplicationStartTime() {
        return this.onlineReplicationStartTime == null ? Optional.empty() : Optional.ofNullable(this.onlineReplicationStartTime);
    }

    /**
     * The duration (in hours) to which point the recovery history needs to be maintained.
     * 
     */
    @Import(name="recoveryPointHistoryDurationInHours")
      private final @Nullable Integer recoveryPointHistoryDurationInHours;

    public Optional<Integer> recoveryPointHistoryDurationInHours() {
        return this.recoveryPointHistoryDurationInHours == null ? Optional.empty() : Optional.ofNullable(this.recoveryPointHistoryDurationInHours);
    }

    /**
     * The replication interval.
     * 
     */
    @Import(name="replicationInterval")
      private final @Nullable Integer replicationInterval;

    public Optional<Integer> replicationInterval() {
        return this.replicationInterval == null ? Optional.empty() : Optional.ofNullable(this.replicationInterval);
    }

    public HyperVReplicaAzurePolicyDetailsResponse(
        @Nullable String activeStorageAccountId,
        @Nullable Integer applicationConsistentSnapshotFrequencyInHours,
        @Nullable String encryption,
        String instanceType,
        @Nullable String onlineReplicationStartTime,
        @Nullable Integer recoveryPointHistoryDurationInHours,
        @Nullable Integer replicationInterval) {
        this.activeStorageAccountId = activeStorageAccountId;
        this.applicationConsistentSnapshotFrequencyInHours = applicationConsistentSnapshotFrequencyInHours;
        this.encryption = encryption;
        this.instanceType = Objects.requireNonNull(instanceType, "expected parameter 'instanceType' to be non-null");
        this.onlineReplicationStartTime = onlineReplicationStartTime;
        this.recoveryPointHistoryDurationInHours = recoveryPointHistoryDurationInHours;
        this.replicationInterval = replicationInterval;
    }

    private HyperVReplicaAzurePolicyDetailsResponse() {
        this.activeStorageAccountId = null;
        this.applicationConsistentSnapshotFrequencyInHours = null;
        this.encryption = null;
        this.instanceType = null;
        this.onlineReplicationStartTime = null;
        this.recoveryPointHistoryDurationInHours = null;
        this.replicationInterval = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HyperVReplicaAzurePolicyDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String activeStorageAccountId;
        private @Nullable Integer applicationConsistentSnapshotFrequencyInHours;
        private @Nullable String encryption;
        private String instanceType;
        private @Nullable String onlineReplicationStartTime;
        private @Nullable Integer recoveryPointHistoryDurationInHours;
        private @Nullable Integer replicationInterval;

        public Builder() {
    	      // Empty
        }

        public Builder(HyperVReplicaAzurePolicyDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeStorageAccountId = defaults.activeStorageAccountId;
    	      this.applicationConsistentSnapshotFrequencyInHours = defaults.applicationConsistentSnapshotFrequencyInHours;
    	      this.encryption = defaults.encryption;
    	      this.instanceType = defaults.instanceType;
    	      this.onlineReplicationStartTime = defaults.onlineReplicationStartTime;
    	      this.recoveryPointHistoryDurationInHours = defaults.recoveryPointHistoryDurationInHours;
    	      this.replicationInterval = defaults.replicationInterval;
        }

        public Builder activeStorageAccountId(@Nullable String activeStorageAccountId) {
            this.activeStorageAccountId = activeStorageAccountId;
            return this;
        }
        public Builder applicationConsistentSnapshotFrequencyInHours(@Nullable Integer applicationConsistentSnapshotFrequencyInHours) {
            this.applicationConsistentSnapshotFrequencyInHours = applicationConsistentSnapshotFrequencyInHours;
            return this;
        }
        public Builder encryption(@Nullable String encryption) {
            this.encryption = encryption;
            return this;
        }
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        public Builder onlineReplicationStartTime(@Nullable String onlineReplicationStartTime) {
            this.onlineReplicationStartTime = onlineReplicationStartTime;
            return this;
        }
        public Builder recoveryPointHistoryDurationInHours(@Nullable Integer recoveryPointHistoryDurationInHours) {
            this.recoveryPointHistoryDurationInHours = recoveryPointHistoryDurationInHours;
            return this;
        }
        public Builder replicationInterval(@Nullable Integer replicationInterval) {
            this.replicationInterval = replicationInterval;
            return this;
        }        public HyperVReplicaAzurePolicyDetailsResponse build() {
            return new HyperVReplicaAzurePolicyDetailsResponse(activeStorageAccountId, applicationConsistentSnapshotFrequencyInHours, encryption, instanceType, onlineReplicationStartTime, recoveryPointHistoryDurationInHours, replicationInterval);
        }
    }
}
