// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security.inputs;

import io.pulumi.azurenative.security.enums.AdditionalWorkspaceDataType;
import io.pulumi.azurenative.security.enums.AdditionalWorkspaceType;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Properties of the additional workspaces.
 * 
 */
public final class AdditionalWorkspacesPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final AdditionalWorkspacesPropertiesArgs Empty = new AdditionalWorkspacesPropertiesArgs();

    /**
     * List of data types sent to workspace
     * 
     */
    @InputImport(name="dataTypes")
      private final @Nullable Input<List<Either<String,AdditionalWorkspaceDataType>>> dataTypes;

    public Input<List<Either<String,AdditionalWorkspaceDataType>>> getDataTypes() {
        return this.dataTypes == null ? Input.empty() : this.dataTypes;
    }

    /**
     * Workspace type.
     * 
     */
    @InputImport(name="type")
      private final @Nullable Input<Either<String,AdditionalWorkspaceType>> type;

    public Input<Either<String,AdditionalWorkspaceType>> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    /**
     * Workspace resource id
     * 
     */
    @InputImport(name="workspace")
      private final @Nullable Input<String> workspace;

    public Input<String> getWorkspace() {
        return this.workspace == null ? Input.empty() : this.workspace;
    }

    public AdditionalWorkspacesPropertiesArgs(
        @Nullable Input<List<Either<String,AdditionalWorkspaceDataType>>> dataTypes,
        @Nullable Input<Either<String,AdditionalWorkspaceType>> type,
        @Nullable Input<String> workspace) {
        this.dataTypes = dataTypes;
        this.type = type == null ? Input.ofLeft("Sentinel") : type;
        this.workspace = workspace;
    }

    private AdditionalWorkspacesPropertiesArgs() {
        this.dataTypes = Input.empty();
        this.type = Input.empty();
        this.workspace = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AdditionalWorkspacesPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<Either<String,AdditionalWorkspaceDataType>>> dataTypes;
        private @Nullable Input<Either<String,AdditionalWorkspaceType>> type;
        private @Nullable Input<String> workspace;

        public Builder() {
    	      // Empty
        }

        public Builder(AdditionalWorkspacesPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataTypes = defaults.dataTypes;
    	      this.type = defaults.type;
    	      this.workspace = defaults.workspace;
        }

        public Builder dataTypes(@Nullable Input<List<Either<String,AdditionalWorkspaceDataType>>> dataTypes) {
            this.dataTypes = dataTypes;
            return this;
        }

        public Builder dataTypes(@Nullable List<Either<String,AdditionalWorkspaceDataType>> dataTypes) {
            this.dataTypes = Input.ofNullable(dataTypes);
            return this;
        }

        public Builder type(@Nullable Input<Either<String,AdditionalWorkspaceType>> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable Either<String,AdditionalWorkspaceType> type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder workspace(@Nullable Input<String> workspace) {
            this.workspace = workspace;
            return this;
        }

        public Builder workspace(@Nullable String workspace) {
            this.workspace = Input.ofNullable(workspace);
            return this;
        }
        public AdditionalWorkspacesPropertiesArgs build() {
            return new AdditionalWorkspacesPropertiesArgs(dataTypes, type, workspace);
        }
    }
}
