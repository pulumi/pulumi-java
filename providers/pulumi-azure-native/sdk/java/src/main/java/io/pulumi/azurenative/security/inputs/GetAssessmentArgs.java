// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAssessmentArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetAssessmentArgs Empty = new GetAssessmentArgs();

    /**
     * The Assessment Key - Unique key for the assessment type
     * 
     */
    @Import(name="assessmentName", required=true)
      private final String assessmentName;

    public String getAssessmentName() {
        return this.assessmentName;
    }

    /**
     * OData expand. Optional.
     * 
     */
    @Import(name="expand")
      private final @Nullable String expand;

    public Optional<String> getExpand() {
        return this.expand == null ? Optional.empty() : Optional.ofNullable(this.expand);
    }

    /**
     * The identifier of the resource.
     * 
     */
    @Import(name="resourceId", required=true)
      private final String resourceId;

    public String getResourceId() {
        return this.resourceId;
    }

    public GetAssessmentArgs(
        String assessmentName,
        @Nullable String expand,
        String resourceId) {
        this.assessmentName = Objects.requireNonNull(assessmentName, "expected parameter 'assessmentName' to be non-null");
        this.expand = expand;
        this.resourceId = Objects.requireNonNull(resourceId, "expected parameter 'resourceId' to be non-null");
    }

    private GetAssessmentArgs() {
        this.assessmentName = null;
        this.expand = null;
        this.resourceId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String assessmentName;
        private @Nullable String expand;
        private String resourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAssessmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assessmentName = defaults.assessmentName;
    	      this.expand = defaults.expand;
    	      this.resourceId = defaults.resourceId;
        }

        public Builder assessmentName(String assessmentName) {
            this.assessmentName = Objects.requireNonNull(assessmentName);
            return this;
        }
        public Builder expand(@Nullable String expand) {
            this.expand = expand;
            return this;
        }
        public Builder resourceId(String resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }        public GetAssessmentArgs build() {
            return new GetAssessmentArgs(assessmentName, expand, resourceId);
        }
    }
}
