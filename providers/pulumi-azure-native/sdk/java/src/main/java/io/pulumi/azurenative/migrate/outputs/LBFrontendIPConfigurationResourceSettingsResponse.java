// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.migrate.outputs;

import io.pulumi.azurenative.migrate.outputs.SubnetReferenceResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class LBFrontendIPConfigurationResourceSettingsResponse {
    /**
     * Gets or sets the frontend IP configuration name.
     * 
     */
    private final @Nullable String name;
    /**
     * Gets or sets the IP address of the Load Balancer.This is only specified if a specific
     * private IP address shall be allocated from the subnet specified in subnetRef.
     * 
     */
    private final @Nullable String privateIpAddress;
    /**
     * Gets or sets PrivateIP allocation method (Static/Dynamic).
     * 
     */
    private final @Nullable String privateIpAllocationMethod;
    /**
     * Defines reference to subnet.
     * 
     */
    private final @Nullable SubnetReferenceResponse subnet;
    /**
     * Gets or sets the csv list of zones.
     * 
     */
    private final @Nullable String zones;

    @OutputCustomType.Constructor({"name","privateIpAddress","privateIpAllocationMethod","subnet","zones"})
    private LBFrontendIPConfigurationResourceSettingsResponse(
        @Nullable String name,
        @Nullable String privateIpAddress,
        @Nullable String privateIpAllocationMethod,
        @Nullable SubnetReferenceResponse subnet,
        @Nullable String zones) {
        this.name = name;
        this.privateIpAddress = privateIpAddress;
        this.privateIpAllocationMethod = privateIpAllocationMethod;
        this.subnet = subnet;
        this.zones = zones;
    }

    /**
     * Gets or sets the frontend IP configuration name.
     * 
     */
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    /**
     * Gets or sets the IP address of the Load Balancer.This is only specified if a specific
     * private IP address shall be allocated from the subnet specified in subnetRef.
     * 
     */
    public Optional<String> getPrivateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }
    /**
     * Gets or sets PrivateIP allocation method (Static/Dynamic).
     * 
     */
    public Optional<String> getPrivateIpAllocationMethod() {
        return Optional.ofNullable(this.privateIpAllocationMethod);
    }
    /**
     * Defines reference to subnet.
     * 
     */
    public Optional<SubnetReferenceResponse> getSubnet() {
        return Optional.ofNullable(this.subnet);
    }
    /**
     * Gets or sets the csv list of zones.
     * 
     */
    public Optional<String> getZones() {
        return Optional.ofNullable(this.zones);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LBFrontendIPConfigurationResourceSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String name;
        private @Nullable String privateIpAddress;
        private @Nullable String privateIpAllocationMethod;
        private @Nullable SubnetReferenceResponse subnet;
        private @Nullable String zones;

        public Builder() {
    	      // Empty
        }

        public Builder(LBFrontendIPConfigurationResourceSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.privateIpAllocationMethod = defaults.privateIpAllocationMethod;
    	      this.subnet = defaults.subnet;
    	      this.zones = defaults.zones;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setPrivateIpAddress(@Nullable String privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }

        public Builder setPrivateIpAllocationMethod(@Nullable String privateIpAllocationMethod) {
            this.privateIpAllocationMethod = privateIpAllocationMethod;
            return this;
        }

        public Builder setSubnet(@Nullable SubnetReferenceResponse subnet) {
            this.subnet = subnet;
            return this;
        }

        public Builder setZones(@Nullable String zones) {
            this.zones = zones;
            return this;
        }

        public LBFrontendIPConfigurationResourceSettingsResponse build() {
            return new LBFrontendIPConfigurationResourceSettingsResponse(name, privateIpAddress, privateIpAllocationMethod, subnet, zones);
        }
    }
}
