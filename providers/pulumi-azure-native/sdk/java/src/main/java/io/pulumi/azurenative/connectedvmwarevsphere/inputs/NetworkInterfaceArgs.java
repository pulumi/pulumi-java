// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.connectedvmwarevsphere.inputs;

import io.pulumi.azurenative.connectedvmwarevsphere.enums.NICType;
import io.pulumi.azurenative.connectedvmwarevsphere.enums.PowerOnBootOption;
import io.pulumi.azurenative.connectedvmwarevsphere.inputs.NicIPSettingsArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Network Interface model
 * 
 */
public final class NetworkInterfaceArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkInterfaceArgs Empty = new NetworkInterfaceArgs();

    /**
     * Gets or sets the device key value.
     * 
     */
    @Import(name="deviceKey")
      private final @Nullable Output<Integer> deviceKey;

    public Output<Integer> deviceKey() {
        return this.deviceKey == null ? Codegen.empty() : this.deviceKey;
    }

    /**
     * Gets or sets the ipsettings.
     * 
     */
    @Import(name="ipSettings")
      private final @Nullable Output<NicIPSettingsArgs> ipSettings;

    public Output<NicIPSettingsArgs> ipSettings() {
        return this.ipSettings == null ? Codegen.empty() : this.ipSettings;
    }

    /**
     * Gets or sets the name of the network interface.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Gets or sets the ARM Id of the network resource to connect the virtual machine.
     * 
     */
    @Import(name="networkId")
      private final @Nullable Output<String> networkId;

    public Output<String> networkId() {
        return this.networkId == null ? Codegen.empty() : this.networkId;
    }

    /**
     * NIC type
     * 
     */
    @Import(name="nicType")
      private final @Nullable Output<Either<String,NICType>> nicType;

    public Output<Either<String,NICType>> nicType() {
        return this.nicType == null ? Codegen.empty() : this.nicType;
    }

    /**
     * Gets or sets the power on boot.
     * 
     */
    @Import(name="powerOnBoot")
      private final @Nullable Output<Either<String,PowerOnBootOption>> powerOnBoot;

    public Output<Either<String,PowerOnBootOption>> powerOnBoot() {
        return this.powerOnBoot == null ? Codegen.empty() : this.powerOnBoot;
    }

    public NetworkInterfaceArgs(
        @Nullable Output<Integer> deviceKey,
        @Nullable Output<NicIPSettingsArgs> ipSettings,
        @Nullable Output<String> name,
        @Nullable Output<String> networkId,
        @Nullable Output<Either<String,NICType>> nicType,
        @Nullable Output<Either<String,PowerOnBootOption>> powerOnBoot) {
        this.deviceKey = deviceKey;
        this.ipSettings = ipSettings;
        this.name = name;
        this.networkId = networkId;
        this.nicType = nicType;
        this.powerOnBoot = powerOnBoot;
    }

    private NetworkInterfaceArgs() {
        this.deviceKey = Codegen.empty();
        this.ipSettings = Codegen.empty();
        this.name = Codegen.empty();
        this.networkId = Codegen.empty();
        this.nicType = Codegen.empty();
        this.powerOnBoot = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> deviceKey;
        private @Nullable Output<NicIPSettingsArgs> ipSettings;
        private @Nullable Output<String> name;
        private @Nullable Output<String> networkId;
        private @Nullable Output<Either<String,NICType>> nicType;
        private @Nullable Output<Either<String,PowerOnBootOption>> powerOnBoot;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkInterfaceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceKey = defaults.deviceKey;
    	      this.ipSettings = defaults.ipSettings;
    	      this.name = defaults.name;
    	      this.networkId = defaults.networkId;
    	      this.nicType = defaults.nicType;
    	      this.powerOnBoot = defaults.powerOnBoot;
        }

        public Builder deviceKey(@Nullable Output<Integer> deviceKey) {
            this.deviceKey = deviceKey;
            return this;
        }
        public Builder deviceKey(@Nullable Integer deviceKey) {
            this.deviceKey = Codegen.ofNullable(deviceKey);
            return this;
        }
        public Builder ipSettings(@Nullable Output<NicIPSettingsArgs> ipSettings) {
            this.ipSettings = ipSettings;
            return this;
        }
        public Builder ipSettings(@Nullable NicIPSettingsArgs ipSettings) {
            this.ipSettings = Codegen.ofNullable(ipSettings);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder networkId(@Nullable Output<String> networkId) {
            this.networkId = networkId;
            return this;
        }
        public Builder networkId(@Nullable String networkId) {
            this.networkId = Codegen.ofNullable(networkId);
            return this;
        }
        public Builder nicType(@Nullable Output<Either<String,NICType>> nicType) {
            this.nicType = nicType;
            return this;
        }
        public Builder nicType(@Nullable Either<String,NICType> nicType) {
            this.nicType = Codegen.ofNullable(nicType);
            return this;
        }
        public Builder powerOnBoot(@Nullable Output<Either<String,PowerOnBootOption>> powerOnBoot) {
            this.powerOnBoot = powerOnBoot;
            return this;
        }
        public Builder powerOnBoot(@Nullable Either<String,PowerOnBootOption> powerOnBoot) {
            this.powerOnBoot = Codegen.ofNullable(powerOnBoot);
            return this;
        }        public NetworkInterfaceArgs build() {
            return new NetworkInterfaceArgs(deviceKey, ipSettings, name, networkId, nicType, powerOnBoot);
        }
    }
}
