// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * (Deprecated. Please use LogSettings) Log storage settings.
 * 
 */
public final class LogStorageSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final LogStorageSettingsArgs Empty = new LogStorageSettingsArgs();

    /**
     * Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).
     * 
     */
    @Import(name="enableReliableLogging")
      private final @Nullable Output<Object> enableReliableLogging;

    public Output<Object> getEnableReliableLogging() {
        return this.enableReliableLogging == null ? Output.empty() : this.enableReliableLogging;
    }

    /**
     * Log storage linked service reference.
     * 
     */
    @Import(name="linkedServiceName", required=true)
      private final Output<LinkedServiceReferenceArgs> linkedServiceName;

    public Output<LinkedServiceReferenceArgs> getLinkedServiceName() {
        return this.linkedServiceName;
    }

    /**
     * Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="logLevel")
      private final @Nullable Output<Object> logLevel;

    public Output<Object> getLogLevel() {
        return this.logLevel == null ? Output.empty() : this.logLevel;
    }

    /**
     * The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="path")
      private final @Nullable Output<Object> path;

    public Output<Object> getPath() {
        return this.path == null ? Output.empty() : this.path;
    }

    public LogStorageSettingsArgs(
        @Nullable Output<Object> enableReliableLogging,
        Output<LinkedServiceReferenceArgs> linkedServiceName,
        @Nullable Output<Object> logLevel,
        @Nullable Output<Object> path) {
        this.enableReliableLogging = enableReliableLogging;
        this.linkedServiceName = Objects.requireNonNull(linkedServiceName, "expected parameter 'linkedServiceName' to be non-null");
        this.logLevel = logLevel;
        this.path = path;
    }

    private LogStorageSettingsArgs() {
        this.enableReliableLogging = Output.empty();
        this.linkedServiceName = Output.empty();
        this.logLevel = Output.empty();
        this.path = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogStorageSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> enableReliableLogging;
        private Output<LinkedServiceReferenceArgs> linkedServiceName;
        private @Nullable Output<Object> logLevel;
        private @Nullable Output<Object> path;

        public Builder() {
    	      // Empty
        }

        public Builder(LogStorageSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableReliableLogging = defaults.enableReliableLogging;
    	      this.linkedServiceName = defaults.linkedServiceName;
    	      this.logLevel = defaults.logLevel;
    	      this.path = defaults.path;
        }

        public Builder enableReliableLogging(@Nullable Output<Object> enableReliableLogging) {
            this.enableReliableLogging = enableReliableLogging;
            return this;
        }
        public Builder enableReliableLogging(@Nullable Object enableReliableLogging) {
            this.enableReliableLogging = Output.ofNullable(enableReliableLogging);
            return this;
        }
        public Builder linkedServiceName(Output<LinkedServiceReferenceArgs> linkedServiceName) {
            this.linkedServiceName = Objects.requireNonNull(linkedServiceName);
            return this;
        }
        public Builder linkedServiceName(LinkedServiceReferenceArgs linkedServiceName) {
            this.linkedServiceName = Output.of(Objects.requireNonNull(linkedServiceName));
            return this;
        }
        public Builder logLevel(@Nullable Output<Object> logLevel) {
            this.logLevel = logLevel;
            return this;
        }
        public Builder logLevel(@Nullable Object logLevel) {
            this.logLevel = Output.ofNullable(logLevel);
            return this;
        }
        public Builder path(@Nullable Output<Object> path) {
            this.path = path;
            return this;
        }
        public Builder path(@Nullable Object path) {
            this.path = Output.ofNullable(path);
            return this;
        }        public LogStorageSettingsArgs build() {
            return new LogStorageSettingsArgs(enableReliableLogging, linkedServiceName, logLevel, path);
        }
    }
}
