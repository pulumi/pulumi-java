// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.azurenative.compute.enums.DiskEncryptionSetIdentityType;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks.
 * 
 */
public final class EncryptionSetIdentityArgs extends io.pulumi.resources.ResourceArgs {

    public static final EncryptionSetIdentityArgs Empty = new EncryptionSetIdentityArgs();

    /**
     * The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.
     * 
     */
    @InputImport(name="type")
      private final @Nullable Input<Either<String,DiskEncryptionSetIdentityType>> type;

    public Input<Either<String,DiskEncryptionSetIdentityType>> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public EncryptionSetIdentityArgs(@Nullable Input<Either<String,DiskEncryptionSetIdentityType>> type) {
        this.type = type;
    }

    private EncryptionSetIdentityArgs() {
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionSetIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,DiskEncryptionSetIdentityType>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(EncryptionSetIdentityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
        }

        public Builder type(@Nullable Input<Either<String,DiskEncryptionSetIdentityType>> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable Either<String,DiskEncryptionSetIdentityType> type) {
            this.type = Input.ofNullable(type);
            return this;
        }
        public EncryptionSetIdentityArgs build() {
            return new EncryptionSetIdentityArgs(type);
        }
    }
}
