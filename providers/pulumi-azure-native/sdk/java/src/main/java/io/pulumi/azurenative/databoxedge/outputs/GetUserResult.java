// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge.outputs;

import io.pulumi.azurenative.databoxedge.outputs.AsymmetricEncryptedSecretResponse;
import io.pulumi.azurenative.databoxedge.outputs.ShareAccessRightResponse;
import io.pulumi.azurenative.databoxedge.outputs.SystemDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetUserResult {
    private final @Nullable AsymmetricEncryptedSecretResponse encryptedPassword;
    private final String id;
    private final String name;
    private final List<ShareAccessRightResponse> shareAccessRights;
    private final SystemDataResponse systemData;
    private final String type;
    private final String userType;

    @OutputCustomType.Constructor({"encryptedPassword","id","name","shareAccessRights","systemData","type","userType"})
    private GetUserResult(
        @Nullable AsymmetricEncryptedSecretResponse encryptedPassword,
        String id,
        String name,
        List<ShareAccessRightResponse> shareAccessRights,
        SystemDataResponse systemData,
        String type,
        String userType) {
        this.encryptedPassword = encryptedPassword;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.shareAccessRights = Objects.requireNonNull(shareAccessRights);
        this.systemData = Objects.requireNonNull(systemData);
        this.type = Objects.requireNonNull(type);
        this.userType = Objects.requireNonNull(userType);
    }

    public Optional<AsymmetricEncryptedSecretResponse> getEncryptedPassword() {
        return Optional.ofNullable(this.encryptedPassword);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public List<ShareAccessRightResponse> getShareAccessRights() {
        return this.shareAccessRights;
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public String getType() {
        return this.type;
    }
    public String getUserType() {
        return this.userType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AsymmetricEncryptedSecretResponse encryptedPassword;
        private String id;
        private String name;
        private List<ShareAccessRightResponse> shareAccessRights;
        private SystemDataResponse systemData;
        private String type;
        private String userType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptedPassword = defaults.encryptedPassword;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.shareAccessRights = defaults.shareAccessRights;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
    	      this.userType = defaults.userType;
        }

        public Builder setEncryptedPassword(@Nullable AsymmetricEncryptedSecretResponse encryptedPassword) {
            this.encryptedPassword = encryptedPassword;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setShareAccessRights(List<ShareAccessRightResponse> shareAccessRights) {
            this.shareAccessRights = Objects.requireNonNull(shareAccessRights);
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUserType(String userType) {
            this.userType = Objects.requireNonNull(userType);
            return this;
        }

        public GetUserResult build() {
            return new GetUserResult(encryptedPassword, id, name, shareAccessRights, systemData, type, userType);
        }
    }
}
