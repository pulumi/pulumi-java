// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifying this parameter adds support for reliable collections
 * 
 */
public final class ReliableCollectionsRefArgs extends io.pulumi.resources.ResourceArgs {

    public static final ReliableCollectionsRefArgs Empty = new ReliableCollectionsRefArgs();

    /**
     * False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache.
     * 
     */
    @InputImport(name="doNotPersistState")
    private final @Nullable Input<Boolean> doNotPersistState;

    public Input<Boolean> getDoNotPersistState() {
        return this.doNotPersistState == null ? Input.empty() : this.doNotPersistState;
    }

    /**
     * Name of ReliableCollection resource. Right now it's not used and you can use any string.
     * 
     */
    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    public ReliableCollectionsRefArgs(
        @Nullable Input<Boolean> doNotPersistState,
        Input<String> name) {
        this.doNotPersistState = doNotPersistState;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private ReliableCollectionsRefArgs() {
        this.doNotPersistState = Input.empty();
        this.name = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReliableCollectionsRefArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> doNotPersistState;
        private Input<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(ReliableCollectionsRefArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.doNotPersistState = defaults.doNotPersistState;
    	      this.name = defaults.name;
        }

        public Builder setDoNotPersistState(@Nullable Input<Boolean> doNotPersistState) {
            this.doNotPersistState = doNotPersistState;
            return this;
        }

        public Builder setDoNotPersistState(@Nullable Boolean doNotPersistState) {
            this.doNotPersistState = Input.ofNullable(doNotPersistState);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public ReliableCollectionsRefArgs build() {
            return new ReliableCollectionsRefArgs(doNotPersistState, name);
        }
    }
}
