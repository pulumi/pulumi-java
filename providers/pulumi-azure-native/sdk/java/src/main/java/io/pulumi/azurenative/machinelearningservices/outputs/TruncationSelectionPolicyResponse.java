// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TruncationSelectionPolicyResponse {
    /**
     * Number of intervals by which to delay the first evaluation.
     * 
     */
    private final @Nullable Integer delayEvaluation;
    /**
     * Interval (number of runs) between policy evaluations.
     * 
     */
    private final @Nullable Integer evaluationInterval;
    /**
     * Expected value is 'TruncationSelection'.
     * 
     */
    private final String policyType;
    /**
     * The percentage of runs to cancel at each evaluation interval.
     * 
     */
    private final @Nullable Integer truncationPercentage;

    @OutputCustomType.Constructor({"delayEvaluation","evaluationInterval","policyType","truncationPercentage"})
    private TruncationSelectionPolicyResponse(
        @Nullable Integer delayEvaluation,
        @Nullable Integer evaluationInterval,
        String policyType,
        @Nullable Integer truncationPercentage) {
        this.delayEvaluation = delayEvaluation;
        this.evaluationInterval = evaluationInterval;
        this.policyType = policyType;
        this.truncationPercentage = truncationPercentage;
    }

    /**
     * Number of intervals by which to delay the first evaluation.
     * 
    */
    public Optional<Integer> getDelayEvaluation() {
        return Optional.ofNullable(this.delayEvaluation);
    }
    /**
     * Interval (number of runs) between policy evaluations.
     * 
    */
    public Optional<Integer> getEvaluationInterval() {
        return Optional.ofNullable(this.evaluationInterval);
    }
    /**
     * Expected value is 'TruncationSelection'.
     * 
    */
    public String getPolicyType() {
        return this.policyType;
    }
    /**
     * The percentage of runs to cancel at each evaluation interval.
     * 
    */
    public Optional<Integer> getTruncationPercentage() {
        return Optional.ofNullable(this.truncationPercentage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TruncationSelectionPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer delayEvaluation;
        private @Nullable Integer evaluationInterval;
        private String policyType;
        private @Nullable Integer truncationPercentage;

        public Builder() {
    	      // Empty
        }

        public Builder(TruncationSelectionPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delayEvaluation = defaults.delayEvaluation;
    	      this.evaluationInterval = defaults.evaluationInterval;
    	      this.policyType = defaults.policyType;
    	      this.truncationPercentage = defaults.truncationPercentage;
        }

        public Builder setDelayEvaluation(@Nullable Integer delayEvaluation) {
            this.delayEvaluation = delayEvaluation;
            return this;
        }

        public Builder setEvaluationInterval(@Nullable Integer evaluationInterval) {
            this.evaluationInterval = evaluationInterval;
            return this;
        }

        public Builder setPolicyType(String policyType) {
            this.policyType = Objects.requireNonNull(policyType);
            return this;
        }

        public Builder setTruncationPercentage(@Nullable Integer truncationPercentage) {
            this.truncationPercentage = truncationPercentage;
            return this;
        }
        public TruncationSelectionPolicyResponse build() {
            return new TruncationSelectionPolicyResponse(delayEvaluation, evaluationInterval, policyType, truncationPercentage);
        }
    }
}
