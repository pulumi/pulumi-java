// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.peering.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRegisteredPrefixResult {
    /**
     * The error message associated with the validation state, if any.
     * 
     */
    private final String errorMessage;
    /**
     * The ID of the resource.
     * 
     */
    private final String id;
    /**
     * The name of the resource.
     * 
     */
    private final String name;
    /**
     * The peering service prefix key that is to be shared with the customer.
     * 
     */
    private final String peeringServicePrefixKey;
    /**
     * The customer's prefix from which traffic originates.
     * 
     */
    private final @Nullable String prefix;
    /**
     * The prefix validation state.
     * 
     */
    private final String prefixValidationState;
    /**
     * The provisioning state of the resource.
     * 
     */
    private final String provisioningState;
    /**
     * The type of the resource.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetRegisteredPrefixResult(
        @CustomType.Parameter("errorMessage") String errorMessage,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("peeringServicePrefixKey") String peeringServicePrefixKey,
        @CustomType.Parameter("prefix") @Nullable String prefix,
        @CustomType.Parameter("prefixValidationState") String prefixValidationState,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("type") String type) {
        this.errorMessage = errorMessage;
        this.id = id;
        this.name = name;
        this.peeringServicePrefixKey = peeringServicePrefixKey;
        this.prefix = prefix;
        this.prefixValidationState = prefixValidationState;
        this.provisioningState = provisioningState;
        this.type = type;
    }

    /**
     * The error message associated with the validation state, if any.
     * 
    */
    public String getErrorMessage() {
        return this.errorMessage;
    }
    /**
     * The ID of the resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * The name of the resource.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The peering service prefix key that is to be shared with the customer.
     * 
    */
    public String getPeeringServicePrefixKey() {
        return this.peeringServicePrefixKey;
    }
    /**
     * The customer's prefix from which traffic originates.
     * 
    */
    public Optional<String> getPrefix() {
        return Optional.ofNullable(this.prefix);
    }
    /**
     * The prefix validation state.
     * 
    */
    public String getPrefixValidationState() {
        return this.prefixValidationState;
    }
    /**
     * The provisioning state of the resource.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The type of the resource.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegisteredPrefixResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String errorMessage;
        private String id;
        private String name;
        private String peeringServicePrefixKey;
        private @Nullable String prefix;
        private String prefixValidationState;
        private String provisioningState;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRegisteredPrefixResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorMessage = defaults.errorMessage;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.peeringServicePrefixKey = defaults.peeringServicePrefixKey;
    	      this.prefix = defaults.prefix;
    	      this.prefixValidationState = defaults.prefixValidationState;
    	      this.provisioningState = defaults.provisioningState;
    	      this.type = defaults.type;
        }

        public Builder errorMessage(String errorMessage) {
            this.errorMessage = Objects.requireNonNull(errorMessage);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder peeringServicePrefixKey(String peeringServicePrefixKey) {
            this.peeringServicePrefixKey = Objects.requireNonNull(peeringServicePrefixKey);
            return this;
        }
        public Builder prefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }
        public Builder prefixValidationState(String prefixValidationState) {
            this.prefixValidationState = Objects.requireNonNull(prefixValidationState);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetRegisteredPrefixResult build() {
            return new GetRegisteredPrefixResult(errorMessage, id, name, peeringServicePrefixKey, prefix, prefixValidationState, provisioningState, type);
        }
    }
}
