// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.enums.ApplicationGatewayFirewallMode;
import io.pulumi.azurenative.network.inputs.ApplicationGatewayFirewallDisabledRuleGroupArgs;
import io.pulumi.azurenative.network.inputs.ApplicationGatewayFirewallExclusionArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Application gateway web application firewall configuration.
 * 
 */
public final class ApplicationGatewayWebApplicationFirewallConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApplicationGatewayWebApplicationFirewallConfigurationArgs Empty = new ApplicationGatewayWebApplicationFirewallConfigurationArgs();

    /**
     * The disabled rule groups.
     * 
     */
    @Import(name="disabledRuleGroups")
      private final @Nullable Output<List<ApplicationGatewayFirewallDisabledRuleGroupArgs>> disabledRuleGroups;

    public Output<List<ApplicationGatewayFirewallDisabledRuleGroupArgs>> getDisabledRuleGroups() {
        return this.disabledRuleGroups == null ? Output.empty() : this.disabledRuleGroups;
    }

    /**
     * Whether the web application firewall is enabled or not.
     * 
     */
    @Import(name="enabled", required=true)
      private final Output<Boolean> enabled;

    public Output<Boolean> getEnabled() {
        return this.enabled;
    }

    /**
     * The exclusion list.
     * 
     */
    @Import(name="exclusions")
      private final @Nullable Output<List<ApplicationGatewayFirewallExclusionArgs>> exclusions;

    public Output<List<ApplicationGatewayFirewallExclusionArgs>> getExclusions() {
        return this.exclusions == null ? Output.empty() : this.exclusions;
    }

    /**
     * Maximum file upload size in Mb for WAF.
     * 
     */
    @Import(name="fileUploadLimitInMb")
      private final @Nullable Output<Integer> fileUploadLimitInMb;

    public Output<Integer> getFileUploadLimitInMb() {
        return this.fileUploadLimitInMb == null ? Output.empty() : this.fileUploadLimitInMb;
    }

    /**
     * Web application firewall mode.
     * 
     */
    @Import(name="firewallMode", required=true)
      private final Output<Either<String,ApplicationGatewayFirewallMode>> firewallMode;

    public Output<Either<String,ApplicationGatewayFirewallMode>> getFirewallMode() {
        return this.firewallMode;
    }

    /**
     * Maximum request body size for WAF.
     * 
     */
    @Import(name="maxRequestBodySize")
      private final @Nullable Output<Integer> maxRequestBodySize;

    public Output<Integer> getMaxRequestBodySize() {
        return this.maxRequestBodySize == null ? Output.empty() : this.maxRequestBodySize;
    }

    /**
     * Maximum request body size in Kb for WAF.
     * 
     */
    @Import(name="maxRequestBodySizeInKb")
      private final @Nullable Output<Integer> maxRequestBodySizeInKb;

    public Output<Integer> getMaxRequestBodySizeInKb() {
        return this.maxRequestBodySizeInKb == null ? Output.empty() : this.maxRequestBodySizeInKb;
    }

    /**
     * Whether allow WAF to check request Body.
     * 
     */
    @Import(name="requestBodyCheck")
      private final @Nullable Output<Boolean> requestBodyCheck;

    public Output<Boolean> getRequestBodyCheck() {
        return this.requestBodyCheck == null ? Output.empty() : this.requestBodyCheck;
    }

    /**
     * The type of the web application firewall rule set. Possible values are: 'OWASP'.
     * 
     */
    @Import(name="ruleSetType", required=true)
      private final Output<String> ruleSetType;

    public Output<String> getRuleSetType() {
        return this.ruleSetType;
    }

    /**
     * The version of the rule set type.
     * 
     */
    @Import(name="ruleSetVersion", required=true)
      private final Output<String> ruleSetVersion;

    public Output<String> getRuleSetVersion() {
        return this.ruleSetVersion;
    }

    public ApplicationGatewayWebApplicationFirewallConfigurationArgs(
        @Nullable Output<List<ApplicationGatewayFirewallDisabledRuleGroupArgs>> disabledRuleGroups,
        Output<Boolean> enabled,
        @Nullable Output<List<ApplicationGatewayFirewallExclusionArgs>> exclusions,
        @Nullable Output<Integer> fileUploadLimitInMb,
        Output<Either<String,ApplicationGatewayFirewallMode>> firewallMode,
        @Nullable Output<Integer> maxRequestBodySize,
        @Nullable Output<Integer> maxRequestBodySizeInKb,
        @Nullable Output<Boolean> requestBodyCheck,
        Output<String> ruleSetType,
        Output<String> ruleSetVersion) {
        this.disabledRuleGroups = disabledRuleGroups;
        this.enabled = Objects.requireNonNull(enabled, "expected parameter 'enabled' to be non-null");
        this.exclusions = exclusions;
        this.fileUploadLimitInMb = fileUploadLimitInMb;
        this.firewallMode = Objects.requireNonNull(firewallMode, "expected parameter 'firewallMode' to be non-null");
        this.maxRequestBodySize = maxRequestBodySize;
        this.maxRequestBodySizeInKb = maxRequestBodySizeInKb;
        this.requestBodyCheck = requestBodyCheck;
        this.ruleSetType = Objects.requireNonNull(ruleSetType, "expected parameter 'ruleSetType' to be non-null");
        this.ruleSetVersion = Objects.requireNonNull(ruleSetVersion, "expected parameter 'ruleSetVersion' to be non-null");
    }

    private ApplicationGatewayWebApplicationFirewallConfigurationArgs() {
        this.disabledRuleGroups = Output.empty();
        this.enabled = Output.empty();
        this.exclusions = Output.empty();
        this.fileUploadLimitInMb = Output.empty();
        this.firewallMode = Output.empty();
        this.maxRequestBodySize = Output.empty();
        this.maxRequestBodySizeInKb = Output.empty();
        this.requestBodyCheck = Output.empty();
        this.ruleSetType = Output.empty();
        this.ruleSetVersion = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewayWebApplicationFirewallConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ApplicationGatewayFirewallDisabledRuleGroupArgs>> disabledRuleGroups;
        private Output<Boolean> enabled;
        private @Nullable Output<List<ApplicationGatewayFirewallExclusionArgs>> exclusions;
        private @Nullable Output<Integer> fileUploadLimitInMb;
        private Output<Either<String,ApplicationGatewayFirewallMode>> firewallMode;
        private @Nullable Output<Integer> maxRequestBodySize;
        private @Nullable Output<Integer> maxRequestBodySizeInKb;
        private @Nullable Output<Boolean> requestBodyCheck;
        private Output<String> ruleSetType;
        private Output<String> ruleSetVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationGatewayWebApplicationFirewallConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disabledRuleGroups = defaults.disabledRuleGroups;
    	      this.enabled = defaults.enabled;
    	      this.exclusions = defaults.exclusions;
    	      this.fileUploadLimitInMb = defaults.fileUploadLimitInMb;
    	      this.firewallMode = defaults.firewallMode;
    	      this.maxRequestBodySize = defaults.maxRequestBodySize;
    	      this.maxRequestBodySizeInKb = defaults.maxRequestBodySizeInKb;
    	      this.requestBodyCheck = defaults.requestBodyCheck;
    	      this.ruleSetType = defaults.ruleSetType;
    	      this.ruleSetVersion = defaults.ruleSetVersion;
        }

        public Builder disabledRuleGroups(@Nullable Output<List<ApplicationGatewayFirewallDisabledRuleGroupArgs>> disabledRuleGroups) {
            this.disabledRuleGroups = disabledRuleGroups;
            return this;
        }

        public Builder disabledRuleGroups(@Nullable List<ApplicationGatewayFirewallDisabledRuleGroupArgs> disabledRuleGroups) {
            this.disabledRuleGroups = Output.ofNullable(disabledRuleGroups);
            return this;
        }

        public Builder enabled(Output<Boolean> enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }

        public Builder enabled(Boolean enabled) {
            this.enabled = Output.of(Objects.requireNonNull(enabled));
            return this;
        }

        public Builder exclusions(@Nullable Output<List<ApplicationGatewayFirewallExclusionArgs>> exclusions) {
            this.exclusions = exclusions;
            return this;
        }

        public Builder exclusions(@Nullable List<ApplicationGatewayFirewallExclusionArgs> exclusions) {
            this.exclusions = Output.ofNullable(exclusions);
            return this;
        }

        public Builder fileUploadLimitInMb(@Nullable Output<Integer> fileUploadLimitInMb) {
            this.fileUploadLimitInMb = fileUploadLimitInMb;
            return this;
        }

        public Builder fileUploadLimitInMb(@Nullable Integer fileUploadLimitInMb) {
            this.fileUploadLimitInMb = Output.ofNullable(fileUploadLimitInMb);
            return this;
        }

        public Builder firewallMode(Output<Either<String,ApplicationGatewayFirewallMode>> firewallMode) {
            this.firewallMode = Objects.requireNonNull(firewallMode);
            return this;
        }

        public Builder firewallMode(Either<String,ApplicationGatewayFirewallMode> firewallMode) {
            this.firewallMode = Output.of(Objects.requireNonNull(firewallMode));
            return this;
        }

        public Builder maxRequestBodySize(@Nullable Output<Integer> maxRequestBodySize) {
            this.maxRequestBodySize = maxRequestBodySize;
            return this;
        }

        public Builder maxRequestBodySize(@Nullable Integer maxRequestBodySize) {
            this.maxRequestBodySize = Output.ofNullable(maxRequestBodySize);
            return this;
        }

        public Builder maxRequestBodySizeInKb(@Nullable Output<Integer> maxRequestBodySizeInKb) {
            this.maxRequestBodySizeInKb = maxRequestBodySizeInKb;
            return this;
        }

        public Builder maxRequestBodySizeInKb(@Nullable Integer maxRequestBodySizeInKb) {
            this.maxRequestBodySizeInKb = Output.ofNullable(maxRequestBodySizeInKb);
            return this;
        }

        public Builder requestBodyCheck(@Nullable Output<Boolean> requestBodyCheck) {
            this.requestBodyCheck = requestBodyCheck;
            return this;
        }

        public Builder requestBodyCheck(@Nullable Boolean requestBodyCheck) {
            this.requestBodyCheck = Output.ofNullable(requestBodyCheck);
            return this;
        }

        public Builder ruleSetType(Output<String> ruleSetType) {
            this.ruleSetType = Objects.requireNonNull(ruleSetType);
            return this;
        }

        public Builder ruleSetType(String ruleSetType) {
            this.ruleSetType = Output.of(Objects.requireNonNull(ruleSetType));
            return this;
        }

        public Builder ruleSetVersion(Output<String> ruleSetVersion) {
            this.ruleSetVersion = Objects.requireNonNull(ruleSetVersion);
            return this;
        }

        public Builder ruleSetVersion(String ruleSetVersion) {
            this.ruleSetVersion = Output.of(Objects.requireNonNull(ruleSetVersion));
            return this;
        }
        public ApplicationGatewayWebApplicationFirewallConfigurationArgs build() {
            return new ApplicationGatewayWebApplicationFirewallConfigurationArgs(disabledRuleGroups, enabled, exclusions, fileUploadLimitInMb, firewallMode, maxRequestBodySize, maxRequestBodySizeInKb, requestBodyCheck, ruleSetType, ruleSetVersion);
        }
    }
}
