// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class IncidentAdditionalDataResponse {
    /**
     * List of product names of alerts in the incident
     * 
     */
    private final List<String> alertProductNames;
    /**
     * The number of alerts in the incident
     * 
     */
    private final Integer alertsCount;
    /**
     * The number of bookmarks in the incident
     * 
     */
    private final Integer bookmarksCount;
    /**
     * The number of comments in the incident
     * 
     */
    private final Integer commentsCount;
    /**
     * The tactics associated with incident
     * 
     */
    private final List<String> tactics;

    @CustomType.Constructor
    private IncidentAdditionalDataResponse(
        @CustomType.Parameter("alertProductNames") List<String> alertProductNames,
        @CustomType.Parameter("alertsCount") Integer alertsCount,
        @CustomType.Parameter("bookmarksCount") Integer bookmarksCount,
        @CustomType.Parameter("commentsCount") Integer commentsCount,
        @CustomType.Parameter("tactics") List<String> tactics) {
        this.alertProductNames = alertProductNames;
        this.alertsCount = alertsCount;
        this.bookmarksCount = bookmarksCount;
        this.commentsCount = commentsCount;
        this.tactics = tactics;
    }

    /**
     * List of product names of alerts in the incident
     * 
    */
    public List<String> alertProductNames() {
        return this.alertProductNames;
    }
    /**
     * The number of alerts in the incident
     * 
    */
    public Integer alertsCount() {
        return this.alertsCount;
    }
    /**
     * The number of bookmarks in the incident
     * 
    */
    public Integer bookmarksCount() {
        return this.bookmarksCount;
    }
    /**
     * The number of comments in the incident
     * 
    */
    public Integer commentsCount() {
        return this.commentsCount;
    }
    /**
     * The tactics associated with incident
     * 
    */
    public List<String> tactics() {
        return this.tactics;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IncidentAdditionalDataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> alertProductNames;
        private Integer alertsCount;
        private Integer bookmarksCount;
        private Integer commentsCount;
        private List<String> tactics;

        public Builder() {
    	      // Empty
        }

        public Builder(IncidentAdditionalDataResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertProductNames = defaults.alertProductNames;
    	      this.alertsCount = defaults.alertsCount;
    	      this.bookmarksCount = defaults.bookmarksCount;
    	      this.commentsCount = defaults.commentsCount;
    	      this.tactics = defaults.tactics;
        }

        public Builder alertProductNames(List<String> alertProductNames) {
            this.alertProductNames = Objects.requireNonNull(alertProductNames);
            return this;
        }
        public Builder alertProductNames(String... alertProductNames) {
            return alertProductNames(List.of(alertProductNames));
        }
        public Builder alertsCount(Integer alertsCount) {
            this.alertsCount = Objects.requireNonNull(alertsCount);
            return this;
        }
        public Builder bookmarksCount(Integer bookmarksCount) {
            this.bookmarksCount = Objects.requireNonNull(bookmarksCount);
            return this;
        }
        public Builder commentsCount(Integer commentsCount) {
            this.commentsCount = Objects.requireNonNull(commentsCount);
            return this;
        }
        public Builder tactics(List<String> tactics) {
            this.tactics = Objects.requireNonNull(tactics);
            return this;
        }
        public Builder tactics(String... tactics) {
            return tactics(List.of(tactics));
        }        public IncidentAdditionalDataResponse build() {
            return new IncidentAdditionalDataResponse(alertProductNames, alertsCount, bookmarksCount, commentsCount, tactics);
        }
    }
}
