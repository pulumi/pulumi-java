// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.IpsecPolicyResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class VpnSiteLinkConnectionResponse {
    private final @Nullable Integer connectionBandwidth;
    private final String connectionStatus;
    private final Double egressBytesTransferred;
    private final @Nullable List<SubResourceResponse> egressNatRules;
    private final @Nullable Boolean enableBgp;
    private final @Nullable Boolean enableRateLimiting;
    private final String etag;
    private final @Nullable String id;
    private final Double ingressBytesTransferred;
    private final @Nullable List<SubResourceResponse> ingressNatRules;
    private final @Nullable List<IpsecPolicyResponse> ipsecPolicies;
    private final @Nullable String name;
    private final String provisioningState;
    private final @Nullable Integer routingWeight;
    private final @Nullable String sharedKey;
    private final String type;
    private final @Nullable Boolean useLocalAzureIpAddress;
    private final @Nullable Boolean usePolicyBasedTrafficSelectors;
    private final @Nullable String vpnConnectionProtocolType;
    private final @Nullable String vpnLinkConnectionMode;
    private final @Nullable SubResourceResponse vpnSiteLink;

    @OutputCustomType.Constructor({"connectionBandwidth","connectionStatus","egressBytesTransferred","egressNatRules","enableBgp","enableRateLimiting","etag","id","ingressBytesTransferred","ingressNatRules","ipsecPolicies","name","provisioningState","routingWeight","sharedKey","type","useLocalAzureIpAddress","usePolicyBasedTrafficSelectors","vpnConnectionProtocolType","vpnLinkConnectionMode","vpnSiteLink"})
    private VpnSiteLinkConnectionResponse(
        @Nullable Integer connectionBandwidth,
        String connectionStatus,
        Double egressBytesTransferred,
        @Nullable List<SubResourceResponse> egressNatRules,
        @Nullable Boolean enableBgp,
        @Nullable Boolean enableRateLimiting,
        String etag,
        @Nullable String id,
        Double ingressBytesTransferred,
        @Nullable List<SubResourceResponse> ingressNatRules,
        @Nullable List<IpsecPolicyResponse> ipsecPolicies,
        @Nullable String name,
        String provisioningState,
        @Nullable Integer routingWeight,
        @Nullable String sharedKey,
        String type,
        @Nullable Boolean useLocalAzureIpAddress,
        @Nullable Boolean usePolicyBasedTrafficSelectors,
        @Nullable String vpnConnectionProtocolType,
        @Nullable String vpnLinkConnectionMode,
        @Nullable SubResourceResponse vpnSiteLink) {
        this.connectionBandwidth = connectionBandwidth;
        this.connectionStatus = Objects.requireNonNull(connectionStatus);
        this.egressBytesTransferred = Objects.requireNonNull(egressBytesTransferred);
        this.egressNatRules = egressNatRules;
        this.enableBgp = enableBgp;
        this.enableRateLimiting = enableRateLimiting;
        this.etag = Objects.requireNonNull(etag);
        this.id = id;
        this.ingressBytesTransferred = Objects.requireNonNull(ingressBytesTransferred);
        this.ingressNatRules = ingressNatRules;
        this.ipsecPolicies = ipsecPolicies;
        this.name = name;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.routingWeight = routingWeight;
        this.sharedKey = sharedKey;
        this.type = Objects.requireNonNull(type);
        this.useLocalAzureIpAddress = useLocalAzureIpAddress;
        this.usePolicyBasedTrafficSelectors = usePolicyBasedTrafficSelectors;
        this.vpnConnectionProtocolType = vpnConnectionProtocolType;
        this.vpnLinkConnectionMode = vpnLinkConnectionMode;
        this.vpnSiteLink = vpnSiteLink;
    }

    public Optional<Integer> getConnectionBandwidth() {
        return Optional.ofNullable(this.connectionBandwidth);
    }
    public String getConnectionStatus() {
        return this.connectionStatus;
    }
    public Double getEgressBytesTransferred() {
        return this.egressBytesTransferred;
    }
    public List<SubResourceResponse> getEgressNatRules() {
        return this.egressNatRules == null ? List.of() : this.egressNatRules;
    }
    public Optional<Boolean> getEnableBgp() {
        return Optional.ofNullable(this.enableBgp);
    }
    public Optional<Boolean> getEnableRateLimiting() {
        return Optional.ofNullable(this.enableRateLimiting);
    }
    public String getEtag() {
        return this.etag;
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public Double getIngressBytesTransferred() {
        return this.ingressBytesTransferred;
    }
    public List<SubResourceResponse> getIngressNatRules() {
        return this.ingressNatRules == null ? List.of() : this.ingressNatRules;
    }
    public List<IpsecPolicyResponse> getIpsecPolicies() {
        return this.ipsecPolicies == null ? List.of() : this.ipsecPolicies;
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<Integer> getRoutingWeight() {
        return Optional.ofNullable(this.routingWeight);
    }
    public Optional<String> getSharedKey() {
        return Optional.ofNullable(this.sharedKey);
    }
    public String getType() {
        return this.type;
    }
    public Optional<Boolean> getUseLocalAzureIpAddress() {
        return Optional.ofNullable(this.useLocalAzureIpAddress);
    }
    public Optional<Boolean> getUsePolicyBasedTrafficSelectors() {
        return Optional.ofNullable(this.usePolicyBasedTrafficSelectors);
    }
    public Optional<String> getVpnConnectionProtocolType() {
        return Optional.ofNullable(this.vpnConnectionProtocolType);
    }
    public Optional<String> getVpnLinkConnectionMode() {
        return Optional.ofNullable(this.vpnLinkConnectionMode);
    }
    public Optional<SubResourceResponse> getVpnSiteLink() {
        return Optional.ofNullable(this.vpnSiteLink);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpnSiteLinkConnectionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer connectionBandwidth;
        private String connectionStatus;
        private Double egressBytesTransferred;
        private @Nullable List<SubResourceResponse> egressNatRules;
        private @Nullable Boolean enableBgp;
        private @Nullable Boolean enableRateLimiting;
        private String etag;
        private @Nullable String id;
        private Double ingressBytesTransferred;
        private @Nullable List<SubResourceResponse> ingressNatRules;
        private @Nullable List<IpsecPolicyResponse> ipsecPolicies;
        private @Nullable String name;
        private String provisioningState;
        private @Nullable Integer routingWeight;
        private @Nullable String sharedKey;
        private String type;
        private @Nullable Boolean useLocalAzureIpAddress;
        private @Nullable Boolean usePolicyBasedTrafficSelectors;
        private @Nullable String vpnConnectionProtocolType;
        private @Nullable String vpnLinkConnectionMode;
        private @Nullable SubResourceResponse vpnSiteLink;

        public Builder() {
    	      // Empty
        }

        public Builder(VpnSiteLinkConnectionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionBandwidth = defaults.connectionBandwidth;
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.egressBytesTransferred = defaults.egressBytesTransferred;
    	      this.egressNatRules = defaults.egressNatRules;
    	      this.enableBgp = defaults.enableBgp;
    	      this.enableRateLimiting = defaults.enableRateLimiting;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.ingressBytesTransferred = defaults.ingressBytesTransferred;
    	      this.ingressNatRules = defaults.ingressNatRules;
    	      this.ipsecPolicies = defaults.ipsecPolicies;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.routingWeight = defaults.routingWeight;
    	      this.sharedKey = defaults.sharedKey;
    	      this.type = defaults.type;
    	      this.useLocalAzureIpAddress = defaults.useLocalAzureIpAddress;
    	      this.usePolicyBasedTrafficSelectors = defaults.usePolicyBasedTrafficSelectors;
    	      this.vpnConnectionProtocolType = defaults.vpnConnectionProtocolType;
    	      this.vpnLinkConnectionMode = defaults.vpnLinkConnectionMode;
    	      this.vpnSiteLink = defaults.vpnSiteLink;
        }

        public Builder setConnectionBandwidth(@Nullable Integer connectionBandwidth) {
            this.connectionBandwidth = connectionBandwidth;
            return this;
        }

        public Builder setConnectionStatus(String connectionStatus) {
            this.connectionStatus = Objects.requireNonNull(connectionStatus);
            return this;
        }

        public Builder setEgressBytesTransferred(Double egressBytesTransferred) {
            this.egressBytesTransferred = Objects.requireNonNull(egressBytesTransferred);
            return this;
        }

        public Builder setEgressNatRules(@Nullable List<SubResourceResponse> egressNatRules) {
            this.egressNatRules = egressNatRules;
            return this;
        }

        public Builder setEnableBgp(@Nullable Boolean enableBgp) {
            this.enableBgp = enableBgp;
            return this;
        }

        public Builder setEnableRateLimiting(@Nullable Boolean enableRateLimiting) {
            this.enableRateLimiting = enableRateLimiting;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setIngressBytesTransferred(Double ingressBytesTransferred) {
            this.ingressBytesTransferred = Objects.requireNonNull(ingressBytesTransferred);
            return this;
        }

        public Builder setIngressNatRules(@Nullable List<SubResourceResponse> ingressNatRules) {
            this.ingressNatRules = ingressNatRules;
            return this;
        }

        public Builder setIpsecPolicies(@Nullable List<IpsecPolicyResponse> ipsecPolicies) {
            this.ipsecPolicies = ipsecPolicies;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRoutingWeight(@Nullable Integer routingWeight) {
            this.routingWeight = routingWeight;
            return this;
        }

        public Builder setSharedKey(@Nullable String sharedKey) {
            this.sharedKey = sharedKey;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUseLocalAzureIpAddress(@Nullable Boolean useLocalAzureIpAddress) {
            this.useLocalAzureIpAddress = useLocalAzureIpAddress;
            return this;
        }

        public Builder setUsePolicyBasedTrafficSelectors(@Nullable Boolean usePolicyBasedTrafficSelectors) {
            this.usePolicyBasedTrafficSelectors = usePolicyBasedTrafficSelectors;
            return this;
        }

        public Builder setVpnConnectionProtocolType(@Nullable String vpnConnectionProtocolType) {
            this.vpnConnectionProtocolType = vpnConnectionProtocolType;
            return this;
        }

        public Builder setVpnLinkConnectionMode(@Nullable String vpnLinkConnectionMode) {
            this.vpnLinkConnectionMode = vpnLinkConnectionMode;
            return this;
        }

        public Builder setVpnSiteLink(@Nullable SubResourceResponse vpnSiteLink) {
            this.vpnSiteLink = vpnSiteLink;
            return this;
        }

        public VpnSiteLinkConnectionResponse build() {
            return new VpnSiteLinkConnectionResponse(connectionBandwidth, connectionStatus, egressBytesTransferred, egressNatRules, enableBgp, enableRateLimiting, etag, id, ingressBytesTransferred, ingressNatRules, ipsecPolicies, name, provisioningState, routingWeight, sharedKey, type, useLocalAzureIpAddress, usePolicyBasedTrafficSelectors, vpnConnectionProtocolType, vpnLinkConnectionMode, vpnSiteLink);
        }
    }
}
