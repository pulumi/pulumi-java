// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurearcdata.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class SqlServerInstancePropertiesResponse {
    private final @Nullable String collation;
    private final String containerResourceId;
    private final String createTime;
    private final @Nullable String currentVersion;
    private final @Nullable String edition;
    private final @Nullable String instanceName;
    private final @Nullable String licenseType;
    private final @Nullable String patchLevel;
    private final @Nullable String productId;
    private final String provisioningState;
    private final String status;
    private final @Nullable String tcpDynamicPorts;
    private final @Nullable String tcpStaticPorts;
    private final @Nullable String vCore;
    private final @Nullable String version;

    @OutputCustomType.Constructor({"collation","containerResourceId","createTime","currentVersion","edition","instanceName","licenseType","patchLevel","productId","provisioningState","status","tcpDynamicPorts","tcpStaticPorts","vCore","version"})
    private SqlServerInstancePropertiesResponse(
        @Nullable String collation,
        String containerResourceId,
        String createTime,
        @Nullable String currentVersion,
        @Nullable String edition,
        @Nullable String instanceName,
        @Nullable String licenseType,
        @Nullable String patchLevel,
        @Nullable String productId,
        String provisioningState,
        String status,
        @Nullable String tcpDynamicPorts,
        @Nullable String tcpStaticPorts,
        @Nullable String vCore,
        @Nullable String version) {
        this.collation = collation;
        this.containerResourceId = Objects.requireNonNull(containerResourceId);
        this.createTime = Objects.requireNonNull(createTime);
        this.currentVersion = currentVersion;
        this.edition = edition;
        this.instanceName = instanceName;
        this.licenseType = licenseType;
        this.patchLevel = patchLevel;
        this.productId = productId;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.status = Objects.requireNonNull(status);
        this.tcpDynamicPorts = tcpDynamicPorts;
        this.tcpStaticPorts = tcpStaticPorts;
        this.vCore = vCore;
        this.version = version;
    }

    public Optional<String> getCollation() {
        return Optional.ofNullable(this.collation);
    }
    public String getContainerResourceId() {
        return this.containerResourceId;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public Optional<String> getCurrentVersion() {
        return Optional.ofNullable(this.currentVersion);
    }
    public Optional<String> getEdition() {
        return Optional.ofNullable(this.edition);
    }
    public Optional<String> getInstanceName() {
        return Optional.ofNullable(this.instanceName);
    }
    public Optional<String> getLicenseType() {
        return Optional.ofNullable(this.licenseType);
    }
    public Optional<String> getPatchLevel() {
        return Optional.ofNullable(this.patchLevel);
    }
    public Optional<String> getProductId() {
        return Optional.ofNullable(this.productId);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public String getStatus() {
        return this.status;
    }
    public Optional<String> getTcpDynamicPorts() {
        return Optional.ofNullable(this.tcpDynamicPorts);
    }
    public Optional<String> getTcpStaticPorts() {
        return Optional.ofNullable(this.tcpStaticPorts);
    }
    public Optional<String> getVCore() {
        return Optional.ofNullable(this.vCore);
    }
    public Optional<String> getVersion() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlServerInstancePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String collation;
        private String containerResourceId;
        private String createTime;
        private @Nullable String currentVersion;
        private @Nullable String edition;
        private @Nullable String instanceName;
        private @Nullable String licenseType;
        private @Nullable String patchLevel;
        private @Nullable String productId;
        private String provisioningState;
        private String status;
        private @Nullable String tcpDynamicPorts;
        private @Nullable String tcpStaticPorts;
        private @Nullable String vCore;
        private @Nullable String version;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlServerInstancePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collation = defaults.collation;
    	      this.containerResourceId = defaults.containerResourceId;
    	      this.createTime = defaults.createTime;
    	      this.currentVersion = defaults.currentVersion;
    	      this.edition = defaults.edition;
    	      this.instanceName = defaults.instanceName;
    	      this.licenseType = defaults.licenseType;
    	      this.patchLevel = defaults.patchLevel;
    	      this.productId = defaults.productId;
    	      this.provisioningState = defaults.provisioningState;
    	      this.status = defaults.status;
    	      this.tcpDynamicPorts = defaults.tcpDynamicPorts;
    	      this.tcpStaticPorts = defaults.tcpStaticPorts;
    	      this.vCore = defaults.vCore;
    	      this.version = defaults.version;
        }

        public Builder setCollation(@Nullable String collation) {
            this.collation = collation;
            return this;
        }

        public Builder setContainerResourceId(String containerResourceId) {
            this.containerResourceId = Objects.requireNonNull(containerResourceId);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setCurrentVersion(@Nullable String currentVersion) {
            this.currentVersion = currentVersion;
            return this;
        }

        public Builder setEdition(@Nullable String edition) {
            this.edition = edition;
            return this;
        }

        public Builder setInstanceName(@Nullable String instanceName) {
            this.instanceName = instanceName;
            return this;
        }

        public Builder setLicenseType(@Nullable String licenseType) {
            this.licenseType = licenseType;
            return this;
        }

        public Builder setPatchLevel(@Nullable String patchLevel) {
            this.patchLevel = patchLevel;
            return this;
        }

        public Builder setProductId(@Nullable String productId) {
            this.productId = productId;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setTcpDynamicPorts(@Nullable String tcpDynamicPorts) {
            this.tcpDynamicPorts = tcpDynamicPorts;
            return this;
        }

        public Builder setTcpStaticPorts(@Nullable String tcpStaticPorts) {
            this.tcpStaticPorts = tcpStaticPorts;
            return this;
        }

        public Builder setVCore(@Nullable String vCore) {
            this.vCore = vCore;
            return this;
        }

        public Builder setVersion(@Nullable String version) {
            this.version = version;
            return this;
        }

        public SqlServerInstancePropertiesResponse build() {
            return new SqlServerInstancePropertiesResponse(collation, containerResourceId, createTime, currentVersion, edition, instanceName, licenseType, patchLevel, productId, provisioningState, status, tcpDynamicPorts, tcpStaticPorts, vCore, version);
        }
    }
}
