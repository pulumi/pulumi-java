// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class PermissionScopeArgs extends io.pulumi.resources.ResourceArgs {

    public static final PermissionScopeArgs Empty = new PermissionScopeArgs();

    /**
     * The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c).
     * 
     */
    @InputImport(name="permissions", required=true)
      private final Input<String> permissions;

    public Input<String> getPermissions() {
        return this.permissions;
    }

    /**
     * The name of resource, normally the container name or the file share name, used by the local user.
     * 
     */
    @InputImport(name="resourceName", required=true)
      private final Input<String> resourceName;

    public Input<String> getPropResourceName() {
        return this.resourceName;
    }

    /**
     * The service used by the local user, e.g. blob, file.
     * 
     */
    @InputImport(name="service", required=true)
      private final Input<String> service;

    public Input<String> getService() {
        return this.service;
    }

    public PermissionScopeArgs(
        Input<String> permissions,
        Input<String> resourceName,
        Input<String> service) {
        this.permissions = Objects.requireNonNull(permissions, "expected parameter 'permissions' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
        this.service = Objects.requireNonNull(service, "expected parameter 'service' to be non-null");
    }

    private PermissionScopeArgs() {
        this.permissions = Input.empty();
        this.resourceName = Input.empty();
        this.service = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PermissionScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> permissions;
        private Input<String> resourceName;
        private Input<String> service;

        public Builder() {
    	      // Empty
        }

        public Builder(PermissionScopeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.permissions = defaults.permissions;
    	      this.resourceName = defaults.resourceName;
    	      this.service = defaults.service;
        }

        public Builder permissions(Input<String> permissions) {
            this.permissions = Objects.requireNonNull(permissions);
            return this;
        }

        public Builder permissions(String permissions) {
            this.permissions = Input.of(Objects.requireNonNull(permissions));
            return this;
        }

        public Builder resourceName(Input<String> resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }

        public Builder resourceName(String resourceName) {
            this.resourceName = Input.of(Objects.requireNonNull(resourceName));
            return this;
        }

        public Builder service(Input<String> service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }

        public Builder service(String service) {
            this.service = Input.of(Objects.requireNonNull(service));
            return this;
        }
        public PermissionScopeArgs build() {
            return new PermissionScopeArgs(permissions, resourceName, service);
        }
    }
}
