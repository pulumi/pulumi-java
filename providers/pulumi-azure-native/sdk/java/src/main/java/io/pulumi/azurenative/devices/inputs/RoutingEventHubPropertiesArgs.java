// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devices.inputs;

import io.pulumi.azurenative.devices.enums.AuthenticationType;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The properties related to an event hub endpoint.
 * 
 */
public final class RoutingEventHubPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final RoutingEventHubPropertiesArgs Empty = new RoutingEventHubPropertiesArgs();

    /**
     * Method used to authenticate against the event hub endpoint
     * 
     */
    @Import(name="authenticationType")
      private final @Nullable Output<Either<String,AuthenticationType>> authenticationType;

    public Output<Either<String,AuthenticationType>> authenticationType() {
        return this.authenticationType == null ? Codegen.empty() : this.authenticationType;
    }

    /**
     * The connection string of the event hub endpoint.
     * 
     */
    @Import(name="connectionString")
      private final @Nullable Output<String> connectionString;

    public Output<String> connectionString() {
        return this.connectionString == null ? Codegen.empty() : this.connectionString;
    }

    /**
     * The url of the event hub endpoint. It must include the protocol sb://
     * 
     */
    @Import(name="endpointUri")
      private final @Nullable Output<String> endpointUri;

    public Output<String> endpointUri() {
        return this.endpointUri == null ? Codegen.empty() : this.endpointUri;
    }

    /**
     * Event hub name on the event hub namespace
     * 
     */
    @Import(name="entityPath")
      private final @Nullable Output<String> entityPath;

    public Output<String> entityPath() {
        return this.entityPath == null ? Codegen.empty() : this.entityPath;
    }

    /**
     * Id of the event hub endpoint
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * The name of the resource group of the event hub endpoint.
     * 
     */
    @Import(name="resourceGroup")
      private final @Nullable Output<String> resourceGroup;

    public Output<String> resourceGroup() {
        return this.resourceGroup == null ? Codegen.empty() : this.resourceGroup;
    }

    /**
     * The subscription identifier of the event hub endpoint.
     * 
     */
    @Import(name="subscriptionId")
      private final @Nullable Output<String> subscriptionId;

    public Output<String> subscriptionId() {
        return this.subscriptionId == null ? Codegen.empty() : this.subscriptionId;
    }

    public RoutingEventHubPropertiesArgs(
        @Nullable Output<Either<String,AuthenticationType>> authenticationType,
        @Nullable Output<String> connectionString,
        @Nullable Output<String> endpointUri,
        @Nullable Output<String> entityPath,
        @Nullable Output<String> id,
        Output<String> name,
        @Nullable Output<String> resourceGroup,
        @Nullable Output<String> subscriptionId) {
        this.authenticationType = authenticationType;
        this.connectionString = connectionString;
        this.endpointUri = endpointUri;
        this.entityPath = entityPath;
        this.id = id;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.resourceGroup = resourceGroup;
        this.subscriptionId = subscriptionId;
    }

    private RoutingEventHubPropertiesArgs() {
        this.authenticationType = Codegen.empty();
        this.connectionString = Codegen.empty();
        this.endpointUri = Codegen.empty();
        this.entityPath = Codegen.empty();
        this.id = Codegen.empty();
        this.name = Codegen.empty();
        this.resourceGroup = Codegen.empty();
        this.subscriptionId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoutingEventHubPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,AuthenticationType>> authenticationType;
        private @Nullable Output<String> connectionString;
        private @Nullable Output<String> endpointUri;
        private @Nullable Output<String> entityPath;
        private @Nullable Output<String> id;
        private Output<String> name;
        private @Nullable Output<String> resourceGroup;
        private @Nullable Output<String> subscriptionId;

        public Builder() {
    	      // Empty
        }

        public Builder(RoutingEventHubPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.connectionString = defaults.connectionString;
    	      this.endpointUri = defaults.endpointUri;
    	      this.entityPath = defaults.entityPath;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.subscriptionId = defaults.subscriptionId;
        }

        public Builder authenticationType(@Nullable Output<Either<String,AuthenticationType>> authenticationType) {
            this.authenticationType = authenticationType;
            return this;
        }
        public Builder authenticationType(@Nullable Either<String,AuthenticationType> authenticationType) {
            this.authenticationType = Codegen.ofNullable(authenticationType);
            return this;
        }
        public Builder connectionString(@Nullable Output<String> connectionString) {
            this.connectionString = connectionString;
            return this;
        }
        public Builder connectionString(@Nullable String connectionString) {
            this.connectionString = Codegen.ofNullable(connectionString);
            return this;
        }
        public Builder endpointUri(@Nullable Output<String> endpointUri) {
            this.endpointUri = endpointUri;
            return this;
        }
        public Builder endpointUri(@Nullable String endpointUri) {
            this.endpointUri = Codegen.ofNullable(endpointUri);
            return this;
        }
        public Builder entityPath(@Nullable Output<String> entityPath) {
            this.entityPath = entityPath;
            return this;
        }
        public Builder entityPath(@Nullable String entityPath) {
            this.entityPath = Codegen.ofNullable(entityPath);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder resourceGroup(@Nullable Output<String> resourceGroup) {
            this.resourceGroup = resourceGroup;
            return this;
        }
        public Builder resourceGroup(@Nullable String resourceGroup) {
            this.resourceGroup = Codegen.ofNullable(resourceGroup);
            return this;
        }
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }
        public Builder subscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = Codegen.ofNullable(subscriptionId);
            return this;
        }        public RoutingEventHubPropertiesArgs build() {
            return new RoutingEventHubPropertiesArgs(authenticationType, connectionString, endpointUri, entityPath, id, name, resourceGroup, subscriptionId);
        }
    }
}
