// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurestack.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetRegistrationResult {
    /**
     * Specifies the billing mode for the Azure Stack registration.
     * 
     */
    private final @Nullable String billingModel;
    /**
     * The identifier of the registered Azure Stack.
     * 
     */
    private final @Nullable String cloudId;
    /**
     * The entity tag used for optimistic concurrency when modifying the resource.
     * 
     */
    private final @Nullable String etag;
    /**
     * ID of the resource.
     * 
     */
    private final String id;
    /**
     * Location of the resource.
     * 
     */
    private final String location;
    /**
     * Name of the resource.
     * 
     */
    private final String name;
    /**
     * The object identifier associated with the Azure Stack connecting to Azure.
     * 
     */
    private final @Nullable String objectId;
    /**
     * Custom tags for the resource.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Type of Resource.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"billingModel","cloudId","etag","id","location","name","objectId","tags","type"})
    private GetRegistrationResult(
        @Nullable String billingModel,
        @Nullable String cloudId,
        @Nullable String etag,
        String id,
        String location,
        String name,
        @Nullable String objectId,
        @Nullable Map<String,String> tags,
        String type) {
        this.billingModel = billingModel;
        this.cloudId = cloudId;
        this.etag = etag;
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.objectId = objectId;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    /**
     * Specifies the billing mode for the Azure Stack registration.
     * 
     */
    public Optional<String> getBillingModel() {
        return Optional.ofNullable(this.billingModel);
    }
    /**
     * The identifier of the registered Azure Stack.
     * 
     */
    public Optional<String> getCloudId() {
        return Optional.ofNullable(this.cloudId);
    }
    /**
     * The entity tag used for optimistic concurrency when modifying the resource.
     * 
     */
    public Optional<String> getEtag() {
        return Optional.ofNullable(this.etag);
    }
    /**
     * ID of the resource.
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * Location of the resource.
     * 
     */
    public String getLocation() {
        return this.location;
    }
    /**
     * Name of the resource.
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * The object identifier associated with the Azure Stack connecting to Azure.
     * 
     */
    public Optional<String> getObjectId() {
        return Optional.ofNullable(this.objectId);
    }
    /**
     * Custom tags for the resource.
     * 
     */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Type of Resource.
     * 
     */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegistrationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String billingModel;
        private @Nullable String cloudId;
        private @Nullable String etag;
        private String id;
        private String location;
        private String name;
        private @Nullable String objectId;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRegistrationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingModel = defaults.billingModel;
    	      this.cloudId = defaults.cloudId;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.objectId = defaults.objectId;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setBillingModel(@Nullable String billingModel) {
            this.billingModel = billingModel;
            return this;
        }

        public Builder setCloudId(@Nullable String cloudId) {
            this.cloudId = cloudId;
            return this;
        }

        public Builder setEtag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setObjectId(@Nullable String objectId) {
            this.objectId = objectId;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetRegistrationResult build() {
            return new GetRegistrationResult(billingModel, cloudId, etag, id, location, name, objectId, tags, type);
        }
    }
}
