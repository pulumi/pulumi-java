// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.outputs;

import io.pulumi.azurenative.recoveryservices.outputs.VMwareCbtNicDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.VMwareCbtProtectedDiskDetailsResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class VMwareCbtMigrationDetailsResponse {
    private final String dataMoverRunAsAccountId;
    private final String instanceType;
    private final String lastRecoveryPointReceived;
    private final @Nullable String licenseType;
    private final String migrationRecoveryPointId;
    private final String osType;
    private final @Nullable List<VMwareCbtProtectedDiskDetailsResponse> protectedDisks;
    private final String snapshotRunAsAccountId;
    private final @Nullable String targetAvailabilitySetId;
    private final @Nullable String targetBootDiagnosticsStorageAccountId;
    private final String targetLocation;
    private final @Nullable String targetNetworkId;
    private final @Nullable String targetResourceGroupId;
    private final @Nullable String targetVmName;
    private final @Nullable String targetVmSize;
    private final @Nullable List<VMwareCbtNicDetailsResponse> vmNics;
    private final String vmwareMachineId;

    @OutputCustomType.Constructor({"dataMoverRunAsAccountId","instanceType","lastRecoveryPointReceived","licenseType","migrationRecoveryPointId","osType","protectedDisks","snapshotRunAsAccountId","targetAvailabilitySetId","targetBootDiagnosticsStorageAccountId","targetLocation","targetNetworkId","targetResourceGroupId","targetVmName","targetVmSize","vmNics","vmwareMachineId"})
    private VMwareCbtMigrationDetailsResponse(
        String dataMoverRunAsAccountId,
        String instanceType,
        String lastRecoveryPointReceived,
        @Nullable String licenseType,
        String migrationRecoveryPointId,
        String osType,
        @Nullable List<VMwareCbtProtectedDiskDetailsResponse> protectedDisks,
        String snapshotRunAsAccountId,
        @Nullable String targetAvailabilitySetId,
        @Nullable String targetBootDiagnosticsStorageAccountId,
        String targetLocation,
        @Nullable String targetNetworkId,
        @Nullable String targetResourceGroupId,
        @Nullable String targetVmName,
        @Nullable String targetVmSize,
        @Nullable List<VMwareCbtNicDetailsResponse> vmNics,
        String vmwareMachineId) {
        this.dataMoverRunAsAccountId = Objects.requireNonNull(dataMoverRunAsAccountId);
        this.instanceType = Objects.requireNonNull(instanceType);
        this.lastRecoveryPointReceived = Objects.requireNonNull(lastRecoveryPointReceived);
        this.licenseType = licenseType;
        this.migrationRecoveryPointId = Objects.requireNonNull(migrationRecoveryPointId);
        this.osType = Objects.requireNonNull(osType);
        this.protectedDisks = protectedDisks;
        this.snapshotRunAsAccountId = Objects.requireNonNull(snapshotRunAsAccountId);
        this.targetAvailabilitySetId = targetAvailabilitySetId;
        this.targetBootDiagnosticsStorageAccountId = targetBootDiagnosticsStorageAccountId;
        this.targetLocation = Objects.requireNonNull(targetLocation);
        this.targetNetworkId = targetNetworkId;
        this.targetResourceGroupId = targetResourceGroupId;
        this.targetVmName = targetVmName;
        this.targetVmSize = targetVmSize;
        this.vmNics = vmNics;
        this.vmwareMachineId = Objects.requireNonNull(vmwareMachineId);
    }

    public String getDataMoverRunAsAccountId() {
        return this.dataMoverRunAsAccountId;
    }
    public String getInstanceType() {
        return this.instanceType;
    }
    public String getLastRecoveryPointReceived() {
        return this.lastRecoveryPointReceived;
    }
    public Optional<String> getLicenseType() {
        return Optional.ofNullable(this.licenseType);
    }
    public String getMigrationRecoveryPointId() {
        return this.migrationRecoveryPointId;
    }
    public String getOsType() {
        return this.osType;
    }
    public List<VMwareCbtProtectedDiskDetailsResponse> getProtectedDisks() {
        return this.protectedDisks == null ? List.of() : this.protectedDisks;
    }
    public String getSnapshotRunAsAccountId() {
        return this.snapshotRunAsAccountId;
    }
    public Optional<String> getTargetAvailabilitySetId() {
        return Optional.ofNullable(this.targetAvailabilitySetId);
    }
    public Optional<String> getTargetBootDiagnosticsStorageAccountId() {
        return Optional.ofNullable(this.targetBootDiagnosticsStorageAccountId);
    }
    public String getTargetLocation() {
        return this.targetLocation;
    }
    public Optional<String> getTargetNetworkId() {
        return Optional.ofNullable(this.targetNetworkId);
    }
    public Optional<String> getTargetResourceGroupId() {
        return Optional.ofNullable(this.targetResourceGroupId);
    }
    public Optional<String> getTargetVmName() {
        return Optional.ofNullable(this.targetVmName);
    }
    public Optional<String> getTargetVmSize() {
        return Optional.ofNullable(this.targetVmSize);
    }
    public List<VMwareCbtNicDetailsResponse> getVmNics() {
        return this.vmNics == null ? List.of() : this.vmNics;
    }
    public String getVmwareMachineId() {
        return this.vmwareMachineId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VMwareCbtMigrationDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dataMoverRunAsAccountId;
        private String instanceType;
        private String lastRecoveryPointReceived;
        private @Nullable String licenseType;
        private String migrationRecoveryPointId;
        private String osType;
        private @Nullable List<VMwareCbtProtectedDiskDetailsResponse> protectedDisks;
        private String snapshotRunAsAccountId;
        private @Nullable String targetAvailabilitySetId;
        private @Nullable String targetBootDiagnosticsStorageAccountId;
        private String targetLocation;
        private @Nullable String targetNetworkId;
        private @Nullable String targetResourceGroupId;
        private @Nullable String targetVmName;
        private @Nullable String targetVmSize;
        private @Nullable List<VMwareCbtNicDetailsResponse> vmNics;
        private String vmwareMachineId;

        public Builder() {
    	      // Empty
        }

        public Builder(VMwareCbtMigrationDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataMoverRunAsAccountId = defaults.dataMoverRunAsAccountId;
    	      this.instanceType = defaults.instanceType;
    	      this.lastRecoveryPointReceived = defaults.lastRecoveryPointReceived;
    	      this.licenseType = defaults.licenseType;
    	      this.migrationRecoveryPointId = defaults.migrationRecoveryPointId;
    	      this.osType = defaults.osType;
    	      this.protectedDisks = defaults.protectedDisks;
    	      this.snapshotRunAsAccountId = defaults.snapshotRunAsAccountId;
    	      this.targetAvailabilitySetId = defaults.targetAvailabilitySetId;
    	      this.targetBootDiagnosticsStorageAccountId = defaults.targetBootDiagnosticsStorageAccountId;
    	      this.targetLocation = defaults.targetLocation;
    	      this.targetNetworkId = defaults.targetNetworkId;
    	      this.targetResourceGroupId = defaults.targetResourceGroupId;
    	      this.targetVmName = defaults.targetVmName;
    	      this.targetVmSize = defaults.targetVmSize;
    	      this.vmNics = defaults.vmNics;
    	      this.vmwareMachineId = defaults.vmwareMachineId;
        }

        public Builder setDataMoverRunAsAccountId(String dataMoverRunAsAccountId) {
            this.dataMoverRunAsAccountId = Objects.requireNonNull(dataMoverRunAsAccountId);
            return this;
        }

        public Builder setInstanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }

        public Builder setLastRecoveryPointReceived(String lastRecoveryPointReceived) {
            this.lastRecoveryPointReceived = Objects.requireNonNull(lastRecoveryPointReceived);
            return this;
        }

        public Builder setLicenseType(@Nullable String licenseType) {
            this.licenseType = licenseType;
            return this;
        }

        public Builder setMigrationRecoveryPointId(String migrationRecoveryPointId) {
            this.migrationRecoveryPointId = Objects.requireNonNull(migrationRecoveryPointId);
            return this;
        }

        public Builder setOsType(String osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }

        public Builder setProtectedDisks(@Nullable List<VMwareCbtProtectedDiskDetailsResponse> protectedDisks) {
            this.protectedDisks = protectedDisks;
            return this;
        }

        public Builder setSnapshotRunAsAccountId(String snapshotRunAsAccountId) {
            this.snapshotRunAsAccountId = Objects.requireNonNull(snapshotRunAsAccountId);
            return this;
        }

        public Builder setTargetAvailabilitySetId(@Nullable String targetAvailabilitySetId) {
            this.targetAvailabilitySetId = targetAvailabilitySetId;
            return this;
        }

        public Builder setTargetBootDiagnosticsStorageAccountId(@Nullable String targetBootDiagnosticsStorageAccountId) {
            this.targetBootDiagnosticsStorageAccountId = targetBootDiagnosticsStorageAccountId;
            return this;
        }

        public Builder setTargetLocation(String targetLocation) {
            this.targetLocation = Objects.requireNonNull(targetLocation);
            return this;
        }

        public Builder setTargetNetworkId(@Nullable String targetNetworkId) {
            this.targetNetworkId = targetNetworkId;
            return this;
        }

        public Builder setTargetResourceGroupId(@Nullable String targetResourceGroupId) {
            this.targetResourceGroupId = targetResourceGroupId;
            return this;
        }

        public Builder setTargetVmName(@Nullable String targetVmName) {
            this.targetVmName = targetVmName;
            return this;
        }

        public Builder setTargetVmSize(@Nullable String targetVmSize) {
            this.targetVmSize = targetVmSize;
            return this;
        }

        public Builder setVmNics(@Nullable List<VMwareCbtNicDetailsResponse> vmNics) {
            this.vmNics = vmNics;
            return this;
        }

        public Builder setVmwareMachineId(String vmwareMachineId) {
            this.vmwareMachineId = Objects.requireNonNull(vmwareMachineId);
            return this;
        }

        public VMwareCbtMigrationDetailsResponse build() {
            return new VMwareCbtMigrationDetailsResponse(dataMoverRunAsAccountId, instanceType, lastRecoveryPointReceived, licenseType, migrationRecoveryPointId, osType, protectedDisks, snapshotRunAsAccountId, targetAvailabilitySetId, targetBootDiagnosticsStorageAccountId, targetLocation, targetNetworkId, targetResourceGroupId, targetVmName, targetVmSize, vmNics, vmwareMachineId);
        }
    }
}
