// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.operationsmanagement;

import io.pulumi.azurenative.operationsmanagement.inputs.ManagementAssociationPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ManagementAssociationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ManagementAssociationArgs Empty = new ManagementAssociationArgs();

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="managementAssociationName")
    private final @Nullable Input<String> managementAssociationName;

    public Input<String> getManagementAssociationName() {
        return this.managementAssociationName == null ? Input.empty() : this.managementAssociationName;
    }

    @InputImport(name="properties")
    private final @Nullable Input<ManagementAssociationPropertiesArgs> properties;

    public Input<ManagementAssociationPropertiesArgs> getProperties() {
        return this.properties == null ? Input.empty() : this.properties;
    }

    @InputImport(name="providerName", required=true)
    private final Input<String> providerName;

    public Input<String> getProviderName() {
        return this.providerName;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="resourceName", required=true)
    private final Input<String> resourceName;

    public Input<String> getPropResourceName() {
        return this.resourceName;
    }

    @InputImport(name="resourceType", required=true)
    private final Input<String> resourceType;

    public Input<String> getPropResourceType() {
        return this.resourceType;
    }

    public ManagementAssociationArgs(
        @Nullable Input<String> location,
        @Nullable Input<String> managementAssociationName,
        @Nullable Input<ManagementAssociationPropertiesArgs> properties,
        Input<String> providerName,
        Input<String> resourceGroupName,
        Input<String> resourceName,
        Input<String> resourceType) {
        this.location = location;
        this.managementAssociationName = managementAssociationName;
        this.properties = properties;
        this.providerName = Objects.requireNonNull(providerName, "expected parameter 'providerName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
    }

    private ManagementAssociationArgs() {
        this.location = Input.empty();
        this.managementAssociationName = Input.empty();
        this.properties = Input.empty();
        this.providerName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.resourceName = Input.empty();
        this.resourceType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> location;
        private @Nullable Input<String> managementAssociationName;
        private @Nullable Input<ManagementAssociationPropertiesArgs> properties;
        private Input<String> providerName;
        private Input<String> resourceGroupName;
        private Input<String> resourceName;
        private Input<String> resourceType;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagementAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.managementAssociationName = defaults.managementAssociationName;
    	      this.properties = defaults.properties;
    	      this.providerName = defaults.providerName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setManagementAssociationName(@Nullable Input<String> managementAssociationName) {
            this.managementAssociationName = managementAssociationName;
            return this;
        }

        public Builder setManagementAssociationName(@Nullable String managementAssociationName) {
            this.managementAssociationName = Input.ofNullable(managementAssociationName);
            return this;
        }

        public Builder setProperties(@Nullable Input<ManagementAssociationPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProperties(@Nullable ManagementAssociationPropertiesArgs properties) {
            this.properties = Input.ofNullable(properties);
            return this;
        }

        public Builder setProviderName(Input<String> providerName) {
            this.providerName = Objects.requireNonNull(providerName);
            return this;
        }

        public Builder setProviderName(String providerName) {
            this.providerName = Input.of(Objects.requireNonNull(providerName));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setResourceName(Input<String> resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }

        public Builder setResourceName(String resourceName) {
            this.resourceName = Input.of(Objects.requireNonNull(resourceName));
            return this;
        }

        public Builder setResourceType(Input<String> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }

        public Builder setResourceType(String resourceType) {
            this.resourceType = Input.of(Objects.requireNonNull(resourceType));
            return this;
        }

        public ManagementAssociationArgs build() {
            return new ManagementAssociationArgs(location, managementAssociationName, properties, providerName, resourceGroupName, resourceName, resourceType);
        }
    }
}
