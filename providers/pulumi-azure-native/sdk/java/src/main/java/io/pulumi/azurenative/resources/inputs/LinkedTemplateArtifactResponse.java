// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.resources.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;


public final class LinkedTemplateArtifactResponse extends io.pulumi.resources.InvokeArgs {

    public static final LinkedTemplateArtifactResponse Empty = new LinkedTemplateArtifactResponse();

    @InputImport(name="path", required=true)
    private final String path;

    public String getPath() {
        return this.path;
    }

    @InputImport(name="template", required=true)
    private final Object template;

    public Object getTemplate() {
        return this.template;
    }

    public LinkedTemplateArtifactResponse(
        String path,
        Object template) {
        this.path = Objects.requireNonNull(path, "expected parameter 'path' to be non-null");
        this.template = Objects.requireNonNull(template, "expected parameter 'template' to be non-null");
    }

    private LinkedTemplateArtifactResponse() {
        this.path = null;
        this.template = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinkedTemplateArtifactResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String path;
        private Object template;

        public Builder() {
    	      // Empty
        }

        public Builder(LinkedTemplateArtifactResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.path = defaults.path;
    	      this.template = defaults.template;
        }

        public Builder setPath(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }

        public Builder setTemplate(Object template) {
            this.template = Objects.requireNonNull(template);
            return this;
        }

        public LinkedTemplateArtifactResponse build() {
            return new LinkedTemplateArtifactResponse(path, template);
        }
    }
}
