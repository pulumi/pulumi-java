// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.aad.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Health Monitor Description
 * 
 */
public final class HealthMonitorResponse extends io.pulumi.resources.InvokeArgs {

    public static final HealthMonitorResponse Empty = new HealthMonitorResponse();

    /**
     * Health Monitor Details
     * 
     */
    @InputImport(name="details", required=true)
    private final String details;

    public String getDetails() {
        return this.details;
    }

    /**
     * Health Monitor Id
     * 
     */
    @InputImport(name="id", required=true)
    private final String id;

    public String getId() {
        return this.id;
    }

    /**
     * Health Monitor Name
     * 
     */
    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    public HealthMonitorResponse(
        String details,
        String id,
        String name) {
        this.details = Objects.requireNonNull(details, "expected parameter 'details' to be non-null");
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private HealthMonitorResponse() {
        this.details = null;
        this.id = null;
        this.name = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HealthMonitorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String details;
        private String id;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(HealthMonitorResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.details = defaults.details;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        public Builder setDetails(String details) {
            this.details = Objects.requireNonNull(details);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public HealthMonitorResponse build() {
            return new HealthMonitorResponse(details, id, name);
        }
    }
}
