// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.azurenative.datamigration.outputs.SqlConnectionInfoResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectToSourceSqlServerTaskInputResponse {
    /**
     * Permission group for validations
     * 
     */
    private final @Nullable String checkPermissionsGroup;
    /**
     * Flag for whether to collect agent jobs from source server.
     * 
     */
    private final @Nullable Boolean collectAgentJobs;
    /**
     * Flag for whether to collect logins from source server.
     * 
     */
    private final @Nullable Boolean collectLogins;
    /**
     * Connection information for Source SQL Server
     * 
     */
    private final SqlConnectionInfoResponse sourceConnectionInfo;

    @CustomType.Constructor
    private ConnectToSourceSqlServerTaskInputResponse(
        @CustomType.Parameter("checkPermissionsGroup") @Nullable String checkPermissionsGroup,
        @CustomType.Parameter("collectAgentJobs") @Nullable Boolean collectAgentJobs,
        @CustomType.Parameter("collectLogins") @Nullable Boolean collectLogins,
        @CustomType.Parameter("sourceConnectionInfo") SqlConnectionInfoResponse sourceConnectionInfo) {
        this.checkPermissionsGroup = checkPermissionsGroup;
        this.collectAgentJobs = collectAgentJobs;
        this.collectLogins = collectLogins;
        this.sourceConnectionInfo = sourceConnectionInfo;
    }

    /**
     * Permission group for validations
     * 
    */
    public Optional<String> getCheckPermissionsGroup() {
        return Optional.ofNullable(this.checkPermissionsGroup);
    }
    /**
     * Flag for whether to collect agent jobs from source server.
     * 
    */
    public Optional<Boolean> getCollectAgentJobs() {
        return Optional.ofNullable(this.collectAgentJobs);
    }
    /**
     * Flag for whether to collect logins from source server.
     * 
    */
    public Optional<Boolean> getCollectLogins() {
        return Optional.ofNullable(this.collectLogins);
    }
    /**
     * Connection information for Source SQL Server
     * 
    */
    public SqlConnectionInfoResponse getSourceConnectionInfo() {
        return this.sourceConnectionInfo;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectToSourceSqlServerTaskInputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String checkPermissionsGroup;
        private @Nullable Boolean collectAgentJobs;
        private @Nullable Boolean collectLogins;
        private SqlConnectionInfoResponse sourceConnectionInfo;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectToSourceSqlServerTaskInputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkPermissionsGroup = defaults.checkPermissionsGroup;
    	      this.collectAgentJobs = defaults.collectAgentJobs;
    	      this.collectLogins = defaults.collectLogins;
    	      this.sourceConnectionInfo = defaults.sourceConnectionInfo;
        }

        public Builder checkPermissionsGroup(@Nullable String checkPermissionsGroup) {
            this.checkPermissionsGroup = checkPermissionsGroup;
            return this;
        }
        public Builder collectAgentJobs(@Nullable Boolean collectAgentJobs) {
            this.collectAgentJobs = collectAgentJobs;
            return this;
        }
        public Builder collectLogins(@Nullable Boolean collectLogins) {
            this.collectLogins = collectLogins;
            return this;
        }
        public Builder sourceConnectionInfo(SqlConnectionInfoResponse sourceConnectionInfo) {
            this.sourceConnectionInfo = Objects.requireNonNull(sourceConnectionInfo);
            return this;
        }        public ConnectToSourceSqlServerTaskInputResponse build() {
            return new ConnectToSourceSqlServerTaskInputResponse(checkPermissionsGroup, collectAgentJobs, collectLogins, sourceConnectionInfo);
        }
    }
}
