// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagepool.outputs;

import io.pulumi.azurenative.storagepool.outputs.DiskResponse;
import io.pulumi.azurenative.storagepool.outputs.SystemMetadataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetDiskPoolResult {
    private final @Nullable List<String> additionalCapabilities;
    private final List<String> availabilityZones;
    private final @Nullable List<DiskResponse> disks;
    private final String id;
    private final String location;
    private final String name;
    private final String provisioningState;
    private final String status;
    private final String subnetId;
    private final SystemMetadataResponse systemData;
    private final @Nullable Map<String,String> tags;
    private final String tier;
    private final String type;

    @OutputCustomType.Constructor({"additionalCapabilities","availabilityZones","disks","id","location","name","provisioningState","status","subnetId","systemData","tags","tier","type"})
    private GetDiskPoolResult(
        @Nullable List<String> additionalCapabilities,
        List<String> availabilityZones,
        @Nullable List<DiskResponse> disks,
        String id,
        String location,
        String name,
        String provisioningState,
        String status,
        String subnetId,
        SystemMetadataResponse systemData,
        @Nullable Map<String,String> tags,
        String tier,
        String type) {
        this.additionalCapabilities = additionalCapabilities;
        this.availabilityZones = Objects.requireNonNull(availabilityZones);
        this.disks = disks;
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.status = Objects.requireNonNull(status);
        this.subnetId = Objects.requireNonNull(subnetId);
        this.systemData = Objects.requireNonNull(systemData);
        this.tags = tags;
        this.tier = Objects.requireNonNull(tier);
        this.type = Objects.requireNonNull(type);
    }

    public List<String> getAdditionalCapabilities() {
        return this.additionalCapabilities == null ? List.of() : this.additionalCapabilities;
    }
    public List<String> getAvailabilityZones() {
        return this.availabilityZones;
    }
    public List<DiskResponse> getDisks() {
        return this.disks == null ? List.of() : this.disks;
    }
    public String getId() {
        return this.id;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public String getStatus() {
        return this.status;
    }
    public String getSubnetId() {
        return this.subnetId;
    }
    public SystemMetadataResponse getSystemData() {
        return this.systemData;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getTier() {
        return this.tier;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiskPoolResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> additionalCapabilities;
        private List<String> availabilityZones;
        private @Nullable List<DiskResponse> disks;
        private String id;
        private String location;
        private String name;
        private String provisioningState;
        private String status;
        private String subnetId;
        private SystemMetadataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String tier;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDiskPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalCapabilities = defaults.additionalCapabilities;
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.disks = defaults.disks;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.status = defaults.status;
    	      this.subnetId = defaults.subnetId;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.tier = defaults.tier;
    	      this.type = defaults.type;
        }

        public Builder setAdditionalCapabilities(@Nullable List<String> additionalCapabilities) {
            this.additionalCapabilities = additionalCapabilities;
            return this;
        }

        public Builder setAvailabilityZones(List<String> availabilityZones) {
            this.availabilityZones = Objects.requireNonNull(availabilityZones);
            return this;
        }

        public Builder setDisks(@Nullable List<DiskResponse> disks) {
            this.disks = disks;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setSubnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }

        public Builder setSystemData(SystemMetadataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTier(String tier) {
            this.tier = Objects.requireNonNull(tier);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetDiskPoolResult build() {
            return new GetDiskPoolResult(additionalCapabilities, availabilityZones, disks, id, location, name, provisioningState, status, subnetId, systemData, tags, tier, type);
        }
    }
}
