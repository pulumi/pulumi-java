// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.authorization.outputs;

import io.pulumi.azurenative.authorization.outputs.PolicyAssignmentPropertiesResponsePolicy;
import io.pulumi.azurenative.authorization.outputs.PolicyAssignmentPropertiesResponseRoleDefinition;
import io.pulumi.azurenative.authorization.outputs.PolicyAssignmentPropertiesResponseScope;
import io.pulumi.core.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class PolicyAssignmentPropertiesResponse {
    /**
     * Details of the policy
     * 
     */
    private final @Nullable PolicyAssignmentPropertiesResponsePolicy policy;
    /**
     * Details of role definition
     * 
     */
    private final @Nullable PolicyAssignmentPropertiesResponseRoleDefinition roleDefinition;
    /**
     * Details of the resource scope
     * 
     */
    private final @Nullable PolicyAssignmentPropertiesResponseScope scope;

    @OutputCustomType.Constructor
    private PolicyAssignmentPropertiesResponse(
        @OutputCustomType.Parameter("policy") @Nullable PolicyAssignmentPropertiesResponsePolicy policy,
        @OutputCustomType.Parameter("roleDefinition") @Nullable PolicyAssignmentPropertiesResponseRoleDefinition roleDefinition,
        @OutputCustomType.Parameter("scope") @Nullable PolicyAssignmentPropertiesResponseScope scope) {
        this.policy = policy;
        this.roleDefinition = roleDefinition;
        this.scope = scope;
    }

    /**
     * Details of the policy
     * 
    */
    public Optional<PolicyAssignmentPropertiesResponsePolicy> getPolicy() {
        return Optional.ofNullable(this.policy);
    }
    /**
     * Details of role definition
     * 
    */
    public Optional<PolicyAssignmentPropertiesResponseRoleDefinition> getRoleDefinition() {
        return Optional.ofNullable(this.roleDefinition);
    }
    /**
     * Details of the resource scope
     * 
    */
    public Optional<PolicyAssignmentPropertiesResponseScope> getScope() {
        return Optional.ofNullable(this.scope);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyAssignmentPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable PolicyAssignmentPropertiesResponsePolicy policy;
        private @Nullable PolicyAssignmentPropertiesResponseRoleDefinition roleDefinition;
        private @Nullable PolicyAssignmentPropertiesResponseScope scope;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyAssignmentPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policy = defaults.policy;
    	      this.roleDefinition = defaults.roleDefinition;
    	      this.scope = defaults.scope;
        }

        public Builder policy(@Nullable PolicyAssignmentPropertiesResponsePolicy policy) {
            this.policy = policy;
            return this;
        }

        public Builder roleDefinition(@Nullable PolicyAssignmentPropertiesResponseRoleDefinition roleDefinition) {
            this.roleDefinition = roleDefinition;
            return this;
        }

        public Builder scope(@Nullable PolicyAssignmentPropertiesResponseScope scope) {
            this.scope = scope;
            return this;
        }
        public PolicyAssignmentPropertiesResponse build() {
            return new PolicyAssignmentPropertiesResponse(policy, roleDefinition, scope);
        }
    }
}
