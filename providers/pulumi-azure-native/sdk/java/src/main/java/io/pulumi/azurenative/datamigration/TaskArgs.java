// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration;

import io.pulumi.azurenative.datamigration.inputs.ConnectToSourcePostgreSqlSyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ConnectToSourceSqlServerSyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ConnectToSourceSqlServerTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ConnectToTargetAzureDbForMySqlTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ConnectToTargetSqlDbTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ConnectToTargetSqlMISyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ConnectToTargetSqlMITaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.GetTdeCertificatesSqlTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.GetUserTablesSqlSyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.GetUserTablesSqlTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.MigrateSqlServerSqlDbSyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.MigrateSqlServerSqlDbTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.MigrateSqlServerSqlMISyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.MigrateSqlServerSqlMITaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs;
import io.pulumi.azurenative.datamigration.inputs.ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskArgs extends io.pulumi.resources.ResourceArgs {

    public static final TaskArgs Empty = new TaskArgs();

    /**
     * Name of the resource group
     * 
     */
    @InputImport(name="groupName", required=true)
    private final Input<String> groupName;

    public Input<String> getGroupName() {
        return this.groupName;
    }

    /**
     * Name of the project
     * 
     */
    @InputImport(name="projectName", required=true)
    private final Input<String> projectName;

    public Input<String> getProjectName() {
        return this.projectName;
    }

    /**
     * Custom task properties
     * 
     */
    @InputImport(name="properties")
    private final @Nullable Input<Object> properties;

    public Input<Object> getProperties() {
        return this.properties == null ? Input.empty() : this.properties;
    }

    /**
     * Name of the service
     * 
     */
    @InputImport(name="serviceName", required=true)
    private final Input<String> serviceName;

    public Input<String> getServiceName() {
        return this.serviceName;
    }

    /**
     * Name of the Task
     * 
     */
    @InputImport(name="taskName")
    private final @Nullable Input<String> taskName;

    public Input<String> getTaskName() {
        return this.taskName == null ? Input.empty() : this.taskName;
    }

    public TaskArgs(
        Input<String> groupName,
        Input<String> projectName,
        @Nullable Input<Object> properties,
        Input<String> serviceName,
        @Nullable Input<String> taskName) {
        this.groupName = Objects.requireNonNull(groupName, "expected parameter 'groupName' to be non-null");
        this.projectName = Objects.requireNonNull(projectName, "expected parameter 'projectName' to be non-null");
        this.properties = properties;
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
        this.taskName = taskName;
    }

    private TaskArgs() {
        this.groupName = Input.empty();
        this.projectName = Input.empty();
        this.properties = Input.empty();
        this.serviceName = Input.empty();
        this.taskName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> groupName;
        private Input<String> projectName;
        private @Nullable Input<Object> properties;
        private Input<String> serviceName;
        private @Nullable Input<String> taskName;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupName = defaults.groupName;
    	      this.projectName = defaults.projectName;
    	      this.properties = defaults.properties;
    	      this.serviceName = defaults.serviceName;
    	      this.taskName = defaults.taskName;
        }

        public Builder setGroupName(Input<String> groupName) {
            this.groupName = Objects.requireNonNull(groupName);
            return this;
        }

        public Builder setGroupName(String groupName) {
            this.groupName = Input.of(Objects.requireNonNull(groupName));
            return this;
        }

        public Builder setProjectName(Input<String> projectName) {
            this.projectName = Objects.requireNonNull(projectName);
            return this;
        }

        public Builder setProjectName(String projectName) {
            this.projectName = Input.of(Objects.requireNonNull(projectName));
            return this;
        }

        public Builder setProperties(@Nullable Input<Object> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProperties(@Nullable Object properties) {
            this.properties = Input.ofNullable(properties);
            return this;
        }

        public Builder setServiceName(Input<String> serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }

        public Builder setServiceName(String serviceName) {
            this.serviceName = Input.of(Objects.requireNonNull(serviceName));
            return this;
        }

        public Builder setTaskName(@Nullable Input<String> taskName) {
            this.taskName = taskName;
            return this;
        }

        public Builder setTaskName(@Nullable String taskName) {
            this.taskName = Input.ofNullable(taskName);
            return this;
        }

        public TaskArgs build() {
            return new TaskArgs(groupName, projectName, properties, serviceName, taskName);
        }
    }
}
