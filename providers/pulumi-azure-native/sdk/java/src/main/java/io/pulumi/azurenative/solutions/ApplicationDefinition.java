// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.solutions;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.solutions.ApplicationDefinitionArgs;
import io.pulumi.azurenative.solutions.outputs.ApplicationAuthorizationResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationDefinitionArtifactResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationDeploymentPolicyResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationManagementPolicyResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationNotificationPolicyResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationPackageLockingPolicyDefinitionResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationPolicyResponse;
import io.pulumi.azurenative.solutions.outputs.SkuResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Information about managed application definition.
 * API Version: 2019-07-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:solutions:ApplicationDefinition myManagedApplicationDef /subscriptions/subid/resourceGroups/rg/providers/Microsoft.Solutions/applicationDefinitions/myManagedApplicationDef 
 * ```
 * 
 */
@ResourceType(type="azure-native:solutions:ApplicationDefinition")
public class ApplicationDefinition extends io.pulumi.resources.CustomResource {
    /**
     * The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
     * 
     */
    @Export(name="artifacts", type=List.class, parameters={ApplicationDefinitionArtifactResponse.class})
    private Output</* @Nullable */ List<ApplicationDefinitionArtifactResponse>> artifacts;

    /**
     * @return The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
     * 
     */
    public Output</* @Nullable */ List<ApplicationDefinitionArtifactResponse>> artifacts() {
        return this.artifacts;
    }
    /**
     * The managed application provider authorizations.
     * 
     */
    @Export(name="authorizations", type=List.class, parameters={ApplicationAuthorizationResponse.class})
    private Output</* @Nullable */ List<ApplicationAuthorizationResponse>> authorizations;

    /**
     * @return The managed application provider authorizations.
     * 
     */
    public Output</* @Nullable */ List<ApplicationAuthorizationResponse>> authorizations() {
        return this.authorizations;
    }
    /**
     * The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
     * 
     */
    @Export(name="createUiDefinition", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> createUiDefinition;

    /**
     * @return The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
     * 
     */
    public Output</* @Nullable */ Object> createUiDefinition() {
        return this.createUiDefinition;
    }
    /**
     * The managed application deployment policy.
     * 
     */
    @Export(name="deploymentPolicy", type=ApplicationDeploymentPolicyResponse.class, parameters={})
    private Output</* @Nullable */ ApplicationDeploymentPolicyResponse> deploymentPolicy;

    /**
     * @return The managed application deployment policy.
     * 
     */
    public Output</* @Nullable */ ApplicationDeploymentPolicyResponse> deploymentPolicy() {
        return this.deploymentPolicy;
    }
    /**
     * The managed application definition description.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The managed application definition description.
     * 
     */
    public Output</* @Nullable */ String> description() {
        return this.description;
    }
    /**
     * The managed application definition display name.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The managed application definition display name.
     * 
     */
    public Output</* @Nullable */ String> displayName() {
        return this.displayName;
    }
    /**
     * A value indicating whether the package is enabled or not.
     * 
     */
    @Export(name="isEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isEnabled;

    /**
     * @return A value indicating whether the package is enabled or not.
     * 
     */
    public Output</* @Nullable */ Boolean> isEnabled() {
        return this.isEnabled;
    }
    /**
     * Resource location
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location
     * 
     */
    public Output</* @Nullable */ String> location() {
        return this.location;
    }
    /**
     * The managed application lock level.
     * 
     */
    @Export(name="lockLevel", type=String.class, parameters={})
    private Output<String> lockLevel;

    /**
     * @return The managed application lock level.
     * 
     */
    public Output<String> lockLevel() {
        return this.lockLevel;
    }
    /**
     * The managed application locking policy.
     * 
     */
    @Export(name="lockingPolicy", type=ApplicationPackageLockingPolicyDefinitionResponse.class, parameters={})
    private Output</* @Nullable */ ApplicationPackageLockingPolicyDefinitionResponse> lockingPolicy;

    /**
     * @return The managed application locking policy.
     * 
     */
    public Output</* @Nullable */ ApplicationPackageLockingPolicyDefinitionResponse> lockingPolicy() {
        return this.lockingPolicy;
    }
    /**
     * The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
     * 
     */
    @Export(name="mainTemplate", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> mainTemplate;

    /**
     * @return The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
     * 
     */
    public Output</* @Nullable */ Object> mainTemplate() {
        return this.mainTemplate;
    }
    /**
     * ID of the resource that manages this resource.
     * 
     */
    @Export(name="managedBy", type=String.class, parameters={})
    private Output</* @Nullable */ String> managedBy;

    /**
     * @return ID of the resource that manages this resource.
     * 
     */
    public Output</* @Nullable */ String> managedBy() {
        return this.managedBy;
    }
    /**
     * The managed application management policy that determines publisher's access to the managed resource group.
     * 
     */
    @Export(name="managementPolicy", type=ApplicationManagementPolicyResponse.class, parameters={})
    private Output</* @Nullable */ ApplicationManagementPolicyResponse> managementPolicy;

    /**
     * @return The managed application management policy that determines publisher's access to the managed resource group.
     * 
     */
    public Output</* @Nullable */ ApplicationManagementPolicyResponse> managementPolicy() {
        return this.managementPolicy;
    }
    /**
     * Resource name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The managed application notification policy.
     * 
     */
    @Export(name="notificationPolicy", type=ApplicationNotificationPolicyResponse.class, parameters={})
    private Output</* @Nullable */ ApplicationNotificationPolicyResponse> notificationPolicy;

    /**
     * @return The managed application notification policy.
     * 
     */
    public Output</* @Nullable */ ApplicationNotificationPolicyResponse> notificationPolicy() {
        return this.notificationPolicy;
    }
    /**
     * The managed application definition package file Uri. Use this element
     * 
     */
    @Export(name="packageFileUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> packageFileUri;

    /**
     * @return The managed application definition package file Uri. Use this element
     * 
     */
    public Output</* @Nullable */ String> packageFileUri() {
        return this.packageFileUri;
    }
    /**
     * The managed application provider policies.
     * 
     */
    @Export(name="policies", type=List.class, parameters={ApplicationPolicyResponse.class})
    private Output</* @Nullable */ List<ApplicationPolicyResponse>> policies;

    /**
     * @return The managed application provider policies.
     * 
     */
    public Output</* @Nullable */ List<ApplicationPolicyResponse>> policies() {
        return this.policies;
    }
    /**
     * The SKU of the resource.
     * 
     */
    @Export(name="sku", type=SkuResponse.class, parameters={})
    private Output</* @Nullable */ SkuResponse> sku;

    /**
     * @return The SKU of the resource.
     * 
     */
    public Output</* @Nullable */ SkuResponse> sku() {
        return this.sku;
    }
    /**
     * Resource tags
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }
    /**
     * Resource type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApplicationDefinition(String name) {
        this(name, ApplicationDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApplicationDefinition(String name, ApplicationDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApplicationDefinition(String name, ApplicationDefinitionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:solutions:ApplicationDefinition", name, args == null ? ApplicationDefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ApplicationDefinition(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:solutions:ApplicationDefinition", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:solutions/v20160901preview:ApplicationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20170901:ApplicationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20180601:ApplicationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20190701:ApplicationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20200821preview:ApplicationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:solutions/v20210701:ApplicationDefinition").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApplicationDefinition get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ApplicationDefinition(name, id, options);
    }
}
