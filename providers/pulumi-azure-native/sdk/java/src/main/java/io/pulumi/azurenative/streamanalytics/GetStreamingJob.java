// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.streamanalytics;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.streamanalytics.inputs.GetStreamingJobArgs;
import io.pulumi.azurenative.streamanalytics.outputs.GetStreamingJobResult;
import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetStreamingJob {
    private GetStreamingJob() {}
    public interface BuilderApplicator {
        public void apply(GetStreamingJobArgs.Builder a);
    }
    private static GetStreamingJobArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = GetStreamingJobArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     * A streaming job object, containing all information associated with the named streaming job.
 * API Version: 2016-03-01.
 * 
     *
     * A streaming job object, containing all information associated with the named streaming job.
 * 
     */
    public static CompletableFuture<GetStreamingJobResult> invokeAsync(BuilderApplicator argsBuilder, @Nullable InvokeOptions options) {
        return invokeAsync(buildArgs(argsBuilder), Utilities.withVersion(options));
    }
    /**
         * A streaming job object, containing all information associated with the named streaming job.
     * API Version: 2016-03-01.
     * 
     *
         * A streaming job object, containing all information associated with the named streaming job.
     * 
     */
    public static CompletableFuture<GetStreamingJobResult> invokeAsync(GetStreamingJobArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure-native:streamanalytics:getStreamingJob", TypeShape.of(GetStreamingJobResult.class), args == null ? GetStreamingJobArgs.Empty : args, Utilities.withVersion(options));
    }
}
