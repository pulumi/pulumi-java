// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.dataprotection.inputs;

import io.pulumi.azurenative.dataprotection.inputs.PolicyParametersArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Policy Info in backupInstance
 * 
 */
public final class PolicyInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicyInfoArgs Empty = new PolicyInfoArgs();

    @Import(name="policyId", required=true)
      private final Output<String> policyId;

    public Output<String> getPolicyId() {
        return this.policyId;
    }

    /**
     * Policy parameters for the backup instance
     * 
     */
    @Import(name="policyParameters")
      private final @Nullable Output<PolicyParametersArgs> policyParameters;

    public Output<PolicyParametersArgs> getPolicyParameters() {
        return this.policyParameters == null ? Codegen.empty() : this.policyParameters;
    }

    public PolicyInfoArgs(
        Output<String> policyId,
        @Nullable Output<PolicyParametersArgs> policyParameters) {
        this.policyId = Objects.requireNonNull(policyId, "expected parameter 'policyId' to be non-null");
        this.policyParameters = policyParameters;
    }

    private PolicyInfoArgs() {
        this.policyId = Codegen.empty();
        this.policyParameters = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> policyId;
        private @Nullable Output<PolicyParametersArgs> policyParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policyId = defaults.policyId;
    	      this.policyParameters = defaults.policyParameters;
        }

        public Builder policyId(Output<String> policyId) {
            this.policyId = Objects.requireNonNull(policyId);
            return this;
        }
        public Builder policyId(String policyId) {
            this.policyId = Output.of(Objects.requireNonNull(policyId));
            return this;
        }
        public Builder policyParameters(@Nullable Output<PolicyParametersArgs> policyParameters) {
            this.policyParameters = policyParameters;
            return this;
        }
        public Builder policyParameters(@Nullable PolicyParametersArgs policyParameters) {
            this.policyParameters = Codegen.ofNullable(policyParameters);
            return this;
        }        public PolicyInfoArgs build() {
            return new PolicyInfoArgs(policyId, policyParameters);
        }
    }
}
