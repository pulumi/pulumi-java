// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.IngressResponse;
import io.pulumi.azurenative.web.outputs.RegistryCredentialsResponse;
import io.pulumi.azurenative.web.outputs.SecretResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ConfigurationResponse {
    /**
     * ActiveRevisionsMode controls how active revisions are handled for the Container app:
     * <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>
     * 
     */
    private final @Nullable String activeRevisionsMode;
    /**
     * Ingress configurations.
     * 
     */
    private final @Nullable IngressResponse ingress;
    /**
     * Collection of private container registry credentials for containers used by the Container app
     * 
     */
    private final @Nullable List<RegistryCredentialsResponse> registries;
    /**
     * Collection of secrets used by a Container app
     * 
     */
    private final @Nullable List<SecretResponse> secrets;

    @OutputCustomType.Constructor({"activeRevisionsMode","ingress","registries","secrets"})
    private ConfigurationResponse(
        @Nullable String activeRevisionsMode,
        @Nullable IngressResponse ingress,
        @Nullable List<RegistryCredentialsResponse> registries,
        @Nullable List<SecretResponse> secrets) {
        this.activeRevisionsMode = activeRevisionsMode;
        this.ingress = ingress;
        this.registries = registries;
        this.secrets = secrets;
    }

    /**
     * ActiveRevisionsMode controls how active revisions are handled for the Container app:
     * <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>
     * 
     */
    public Optional<String> getActiveRevisionsMode() {
        return Optional.ofNullable(this.activeRevisionsMode);
    }
    /**
     * Ingress configurations.
     * 
     */
    public Optional<IngressResponse> getIngress() {
        return Optional.ofNullable(this.ingress);
    }
    /**
     * Collection of private container registry credentials for containers used by the Container app
     * 
     */
    public List<RegistryCredentialsResponse> getRegistries() {
        return this.registries == null ? List.of() : this.registries;
    }
    /**
     * Collection of secrets used by a Container app
     * 
     */
    public List<SecretResponse> getSecrets() {
        return this.secrets == null ? List.of() : this.secrets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String activeRevisionsMode;
        private @Nullable IngressResponse ingress;
        private @Nullable List<RegistryCredentialsResponse> registries;
        private @Nullable List<SecretResponse> secrets;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeRevisionsMode = defaults.activeRevisionsMode;
    	      this.ingress = defaults.ingress;
    	      this.registries = defaults.registries;
    	      this.secrets = defaults.secrets;
        }

        public Builder setActiveRevisionsMode(@Nullable String activeRevisionsMode) {
            this.activeRevisionsMode = activeRevisionsMode;
            return this;
        }

        public Builder setIngress(@Nullable IngressResponse ingress) {
            this.ingress = ingress;
            return this;
        }

        public Builder setRegistries(@Nullable List<RegistryCredentialsResponse> registries) {
            this.registries = registries;
            return this;
        }

        public Builder setSecrets(@Nullable List<SecretResponse> secrets) {
            this.secrets = secrets;
            return this;
        }
        public ConfigurationResponse build() {
            return new ConfigurationResponse(activeRevisionsMode, ingress, registries, secrets);
        }
    }
}
