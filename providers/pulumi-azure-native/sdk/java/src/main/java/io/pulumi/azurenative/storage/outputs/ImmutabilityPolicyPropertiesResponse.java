// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.outputs;

import io.pulumi.azurenative.storage.outputs.UpdateHistoryPropertyResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ImmutabilityPolicyPropertiesResponse {
    /**
     * This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
     * 
     */
    private final @Nullable Boolean allowProtectedAppendWrites;
    /**
     * ImmutabilityPolicy Etag.
     * 
     */
    private final String etag;
    /**
     * The immutability period for the blobs in the container since the policy creation, in days.
     * 
     */
    private final @Nullable Integer immutabilityPeriodSinceCreationInDays;
    /**
     * The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
     * 
     */
    private final String state;
    /**
     * The ImmutabilityPolicy update history of the blob container.
     * 
     */
    private final List<UpdateHistoryPropertyResponse> updateHistory;

    @CustomType.Constructor
    private ImmutabilityPolicyPropertiesResponse(
        @CustomType.Parameter("allowProtectedAppendWrites") @Nullable Boolean allowProtectedAppendWrites,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("immutabilityPeriodSinceCreationInDays") @Nullable Integer immutabilityPeriodSinceCreationInDays,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("updateHistory") List<UpdateHistoryPropertyResponse> updateHistory) {
        this.allowProtectedAppendWrites = allowProtectedAppendWrites;
        this.etag = etag;
        this.immutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
        this.state = state;
        this.updateHistory = updateHistory;
    }

    /**
     * This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
     * 
    */
    public Optional<Boolean> getAllowProtectedAppendWrites() {
        return Optional.ofNullable(this.allowProtectedAppendWrites);
    }
    /**
     * ImmutabilityPolicy Etag.
     * 
    */
    public String getEtag() {
        return this.etag;
    }
    /**
     * The immutability period for the blobs in the container since the policy creation, in days.
     * 
    */
    public Optional<Integer> getImmutabilityPeriodSinceCreationInDays() {
        return Optional.ofNullable(this.immutabilityPeriodSinceCreationInDays);
    }
    /**
     * The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.
     * 
    */
    public String getState() {
        return this.state;
    }
    /**
     * The ImmutabilityPolicy update history of the blob container.
     * 
    */
    public List<UpdateHistoryPropertyResponse> getUpdateHistory() {
        return this.updateHistory;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImmutabilityPolicyPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowProtectedAppendWrites;
        private String etag;
        private @Nullable Integer immutabilityPeriodSinceCreationInDays;
        private String state;
        private List<UpdateHistoryPropertyResponse> updateHistory;

        public Builder() {
    	      // Empty
        }

        public Builder(ImmutabilityPolicyPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowProtectedAppendWrites = defaults.allowProtectedAppendWrites;
    	      this.etag = defaults.etag;
    	      this.immutabilityPeriodSinceCreationInDays = defaults.immutabilityPeriodSinceCreationInDays;
    	      this.state = defaults.state;
    	      this.updateHistory = defaults.updateHistory;
        }

        public Builder allowProtectedAppendWrites(@Nullable Boolean allowProtectedAppendWrites) {
            this.allowProtectedAppendWrites = allowProtectedAppendWrites;
            return this;
        }

        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder immutabilityPeriodSinceCreationInDays(@Nullable Integer immutabilityPeriodSinceCreationInDays) {
            this.immutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
            return this;
        }

        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder updateHistory(List<UpdateHistoryPropertyResponse> updateHistory) {
            this.updateHistory = Objects.requireNonNull(updateHistory);
            return this;
        }
        public ImmutabilityPolicyPropertiesResponse build() {
            return new ImmutabilityPolicyPropertiesResponse(allowProtectedAppendWrites, etag, immutabilityPeriodSinceCreationInDays, state, updateHistory);
        }
    }
}
