// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn.inputs;

import io.pulumi.azurenative.cdn.enums.PolicyEnabledState;
import io.pulumi.azurenative.cdn.enums.PolicyMode;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines contents of a web application firewall global configuration
 * 
 */
public final class PolicySettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicySettingsArgs Empty = new PolicySettingsArgs();

    /**
     * If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
     * 
     */
    @Import(name="defaultCustomBlockResponseBody")
      private final @Nullable Output<String> defaultCustomBlockResponseBody;

    public Output<String> getDefaultCustomBlockResponseBody() {
        return this.defaultCustomBlockResponseBody == null ? Output.empty() : this.defaultCustomBlockResponseBody;
    }

    /**
     * If the action type is block, this field defines the default customer overridable http response status code.
     * 
     */
    @Import(name="defaultCustomBlockResponseStatusCode")
      private final @Nullable Output<Integer> defaultCustomBlockResponseStatusCode;

    public Output<Integer> getDefaultCustomBlockResponseStatusCode() {
        return this.defaultCustomBlockResponseStatusCode == null ? Output.empty() : this.defaultCustomBlockResponseStatusCode;
    }

    /**
     * If action type is redirect, this field represents the default redirect URL for the client.
     * 
     */
    @Import(name="defaultRedirectUrl")
      private final @Nullable Output<String> defaultRedirectUrl;

    public Output<String> getDefaultRedirectUrl() {
        return this.defaultRedirectUrl == null ? Output.empty() : this.defaultRedirectUrl;
    }

    /**
     * describes if the policy is in enabled state or disabled state
     * 
     */
    @Import(name="enabledState")
      private final @Nullable Output<Either<String,PolicyEnabledState>> enabledState;

    public Output<Either<String,PolicyEnabledState>> getEnabledState() {
        return this.enabledState == null ? Output.empty() : this.enabledState;
    }

    /**
     * Describes if it is in detection mode or prevention mode at policy level.
     * 
     */
    @Import(name="mode")
      private final @Nullable Output<Either<String,PolicyMode>> mode;

    public Output<Either<String,PolicyMode>> getMode() {
        return this.mode == null ? Output.empty() : this.mode;
    }

    public PolicySettingsArgs(
        @Nullable Output<String> defaultCustomBlockResponseBody,
        @Nullable Output<Integer> defaultCustomBlockResponseStatusCode,
        @Nullable Output<String> defaultRedirectUrl,
        @Nullable Output<Either<String,PolicyEnabledState>> enabledState,
        @Nullable Output<Either<String,PolicyMode>> mode) {
        this.defaultCustomBlockResponseBody = defaultCustomBlockResponseBody;
        this.defaultCustomBlockResponseStatusCode = defaultCustomBlockResponseStatusCode;
        this.defaultRedirectUrl = defaultRedirectUrl;
        this.enabledState = enabledState;
        this.mode = mode;
    }

    private PolicySettingsArgs() {
        this.defaultCustomBlockResponseBody = Output.empty();
        this.defaultCustomBlockResponseStatusCode = Output.empty();
        this.defaultRedirectUrl = Output.empty();
        this.enabledState = Output.empty();
        this.mode = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> defaultCustomBlockResponseBody;
        private @Nullable Output<Integer> defaultCustomBlockResponseStatusCode;
        private @Nullable Output<String> defaultRedirectUrl;
        private @Nullable Output<Either<String,PolicyEnabledState>> enabledState;
        private @Nullable Output<Either<String,PolicyMode>> mode;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicySettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultCustomBlockResponseBody = defaults.defaultCustomBlockResponseBody;
    	      this.defaultCustomBlockResponseStatusCode = defaults.defaultCustomBlockResponseStatusCode;
    	      this.defaultRedirectUrl = defaults.defaultRedirectUrl;
    	      this.enabledState = defaults.enabledState;
    	      this.mode = defaults.mode;
        }

        public Builder defaultCustomBlockResponseBody(@Nullable Output<String> defaultCustomBlockResponseBody) {
            this.defaultCustomBlockResponseBody = defaultCustomBlockResponseBody;
            return this;
        }
        public Builder defaultCustomBlockResponseBody(@Nullable String defaultCustomBlockResponseBody) {
            this.defaultCustomBlockResponseBody = Output.ofNullable(defaultCustomBlockResponseBody);
            return this;
        }
        public Builder defaultCustomBlockResponseStatusCode(@Nullable Output<Integer> defaultCustomBlockResponseStatusCode) {
            this.defaultCustomBlockResponseStatusCode = defaultCustomBlockResponseStatusCode;
            return this;
        }
        public Builder defaultCustomBlockResponseStatusCode(@Nullable Integer defaultCustomBlockResponseStatusCode) {
            this.defaultCustomBlockResponseStatusCode = Output.ofNullable(defaultCustomBlockResponseStatusCode);
            return this;
        }
        public Builder defaultRedirectUrl(@Nullable Output<String> defaultRedirectUrl) {
            this.defaultRedirectUrl = defaultRedirectUrl;
            return this;
        }
        public Builder defaultRedirectUrl(@Nullable String defaultRedirectUrl) {
            this.defaultRedirectUrl = Output.ofNullable(defaultRedirectUrl);
            return this;
        }
        public Builder enabledState(@Nullable Output<Either<String,PolicyEnabledState>> enabledState) {
            this.enabledState = enabledState;
            return this;
        }
        public Builder enabledState(@Nullable Either<String,PolicyEnabledState> enabledState) {
            this.enabledState = Output.ofNullable(enabledState);
            return this;
        }
        public Builder mode(@Nullable Output<Either<String,PolicyMode>> mode) {
            this.mode = mode;
            return this;
        }
        public Builder mode(@Nullable Either<String,PolicyMode> mode) {
            this.mode = Output.ofNullable(mode);
            return this;
        }        public PolicySettingsArgs build() {
            return new PolicySettingsArgs(defaultCustomBlockResponseBody, defaultCustomBlockResponseStatusCode, defaultRedirectUrl, enabledState, mode);
        }
    }
}
