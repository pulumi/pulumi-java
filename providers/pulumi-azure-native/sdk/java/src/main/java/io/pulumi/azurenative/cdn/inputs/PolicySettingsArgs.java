// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn.inputs;

import io.pulumi.azurenative.cdn.enums.PolicyEnabledState;
import io.pulumi.azurenative.cdn.enums.PolicyMode;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PolicySettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicySettingsArgs Empty = new PolicySettingsArgs();

    @InputImport(name="defaultCustomBlockResponseBody")
    private final @Nullable Input<String> defaultCustomBlockResponseBody;

    public Input<String> getDefaultCustomBlockResponseBody() {
        return this.defaultCustomBlockResponseBody == null ? Input.empty() : this.defaultCustomBlockResponseBody;
    }

    @InputImport(name="defaultCustomBlockResponseStatusCode")
    private final @Nullable Input<Integer> defaultCustomBlockResponseStatusCode;

    public Input<Integer> getDefaultCustomBlockResponseStatusCode() {
        return this.defaultCustomBlockResponseStatusCode == null ? Input.empty() : this.defaultCustomBlockResponseStatusCode;
    }

    @InputImport(name="defaultRedirectUrl")
    private final @Nullable Input<String> defaultRedirectUrl;

    public Input<String> getDefaultRedirectUrl() {
        return this.defaultRedirectUrl == null ? Input.empty() : this.defaultRedirectUrl;
    }

    @InputImport(name="enabledState")
    private final @Nullable Input<Either<String,PolicyEnabledState>> enabledState;

    public Input<Either<String,PolicyEnabledState>> getEnabledState() {
        return this.enabledState == null ? Input.empty() : this.enabledState;
    }

    @InputImport(name="mode")
    private final @Nullable Input<Either<String,PolicyMode>> mode;

    public Input<Either<String,PolicyMode>> getMode() {
        return this.mode == null ? Input.empty() : this.mode;
    }

    public PolicySettingsArgs(
        @Nullable Input<String> defaultCustomBlockResponseBody,
        @Nullable Input<Integer> defaultCustomBlockResponseStatusCode,
        @Nullable Input<String> defaultRedirectUrl,
        @Nullable Input<Either<String,PolicyEnabledState>> enabledState,
        @Nullable Input<Either<String,PolicyMode>> mode) {
        this.defaultCustomBlockResponseBody = defaultCustomBlockResponseBody;
        this.defaultCustomBlockResponseStatusCode = defaultCustomBlockResponseStatusCode;
        this.defaultRedirectUrl = defaultRedirectUrl;
        this.enabledState = enabledState;
        this.mode = mode;
    }

    private PolicySettingsArgs() {
        this.defaultCustomBlockResponseBody = Input.empty();
        this.defaultCustomBlockResponseStatusCode = Input.empty();
        this.defaultRedirectUrl = Input.empty();
        this.enabledState = Input.empty();
        this.mode = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> defaultCustomBlockResponseBody;
        private @Nullable Input<Integer> defaultCustomBlockResponseStatusCode;
        private @Nullable Input<String> defaultRedirectUrl;
        private @Nullable Input<Either<String,PolicyEnabledState>> enabledState;
        private @Nullable Input<Either<String,PolicyMode>> mode;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicySettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultCustomBlockResponseBody = defaults.defaultCustomBlockResponseBody;
    	      this.defaultCustomBlockResponseStatusCode = defaults.defaultCustomBlockResponseStatusCode;
    	      this.defaultRedirectUrl = defaults.defaultRedirectUrl;
    	      this.enabledState = defaults.enabledState;
    	      this.mode = defaults.mode;
        }

        public Builder setDefaultCustomBlockResponseBody(@Nullable Input<String> defaultCustomBlockResponseBody) {
            this.defaultCustomBlockResponseBody = defaultCustomBlockResponseBody;
            return this;
        }

        public Builder setDefaultCustomBlockResponseBody(@Nullable String defaultCustomBlockResponseBody) {
            this.defaultCustomBlockResponseBody = Input.ofNullable(defaultCustomBlockResponseBody);
            return this;
        }

        public Builder setDefaultCustomBlockResponseStatusCode(@Nullable Input<Integer> defaultCustomBlockResponseStatusCode) {
            this.defaultCustomBlockResponseStatusCode = defaultCustomBlockResponseStatusCode;
            return this;
        }

        public Builder setDefaultCustomBlockResponseStatusCode(@Nullable Integer defaultCustomBlockResponseStatusCode) {
            this.defaultCustomBlockResponseStatusCode = Input.ofNullable(defaultCustomBlockResponseStatusCode);
            return this;
        }

        public Builder setDefaultRedirectUrl(@Nullable Input<String> defaultRedirectUrl) {
            this.defaultRedirectUrl = defaultRedirectUrl;
            return this;
        }

        public Builder setDefaultRedirectUrl(@Nullable String defaultRedirectUrl) {
            this.defaultRedirectUrl = Input.ofNullable(defaultRedirectUrl);
            return this;
        }

        public Builder setEnabledState(@Nullable Input<Either<String,PolicyEnabledState>> enabledState) {
            this.enabledState = enabledState;
            return this;
        }

        public Builder setEnabledState(@Nullable Either<String,PolicyEnabledState> enabledState) {
            this.enabledState = Input.ofNullable(enabledState);
            return this;
        }

        public Builder setMode(@Nullable Input<Either<String,PolicyMode>> mode) {
            this.mode = mode;
            return this;
        }

        public Builder setMode(@Nullable Either<String,PolicyMode> mode) {
            this.mode = Input.ofNullable(mode);
            return this;
        }

        public PolicySettingsArgs build() {
            return new PolicySettingsArgs(defaultCustomBlockResponseBody, defaultCustomBlockResponseStatusCode, defaultRedirectUrl, enabledState, mode);
        }
    }
}
