// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class ListNotebookWorkspaceConnectionInfoResult {
    /**
     * Specifies auth token used for connecting to Notebook server (uses token-based auth).
     * 
     */
    private final String authToken;
    /**
     * Specifies the endpoint of Notebook server.
     * 
     */
    private final String notebookServerEndpoint;

    @OutputCustomType.Constructor
    private ListNotebookWorkspaceConnectionInfoResult(
        @OutputCustomType.Parameter("authToken") String authToken,
        @OutputCustomType.Parameter("notebookServerEndpoint") String notebookServerEndpoint) {
        this.authToken = authToken;
        this.notebookServerEndpoint = notebookServerEndpoint;
    }

    /**
     * Specifies auth token used for connecting to Notebook server (uses token-based auth).
     * 
    */
    public String getAuthToken() {
        return this.authToken;
    }
    /**
     * Specifies the endpoint of Notebook server.
     * 
    */
    public String getNotebookServerEndpoint() {
        return this.notebookServerEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListNotebookWorkspaceConnectionInfoResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authToken;
        private String notebookServerEndpoint;

        public Builder() {
    	      // Empty
        }

        public Builder(ListNotebookWorkspaceConnectionInfoResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authToken = defaults.authToken;
    	      this.notebookServerEndpoint = defaults.notebookServerEndpoint;
        }

        public Builder setAuthToken(String authToken) {
            this.authToken = Objects.requireNonNull(authToken);
            return this;
        }

        public Builder setNotebookServerEndpoint(String notebookServerEndpoint) {
            this.notebookServerEndpoint = Objects.requireNonNull(notebookServerEndpoint);
            return this;
        }
        public ListNotebookWorkspaceConnectionInfoResult build() {
            return new ListNotebookWorkspaceConnectionInfoResult(authToken, notebookServerEndpoint);
        }
    }
}
