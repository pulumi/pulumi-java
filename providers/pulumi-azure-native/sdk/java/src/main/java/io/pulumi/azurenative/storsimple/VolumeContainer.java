// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storsimple;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.storsimple.VolumeContainerArgs;
import io.pulumi.azurenative.storsimple.outputs.AsymmetricEncryptedSecretResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The volume container.
 * API Version: 2017-06-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:storsimple:VolumeContainer VolumeContainerForSDKTest /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/volumeContainers/VolumeContainerForSDKTest 
 * ```
 * 
 */
@ResourceType(type="azure-native:storsimple:VolumeContainer")
public class VolumeContainer extends io.pulumi.resources.CustomResource {
    /**
     * The bandwidth-rate set on the volume container.
     * 
     */
    @OutputExport(name="bandWidthRateInMbps", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> bandWidthRateInMbps;

    /**
     * @return The bandwidth-rate set on the volume container.
     * 
     */
    public Output</* @Nullable */ Integer> getBandWidthRateInMbps() {
        return this.bandWidthRateInMbps;
    }
    /**
     * The ID of the bandwidth setting associated with the volume container.
     * 
     */
    @OutputExport(name="bandwidthSettingId", type=String.class, parameters={})
    private Output</* @Nullable */ String> bandwidthSettingId;

    /**
     * @return The ID of the bandwidth setting associated with the volume container.
     * 
     */
    public Output</* @Nullable */ String> getBandwidthSettingId() {
        return this.bandwidthSettingId;
    }
    /**
     * The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
     * 
     */
    @OutputExport(name="encryptionKey", type=AsymmetricEncryptedSecretResponse.class, parameters={})
    private Output</* @Nullable */ AsymmetricEncryptedSecretResponse> encryptionKey;

    /**
     * @return The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is "Enabled".
     * 
     */
    public Output</* @Nullable */ AsymmetricEncryptedSecretResponse> getEncryptionKey() {
        return this.encryptionKey;
    }
    /**
     * The flag to denote whether encryption is enabled or not.
     * 
     */
    @OutputExport(name="encryptionStatus", type=String.class, parameters={})
    private Output<String> encryptionStatus;

    /**
     * @return The flag to denote whether encryption is enabled or not.
     * 
     */
    public Output<String> getEncryptionStatus() {
        return this.encryptionStatus;
    }
    /**
     * The Kind of the object. Currently only Series8000 is supported
     * 
     */
    @OutputExport(name="kind", type=String.class, parameters={})
    private Output</* @Nullable */ String> kind;

    /**
     * @return The Kind of the object. Currently only Series8000 is supported
     * 
     */
    public Output</* @Nullable */ String> getKind() {
        return this.kind;
    }
    /**
     * The name of the object.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the object.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
     * 
     */
    @OutputExport(name="ownerShipStatus", type=String.class, parameters={})
    private Output<String> ownerShipStatus;

    /**
     * @return The owner ship status of the volume container. Only when the status is "NotOwned", the delete operation on the volume container is permitted.
     * 
     */
    public Output<String> getOwnerShipStatus() {
        return this.ownerShipStatus;
    }
    /**
     * The path ID of storage account associated with the volume container.
     * 
     */
    @OutputExport(name="storageAccountCredentialId", type=String.class, parameters={})
    private Output<String> storageAccountCredentialId;

    /**
     * @return The path ID of storage account associated with the volume container.
     * 
     */
    public Output<String> getStorageAccountCredentialId() {
        return this.storageAccountCredentialId;
    }
    /**
     * The total cloud storage for the volume container.
     * 
     */
    @OutputExport(name="totalCloudStorageUsageInBytes", type=Double.class, parameters={})
    private Output<Double> totalCloudStorageUsageInBytes;

    /**
     * @return The total cloud storage for the volume container.
     * 
     */
    public Output<Double> getTotalCloudStorageUsageInBytes() {
        return this.totalCloudStorageUsageInBytes;
    }
    /**
     * The hierarchical type of the object.
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The hierarchical type of the object.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The number of volumes in the volume Container.
     * 
     */
    @OutputExport(name="volumeCount", type=Integer.class, parameters={})
    private Output<Integer> volumeCount;

    /**
     * @return The number of volumes in the volume Container.
     * 
     */
    public Output<Integer> getVolumeCount() {
        return this.volumeCount;
    }

    public interface BuilderApplicator {
        public void apply(VolumeContainerArgs.Builder a);
    }
    private static io.pulumi.azurenative.storsimple.VolumeContainerArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.azurenative.storsimple.VolumeContainerArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public VolumeContainer(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VolumeContainer(String name) {
        this(name, VolumeContainerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VolumeContainer(String name, VolumeContainerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VolumeContainer(String name, VolumeContainerArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:storsimple:VolumeContainer", name, args == null ? VolumeContainerArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private VolumeContainer(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:storsimple:VolumeContainer", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:storsimple/v20170601:VolumeContainer").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VolumeContainer get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VolumeContainer(name, id, options);
    }
}
