// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.management.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetHierarchySettingResult {
    /**
     * Settings that sets the default Management Group under which new subscriptions get added in this tenant. For example, /providers/Microsoft.Management/managementGroups/defaultGroup
     * 
     */
    private final @Nullable String defaultManagementGroup;
    /**
     * The fully qualified ID for the settings object.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000/settings/default.
     * 
     */
    private final String id;
    /**
     * The name of the object. In this case, default.
     * 
     */
    private final String name;
    /**
     * Indicates whether RBAC access is required upon group creation under the root Management Group. If set to true, user will require Microsoft.Management/managementGroups/write action on the root Management Group scope in order to create new Groups directly under the root. This will prevent new users from creating new Management Groups, unless they are given access.
     * 
     */
    private final @Nullable Boolean requireAuthorizationForGroupCreation;
    /**
     * The AAD Tenant ID associated with the hierarchy settings. For example, 00000000-0000-0000-0000-000000000000
     * 
     */
    private final @Nullable String tenantId;
    /**
     * The type of the resource.  For example, Microsoft.Management/managementGroups/settings.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"defaultManagementGroup","id","name","requireAuthorizationForGroupCreation","tenantId","type"})
    private GetHierarchySettingResult(
        @Nullable String defaultManagementGroup,
        String id,
        String name,
        @Nullable Boolean requireAuthorizationForGroupCreation,
        @Nullable String tenantId,
        String type) {
        this.defaultManagementGroup = defaultManagementGroup;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.requireAuthorizationForGroupCreation = requireAuthorizationForGroupCreation;
        this.tenantId = tenantId;
        this.type = Objects.requireNonNull(type);
    }

    /**
     * Settings that sets the default Management Group under which new subscriptions get added in this tenant. For example, /providers/Microsoft.Management/managementGroups/defaultGroup
     * 
     */
    public Optional<String> getDefaultManagementGroup() {
        return Optional.ofNullable(this.defaultManagementGroup);
    }
    /**
     * The fully qualified ID for the settings object.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000/settings/default.
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * The name of the object. In this case, default.
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * Indicates whether RBAC access is required upon group creation under the root Management Group. If set to true, user will require Microsoft.Management/managementGroups/write action on the root Management Group scope in order to create new Groups directly under the root. This will prevent new users from creating new Management Groups, unless they are given access.
     * 
     */
    public Optional<Boolean> getRequireAuthorizationForGroupCreation() {
        return Optional.ofNullable(this.requireAuthorizationForGroupCreation);
    }
    /**
     * The AAD Tenant ID associated with the hierarchy settings. For example, 00000000-0000-0000-0000-000000000000
     * 
     */
    public Optional<String> getTenantId() {
        return Optional.ofNullable(this.tenantId);
    }
    /**
     * The type of the resource.  For example, Microsoft.Management/managementGroups/settings.
     * 
     */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHierarchySettingResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String defaultManagementGroup;
        private String id;
        private String name;
        private @Nullable Boolean requireAuthorizationForGroupCreation;
        private @Nullable String tenantId;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHierarchySettingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultManagementGroup = defaults.defaultManagementGroup;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.requireAuthorizationForGroupCreation = defaults.requireAuthorizationForGroupCreation;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
        }

        public Builder setDefaultManagementGroup(@Nullable String defaultManagementGroup) {
            this.defaultManagementGroup = defaultManagementGroup;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRequireAuthorizationForGroupCreation(@Nullable Boolean requireAuthorizationForGroupCreation) {
            this.requireAuthorizationForGroupCreation = requireAuthorizationForGroupCreation;
            return this;
        }

        public Builder setTenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetHierarchySettingResult build() {
            return new GetHierarchySettingResult(defaultManagementGroup, id, name, requireAuthorizationForGroupCreation, tenantId, type);
        }
    }
}
