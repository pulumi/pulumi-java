// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.management.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetHierarchySettingResult {
    private final @Nullable String defaultManagementGroup;
    private final String id;
    private final String name;
    private final @Nullable Boolean requireAuthorizationForGroupCreation;
    private final @Nullable String tenantId;
    private final String type;

    @OutputCustomType.Constructor({"defaultManagementGroup","id","name","requireAuthorizationForGroupCreation","tenantId","type"})
    private GetHierarchySettingResult(
        @Nullable String defaultManagementGroup,
        String id,
        String name,
        @Nullable Boolean requireAuthorizationForGroupCreation,
        @Nullable String tenantId,
        String type) {
        this.defaultManagementGroup = defaultManagementGroup;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.requireAuthorizationForGroupCreation = requireAuthorizationForGroupCreation;
        this.tenantId = tenantId;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getDefaultManagementGroup() {
        return Optional.ofNullable(this.defaultManagementGroup);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public Optional<Boolean> getRequireAuthorizationForGroupCreation() {
        return Optional.ofNullable(this.requireAuthorizationForGroupCreation);
    }
    public Optional<String> getTenantId() {
        return Optional.ofNullable(this.tenantId);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHierarchySettingResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String defaultManagementGroup;
        private String id;
        private String name;
        private @Nullable Boolean requireAuthorizationForGroupCreation;
        private @Nullable String tenantId;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHierarchySettingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultManagementGroup = defaults.defaultManagementGroup;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.requireAuthorizationForGroupCreation = defaults.requireAuthorizationForGroupCreation;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
        }

        public Builder setDefaultManagementGroup(@Nullable String defaultManagementGroup) {
            this.defaultManagementGroup = defaultManagementGroup;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRequireAuthorizationForGroupCreation(@Nullable Boolean requireAuthorizationForGroupCreation) {
            this.requireAuthorizationForGroupCreation = requireAuthorizationForGroupCreation;
            return this;
        }

        public Builder setTenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetHierarchySettingResult build() {
            return new GetHierarchySettingResult(defaultManagementGroup, id, name, requireAuthorizationForGroupCreation, tenantId, type);
        }
    }
}
