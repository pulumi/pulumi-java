// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicebus.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
 * 
 */
public final class ActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ActionArgs Empty = new ActionArgs();

    /**
     * This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
     * 
     */
    @InputImport(name="compatibilityLevel")
      private final @Nullable Output<Integer> compatibilityLevel;

    public Output<Integer> getCompatibilityLevel() {
        return this.compatibilityLevel == null ? Output.empty() : this.compatibilityLevel;
    }

    /**
     * Value that indicates whether the rule action requires preprocessing.
     * 
     */
    @InputImport(name="requiresPreprocessing")
      private final @Nullable Output<Boolean> requiresPreprocessing;

    public Output<Boolean> getRequiresPreprocessing() {
        return this.requiresPreprocessing == null ? Output.empty() : this.requiresPreprocessing;
    }

    /**
     * SQL expression. e.g. MyProperty='ABC'
     * 
     */
    @InputImport(name="sqlExpression")
      private final @Nullable Output<String> sqlExpression;

    public Output<String> getSqlExpression() {
        return this.sqlExpression == null ? Output.empty() : this.sqlExpression;
    }

    public ActionArgs(
        @Nullable Output<Integer> compatibilityLevel,
        @Nullable Output<Boolean> requiresPreprocessing,
        @Nullable Output<String> sqlExpression) {
        this.compatibilityLevel = compatibilityLevel;
        this.requiresPreprocessing = requiresPreprocessing == null ? Output.ofNullable(true) : requiresPreprocessing;
        this.sqlExpression = sqlExpression;
    }

    private ActionArgs() {
        this.compatibilityLevel = Output.empty();
        this.requiresPreprocessing = Output.empty();
        this.sqlExpression = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> compatibilityLevel;
        private @Nullable Output<Boolean> requiresPreprocessing;
        private @Nullable Output<String> sqlExpression;

        public Builder() {
    	      // Empty
        }

        public Builder(ActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibilityLevel = defaults.compatibilityLevel;
    	      this.requiresPreprocessing = defaults.requiresPreprocessing;
    	      this.sqlExpression = defaults.sqlExpression;
        }

        public Builder compatibilityLevel(@Nullable Output<Integer> compatibilityLevel) {
            this.compatibilityLevel = compatibilityLevel;
            return this;
        }

        public Builder compatibilityLevel(@Nullable Integer compatibilityLevel) {
            this.compatibilityLevel = Output.ofNullable(compatibilityLevel);
            return this;
        }

        public Builder requiresPreprocessing(@Nullable Output<Boolean> requiresPreprocessing) {
            this.requiresPreprocessing = requiresPreprocessing;
            return this;
        }

        public Builder requiresPreprocessing(@Nullable Boolean requiresPreprocessing) {
            this.requiresPreprocessing = Output.ofNullable(requiresPreprocessing);
            return this;
        }

        public Builder sqlExpression(@Nullable Output<String> sqlExpression) {
            this.sqlExpression = sqlExpression;
            return this;
        }

        public Builder sqlExpression(@Nullable String sqlExpression) {
            this.sqlExpression = Output.ofNullable(sqlExpression);
            return this;
        }
        public ActionArgs build() {
            return new ActionArgs(compatibilityLevel, requiresPreprocessing, sqlExpression);
        }
    }
}
