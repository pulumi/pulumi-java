// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.enums.SessionAffinityEnabledState;
import io.pulumi.azurenative.network.inputs.FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A frontend endpoint used for routing.
 * 
 */
public final class FrontendEndpointArgs extends io.pulumi.resources.ResourceArgs {

    public static final FrontendEndpointArgs Empty = new FrontendEndpointArgs();

    /**
     * The host name of the frontendEndpoint. Must be a domain name.
     * 
     */
    @InputImport(name="hostName")
      private final @Nullable Input<String> hostName;

    public Input<String> getHostName() {
        return this.hostName == null ? Input.empty() : this.hostName;
    }

    /**
     * Resource ID.
     * 
     */
    @InputImport(name="id")
      private final @Nullable Input<String> id;

    public Input<String> getId() {
        return this.id == null ? Input.empty() : this.id;
    }

    /**
     * Resource name.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
     * 
     */
    @InputImport(name="sessionAffinityEnabledState")
      private final @Nullable Input<Either<String,SessionAffinityEnabledState>> sessionAffinityEnabledState;

    public Input<Either<String,SessionAffinityEnabledState>> getSessionAffinityEnabledState() {
        return this.sessionAffinityEnabledState == null ? Input.empty() : this.sessionAffinityEnabledState;
    }

    /**
     * UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
     * 
     */
    @InputImport(name="sessionAffinityTtlSeconds")
      private final @Nullable Input<Integer> sessionAffinityTtlSeconds;

    public Input<Integer> getSessionAffinityTtlSeconds() {
        return this.sessionAffinityTtlSeconds == null ? Input.empty() : this.sessionAffinityTtlSeconds;
    }

    /**
     * Defines the Web Application Firewall policy for each host (if applicable)
     * 
     */
    @InputImport(name="webApplicationFirewallPolicyLink")
      private final @Nullable Input<FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs> webApplicationFirewallPolicyLink;

    public Input<FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs> getWebApplicationFirewallPolicyLink() {
        return this.webApplicationFirewallPolicyLink == null ? Input.empty() : this.webApplicationFirewallPolicyLink;
    }

    public FrontendEndpointArgs(
        @Nullable Input<String> hostName,
        @Nullable Input<String> id,
        @Nullable Input<String> name,
        @Nullable Input<Either<String,SessionAffinityEnabledState>> sessionAffinityEnabledState,
        @Nullable Input<Integer> sessionAffinityTtlSeconds,
        @Nullable Input<FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs> webApplicationFirewallPolicyLink) {
        this.hostName = hostName;
        this.id = id;
        this.name = name;
        this.sessionAffinityEnabledState = sessionAffinityEnabledState;
        this.sessionAffinityTtlSeconds = sessionAffinityTtlSeconds;
        this.webApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
    }

    private FrontendEndpointArgs() {
        this.hostName = Input.empty();
        this.id = Input.empty();
        this.name = Input.empty();
        this.sessionAffinityEnabledState = Input.empty();
        this.sessionAffinityTtlSeconds = Input.empty();
        this.webApplicationFirewallPolicyLink = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontendEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> hostName;
        private @Nullable Input<String> id;
        private @Nullable Input<String> name;
        private @Nullable Input<Either<String,SessionAffinityEnabledState>> sessionAffinityEnabledState;
        private @Nullable Input<Integer> sessionAffinityTtlSeconds;
        private @Nullable Input<FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs> webApplicationFirewallPolicyLink;

        public Builder() {
    	      // Empty
        }

        public Builder(FrontendEndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.sessionAffinityEnabledState = defaults.sessionAffinityEnabledState;
    	      this.sessionAffinityTtlSeconds = defaults.sessionAffinityTtlSeconds;
    	      this.webApplicationFirewallPolicyLink = defaults.webApplicationFirewallPolicyLink;
        }

        public Builder setHostName(@Nullable Input<String> hostName) {
            this.hostName = hostName;
            return this;
        }

        public Builder setHostName(@Nullable String hostName) {
            this.hostName = Input.ofNullable(hostName);
            return this;
        }

        public Builder setId(@Nullable Input<String> id) {
            this.id = id;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = Input.ofNullable(id);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setSessionAffinityEnabledState(@Nullable Input<Either<String,SessionAffinityEnabledState>> sessionAffinityEnabledState) {
            this.sessionAffinityEnabledState = sessionAffinityEnabledState;
            return this;
        }

        public Builder setSessionAffinityEnabledState(@Nullable Either<String,SessionAffinityEnabledState> sessionAffinityEnabledState) {
            this.sessionAffinityEnabledState = Input.ofNullable(sessionAffinityEnabledState);
            return this;
        }

        public Builder setSessionAffinityTtlSeconds(@Nullable Input<Integer> sessionAffinityTtlSeconds) {
            this.sessionAffinityTtlSeconds = sessionAffinityTtlSeconds;
            return this;
        }

        public Builder setSessionAffinityTtlSeconds(@Nullable Integer sessionAffinityTtlSeconds) {
            this.sessionAffinityTtlSeconds = Input.ofNullable(sessionAffinityTtlSeconds);
            return this;
        }

        public Builder setWebApplicationFirewallPolicyLink(@Nullable Input<FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs> webApplicationFirewallPolicyLink) {
            this.webApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
            return this;
        }

        public Builder setWebApplicationFirewallPolicyLink(@Nullable FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs webApplicationFirewallPolicyLink) {
            this.webApplicationFirewallPolicyLink = Input.ofNullable(webApplicationFirewallPolicyLink);
            return this;
        }
        public FrontendEndpointArgs build() {
            return new FrontendEndpointArgs(hostName, id, name, sessionAffinityEnabledState, sessionAffinityTtlSeconds, webApplicationFirewallPolicyLink);
        }
    }
}
