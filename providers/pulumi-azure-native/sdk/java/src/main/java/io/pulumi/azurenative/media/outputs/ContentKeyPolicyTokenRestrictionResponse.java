// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.outputs;

import io.pulumi.azurenative.media.outputs.ContentKeyPolicyRsaTokenKeyResponse;
import io.pulumi.azurenative.media.outputs.ContentKeyPolicySymmetricTokenKeyResponse;
import io.pulumi.azurenative.media.outputs.ContentKeyPolicyTokenClaimResponse;
import io.pulumi.azurenative.media.outputs.ContentKeyPolicyX509CertificateTokenKeyResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ContentKeyPolicyTokenRestrictionResponse {
    private final @Nullable List<Object> alternateVerificationKeys;
    private final String audience;
    private final String issuer;
    private final String odataType;
    private final @Nullable String openIdConnectDiscoveryDocument;
    private final Object primaryVerificationKey;
    private final @Nullable List<ContentKeyPolicyTokenClaimResponse> requiredClaims;
    private final String restrictionTokenType;

    @OutputCustomType.Constructor({"alternateVerificationKeys","audience","issuer","odataType","openIdConnectDiscoveryDocument","primaryVerificationKey","requiredClaims","restrictionTokenType"})
    private ContentKeyPolicyTokenRestrictionResponse(
        @Nullable List<Object> alternateVerificationKeys,
        String audience,
        String issuer,
        String odataType,
        @Nullable String openIdConnectDiscoveryDocument,
        Object primaryVerificationKey,
        @Nullable List<ContentKeyPolicyTokenClaimResponse> requiredClaims,
        String restrictionTokenType) {
        this.alternateVerificationKeys = alternateVerificationKeys;
        this.audience = Objects.requireNonNull(audience);
        this.issuer = Objects.requireNonNull(issuer);
        this.odataType = Objects.requireNonNull(odataType);
        this.openIdConnectDiscoveryDocument = openIdConnectDiscoveryDocument;
        this.primaryVerificationKey = Objects.requireNonNull(primaryVerificationKey);
        this.requiredClaims = requiredClaims;
        this.restrictionTokenType = Objects.requireNonNull(restrictionTokenType);
    }

    public List<Object> getAlternateVerificationKeys() {
        return this.alternateVerificationKeys == null ? List.of() : this.alternateVerificationKeys;
    }
    public String getAudience() {
        return this.audience;
    }
    public String getIssuer() {
        return this.issuer;
    }
    public String getOdataType() {
        return this.odataType;
    }
    public Optional<String> getOpenIdConnectDiscoveryDocument() {
        return Optional.ofNullable(this.openIdConnectDiscoveryDocument);
    }
    public Object getPrimaryVerificationKey() {
        return this.primaryVerificationKey;
    }
    public List<ContentKeyPolicyTokenClaimResponse> getRequiredClaims() {
        return this.requiredClaims == null ? List.of() : this.requiredClaims;
    }
    public String getRestrictionTokenType() {
        return this.restrictionTokenType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContentKeyPolicyTokenRestrictionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<Object> alternateVerificationKeys;
        private String audience;
        private String issuer;
        private String odataType;
        private @Nullable String openIdConnectDiscoveryDocument;
        private Object primaryVerificationKey;
        private @Nullable List<ContentKeyPolicyTokenClaimResponse> requiredClaims;
        private String restrictionTokenType;

        public Builder() {
    	      // Empty
        }

        public Builder(ContentKeyPolicyTokenRestrictionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternateVerificationKeys = defaults.alternateVerificationKeys;
    	      this.audience = defaults.audience;
    	      this.issuer = defaults.issuer;
    	      this.odataType = defaults.odataType;
    	      this.openIdConnectDiscoveryDocument = defaults.openIdConnectDiscoveryDocument;
    	      this.primaryVerificationKey = defaults.primaryVerificationKey;
    	      this.requiredClaims = defaults.requiredClaims;
    	      this.restrictionTokenType = defaults.restrictionTokenType;
        }

        public Builder setAlternateVerificationKeys(@Nullable List<Object> alternateVerificationKeys) {
            this.alternateVerificationKeys = alternateVerificationKeys;
            return this;
        }

        public Builder setAudience(String audience) {
            this.audience = Objects.requireNonNull(audience);
            return this;
        }

        public Builder setIssuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }

        public Builder setOdataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder setOpenIdConnectDiscoveryDocument(@Nullable String openIdConnectDiscoveryDocument) {
            this.openIdConnectDiscoveryDocument = openIdConnectDiscoveryDocument;
            return this;
        }

        public Builder setPrimaryVerificationKey(Object primaryVerificationKey) {
            this.primaryVerificationKey = Objects.requireNonNull(primaryVerificationKey);
            return this;
        }

        public Builder setRequiredClaims(@Nullable List<ContentKeyPolicyTokenClaimResponse> requiredClaims) {
            this.requiredClaims = requiredClaims;
            return this;
        }

        public Builder setRestrictionTokenType(String restrictionTokenType) {
            this.restrictionTokenType = Objects.requireNonNull(restrictionTokenType);
            return this;
        }

        public ContentKeyPolicyTokenRestrictionResponse build() {
            return new ContentKeyPolicyTokenRestrictionResponse(alternateVerificationKeys, audience, issuer, odataType, openIdConnectDiscoveryDocument, primaryVerificationKey, requiredClaims, restrictionTokenType);
        }
    }
}
