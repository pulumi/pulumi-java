// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.sql.DisasterRecoveryConfigurationArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Represents a disaster recovery configuration.
 * API Version: 2014-04-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:sql:DisasterRecoveryConfiguration Default /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/databases/testdw/geoBackupPolicies/Default 
 * ```
 * 
 */
@ResourceType(type="azure-native:sql:DisasterRecoveryConfiguration")
public class DisasterRecoveryConfiguration extends io.pulumi.resources.CustomResource {
    /**
     * Whether or not failover can be done automatically.
     * 
     */
    @OutputExport(name="autoFailover", type=String.class, parameters={})
    private Output<String> autoFailover;

    /**
     * @return Whether or not failover can be done automatically.
     * 
     */
    public Output<String> getAutoFailover() {
        return this.autoFailover;
    }
    /**
     * How aggressive the automatic failover should be.
     * 
     */
    @OutputExport(name="failoverPolicy", type=String.class, parameters={})
    private Output<String> failoverPolicy;

    /**
     * @return How aggressive the automatic failover should be.
     * 
     */
    public Output<String> getFailoverPolicy() {
        return this.failoverPolicy;
    }
    /**
     * Location of the server that contains this disaster recovery configuration.
     * 
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Location of the server that contains this disaster recovery configuration.
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * Logical name of the server.
     * 
     */
    @OutputExport(name="logicalServerName", type=String.class, parameters={})
    private Output<String> logicalServerName;

    /**
     * @return Logical name of the server.
     * 
     */
    public Output<String> getLogicalServerName() {
        return this.logicalServerName;
    }
    /**
     * Resource name.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Logical name of the partner server.
     * 
     */
    @OutputExport(name="partnerLogicalServerName", type=String.class, parameters={})
    private Output<String> partnerLogicalServerName;

    /**
     * @return Logical name of the partner server.
     * 
     */
    public Output<String> getPartnerLogicalServerName() {
        return this.partnerLogicalServerName;
    }
    /**
     * Id of the partner server.
     * 
     */
    @OutputExport(name="partnerServerId", type=String.class, parameters={})
    private Output<String> partnerServerId;

    /**
     * @return Id of the partner server.
     * 
     */
    public Output<String> getPartnerServerId() {
        return this.partnerServerId;
    }
    /**
     * The role of the current server in the disaster recovery configuration.
     * 
     */
    @OutputExport(name="role", type=String.class, parameters={})
    private Output<String> role;

    /**
     * @return The role of the current server in the disaster recovery configuration.
     * 
     */
    public Output<String> getRole() {
        return this.role;
    }
    /**
     * The status of the disaster recovery configuration.
     * 
     */
    @OutputExport(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The status of the disaster recovery configuration.
     * 
     */
    public Output<String> getStatus() {
        return this.status;
    }
    /**
     * Resource type.
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DisasterRecoveryConfiguration(String name, DisasterRecoveryConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:DisasterRecoveryConfiguration", name, args == null ? DisasterRecoveryConfigurationArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private DisasterRecoveryConfiguration(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:DisasterRecoveryConfiguration", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:sql/v20140401:DisasterRecoveryConfiguration").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DisasterRecoveryConfiguration get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DisasterRecoveryConfiguration(name, id, options);
    }
}
