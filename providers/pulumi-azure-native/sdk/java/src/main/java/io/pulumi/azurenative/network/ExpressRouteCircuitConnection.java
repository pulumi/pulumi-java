// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.network.outputs.Ipv6CircuitConnectionConfigResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
API Version: 2020-11-01.

{{% examples %}}
## Example Usage
{{% example %}}
### ExpressRouteCircuitConnectionCreate
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var expressRouteCircuitConnection = new AzureNative.Network.ExpressRouteCircuitConnection("expressRouteCircuitConnection", new AzureNative.Network.ExpressRouteCircuitConnectionArgs
        {
            AddressPrefix = "10.0.0.0/29",
            AuthorizationKey = "946a1918-b7a2-4917-b43c-8c4cdaee006a",
            CircuitName = "ExpressRouteARMCircuitA",
            ConnectionName = "circuitConnectionUSAUS",
            ExpressRouteCircuitPeering = new AzureNative.Network.Inputs.SubResourceArgs
            {
                Id = "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering",
            },
            Ipv6CircuitConnectionConfig = new AzureNative.Network.Inputs.Ipv6CircuitConnectionConfigArgs
            {
                AddressPrefix = "aa:bb::/125",
            },
            PeerExpressRouteCircuitPeering = new AzureNative.Network.Inputs.SubResourceArgs
            {
                Id = "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering",
            },
            PeeringName = "AzurePrivatePeering",
            ResourceGroupName = "rg1",
        });
    }

}

```

```go
package main

import (
	network "github.com/pulumi/pulumi-azure-native/sdk/go/azure/network"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := network.NewExpressRouteCircuitConnection(ctx, "expressRouteCircuitConnection", &network.ExpressRouteCircuitConnectionArgs{
			AddressPrefix:    pulumi.String("10.0.0.0/29"),
			AuthorizationKey: pulumi.String("946a1918-b7a2-4917-b43c-8c4cdaee006a"),
			CircuitName:      pulumi.String("ExpressRouteARMCircuitA"),
			ConnectionName:   pulumi.String("circuitConnectionUSAUS"),
			ExpressRouteCircuitPeering: &network.SubResourceArgs{
				Id: pulumi.String("/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering"),
			},
			Ipv6CircuitConnectionConfig: &network.Ipv6CircuitConnectionConfigArgs{
				AddressPrefix: pulumi.String("aa:bb::/125"),
			},
			PeerExpressRouteCircuitPeering: &network.SubResourceArgs{
				Id: pulumi.String("/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering"),
			},
			PeeringName:       pulumi.String("AzurePrivatePeering"),
			ResourceGroupName: pulumi.String("rg1"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const expressRouteCircuitConnection = new azure_native.network.ExpressRouteCircuitConnection("expressRouteCircuitConnection", {
    addressPrefix: "10.0.0.0/29",
    authorizationKey: "946a1918-b7a2-4917-b43c-8c4cdaee006a",
    circuitName: "ExpressRouteARMCircuitA",
    connectionName: "circuitConnectionUSAUS",
    expressRouteCircuitPeering: {
        id: "/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering",
    },
    ipv6CircuitConnectionConfig: {
        addressPrefix: "aa:bb::/125",
    },
    peerExpressRouteCircuitPeering: {
        id: "/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering",
    },
    peeringName: "AzurePrivatePeering",
    resourceGroupName: "rg1",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

express_route_circuit_connection = azure_native.network.ExpressRouteCircuitConnection("expressRouteCircuitConnection",
    address_prefix="10.0.0.0/29",
    authorization_key="946a1918-b7a2-4917-b43c-8c4cdaee006a",
    circuit_name="ExpressRouteARMCircuitA",
    connection_name="circuitConnectionUSAUS",
    express_route_circuit_peering=azure_native.network.SubResourceArgs(
        id="/subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/dedharcktlocal/peerings/AzurePrivatePeering",
    ),
    ipv6_circuit_connection_config=azure_native.network.Ipv6CircuitConnectionConfigArgs(
        address_prefix="aa:bb::/125",
    ),
    peer_express_route_circuit_peering=azure_native.network.SubResourceArgs(
        id="/subscriptions/subid2/resourceGroups/dedharcktpeer/providers/Microsoft.Network/expressRouteCircuits/dedharcktremote/peerings/AzurePrivatePeering",
    ),
    peering_name="AzurePrivatePeering",
    resource_group_name="rg1")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:network:ExpressRouteCircuitConnection circuitConnectionUSAUS /subscriptions/subid1/resourceGroups/dedharcktinit/providers/Microsoft.Network/expressRouteCircuits/ExpressRouteARMCircuitA/peerings/AzurePrivatePeering/connections/circuitConnectionUSAUS 
```

 */
@ResourceType(type="azure-native:network:ExpressRouteCircuitConnection")
public class ExpressRouteCircuitConnection extends io.pulumi.resources.CustomResource {
    /**
     * /29 IP address space to carve out Customer addresses for tunnels.
     */
    @OutputExport(name="addressPrefix", type=String.class, parameters={})
    private Output</* @Nullable */ String> addressPrefix;

    /**
     * @return /29 IP address space to carve out Customer addresses for tunnels.
     */
    public Output</* @Nullable */ String> getAddressPrefix() {
        return this.addressPrefix;
    }
    /**
     * The authorization key.
     */
    @OutputExport(name="authorizationKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> authorizationKey;

    /**
     * @return The authorization key.
     */
    public Output</* @Nullable */ String> getAuthorizationKey() {
        return this.authorizationKey;
    }
    /**
     * Express Route Circuit connection state.
     */
    @OutputExport(name="circuitConnectionStatus", type=String.class, parameters={})
    private Output<String> circuitConnectionStatus;

    /**
     * @return Express Route Circuit connection state.
     */
    public Output<String> getCircuitConnectionStatus() {
        return this.circuitConnectionStatus;
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     */
    public Output<String> getEtag() {
        return this.etag;
    }
    /**
     * Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
     */
    @OutputExport(name="expressRouteCircuitPeering", type=SubResourceResponse.class, parameters={})
    private Output</* @Nullable */ SubResourceResponse> expressRouteCircuitPeering;

    /**
     * @return Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
     */
    public Output</* @Nullable */ SubResourceResponse> getExpressRouteCircuitPeering() {
        return this.expressRouteCircuitPeering;
    }
    /**
     * IPv6 Address PrefixProperties of the express route circuit connection.
     */
    @OutputExport(name="ipv6CircuitConnectionConfig", type=Ipv6CircuitConnectionConfigResponse.class, parameters={})
    private Output</* @Nullable */ Ipv6CircuitConnectionConfigResponse> ipv6CircuitConnectionConfig;

    /**
     * @return IPv6 Address PrefixProperties of the express route circuit connection.
     */
    public Output</* @Nullable */ Ipv6CircuitConnectionConfigResponse> getIpv6CircuitConnectionConfig() {
        return this.ipv6CircuitConnectionConfig;
    }
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     */
    public Output</* @Nullable */ String> getName() {
        return this.name;
    }
    /**
     * Reference to Express Route Circuit Private Peering Resource of the peered circuit.
     */
    @OutputExport(name="peerExpressRouteCircuitPeering", type=SubResourceResponse.class, parameters={})
    private Output</* @Nullable */ SubResourceResponse> peerExpressRouteCircuitPeering;

    /**
     * @return Reference to Express Route Circuit Private Peering Resource of the peered circuit.
     */
    public Output</* @Nullable */ SubResourceResponse> getPeerExpressRouteCircuitPeering() {
        return this.peerExpressRouteCircuitPeering;
    }
    /**
     * The provisioning state of the express route circuit connection resource.
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the express route circuit connection resource.
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Type of the resource.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of the resource.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExpressRouteCircuitConnection(String name, ExpressRouteCircuitConnectionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:ExpressRouteCircuitConnection", name, args == null ? ExpressRouteCircuitConnectionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ExpressRouteCircuitConnection(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:ExpressRouteCircuitConnection", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:network/v20180201:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180401:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180601:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180701:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180801:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181001:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181101:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181201:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190201:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190401:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190601:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190701:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190801:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190901:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191101:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191201:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200301:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200401:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200501:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200601:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200701:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200801:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20201101:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210201:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210301:ExpressRouteCircuitConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210501:ExpressRouteCircuitConnection").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExpressRouteCircuitConnection get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ExpressRouteCircuitConnection(name, id, options);
    }
}
