// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.appplatform;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.appplatform.CertificateArgs;
import io.pulumi.azurenative.appplatform.outputs.CertificatePropertiesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Certificate resource payload.
API Version: 2020-07-01.

{{% examples %}}
## Example Usage
{{% example %}}
### Certificates_CreateOrUpdate
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var certificate = new AzureNative.AppPlatform.Certificate("certificate", new AzureNative.AppPlatform.CertificateArgs
        {
            CertificateName = "mycertificate",
            Properties = new AzureNative.AppPlatform.Inputs.CertificatePropertiesArgs
            {
                CertVersion = "08a219d06d874795a96db47e06fbb01e",
                KeyVaultCertName = "mycert",
                VaultUri = "https://myvault.vault.azure.net",
            },
            ResourceGroupName = "myResourceGroup",
            ServiceName = "myservice",
        });
    }

}

```

```go
package main

import (
	appplatform "github.com/pulumi/pulumi-azure-native/sdk/go/azure/appplatform"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := appplatform.NewCertificate(ctx, "certificate", &appplatform.CertificateArgs{
			CertificateName: pulumi.String("mycertificate"),
			Properties: &appplatform.CertificatePropertiesArgs{
				CertVersion:      pulumi.String("08a219d06d874795a96db47e06fbb01e"),
				KeyVaultCertName: pulumi.String("mycert"),
				VaultUri:         pulumi.String("https://myvault.vault.azure.net"),
			},
			ResourceGroupName: pulumi.String("myResourceGroup"),
			ServiceName:       pulumi.String("myservice"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const certificate = new azure_native.appplatform.Certificate("certificate", {
    certificateName: "mycertificate",
    properties: {
        certVersion: "08a219d06d874795a96db47e06fbb01e",
        keyVaultCertName: "mycert",
        vaultUri: "https://myvault.vault.azure.net",
    },
    resourceGroupName: "myResourceGroup",
    serviceName: "myservice",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

certificate = azure_native.appplatform.Certificate("certificate",
    certificate_name="mycertificate",
    properties=azure_native.appplatform.CertificatePropertiesArgs(
        cert_version="08a219d06d874795a96db47e06fbb01e",
        key_vault_cert_name="mycert",
        vault_uri="https://myvault.vault.azure.net",
    ),
    resource_group_name="myResourceGroup",
    service_name="myservice")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:appplatform:Certificate mycertificate /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/certificates/mycertificate 
```

 */
@ResourceType(type="azure-native:appplatform:Certificate")
public class Certificate extends io.pulumi.resources.CustomResource {
    /**
     * The name of the resource.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Properties of the certificate resource payload.
     */
    @OutputExport(name="properties", type=CertificatePropertiesResponse.class, parameters={})
    private Output<CertificatePropertiesResponse> properties;

    /**
     * @return Properties of the certificate resource payload.
     */
    public Output<CertificatePropertiesResponse> getProperties() {
        return this.properties;
    }
    /**
     * The type of the resource.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Certificate(String name, CertificateArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:appplatform:Certificate", name, args == null ? CertificateArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Certificate(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:appplatform:Certificate", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:appplatform/v20190501preview:Certificate").build()),
                Input.of(Alias.builder().setType("azure-native:appplatform/v20200701:Certificate").build()),
                Input.of(Alias.builder().setType("azure-native:appplatform/v20201101preview:Certificate").build()),
                Input.of(Alias.builder().setType("azure-native:appplatform/v20210601preview:Certificate").build()),
                Input.of(Alias.builder().setType("azure-native:appplatform/v20210901preview:Certificate").build()),
                Input.of(Alias.builder().setType("azure-native:appplatform/v20220101preview:Certificate").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Certificate get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Certificate(name, id, options);
    }
}
