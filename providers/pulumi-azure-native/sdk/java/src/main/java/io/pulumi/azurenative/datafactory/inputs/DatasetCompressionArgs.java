// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatasetCompressionArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetCompressionArgs Empty = new DatasetCompressionArgs();

    @InputImport(name="level")
    private final @Nullable Input<Object> level;

    public Input<Object> getLevel() {
        return this.level == null ? Input.empty() : this.level;
    }

    @InputImport(name="type", required=true)
    private final Input<Object> type;

    public Input<Object> getType() {
        return this.type;
    }

    public DatasetCompressionArgs(
        @Nullable Input<Object> level,
        Input<Object> type) {
        this.level = level;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private DatasetCompressionArgs() {
        this.level = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetCompressionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Object> level;
        private Input<Object> type;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetCompressionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.level = defaults.level;
    	      this.type = defaults.type;
        }

        public Builder setLevel(@Nullable Input<Object> level) {
            this.level = level;
            return this;
        }

        public Builder setLevel(@Nullable Object level) {
            this.level = Input.ofNullable(level);
            return this;
        }

        public Builder setType(Input<Object> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(Object type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public DatasetCompressionArgs build() {
            return new DatasetCompressionArgs(level, type);
        }
    }
}
