// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The compression method used on a dataset.
 * 
 */
public final class DatasetCompressionArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetCompressionArgs Empty = new DatasetCompressionArgs();

    /**
     * The dataset compression level. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="level")
      private final @Nullable Output<Object> level;

    public Output<Object> getLevel() {
        return this.level == null ? Output.empty() : this.level;
    }

    /**
     * Type of dataset compression. Type: string (or Expression with resultType string).
     * 
     */
    @Import(name="type", required=true)
      private final Output<Object> type;

    public Output<Object> getType() {
        return this.type;
    }

    public DatasetCompressionArgs(
        @Nullable Output<Object> level,
        Output<Object> type) {
        this.level = level;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private DatasetCompressionArgs() {
        this.level = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetCompressionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> level;
        private Output<Object> type;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetCompressionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.level = defaults.level;
    	      this.type = defaults.type;
        }

        public Builder level(@Nullable Output<Object> level) {
            this.level = level;
            return this;
        }

        public Builder level(@Nullable Object level) {
            this.level = Output.ofNullable(level);
            return this;
        }

        public Builder type(Output<Object> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder type(Object type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }
        public DatasetCompressionArgs build() {
            return new DatasetCompressionArgs(level, type);
        }
    }
}
