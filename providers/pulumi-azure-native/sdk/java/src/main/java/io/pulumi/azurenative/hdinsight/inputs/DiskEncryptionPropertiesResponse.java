// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hdinsight.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The disk encryption properties
 * 
 */
public final class DiskEncryptionPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final DiskEncryptionPropertiesResponse Empty = new DiskEncryptionPropertiesResponse();

    /**
     * Algorithm identifier for encryption, default RSA-OAEP.
     * 
     */
    @Import(name="encryptionAlgorithm")
      private final @Nullable String encryptionAlgorithm;

    public Optional<String> encryptionAlgorithm() {
        return this.encryptionAlgorithm == null ? Optional.empty() : Optional.ofNullable(this.encryptionAlgorithm);
    }

    /**
     * Indicates whether or not resource disk encryption is enabled.
     * 
     */
    @Import(name="encryptionAtHost")
      private final @Nullable Boolean encryptionAtHost;

    public Optional<Boolean> encryptionAtHost() {
        return this.encryptionAtHost == null ? Optional.empty() : Optional.ofNullable(this.encryptionAtHost);
    }

    /**
     * Key name that is used for enabling disk encryption.
     * 
     */
    @Import(name="keyName")
      private final @Nullable String keyName;

    public Optional<String> keyName() {
        return this.keyName == null ? Optional.empty() : Optional.ofNullable(this.keyName);
    }

    /**
     * Specific key version that is used for enabling disk encryption.
     * 
     */
    @Import(name="keyVersion")
      private final @Nullable String keyVersion;

    public Optional<String> keyVersion() {
        return this.keyVersion == null ? Optional.empty() : Optional.ofNullable(this.keyVersion);
    }

    /**
     * Resource ID of Managed Identity that is used to access the key vault.
     * 
     */
    @Import(name="msiResourceId")
      private final @Nullable String msiResourceId;

    public Optional<String> msiResourceId() {
        return this.msiResourceId == null ? Optional.empty() : Optional.ofNullable(this.msiResourceId);
    }

    /**
     * Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
     * 
     */
    @Import(name="vaultUri")
      private final @Nullable String vaultUri;

    public Optional<String> vaultUri() {
        return this.vaultUri == null ? Optional.empty() : Optional.ofNullable(this.vaultUri);
    }

    public DiskEncryptionPropertiesResponse(
        @Nullable String encryptionAlgorithm,
        @Nullable Boolean encryptionAtHost,
        @Nullable String keyName,
        @Nullable String keyVersion,
        @Nullable String msiResourceId,
        @Nullable String vaultUri) {
        this.encryptionAlgorithm = encryptionAlgorithm;
        this.encryptionAtHost = encryptionAtHost == null ? false : encryptionAtHost;
        this.keyName = keyName;
        this.keyVersion = keyVersion;
        this.msiResourceId = msiResourceId;
        this.vaultUri = vaultUri;
    }

    private DiskEncryptionPropertiesResponse() {
        this.encryptionAlgorithm = null;
        this.encryptionAtHost = null;
        this.keyName = null;
        this.keyVersion = null;
        this.msiResourceId = null;
        this.vaultUri = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskEncryptionPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String encryptionAlgorithm;
        private @Nullable Boolean encryptionAtHost;
        private @Nullable String keyName;
        private @Nullable String keyVersion;
        private @Nullable String msiResourceId;
        private @Nullable String vaultUri;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskEncryptionPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionAlgorithm = defaults.encryptionAlgorithm;
    	      this.encryptionAtHost = defaults.encryptionAtHost;
    	      this.keyName = defaults.keyName;
    	      this.keyVersion = defaults.keyVersion;
    	      this.msiResourceId = defaults.msiResourceId;
    	      this.vaultUri = defaults.vaultUri;
        }

        public Builder encryptionAlgorithm(@Nullable String encryptionAlgorithm) {
            this.encryptionAlgorithm = encryptionAlgorithm;
            return this;
        }
        public Builder encryptionAtHost(@Nullable Boolean encryptionAtHost) {
            this.encryptionAtHost = encryptionAtHost;
            return this;
        }
        public Builder keyName(@Nullable String keyName) {
            this.keyName = keyName;
            return this;
        }
        public Builder keyVersion(@Nullable String keyVersion) {
            this.keyVersion = keyVersion;
            return this;
        }
        public Builder msiResourceId(@Nullable String msiResourceId) {
            this.msiResourceId = msiResourceId;
            return this;
        }
        public Builder vaultUri(@Nullable String vaultUri) {
            this.vaultUri = vaultUri;
            return this;
        }        public DiskEncryptionPropertiesResponse build() {
            return new DiskEncryptionPropertiesResponse(encryptionAlgorithm, encryptionAtHost, keyName, keyVersion, msiResourceId, vaultUri);
        }
    }
}
