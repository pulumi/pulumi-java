// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.eventgrid;

import io.pulumi.azurenative.eventgrid.enums.PartnerRegistrationVisibilityState;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PartnerRegistrationArgs extends io.pulumi.resources.ResourceArgs {

    public static final PartnerRegistrationArgs Empty = new PartnerRegistrationArgs();

    @InputImport(name="authorizedAzureSubscriptionIds")
    private final @Nullable Input<List<String>> authorizedAzureSubscriptionIds;

    public Input<List<String>> getAuthorizedAzureSubscriptionIds() {
        return this.authorizedAzureSubscriptionIds == null ? Input.empty() : this.authorizedAzureSubscriptionIds;
    }

    @InputImport(name="customerServiceUri")
    private final @Nullable Input<String> customerServiceUri;

    public Input<String> getCustomerServiceUri() {
        return this.customerServiceUri == null ? Input.empty() : this.customerServiceUri;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="logoUri")
    private final @Nullable Input<String> logoUri;

    public Input<String> getLogoUri() {
        return this.logoUri == null ? Input.empty() : this.logoUri;
    }

    @InputImport(name="longDescription")
    private final @Nullable Input<String> longDescription;

    public Input<String> getLongDescription() {
        return this.longDescription == null ? Input.empty() : this.longDescription;
    }

    @InputImport(name="partnerCustomerServiceExtension")
    private final @Nullable Input<String> partnerCustomerServiceExtension;

    public Input<String> getPartnerCustomerServiceExtension() {
        return this.partnerCustomerServiceExtension == null ? Input.empty() : this.partnerCustomerServiceExtension;
    }

    @InputImport(name="partnerCustomerServiceNumber")
    private final @Nullable Input<String> partnerCustomerServiceNumber;

    public Input<String> getPartnerCustomerServiceNumber() {
        return this.partnerCustomerServiceNumber == null ? Input.empty() : this.partnerCustomerServiceNumber;
    }

    @InputImport(name="partnerName")
    private final @Nullable Input<String> partnerName;

    public Input<String> getPartnerName() {
        return this.partnerName == null ? Input.empty() : this.partnerName;
    }

    @InputImport(name="partnerRegistrationName")
    private final @Nullable Input<String> partnerRegistrationName;

    public Input<String> getPartnerRegistrationName() {
        return this.partnerRegistrationName == null ? Input.empty() : this.partnerRegistrationName;
    }

    @InputImport(name="partnerResourceTypeDescription")
    private final @Nullable Input<String> partnerResourceTypeDescription;

    public Input<String> getPartnerResourceTypeDescription() {
        return this.partnerResourceTypeDescription == null ? Input.empty() : this.partnerResourceTypeDescription;
    }

    @InputImport(name="partnerResourceTypeDisplayName")
    private final @Nullable Input<String> partnerResourceTypeDisplayName;

    public Input<String> getPartnerResourceTypeDisplayName() {
        return this.partnerResourceTypeDisplayName == null ? Input.empty() : this.partnerResourceTypeDisplayName;
    }

    @InputImport(name="partnerResourceTypeName")
    private final @Nullable Input<String> partnerResourceTypeName;

    public Input<String> getPartnerResourceTypeName() {
        return this.partnerResourceTypeName == null ? Input.empty() : this.partnerResourceTypeName;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="setupUri")
    private final @Nullable Input<String> setupUri;

    public Input<String> getSetupUri() {
        return this.setupUri == null ? Input.empty() : this.setupUri;
    }

    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="visibilityState")
    private final @Nullable Input<Either<String,PartnerRegistrationVisibilityState>> visibilityState;

    public Input<Either<String,PartnerRegistrationVisibilityState>> getVisibilityState() {
        return this.visibilityState == null ? Input.empty() : this.visibilityState;
    }

    public PartnerRegistrationArgs(
        @Nullable Input<List<String>> authorizedAzureSubscriptionIds,
        @Nullable Input<String> customerServiceUri,
        @Nullable Input<String> location,
        @Nullable Input<String> logoUri,
        @Nullable Input<String> longDescription,
        @Nullable Input<String> partnerCustomerServiceExtension,
        @Nullable Input<String> partnerCustomerServiceNumber,
        @Nullable Input<String> partnerName,
        @Nullable Input<String> partnerRegistrationName,
        @Nullable Input<String> partnerResourceTypeDescription,
        @Nullable Input<String> partnerResourceTypeDisplayName,
        @Nullable Input<String> partnerResourceTypeName,
        Input<String> resourceGroupName,
        @Nullable Input<String> setupUri,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Either<String,PartnerRegistrationVisibilityState>> visibilityState) {
        this.authorizedAzureSubscriptionIds = authorizedAzureSubscriptionIds;
        this.customerServiceUri = customerServiceUri;
        this.location = location;
        this.logoUri = logoUri;
        this.longDescription = longDescription;
        this.partnerCustomerServiceExtension = partnerCustomerServiceExtension;
        this.partnerCustomerServiceNumber = partnerCustomerServiceNumber;
        this.partnerName = partnerName;
        this.partnerRegistrationName = partnerRegistrationName;
        this.partnerResourceTypeDescription = partnerResourceTypeDescription;
        this.partnerResourceTypeDisplayName = partnerResourceTypeDisplayName;
        this.partnerResourceTypeName = partnerResourceTypeName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.setupUri = setupUri;
        this.tags = tags;
        this.visibilityState = visibilityState;
    }

    private PartnerRegistrationArgs() {
        this.authorizedAzureSubscriptionIds = Input.empty();
        this.customerServiceUri = Input.empty();
        this.location = Input.empty();
        this.logoUri = Input.empty();
        this.longDescription = Input.empty();
        this.partnerCustomerServiceExtension = Input.empty();
        this.partnerCustomerServiceNumber = Input.empty();
        this.partnerName = Input.empty();
        this.partnerRegistrationName = Input.empty();
        this.partnerResourceTypeDescription = Input.empty();
        this.partnerResourceTypeDisplayName = Input.empty();
        this.partnerResourceTypeName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.setupUri = Input.empty();
        this.tags = Input.empty();
        this.visibilityState = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PartnerRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> authorizedAzureSubscriptionIds;
        private @Nullable Input<String> customerServiceUri;
        private @Nullable Input<String> location;
        private @Nullable Input<String> logoUri;
        private @Nullable Input<String> longDescription;
        private @Nullable Input<String> partnerCustomerServiceExtension;
        private @Nullable Input<String> partnerCustomerServiceNumber;
        private @Nullable Input<String> partnerName;
        private @Nullable Input<String> partnerRegistrationName;
        private @Nullable Input<String> partnerResourceTypeDescription;
        private @Nullable Input<String> partnerResourceTypeDisplayName;
        private @Nullable Input<String> partnerResourceTypeName;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> setupUri;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Either<String,PartnerRegistrationVisibilityState>> visibilityState;

        public Builder() {
    	      // Empty
        }

        public Builder(PartnerRegistrationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizedAzureSubscriptionIds = defaults.authorizedAzureSubscriptionIds;
    	      this.customerServiceUri = defaults.customerServiceUri;
    	      this.location = defaults.location;
    	      this.logoUri = defaults.logoUri;
    	      this.longDescription = defaults.longDescription;
    	      this.partnerCustomerServiceExtension = defaults.partnerCustomerServiceExtension;
    	      this.partnerCustomerServiceNumber = defaults.partnerCustomerServiceNumber;
    	      this.partnerName = defaults.partnerName;
    	      this.partnerRegistrationName = defaults.partnerRegistrationName;
    	      this.partnerResourceTypeDescription = defaults.partnerResourceTypeDescription;
    	      this.partnerResourceTypeDisplayName = defaults.partnerResourceTypeDisplayName;
    	      this.partnerResourceTypeName = defaults.partnerResourceTypeName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.setupUri = defaults.setupUri;
    	      this.tags = defaults.tags;
    	      this.visibilityState = defaults.visibilityState;
        }

        public Builder setAuthorizedAzureSubscriptionIds(@Nullable Input<List<String>> authorizedAzureSubscriptionIds) {
            this.authorizedAzureSubscriptionIds = authorizedAzureSubscriptionIds;
            return this;
        }

        public Builder setAuthorizedAzureSubscriptionIds(@Nullable List<String> authorizedAzureSubscriptionIds) {
            this.authorizedAzureSubscriptionIds = Input.ofNullable(authorizedAzureSubscriptionIds);
            return this;
        }

        public Builder setCustomerServiceUri(@Nullable Input<String> customerServiceUri) {
            this.customerServiceUri = customerServiceUri;
            return this;
        }

        public Builder setCustomerServiceUri(@Nullable String customerServiceUri) {
            this.customerServiceUri = Input.ofNullable(customerServiceUri);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setLogoUri(@Nullable Input<String> logoUri) {
            this.logoUri = logoUri;
            return this;
        }

        public Builder setLogoUri(@Nullable String logoUri) {
            this.logoUri = Input.ofNullable(logoUri);
            return this;
        }

        public Builder setLongDescription(@Nullable Input<String> longDescription) {
            this.longDescription = longDescription;
            return this;
        }

        public Builder setLongDescription(@Nullable String longDescription) {
            this.longDescription = Input.ofNullable(longDescription);
            return this;
        }

        public Builder setPartnerCustomerServiceExtension(@Nullable Input<String> partnerCustomerServiceExtension) {
            this.partnerCustomerServiceExtension = partnerCustomerServiceExtension;
            return this;
        }

        public Builder setPartnerCustomerServiceExtension(@Nullable String partnerCustomerServiceExtension) {
            this.partnerCustomerServiceExtension = Input.ofNullable(partnerCustomerServiceExtension);
            return this;
        }

        public Builder setPartnerCustomerServiceNumber(@Nullable Input<String> partnerCustomerServiceNumber) {
            this.partnerCustomerServiceNumber = partnerCustomerServiceNumber;
            return this;
        }

        public Builder setPartnerCustomerServiceNumber(@Nullable String partnerCustomerServiceNumber) {
            this.partnerCustomerServiceNumber = Input.ofNullable(partnerCustomerServiceNumber);
            return this;
        }

        public Builder setPartnerName(@Nullable Input<String> partnerName) {
            this.partnerName = partnerName;
            return this;
        }

        public Builder setPartnerName(@Nullable String partnerName) {
            this.partnerName = Input.ofNullable(partnerName);
            return this;
        }

        public Builder setPartnerRegistrationName(@Nullable Input<String> partnerRegistrationName) {
            this.partnerRegistrationName = partnerRegistrationName;
            return this;
        }

        public Builder setPartnerRegistrationName(@Nullable String partnerRegistrationName) {
            this.partnerRegistrationName = Input.ofNullable(partnerRegistrationName);
            return this;
        }

        public Builder setPartnerResourceTypeDescription(@Nullable Input<String> partnerResourceTypeDescription) {
            this.partnerResourceTypeDescription = partnerResourceTypeDescription;
            return this;
        }

        public Builder setPartnerResourceTypeDescription(@Nullable String partnerResourceTypeDescription) {
            this.partnerResourceTypeDescription = Input.ofNullable(partnerResourceTypeDescription);
            return this;
        }

        public Builder setPartnerResourceTypeDisplayName(@Nullable Input<String> partnerResourceTypeDisplayName) {
            this.partnerResourceTypeDisplayName = partnerResourceTypeDisplayName;
            return this;
        }

        public Builder setPartnerResourceTypeDisplayName(@Nullable String partnerResourceTypeDisplayName) {
            this.partnerResourceTypeDisplayName = Input.ofNullable(partnerResourceTypeDisplayName);
            return this;
        }

        public Builder setPartnerResourceTypeName(@Nullable Input<String> partnerResourceTypeName) {
            this.partnerResourceTypeName = partnerResourceTypeName;
            return this;
        }

        public Builder setPartnerResourceTypeName(@Nullable String partnerResourceTypeName) {
            this.partnerResourceTypeName = Input.ofNullable(partnerResourceTypeName);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setSetupUri(@Nullable Input<String> setupUri) {
            this.setupUri = setupUri;
            return this;
        }

        public Builder setSetupUri(@Nullable String setupUri) {
            this.setupUri = Input.ofNullable(setupUri);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVisibilityState(@Nullable Input<Either<String,PartnerRegistrationVisibilityState>> visibilityState) {
            this.visibilityState = visibilityState;
            return this;
        }

        public Builder setVisibilityState(@Nullable Either<String,PartnerRegistrationVisibilityState> visibilityState) {
            this.visibilityState = Input.ofNullable(visibilityState);
            return this;
        }

        public PartnerRegistrationArgs build() {
            return new PartnerRegistrationArgs(authorizedAzureSubscriptionIds, customerServiceUri, location, logoUri, longDescription, partnerCustomerServiceExtension, partnerCustomerServiceNumber, partnerName, partnerRegistrationName, partnerResourceTypeDescription, partnerResourceTypeDisplayName, partnerResourceTypeName, resourceGroupName, setupUri, tags, visibilityState);
        }
    }
}
