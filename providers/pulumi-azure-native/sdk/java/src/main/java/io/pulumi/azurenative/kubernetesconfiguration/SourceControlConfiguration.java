// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.kubernetesconfiguration;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.kubernetesconfiguration.SourceControlConfigurationArgs;
import io.pulumi.azurenative.kubernetesconfiguration.outputs.ComplianceStatusResponse;
import io.pulumi.azurenative.kubernetesconfiguration.outputs.HelmOperatorPropertiesResponse;
import io.pulumi.azurenative.kubernetesconfiguration.outputs.SystemDataResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * The SourceControl Configuration object returned in Get & Put response.
 * API Version: 2021-03-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:kubernetesconfiguration:SourceControlConfiguration SRS_GitHubConfig /subscriptions/subId1/resourceGroups/rg1/providers/Microsoft.Kubernetes/connectedClusters/clusterName1/providers/Microsoft.KubernetesConfiguration/sourceControlConfigurations/SRS_GitHubConfig 
 * ```
 * 
 */
@ResourceType(type="azure-native:kubernetesconfiguration:SourceControlConfiguration")
public class SourceControlConfiguration extends io.pulumi.resources.CustomResource {
    /**
     * Compliance Status of the Configuration
     * 
     */
    @OutputExport(name="complianceStatus", type=ComplianceStatusResponse.class, parameters={})
    private Output<ComplianceStatusResponse> complianceStatus;

    /**
     * @return Compliance Status of the Configuration
     * 
     */
    public Output<ComplianceStatusResponse> getComplianceStatus() {
        return this.complianceStatus;
    }
    /**
     * Name-value pairs of protected configuration settings for the configuration
     * 
     */
    @OutputExport(name="configurationProtectedSettings", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> configurationProtectedSettings;

    /**
     * @return Name-value pairs of protected configuration settings for the configuration
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getConfigurationProtectedSettings() {
        return this.configurationProtectedSettings;
    }
    /**
     * Option to enable Helm Operator for this git configuration.
     * 
     */
    @OutputExport(name="enableHelmOperator", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableHelmOperator;

    /**
     * @return Option to enable Helm Operator for this git configuration.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnableHelmOperator() {
        return this.enableHelmOperator;
    }
    /**
     * Properties for Helm operator.
     * 
     */
    @OutputExport(name="helmOperatorProperties", type=HelmOperatorPropertiesResponse.class, parameters={})
    private Output</* @Nullable */ HelmOperatorPropertiesResponse> helmOperatorProperties;

    /**
     * @return Properties for Helm operator.
     * 
     */
    public Output</* @Nullable */ HelmOperatorPropertiesResponse> getHelmOperatorProperties() {
        return this.helmOperatorProperties;
    }
    /**
     * The name of the resource
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Instance name of the operator - identifying the specific configuration.
     * 
     */
    @OutputExport(name="operatorInstanceName", type=String.class, parameters={})
    private Output</* @Nullable */ String> operatorInstanceName;

    /**
     * @return Instance name of the operator - identifying the specific configuration.
     * 
     */
    public Output</* @Nullable */ String> getOperatorInstanceName() {
        return this.operatorInstanceName;
    }
    /**
     * The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
     * 
     */
    @OutputExport(name="operatorNamespace", type=String.class, parameters={})
    private Output</* @Nullable */ String> operatorNamespace;

    /**
     * @return The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
     * 
     */
    public Output</* @Nullable */ String> getOperatorNamespace() {
        return this.operatorNamespace;
    }
    /**
     * Any Parameters for the Operator instance in string format.
     * 
     */
    @OutputExport(name="operatorParams", type=String.class, parameters={})
    private Output</* @Nullable */ String> operatorParams;

    /**
     * @return Any Parameters for the Operator instance in string format.
     * 
     */
    public Output</* @Nullable */ String> getOperatorParams() {
        return this.operatorParams;
    }
    /**
     * Scope at which the operator will be installed.
     * 
     */
    @OutputExport(name="operatorScope", type=String.class, parameters={})
    private Output</* @Nullable */ String> operatorScope;

    /**
     * @return Scope at which the operator will be installed.
     * 
     */
    public Output</* @Nullable */ String> getOperatorScope() {
        return this.operatorScope;
    }
    /**
     * Type of the operator
     * 
     */
    @OutputExport(name="operatorType", type=String.class, parameters={})
    private Output</* @Nullable */ String> operatorType;

    /**
     * @return Type of the operator
     * 
     */
    public Output</* @Nullable */ String> getOperatorType() {
        return this.operatorType;
    }
    /**
     * The provisioning state of the resource provider.
     * 
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the resource provider.
     * 
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Public Key associated with this SourceControl configuration (either generated within the cluster or provided by the user).
     * 
     */
    @OutputExport(name="repositoryPublicKey", type=String.class, parameters={})
    private Output<String> repositoryPublicKey;

    /**
     * @return Public Key associated with this SourceControl configuration (either generated within the cluster or provided by the user).
     * 
     */
    public Output<String> getRepositoryPublicKey() {
        return this.repositoryPublicKey;
    }
    /**
     * Url of the SourceControl Repository.
     * 
     */
    @OutputExport(name="repositoryUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> repositoryUrl;

    /**
     * @return Url of the SourceControl Repository.
     * 
     */
    public Output</* @Nullable */ String> getRepositoryUrl() {
        return this.repositoryUrl;
    }
    /**
     * Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances
     * 
     */
    @OutputExport(name="sshKnownHostsContents", type=String.class, parameters={})
    private Output</* @Nullable */ String> sshKnownHostsContents;

    /**
     * @return Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances
     * 
     */
    public Output</* @Nullable */ String> getSshKnownHostsContents() {
        return this.sshKnownHostsContents;
    }
    /**
     * Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
     * 
     */
    @OutputExport(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
     * 
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    public interface BuilderApplicator {
        public void apply(SourceControlConfigurationArgs.Builder a);
    }
    private static io.pulumi.azurenative.kubernetesconfiguration.SourceControlConfigurationArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.azurenative.kubernetesconfiguration.SourceControlConfigurationArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public SourceControlConfiguration(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SourceControlConfiguration(String name) {
        this(name, SourceControlConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SourceControlConfiguration(String name, SourceControlConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SourceControlConfiguration(String name, SourceControlConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:kubernetesconfiguration:SourceControlConfiguration", name, args == null ? SourceControlConfigurationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private SourceControlConfiguration(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:kubernetesconfiguration:SourceControlConfiguration", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Output.of(Alias.builder().setType("azure-native:kubernetesconfiguration/v20191101preview:SourceControlConfiguration").build()),
                Output.of(Alias.builder().setType("azure-native:kubernetesconfiguration/v20200701preview:SourceControlConfiguration").build()),
                Output.of(Alias.builder().setType("azure-native:kubernetesconfiguration/v20201001preview:SourceControlConfiguration").build()),
                Output.of(Alias.builder().setType("azure-native:kubernetesconfiguration/v20210301:SourceControlConfiguration").build()),
                Output.of(Alias.builder().setType("azure-native:kubernetesconfiguration/v20210501preview:SourceControlConfiguration").build()),
                Output.of(Alias.builder().setType("azure-native:kubernetesconfiguration/v20211101preview:SourceControlConfiguration").build()),
                Output.of(Alias.builder().setType("azure-native:kubernetesconfiguration/v20220101preview:SourceControlConfiguration").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SourceControlConfiguration get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SourceControlConfiguration(name, id, options);
    }
}
