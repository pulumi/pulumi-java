// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContentItemArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContentItemArgs Empty = new ContentItemArgs();

    /**
     * Content item identifier.
     * 
     */
    @InputImport(name="contentItemId")
    private final @Nullable Input<String> contentItemId;

    public Input<String> getContentItemId() {
        return this.contentItemId == null ? Input.empty() : this.contentItemId;
    }

    /**
     * Content type identifier.
     * 
     */
    @InputImport(name="contentTypeId", required=true)
    private final Input<String> contentTypeId;

    public Input<String> getContentTypeId() {
        return this.contentTypeId;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @InputImport(name="serviceName", required=true)
    private final Input<String> serviceName;

    public Input<String> getServiceName() {
        return this.serviceName;
    }

    public ContentItemArgs(
        @Nullable Input<String> contentItemId,
        Input<String> contentTypeId,
        Input<String> resourceGroupName,
        Input<String> serviceName) {
        this.contentItemId = contentItemId;
        this.contentTypeId = Objects.requireNonNull(contentTypeId, "expected parameter 'contentTypeId' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
    }

    private ContentItemArgs() {
        this.contentItemId = Input.empty();
        this.contentTypeId = Input.empty();
        this.resourceGroupName = Input.empty();
        this.serviceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContentItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> contentItemId;
        private Input<String> contentTypeId;
        private Input<String> resourceGroupName;
        private Input<String> serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(ContentItemArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentItemId = defaults.contentItemId;
    	      this.contentTypeId = defaults.contentTypeId;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder setContentItemId(@Nullable Input<String> contentItemId) {
            this.contentItemId = contentItemId;
            return this;
        }

        public Builder setContentItemId(@Nullable String contentItemId) {
            this.contentItemId = Input.ofNullable(contentItemId);
            return this;
        }

        public Builder setContentTypeId(Input<String> contentTypeId) {
            this.contentTypeId = Objects.requireNonNull(contentTypeId);
            return this;
        }

        public Builder setContentTypeId(String contentTypeId) {
            this.contentTypeId = Input.of(Objects.requireNonNull(contentTypeId));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setServiceName(Input<String> serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }

        public Builder setServiceName(String serviceName) {
            this.serviceName = Input.of(Objects.requireNonNull(serviceName));
            return this;
        }

        public ContentItemArgs build() {
            return new ContentItemArgs(contentItemId, contentTypeId, resourceGroupName, serviceName);
        }
    }
}
