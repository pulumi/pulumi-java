// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.enums.IPAllocationMethod;
import io.pulumi.azurenative.network.enums.IPVersion;
import io.pulumi.azurenative.network.inputs.ApplicationGatewayBackendAddressPoolArgs;
import io.pulumi.azurenative.network.inputs.ApplicationSecurityGroupArgs;
import io.pulumi.azurenative.network.inputs.BackendAddressPoolArgs;
import io.pulumi.azurenative.network.inputs.InboundNatRuleArgs;
import io.pulumi.azurenative.network.inputs.PublicIPAddressArgs;
import io.pulumi.azurenative.network.inputs.SubnetArgs;
import io.pulumi.azurenative.network.inputs.VirtualNetworkTapArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * IPConfiguration in a network interface.
 * 
 */
public final class NetworkInterfaceIPConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkInterfaceIPConfigurationArgs Empty = new NetworkInterfaceIPConfigurationArgs();

    /**
     * The reference to ApplicationGatewayBackendAddressPool resource.
     * 
     */
    @Import(name="applicationGatewayBackendAddressPools")
      private final @Nullable Output<List<ApplicationGatewayBackendAddressPoolArgs>> applicationGatewayBackendAddressPools;

    public Output<List<ApplicationGatewayBackendAddressPoolArgs>> getApplicationGatewayBackendAddressPools() {
        return this.applicationGatewayBackendAddressPools == null ? Output.empty() : this.applicationGatewayBackendAddressPools;
    }

    /**
     * Application security groups in which the IP configuration is included.
     * 
     */
    @Import(name="applicationSecurityGroups")
      private final @Nullable Output<List<ApplicationSecurityGroupArgs>> applicationSecurityGroups;

    public Output<List<ApplicationSecurityGroupArgs>> getApplicationSecurityGroups() {
        return this.applicationSecurityGroups == null ? Output.empty() : this.applicationSecurityGroups;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Output.empty() : this.id;
    }

    /**
     * The reference to LoadBalancerBackendAddressPool resource.
     * 
     */
    @Import(name="loadBalancerBackendAddressPools")
      private final @Nullable Output<List<BackendAddressPoolArgs>> loadBalancerBackendAddressPools;

    public Output<List<BackendAddressPoolArgs>> getLoadBalancerBackendAddressPools() {
        return this.loadBalancerBackendAddressPools == null ? Output.empty() : this.loadBalancerBackendAddressPools;
    }

    /**
     * A list of references of LoadBalancerInboundNatRules.
     * 
     */
    @Import(name="loadBalancerInboundNatRules")
      private final @Nullable Output<List<InboundNatRuleArgs>> loadBalancerInboundNatRules;

    public Output<List<InboundNatRuleArgs>> getLoadBalancerInboundNatRules() {
        return this.loadBalancerInboundNatRules == null ? Output.empty() : this.loadBalancerInboundNatRules;
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Whether this is a primary customer address on the network interface.
     * 
     */
    @Import(name="primary")
      private final @Nullable Output<Boolean> primary;

    public Output<Boolean> getPrimary() {
        return this.primary == null ? Output.empty() : this.primary;
    }

    /**
     * Private IP address of the IP configuration.
     * 
     */
    @Import(name="privateIPAddress")
      private final @Nullable Output<String> privateIPAddress;

    public Output<String> getPrivateIPAddress() {
        return this.privateIPAddress == null ? Output.empty() : this.privateIPAddress;
    }

    /**
     * Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
     * 
     */
    @Import(name="privateIPAddressVersion")
      private final @Nullable Output<Either<String,IPVersion>> privateIPAddressVersion;

    public Output<Either<String,IPVersion>> getPrivateIPAddressVersion() {
        return this.privateIPAddressVersion == null ? Output.empty() : this.privateIPAddressVersion;
    }

    /**
     * The private IP address allocation method.
     * 
     */
    @Import(name="privateIPAllocationMethod")
      private final @Nullable Output<Either<String,IPAllocationMethod>> privateIPAllocationMethod;

    public Output<Either<String,IPAllocationMethod>> getPrivateIPAllocationMethod() {
        return this.privateIPAllocationMethod == null ? Output.empty() : this.privateIPAllocationMethod;
    }

    /**
     * Public IP address bound to the IP configuration.
     * 
     */
    @Import(name="publicIPAddress")
      private final @Nullable Output<PublicIPAddressArgs> publicIPAddress;

    public Output<PublicIPAddressArgs> getPublicIPAddress() {
        return this.publicIPAddress == null ? Output.empty() : this.publicIPAddress;
    }

    /**
     * Subnet bound to the IP configuration.
     * 
     */
    @Import(name="subnet")
      private final @Nullable Output<SubnetArgs> subnet;

    public Output<SubnetArgs> getSubnet() {
        return this.subnet == null ? Output.empty() : this.subnet;
    }

    /**
     * Resource type.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    /**
     * The reference to Virtual Network Taps.
     * 
     */
    @Import(name="virtualNetworkTaps")
      private final @Nullable Output<List<VirtualNetworkTapArgs>> virtualNetworkTaps;

    public Output<List<VirtualNetworkTapArgs>> getVirtualNetworkTaps() {
        return this.virtualNetworkTaps == null ? Output.empty() : this.virtualNetworkTaps;
    }

    public NetworkInterfaceIPConfigurationArgs(
        @Nullable Output<List<ApplicationGatewayBackendAddressPoolArgs>> applicationGatewayBackendAddressPools,
        @Nullable Output<List<ApplicationSecurityGroupArgs>> applicationSecurityGroups,
        @Nullable Output<String> id,
        @Nullable Output<List<BackendAddressPoolArgs>> loadBalancerBackendAddressPools,
        @Nullable Output<List<InboundNatRuleArgs>> loadBalancerInboundNatRules,
        @Nullable Output<String> name,
        @Nullable Output<Boolean> primary,
        @Nullable Output<String> privateIPAddress,
        @Nullable Output<Either<String,IPVersion>> privateIPAddressVersion,
        @Nullable Output<Either<String,IPAllocationMethod>> privateIPAllocationMethod,
        @Nullable Output<PublicIPAddressArgs> publicIPAddress,
        @Nullable Output<SubnetArgs> subnet,
        @Nullable Output<String> type,
        @Nullable Output<List<VirtualNetworkTapArgs>> virtualNetworkTaps) {
        this.applicationGatewayBackendAddressPools = applicationGatewayBackendAddressPools;
        this.applicationSecurityGroups = applicationSecurityGroups;
        this.id = id;
        this.loadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
        this.loadBalancerInboundNatRules = loadBalancerInboundNatRules;
        this.name = name;
        this.primary = primary;
        this.privateIPAddress = privateIPAddress;
        this.privateIPAddressVersion = privateIPAddressVersion;
        this.privateIPAllocationMethod = privateIPAllocationMethod;
        this.publicIPAddress = publicIPAddress;
        this.subnet = subnet;
        this.type = type;
        this.virtualNetworkTaps = virtualNetworkTaps;
    }

    private NetworkInterfaceIPConfigurationArgs() {
        this.applicationGatewayBackendAddressPools = Output.empty();
        this.applicationSecurityGroups = Output.empty();
        this.id = Output.empty();
        this.loadBalancerBackendAddressPools = Output.empty();
        this.loadBalancerInboundNatRules = Output.empty();
        this.name = Output.empty();
        this.primary = Output.empty();
        this.privateIPAddress = Output.empty();
        this.privateIPAddressVersion = Output.empty();
        this.privateIPAllocationMethod = Output.empty();
        this.publicIPAddress = Output.empty();
        this.subnet = Output.empty();
        this.type = Output.empty();
        this.virtualNetworkTaps = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfaceIPConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ApplicationGatewayBackendAddressPoolArgs>> applicationGatewayBackendAddressPools;
        private @Nullable Output<List<ApplicationSecurityGroupArgs>> applicationSecurityGroups;
        private @Nullable Output<String> id;
        private @Nullable Output<List<BackendAddressPoolArgs>> loadBalancerBackendAddressPools;
        private @Nullable Output<List<InboundNatRuleArgs>> loadBalancerInboundNatRules;
        private @Nullable Output<String> name;
        private @Nullable Output<Boolean> primary;
        private @Nullable Output<String> privateIPAddress;
        private @Nullable Output<Either<String,IPVersion>> privateIPAddressVersion;
        private @Nullable Output<Either<String,IPAllocationMethod>> privateIPAllocationMethod;
        private @Nullable Output<PublicIPAddressArgs> publicIPAddress;
        private @Nullable Output<SubnetArgs> subnet;
        private @Nullable Output<String> type;
        private @Nullable Output<List<VirtualNetworkTapArgs>> virtualNetworkTaps;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkInterfaceIPConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationGatewayBackendAddressPools = defaults.applicationGatewayBackendAddressPools;
    	      this.applicationSecurityGroups = defaults.applicationSecurityGroups;
    	      this.id = defaults.id;
    	      this.loadBalancerBackendAddressPools = defaults.loadBalancerBackendAddressPools;
    	      this.loadBalancerInboundNatRules = defaults.loadBalancerInboundNatRules;
    	      this.name = defaults.name;
    	      this.primary = defaults.primary;
    	      this.privateIPAddress = defaults.privateIPAddress;
    	      this.privateIPAddressVersion = defaults.privateIPAddressVersion;
    	      this.privateIPAllocationMethod = defaults.privateIPAllocationMethod;
    	      this.publicIPAddress = defaults.publicIPAddress;
    	      this.subnet = defaults.subnet;
    	      this.type = defaults.type;
    	      this.virtualNetworkTaps = defaults.virtualNetworkTaps;
        }

        public Builder applicationGatewayBackendAddressPools(@Nullable Output<List<ApplicationGatewayBackendAddressPoolArgs>> applicationGatewayBackendAddressPools) {
            this.applicationGatewayBackendAddressPools = applicationGatewayBackendAddressPools;
            return this;
        }

        public Builder applicationGatewayBackendAddressPools(@Nullable List<ApplicationGatewayBackendAddressPoolArgs> applicationGatewayBackendAddressPools) {
            this.applicationGatewayBackendAddressPools = Output.ofNullable(applicationGatewayBackendAddressPools);
            return this;
        }

        public Builder applicationSecurityGroups(@Nullable Output<List<ApplicationSecurityGroupArgs>> applicationSecurityGroups) {
            this.applicationSecurityGroups = applicationSecurityGroups;
            return this;
        }

        public Builder applicationSecurityGroups(@Nullable List<ApplicationSecurityGroupArgs> applicationSecurityGroups) {
            this.applicationSecurityGroups = Output.ofNullable(applicationSecurityGroups);
            return this;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = Output.ofNullable(id);
            return this;
        }

        public Builder loadBalancerBackendAddressPools(@Nullable Output<List<BackendAddressPoolArgs>> loadBalancerBackendAddressPools) {
            this.loadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            return this;
        }

        public Builder loadBalancerBackendAddressPools(@Nullable List<BackendAddressPoolArgs> loadBalancerBackendAddressPools) {
            this.loadBalancerBackendAddressPools = Output.ofNullable(loadBalancerBackendAddressPools);
            return this;
        }

        public Builder loadBalancerInboundNatRules(@Nullable Output<List<InboundNatRuleArgs>> loadBalancerInboundNatRules) {
            this.loadBalancerInboundNatRules = loadBalancerInboundNatRules;
            return this;
        }

        public Builder loadBalancerInboundNatRules(@Nullable List<InboundNatRuleArgs> loadBalancerInboundNatRules) {
            this.loadBalancerInboundNatRules = Output.ofNullable(loadBalancerInboundNatRules);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder primary(@Nullable Output<Boolean> primary) {
            this.primary = primary;
            return this;
        }

        public Builder primary(@Nullable Boolean primary) {
            this.primary = Output.ofNullable(primary);
            return this;
        }

        public Builder privateIPAddress(@Nullable Output<String> privateIPAddress) {
            this.privateIPAddress = privateIPAddress;
            return this;
        }

        public Builder privateIPAddress(@Nullable String privateIPAddress) {
            this.privateIPAddress = Output.ofNullable(privateIPAddress);
            return this;
        }

        public Builder privateIPAddressVersion(@Nullable Output<Either<String,IPVersion>> privateIPAddressVersion) {
            this.privateIPAddressVersion = privateIPAddressVersion;
            return this;
        }

        public Builder privateIPAddressVersion(@Nullable Either<String,IPVersion> privateIPAddressVersion) {
            this.privateIPAddressVersion = Output.ofNullable(privateIPAddressVersion);
            return this;
        }

        public Builder privateIPAllocationMethod(@Nullable Output<Either<String,IPAllocationMethod>> privateIPAllocationMethod) {
            this.privateIPAllocationMethod = privateIPAllocationMethod;
            return this;
        }

        public Builder privateIPAllocationMethod(@Nullable Either<String,IPAllocationMethod> privateIPAllocationMethod) {
            this.privateIPAllocationMethod = Output.ofNullable(privateIPAllocationMethod);
            return this;
        }

        public Builder publicIPAddress(@Nullable Output<PublicIPAddressArgs> publicIPAddress) {
            this.publicIPAddress = publicIPAddress;
            return this;
        }

        public Builder publicIPAddress(@Nullable PublicIPAddressArgs publicIPAddress) {
            this.publicIPAddress = Output.ofNullable(publicIPAddress);
            return this;
        }

        public Builder subnet(@Nullable Output<SubnetArgs> subnet) {
            this.subnet = subnet;
            return this;
        }

        public Builder subnet(@Nullable SubnetArgs subnet) {
            this.subnet = Output.ofNullable(subnet);
            return this;
        }

        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable String type) {
            this.type = Output.ofNullable(type);
            return this;
        }

        public Builder virtualNetworkTaps(@Nullable Output<List<VirtualNetworkTapArgs>> virtualNetworkTaps) {
            this.virtualNetworkTaps = virtualNetworkTaps;
            return this;
        }

        public Builder virtualNetworkTaps(@Nullable List<VirtualNetworkTapArgs> virtualNetworkTaps) {
            this.virtualNetworkTaps = Output.ofNullable(virtualNetworkTaps);
            return this;
        }
        public NetworkInterfaceIPConfigurationArgs build() {
            return new NetworkInterfaceIPConfigurationArgs(applicationGatewayBackendAddressPools, applicationSecurityGroups, id, loadBalancerBackendAddressPools, loadBalancerInboundNatRules, name, primary, privateIPAddress, privateIPAddressVersion, privateIPAllocationMethod, publicIPAddress, subnet, type, virtualNetworkTaps);
        }
    }
}
