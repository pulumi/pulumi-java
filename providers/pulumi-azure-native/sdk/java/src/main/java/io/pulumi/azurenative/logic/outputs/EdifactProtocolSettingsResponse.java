// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic.outputs;

import io.pulumi.azurenative.logic.outputs.EdifactAcknowledgementSettingsResponse;
import io.pulumi.azurenative.logic.outputs.EdifactDelimiterOverrideResponse;
import io.pulumi.azurenative.logic.outputs.EdifactEnvelopeOverrideResponse;
import io.pulumi.azurenative.logic.outputs.EdifactEnvelopeSettingsResponse;
import io.pulumi.azurenative.logic.outputs.EdifactFramingSettingsResponse;
import io.pulumi.azurenative.logic.outputs.EdifactMessageFilterResponse;
import io.pulumi.azurenative.logic.outputs.EdifactMessageIdentifierResponse;
import io.pulumi.azurenative.logic.outputs.EdifactProcessingSettingsResponse;
import io.pulumi.azurenative.logic.outputs.EdifactSchemaReferenceResponse;
import io.pulumi.azurenative.logic.outputs.EdifactValidationOverrideResponse;
import io.pulumi.azurenative.logic.outputs.EdifactValidationSettingsResponse;
import io.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class EdifactProtocolSettingsResponse {
    /**
     * The EDIFACT acknowledgement settings.
     * 
     */
    private final EdifactAcknowledgementSettingsResponse acknowledgementSettings;
    /**
     * The EDIFACT delimiter override settings.
     * 
     */
    private final @Nullable List<EdifactDelimiterOverrideResponse> edifactDelimiterOverrides;
    /**
     * The EDIFACT envelope override settings.
     * 
     */
    private final @Nullable List<EdifactEnvelopeOverrideResponse> envelopeOverrides;
    /**
     * The EDIFACT envelope settings.
     * 
     */
    private final EdifactEnvelopeSettingsResponse envelopeSettings;
    /**
     * The EDIFACT framing settings.
     * 
     */
    private final EdifactFramingSettingsResponse framingSettings;
    /**
     * The EDIFACT message filter.
     * 
     */
    private final EdifactMessageFilterResponse messageFilter;
    /**
     * The EDIFACT message filter list.
     * 
     */
    private final @Nullable List<EdifactMessageIdentifierResponse> messageFilterList;
    /**
     * The EDIFACT processing Settings.
     * 
     */
    private final EdifactProcessingSettingsResponse processingSettings;
    /**
     * The EDIFACT schema references.
     * 
     */
    private final List<EdifactSchemaReferenceResponse> schemaReferences;
    /**
     * The EDIFACT validation override settings.
     * 
     */
    private final @Nullable List<EdifactValidationOverrideResponse> validationOverrides;
    /**
     * The EDIFACT validation settings.
     * 
     */
    private final EdifactValidationSettingsResponse validationSettings;

    @CustomType.Constructor
    private EdifactProtocolSettingsResponse(
        @CustomType.Parameter("acknowledgementSettings") EdifactAcknowledgementSettingsResponse acknowledgementSettings,
        @CustomType.Parameter("edifactDelimiterOverrides") @Nullable List<EdifactDelimiterOverrideResponse> edifactDelimiterOverrides,
        @CustomType.Parameter("envelopeOverrides") @Nullable List<EdifactEnvelopeOverrideResponse> envelopeOverrides,
        @CustomType.Parameter("envelopeSettings") EdifactEnvelopeSettingsResponse envelopeSettings,
        @CustomType.Parameter("framingSettings") EdifactFramingSettingsResponse framingSettings,
        @CustomType.Parameter("messageFilter") EdifactMessageFilterResponse messageFilter,
        @CustomType.Parameter("messageFilterList") @Nullable List<EdifactMessageIdentifierResponse> messageFilterList,
        @CustomType.Parameter("processingSettings") EdifactProcessingSettingsResponse processingSettings,
        @CustomType.Parameter("schemaReferences") List<EdifactSchemaReferenceResponse> schemaReferences,
        @CustomType.Parameter("validationOverrides") @Nullable List<EdifactValidationOverrideResponse> validationOverrides,
        @CustomType.Parameter("validationSettings") EdifactValidationSettingsResponse validationSettings) {
        this.acknowledgementSettings = acknowledgementSettings;
        this.edifactDelimiterOverrides = edifactDelimiterOverrides;
        this.envelopeOverrides = envelopeOverrides;
        this.envelopeSettings = envelopeSettings;
        this.framingSettings = framingSettings;
        this.messageFilter = messageFilter;
        this.messageFilterList = messageFilterList;
        this.processingSettings = processingSettings;
        this.schemaReferences = schemaReferences;
        this.validationOverrides = validationOverrides;
        this.validationSettings = validationSettings;
    }

    /**
     * The EDIFACT acknowledgement settings.
     * 
    */
    public EdifactAcknowledgementSettingsResponse getAcknowledgementSettings() {
        return this.acknowledgementSettings;
    }
    /**
     * The EDIFACT delimiter override settings.
     * 
    */
    public List<EdifactDelimiterOverrideResponse> getEdifactDelimiterOverrides() {
        return this.edifactDelimiterOverrides == null ? List.of() : this.edifactDelimiterOverrides;
    }
    /**
     * The EDIFACT envelope override settings.
     * 
    */
    public List<EdifactEnvelopeOverrideResponse> getEnvelopeOverrides() {
        return this.envelopeOverrides == null ? List.of() : this.envelopeOverrides;
    }
    /**
     * The EDIFACT envelope settings.
     * 
    */
    public EdifactEnvelopeSettingsResponse getEnvelopeSettings() {
        return this.envelopeSettings;
    }
    /**
     * The EDIFACT framing settings.
     * 
    */
    public EdifactFramingSettingsResponse getFramingSettings() {
        return this.framingSettings;
    }
    /**
     * The EDIFACT message filter.
     * 
    */
    public EdifactMessageFilterResponse getMessageFilter() {
        return this.messageFilter;
    }
    /**
     * The EDIFACT message filter list.
     * 
    */
    public List<EdifactMessageIdentifierResponse> getMessageFilterList() {
        return this.messageFilterList == null ? List.of() : this.messageFilterList;
    }
    /**
     * The EDIFACT processing Settings.
     * 
    */
    public EdifactProcessingSettingsResponse getProcessingSettings() {
        return this.processingSettings;
    }
    /**
     * The EDIFACT schema references.
     * 
    */
    public List<EdifactSchemaReferenceResponse> getSchemaReferences() {
        return this.schemaReferences;
    }
    /**
     * The EDIFACT validation override settings.
     * 
    */
    public List<EdifactValidationOverrideResponse> getValidationOverrides() {
        return this.validationOverrides == null ? List.of() : this.validationOverrides;
    }
    /**
     * The EDIFACT validation settings.
     * 
    */
    public EdifactValidationSettingsResponse getValidationSettings() {
        return this.validationSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdifactProtocolSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdifactAcknowledgementSettingsResponse acknowledgementSettings;
        private @Nullable List<EdifactDelimiterOverrideResponse> edifactDelimiterOverrides;
        private @Nullable List<EdifactEnvelopeOverrideResponse> envelopeOverrides;
        private EdifactEnvelopeSettingsResponse envelopeSettings;
        private EdifactFramingSettingsResponse framingSettings;
        private EdifactMessageFilterResponse messageFilter;
        private @Nullable List<EdifactMessageIdentifierResponse> messageFilterList;
        private EdifactProcessingSettingsResponse processingSettings;
        private List<EdifactSchemaReferenceResponse> schemaReferences;
        private @Nullable List<EdifactValidationOverrideResponse> validationOverrides;
        private EdifactValidationSettingsResponse validationSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(EdifactProtocolSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acknowledgementSettings = defaults.acknowledgementSettings;
    	      this.edifactDelimiterOverrides = defaults.edifactDelimiterOverrides;
    	      this.envelopeOverrides = defaults.envelopeOverrides;
    	      this.envelopeSettings = defaults.envelopeSettings;
    	      this.framingSettings = defaults.framingSettings;
    	      this.messageFilter = defaults.messageFilter;
    	      this.messageFilterList = defaults.messageFilterList;
    	      this.processingSettings = defaults.processingSettings;
    	      this.schemaReferences = defaults.schemaReferences;
    	      this.validationOverrides = defaults.validationOverrides;
    	      this.validationSettings = defaults.validationSettings;
        }

        public Builder acknowledgementSettings(EdifactAcknowledgementSettingsResponse acknowledgementSettings) {
            this.acknowledgementSettings = Objects.requireNonNull(acknowledgementSettings);
            return this;
        }
        public Builder edifactDelimiterOverrides(@Nullable List<EdifactDelimiterOverrideResponse> edifactDelimiterOverrides) {
            this.edifactDelimiterOverrides = edifactDelimiterOverrides;
            return this;
        }
        public Builder edifactDelimiterOverrides(EdifactDelimiterOverrideResponse... edifactDelimiterOverrides) {
            return edifactDelimiterOverrides(List.of(edifactDelimiterOverrides));
        }
        public Builder envelopeOverrides(@Nullable List<EdifactEnvelopeOverrideResponse> envelopeOverrides) {
            this.envelopeOverrides = envelopeOverrides;
            return this;
        }
        public Builder envelopeOverrides(EdifactEnvelopeOverrideResponse... envelopeOverrides) {
            return envelopeOverrides(List.of(envelopeOverrides));
        }
        public Builder envelopeSettings(EdifactEnvelopeSettingsResponse envelopeSettings) {
            this.envelopeSettings = Objects.requireNonNull(envelopeSettings);
            return this;
        }
        public Builder framingSettings(EdifactFramingSettingsResponse framingSettings) {
            this.framingSettings = Objects.requireNonNull(framingSettings);
            return this;
        }
        public Builder messageFilter(EdifactMessageFilterResponse messageFilter) {
            this.messageFilter = Objects.requireNonNull(messageFilter);
            return this;
        }
        public Builder messageFilterList(@Nullable List<EdifactMessageIdentifierResponse> messageFilterList) {
            this.messageFilterList = messageFilterList;
            return this;
        }
        public Builder messageFilterList(EdifactMessageIdentifierResponse... messageFilterList) {
            return messageFilterList(List.of(messageFilterList));
        }
        public Builder processingSettings(EdifactProcessingSettingsResponse processingSettings) {
            this.processingSettings = Objects.requireNonNull(processingSettings);
            return this;
        }
        public Builder schemaReferences(List<EdifactSchemaReferenceResponse> schemaReferences) {
            this.schemaReferences = Objects.requireNonNull(schemaReferences);
            return this;
        }
        public Builder schemaReferences(EdifactSchemaReferenceResponse... schemaReferences) {
            return schemaReferences(List.of(schemaReferences));
        }
        public Builder validationOverrides(@Nullable List<EdifactValidationOverrideResponse> validationOverrides) {
            this.validationOverrides = validationOverrides;
            return this;
        }
        public Builder validationOverrides(EdifactValidationOverrideResponse... validationOverrides) {
            return validationOverrides(List.of(validationOverrides));
        }
        public Builder validationSettings(EdifactValidationSettingsResponse validationSettings) {
            this.validationSettings = Objects.requireNonNull(validationSettings);
            return this;
        }        public EdifactProtocolSettingsResponse build() {
            return new EdifactProtocolSettingsResponse(acknowledgementSettings, edifactDelimiterOverrides, envelopeOverrides, envelopeSettings, framingSettings, messageFilter, messageFilterList, processingSettings, schemaReferences, validationOverrides, validationSettings);
        }
    }
}
