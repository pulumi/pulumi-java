// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.sql.TransparentDataEncryptionArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Represents a database transparent data encryption configuration.
 * API Version: 2014-04-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:sql:TransparentDataEncryption current /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6852/providers/Microsoft.Sql/servers/sqlcrudtest-2080/databases/sqlcrudtest-9187/transparentDataEncryption/current 
 * ```
 * 
 */
@ResourceType(type="azure-native:sql:TransparentDataEncryption")
public class TransparentDataEncryption extends io.pulumi.resources.CustomResource {
    /**
     * Resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The status of the database transparent data encryption.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output</* @Nullable */ String> status;

    /**
     * @return The status of the database transparent data encryption.
     * 
     */
    public Output</* @Nullable */ String> status() {
        return this.status;
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TransparentDataEncryption(String name) {
        this(name, TransparentDataEncryptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TransparentDataEncryption(String name, TransparentDataEncryptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TransparentDataEncryption(String name, TransparentDataEncryptionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:TransparentDataEncryption", name, args == null ? TransparentDataEncryptionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TransparentDataEncryption(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:TransparentDataEncryption", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:sql/v20140401:TransparentDataEncryption").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20200202preview:TransparentDataEncryption").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20200801preview:TransparentDataEncryption").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20201101preview:TransparentDataEncryption").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20210201preview:TransparentDataEncryption").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20210501preview:TransparentDataEncryption").build()),
                Output.of(Alias.builder().type("azure-native:sql/v20210801preview:TransparentDataEncryption").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TransparentDataEncryption get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new TransparentDataEncryption(name, id, options);
    }
}
