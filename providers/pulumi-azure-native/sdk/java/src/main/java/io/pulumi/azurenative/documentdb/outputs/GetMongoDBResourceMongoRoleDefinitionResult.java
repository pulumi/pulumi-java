// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb.outputs;

import io.pulumi.azurenative.documentdb.outputs.PrivilegeResponse;
import io.pulumi.azurenative.documentdb.outputs.RoleResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetMongoDBResourceMongoRoleDefinitionResult {
    private final @Nullable String databaseName;
    private final String id;
    private final String name;
    private final @Nullable List<PrivilegeResponse> privileges;
    private final @Nullable String roleName;
    private final @Nullable List<RoleResponse> roles;
    private final String type;

    @OutputCustomType.Constructor({"databaseName","id","name","privileges","roleName","roles","type"})
    private GetMongoDBResourceMongoRoleDefinitionResult(
        @Nullable String databaseName,
        String id,
        String name,
        @Nullable List<PrivilegeResponse> privileges,
        @Nullable String roleName,
        @Nullable List<RoleResponse> roles,
        String type) {
        this.databaseName = databaseName;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.privileges = privileges;
        this.roleName = roleName;
        this.roles = roles;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getDatabaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public List<PrivilegeResponse> getPrivileges() {
        return this.privileges == null ? List.of() : this.privileges;
    }
    public Optional<String> getRoleName() {
        return Optional.ofNullable(this.roleName);
    }
    public List<RoleResponse> getRoles() {
        return this.roles == null ? List.of() : this.roles;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMongoDBResourceMongoRoleDefinitionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String databaseName;
        private String id;
        private String name;
        private @Nullable List<PrivilegeResponse> privileges;
        private @Nullable String roleName;
        private @Nullable List<RoleResponse> roles;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMongoDBResourceMongoRoleDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.privileges = defaults.privileges;
    	      this.roleName = defaults.roleName;
    	      this.roles = defaults.roles;
    	      this.type = defaults.type;
        }

        public Builder setDatabaseName(@Nullable String databaseName) {
            this.databaseName = databaseName;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPrivileges(@Nullable List<PrivilegeResponse> privileges) {
            this.privileges = privileges;
            return this;
        }

        public Builder setRoleName(@Nullable String roleName) {
            this.roleName = roleName;
            return this;
        }

        public Builder setRoles(@Nullable List<RoleResponse> roles) {
            this.roles = roles;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetMongoDBResourceMongoRoleDefinitionResult build() {
            return new GetMongoDBResourceMongoRoleDefinitionResult(databaseName, id, name, privileges, roleName, roles, type);
        }
    }
}
