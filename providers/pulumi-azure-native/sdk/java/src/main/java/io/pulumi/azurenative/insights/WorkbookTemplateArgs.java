// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.insights.inputs.WorkbookTemplateGalleryArgs;
import io.pulumi.azurenative.insights.inputs.WorkbookTemplateLocalizedGalleryArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkbookTemplateArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkbookTemplateArgs Empty = new WorkbookTemplateArgs();

    /**
     * Information about the author of the workbook template.
     * 
     */
    @Import(name="author")
      private final @Nullable Output<String> author;

    public Output<String> getAuthor() {
        return this.author == null ? Output.empty() : this.author;
    }

    /**
     * Workbook galleries supported by the template.
     * 
     */
    @Import(name="galleries", required=true)
      private final Output<List<WorkbookTemplateGalleryArgs>> galleries;

    public Output<List<WorkbookTemplateGalleryArgs>> getGalleries() {
        return this.galleries;
    }

    /**
     * Key value pair of localized gallery. Each key is the locale code of languages supported by the Azure portal.
     * 
     */
    @Import(name="localized")
      private final @Nullable Output<Map<String,List<WorkbookTemplateLocalizedGalleryArgs>>> localized;

    public Output<Map<String,List<WorkbookTemplateLocalizedGalleryArgs>>> getLocalized() {
        return this.localized == null ? Output.empty() : this.localized;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Priority of the template. Determines which template to open when a workbook gallery is opened in viewer mode.
     * 
     */
    @Import(name="priority")
      private final @Nullable Output<Integer> priority;

    public Output<Integer> getPriority() {
        return this.priority == null ? Output.empty() : this.priority;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Application Insights component resource.
     * 
     */
    @Import(name="resourceName")
      private final @Nullable Output<String> resourceName;

    public Output<String> getPropResourceName() {
        return this.resourceName == null ? Output.empty() : this.resourceName;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * Valid JSON object containing workbook template payload.
     * 
     */
    @Import(name="templateData", required=true)
      private final Output<Object> templateData;

    public Output<Object> getTemplateData() {
        return this.templateData;
    }

    public WorkbookTemplateArgs(
        @Nullable Output<String> author,
        Output<List<WorkbookTemplateGalleryArgs>> galleries,
        @Nullable Output<Map<String,List<WorkbookTemplateLocalizedGalleryArgs>>> localized,
        @Nullable Output<String> location,
        @Nullable Output<Integer> priority,
        Output<String> resourceGroupName,
        @Nullable Output<String> resourceName,
        @Nullable Output<Map<String,String>> tags,
        Output<Object> templateData) {
        this.author = author;
        this.galleries = Objects.requireNonNull(galleries, "expected parameter 'galleries' to be non-null");
        this.localized = localized;
        this.location = location;
        this.priority = priority;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = resourceName;
        this.tags = tags;
        this.templateData = Objects.requireNonNull(templateData, "expected parameter 'templateData' to be non-null");
    }

    private WorkbookTemplateArgs() {
        this.author = Output.empty();
        this.galleries = Output.empty();
        this.localized = Output.empty();
        this.location = Output.empty();
        this.priority = Output.empty();
        this.resourceGroupName = Output.empty();
        this.resourceName = Output.empty();
        this.tags = Output.empty();
        this.templateData = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkbookTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> author;
        private Output<List<WorkbookTemplateGalleryArgs>> galleries;
        private @Nullable Output<Map<String,List<WorkbookTemplateLocalizedGalleryArgs>>> localized;
        private @Nullable Output<String> location;
        private @Nullable Output<Integer> priority;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> resourceName;
        private @Nullable Output<Map<String,String>> tags;
        private Output<Object> templateData;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkbookTemplateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.author = defaults.author;
    	      this.galleries = defaults.galleries;
    	      this.localized = defaults.localized;
    	      this.location = defaults.location;
    	      this.priority = defaults.priority;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.tags = defaults.tags;
    	      this.templateData = defaults.templateData;
        }

        public Builder author(@Nullable Output<String> author) {
            this.author = author;
            return this;
        }

        public Builder author(@Nullable String author) {
            this.author = Output.ofNullable(author);
            return this;
        }

        public Builder galleries(Output<List<WorkbookTemplateGalleryArgs>> galleries) {
            this.galleries = Objects.requireNonNull(galleries);
            return this;
        }

        public Builder galleries(List<WorkbookTemplateGalleryArgs> galleries) {
            this.galleries = Output.of(Objects.requireNonNull(galleries));
            return this;
        }

        public Builder localized(@Nullable Output<Map<String,List<WorkbookTemplateLocalizedGalleryArgs>>> localized) {
            this.localized = localized;
            return this;
        }

        public Builder localized(@Nullable Map<String,List<WorkbookTemplateLocalizedGalleryArgs>> localized) {
            this.localized = Output.ofNullable(localized);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder priority(@Nullable Output<Integer> priority) {
            this.priority = priority;
            return this;
        }

        public Builder priority(@Nullable Integer priority) {
            this.priority = Output.ofNullable(priority);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder resourceName(@Nullable Output<String> resourceName) {
            this.resourceName = resourceName;
            return this;
        }

        public Builder resourceName(@Nullable String resourceName) {
            this.resourceName = Output.ofNullable(resourceName);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder templateData(Output<Object> templateData) {
            this.templateData = Objects.requireNonNull(templateData);
            return this;
        }

        public Builder templateData(Object templateData) {
            this.templateData = Output.of(Objects.requireNonNull(templateData));
            return this;
        }
        public WorkbookTemplateArgs build() {
            return new WorkbookTemplateArgs(author, galleries, localized, location, priority, resourceGroupName, resourceName, tags, templateData);
        }
    }
}
