// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.outputs;

import io.pulumi.azurenative.compute.outputs.ApiEntityReferenceResponse;
import io.pulumi.azurenative.compute.outputs.ManagedDiskParametersResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class RestorePointSourceVMDataDiskResponse {
    private final @Nullable String caching;
    private final @Nullable ApiEntityReferenceResponse diskRestorePoint;
    private final @Nullable Integer diskSizeGB;
    private final @Nullable Integer lun;
    private final @Nullable ManagedDiskParametersResponse managedDisk;
    private final @Nullable String name;

    @OutputCustomType.Constructor({"caching","diskRestorePoint","diskSizeGB","lun","managedDisk","name"})
    private RestorePointSourceVMDataDiskResponse(
        @Nullable String caching,
        @Nullable ApiEntityReferenceResponse diskRestorePoint,
        @Nullable Integer diskSizeGB,
        @Nullable Integer lun,
        @Nullable ManagedDiskParametersResponse managedDisk,
        @Nullable String name) {
        this.caching = caching;
        this.diskRestorePoint = diskRestorePoint;
        this.diskSizeGB = diskSizeGB;
        this.lun = lun;
        this.managedDisk = managedDisk;
        this.name = name;
    }

    public Optional<String> getCaching() {
        return Optional.ofNullable(this.caching);
    }
    public Optional<ApiEntityReferenceResponse> getDiskRestorePoint() {
        return Optional.ofNullable(this.diskRestorePoint);
    }
    public Optional<Integer> getDiskSizeGB() {
        return Optional.ofNullable(this.diskSizeGB);
    }
    public Optional<Integer> getLun() {
        return Optional.ofNullable(this.lun);
    }
    public Optional<ManagedDiskParametersResponse> getManagedDisk() {
        return Optional.ofNullable(this.managedDisk);
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RestorePointSourceVMDataDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String caching;
        private @Nullable ApiEntityReferenceResponse diskRestorePoint;
        private @Nullable Integer diskSizeGB;
        private @Nullable Integer lun;
        private @Nullable ManagedDiskParametersResponse managedDisk;
        private @Nullable String name;

        public Builder() {
    	      // Empty
        }

        public Builder(RestorePointSourceVMDataDiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caching = defaults.caching;
    	      this.diskRestorePoint = defaults.diskRestorePoint;
    	      this.diskSizeGB = defaults.diskSizeGB;
    	      this.lun = defaults.lun;
    	      this.managedDisk = defaults.managedDisk;
    	      this.name = defaults.name;
        }

        public Builder setCaching(@Nullable String caching) {
            this.caching = caching;
            return this;
        }

        public Builder setDiskRestorePoint(@Nullable ApiEntityReferenceResponse diskRestorePoint) {
            this.diskRestorePoint = diskRestorePoint;
            return this;
        }

        public Builder setDiskSizeGB(@Nullable Integer diskSizeGB) {
            this.diskSizeGB = diskSizeGB;
            return this;
        }

        public Builder setLun(@Nullable Integer lun) {
            this.lun = lun;
            return this;
        }

        public Builder setManagedDisk(@Nullable ManagedDiskParametersResponse managedDisk) {
            this.managedDisk = managedDisk;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public RestorePointSourceVMDataDiskResponse build() {
            return new RestorePointSourceVMDataDiskResponse(caching, diskRestorePoint, diskSizeGB, lun, managedDisk, name);
        }
    }
}
