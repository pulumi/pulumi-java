// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContentPathMapResponse {
    /**
     * Content type.
     * 
     */
    private final @Nullable String contentType;
    /**
     * The path to the content.
     * 
     */
    private final @Nullable String path;

    @CustomType.Constructor
    private ContentPathMapResponse(
        @CustomType.Parameter("contentType") @Nullable String contentType,
        @CustomType.Parameter("path") @Nullable String path) {
        this.contentType = contentType;
        this.path = path;
    }

    /**
     * Content type.
     * 
    */
    public Optional<String> getContentType() {
        return Optional.ofNullable(this.contentType);
    }
    /**
     * The path to the content.
     * 
    */
    public Optional<String> getPath() {
        return Optional.ofNullable(this.path);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContentPathMapResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String contentType;
        private @Nullable String path;

        public Builder() {
    	      // Empty
        }

        public Builder(ContentPathMapResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.path = defaults.path;
        }

        public Builder contentType(@Nullable String contentType) {
            this.contentType = contentType;
            return this;
        }
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }        public ContentPathMapResponse build() {
            return new ContentPathMapResponse(contentType, path);
        }
    }
}
