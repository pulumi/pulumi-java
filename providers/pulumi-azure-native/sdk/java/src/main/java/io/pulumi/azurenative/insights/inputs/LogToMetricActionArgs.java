// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.azurenative.insights.inputs.CriteriaArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Specify action need to be taken when rule type is converting log to metric
 * 
 */
public final class LogToMetricActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final LogToMetricActionArgs Empty = new LogToMetricActionArgs();

    /**
     * Criteria of Metric
     * 
     */
    @InputImport(name="criteria", required=true)
    private final Input<List<CriteriaArgs>> criteria;

    public Input<List<CriteriaArgs>> getCriteria() {
        return this.criteria;
    }

    /**
     * Specifies the action. Supported values - AlertingAction, LogToMetricAction
     * Expected value is 'Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction'.
     * 
     */
    @InputImport(name="odataType", required=true)
    private final Input<String> odataType;

    public Input<String> getOdataType() {
        return this.odataType;
    }

    public LogToMetricActionArgs(
        Input<List<CriteriaArgs>> criteria,
        Input<String> odataType) {
        this.criteria = Objects.requireNonNull(criteria, "expected parameter 'criteria' to be non-null");
        this.odataType = Objects.requireNonNull(odataType, "expected parameter 'odataType' to be non-null");
    }

    private LogToMetricActionArgs() {
        this.criteria = Input.empty();
        this.odataType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogToMetricActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<CriteriaArgs>> criteria;
        private Input<String> odataType;

        public Builder() {
    	      // Empty
        }

        public Builder(LogToMetricActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.criteria = defaults.criteria;
    	      this.odataType = defaults.odataType;
        }

        public Builder setCriteria(Input<List<CriteriaArgs>> criteria) {
            this.criteria = Objects.requireNonNull(criteria);
            return this;
        }

        public Builder setCriteria(List<CriteriaArgs> criteria) {
            this.criteria = Input.of(Objects.requireNonNull(criteria));
            return this;
        }

        public Builder setOdataType(Input<String> odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder setOdataType(String odataType) {
            this.odataType = Input.of(Objects.requireNonNull(odataType));
            return this;
        }

        public LogToMetricActionArgs build() {
            return new LogToMetricActionArgs(criteria, odataType);
        }
    }
}
