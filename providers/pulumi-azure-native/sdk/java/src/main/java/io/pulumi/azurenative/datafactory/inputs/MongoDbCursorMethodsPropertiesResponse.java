// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MongoDbCursorMethodsPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final MongoDbCursorMethodsPropertiesResponse Empty = new MongoDbCursorMethodsPropertiesResponse();

    @InputImport(name="limit")
    private final @Nullable Object limit;

    public Optional<Object> getLimit() {
        return this.limit == null ? Optional.empty() : Optional.ofNullable(this.limit);
    }

    @InputImport(name="project")
    private final @Nullable Object project;

    public Optional<Object> getProject() {
        return this.project == null ? Optional.empty() : Optional.ofNullable(this.project);
    }

    @InputImport(name="skip")
    private final @Nullable Object skip;

    public Optional<Object> getSkip() {
        return this.skip == null ? Optional.empty() : Optional.ofNullable(this.skip);
    }

    @InputImport(name="sort")
    private final @Nullable Object sort;

    public Optional<Object> getSort() {
        return this.sort == null ? Optional.empty() : Optional.ofNullable(this.sort);
    }

    public MongoDbCursorMethodsPropertiesResponse(
        @Nullable Object limit,
        @Nullable Object project,
        @Nullable Object skip,
        @Nullable Object sort) {
        this.limit = limit;
        this.project = project;
        this.skip = skip;
        this.sort = sort;
    }

    private MongoDbCursorMethodsPropertiesResponse() {
        this.limit = null;
        this.project = null;
        this.skip = null;
        this.sort = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MongoDbCursorMethodsPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object limit;
        private @Nullable Object project;
        private @Nullable Object skip;
        private @Nullable Object sort;

        public Builder() {
    	      // Empty
        }

        public Builder(MongoDbCursorMethodsPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.limit = defaults.limit;
    	      this.project = defaults.project;
    	      this.skip = defaults.skip;
    	      this.sort = defaults.sort;
        }

        public Builder setLimit(@Nullable Object limit) {
            this.limit = limit;
            return this;
        }

        public Builder setProject(@Nullable Object project) {
            this.project = project;
            return this;
        }

        public Builder setSkip(@Nullable Object skip) {
            this.skip = skip;
            return this;
        }

        public Builder setSort(@Nullable Object sort) {
            this.sort = sort;
            return this;
        }

        public MongoDbCursorMethodsPropertiesResponse build() {
            return new MongoDbCursorMethodsPropertiesResponse(limit, project, skip, sort);
        }
    }
}
