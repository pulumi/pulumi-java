// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AzureFileShareConfigurationResponse {
    private final String accountKey;
    private final String accountName;
    /**
     * This is of the form 'https://{account}.file.core.windows.net/'.
     * 
     */
    private final String azureFileUrl;
    /**
     * These are 'net use' options in Windows and 'mount' options in Linux.
     * 
     */
    private final @Nullable String mountOptions;
    /**
     * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
     * 
     */
    private final String relativeMountPath;

    @OutputCustomType.Constructor
    private AzureFileShareConfigurationResponse(
        @OutputCustomType.Parameter("accountKey") String accountKey,
        @OutputCustomType.Parameter("accountName") String accountName,
        @OutputCustomType.Parameter("azureFileUrl") String azureFileUrl,
        @OutputCustomType.Parameter("mountOptions") @Nullable String mountOptions,
        @OutputCustomType.Parameter("relativeMountPath") String relativeMountPath) {
        this.accountKey = accountKey;
        this.accountName = accountName;
        this.azureFileUrl = azureFileUrl;
        this.mountOptions = mountOptions;
        this.relativeMountPath = relativeMountPath;
    }

    public String getAccountKey() {
        return this.accountKey;
    }
    public String getAccountName() {
        return this.accountName;
    }
    /**
     * This is of the form 'https://{account}.file.core.windows.net/'.
     * 
    */
    public String getAzureFileUrl() {
        return this.azureFileUrl;
    }
    /**
     * These are 'net use' options in Windows and 'mount' options in Linux.
     * 
    */
    public Optional<String> getMountOptions() {
        return Optional.ofNullable(this.mountOptions);
    }
    /**
     * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
     * 
    */
    public String getRelativeMountPath() {
        return this.relativeMountPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureFileShareConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accountKey;
        private String accountName;
        private String azureFileUrl;
        private @Nullable String mountOptions;
        private String relativeMountPath;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureFileShareConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountKey = defaults.accountKey;
    	      this.accountName = defaults.accountName;
    	      this.azureFileUrl = defaults.azureFileUrl;
    	      this.mountOptions = defaults.mountOptions;
    	      this.relativeMountPath = defaults.relativeMountPath;
        }

        public Builder accountKey(String accountKey) {
            this.accountKey = Objects.requireNonNull(accountKey);
            return this;
        }

        public Builder accountName(String accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder azureFileUrl(String azureFileUrl) {
            this.azureFileUrl = Objects.requireNonNull(azureFileUrl);
            return this;
        }

        public Builder mountOptions(@Nullable String mountOptions) {
            this.mountOptions = mountOptions;
            return this;
        }

        public Builder relativeMountPath(String relativeMountPath) {
            this.relativeMountPath = Objects.requireNonNull(relativeMountPath);
            return this;
        }
        public AzureFileShareConfigurationResponse build() {
            return new AzureFileShareConfigurationResponse(accountKey, accountName, azureFileUrl, mountOptions, relativeMountPath);
        }
    }
}
