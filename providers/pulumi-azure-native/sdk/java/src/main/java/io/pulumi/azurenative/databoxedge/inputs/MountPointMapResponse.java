// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The share mount point.
 * 
 */
public final class MountPointMapResponse extends io.pulumi.resources.InvokeArgs {

    public static final MountPointMapResponse Empty = new MountPointMapResponse();

    /**
     * Mount point for the share.
     * 
     */
    @Import(name="mountPoint", required=true)
      private final String mountPoint;

    public String getMountPoint() {
        return this.mountPoint;
    }

    /**
     * Mounting type.
     * 
     */
    @Import(name="mountType", required=true)
      private final String mountType;

    public String getMountType() {
        return this.mountType;
    }

    /**
     * ID of the role to which share is mounted.
     * 
     */
    @Import(name="roleId", required=true)
      private final String roleId;

    public String getRoleId() {
        return this.roleId;
    }

    /**
     * Role type.
     * 
     */
    @Import(name="roleType", required=true)
      private final String roleType;

    public String getRoleType() {
        return this.roleType;
    }

    /**
     * ID of the share mounted to the role VM.
     * 
     */
    @Import(name="shareId", required=true)
      private final String shareId;

    public String getShareId() {
        return this.shareId;
    }

    public MountPointMapResponse(
        String mountPoint,
        String mountType,
        String roleId,
        String roleType,
        String shareId) {
        this.mountPoint = Objects.requireNonNull(mountPoint, "expected parameter 'mountPoint' to be non-null");
        this.mountType = Objects.requireNonNull(mountType, "expected parameter 'mountType' to be non-null");
        this.roleId = Objects.requireNonNull(roleId, "expected parameter 'roleId' to be non-null");
        this.roleType = Objects.requireNonNull(roleType, "expected parameter 'roleType' to be non-null");
        this.shareId = Objects.requireNonNull(shareId, "expected parameter 'shareId' to be non-null");
    }

    private MountPointMapResponse() {
        this.mountPoint = null;
        this.mountType = null;
        this.roleId = null;
        this.roleType = null;
        this.shareId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MountPointMapResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String mountPoint;
        private String mountType;
        private String roleId;
        private String roleType;
        private String shareId;

        public Builder() {
    	      // Empty
        }

        public Builder(MountPointMapResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mountPoint = defaults.mountPoint;
    	      this.mountType = defaults.mountType;
    	      this.roleId = defaults.roleId;
    	      this.roleType = defaults.roleType;
    	      this.shareId = defaults.shareId;
        }

        public Builder mountPoint(String mountPoint) {
            this.mountPoint = Objects.requireNonNull(mountPoint);
            return this;
        }

        public Builder mountType(String mountType) {
            this.mountType = Objects.requireNonNull(mountType);
            return this;
        }

        public Builder roleId(String roleId) {
            this.roleId = Objects.requireNonNull(roleId);
            return this;
        }

        public Builder roleType(String roleType) {
            this.roleType = Objects.requireNonNull(roleType);
            return this;
        }

        public Builder shareId(String shareId) {
            this.shareId = Objects.requireNonNull(shareId);
            return this;
        }
        public MountPointMapResponse build() {
            return new MountPointMapResponse(mountPoint, mountType, roleId, roleType, shareId);
        }
    }
}
