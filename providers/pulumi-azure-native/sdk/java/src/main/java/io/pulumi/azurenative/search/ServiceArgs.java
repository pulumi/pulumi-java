// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.search;

import io.pulumi.azurenative.search.enums.HostingMode;
import io.pulumi.azurenative.search.enums.PublicNetworkAccess;
import io.pulumi.azurenative.search.inputs.IdentityArgs;
import io.pulumi.azurenative.search.inputs.NetworkRuleSetArgs;
import io.pulumi.azurenative.search.inputs.SkuArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceArgs Empty = new ServiceArgs();

    /**
     * Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
     * 
     */
    @Import(name="hostingMode")
      private final @Nullable Output<HostingMode> hostingMode;

    public Output<HostingMode> getHostingMode() {
        return this.hostingMode == null ? Codegen.empty() : this.hostingMode;
    }

    /**
     * The identity of the resource.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<IdentityArgs> identity;

    public Output<IdentityArgs> getIdentity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Network specific rules that determine how the Azure Cognitive Search service may be reached.
     * 
     */
    @Import(name="networkRuleSet")
      private final @Nullable Output<NetworkRuleSetArgs> networkRuleSet;

    public Output<NetworkRuleSetArgs> getNetworkRuleSet() {
        return this.networkRuleSet == null ? Codegen.empty() : this.networkRuleSet;
    }

    /**
     * The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.
     * 
     */
    @Import(name="partitionCount")
      private final @Nullable Output<Integer> partitionCount;

    public Output<Integer> getPartitionCount() {
        return this.partitionCount == null ? Codegen.empty() : this.partitionCount;
    }

    /**
     * This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
     * 
     */
    @Import(name="publicNetworkAccess")
      private final @Nullable Output<PublicNetworkAccess> publicNetworkAccess;

    public Output<PublicNetworkAccess> getPublicNetworkAccess() {
        return this.publicNetworkAccess == null ? Codegen.empty() : this.publicNetworkAccess;
    }

    /**
     * The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.
     * 
     */
    @Import(name="replicaCount")
      private final @Nullable Output<Integer> replicaCount;

    public Output<Integer> getReplicaCount() {
        return this.replicaCount == null ? Codegen.empty() : this.replicaCount;
    }

    /**
     * The name of the resource group within the current subscription. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Azure Cognitive Search service to create or update. Search service names must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60 characters in length. Search service names must be globally unique since they are part of the service URI (https://<name>.search.windows.net). You cannot change the service name after the service is created.
     * 
     */
    @Import(name="searchServiceName")
      private final @Nullable Output<String> searchServiceName;

    public Output<String> getSearchServiceName() {
        return this.searchServiceName == null ? Codegen.empty() : this.searchServiceName;
    }

    /**
     * The SKU of the Search Service, which determines price tier and capacity limits. This property is required when creating a new Search Service.
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<SkuArgs> sku;

    public Output<SkuArgs> getSku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public ServiceArgs(
        @Nullable Output<HostingMode> hostingMode,
        @Nullable Output<IdentityArgs> identity,
        @Nullable Output<String> location,
        @Nullable Output<NetworkRuleSetArgs> networkRuleSet,
        @Nullable Output<Integer> partitionCount,
        @Nullable Output<PublicNetworkAccess> publicNetworkAccess,
        @Nullable Output<Integer> replicaCount,
        Output<String> resourceGroupName,
        @Nullable Output<String> searchServiceName,
        @Nullable Output<SkuArgs> sku,
        @Nullable Output<Map<String,String>> tags) {
        this.hostingMode = hostingMode == null ? Codegen.ofNullable(io.pulumi.azurenative.search.enums.HostingMode.Default_) : hostingMode;
        this.identity = identity;
        this.location = location;
        this.networkRuleSet = networkRuleSet;
        this.partitionCount = partitionCount == null ? Codegen.ofNullable(1) : partitionCount;
        this.publicNetworkAccess = publicNetworkAccess == null ? Codegen.ofNullable(io.pulumi.azurenative.search.enums.PublicNetworkAccess.Enabled) : publicNetworkAccess;
        this.replicaCount = replicaCount == null ? Codegen.ofNullable(1) : replicaCount;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.searchServiceName = searchServiceName;
        this.sku = sku;
        this.tags = tags;
    }

    private ServiceArgs() {
        this.hostingMode = Codegen.empty();
        this.identity = Codegen.empty();
        this.location = Codegen.empty();
        this.networkRuleSet = Codegen.empty();
        this.partitionCount = Codegen.empty();
        this.publicNetworkAccess = Codegen.empty();
        this.replicaCount = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.searchServiceName = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<HostingMode> hostingMode;
        private @Nullable Output<IdentityArgs> identity;
        private @Nullable Output<String> location;
        private @Nullable Output<NetworkRuleSetArgs> networkRuleSet;
        private @Nullable Output<Integer> partitionCount;
        private @Nullable Output<PublicNetworkAccess> publicNetworkAccess;
        private @Nullable Output<Integer> replicaCount;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> searchServiceName;
        private @Nullable Output<SkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostingMode = defaults.hostingMode;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.networkRuleSet = defaults.networkRuleSet;
    	      this.partitionCount = defaults.partitionCount;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.replicaCount = defaults.replicaCount;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.searchServiceName = defaults.searchServiceName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
        }

        public Builder hostingMode(@Nullable Output<HostingMode> hostingMode) {
            this.hostingMode = hostingMode;
            return this;
        }
        public Builder hostingMode(@Nullable HostingMode hostingMode) {
            this.hostingMode = Codegen.ofNullable(hostingMode);
            return this;
        }
        public Builder identity(@Nullable Output<IdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable IdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder networkRuleSet(@Nullable Output<NetworkRuleSetArgs> networkRuleSet) {
            this.networkRuleSet = networkRuleSet;
            return this;
        }
        public Builder networkRuleSet(@Nullable NetworkRuleSetArgs networkRuleSet) {
            this.networkRuleSet = Codegen.ofNullable(networkRuleSet);
            return this;
        }
        public Builder partitionCount(@Nullable Output<Integer> partitionCount) {
            this.partitionCount = partitionCount;
            return this;
        }
        public Builder partitionCount(@Nullable Integer partitionCount) {
            this.partitionCount = Codegen.ofNullable(partitionCount);
            return this;
        }
        public Builder publicNetworkAccess(@Nullable Output<PublicNetworkAccess> publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        public Builder publicNetworkAccess(@Nullable PublicNetworkAccess publicNetworkAccess) {
            this.publicNetworkAccess = Codegen.ofNullable(publicNetworkAccess);
            return this;
        }
        public Builder replicaCount(@Nullable Output<Integer> replicaCount) {
            this.replicaCount = replicaCount;
            return this;
        }
        public Builder replicaCount(@Nullable Integer replicaCount) {
            this.replicaCount = Codegen.ofNullable(replicaCount);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder searchServiceName(@Nullable Output<String> searchServiceName) {
            this.searchServiceName = searchServiceName;
            return this;
        }
        public Builder searchServiceName(@Nullable String searchServiceName) {
            this.searchServiceName = Codegen.ofNullable(searchServiceName);
            return this;
        }
        public Builder sku(@Nullable Output<SkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable SkuArgs sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public ServiceArgs build() {
            return new ServiceArgs(hostingMode, identity, location, networkRuleSet, partitionCount, publicNetworkAccess, replicaCount, resourceGroupName, searchServiceName, sku, tags);
        }
    }
}
