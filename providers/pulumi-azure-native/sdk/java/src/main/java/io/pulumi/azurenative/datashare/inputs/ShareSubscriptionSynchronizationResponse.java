// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datashare.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * A ShareSubscriptionSynchronization data transfer object.
 * 
 */
public final class ShareSubscriptionSynchronizationResponse extends io.pulumi.resources.InvokeArgs {

    public static final ShareSubscriptionSynchronizationResponse Empty = new ShareSubscriptionSynchronizationResponse();

    /**
     * Synchronization duration
     * 
     */
    @InputImport(name="durationMs", required=true)
      private final Integer durationMs;

    public Integer getDurationMs() {
        return this.durationMs;
    }

    /**
     * End time of synchronization
     * 
     */
    @InputImport(name="endTime", required=true)
      private final String endTime;

    public String getEndTime() {
        return this.endTime;
    }

    /**
     * message of Synchronization
     * 
     */
    @InputImport(name="message", required=true)
      private final String message;

    public String getMessage() {
        return this.message;
    }

    /**
     * start time of synchronization
     * 
     */
    @InputImport(name="startTime", required=true)
      private final String startTime;

    public String getStartTime() {
        return this.startTime;
    }

    /**
     * Raw Status
     * 
     */
    @InputImport(name="status", required=true)
      private final String status;

    public String getStatus() {
        return this.status;
    }

    /**
     * Synchronization id
     * 
     */
    @InputImport(name="synchronizationId", required=true)
      private final String synchronizationId;

    public String getSynchronizationId() {
        return this.synchronizationId;
    }

    /**
     * Synchronization Mode
     * 
     */
    @InputImport(name="synchronizationMode", required=true)
      private final String synchronizationMode;

    public String getSynchronizationMode() {
        return this.synchronizationMode;
    }

    public ShareSubscriptionSynchronizationResponse(
        Integer durationMs,
        String endTime,
        String message,
        String startTime,
        String status,
        String synchronizationId,
        String synchronizationMode) {
        this.durationMs = Objects.requireNonNull(durationMs, "expected parameter 'durationMs' to be non-null");
        this.endTime = Objects.requireNonNull(endTime, "expected parameter 'endTime' to be non-null");
        this.message = Objects.requireNonNull(message, "expected parameter 'message' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
        this.synchronizationId = Objects.requireNonNull(synchronizationId, "expected parameter 'synchronizationId' to be non-null");
        this.synchronizationMode = Objects.requireNonNull(synchronizationMode, "expected parameter 'synchronizationMode' to be non-null");
    }

    private ShareSubscriptionSynchronizationResponse() {
        this.durationMs = null;
        this.endTime = null;
        this.message = null;
        this.startTime = null;
        this.status = null;
        this.synchronizationId = null;
        this.synchronizationMode = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ShareSubscriptionSynchronizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer durationMs;
        private String endTime;
        private String message;
        private String startTime;
        private String status;
        private String synchronizationId;
        private String synchronizationMode;

        public Builder() {
    	      // Empty
        }

        public Builder(ShareSubscriptionSynchronizationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.durationMs = defaults.durationMs;
    	      this.endTime = defaults.endTime;
    	      this.message = defaults.message;
    	      this.startTime = defaults.startTime;
    	      this.status = defaults.status;
    	      this.synchronizationId = defaults.synchronizationId;
    	      this.synchronizationMode = defaults.synchronizationMode;
        }

        public Builder durationMs(Integer durationMs) {
            this.durationMs = Objects.requireNonNull(durationMs);
            return this;
        }

        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }

        public Builder message(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }

        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder synchronizationId(String synchronizationId) {
            this.synchronizationId = Objects.requireNonNull(synchronizationId);
            return this;
        }

        public Builder synchronizationMode(String synchronizationMode) {
            this.synchronizationMode = Objects.requireNonNull(synchronizationMode);
            return this;
        }
        public ShareSubscriptionSynchronizationResponse build() {
            return new ShareSubscriptionSynchronizationResponse(durationMs, endTime, message, startTime, status, synchronizationId, synchronizationMode);
        }
    }
}
