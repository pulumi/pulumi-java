// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.healthcareapis.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Authentication configuration information
 * 
 */
public final class DicomServiceAuthenticationConfigurationResponse extends io.pulumi.resources.InvokeArgs {

    public static final DicomServiceAuthenticationConfigurationResponse Empty = new DicomServiceAuthenticationConfigurationResponse();

    /**
     * The audiences for the service
     * 
     */
    @InputImport(name="audiences", required=true)
    private final List<String> audiences;

    public List<String> getAudiences() {
        return this.audiences;
    }

    /**
     * The authority url for the service
     * 
     */
    @InputImport(name="authority", required=true)
    private final String authority;

    public String getAuthority() {
        return this.authority;
    }

    public DicomServiceAuthenticationConfigurationResponse(
        List<String> audiences,
        String authority) {
        this.audiences = Objects.requireNonNull(audiences, "expected parameter 'audiences' to be non-null");
        this.authority = Objects.requireNonNull(authority, "expected parameter 'authority' to be non-null");
    }

    private DicomServiceAuthenticationConfigurationResponse() {
        this.audiences = List.of();
        this.authority = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DicomServiceAuthenticationConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> audiences;
        private String authority;

        public Builder() {
    	      // Empty
        }

        public Builder(DicomServiceAuthenticationConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audiences = defaults.audiences;
    	      this.authority = defaults.authority;
        }

        public Builder setAudiences(List<String> audiences) {
            this.audiences = Objects.requireNonNull(audiences);
            return this;
        }

        public Builder setAuthority(String authority) {
            this.authority = Objects.requireNonNull(authority);
            return this;
        }

        public DicomServiceAuthenticationConfigurationResponse build() {
            return new DicomServiceAuthenticationConfigurationResponse(audiences, authority);
        }
    }
}
