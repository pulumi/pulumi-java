// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.inputs;

import io.pulumi.azurenative.containerregistry.enums.TokenCertificateName;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The properties of a certificate used for authenticating a token.
 * 
 */
public final class TokenCertificateArgs extends io.pulumi.resources.ResourceArgs {

    public static final TokenCertificateArgs Empty = new TokenCertificateArgs();

    /**
     * Base 64 encoded string of the public certificate1 in PEM format that will be used for authenticating the token.
     * 
     */
    @Import(name="encodedPemCertificate")
      private final @Nullable Output<String> encodedPemCertificate;

    public Output<String> getEncodedPemCertificate() {
        return this.encodedPemCertificate == null ? Output.empty() : this.encodedPemCertificate;
    }

    /**
     * The expiry datetime of the certificate.
     * 
     */
    @Import(name="expiry")
      private final @Nullable Output<String> expiry;

    public Output<String> getExpiry() {
        return this.expiry == null ? Output.empty() : this.expiry;
    }

    @Import(name="name")
      private final @Nullable Output<Either<String,TokenCertificateName>> name;

    public Output<Either<String,TokenCertificateName>> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The thumbprint of the certificate.
     * 
     */
    @Import(name="thumbprint")
      private final @Nullable Output<String> thumbprint;

    public Output<String> getThumbprint() {
        return this.thumbprint == null ? Output.empty() : this.thumbprint;
    }

    public TokenCertificateArgs(
        @Nullable Output<String> encodedPemCertificate,
        @Nullable Output<String> expiry,
        @Nullable Output<Either<String,TokenCertificateName>> name,
        @Nullable Output<String> thumbprint) {
        this.encodedPemCertificate = encodedPemCertificate;
        this.expiry = expiry;
        this.name = name;
        this.thumbprint = thumbprint;
    }

    private TokenCertificateArgs() {
        this.encodedPemCertificate = Output.empty();
        this.expiry = Output.empty();
        this.name = Output.empty();
        this.thumbprint = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TokenCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> encodedPemCertificate;
        private @Nullable Output<String> expiry;
        private @Nullable Output<Either<String,TokenCertificateName>> name;
        private @Nullable Output<String> thumbprint;

        public Builder() {
    	      // Empty
        }

        public Builder(TokenCertificateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encodedPemCertificate = defaults.encodedPemCertificate;
    	      this.expiry = defaults.expiry;
    	      this.name = defaults.name;
    	      this.thumbprint = defaults.thumbprint;
        }

        public Builder encodedPemCertificate(@Nullable Output<String> encodedPemCertificate) {
            this.encodedPemCertificate = encodedPemCertificate;
            return this;
        }

        public Builder encodedPemCertificate(@Nullable String encodedPemCertificate) {
            this.encodedPemCertificate = Output.ofNullable(encodedPemCertificate);
            return this;
        }

        public Builder expiry(@Nullable Output<String> expiry) {
            this.expiry = expiry;
            return this;
        }

        public Builder expiry(@Nullable String expiry) {
            this.expiry = Output.ofNullable(expiry);
            return this;
        }

        public Builder name(@Nullable Output<Either<String,TokenCertificateName>> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable Either<String,TokenCertificateName> name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder thumbprint(@Nullable Output<String> thumbprint) {
            this.thumbprint = thumbprint;
            return this;
        }

        public Builder thumbprint(@Nullable String thumbprint) {
            this.thumbprint = Output.ofNullable(thumbprint);
            return this;
        }
        public TokenCertificateArgs build() {
            return new TokenCertificateArgs(encodedPemCertificate, expiry, name, thumbprint);
        }
    }
}
