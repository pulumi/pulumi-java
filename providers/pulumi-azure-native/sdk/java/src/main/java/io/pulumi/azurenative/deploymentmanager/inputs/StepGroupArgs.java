// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.deploymentmanager.inputs;

import io.pulumi.azurenative.deploymentmanager.inputs.PrePostStepArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The properties that define a Step group in a rollout.
 * 
 */
public final class StepGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final StepGroupArgs Empty = new StepGroupArgs();

    /**
     * The list of step group names on which this step group depends on.
     * 
     */
    @Import(name="dependsOnStepGroups")
      private final @Nullable Output<List<String>> dependsOnStepGroups;

    public Output<List<String>> getDependsOnStepGroups() {
        return this.dependsOnStepGroups == null ? Codegen.empty() : this.dependsOnStepGroups;
    }

    /**
     * The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
     * 
     */
    @Import(name="deploymentTargetId", required=true)
      private final Output<String> deploymentTargetId;

    public Output<String> getDeploymentTargetId() {
        return this.deploymentTargetId;
    }

    /**
     * The name of the step group.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    /**
     * The list of steps to be run after deploying the target.
     * 
     */
    @Import(name="postDeploymentSteps")
      private final @Nullable Output<List<PrePostStepArgs>> postDeploymentSteps;

    public Output<List<PrePostStepArgs>> getPostDeploymentSteps() {
        return this.postDeploymentSteps == null ? Codegen.empty() : this.postDeploymentSteps;
    }

    /**
     * The list of steps to be run before deploying the target.
     * 
     */
    @Import(name="preDeploymentSteps")
      private final @Nullable Output<List<PrePostStepArgs>> preDeploymentSteps;

    public Output<List<PrePostStepArgs>> getPreDeploymentSteps() {
        return this.preDeploymentSteps == null ? Codegen.empty() : this.preDeploymentSteps;
    }

    public StepGroupArgs(
        @Nullable Output<List<String>> dependsOnStepGroups,
        Output<String> deploymentTargetId,
        Output<String> name,
        @Nullable Output<List<PrePostStepArgs>> postDeploymentSteps,
        @Nullable Output<List<PrePostStepArgs>> preDeploymentSteps) {
        this.dependsOnStepGroups = dependsOnStepGroups;
        this.deploymentTargetId = Objects.requireNonNull(deploymentTargetId, "expected parameter 'deploymentTargetId' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.postDeploymentSteps = postDeploymentSteps;
        this.preDeploymentSteps = preDeploymentSteps;
    }

    private StepGroupArgs() {
        this.dependsOnStepGroups = Codegen.empty();
        this.deploymentTargetId = Codegen.empty();
        this.name = Codegen.empty();
        this.postDeploymentSteps = Codegen.empty();
        this.preDeploymentSteps = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StepGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> dependsOnStepGroups;
        private Output<String> deploymentTargetId;
        private Output<String> name;
        private @Nullable Output<List<PrePostStepArgs>> postDeploymentSteps;
        private @Nullable Output<List<PrePostStepArgs>> preDeploymentSteps;

        public Builder() {
    	      // Empty
        }

        public Builder(StepGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dependsOnStepGroups = defaults.dependsOnStepGroups;
    	      this.deploymentTargetId = defaults.deploymentTargetId;
    	      this.name = defaults.name;
    	      this.postDeploymentSteps = defaults.postDeploymentSteps;
    	      this.preDeploymentSteps = defaults.preDeploymentSteps;
        }

        public Builder dependsOnStepGroups(@Nullable Output<List<String>> dependsOnStepGroups) {
            this.dependsOnStepGroups = dependsOnStepGroups;
            return this;
        }
        public Builder dependsOnStepGroups(@Nullable List<String> dependsOnStepGroups) {
            this.dependsOnStepGroups = Codegen.ofNullable(dependsOnStepGroups);
            return this;
        }
        public Builder dependsOnStepGroups(String... dependsOnStepGroups) {
            return dependsOnStepGroups(List.of(dependsOnStepGroups));
        }
        public Builder deploymentTargetId(Output<String> deploymentTargetId) {
            this.deploymentTargetId = Objects.requireNonNull(deploymentTargetId);
            return this;
        }
        public Builder deploymentTargetId(String deploymentTargetId) {
            this.deploymentTargetId = Output.of(Objects.requireNonNull(deploymentTargetId));
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder postDeploymentSteps(@Nullable Output<List<PrePostStepArgs>> postDeploymentSteps) {
            this.postDeploymentSteps = postDeploymentSteps;
            return this;
        }
        public Builder postDeploymentSteps(@Nullable List<PrePostStepArgs> postDeploymentSteps) {
            this.postDeploymentSteps = Codegen.ofNullable(postDeploymentSteps);
            return this;
        }
        public Builder postDeploymentSteps(PrePostStepArgs... postDeploymentSteps) {
            return postDeploymentSteps(List.of(postDeploymentSteps));
        }
        public Builder preDeploymentSteps(@Nullable Output<List<PrePostStepArgs>> preDeploymentSteps) {
            this.preDeploymentSteps = preDeploymentSteps;
            return this;
        }
        public Builder preDeploymentSteps(@Nullable List<PrePostStepArgs> preDeploymentSteps) {
            this.preDeploymentSteps = Codegen.ofNullable(preDeploymentSteps);
            return this;
        }
        public Builder preDeploymentSteps(PrePostStepArgs... preDeploymentSteps) {
            return preDeploymentSteps(List.of(preDeploymentSteps));
        }        public StepGroupArgs build() {
            return new StepGroupArgs(dependsOnStepGroups, deploymentTargetId, name, postDeploymentSteps, preDeploymentSteps);
        }
    }
}
