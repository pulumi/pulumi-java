// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.azurenative.recoveryservices.enums.BackupItemType;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Additional information of the container.
 * 
 */
public final class MabContainerExtendedInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final MabContainerExtendedInfoArgs Empty = new MabContainerExtendedInfoArgs();

    /**
     * Type of backup items associated with this container.
     * 
     */
    @InputImport(name="backupItemType")
    private final @Nullable Input<Either<String,BackupItemType>> backupItemType;

    public Input<Either<String,BackupItemType>> getBackupItemType() {
        return this.backupItemType == null ? Input.empty() : this.backupItemType;
    }

    /**
     * List of backup items associated with this container.
     * 
     */
    @InputImport(name="backupItems")
    private final @Nullable Input<List<String>> backupItems;

    public Input<List<String>> getBackupItems() {
        return this.backupItems == null ? Input.empty() : this.backupItems;
    }

    /**
     * Latest backup status of this container.
     * 
     */
    @InputImport(name="lastBackupStatus")
    private final @Nullable Input<String> lastBackupStatus;

    public Input<String> getLastBackupStatus() {
        return this.lastBackupStatus == null ? Input.empty() : this.lastBackupStatus;
    }

    /**
     * Time stamp when this container was refreshed.
     * 
     */
    @InputImport(name="lastRefreshedAt")
    private final @Nullable Input<String> lastRefreshedAt;

    public Input<String> getLastRefreshedAt() {
        return this.lastRefreshedAt == null ? Input.empty() : this.lastRefreshedAt;
    }

    /**
     * Backup policy associated with this container.
     * 
     */
    @InputImport(name="policyName")
    private final @Nullable Input<String> policyName;

    public Input<String> getPolicyName() {
        return this.policyName == null ? Input.empty() : this.policyName;
    }

    public MabContainerExtendedInfoArgs(
        @Nullable Input<Either<String,BackupItemType>> backupItemType,
        @Nullable Input<List<String>> backupItems,
        @Nullable Input<String> lastBackupStatus,
        @Nullable Input<String> lastRefreshedAt,
        @Nullable Input<String> policyName) {
        this.backupItemType = backupItemType;
        this.backupItems = backupItems;
        this.lastBackupStatus = lastBackupStatus;
        this.lastRefreshedAt = lastRefreshedAt;
        this.policyName = policyName;
    }

    private MabContainerExtendedInfoArgs() {
        this.backupItemType = Input.empty();
        this.backupItems = Input.empty();
        this.lastBackupStatus = Input.empty();
        this.lastRefreshedAt = Input.empty();
        this.policyName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MabContainerExtendedInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,BackupItemType>> backupItemType;
        private @Nullable Input<List<String>> backupItems;
        private @Nullable Input<String> lastBackupStatus;
        private @Nullable Input<String> lastRefreshedAt;
        private @Nullable Input<String> policyName;

        public Builder() {
    	      // Empty
        }

        public Builder(MabContainerExtendedInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupItemType = defaults.backupItemType;
    	      this.backupItems = defaults.backupItems;
    	      this.lastBackupStatus = defaults.lastBackupStatus;
    	      this.lastRefreshedAt = defaults.lastRefreshedAt;
    	      this.policyName = defaults.policyName;
        }

        public Builder setBackupItemType(@Nullable Input<Either<String,BackupItemType>> backupItemType) {
            this.backupItemType = backupItemType;
            return this;
        }

        public Builder setBackupItemType(@Nullable Either<String,BackupItemType> backupItemType) {
            this.backupItemType = Input.ofNullable(backupItemType);
            return this;
        }

        public Builder setBackupItems(@Nullable Input<List<String>> backupItems) {
            this.backupItems = backupItems;
            return this;
        }

        public Builder setBackupItems(@Nullable List<String> backupItems) {
            this.backupItems = Input.ofNullable(backupItems);
            return this;
        }

        public Builder setLastBackupStatus(@Nullable Input<String> lastBackupStatus) {
            this.lastBackupStatus = lastBackupStatus;
            return this;
        }

        public Builder setLastBackupStatus(@Nullable String lastBackupStatus) {
            this.lastBackupStatus = Input.ofNullable(lastBackupStatus);
            return this;
        }

        public Builder setLastRefreshedAt(@Nullable Input<String> lastRefreshedAt) {
            this.lastRefreshedAt = lastRefreshedAt;
            return this;
        }

        public Builder setLastRefreshedAt(@Nullable String lastRefreshedAt) {
            this.lastRefreshedAt = Input.ofNullable(lastRefreshedAt);
            return this;
        }

        public Builder setPolicyName(@Nullable Input<String> policyName) {
            this.policyName = policyName;
            return this;
        }

        public Builder setPolicyName(@Nullable String policyName) {
            this.policyName = Input.ofNullable(policyName);
            return this;
        }

        public MabContainerExtendedInfoArgs build() {
            return new MabContainerExtendedInfoArgs(backupItemType, backupItems, lastBackupStatus, lastRefreshedAt, policyName);
        }
    }
}
