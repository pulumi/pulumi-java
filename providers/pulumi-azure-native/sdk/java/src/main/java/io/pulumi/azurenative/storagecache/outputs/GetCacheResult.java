// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagecache.outputs;

import io.pulumi.azurenative.storagecache.outputs.CacheDirectorySettingsResponse;
import io.pulumi.azurenative.storagecache.outputs.CacheEncryptionSettingsResponse;
import io.pulumi.azurenative.storagecache.outputs.CacheHealthResponse;
import io.pulumi.azurenative.storagecache.outputs.CacheIdentityResponse;
import io.pulumi.azurenative.storagecache.outputs.CacheNetworkSettingsResponse;
import io.pulumi.azurenative.storagecache.outputs.CacheResponseSku;
import io.pulumi.azurenative.storagecache.outputs.CacheSecuritySettingsResponse;
import io.pulumi.azurenative.storagecache.outputs.CacheUpgradeStatusResponse;
import io.pulumi.azurenative.storagecache.outputs.SystemDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetCacheResult {
    private final @Nullable Integer cacheSizeGB;
    private final @Nullable CacheDirectorySettingsResponse directoryServicesSettings;
    private final @Nullable CacheEncryptionSettingsResponse encryptionSettings;
    private final CacheHealthResponse health;
    private final String id;
    private final @Nullable CacheIdentityResponse identity;
    private final @Nullable String location;
    private final List<String> mountAddresses;
    private final String name;
    private final @Nullable CacheNetworkSettingsResponse networkSettings;
    private final @Nullable String provisioningState;
    private final @Nullable CacheSecuritySettingsResponse securitySettings;
    private final @Nullable CacheResponseSku sku;
    private final @Nullable String subnet;
    private final SystemDataResponse systemData;
    private final @Nullable Map<String,String> tags;
    private final String type;
    private final @Nullable CacheUpgradeStatusResponse upgradeStatus;

    @OutputCustomType.Constructor({"cacheSizeGB","directoryServicesSettings","encryptionSettings","health","id","identity","location","mountAddresses","name","networkSettings","provisioningState","securitySettings","sku","subnet","systemData","tags","type","upgradeStatus"})
    private GetCacheResult(
        @Nullable Integer cacheSizeGB,
        @Nullable CacheDirectorySettingsResponse directoryServicesSettings,
        @Nullable CacheEncryptionSettingsResponse encryptionSettings,
        CacheHealthResponse health,
        String id,
        @Nullable CacheIdentityResponse identity,
        @Nullable String location,
        List<String> mountAddresses,
        String name,
        @Nullable CacheNetworkSettingsResponse networkSettings,
        @Nullable String provisioningState,
        @Nullable CacheSecuritySettingsResponse securitySettings,
        @Nullable CacheResponseSku sku,
        @Nullable String subnet,
        SystemDataResponse systemData,
        @Nullable Map<String,String> tags,
        String type,
        @Nullable CacheUpgradeStatusResponse upgradeStatus) {
        this.cacheSizeGB = cacheSizeGB;
        this.directoryServicesSettings = directoryServicesSettings;
        this.encryptionSettings = encryptionSettings;
        this.health = Objects.requireNonNull(health);
        this.id = Objects.requireNonNull(id);
        this.identity = identity;
        this.location = location;
        this.mountAddresses = Objects.requireNonNull(mountAddresses);
        this.name = Objects.requireNonNull(name);
        this.networkSettings = networkSettings;
        this.provisioningState = provisioningState;
        this.securitySettings = securitySettings;
        this.sku = sku;
        this.subnet = subnet;
        this.systemData = Objects.requireNonNull(systemData);
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.upgradeStatus = upgradeStatus;
    }

    public Optional<Integer> getCacheSizeGB() {
        return Optional.ofNullable(this.cacheSizeGB);
    }
    public Optional<CacheDirectorySettingsResponse> getDirectoryServicesSettings() {
        return Optional.ofNullable(this.directoryServicesSettings);
    }
    public Optional<CacheEncryptionSettingsResponse> getEncryptionSettings() {
        return Optional.ofNullable(this.encryptionSettings);
    }
    public CacheHealthResponse getHealth() {
        return this.health;
    }
    public String getId() {
        return this.id;
    }
    public Optional<CacheIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public List<String> getMountAddresses() {
        return this.mountAddresses;
    }
    public String getName() {
        return this.name;
    }
    public Optional<CacheNetworkSettingsResponse> getNetworkSettings() {
        return Optional.ofNullable(this.networkSettings);
    }
    public Optional<String> getProvisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }
    public Optional<CacheSecuritySettingsResponse> getSecuritySettings() {
        return Optional.ofNullable(this.securitySettings);
    }
    public Optional<CacheResponseSku> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public Optional<String> getSubnet() {
        return Optional.ofNullable(this.subnet);
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }
    public Optional<CacheUpgradeStatusResponse> getUpgradeStatus() {
        return Optional.ofNullable(this.upgradeStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCacheResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer cacheSizeGB;
        private @Nullable CacheDirectorySettingsResponse directoryServicesSettings;
        private @Nullable CacheEncryptionSettingsResponse encryptionSettings;
        private CacheHealthResponse health;
        private String id;
        private @Nullable CacheIdentityResponse identity;
        private @Nullable String location;
        private List<String> mountAddresses;
        private String name;
        private @Nullable CacheNetworkSettingsResponse networkSettings;
        private @Nullable String provisioningState;
        private @Nullable CacheSecuritySettingsResponse securitySettings;
        private @Nullable CacheResponseSku sku;
        private @Nullable String subnet;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable CacheUpgradeStatusResponse upgradeStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCacheResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheSizeGB = defaults.cacheSizeGB;
    	      this.directoryServicesSettings = defaults.directoryServicesSettings;
    	      this.encryptionSettings = defaults.encryptionSettings;
    	      this.health = defaults.health;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.mountAddresses = defaults.mountAddresses;
    	      this.name = defaults.name;
    	      this.networkSettings = defaults.networkSettings;
    	      this.provisioningState = defaults.provisioningState;
    	      this.securitySettings = defaults.securitySettings;
    	      this.sku = defaults.sku;
    	      this.subnet = defaults.subnet;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.upgradeStatus = defaults.upgradeStatus;
        }

        public Builder setCacheSizeGB(@Nullable Integer cacheSizeGB) {
            this.cacheSizeGB = cacheSizeGB;
            return this;
        }

        public Builder setDirectoryServicesSettings(@Nullable CacheDirectorySettingsResponse directoryServicesSettings) {
            this.directoryServicesSettings = directoryServicesSettings;
            return this;
        }

        public Builder setEncryptionSettings(@Nullable CacheEncryptionSettingsResponse encryptionSettings) {
            this.encryptionSettings = encryptionSettings;
            return this;
        }

        public Builder setHealth(CacheHealthResponse health) {
            this.health = Objects.requireNonNull(health);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable CacheIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setMountAddresses(List<String> mountAddresses) {
            this.mountAddresses = Objects.requireNonNull(mountAddresses);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetworkSettings(@Nullable CacheNetworkSettingsResponse networkSettings) {
            this.networkSettings = networkSettings;
            return this;
        }

        public Builder setProvisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }

        public Builder setSecuritySettings(@Nullable CacheSecuritySettingsResponse securitySettings) {
            this.securitySettings = securitySettings;
            return this;
        }

        public Builder setSku(@Nullable CacheResponseSku sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSubnet(@Nullable String subnet) {
            this.subnet = subnet;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUpgradeStatus(@Nullable CacheUpgradeStatusResponse upgradeStatus) {
            this.upgradeStatus = upgradeStatus;
            return this;
        }

        public GetCacheResult build() {
            return new GetCacheResult(cacheSizeGB, directoryServicesSettings, encryptionSettings, health, id, identity, location, mountAddresses, name, networkSettings, provisioningState, securitySettings, sku, subnet, systemData, tags, type, upgradeStatus);
        }
    }
}
