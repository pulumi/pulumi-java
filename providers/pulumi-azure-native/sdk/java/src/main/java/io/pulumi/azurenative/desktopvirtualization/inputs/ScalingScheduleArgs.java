// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.desktopvirtualization.inputs;

import io.pulumi.azurenative.desktopvirtualization.enums.SessionHostLoadBalancingAlgorithm;
import io.pulumi.azurenative.desktopvirtualization.enums.StopHostsWhen;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Scaling plan schedule.
 * 
 */
public final class ScalingScheduleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScalingScheduleArgs Empty = new ScalingScheduleArgs();

    /**
     * Set of days of the week on which this schedule is active.
     * 
     */
    @Import(name="daysOfWeek")
      private final @Nullable Output<List<String>> daysOfWeek;

    public Output<List<String>> getDaysOfWeek() {
        return this.daysOfWeek == null ? Output.empty() : this.daysOfWeek;
    }

    /**
     * Name of the scaling schedule.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Load balancing algorithm for off-peak period.
     * 
     */
    @Import(name="offPeakLoadBalancingAlgorithm")
      private final @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> offPeakLoadBalancingAlgorithm;

    public Output<Either<String,SessionHostLoadBalancingAlgorithm>> getOffPeakLoadBalancingAlgorithm() {
        return this.offPeakLoadBalancingAlgorithm == null ? Output.empty() : this.offPeakLoadBalancingAlgorithm;
    }

    /**
     * Starting time for off-peak period.
     * 
     */
    @Import(name="offPeakStartTime")
      private final @Nullable Output<String> offPeakStartTime;

    public Output<String> getOffPeakStartTime() {
        return this.offPeakStartTime == null ? Output.empty() : this.offPeakStartTime;
    }

    /**
     * Load balancing algorithm for peak period.
     * 
     */
    @Import(name="peakLoadBalancingAlgorithm")
      private final @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> peakLoadBalancingAlgorithm;

    public Output<Either<String,SessionHostLoadBalancingAlgorithm>> getPeakLoadBalancingAlgorithm() {
        return this.peakLoadBalancingAlgorithm == null ? Output.empty() : this.peakLoadBalancingAlgorithm;
    }

    /**
     * Starting time for peak period.
     * 
     */
    @Import(name="peakStartTime")
      private final @Nullable Output<String> peakStartTime;

    public Output<String> getPeakStartTime() {
        return this.peakStartTime == null ? Output.empty() : this.peakStartTime;
    }

    /**
     * Capacity threshold for ramp down period.
     * 
     */
    @Import(name="rampDownCapacityThresholdPct")
      private final @Nullable Output<Integer> rampDownCapacityThresholdPct;

    public Output<Integer> getRampDownCapacityThresholdPct() {
        return this.rampDownCapacityThresholdPct == null ? Output.empty() : this.rampDownCapacityThresholdPct;
    }

    /**
     * Should users be logged off forcefully from hosts.
     * 
     */
    @Import(name="rampDownForceLogoffUsers")
      private final @Nullable Output<Boolean> rampDownForceLogoffUsers;

    public Output<Boolean> getRampDownForceLogoffUsers() {
        return this.rampDownForceLogoffUsers == null ? Output.empty() : this.rampDownForceLogoffUsers;
    }

    /**
     * Load balancing algorithm for ramp down period.
     * 
     */
    @Import(name="rampDownLoadBalancingAlgorithm")
      private final @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> rampDownLoadBalancingAlgorithm;

    public Output<Either<String,SessionHostLoadBalancingAlgorithm>> getRampDownLoadBalancingAlgorithm() {
        return this.rampDownLoadBalancingAlgorithm == null ? Output.empty() : this.rampDownLoadBalancingAlgorithm;
    }

    /**
     * Minimum host percentage for ramp down period.
     * 
     */
    @Import(name="rampDownMinimumHostsPct")
      private final @Nullable Output<Integer> rampDownMinimumHostsPct;

    public Output<Integer> getRampDownMinimumHostsPct() {
        return this.rampDownMinimumHostsPct == null ? Output.empty() : this.rampDownMinimumHostsPct;
    }

    /**
     * Notification message for users during ramp down period.
     * 
     */
    @Import(name="rampDownNotificationMessage")
      private final @Nullable Output<String> rampDownNotificationMessage;

    public Output<String> getRampDownNotificationMessage() {
        return this.rampDownNotificationMessage == null ? Output.empty() : this.rampDownNotificationMessage;
    }

    /**
     * Starting time for ramp down period.
     * 
     */
    @Import(name="rampDownStartTime")
      private final @Nullable Output<String> rampDownStartTime;

    public Output<String> getRampDownStartTime() {
        return this.rampDownStartTime == null ? Output.empty() : this.rampDownStartTime;
    }

    /**
     * Specifies when to stop hosts during ramp down period.
     * 
     */
    @Import(name="rampDownStopHostsWhen")
      private final @Nullable Output<Either<String,StopHostsWhen>> rampDownStopHostsWhen;

    public Output<Either<String,StopHostsWhen>> getRampDownStopHostsWhen() {
        return this.rampDownStopHostsWhen == null ? Output.empty() : this.rampDownStopHostsWhen;
    }

    /**
     * Number of minutes to wait to stop hosts during ramp down period.
     * 
     */
    @Import(name="rampDownWaitTimeMinutes")
      private final @Nullable Output<Integer> rampDownWaitTimeMinutes;

    public Output<Integer> getRampDownWaitTimeMinutes() {
        return this.rampDownWaitTimeMinutes == null ? Output.empty() : this.rampDownWaitTimeMinutes;
    }

    /**
     * Capacity threshold for ramp up period.
     * 
     */
    @Import(name="rampUpCapacityThresholdPct")
      private final @Nullable Output<Integer> rampUpCapacityThresholdPct;

    public Output<Integer> getRampUpCapacityThresholdPct() {
        return this.rampUpCapacityThresholdPct == null ? Output.empty() : this.rampUpCapacityThresholdPct;
    }

    /**
     * Load balancing algorithm for ramp up period.
     * 
     */
    @Import(name="rampUpLoadBalancingAlgorithm")
      private final @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> rampUpLoadBalancingAlgorithm;

    public Output<Either<String,SessionHostLoadBalancingAlgorithm>> getRampUpLoadBalancingAlgorithm() {
        return this.rampUpLoadBalancingAlgorithm == null ? Output.empty() : this.rampUpLoadBalancingAlgorithm;
    }

    /**
     * Minimum host percentage for ramp up period.
     * 
     */
    @Import(name="rampUpMinimumHostsPct")
      private final @Nullable Output<Integer> rampUpMinimumHostsPct;

    public Output<Integer> getRampUpMinimumHostsPct() {
        return this.rampUpMinimumHostsPct == null ? Output.empty() : this.rampUpMinimumHostsPct;
    }

    /**
     * Starting time for ramp up period.
     * 
     */
    @Import(name="rampUpStartTime")
      private final @Nullable Output<String> rampUpStartTime;

    public Output<String> getRampUpStartTime() {
        return this.rampUpStartTime == null ? Output.empty() : this.rampUpStartTime;
    }

    public ScalingScheduleArgs(
        @Nullable Output<List<String>> daysOfWeek,
        @Nullable Output<String> name,
        @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> offPeakLoadBalancingAlgorithm,
        @Nullable Output<String> offPeakStartTime,
        @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> peakLoadBalancingAlgorithm,
        @Nullable Output<String> peakStartTime,
        @Nullable Output<Integer> rampDownCapacityThresholdPct,
        @Nullable Output<Boolean> rampDownForceLogoffUsers,
        @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> rampDownLoadBalancingAlgorithm,
        @Nullable Output<Integer> rampDownMinimumHostsPct,
        @Nullable Output<String> rampDownNotificationMessage,
        @Nullable Output<String> rampDownStartTime,
        @Nullable Output<Either<String,StopHostsWhen>> rampDownStopHostsWhen,
        @Nullable Output<Integer> rampDownWaitTimeMinutes,
        @Nullable Output<Integer> rampUpCapacityThresholdPct,
        @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> rampUpLoadBalancingAlgorithm,
        @Nullable Output<Integer> rampUpMinimumHostsPct,
        @Nullable Output<String> rampUpStartTime) {
        this.daysOfWeek = daysOfWeek;
        this.name = name;
        this.offPeakLoadBalancingAlgorithm = offPeakLoadBalancingAlgorithm;
        this.offPeakStartTime = offPeakStartTime;
        this.peakLoadBalancingAlgorithm = peakLoadBalancingAlgorithm;
        this.peakStartTime = peakStartTime;
        this.rampDownCapacityThresholdPct = rampDownCapacityThresholdPct;
        this.rampDownForceLogoffUsers = rampDownForceLogoffUsers;
        this.rampDownLoadBalancingAlgorithm = rampDownLoadBalancingAlgorithm;
        this.rampDownMinimumHostsPct = rampDownMinimumHostsPct;
        this.rampDownNotificationMessage = rampDownNotificationMessage;
        this.rampDownStartTime = rampDownStartTime;
        this.rampDownStopHostsWhen = rampDownStopHostsWhen;
        this.rampDownWaitTimeMinutes = rampDownWaitTimeMinutes;
        this.rampUpCapacityThresholdPct = rampUpCapacityThresholdPct;
        this.rampUpLoadBalancingAlgorithm = rampUpLoadBalancingAlgorithm;
        this.rampUpMinimumHostsPct = rampUpMinimumHostsPct;
        this.rampUpStartTime = rampUpStartTime;
    }

    private ScalingScheduleArgs() {
        this.daysOfWeek = Output.empty();
        this.name = Output.empty();
        this.offPeakLoadBalancingAlgorithm = Output.empty();
        this.offPeakStartTime = Output.empty();
        this.peakLoadBalancingAlgorithm = Output.empty();
        this.peakStartTime = Output.empty();
        this.rampDownCapacityThresholdPct = Output.empty();
        this.rampDownForceLogoffUsers = Output.empty();
        this.rampDownLoadBalancingAlgorithm = Output.empty();
        this.rampDownMinimumHostsPct = Output.empty();
        this.rampDownNotificationMessage = Output.empty();
        this.rampDownStartTime = Output.empty();
        this.rampDownStopHostsWhen = Output.empty();
        this.rampDownWaitTimeMinutes = Output.empty();
        this.rampUpCapacityThresholdPct = Output.empty();
        this.rampUpLoadBalancingAlgorithm = Output.empty();
        this.rampUpMinimumHostsPct = Output.empty();
        this.rampUpStartTime = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScalingScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> daysOfWeek;
        private @Nullable Output<String> name;
        private @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> offPeakLoadBalancingAlgorithm;
        private @Nullable Output<String> offPeakStartTime;
        private @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> peakLoadBalancingAlgorithm;
        private @Nullable Output<String> peakStartTime;
        private @Nullable Output<Integer> rampDownCapacityThresholdPct;
        private @Nullable Output<Boolean> rampDownForceLogoffUsers;
        private @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> rampDownLoadBalancingAlgorithm;
        private @Nullable Output<Integer> rampDownMinimumHostsPct;
        private @Nullable Output<String> rampDownNotificationMessage;
        private @Nullable Output<String> rampDownStartTime;
        private @Nullable Output<Either<String,StopHostsWhen>> rampDownStopHostsWhen;
        private @Nullable Output<Integer> rampDownWaitTimeMinutes;
        private @Nullable Output<Integer> rampUpCapacityThresholdPct;
        private @Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> rampUpLoadBalancingAlgorithm;
        private @Nullable Output<Integer> rampUpMinimumHostsPct;
        private @Nullable Output<String> rampUpStartTime;

        public Builder() {
    	      // Empty
        }

        public Builder(ScalingScheduleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.daysOfWeek = defaults.daysOfWeek;
    	      this.name = defaults.name;
    	      this.offPeakLoadBalancingAlgorithm = defaults.offPeakLoadBalancingAlgorithm;
    	      this.offPeakStartTime = defaults.offPeakStartTime;
    	      this.peakLoadBalancingAlgorithm = defaults.peakLoadBalancingAlgorithm;
    	      this.peakStartTime = defaults.peakStartTime;
    	      this.rampDownCapacityThresholdPct = defaults.rampDownCapacityThresholdPct;
    	      this.rampDownForceLogoffUsers = defaults.rampDownForceLogoffUsers;
    	      this.rampDownLoadBalancingAlgorithm = defaults.rampDownLoadBalancingAlgorithm;
    	      this.rampDownMinimumHostsPct = defaults.rampDownMinimumHostsPct;
    	      this.rampDownNotificationMessage = defaults.rampDownNotificationMessage;
    	      this.rampDownStartTime = defaults.rampDownStartTime;
    	      this.rampDownStopHostsWhen = defaults.rampDownStopHostsWhen;
    	      this.rampDownWaitTimeMinutes = defaults.rampDownWaitTimeMinutes;
    	      this.rampUpCapacityThresholdPct = defaults.rampUpCapacityThresholdPct;
    	      this.rampUpLoadBalancingAlgorithm = defaults.rampUpLoadBalancingAlgorithm;
    	      this.rampUpMinimumHostsPct = defaults.rampUpMinimumHostsPct;
    	      this.rampUpStartTime = defaults.rampUpStartTime;
        }

        public Builder daysOfWeek(@Nullable Output<List<String>> daysOfWeek) {
            this.daysOfWeek = daysOfWeek;
            return this;
        }

        public Builder daysOfWeek(@Nullable List<String> daysOfWeek) {
            this.daysOfWeek = Output.ofNullable(daysOfWeek);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder offPeakLoadBalancingAlgorithm(@Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> offPeakLoadBalancingAlgorithm) {
            this.offPeakLoadBalancingAlgorithm = offPeakLoadBalancingAlgorithm;
            return this;
        }

        public Builder offPeakLoadBalancingAlgorithm(@Nullable Either<String,SessionHostLoadBalancingAlgorithm> offPeakLoadBalancingAlgorithm) {
            this.offPeakLoadBalancingAlgorithm = Output.ofNullable(offPeakLoadBalancingAlgorithm);
            return this;
        }

        public Builder offPeakStartTime(@Nullable Output<String> offPeakStartTime) {
            this.offPeakStartTime = offPeakStartTime;
            return this;
        }

        public Builder offPeakStartTime(@Nullable String offPeakStartTime) {
            this.offPeakStartTime = Output.ofNullable(offPeakStartTime);
            return this;
        }

        public Builder peakLoadBalancingAlgorithm(@Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> peakLoadBalancingAlgorithm) {
            this.peakLoadBalancingAlgorithm = peakLoadBalancingAlgorithm;
            return this;
        }

        public Builder peakLoadBalancingAlgorithm(@Nullable Either<String,SessionHostLoadBalancingAlgorithm> peakLoadBalancingAlgorithm) {
            this.peakLoadBalancingAlgorithm = Output.ofNullable(peakLoadBalancingAlgorithm);
            return this;
        }

        public Builder peakStartTime(@Nullable Output<String> peakStartTime) {
            this.peakStartTime = peakStartTime;
            return this;
        }

        public Builder peakStartTime(@Nullable String peakStartTime) {
            this.peakStartTime = Output.ofNullable(peakStartTime);
            return this;
        }

        public Builder rampDownCapacityThresholdPct(@Nullable Output<Integer> rampDownCapacityThresholdPct) {
            this.rampDownCapacityThresholdPct = rampDownCapacityThresholdPct;
            return this;
        }

        public Builder rampDownCapacityThresholdPct(@Nullable Integer rampDownCapacityThresholdPct) {
            this.rampDownCapacityThresholdPct = Output.ofNullable(rampDownCapacityThresholdPct);
            return this;
        }

        public Builder rampDownForceLogoffUsers(@Nullable Output<Boolean> rampDownForceLogoffUsers) {
            this.rampDownForceLogoffUsers = rampDownForceLogoffUsers;
            return this;
        }

        public Builder rampDownForceLogoffUsers(@Nullable Boolean rampDownForceLogoffUsers) {
            this.rampDownForceLogoffUsers = Output.ofNullable(rampDownForceLogoffUsers);
            return this;
        }

        public Builder rampDownLoadBalancingAlgorithm(@Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> rampDownLoadBalancingAlgorithm) {
            this.rampDownLoadBalancingAlgorithm = rampDownLoadBalancingAlgorithm;
            return this;
        }

        public Builder rampDownLoadBalancingAlgorithm(@Nullable Either<String,SessionHostLoadBalancingAlgorithm> rampDownLoadBalancingAlgorithm) {
            this.rampDownLoadBalancingAlgorithm = Output.ofNullable(rampDownLoadBalancingAlgorithm);
            return this;
        }

        public Builder rampDownMinimumHostsPct(@Nullable Output<Integer> rampDownMinimumHostsPct) {
            this.rampDownMinimumHostsPct = rampDownMinimumHostsPct;
            return this;
        }

        public Builder rampDownMinimumHostsPct(@Nullable Integer rampDownMinimumHostsPct) {
            this.rampDownMinimumHostsPct = Output.ofNullable(rampDownMinimumHostsPct);
            return this;
        }

        public Builder rampDownNotificationMessage(@Nullable Output<String> rampDownNotificationMessage) {
            this.rampDownNotificationMessage = rampDownNotificationMessage;
            return this;
        }

        public Builder rampDownNotificationMessage(@Nullable String rampDownNotificationMessage) {
            this.rampDownNotificationMessage = Output.ofNullable(rampDownNotificationMessage);
            return this;
        }

        public Builder rampDownStartTime(@Nullable Output<String> rampDownStartTime) {
            this.rampDownStartTime = rampDownStartTime;
            return this;
        }

        public Builder rampDownStartTime(@Nullable String rampDownStartTime) {
            this.rampDownStartTime = Output.ofNullable(rampDownStartTime);
            return this;
        }

        public Builder rampDownStopHostsWhen(@Nullable Output<Either<String,StopHostsWhen>> rampDownStopHostsWhen) {
            this.rampDownStopHostsWhen = rampDownStopHostsWhen;
            return this;
        }

        public Builder rampDownStopHostsWhen(@Nullable Either<String,StopHostsWhen> rampDownStopHostsWhen) {
            this.rampDownStopHostsWhen = Output.ofNullable(rampDownStopHostsWhen);
            return this;
        }

        public Builder rampDownWaitTimeMinutes(@Nullable Output<Integer> rampDownWaitTimeMinutes) {
            this.rampDownWaitTimeMinutes = rampDownWaitTimeMinutes;
            return this;
        }

        public Builder rampDownWaitTimeMinutes(@Nullable Integer rampDownWaitTimeMinutes) {
            this.rampDownWaitTimeMinutes = Output.ofNullable(rampDownWaitTimeMinutes);
            return this;
        }

        public Builder rampUpCapacityThresholdPct(@Nullable Output<Integer> rampUpCapacityThresholdPct) {
            this.rampUpCapacityThresholdPct = rampUpCapacityThresholdPct;
            return this;
        }

        public Builder rampUpCapacityThresholdPct(@Nullable Integer rampUpCapacityThresholdPct) {
            this.rampUpCapacityThresholdPct = Output.ofNullable(rampUpCapacityThresholdPct);
            return this;
        }

        public Builder rampUpLoadBalancingAlgorithm(@Nullable Output<Either<String,SessionHostLoadBalancingAlgorithm>> rampUpLoadBalancingAlgorithm) {
            this.rampUpLoadBalancingAlgorithm = rampUpLoadBalancingAlgorithm;
            return this;
        }

        public Builder rampUpLoadBalancingAlgorithm(@Nullable Either<String,SessionHostLoadBalancingAlgorithm> rampUpLoadBalancingAlgorithm) {
            this.rampUpLoadBalancingAlgorithm = Output.ofNullable(rampUpLoadBalancingAlgorithm);
            return this;
        }

        public Builder rampUpMinimumHostsPct(@Nullable Output<Integer> rampUpMinimumHostsPct) {
            this.rampUpMinimumHostsPct = rampUpMinimumHostsPct;
            return this;
        }

        public Builder rampUpMinimumHostsPct(@Nullable Integer rampUpMinimumHostsPct) {
            this.rampUpMinimumHostsPct = Output.ofNullable(rampUpMinimumHostsPct);
            return this;
        }

        public Builder rampUpStartTime(@Nullable Output<String> rampUpStartTime) {
            this.rampUpStartTime = rampUpStartTime;
            return this;
        }

        public Builder rampUpStartTime(@Nullable String rampUpStartTime) {
            this.rampUpStartTime = Output.ofNullable(rampUpStartTime);
            return this;
        }
        public ScalingScheduleArgs build() {
            return new ScalingScheduleArgs(daysOfWeek, name, offPeakLoadBalancingAlgorithm, offPeakStartTime, peakLoadBalancingAlgorithm, peakStartTime, rampDownCapacityThresholdPct, rampDownForceLogoffUsers, rampDownLoadBalancingAlgorithm, rampDownMinimumHostsPct, rampDownNotificationMessage, rampDownStartTime, rampDownStopHostsWhen, rampDownWaitTimeMinutes, rampUpCapacityThresholdPct, rampUpLoadBalancingAlgorithm, rampUpMinimumHostsPct, rampUpStartTime);
        }
    }
}
