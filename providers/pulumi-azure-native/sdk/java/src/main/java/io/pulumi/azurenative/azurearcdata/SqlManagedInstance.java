// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurearcdata;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.azurearcdata.outputs.ExtendedLocationResponse;
import io.pulumi.azurenative.azurearcdata.outputs.SqlManagedInstancePropertiesResponse;
import io.pulumi.azurenative.azurearcdata.outputs.SqlManagedInstanceSkuResponse;
import io.pulumi.azurenative.azurearcdata.outputs.SystemDataResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * A SqlManagedInstance.
API Version: 2021-06-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create or update a SQL Managed Instance
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var sqlManagedInstance = new AzureNative.AzureArcData.SqlManagedInstance("sqlManagedInstance", new AzureNative.AzureArcData.SqlManagedInstanceArgs
        {
            ExtendedLocation = new AzureNative.AzureArcData.Inputs.ExtendedLocationArgs
            {
                Name = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
                Type = "CustomLocation",
            },
            Location = "northeurope",
            Properties = new AzureNative.AzureArcData.Inputs.SqlManagedInstancePropertiesArgs
            {
                Admin = "Admin user",
                BasicLoginInformation = new AzureNative.AzureArcData.Inputs.BasicLoginInformationArgs
                {
                    Password = "********",
                    Username = "username",
                },
                EndTime = "Instance end time",
                StartTime = "Instance start time",
            },
            ResourceGroupName = "testrg",
            Sku = new AzureNative.AzureArcData.Inputs.SqlManagedInstanceSkuArgs
            {
                Dev = true,
                Name = "default",
                Tier = "GeneralPurpose",
            },
            SqlManagedInstanceName = "testsqlManagedInstance",
            Tags = 
            {
                { "mytag", "myval" },
            },
        });
    }

}

```

```go
package main

import (
	azurearcdata "github.com/pulumi/pulumi-azure-native/sdk/go/azure/azurearcdata"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := azurearcdata.NewSqlManagedInstance(ctx, "sqlManagedInstance", &azurearcdata.SqlManagedInstanceArgs{
			ExtendedLocation: &azurearcdata.ExtendedLocationArgs{
				Name: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation"),
				Type: pulumi.String("CustomLocation"),
			},
			Location: pulumi.String("northeurope"),
			Properties: &azurearcdata.SqlManagedInstancePropertiesArgs{
				Admin: pulumi.String("Admin user"),
				BasicLoginInformation: &azurearcdata.BasicLoginInformationArgs{
					Password: pulumi.String("********"),
					Username: pulumi.String("username"),
				},
				EndTime:   pulumi.String("Instance end time"),
				StartTime: pulumi.String("Instance start time"),
			},
			ResourceGroupName: pulumi.String("testrg"),
			Sku: &azurearcdata.SqlManagedInstanceSkuArgs{
				Dev:  pulumi.Bool(true),
				Name: pulumi.String("default"),
				Tier: "GeneralPurpose",
			},
			SqlManagedInstanceName: pulumi.String("testsqlManagedInstance"),
			Tags: pulumi.StringMap{
				"mytag": pulumi.String("myval"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const sqlManagedInstance = new azure_native.azurearcdata.SqlManagedInstance("sqlManagedInstance", {
    extendedLocation: {
        name: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
        type: "CustomLocation",
    },
    location: "northeurope",
    properties: {
        admin: "Admin user",
        basicLoginInformation: {
            password: "********",
            username: "username",
        },
        endTime: "Instance end time",
        startTime: "Instance start time",
    },
    resourceGroupName: "testrg",
    sku: {
        dev: true,
        name: "default",
        tier: "GeneralPurpose",
    },
    sqlManagedInstanceName: "testsqlManagedInstance",
    tags: {
        mytag: "myval",
    },
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

sql_managed_instance = azure_native.azurearcdata.SqlManagedInstance("sqlManagedInstance",
    extended_location=azure_native.azurearcdata.ExtendedLocationArgs(
        name="/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
        type="CustomLocation",
    ),
    location="northeurope",
    properties=azure_native.azurearcdata.SqlManagedInstancePropertiesArgs(
        admin="Admin user",
        basic_login_information=azure_native.azurearcdata.BasicLoginInformationArgs(
            password="********",
            username="username",
        ),
        end_time="Instance end time",
        start_time="Instance start time",
    ),
    resource_group_name="testrg",
    sku=azure_native.azurearcdata.SqlManagedInstanceSkuArgs(
        dev=True,
        name="default",
        tier="GeneralPurpose",
    ),
    sql_managed_instance_name="testsqlManagedInstance",
    tags={
        "mytag": "myval",
    })

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:azurearcdata:SqlManagedInstance testsqlManagedInstance /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureArcData/sqlManagedInstances/testsqlManagedInstance 
```

 */
@ResourceType(type="azure-native:azurearcdata:SqlManagedInstance")
public class SqlManagedInstance extends io.pulumi.resources.CustomResource {
    /**
     * The extendedLocation of the resource.
     */
    @OutputExport(name="extendedLocation", type=ExtendedLocationResponse.class, parameters={})
    private Output</* @Nullable */ ExtendedLocationResponse> extendedLocation;

    /**
     * @return The extendedLocation of the resource.
     */
    public Output</* @Nullable */ ExtendedLocationResponse> getExtendedLocation() {
        return this.extendedLocation;
    }
    /**
     * The geo-location where the resource lives
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * null
     */
    @OutputExport(name="properties", type=SqlManagedInstancePropertiesResponse.class, parameters={})
    private Output<SqlManagedInstancePropertiesResponse> properties;

    /**
     * @return null
     */
    public Output<SqlManagedInstancePropertiesResponse> getProperties() {
        return this.properties;
    }
    /**
     * Resource sku.
     */
    @OutputExport(name="sku", type=SqlManagedInstanceSkuResponse.class, parameters={})
    private Output</* @Nullable */ SqlManagedInstanceSkuResponse> sku;

    /**
     * @return Resource sku.
     */
    public Output</* @Nullable */ SqlManagedInstanceSkuResponse> getSku() {
        return this.sku;
    }
    /**
     * Read only system data
     */
    @OutputExport(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Read only system data
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SqlManagedInstance(String name, SqlManagedInstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:azurearcdata:SqlManagedInstance", name, args == null ? SqlManagedInstanceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private SqlManagedInstance(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:azurearcdata:SqlManagedInstance", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:azurearcdata/v20210601preview:SqlManagedInstance").build()),
                Input.of(Alias.builder().setType("azure-native:azurearcdata/v20210701preview:SqlManagedInstance").build()),
                Input.of(Alias.builder().setType("azure-native:azurearcdata/v20210801:SqlManagedInstance").build()),
                Input.of(Alias.builder().setType("azure-native:azurearcdata/v20211101:SqlManagedInstance").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SqlManagedInstance get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SqlManagedInstance(name, id, options);
    }
}
