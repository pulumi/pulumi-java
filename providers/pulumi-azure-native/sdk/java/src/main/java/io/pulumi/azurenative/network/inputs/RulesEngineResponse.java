// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.RulesEngineRuleResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
 * 
 */
public final class RulesEngineResponse extends io.pulumi.resources.InvokeArgs {

    public static final RulesEngineResponse Empty = new RulesEngineResponse();

    /**
     * Resource ID.
     * 
     */
    @InputImport(name="id", required=true)
    private final String id;

    public String getId() {
        return this.id;
    }

    /**
     * Resource name.
     * 
     */
    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * Resource status.
     * 
     */
    @InputImport(name="resourceState", required=true)
    private final String resourceState;

    public String getResourceState() {
        return this.resourceState;
    }

    /**
     * A list of rules that define a particular Rules Engine Configuration.
     * 
     */
    @InputImport(name="rules")
    private final @Nullable List<RulesEngineRuleResponse> rules;

    public List<RulesEngineRuleResponse> getRules() {
        return this.rules == null ? List.of() : this.rules;
    }

    /**
     * Resource type.
     * 
     */
    @InputImport(name="type", required=true)
    private final String type;

    public String getType() {
        return this.type;
    }

    public RulesEngineResponse(
        String id,
        String name,
        String resourceState,
        @Nullable List<RulesEngineRuleResponse> rules,
        String type) {
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.resourceState = Objects.requireNonNull(resourceState, "expected parameter 'resourceState' to be non-null");
        this.rules = rules;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private RulesEngineResponse() {
        this.id = null;
        this.name = null;
        this.resourceState = null;
        this.rules = List.of();
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesEngineResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private String name;
        private String resourceState;
        private @Nullable List<RulesEngineRuleResponse> rules;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(RulesEngineResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.resourceState = defaults.resourceState;
    	      this.rules = defaults.rules;
    	      this.type = defaults.type;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setResourceState(String resourceState) {
            this.resourceState = Objects.requireNonNull(resourceState);
            return this;
        }

        public Builder setRules(@Nullable List<RulesEngineRuleResponse> rules) {
            this.rules = rules;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public RulesEngineResponse build() {
            return new RulesEngineResponse(id, name, resourceState, rules, type);
        }
    }
}
