// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.azurenative.media.enums.H265VideoProfile;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class H265LayerArgs extends io.pulumi.resources.ResourceArgs {

    public static final H265LayerArgs Empty = new H265LayerArgs();

    @InputImport(name="adaptiveBFrame")
    private final @Nullable Input<Boolean> adaptiveBFrame;

    public Input<Boolean> getAdaptiveBFrame() {
        return this.adaptiveBFrame == null ? Input.empty() : this.adaptiveBFrame;
    }

    @InputImport(name="bFrames")
    private final @Nullable Input<Integer> bFrames;

    public Input<Integer> getBFrames() {
        return this.bFrames == null ? Input.empty() : this.bFrames;
    }

    @InputImport(name="bitrate", required=true)
    private final Input<Integer> bitrate;

    public Input<Integer> getBitrate() {
        return this.bitrate;
    }

    @InputImport(name="bufferWindow")
    private final @Nullable Input<String> bufferWindow;

    public Input<String> getBufferWindow() {
        return this.bufferWindow == null ? Input.empty() : this.bufferWindow;
    }

    @InputImport(name="frameRate")
    private final @Nullable Input<String> frameRate;

    public Input<String> getFrameRate() {
        return this.frameRate == null ? Input.empty() : this.frameRate;
    }

    @InputImport(name="height")
    private final @Nullable Input<String> height;

    public Input<String> getHeight() {
        return this.height == null ? Input.empty() : this.height;
    }

    @InputImport(name="label")
    private final @Nullable Input<String> label;

    public Input<String> getLabel() {
        return this.label == null ? Input.empty() : this.label;
    }

    @InputImport(name="level")
    private final @Nullable Input<String> level;

    public Input<String> getLevel() {
        return this.level == null ? Input.empty() : this.level;
    }

    @InputImport(name="maxBitrate")
    private final @Nullable Input<Integer> maxBitrate;

    public Input<Integer> getMaxBitrate() {
        return this.maxBitrate == null ? Input.empty() : this.maxBitrate;
    }

    @InputImport(name="odataType", required=true)
    private final Input<String> odataType;

    public Input<String> getOdataType() {
        return this.odataType;
    }

    @InputImport(name="profile")
    private final @Nullable Input<Either<String,H265VideoProfile>> profile;

    public Input<Either<String,H265VideoProfile>> getProfile() {
        return this.profile == null ? Input.empty() : this.profile;
    }

    @InputImport(name="referenceFrames")
    private final @Nullable Input<Integer> referenceFrames;

    public Input<Integer> getReferenceFrames() {
        return this.referenceFrames == null ? Input.empty() : this.referenceFrames;
    }

    @InputImport(name="slices")
    private final @Nullable Input<Integer> slices;

    public Input<Integer> getSlices() {
        return this.slices == null ? Input.empty() : this.slices;
    }

    @InputImport(name="width")
    private final @Nullable Input<String> width;

    public Input<String> getWidth() {
        return this.width == null ? Input.empty() : this.width;
    }

    public H265LayerArgs(
        @Nullable Input<Boolean> adaptiveBFrame,
        @Nullable Input<Integer> bFrames,
        Input<Integer> bitrate,
        @Nullable Input<String> bufferWindow,
        @Nullable Input<String> frameRate,
        @Nullable Input<String> height,
        @Nullable Input<String> label,
        @Nullable Input<String> level,
        @Nullable Input<Integer> maxBitrate,
        Input<String> odataType,
        @Nullable Input<Either<String,H265VideoProfile>> profile,
        @Nullable Input<Integer> referenceFrames,
        @Nullable Input<Integer> slices,
        @Nullable Input<String> width) {
        this.adaptiveBFrame = adaptiveBFrame;
        this.bFrames = bFrames;
        this.bitrate = Objects.requireNonNull(bitrate, "expected parameter 'bitrate' to be non-null");
        this.bufferWindow = bufferWindow;
        this.frameRate = frameRate;
        this.height = height;
        this.label = label;
        this.level = level;
        this.maxBitrate = maxBitrate;
        this.odataType = Objects.requireNonNull(odataType, "expected parameter 'odataType' to be non-null");
        this.profile = profile;
        this.referenceFrames = referenceFrames;
        this.slices = slices;
        this.width = width;
    }

    private H265LayerArgs() {
        this.adaptiveBFrame = Input.empty();
        this.bFrames = Input.empty();
        this.bitrate = Input.empty();
        this.bufferWindow = Input.empty();
        this.frameRate = Input.empty();
        this.height = Input.empty();
        this.label = Input.empty();
        this.level = Input.empty();
        this.maxBitrate = Input.empty();
        this.odataType = Input.empty();
        this.profile = Input.empty();
        this.referenceFrames = Input.empty();
        this.slices = Input.empty();
        this.width = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(H265LayerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> adaptiveBFrame;
        private @Nullable Input<Integer> bFrames;
        private Input<Integer> bitrate;
        private @Nullable Input<String> bufferWindow;
        private @Nullable Input<String> frameRate;
        private @Nullable Input<String> height;
        private @Nullable Input<String> label;
        private @Nullable Input<String> level;
        private @Nullable Input<Integer> maxBitrate;
        private Input<String> odataType;
        private @Nullable Input<Either<String,H265VideoProfile>> profile;
        private @Nullable Input<Integer> referenceFrames;
        private @Nullable Input<Integer> slices;
        private @Nullable Input<String> width;

        public Builder() {
    	      // Empty
        }

        public Builder(H265LayerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adaptiveBFrame = defaults.adaptiveBFrame;
    	      this.bFrames = defaults.bFrames;
    	      this.bitrate = defaults.bitrate;
    	      this.bufferWindow = defaults.bufferWindow;
    	      this.frameRate = defaults.frameRate;
    	      this.height = defaults.height;
    	      this.label = defaults.label;
    	      this.level = defaults.level;
    	      this.maxBitrate = defaults.maxBitrate;
    	      this.odataType = defaults.odataType;
    	      this.profile = defaults.profile;
    	      this.referenceFrames = defaults.referenceFrames;
    	      this.slices = defaults.slices;
    	      this.width = defaults.width;
        }

        public Builder setAdaptiveBFrame(@Nullable Input<Boolean> adaptiveBFrame) {
            this.adaptiveBFrame = adaptiveBFrame;
            return this;
        }

        public Builder setAdaptiveBFrame(@Nullable Boolean adaptiveBFrame) {
            this.adaptiveBFrame = Input.ofNullable(adaptiveBFrame);
            return this;
        }

        public Builder setBFrames(@Nullable Input<Integer> bFrames) {
            this.bFrames = bFrames;
            return this;
        }

        public Builder setBFrames(@Nullable Integer bFrames) {
            this.bFrames = Input.ofNullable(bFrames);
            return this;
        }

        public Builder setBitrate(Input<Integer> bitrate) {
            this.bitrate = Objects.requireNonNull(bitrate);
            return this;
        }

        public Builder setBitrate(Integer bitrate) {
            this.bitrate = Input.of(Objects.requireNonNull(bitrate));
            return this;
        }

        public Builder setBufferWindow(@Nullable Input<String> bufferWindow) {
            this.bufferWindow = bufferWindow;
            return this;
        }

        public Builder setBufferWindow(@Nullable String bufferWindow) {
            this.bufferWindow = Input.ofNullable(bufferWindow);
            return this;
        }

        public Builder setFrameRate(@Nullable Input<String> frameRate) {
            this.frameRate = frameRate;
            return this;
        }

        public Builder setFrameRate(@Nullable String frameRate) {
            this.frameRate = Input.ofNullable(frameRate);
            return this;
        }

        public Builder setHeight(@Nullable Input<String> height) {
            this.height = height;
            return this;
        }

        public Builder setHeight(@Nullable String height) {
            this.height = Input.ofNullable(height);
            return this;
        }

        public Builder setLabel(@Nullable Input<String> label) {
            this.label = label;
            return this;
        }

        public Builder setLabel(@Nullable String label) {
            this.label = Input.ofNullable(label);
            return this;
        }

        public Builder setLevel(@Nullable Input<String> level) {
            this.level = level;
            return this;
        }

        public Builder setLevel(@Nullable String level) {
            this.level = Input.ofNullable(level);
            return this;
        }

        public Builder setMaxBitrate(@Nullable Input<Integer> maxBitrate) {
            this.maxBitrate = maxBitrate;
            return this;
        }

        public Builder setMaxBitrate(@Nullable Integer maxBitrate) {
            this.maxBitrate = Input.ofNullable(maxBitrate);
            return this;
        }

        public Builder setOdataType(Input<String> odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder setOdataType(String odataType) {
            this.odataType = Input.of(Objects.requireNonNull(odataType));
            return this;
        }

        public Builder setProfile(@Nullable Input<Either<String,H265VideoProfile>> profile) {
            this.profile = profile;
            return this;
        }

        public Builder setProfile(@Nullable Either<String,H265VideoProfile> profile) {
            this.profile = Input.ofNullable(profile);
            return this;
        }

        public Builder setReferenceFrames(@Nullable Input<Integer> referenceFrames) {
            this.referenceFrames = referenceFrames;
            return this;
        }

        public Builder setReferenceFrames(@Nullable Integer referenceFrames) {
            this.referenceFrames = Input.ofNullable(referenceFrames);
            return this;
        }

        public Builder setSlices(@Nullable Input<Integer> slices) {
            this.slices = slices;
            return this;
        }

        public Builder setSlices(@Nullable Integer slices) {
            this.slices = Input.ofNullable(slices);
            return this;
        }

        public Builder setWidth(@Nullable Input<String> width) {
            this.width = width;
            return this;
        }

        public Builder setWidth(@Nullable String width) {
            this.width = Input.ofNullable(width);
            return this;
        }

        public H265LayerArgs build() {
            return new H265LayerArgs(adaptiveBFrame, bFrames, bitrate, bufferWindow, frameRate, height, label, level, maxBitrate, odataType, profile, referenceFrames, slices, width);
        }
    }
}
