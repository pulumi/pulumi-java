// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.timeseriesinsights.inputs;

import io.pulumi.azurenative.timeseriesinsights.enums.LocalTimestampFormat;
import io.pulumi.azurenative.timeseriesinsights.inputs.LocalTimestampTimeZoneOffsetArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
 * 
 */
public final class LocalTimestampArgs extends io.pulumi.resources.ResourceArgs {

    public static final LocalTimestampArgs Empty = new LocalTimestampArgs();

    /**
     * An enum that represents the format of the local timestamp property that needs to be set.
     * 
     */
    @InputImport(name="format")
      private final @Nullable Output<Either<String,LocalTimestampFormat>> format;

    public Output<Either<String,LocalTimestampFormat>> getFormat() {
        return this.format == null ? Output.empty() : this.format;
    }

    /**
     * An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
     * 
     */
    @InputImport(name="timeZoneOffset")
      private final @Nullable Output<LocalTimestampTimeZoneOffsetArgs> timeZoneOffset;

    public Output<LocalTimestampTimeZoneOffsetArgs> getTimeZoneOffset() {
        return this.timeZoneOffset == null ? Output.empty() : this.timeZoneOffset;
    }

    public LocalTimestampArgs(
        @Nullable Output<Either<String,LocalTimestampFormat>> format,
        @Nullable Output<LocalTimestampTimeZoneOffsetArgs> timeZoneOffset) {
        this.format = format;
        this.timeZoneOffset = timeZoneOffset;
    }

    private LocalTimestampArgs() {
        this.format = Output.empty();
        this.timeZoneOffset = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocalTimestampArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,LocalTimestampFormat>> format;
        private @Nullable Output<LocalTimestampTimeZoneOffsetArgs> timeZoneOffset;

        public Builder() {
    	      // Empty
        }

        public Builder(LocalTimestampArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.format = defaults.format;
    	      this.timeZoneOffset = defaults.timeZoneOffset;
        }

        public Builder format(@Nullable Output<Either<String,LocalTimestampFormat>> format) {
            this.format = format;
            return this;
        }

        public Builder format(@Nullable Either<String,LocalTimestampFormat> format) {
            this.format = Output.ofNullable(format);
            return this;
        }

        public Builder timeZoneOffset(@Nullable Output<LocalTimestampTimeZoneOffsetArgs> timeZoneOffset) {
            this.timeZoneOffset = timeZoneOffset;
            return this;
        }

        public Builder timeZoneOffset(@Nullable LocalTimestampTimeZoneOffsetArgs timeZoneOffset) {
            this.timeZoneOffset = Output.ofNullable(timeZoneOffset);
            return this;
        }
        public LocalTimestampArgs build() {
            return new LocalTimestampArgs(format, timeZoneOffset);
        }
    }
}
