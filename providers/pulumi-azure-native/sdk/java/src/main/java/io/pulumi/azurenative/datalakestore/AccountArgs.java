// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datalakestore;

import io.pulumi.azurenative.datalakestore.enums.EncryptionState;
import io.pulumi.azurenative.datalakestore.enums.FirewallAllowAzureIpsState;
import io.pulumi.azurenative.datalakestore.enums.FirewallState;
import io.pulumi.azurenative.datalakestore.enums.TierType;
import io.pulumi.azurenative.datalakestore.enums.TrustedIdProviderState;
import io.pulumi.azurenative.datalakestore.inputs.CreateFirewallRuleWithAccountParametersArgs;
import io.pulumi.azurenative.datalakestore.inputs.CreateTrustedIdProviderWithAccountParametersArgs;
import io.pulumi.azurenative.datalakestore.inputs.CreateVirtualNetworkRuleWithAccountParametersArgs;
import io.pulumi.azurenative.datalakestore.inputs.EncryptionConfigArgs;
import io.pulumi.azurenative.datalakestore.inputs.EncryptionIdentityArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccountArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccountArgs Empty = new AccountArgs();

    /**
     * The name of the Data Lake Store account.
     * 
     */
    @InputImport(name="accountName")
      private final @Nullable Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName == null ? Output.empty() : this.accountName;
    }

    /**
     * The default owner group for all new folders and files created in the Data Lake Store account.
     * 
     */
    @InputImport(name="defaultGroup")
      private final @Nullable Output<String> defaultGroup;

    public Output<String> getDefaultGroup() {
        return this.defaultGroup == null ? Output.empty() : this.defaultGroup;
    }

    /**
     * The Key Vault encryption configuration.
     * 
     */
    @InputImport(name="encryptionConfig")
      private final @Nullable Output<EncryptionConfigArgs> encryptionConfig;

    public Output<EncryptionConfigArgs> getEncryptionConfig() {
        return this.encryptionConfig == null ? Output.empty() : this.encryptionConfig;
    }

    /**
     * The current state of encryption for this Data Lake Store account.
     * 
     */
    @InputImport(name="encryptionState")
      private final @Nullable Output<EncryptionState> encryptionState;

    public Output<EncryptionState> getEncryptionState() {
        return this.encryptionState == null ? Output.empty() : this.encryptionState;
    }

    /**
     * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
     * 
     */
    @InputImport(name="firewallAllowAzureIps")
      private final @Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps;

    public Output<FirewallAllowAzureIpsState> getFirewallAllowAzureIps() {
        return this.firewallAllowAzureIps == null ? Output.empty() : this.firewallAllowAzureIps;
    }

    /**
     * The list of firewall rules associated with this Data Lake Store account.
     * 
     */
    @InputImport(name="firewallRules")
      private final @Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules;

    public Output<List<CreateFirewallRuleWithAccountParametersArgs>> getFirewallRules() {
        return this.firewallRules == null ? Output.empty() : this.firewallRules;
    }

    /**
     * The current state of the IP address firewall for this Data Lake Store account.
     * 
     */
    @InputImport(name="firewallState")
      private final @Nullable Output<FirewallState> firewallState;

    public Output<FirewallState> getFirewallState() {
        return this.firewallState == null ? Output.empty() : this.firewallState;
    }

    /**
     * The Key Vault encryption identity, if any.
     * 
     */
    @InputImport(name="identity")
      private final @Nullable Output<EncryptionIdentityArgs> identity;

    public Output<EncryptionIdentityArgs> getIdentity() {
        return this.identity == null ? Output.empty() : this.identity;
    }

    /**
     * The resource location.
     * 
     */
    @InputImport(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The commitment tier to use for next month.
     * 
     */
    @InputImport(name="newTier")
      private final @Nullable Output<TierType> newTier;

    public Output<TierType> getNewTier() {
        return this.newTier == null ? Output.empty() : this.newTier;
    }

    /**
     * The name of the Azure resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The resource tags.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * The current state of the trusted identity provider feature for this Data Lake Store account.
     * 
     */
    @InputImport(name="trustedIdProviderState")
      private final @Nullable Output<TrustedIdProviderState> trustedIdProviderState;

    public Output<TrustedIdProviderState> getTrustedIdProviderState() {
        return this.trustedIdProviderState == null ? Output.empty() : this.trustedIdProviderState;
    }

    /**
     * The list of trusted identity providers associated with this Data Lake Store account.
     * 
     */
    @InputImport(name="trustedIdProviders")
      private final @Nullable Output<List<CreateTrustedIdProviderWithAccountParametersArgs>> trustedIdProviders;

    public Output<List<CreateTrustedIdProviderWithAccountParametersArgs>> getTrustedIdProviders() {
        return this.trustedIdProviders == null ? Output.empty() : this.trustedIdProviders;
    }

    /**
     * The list of virtual network rules associated with this Data Lake Store account.
     * 
     */
    @InputImport(name="virtualNetworkRules")
      private final @Nullable Output<List<CreateVirtualNetworkRuleWithAccountParametersArgs>> virtualNetworkRules;

    public Output<List<CreateVirtualNetworkRuleWithAccountParametersArgs>> getVirtualNetworkRules() {
        return this.virtualNetworkRules == null ? Output.empty() : this.virtualNetworkRules;
    }

    public AccountArgs(
        @Nullable Output<String> accountName,
        @Nullable Output<String> defaultGroup,
        @Nullable Output<EncryptionConfigArgs> encryptionConfig,
        @Nullable Output<EncryptionState> encryptionState,
        @Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps,
        @Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules,
        @Nullable Output<FirewallState> firewallState,
        @Nullable Output<EncryptionIdentityArgs> identity,
        @Nullable Output<String> location,
        @Nullable Output<TierType> newTier,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<TrustedIdProviderState> trustedIdProviderState,
        @Nullable Output<List<CreateTrustedIdProviderWithAccountParametersArgs>> trustedIdProviders,
        @Nullable Output<List<CreateVirtualNetworkRuleWithAccountParametersArgs>> virtualNetworkRules) {
        this.accountName = accountName;
        this.defaultGroup = defaultGroup;
        this.encryptionConfig = encryptionConfig;
        this.encryptionState = encryptionState;
        this.firewallAllowAzureIps = firewallAllowAzureIps;
        this.firewallRules = firewallRules;
        this.firewallState = firewallState;
        this.identity = identity;
        this.location = location;
        this.newTier = newTier;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.trustedIdProviderState = trustedIdProviderState;
        this.trustedIdProviders = trustedIdProviders;
        this.virtualNetworkRules = virtualNetworkRules;
    }

    private AccountArgs() {
        this.accountName = Output.empty();
        this.defaultGroup = Output.empty();
        this.encryptionConfig = Output.empty();
        this.encryptionState = Output.empty();
        this.firewallAllowAzureIps = Output.empty();
        this.firewallRules = Output.empty();
        this.firewallState = Output.empty();
        this.identity = Output.empty();
        this.location = Output.empty();
        this.newTier = Output.empty();
        this.resourceGroupName = Output.empty();
        this.tags = Output.empty();
        this.trustedIdProviderState = Output.empty();
        this.trustedIdProviders = Output.empty();
        this.virtualNetworkRules = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountName;
        private @Nullable Output<String> defaultGroup;
        private @Nullable Output<EncryptionConfigArgs> encryptionConfig;
        private @Nullable Output<EncryptionState> encryptionState;
        private @Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps;
        private @Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules;
        private @Nullable Output<FirewallState> firewallState;
        private @Nullable Output<EncryptionIdentityArgs> identity;
        private @Nullable Output<String> location;
        private @Nullable Output<TierType> newTier;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<TrustedIdProviderState> trustedIdProviderState;
        private @Nullable Output<List<CreateTrustedIdProviderWithAccountParametersArgs>> trustedIdProviders;
        private @Nullable Output<List<CreateVirtualNetworkRuleWithAccountParametersArgs>> virtualNetworkRules;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.defaultGroup = defaults.defaultGroup;
    	      this.encryptionConfig = defaults.encryptionConfig;
    	      this.encryptionState = defaults.encryptionState;
    	      this.firewallAllowAzureIps = defaults.firewallAllowAzureIps;
    	      this.firewallRules = defaults.firewallRules;
    	      this.firewallState = defaults.firewallState;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.newTier = defaults.newTier;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.trustedIdProviderState = defaults.trustedIdProviderState;
    	      this.trustedIdProviders = defaults.trustedIdProviders;
    	      this.virtualNetworkRules = defaults.virtualNetworkRules;
        }

        public Builder accountName(@Nullable Output<String> accountName) {
            this.accountName = accountName;
            return this;
        }

        public Builder accountName(@Nullable String accountName) {
            this.accountName = Output.ofNullable(accountName);
            return this;
        }

        public Builder defaultGroup(@Nullable Output<String> defaultGroup) {
            this.defaultGroup = defaultGroup;
            return this;
        }

        public Builder defaultGroup(@Nullable String defaultGroup) {
            this.defaultGroup = Output.ofNullable(defaultGroup);
            return this;
        }

        public Builder encryptionConfig(@Nullable Output<EncryptionConfigArgs> encryptionConfig) {
            this.encryptionConfig = encryptionConfig;
            return this;
        }

        public Builder encryptionConfig(@Nullable EncryptionConfigArgs encryptionConfig) {
            this.encryptionConfig = Output.ofNullable(encryptionConfig);
            return this;
        }

        public Builder encryptionState(@Nullable Output<EncryptionState> encryptionState) {
            this.encryptionState = encryptionState;
            return this;
        }

        public Builder encryptionState(@Nullable EncryptionState encryptionState) {
            this.encryptionState = Output.ofNullable(encryptionState);
            return this;
        }

        public Builder firewallAllowAzureIps(@Nullable Output<FirewallAllowAzureIpsState> firewallAllowAzureIps) {
            this.firewallAllowAzureIps = firewallAllowAzureIps;
            return this;
        }

        public Builder firewallAllowAzureIps(@Nullable FirewallAllowAzureIpsState firewallAllowAzureIps) {
            this.firewallAllowAzureIps = Output.ofNullable(firewallAllowAzureIps);
            return this;
        }

        public Builder firewallRules(@Nullable Output<List<CreateFirewallRuleWithAccountParametersArgs>> firewallRules) {
            this.firewallRules = firewallRules;
            return this;
        }

        public Builder firewallRules(@Nullable List<CreateFirewallRuleWithAccountParametersArgs> firewallRules) {
            this.firewallRules = Output.ofNullable(firewallRules);
            return this;
        }

        public Builder firewallState(@Nullable Output<FirewallState> firewallState) {
            this.firewallState = firewallState;
            return this;
        }

        public Builder firewallState(@Nullable FirewallState firewallState) {
            this.firewallState = Output.ofNullable(firewallState);
            return this;
        }

        public Builder identity(@Nullable Output<EncryptionIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }

        public Builder identity(@Nullable EncryptionIdentityArgs identity) {
            this.identity = Output.ofNullable(identity);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder newTier(@Nullable Output<TierType> newTier) {
            this.newTier = newTier;
            return this;
        }

        public Builder newTier(@Nullable TierType newTier) {
            this.newTier = Output.ofNullable(newTier);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder trustedIdProviderState(@Nullable Output<TrustedIdProviderState> trustedIdProviderState) {
            this.trustedIdProviderState = trustedIdProviderState;
            return this;
        }

        public Builder trustedIdProviderState(@Nullable TrustedIdProviderState trustedIdProviderState) {
            this.trustedIdProviderState = Output.ofNullable(trustedIdProviderState);
            return this;
        }

        public Builder trustedIdProviders(@Nullable Output<List<CreateTrustedIdProviderWithAccountParametersArgs>> trustedIdProviders) {
            this.trustedIdProviders = trustedIdProviders;
            return this;
        }

        public Builder trustedIdProviders(@Nullable List<CreateTrustedIdProviderWithAccountParametersArgs> trustedIdProviders) {
            this.trustedIdProviders = Output.ofNullable(trustedIdProviders);
            return this;
        }

        public Builder virtualNetworkRules(@Nullable Output<List<CreateVirtualNetworkRuleWithAccountParametersArgs>> virtualNetworkRules) {
            this.virtualNetworkRules = virtualNetworkRules;
            return this;
        }

        public Builder virtualNetworkRules(@Nullable List<CreateVirtualNetworkRuleWithAccountParametersArgs> virtualNetworkRules) {
            this.virtualNetworkRules = Output.ofNullable(virtualNetworkRules);
            return this;
        }
        public AccountArgs build() {
            return new AccountArgs(accountName, defaultGroup, encryptionConfig, encryptionState, firewallAllowAzureIps, firewallRules, firewallState, identity, location, newTier, resourceGroupName, tags, trustedIdProviderState, trustedIdProviders, virtualNetworkRules);
        }
    }
}
