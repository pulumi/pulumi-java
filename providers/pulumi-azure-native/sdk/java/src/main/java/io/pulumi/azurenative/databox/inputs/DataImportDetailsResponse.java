// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databox.inputs;

import io.pulumi.azurenative.databox.inputs.ManagedDiskDetailsResponse;
import io.pulumi.azurenative.databox.inputs.StorageAccountDetailsResponse;
import io.pulumi.core.Either;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;


/**
 * Details of the data to be used for importing data to azure.
 * 
 */
public final class DataImportDetailsResponse extends io.pulumi.resources.InvokeArgs {

    public static final DataImportDetailsResponse Empty = new DataImportDetailsResponse();

    /**
     * Account details of the data to be transferred
     * 
     */
    @InputImport(name="accountDetails", required=true)
    private final Either<ManagedDiskDetailsResponse,StorageAccountDetailsResponse> accountDetails;

    public Either<ManagedDiskDetailsResponse,StorageAccountDetailsResponse> getAccountDetails() {
        return this.accountDetails;
    }

    public DataImportDetailsResponse(Either<ManagedDiskDetailsResponse,StorageAccountDetailsResponse> accountDetails) {
        this.accountDetails = Objects.requireNonNull(accountDetails, "expected parameter 'accountDetails' to be non-null");
    }

    private DataImportDetailsResponse() {
        this.accountDetails = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataImportDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Either<ManagedDiskDetailsResponse,StorageAccountDetailsResponse> accountDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(DataImportDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountDetails = defaults.accountDetails;
        }

        public Builder setAccountDetails(Either<ManagedDiskDetailsResponse,StorageAccountDetailsResponse> accountDetails) {
            this.accountDetails = Objects.requireNonNull(accountDetails);
            return this;
        }

        public DataImportDetailsResponse build() {
            return new DataImportDetailsResponse(accountDetails);
        }
    }
}
