// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.network.inputs.ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs;
import io.pulumi.azurenative.network.inputs.VirtualHubIdArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ExpressRouteGatewayArgs extends io.pulumi.resources.ResourceArgs {

    public static final ExpressRouteGatewayArgs Empty = new ExpressRouteGatewayArgs();

    /**
     * Configuration for auto scaling.
     * 
     */
    @Import(name="autoScaleConfiguration")
      private final @Nullable Output<ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs> autoScaleConfiguration;

    public Output<ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs> getAutoScaleConfiguration() {
        return this.autoScaleConfiguration == null ? Codegen.empty() : this.autoScaleConfiguration;
    }

    /**
     * The name of the ExpressRoute gateway.
     * 
     */
    @Import(name="expressRouteGatewayName")
      private final @Nullable Output<String> expressRouteGatewayName;

    public Output<String> getExpressRouteGatewayName() {
        return this.expressRouteGatewayName == null ? Codegen.empty() : this.expressRouteGatewayName;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The Virtual Hub where the ExpressRoute gateway is or will be deployed.
     * 
     */
    @Import(name="virtualHub", required=true)
      private final Output<VirtualHubIdArgs> virtualHub;

    public Output<VirtualHubIdArgs> getVirtualHub() {
        return this.virtualHub;
    }

    public ExpressRouteGatewayArgs(
        @Nullable Output<ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs> autoScaleConfiguration,
        @Nullable Output<String> expressRouteGatewayName,
        @Nullable Output<String> id,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags,
        Output<VirtualHubIdArgs> virtualHub) {
        this.autoScaleConfiguration = autoScaleConfiguration;
        this.expressRouteGatewayName = expressRouteGatewayName;
        this.id = id;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.virtualHub = Objects.requireNonNull(virtualHub, "expected parameter 'virtualHub' to be non-null");
    }

    private ExpressRouteGatewayArgs() {
        this.autoScaleConfiguration = Codegen.empty();
        this.expressRouteGatewayName = Codegen.empty();
        this.id = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
        this.virtualHub = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExpressRouteGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs> autoScaleConfiguration;
        private @Nullable Output<String> expressRouteGatewayName;
        private @Nullable Output<String> id;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;
        private Output<VirtualHubIdArgs> virtualHub;

        public Builder() {
    	      // Empty
        }

        public Builder(ExpressRouteGatewayArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoScaleConfiguration = defaults.autoScaleConfiguration;
    	      this.expressRouteGatewayName = defaults.expressRouteGatewayName;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.virtualHub = defaults.virtualHub;
        }

        public Builder autoScaleConfiguration(@Nullable Output<ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs> autoScaleConfiguration) {
            this.autoScaleConfiguration = autoScaleConfiguration;
            return this;
        }
        public Builder autoScaleConfiguration(@Nullable ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs autoScaleConfiguration) {
            this.autoScaleConfiguration = Codegen.ofNullable(autoScaleConfiguration);
            return this;
        }
        public Builder expressRouteGatewayName(@Nullable Output<String> expressRouteGatewayName) {
            this.expressRouteGatewayName = expressRouteGatewayName;
            return this;
        }
        public Builder expressRouteGatewayName(@Nullable String expressRouteGatewayName) {
            this.expressRouteGatewayName = Codegen.ofNullable(expressRouteGatewayName);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder virtualHub(Output<VirtualHubIdArgs> virtualHub) {
            this.virtualHub = Objects.requireNonNull(virtualHub);
            return this;
        }
        public Builder virtualHub(VirtualHubIdArgs virtualHub) {
            this.virtualHub = Output.of(Objects.requireNonNull(virtualHub));
            return this;
        }        public ExpressRouteGatewayArgs build() {
            return new ExpressRouteGatewayArgs(autoScaleConfiguration, expressRouteGatewayName, id, location, resourceGroupName, tags, virtualHub);
        }
    }
}
