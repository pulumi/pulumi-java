// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearning.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Association link for a graph global parameter to a node in the graph.
 * 
 */
public final class GraphParameterLinkResponse extends io.pulumi.resources.InvokeArgs {

    public static final GraphParameterLinkResponse Empty = new GraphParameterLinkResponse();

    /**
     * The graph node's identifier
     * 
     */
    @Import(name="nodeId", required=true)
      private final String nodeId;

    public String getNodeId() {
        return this.nodeId;
    }

    /**
     * The identifier of the node parameter that the global parameter maps to.
     * 
     */
    @Import(name="parameterKey", required=true)
      private final String parameterKey;

    public String getParameterKey() {
        return this.parameterKey;
    }

    public GraphParameterLinkResponse(
        String nodeId,
        String parameterKey) {
        this.nodeId = Objects.requireNonNull(nodeId, "expected parameter 'nodeId' to be non-null");
        this.parameterKey = Objects.requireNonNull(parameterKey, "expected parameter 'parameterKey' to be non-null");
    }

    private GraphParameterLinkResponse() {
        this.nodeId = null;
        this.parameterKey = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GraphParameterLinkResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String nodeId;
        private String parameterKey;

        public Builder() {
    	      // Empty
        }

        public Builder(GraphParameterLinkResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nodeId = defaults.nodeId;
    	      this.parameterKey = defaults.parameterKey;
        }

        public Builder nodeId(String nodeId) {
            this.nodeId = Objects.requireNonNull(nodeId);
            return this;
        }

        public Builder parameterKey(String parameterKey) {
            this.parameterKey = Objects.requireNonNull(parameterKey);
            return this;
        }
        public GraphParameterLinkResponse build() {
            return new GraphParameterLinkResponse(nodeId, parameterKey);
        }
    }
}
