// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage;

import io.pulumi.azurenative.storage.inputs.BlobInventoryPolicySchemaArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BlobInventoryPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final BlobInventoryPolicyArgs Empty = new BlobInventoryPolicyArgs();

    /**
     * The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * 
     */
    @Import(name="accountName", required=true)
      private final Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName;
    }

    /**
     * The name of the storage account blob inventory policy. It should always be 'default'
     * 
     */
    @Import(name="blobInventoryPolicyName")
      private final @Nullable Output<String> blobInventoryPolicyName;

    public Output<String> getBlobInventoryPolicyName() {
        return this.blobInventoryPolicyName == null ? Codegen.empty() : this.blobInventoryPolicyName;
    }

    /**
     * The storage account blob inventory policy object. It is composed of policy rules.
     * 
     */
    @Import(name="policy", required=true)
      private final Output<BlobInventoryPolicySchemaArgs> policy;

    public Output<BlobInventoryPolicySchemaArgs> getPolicy() {
        return this.policy;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public BlobInventoryPolicyArgs(
        Output<String> accountName,
        @Nullable Output<String> blobInventoryPolicyName,
        Output<BlobInventoryPolicySchemaArgs> policy,
        Output<String> resourceGroupName) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.blobInventoryPolicyName = blobInventoryPolicyName;
        this.policy = Objects.requireNonNull(policy, "expected parameter 'policy' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private BlobInventoryPolicyArgs() {
        this.accountName = Codegen.empty();
        this.blobInventoryPolicyName = Codegen.empty();
        this.policy = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BlobInventoryPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountName;
        private @Nullable Output<String> blobInventoryPolicyName;
        private Output<BlobInventoryPolicySchemaArgs> policy;
        private Output<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(BlobInventoryPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.blobInventoryPolicyName = defaults.blobInventoryPolicyName;
    	      this.policy = defaults.policy;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder accountName(Output<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        public Builder accountName(String accountName) {
            this.accountName = Output.of(Objects.requireNonNull(accountName));
            return this;
        }
        public Builder blobInventoryPolicyName(@Nullable Output<String> blobInventoryPolicyName) {
            this.blobInventoryPolicyName = blobInventoryPolicyName;
            return this;
        }
        public Builder blobInventoryPolicyName(@Nullable String blobInventoryPolicyName) {
            this.blobInventoryPolicyName = Codegen.ofNullable(blobInventoryPolicyName);
            return this;
        }
        public Builder policy(Output<BlobInventoryPolicySchemaArgs> policy) {
            this.policy = Objects.requireNonNull(policy);
            return this;
        }
        public Builder policy(BlobInventoryPolicySchemaArgs policy) {
            this.policy = Output.of(Objects.requireNonNull(policy));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }        public BlobInventoryPolicyArgs build() {
            return new BlobInventoryPolicyArgs(accountName, blobInventoryPolicyName, policy, resourceGroupName);
        }
    }
}
