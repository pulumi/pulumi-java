// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.costmanagement.inputs;

import io.pulumi.azurenative.costmanagement.inputs.SourceCostAllocationResourceArgs;
import io.pulumi.azurenative.costmanagement.inputs.TargetCostAllocationResourceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Resource details of the cost allocation rule
 * 
 */
public final class CostAllocationRuleDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final CostAllocationRuleDetailsArgs Empty = new CostAllocationRuleDetailsArgs();

    /**
     * Source resources for cost allocation. At this time, this list can contain no more than one element.
     * 
     */
    @InputImport(name="sourceResources")
      private final @Nullable Output<List<SourceCostAllocationResourceArgs>> sourceResources;

    public Output<List<SourceCostAllocationResourceArgs>> getSourceResources() {
        return this.sourceResources == null ? Output.empty() : this.sourceResources;
    }

    /**
     * Target resources for cost allocation. At this time, this list can contain no more than one element.
     * 
     */
    @InputImport(name="targetResources")
      private final @Nullable Output<List<TargetCostAllocationResourceArgs>> targetResources;

    public Output<List<TargetCostAllocationResourceArgs>> getTargetResources() {
        return this.targetResources == null ? Output.empty() : this.targetResources;
    }

    public CostAllocationRuleDetailsArgs(
        @Nullable Output<List<SourceCostAllocationResourceArgs>> sourceResources,
        @Nullable Output<List<TargetCostAllocationResourceArgs>> targetResources) {
        this.sourceResources = sourceResources;
        this.targetResources = targetResources;
    }

    private CostAllocationRuleDetailsArgs() {
        this.sourceResources = Output.empty();
        this.targetResources = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CostAllocationRuleDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<SourceCostAllocationResourceArgs>> sourceResources;
        private @Nullable Output<List<TargetCostAllocationResourceArgs>> targetResources;

        public Builder() {
    	      // Empty
        }

        public Builder(CostAllocationRuleDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceResources = defaults.sourceResources;
    	      this.targetResources = defaults.targetResources;
        }

        public Builder sourceResources(@Nullable Output<List<SourceCostAllocationResourceArgs>> sourceResources) {
            this.sourceResources = sourceResources;
            return this;
        }

        public Builder sourceResources(@Nullable List<SourceCostAllocationResourceArgs> sourceResources) {
            this.sourceResources = Output.ofNullable(sourceResources);
            return this;
        }

        public Builder targetResources(@Nullable Output<List<TargetCostAllocationResourceArgs>> targetResources) {
            this.targetResources = targetResources;
            return this;
        }

        public Builder targetResources(@Nullable List<TargetCostAllocationResourceArgs> targetResources) {
            this.targetResources = Output.ofNullable(targetResources);
            return this;
        }
        public CostAllocationRuleDetailsArgs build() {
            return new CostAllocationRuleDetailsArgs(sourceResources, targetResources);
        }
    }
}
