// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hybridnetwork;

import io.pulumi.azurenative.hybridnetwork.inputs.NetworkFunctionUserConfigurationArgs;
import io.pulumi.azurenative.hybridnetwork.inputs.SubResourceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkFunctionArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkFunctionArgs Empty = new NetworkFunctionArgs();

    @InputImport(name="device")
    private final @Nullable Input<SubResourceArgs> device;

    public Input<SubResourceArgs> getDevice() {
        return this.device == null ? Input.empty() : this.device;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="managedApplicationParameters")
    private final @Nullable Input<Object> managedApplicationParameters;

    public Input<Object> getManagedApplicationParameters() {
        return this.managedApplicationParameters == null ? Input.empty() : this.managedApplicationParameters;
    }

    @InputImport(name="networkFunctionName")
    private final @Nullable Input<String> networkFunctionName;

    public Input<String> getNetworkFunctionName() {
        return this.networkFunctionName == null ? Input.empty() : this.networkFunctionName;
    }

    @InputImport(name="networkFunctionUserConfigurations")
    private final @Nullable Input<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations;

    public Input<List<NetworkFunctionUserConfigurationArgs>> getNetworkFunctionUserConfigurations() {
        return this.networkFunctionUserConfigurations == null ? Input.empty() : this.networkFunctionUserConfigurations;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="skuName")
    private final @Nullable Input<String> skuName;

    public Input<String> getSkuName() {
        return this.skuName == null ? Input.empty() : this.skuName;
    }

    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="vendorName")
    private final @Nullable Input<String> vendorName;

    public Input<String> getVendorName() {
        return this.vendorName == null ? Input.empty() : this.vendorName;
    }

    public NetworkFunctionArgs(
        @Nullable Input<SubResourceArgs> device,
        @Nullable Input<String> location,
        @Nullable Input<Object> managedApplicationParameters,
        @Nullable Input<String> networkFunctionName,
        @Nullable Input<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations,
        Input<String> resourceGroupName,
        @Nullable Input<String> skuName,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> vendorName) {
        this.device = device;
        this.location = location;
        this.managedApplicationParameters = managedApplicationParameters;
        this.networkFunctionName = networkFunctionName;
        this.networkFunctionUserConfigurations = networkFunctionUserConfigurations;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.skuName = skuName;
        this.tags = tags;
        this.vendorName = vendorName;
    }

    private NetworkFunctionArgs() {
        this.device = Input.empty();
        this.location = Input.empty();
        this.managedApplicationParameters = Input.empty();
        this.networkFunctionName = Input.empty();
        this.networkFunctionUserConfigurations = Input.empty();
        this.resourceGroupName = Input.empty();
        this.skuName = Input.empty();
        this.tags = Input.empty();
        this.vendorName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkFunctionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<SubResourceArgs> device;
        private @Nullable Input<String> location;
        private @Nullable Input<Object> managedApplicationParameters;
        private @Nullable Input<String> networkFunctionName;
        private @Nullable Input<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> skuName;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> vendorName;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkFunctionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.location = defaults.location;
    	      this.managedApplicationParameters = defaults.managedApplicationParameters;
    	      this.networkFunctionName = defaults.networkFunctionName;
    	      this.networkFunctionUserConfigurations = defaults.networkFunctionUserConfigurations;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.skuName = defaults.skuName;
    	      this.tags = defaults.tags;
    	      this.vendorName = defaults.vendorName;
        }

        public Builder setDevice(@Nullable Input<SubResourceArgs> device) {
            this.device = device;
            return this;
        }

        public Builder setDevice(@Nullable SubResourceArgs device) {
            this.device = Input.ofNullable(device);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setManagedApplicationParameters(@Nullable Input<Object> managedApplicationParameters) {
            this.managedApplicationParameters = managedApplicationParameters;
            return this;
        }

        public Builder setManagedApplicationParameters(@Nullable Object managedApplicationParameters) {
            this.managedApplicationParameters = Input.ofNullable(managedApplicationParameters);
            return this;
        }

        public Builder setNetworkFunctionName(@Nullable Input<String> networkFunctionName) {
            this.networkFunctionName = networkFunctionName;
            return this;
        }

        public Builder setNetworkFunctionName(@Nullable String networkFunctionName) {
            this.networkFunctionName = Input.ofNullable(networkFunctionName);
            return this;
        }

        public Builder setNetworkFunctionUserConfigurations(@Nullable Input<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations) {
            this.networkFunctionUserConfigurations = networkFunctionUserConfigurations;
            return this;
        }

        public Builder setNetworkFunctionUserConfigurations(@Nullable List<NetworkFunctionUserConfigurationArgs> networkFunctionUserConfigurations) {
            this.networkFunctionUserConfigurations = Input.ofNullable(networkFunctionUserConfigurations);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setSkuName(@Nullable Input<String> skuName) {
            this.skuName = skuName;
            return this;
        }

        public Builder setSkuName(@Nullable String skuName) {
            this.skuName = Input.ofNullable(skuName);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVendorName(@Nullable Input<String> vendorName) {
            this.vendorName = vendorName;
            return this;
        }

        public Builder setVendorName(@Nullable String vendorName) {
            this.vendorName = Input.ofNullable(vendorName);
            return this;
        }

        public NetworkFunctionArgs build() {
            return new NetworkFunctionArgs(device, location, managedApplicationParameters, networkFunctionName, networkFunctionUserConfigurations, resourceGroupName, skuName, tags, vendorName);
        }
    }
}
