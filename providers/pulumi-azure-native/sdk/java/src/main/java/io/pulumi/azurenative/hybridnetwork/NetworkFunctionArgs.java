// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hybridnetwork;

import io.pulumi.azurenative.hybridnetwork.inputs.NetworkFunctionUserConfigurationArgs;
import io.pulumi.azurenative.hybridnetwork.inputs.SubResourceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkFunctionArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkFunctionArgs Empty = new NetworkFunctionArgs();

    /**
     * The reference to the device resource.
     * 
     */
    @Import(name="device")
      private final @Nullable Output<SubResourceArgs> device;

    public Output<SubResourceArgs> getDevice() {
        return this.device == null ? Output.empty() : this.device;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The parameters for the managed application.
     * 
     */
    @Import(name="managedApplicationParameters")
      private final @Nullable Output<Object> managedApplicationParameters;

    public Output<Object> getManagedApplicationParameters() {
        return this.managedApplicationParameters == null ? Output.empty() : this.managedApplicationParameters;
    }

    /**
     * Resource name for the network function resource.
     * 
     */
    @Import(name="networkFunctionName")
      private final @Nullable Output<String> networkFunctionName;

    public Output<String> getNetworkFunctionName() {
        return this.networkFunctionName == null ? Output.empty() : this.networkFunctionName;
    }

    /**
     * The network function configurations from the user.
     * 
     */
    @Import(name="networkFunctionUserConfigurations")
      private final @Nullable Output<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations;

    public Output<List<NetworkFunctionUserConfigurationArgs>> getNetworkFunctionUserConfigurations() {
        return this.networkFunctionUserConfigurations == null ? Output.empty() : this.networkFunctionUserConfigurations;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The sku name for the network function.
     * 
     */
    @Import(name="skuName")
      private final @Nullable Output<String> skuName;

    public Output<String> getSkuName() {
        return this.skuName == null ? Output.empty() : this.skuName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * The vendor name for the network function.
     * 
     */
    @Import(name="vendorName")
      private final @Nullable Output<String> vendorName;

    public Output<String> getVendorName() {
        return this.vendorName == null ? Output.empty() : this.vendorName;
    }

    public NetworkFunctionArgs(
        @Nullable Output<SubResourceArgs> device,
        @Nullable Output<String> location,
        @Nullable Output<Object> managedApplicationParameters,
        @Nullable Output<String> networkFunctionName,
        @Nullable Output<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations,
        Output<String> resourceGroupName,
        @Nullable Output<String> skuName,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> vendorName) {
        this.device = device;
        this.location = location;
        this.managedApplicationParameters = managedApplicationParameters;
        this.networkFunctionName = networkFunctionName;
        this.networkFunctionUserConfigurations = networkFunctionUserConfigurations;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.skuName = skuName;
        this.tags = tags;
        this.vendorName = vendorName;
    }

    private NetworkFunctionArgs() {
        this.device = Output.empty();
        this.location = Output.empty();
        this.managedApplicationParameters = Output.empty();
        this.networkFunctionName = Output.empty();
        this.networkFunctionUserConfigurations = Output.empty();
        this.resourceGroupName = Output.empty();
        this.skuName = Output.empty();
        this.tags = Output.empty();
        this.vendorName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkFunctionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SubResourceArgs> device;
        private @Nullable Output<String> location;
        private @Nullable Output<Object> managedApplicationParameters;
        private @Nullable Output<String> networkFunctionName;
        private @Nullable Output<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> skuName;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> vendorName;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkFunctionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.location = defaults.location;
    	      this.managedApplicationParameters = defaults.managedApplicationParameters;
    	      this.networkFunctionName = defaults.networkFunctionName;
    	      this.networkFunctionUserConfigurations = defaults.networkFunctionUserConfigurations;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.skuName = defaults.skuName;
    	      this.tags = defaults.tags;
    	      this.vendorName = defaults.vendorName;
        }

        public Builder device(@Nullable Output<SubResourceArgs> device) {
            this.device = device;
            return this;
        }
        public Builder device(@Nullable SubResourceArgs device) {
            this.device = Output.ofNullable(device);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder managedApplicationParameters(@Nullable Output<Object> managedApplicationParameters) {
            this.managedApplicationParameters = managedApplicationParameters;
            return this;
        }
        public Builder managedApplicationParameters(@Nullable Object managedApplicationParameters) {
            this.managedApplicationParameters = Output.ofNullable(managedApplicationParameters);
            return this;
        }
        public Builder networkFunctionName(@Nullable Output<String> networkFunctionName) {
            this.networkFunctionName = networkFunctionName;
            return this;
        }
        public Builder networkFunctionName(@Nullable String networkFunctionName) {
            this.networkFunctionName = Output.ofNullable(networkFunctionName);
            return this;
        }
        public Builder networkFunctionUserConfigurations(@Nullable Output<List<NetworkFunctionUserConfigurationArgs>> networkFunctionUserConfigurations) {
            this.networkFunctionUserConfigurations = networkFunctionUserConfigurations;
            return this;
        }
        public Builder networkFunctionUserConfigurations(@Nullable List<NetworkFunctionUserConfigurationArgs> networkFunctionUserConfigurations) {
            this.networkFunctionUserConfigurations = Output.ofNullable(networkFunctionUserConfigurations);
            return this;
        }
        public Builder networkFunctionUserConfigurations(NetworkFunctionUserConfigurationArgs... networkFunctionUserConfigurations) {
            return networkFunctionUserConfigurations(List.of(networkFunctionUserConfigurations));
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder skuName(@Nullable Output<String> skuName) {
            this.skuName = skuName;
            return this;
        }
        public Builder skuName(@Nullable String skuName) {
            this.skuName = Output.ofNullable(skuName);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder vendorName(@Nullable Output<String> vendorName) {
            this.vendorName = vendorName;
            return this;
        }
        public Builder vendorName(@Nullable String vendorName) {
            this.vendorName = Output.ofNullable(vendorName);
            return this;
        }        public NetworkFunctionArgs build() {
            return new NetworkFunctionArgs(device, location, managedApplicationParameters, networkFunctionName, networkFunctionUserConfigurations, resourceGroupName, skuName, tags, vendorName);
        }
    }
}
