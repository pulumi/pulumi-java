// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.edgeorder.inputs;

import io.pulumi.azurenative.edgeorder.enums.DoubleEncryptionStatus;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Preferences related to the double encryption
 * 
 */
public final class EncryptionPreferencesArgs extends io.pulumi.resources.ResourceArgs {

    public static final EncryptionPreferencesArgs Empty = new EncryptionPreferencesArgs();

    /**
     * Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
     * 
     */
    @Import(name="doubleEncryptionStatus")
      private final @Nullable Output<Either<String,DoubleEncryptionStatus>> doubleEncryptionStatus;

    public Output<Either<String,DoubleEncryptionStatus>> getDoubleEncryptionStatus() {
        return this.doubleEncryptionStatus == null ? Output.empty() : this.doubleEncryptionStatus;
    }

    public EncryptionPreferencesArgs(@Nullable Output<Either<String,DoubleEncryptionStatus>> doubleEncryptionStatus) {
        this.doubleEncryptionStatus = doubleEncryptionStatus;
    }

    private EncryptionPreferencesArgs() {
        this.doubleEncryptionStatus = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionPreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,DoubleEncryptionStatus>> doubleEncryptionStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(EncryptionPreferencesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.doubleEncryptionStatus = defaults.doubleEncryptionStatus;
        }

        public Builder doubleEncryptionStatus(@Nullable Output<Either<String,DoubleEncryptionStatus>> doubleEncryptionStatus) {
            this.doubleEncryptionStatus = doubleEncryptionStatus;
            return this;
        }

        public Builder doubleEncryptionStatus(@Nullable Either<String,DoubleEncryptionStatus> doubleEncryptionStatus) {
            this.doubleEncryptionStatus = Output.ofNullable(doubleEncryptionStatus);
            return this;
        }
        public EncryptionPreferencesArgs build() {
            return new EncryptionPreferencesArgs(doubleEncryptionStatus);
        }
    }
}
