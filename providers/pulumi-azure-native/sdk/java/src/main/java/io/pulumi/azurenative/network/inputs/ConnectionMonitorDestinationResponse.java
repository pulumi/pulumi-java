// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the destination of connection monitor.
 * 
 */
public final class ConnectionMonitorDestinationResponse extends io.pulumi.resources.InvokeArgs {

    public static final ConnectionMonitorDestinationResponse Empty = new ConnectionMonitorDestinationResponse();

    /**
     * Address of the connection monitor destination (IP or domain name).
     * 
     */
    @Import(name="address")
      private final @Nullable String address;

    public Optional<String> address() {
        return this.address == null ? Optional.empty() : Optional.ofNullable(this.address);
    }

    /**
     * The destination port used by connection monitor.
     * 
     */
    @Import(name="port")
      private final @Nullable Integer port;

    public Optional<Integer> port() {
        return this.port == null ? Optional.empty() : Optional.ofNullable(this.port);
    }

    /**
     * The ID of the resource used as the destination by connection monitor.
     * 
     */
    @Import(name="resourceId")
      private final @Nullable String resourceId;

    public Optional<String> resourceId() {
        return this.resourceId == null ? Optional.empty() : Optional.ofNullable(this.resourceId);
    }

    public ConnectionMonitorDestinationResponse(
        @Nullable String address,
        @Nullable Integer port,
        @Nullable String resourceId) {
        this.address = address;
        this.port = port;
        this.resourceId = resourceId;
    }

    private ConnectionMonitorDestinationResponse() {
        this.address = null;
        this.port = null;
        this.resourceId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionMonitorDestinationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String address;
        private @Nullable Integer port;
        private @Nullable String resourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionMonitorDestinationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.port = defaults.port;
    	      this.resourceId = defaults.resourceId;
        }

        public Builder address(@Nullable String address) {
            this.address = address;
            return this;
        }
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }        public ConnectionMonitorDestinationResponse build() {
            return new ConnectionMonitorDestinationResponse(address, port, resourceId);
        }
    }
}
