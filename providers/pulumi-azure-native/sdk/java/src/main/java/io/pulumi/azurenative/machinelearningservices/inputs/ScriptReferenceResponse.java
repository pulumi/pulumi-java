// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Script reference
 * 
 */
public final class ScriptReferenceResponse extends io.pulumi.resources.InvokeArgs {

    public static final ScriptReferenceResponse Empty = new ScriptReferenceResponse();

    /**
     * Optional command line arguments passed to the script to run.
     * 
     */
    @InputImport(name="scriptArguments")
        private final @Nullable String scriptArguments;

    public Optional<String> getScriptArguments() {
        return this.scriptArguments == null ? Optional.empty() : Optional.ofNullable(this.scriptArguments);
    }

    /**
     * The location of scripts in the mounted volume.
     * 
     */
    @InputImport(name="scriptData")
        private final @Nullable String scriptData;

    public Optional<String> getScriptData() {
        return this.scriptData == null ? Optional.empty() : Optional.ofNullable(this.scriptData);
    }

    /**
     * The storage source of the script: inline, workspace.
     * 
     */
    @InputImport(name="scriptSource")
        private final @Nullable String scriptSource;

    public Optional<String> getScriptSource() {
        return this.scriptSource == null ? Optional.empty() : Optional.ofNullable(this.scriptSource);
    }

    /**
     * Optional time period passed to timeout command.
     * 
     */
    @InputImport(name="timeout")
        private final @Nullable String timeout;

    public Optional<String> getTimeout() {
        return this.timeout == null ? Optional.empty() : Optional.ofNullable(this.timeout);
    }

    public ScriptReferenceResponse(
        @Nullable String scriptArguments,
        @Nullable String scriptData,
        @Nullable String scriptSource,
        @Nullable String timeout) {
        this.scriptArguments = scriptArguments;
        this.scriptData = scriptData;
        this.scriptSource = scriptSource;
        this.timeout = timeout;
    }

    private ScriptReferenceResponse() {
        this.scriptArguments = null;
        this.scriptData = null;
        this.scriptSource = null;
        this.timeout = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScriptReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String scriptArguments;
        private @Nullable String scriptData;
        private @Nullable String scriptSource;
        private @Nullable String timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(ScriptReferenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scriptArguments = defaults.scriptArguments;
    	      this.scriptData = defaults.scriptData;
    	      this.scriptSource = defaults.scriptSource;
    	      this.timeout = defaults.timeout;
        }

        public Builder setScriptArguments(@Nullable String scriptArguments) {
            this.scriptArguments = scriptArguments;
            return this;
        }

        public Builder setScriptData(@Nullable String scriptData) {
            this.scriptData = scriptData;
            return this;
        }

        public Builder setScriptSource(@Nullable String scriptSource) {
            this.scriptSource = scriptSource;
            return this;
        }

        public Builder setTimeout(@Nullable String timeout) {
            this.timeout = timeout;
            return this;
        }
        public ScriptReferenceResponse build() {
            return new ScriptReferenceResponse(scriptArguments, scriptData, scriptSource, timeout);
        }
    }
}
