// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Class for content key in Streaming Locator
 * 
 */
public final class StreamingLocatorContentKeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final StreamingLocatorContentKeyArgs Empty = new StreamingLocatorContentKeyArgs();

    /**
     * ID of Content Key
     * 
     */
    @Import(name="id", required=true)
      private final Output<String> id;

    public Output<String> getId() {
        return this.id;
    }

    /**
     * Label of Content Key as specified in the Streaming Policy
     * 
     */
    @Import(name="labelReferenceInStreamingPolicy")
      private final @Nullable Output<String> labelReferenceInStreamingPolicy;

    public Output<String> getLabelReferenceInStreamingPolicy() {
        return this.labelReferenceInStreamingPolicy == null ? Output.empty() : this.labelReferenceInStreamingPolicy;
    }

    /**
     * Value of Content Key
     * 
     */
    @Import(name="value")
      private final @Nullable Output<String> value;

    public Output<String> getValue() {
        return this.value == null ? Output.empty() : this.value;
    }

    public StreamingLocatorContentKeyArgs(
        Output<String> id,
        @Nullable Output<String> labelReferenceInStreamingPolicy,
        @Nullable Output<String> value) {
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.labelReferenceInStreamingPolicy = labelReferenceInStreamingPolicy;
        this.value = value;
    }

    private StreamingLocatorContentKeyArgs() {
        this.id = Output.empty();
        this.labelReferenceInStreamingPolicy = Output.empty();
        this.value = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingLocatorContentKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> id;
        private @Nullable Output<String> labelReferenceInStreamingPolicy;
        private @Nullable Output<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(StreamingLocatorContentKeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.labelReferenceInStreamingPolicy = defaults.labelReferenceInStreamingPolicy;
    	      this.value = defaults.value;
        }

        public Builder id(Output<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder id(String id) {
            this.id = Output.of(Objects.requireNonNull(id));
            return this;
        }
        public Builder labelReferenceInStreamingPolicy(@Nullable Output<String> labelReferenceInStreamingPolicy) {
            this.labelReferenceInStreamingPolicy = labelReferenceInStreamingPolicy;
            return this;
        }
        public Builder labelReferenceInStreamingPolicy(@Nullable String labelReferenceInStreamingPolicy) {
            this.labelReferenceInStreamingPolicy = Output.ofNullable(labelReferenceInStreamingPolicy);
            return this;
        }
        public Builder value(@Nullable Output<String> value) {
            this.value = value;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = Output.ofNullable(value);
            return this;
        }        public StreamingLocatorContentKeyArgs build() {
            return new StreamingLocatorContentKeyArgs(id, labelReferenceInStreamingPolicy, value);
        }
    }
}
