// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DiskExclusionPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final DiskExclusionPropertiesArgs Empty = new DiskExclusionPropertiesArgs();

    /**
     * List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
     * 
     */
    @Import(name="diskLunList")
      private final @Nullable Output<List<Integer>> diskLunList;

    public Output<List<Integer>> diskLunList() {
        return this.diskLunList == null ? Codegen.empty() : this.diskLunList;
    }

    /**
     * Flag to indicate whether DiskLunList is to be included/ excluded from backup.
     * 
     */
    @Import(name="isInclusionList")
      private final @Nullable Output<Boolean> isInclusionList;

    public Output<Boolean> isInclusionList() {
        return this.isInclusionList == null ? Codegen.empty() : this.isInclusionList;
    }

    public DiskExclusionPropertiesArgs(
        @Nullable Output<List<Integer>> diskLunList,
        @Nullable Output<Boolean> isInclusionList) {
        this.diskLunList = diskLunList;
        this.isInclusionList = isInclusionList;
    }

    private DiskExclusionPropertiesArgs() {
        this.diskLunList = Codegen.empty();
        this.isInclusionList = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskExclusionPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<Integer>> diskLunList;
        private @Nullable Output<Boolean> isInclusionList;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskExclusionPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskLunList = defaults.diskLunList;
    	      this.isInclusionList = defaults.isInclusionList;
        }

        public Builder diskLunList(@Nullable Output<List<Integer>> diskLunList) {
            this.diskLunList = diskLunList;
            return this;
        }
        public Builder diskLunList(@Nullable List<Integer> diskLunList) {
            this.diskLunList = Codegen.ofNullable(diskLunList);
            return this;
        }
        public Builder diskLunList(Integer... diskLunList) {
            return diskLunList(List.of(diskLunList));
        }
        public Builder isInclusionList(@Nullable Output<Boolean> isInclusionList) {
            this.isInclusionList = isInclusionList;
            return this;
        }
        public Builder isInclusionList(@Nullable Boolean isInclusionList) {
            this.isInclusionList = Codegen.ofNullable(isInclusionList);
            return this;
        }        public DiskExclusionPropertiesArgs build() {
            return new DiskExclusionPropertiesArgs(diskLunList, isInclusionList);
        }
    }
}
