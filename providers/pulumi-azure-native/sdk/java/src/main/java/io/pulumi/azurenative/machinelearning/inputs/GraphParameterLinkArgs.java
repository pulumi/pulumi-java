// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearning.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Association link for a graph global parameter to a node in the graph.
 * 
 */
public final class GraphParameterLinkArgs extends io.pulumi.resources.ResourceArgs {

    public static final GraphParameterLinkArgs Empty = new GraphParameterLinkArgs();

    /**
     * The graph node's identifier
     * 
     */
    @InputImport(name="nodeId", required=true)
    private final Input<String> nodeId;

    public Input<String> getNodeId() {
        return this.nodeId;
    }

    /**
     * The identifier of the node parameter that the global parameter maps to.
     * 
     */
    @InputImport(name="parameterKey", required=true)
    private final Input<String> parameterKey;

    public Input<String> getParameterKey() {
        return this.parameterKey;
    }

    public GraphParameterLinkArgs(
        Input<String> nodeId,
        Input<String> parameterKey) {
        this.nodeId = Objects.requireNonNull(nodeId, "expected parameter 'nodeId' to be non-null");
        this.parameterKey = Objects.requireNonNull(parameterKey, "expected parameter 'parameterKey' to be non-null");
    }

    private GraphParameterLinkArgs() {
        this.nodeId = Input.empty();
        this.parameterKey = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GraphParameterLinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> nodeId;
        private Input<String> parameterKey;

        public Builder() {
    	      // Empty
        }

        public Builder(GraphParameterLinkArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nodeId = defaults.nodeId;
    	      this.parameterKey = defaults.parameterKey;
        }

        public Builder setNodeId(Input<String> nodeId) {
            this.nodeId = Objects.requireNonNull(nodeId);
            return this;
        }

        public Builder setNodeId(String nodeId) {
            this.nodeId = Input.of(Objects.requireNonNull(nodeId));
            return this;
        }

        public Builder setParameterKey(Input<String> parameterKey) {
            this.parameterKey = Objects.requireNonNull(parameterKey);
            return this;
        }

        public Builder setParameterKey(String parameterKey) {
            this.parameterKey = Input.of(Objects.requireNonNull(parameterKey));
            return this;
        }

        public GraphParameterLinkArgs build() {
            return new GraphParameterLinkArgs(nodeId, parameterKey);
        }
    }
}
