// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * VPN client root certificate of virtual network gateway.
 * 
 */
public final class VpnClientRootCertificateArgs extends io.pulumi.resources.ResourceArgs {

    public static final VpnClientRootCertificateArgs Empty = new VpnClientRootCertificateArgs();

    /**
     * Resource ID.
     * 
     */
    @InputImport(name="id")
    private final @Nullable Input<String> id;

    public Input<String> getId() {
        return this.id == null ? Input.empty() : this.id;
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The certificate public data.
     * 
     */
    @InputImport(name="publicCertData", required=true)
    private final Input<String> publicCertData;

    public Input<String> getPublicCertData() {
        return this.publicCertData;
    }

    public VpnClientRootCertificateArgs(
        @Nullable Input<String> id,
        @Nullable Input<String> name,
        Input<String> publicCertData) {
        this.id = id;
        this.name = name;
        this.publicCertData = Objects.requireNonNull(publicCertData, "expected parameter 'publicCertData' to be non-null");
    }

    private VpnClientRootCertificateArgs() {
        this.id = Input.empty();
        this.name = Input.empty();
        this.publicCertData = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpnClientRootCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> id;
        private @Nullable Input<String> name;
        private Input<String> publicCertData;

        public Builder() {
    	      // Empty
        }

        public Builder(VpnClientRootCertificateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.publicCertData = defaults.publicCertData;
        }

        public Builder setId(@Nullable Input<String> id) {
            this.id = id;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = Input.ofNullable(id);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPublicCertData(Input<String> publicCertData) {
            this.publicCertData = Objects.requireNonNull(publicCertData);
            return this;
        }

        public Builder setPublicCertData(String publicCertData) {
            this.publicCertData = Input.of(Objects.requireNonNull(publicCertData));
            return this;
        }

        public VpnClientRootCertificateArgs build() {
            return new VpnClientRootCertificateArgs(id, name, publicCertData);
        }
    }
}
