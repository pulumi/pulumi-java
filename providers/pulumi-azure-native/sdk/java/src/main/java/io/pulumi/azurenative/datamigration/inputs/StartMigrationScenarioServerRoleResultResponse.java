// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.inputs;

import io.pulumi.azurenative.datamigration.inputs.ReportableExceptionResponse;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Server role migration result
 * 
 */
public final class StartMigrationScenarioServerRoleResultResponse extends io.pulumi.resources.InvokeArgs {

    public static final StartMigrationScenarioServerRoleResultResponse Empty = new StartMigrationScenarioServerRoleResultResponse();

    /**
     * Migration exceptions and warnings.
     * 
     */
    @Import(name="exceptionsAndWarnings", required=true)
      private final List<ReportableExceptionResponse> exceptionsAndWarnings;

    public List<ReportableExceptionResponse> getExceptionsAndWarnings() {
        return this.exceptionsAndWarnings;
    }

    /**
     * Name of server role.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * Current state of migration
     * 
     */
    @Import(name="state", required=true)
      private final String state;

    public String getState() {
        return this.state;
    }

    public StartMigrationScenarioServerRoleResultResponse(
        List<ReportableExceptionResponse> exceptionsAndWarnings,
        String name,
        String state) {
        this.exceptionsAndWarnings = Objects.requireNonNull(exceptionsAndWarnings, "expected parameter 'exceptionsAndWarnings' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
    }

    private StartMigrationScenarioServerRoleResultResponse() {
        this.exceptionsAndWarnings = List.of();
        this.name = null;
        this.state = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StartMigrationScenarioServerRoleResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ReportableExceptionResponse> exceptionsAndWarnings;
        private String name;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(StartMigrationScenarioServerRoleResultResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exceptionsAndWarnings = defaults.exceptionsAndWarnings;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
        }

        public Builder exceptionsAndWarnings(List<ReportableExceptionResponse> exceptionsAndWarnings) {
            this.exceptionsAndWarnings = Objects.requireNonNull(exceptionsAndWarnings);
            return this;
        }
        public Builder exceptionsAndWarnings(ReportableExceptionResponse... exceptionsAndWarnings) {
            return exceptionsAndWarnings(List.of(exceptionsAndWarnings));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }        public StartMigrationScenarioServerRoleResultResponse build() {
            return new StartMigrationScenarioServerRoleResultResponse(exceptionsAndWarnings, name, state);
        }
    }
}
