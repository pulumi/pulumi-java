// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation.inputs;

import io.pulumi.azurenative.automation.enums.EncryptionKeySourceType;
import io.pulumi.azurenative.automation.inputs.EncryptionPropertiesIdentityArgs;
import io.pulumi.azurenative.automation.inputs.KeyVaultPropertiesArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The encryption settings for automation account
 * 
 */
public final class EncryptionPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final EncryptionPropertiesArgs Empty = new EncryptionPropertiesArgs();

    /**
     * User identity used for CMK.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<EncryptionPropertiesIdentityArgs> identity;

    public Output<EncryptionPropertiesIdentityArgs> getIdentity() {
        return this.identity == null ? Output.empty() : this.identity;
    }

    /**
     * Encryption Key Source
     * 
     */
    @Import(name="keySource")
      private final @Nullable Output<EncryptionKeySourceType> keySource;

    public Output<EncryptionKeySourceType> getKeySource() {
        return this.keySource == null ? Output.empty() : this.keySource;
    }

    /**
     * Key vault properties.
     * 
     */
    @Import(name="keyVaultProperties")
      private final @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties;

    public Output<KeyVaultPropertiesArgs> getKeyVaultProperties() {
        return this.keyVaultProperties == null ? Output.empty() : this.keyVaultProperties;
    }

    public EncryptionPropertiesArgs(
        @Nullable Output<EncryptionPropertiesIdentityArgs> identity,
        @Nullable Output<EncryptionKeySourceType> keySource,
        @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties) {
        this.identity = identity;
        this.keySource = keySource;
        this.keyVaultProperties = keyVaultProperties;
    }

    private EncryptionPropertiesArgs() {
        this.identity = Output.empty();
        this.keySource = Output.empty();
        this.keyVaultProperties = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<EncryptionPropertiesIdentityArgs> identity;
        private @Nullable Output<EncryptionKeySourceType> keySource;
        private @Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(EncryptionPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.keySource = defaults.keySource;
    	      this.keyVaultProperties = defaults.keyVaultProperties;
        }

        public Builder identity(@Nullable Output<EncryptionPropertiesIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable EncryptionPropertiesIdentityArgs identity) {
            this.identity = Output.ofNullable(identity);
            return this;
        }
        public Builder keySource(@Nullable Output<EncryptionKeySourceType> keySource) {
            this.keySource = keySource;
            return this;
        }
        public Builder keySource(@Nullable EncryptionKeySourceType keySource) {
            this.keySource = Output.ofNullable(keySource);
            return this;
        }
        public Builder keyVaultProperties(@Nullable Output<KeyVaultPropertiesArgs> keyVaultProperties) {
            this.keyVaultProperties = keyVaultProperties;
            return this;
        }
        public Builder keyVaultProperties(@Nullable KeyVaultPropertiesArgs keyVaultProperties) {
            this.keyVaultProperties = Output.ofNullable(keyVaultProperties);
            return this;
        }        public EncryptionPropertiesArgs build() {
            return new EncryptionPropertiesArgs(identity, keySource, keyVaultProperties);
        }
    }
}
