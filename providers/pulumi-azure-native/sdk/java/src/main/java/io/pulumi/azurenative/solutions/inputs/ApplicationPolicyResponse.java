// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.solutions.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Managed application policy.
 * 
 */
public final class ApplicationPolicyResponse extends io.pulumi.resources.InvokeArgs {

    public static final ApplicationPolicyResponse Empty = new ApplicationPolicyResponse();

    /**
     * The policy name
     * 
     */
    @InputImport(name="name")
    private final @Nullable String name;

    public Optional<String> getName() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    /**
     * The policy parameters.
     * 
     */
    @InputImport(name="parameters")
    private final @Nullable String parameters;

    public Optional<String> getParameters() {
        return this.parameters == null ? Optional.empty() : Optional.ofNullable(this.parameters);
    }

    /**
     * The policy definition Id.
     * 
     */
    @InputImport(name="policyDefinitionId")
    private final @Nullable String policyDefinitionId;

    public Optional<String> getPolicyDefinitionId() {
        return this.policyDefinitionId == null ? Optional.empty() : Optional.ofNullable(this.policyDefinitionId);
    }

    public ApplicationPolicyResponse(
        @Nullable String name,
        @Nullable String parameters,
        @Nullable String policyDefinitionId) {
        this.name = name;
        this.parameters = parameters;
        this.policyDefinitionId = policyDefinitionId;
    }

    private ApplicationPolicyResponse() {
        this.name = null;
        this.parameters = null;
        this.policyDefinitionId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String name;
        private @Nullable String parameters;
        private @Nullable String policyDefinitionId;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.policyDefinitionId = defaults.policyDefinitionId;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setParameters(@Nullable String parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setPolicyDefinitionId(@Nullable String policyDefinitionId) {
            this.policyDefinitionId = policyDefinitionId;
            return this;
        }

        public ApplicationPolicyResponse build() {
            return new ApplicationPolicyResponse(name, parameters, policyDefinitionId);
        }
    }
}
