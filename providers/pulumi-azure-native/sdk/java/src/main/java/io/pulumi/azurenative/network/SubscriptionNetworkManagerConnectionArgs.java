// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SubscriptionNetworkManagerConnectionArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubscriptionNetworkManagerConnectionArgs Empty = new SubscriptionNetworkManagerConnectionArgs();

    /**
     * A description of the scope connection.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Name for the network manager connection.
     * 
     */
    @Import(name="networkManagerConnectionName")
      private final @Nullable Output<String> networkManagerConnectionName;

    public Output<String> getNetworkManagerConnectionName() {
        return this.networkManagerConnectionName == null ? Codegen.empty() : this.networkManagerConnectionName;
    }

    /**
     * Network Manager Id.
     * 
     */
    @Import(name="networkManagerId")
      private final @Nullable Output<String> networkManagerId;

    public Output<String> getNetworkManagerId() {
        return this.networkManagerId == null ? Codegen.empty() : this.networkManagerId;
    }

    public SubscriptionNetworkManagerConnectionArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> networkManagerConnectionName,
        @Nullable Output<String> networkManagerId) {
        this.description = description;
        this.networkManagerConnectionName = networkManagerConnectionName;
        this.networkManagerId = networkManagerId;
    }

    private SubscriptionNetworkManagerConnectionArgs() {
        this.description = Codegen.empty();
        this.networkManagerConnectionName = Codegen.empty();
        this.networkManagerId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubscriptionNetworkManagerConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> networkManagerConnectionName;
        private @Nullable Output<String> networkManagerId;

        public Builder() {
    	      // Empty
        }

        public Builder(SubscriptionNetworkManagerConnectionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.networkManagerConnectionName = defaults.networkManagerConnectionName;
    	      this.networkManagerId = defaults.networkManagerId;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder networkManagerConnectionName(@Nullable Output<String> networkManagerConnectionName) {
            this.networkManagerConnectionName = networkManagerConnectionName;
            return this;
        }
        public Builder networkManagerConnectionName(@Nullable String networkManagerConnectionName) {
            this.networkManagerConnectionName = Codegen.ofNullable(networkManagerConnectionName);
            return this;
        }
        public Builder networkManagerId(@Nullable Output<String> networkManagerId) {
            this.networkManagerId = networkManagerId;
            return this;
        }
        public Builder networkManagerId(@Nullable String networkManagerId) {
            this.networkManagerId = Codegen.ofNullable(networkManagerId);
            return this;
        }        public SubscriptionNetworkManagerConnectionArgs build() {
            return new SubscriptionNetworkManagerConnectionArgs(description, networkManagerConnectionName, networkManagerId);
        }
    }
}
