// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.managedidentity.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetUserAssignedIdentityResult {
    private final String clientId;
    private final String id;
    private final String location;
    private final String name;
    private final String principalId;
    private final @Nullable Map<String,String> tags;
    private final String tenantId;
    private final String type;

    @OutputCustomType.Constructor({"clientId","id","location","name","principalId","tags","tenantId","type"})
    private GetUserAssignedIdentityResult(
        String clientId,
        String id,
        String location,
        String name,
        String principalId,
        @Nullable Map<String,String> tags,
        String tenantId,
        String type) {
        this.clientId = Objects.requireNonNull(clientId);
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.principalId = Objects.requireNonNull(principalId);
        this.tags = tags;
        this.tenantId = Objects.requireNonNull(tenantId);
        this.type = Objects.requireNonNull(type);
    }

    public String getClientId() {
        return this.clientId;
    }
    public String getId() {
        return this.id;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public String getPrincipalId() {
        return this.principalId;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getTenantId() {
        return this.tenantId;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAssignedIdentityResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String clientId;
        private String id;
        private String location;
        private String name;
        private String principalId;
        private @Nullable Map<String,String> tags;
        private String tenantId;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUserAssignedIdentityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.principalId = defaults.principalId;
    	      this.tags = defaults.tags;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
        }

        public Builder setClientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPrincipalId(String principalId) {
            this.principalId = Objects.requireNonNull(principalId);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetUserAssignedIdentityResult build() {
            return new GetUserAssignedIdentityResult(clientId, id, location, name, principalId, tags, tenantId, type);
        }
    }
}
