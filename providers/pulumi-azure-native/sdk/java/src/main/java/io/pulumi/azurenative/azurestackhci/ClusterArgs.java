// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurestackhci;

import io.pulumi.azurenative.azurestackhci.enums.CreatedByType;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * App id of cluster AAD identity.
     * 
     */
    @Import(name="aadClientId", required=true)
      private final Output<String> aadClientId;

    public Output<String> getAadClientId() {
        return this.aadClientId;
    }

    /**
     * Tenant id of cluster AAD identity.
     * 
     */
    @Import(name="aadTenantId", required=true)
      private final Output<String> aadTenantId;

    public Output<String> getAadTenantId() {
        return this.aadTenantId;
    }

    /**
     * The name of the cluster.
     * 
     */
    @Import(name="clusterName")
      private final @Nullable Output<String> clusterName;

    public Output<String> getClusterName() {
        return this.clusterName == null ? Output.empty() : this.clusterName;
    }

    /**
     * The timestamp of resource creation (UTC).
     * 
     */
    @Import(name="createdAt")
      private final @Nullable Output<String> createdAt;

    public Output<String> getCreatedAt() {
        return this.createdAt == null ? Output.empty() : this.createdAt;
    }

    /**
     * The identity that created the resource.
     * 
     */
    @Import(name="createdBy")
      private final @Nullable Output<String> createdBy;

    public Output<String> getCreatedBy() {
        return this.createdBy == null ? Output.empty() : this.createdBy;
    }

    /**
     * The type of identity that created the resource.
     * 
     */
    @Import(name="createdByType")
      private final @Nullable Output<Either<String,CreatedByType>> createdByType;

    public Output<Either<String,CreatedByType>> getCreatedByType() {
        return this.createdByType == null ? Output.empty() : this.createdByType;
    }

    /**
     * The timestamp of resource last modification (UTC)
     * 
     */
    @Import(name="lastModifiedAt")
      private final @Nullable Output<String> lastModifiedAt;

    public Output<String> getLastModifiedAt() {
        return this.lastModifiedAt == null ? Output.empty() : this.lastModifiedAt;
    }

    /**
     * The identity that last modified the resource.
     * 
     */
    @Import(name="lastModifiedBy")
      private final @Nullable Output<String> lastModifiedBy;

    public Output<String> getLastModifiedBy() {
        return this.lastModifiedBy == null ? Output.empty() : this.lastModifiedBy;
    }

    /**
     * The type of identity that last modified the resource.
     * 
     */
    @Import(name="lastModifiedByType")
      private final @Nullable Output<Either<String,CreatedByType>> lastModifiedByType;

    public Output<Either<String,CreatedByType>> getLastModifiedByType() {
        return this.lastModifiedByType == null ? Output.empty() : this.lastModifiedByType;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ClusterArgs(
        Output<String> aadClientId,
        Output<String> aadTenantId,
        @Nullable Output<String> clusterName,
        @Nullable Output<String> createdAt,
        @Nullable Output<String> createdBy,
        @Nullable Output<Either<String,CreatedByType>> createdByType,
        @Nullable Output<String> lastModifiedAt,
        @Nullable Output<String> lastModifiedBy,
        @Nullable Output<Either<String,CreatedByType>> lastModifiedByType,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.aadClientId = Objects.requireNonNull(aadClientId, "expected parameter 'aadClientId' to be non-null");
        this.aadTenantId = Objects.requireNonNull(aadTenantId, "expected parameter 'aadTenantId' to be non-null");
        this.clusterName = clusterName;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.createdByType = createdByType;
        this.lastModifiedAt = lastModifiedAt;
        this.lastModifiedBy = lastModifiedBy;
        this.lastModifiedByType = lastModifiedByType;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private ClusterArgs() {
        this.aadClientId = Output.empty();
        this.aadTenantId = Output.empty();
        this.clusterName = Output.empty();
        this.createdAt = Output.empty();
        this.createdBy = Output.empty();
        this.createdByType = Output.empty();
        this.lastModifiedAt = Output.empty();
        this.lastModifiedBy = Output.empty();
        this.lastModifiedByType = Output.empty();
        this.location = Output.empty();
        this.resourceGroupName = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> aadClientId;
        private Output<String> aadTenantId;
        private @Nullable Output<String> clusterName;
        private @Nullable Output<String> createdAt;
        private @Nullable Output<String> createdBy;
        private @Nullable Output<Either<String,CreatedByType>> createdByType;
        private @Nullable Output<String> lastModifiedAt;
        private @Nullable Output<String> lastModifiedBy;
        private @Nullable Output<Either<String,CreatedByType>> lastModifiedByType;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadClientId = defaults.aadClientId;
    	      this.aadTenantId = defaults.aadTenantId;
    	      this.clusterName = defaults.clusterName;
    	      this.createdAt = defaults.createdAt;
    	      this.createdBy = defaults.createdBy;
    	      this.createdByType = defaults.createdByType;
    	      this.lastModifiedAt = defaults.lastModifiedAt;
    	      this.lastModifiedBy = defaults.lastModifiedBy;
    	      this.lastModifiedByType = defaults.lastModifiedByType;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder aadClientId(Output<String> aadClientId) {
            this.aadClientId = Objects.requireNonNull(aadClientId);
            return this;
        }

        public Builder aadClientId(String aadClientId) {
            this.aadClientId = Output.of(Objects.requireNonNull(aadClientId));
            return this;
        }

        public Builder aadTenantId(Output<String> aadTenantId) {
            this.aadTenantId = Objects.requireNonNull(aadTenantId);
            return this;
        }

        public Builder aadTenantId(String aadTenantId) {
            this.aadTenantId = Output.of(Objects.requireNonNull(aadTenantId));
            return this;
        }

        public Builder clusterName(@Nullable Output<String> clusterName) {
            this.clusterName = clusterName;
            return this;
        }

        public Builder clusterName(@Nullable String clusterName) {
            this.clusterName = Output.ofNullable(clusterName);
            return this;
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = Output.ofNullable(createdAt);
            return this;
        }

        public Builder createdBy(@Nullable Output<String> createdBy) {
            this.createdBy = createdBy;
            return this;
        }

        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = Output.ofNullable(createdBy);
            return this;
        }

        public Builder createdByType(@Nullable Output<Either<String,CreatedByType>> createdByType) {
            this.createdByType = createdByType;
            return this;
        }

        public Builder createdByType(@Nullable Either<String,CreatedByType> createdByType) {
            this.createdByType = Output.ofNullable(createdByType);
            return this;
        }

        public Builder lastModifiedAt(@Nullable Output<String> lastModifiedAt) {
            this.lastModifiedAt = lastModifiedAt;
            return this;
        }

        public Builder lastModifiedAt(@Nullable String lastModifiedAt) {
            this.lastModifiedAt = Output.ofNullable(lastModifiedAt);
            return this;
        }

        public Builder lastModifiedBy(@Nullable Output<String> lastModifiedBy) {
            this.lastModifiedBy = lastModifiedBy;
            return this;
        }

        public Builder lastModifiedBy(@Nullable String lastModifiedBy) {
            this.lastModifiedBy = Output.ofNullable(lastModifiedBy);
            return this;
        }

        public Builder lastModifiedByType(@Nullable Output<Either<String,CreatedByType>> lastModifiedByType) {
            this.lastModifiedByType = lastModifiedByType;
            return this;
        }

        public Builder lastModifiedByType(@Nullable Either<String,CreatedByType> lastModifiedByType) {
            this.lastModifiedByType = Output.ofNullable(lastModifiedByType);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public ClusterArgs build() {
            return new ClusterArgs(aadClientId, aadTenantId, clusterName, createdAt, createdBy, createdByType, lastModifiedAt, lastModifiedBy, lastModifiedByType, location, resourceGroupName, tags);
        }
    }
}
