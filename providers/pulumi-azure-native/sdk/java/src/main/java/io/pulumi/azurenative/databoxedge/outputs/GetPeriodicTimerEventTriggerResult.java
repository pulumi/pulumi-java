// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge.outputs;

import io.pulumi.azurenative.databoxedge.outputs.PeriodicTimerSourceInfoResponse;
import io.pulumi.azurenative.databoxedge.outputs.RoleSinkInfoResponse;
import io.pulumi.azurenative.databoxedge.outputs.SystemDataResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetPeriodicTimerEventTriggerResult {
    /**
     * A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
     * 
     */
    private final @Nullable String customContextTag;
    /**
     * The path ID that uniquely identifies the object.
     * 
     */
    private final String id;
    /**
     * Trigger Kind.
     * Expected value is 'PeriodicTimerEvent'.
     * 
     */
    private final String kind;
    /**
     * The object name.
     * 
     */
    private final String name;
    /**
     * Role Sink information.
     * 
     */
    private final RoleSinkInfoResponse sinkInfo;
    /**
     * Periodic timer details.
     * 
     */
    private final PeriodicTimerSourceInfoResponse sourceInfo;
    /**
     * Trigger in DataBoxEdge Resource
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * The hierarchical type of the object.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"customContextTag","id","kind","name","sinkInfo","sourceInfo","systemData","type"})
    private GetPeriodicTimerEventTriggerResult(
        @Nullable String customContextTag,
        String id,
        String kind,
        String name,
        RoleSinkInfoResponse sinkInfo,
        PeriodicTimerSourceInfoResponse sourceInfo,
        SystemDataResponse systemData,
        String type) {
        this.customContextTag = customContextTag;
        this.id = id;
        this.kind = kind;
        this.name = name;
        this.sinkInfo = sinkInfo;
        this.sourceInfo = sourceInfo;
        this.systemData = systemData;
        this.type = type;
    }

    /**
     * A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
     * 
    */
    public Optional<String> getCustomContextTag() {
        return Optional.ofNullable(this.customContextTag);
    }
    /**
     * The path ID that uniquely identifies the object.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Trigger Kind.
     * Expected value is 'PeriodicTimerEvent'.
     * 
    */
    public String getKind() {
        return this.kind;
    }
    /**
     * The object name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Role Sink information.
     * 
    */
    public RoleSinkInfoResponse getSinkInfo() {
        return this.sinkInfo;
    }
    /**
     * Periodic timer details.
     * 
    */
    public PeriodicTimerSourceInfoResponse getSourceInfo() {
        return this.sourceInfo;
    }
    /**
     * Trigger in DataBoxEdge Resource
     * 
    */
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    /**
     * The hierarchical type of the object.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPeriodicTimerEventTriggerResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String customContextTag;
        private String id;
        private String kind;
        private String name;
        private RoleSinkInfoResponse sinkInfo;
        private PeriodicTimerSourceInfoResponse sourceInfo;
        private SystemDataResponse systemData;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPeriodicTimerEventTriggerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customContextTag = defaults.customContextTag;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.sinkInfo = defaults.sinkInfo;
    	      this.sourceInfo = defaults.sourceInfo;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        public Builder setCustomContextTag(@Nullable String customContextTag) {
            this.customContextTag = customContextTag;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSinkInfo(RoleSinkInfoResponse sinkInfo) {
            this.sinkInfo = Objects.requireNonNull(sinkInfo);
            return this;
        }

        public Builder setSourceInfo(PeriodicTimerSourceInfoResponse sourceInfo) {
            this.sourceInfo = Objects.requireNonNull(sourceInfo);
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetPeriodicTimerEventTriggerResult build() {
            return new GetPeriodicTimerEventTriggerResult(customContextTag, id, kind, name, sinkInfo, sourceInfo, systemData, type);
        }
    }
}
