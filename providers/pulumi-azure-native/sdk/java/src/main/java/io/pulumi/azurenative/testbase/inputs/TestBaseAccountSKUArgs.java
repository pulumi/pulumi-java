// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.testbase.inputs;

import io.pulumi.azurenative.testbase.enums.Tier;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes a Test Base Account SKU.
 * 
 */
public final class TestBaseAccountSKUArgs extends io.pulumi.resources.ResourceArgs {

    public static final TestBaseAccountSKUArgs Empty = new TestBaseAccountSKUArgs();

    /**
     * The locations that the SKU is available.
     * 
     */
    @InputImport(name="locations")
        private final @Nullable Input<List<String>> locations;

    public Input<List<String>> getLocations() {
        return this.locations == null ? Input.empty() : this.locations;
    }

    /**
     * The name of the SKU. This is typically a letter + number code, such as B0 or S0.
     * 
     */
    @InputImport(name="name", required=true)
        private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    /**
     * The type of resource the SKU applies to.
     * 
     */
    @InputImport(name="resourceType")
        private final @Nullable Input<String> resourceType;

    public Input<String> getPropResourceType() {
        return this.resourceType == null ? Input.empty() : this.resourceType;
    }

    /**
     * The tier of this particular SKU.
     * 
     */
    @InputImport(name="tier", required=true)
        private final Input<Either<String,Tier>> tier;

    public Input<Either<String,Tier>> getTier() {
        return this.tier;
    }

    public TestBaseAccountSKUArgs(
        @Nullable Input<List<String>> locations,
        Input<String> name,
        @Nullable Input<String> resourceType,
        Input<Either<String,Tier>> tier) {
        this.locations = locations;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.resourceType = resourceType;
        this.tier = Objects.requireNonNull(tier, "expected parameter 'tier' to be non-null");
    }

    private TestBaseAccountSKUArgs() {
        this.locations = Input.empty();
        this.name = Input.empty();
        this.resourceType = Input.empty();
        this.tier = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TestBaseAccountSKUArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> locations;
        private Input<String> name;
        private @Nullable Input<String> resourceType;
        private Input<Either<String,Tier>> tier;

        public Builder() {
    	      // Empty
        }

        public Builder(TestBaseAccountSKUArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.locations = defaults.locations;
    	      this.name = defaults.name;
    	      this.resourceType = defaults.resourceType;
    	      this.tier = defaults.tier;
        }

        public Builder setLocations(@Nullable Input<List<String>> locations) {
            this.locations = locations;
            return this;
        }

        public Builder setLocations(@Nullable List<String> locations) {
            this.locations = Input.ofNullable(locations);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setResourceType(@Nullable Input<String> resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        public Builder setResourceType(@Nullable String resourceType) {
            this.resourceType = Input.ofNullable(resourceType);
            return this;
        }

        public Builder setTier(Input<Either<String,Tier>> tier) {
            this.tier = Objects.requireNonNull(tier);
            return this;
        }

        public Builder setTier(Either<String,Tier> tier) {
            this.tier = Input.of(Objects.requireNonNull(tier));
            return this;
        }
        public TestBaseAccountSKUArgs build() {
            return new TestBaseAccountSKUArgs(locations, name, resourceType, tier);
        }
    }
}
