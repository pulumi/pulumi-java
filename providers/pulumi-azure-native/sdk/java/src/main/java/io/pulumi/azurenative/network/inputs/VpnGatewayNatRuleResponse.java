// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.SubResourceResponse;
import io.pulumi.azurenative.network.inputs.VpnNatRuleMappingResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VpnGatewayNatRule Resource.
 * 
 */
public final class VpnGatewayNatRuleResponse extends io.pulumi.resources.InvokeArgs {

    public static final VpnGatewayNatRuleResponse Empty = new VpnGatewayNatRuleResponse();

    /**
     * List of egress VpnSiteLinkConnections.
     * 
     */
    @InputImport(name="egressVpnSiteLinkConnections", required=true)
      private final List<SubResourceResponse> egressVpnSiteLinkConnections;

    public List<SubResourceResponse> getEgressVpnSiteLinkConnections() {
        return this.egressVpnSiteLinkConnections;
    }

    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @InputImport(name="etag", required=true)
      private final String etag;

    public String getEtag() {
        return this.etag;
    }

    /**
     * The private IP address external mapping for NAT.
     * 
     */
    @InputImport(name="externalMappings")
      private final @Nullable List<VpnNatRuleMappingResponse> externalMappings;

    public List<VpnNatRuleMappingResponse> getExternalMappings() {
        return this.externalMappings == null ? List.of() : this.externalMappings;
    }

    /**
     * Resource ID.
     * 
     */
    @InputImport(name="id")
      private final @Nullable String id;

    public Optional<String> getId() {
        return this.id == null ? Optional.empty() : Optional.ofNullable(this.id);
    }

    /**
     * List of ingress VpnSiteLinkConnections.
     * 
     */
    @InputImport(name="ingressVpnSiteLinkConnections", required=true)
      private final List<SubResourceResponse> ingressVpnSiteLinkConnections;

    public List<SubResourceResponse> getIngressVpnSiteLinkConnections() {
        return this.ingressVpnSiteLinkConnections;
    }

    /**
     * The private IP address internal mapping for NAT.
     * 
     */
    @InputImport(name="internalMappings")
      private final @Nullable List<VpnNatRuleMappingResponse> internalMappings;

    public List<VpnNatRuleMappingResponse> getInternalMappings() {
        return this.internalMappings == null ? List.of() : this.internalMappings;
    }

    /**
     * The IP Configuration ID this NAT rule applies to.
     * 
     */
    @InputImport(name="ipConfigurationId")
      private final @Nullable String ipConfigurationId;

    public Optional<String> getIpConfigurationId() {
        return this.ipConfigurationId == null ? Optional.empty() : Optional.ofNullable(this.ipConfigurationId);
    }

    /**
     * The Source NAT direction of a VPN NAT.
     * 
     */
    @InputImport(name="mode")
      private final @Nullable String mode;

    public Optional<String> getMode() {
        return this.mode == null ? Optional.empty() : Optional.ofNullable(this.mode);
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @InputImport(name="name")
      private final @Nullable String name;

    public Optional<String> getName() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    /**
     * The provisioning state of the NAT Rule resource.
     * 
     */
    @InputImport(name="provisioningState", required=true)
      private final String provisioningState;

    public String getProvisioningState() {
        return this.provisioningState;
    }

    /**
     * Resource type.
     * 
     */
    @InputImport(name="type", required=true)
      private final String type;

    public String getType() {
        return this.type;
    }

    public VpnGatewayNatRuleResponse(
        List<SubResourceResponse> egressVpnSiteLinkConnections,
        String etag,
        @Nullable List<VpnNatRuleMappingResponse> externalMappings,
        @Nullable String id,
        List<SubResourceResponse> ingressVpnSiteLinkConnections,
        @Nullable List<VpnNatRuleMappingResponse> internalMappings,
        @Nullable String ipConfigurationId,
        @Nullable String mode,
        @Nullable String name,
        String provisioningState,
        String type) {
        this.egressVpnSiteLinkConnections = Objects.requireNonNull(egressVpnSiteLinkConnections, "expected parameter 'egressVpnSiteLinkConnections' to be non-null");
        this.etag = Objects.requireNonNull(etag, "expected parameter 'etag' to be non-null");
        this.externalMappings = externalMappings;
        this.id = id;
        this.ingressVpnSiteLinkConnections = Objects.requireNonNull(ingressVpnSiteLinkConnections, "expected parameter 'ingressVpnSiteLinkConnections' to be non-null");
        this.internalMappings = internalMappings;
        this.ipConfigurationId = ipConfigurationId;
        this.mode = mode;
        this.name = name;
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private VpnGatewayNatRuleResponse() {
        this.egressVpnSiteLinkConnections = List.of();
        this.etag = null;
        this.externalMappings = List.of();
        this.id = null;
        this.ingressVpnSiteLinkConnections = List.of();
        this.internalMappings = List.of();
        this.ipConfigurationId = null;
        this.mode = null;
        this.name = null;
        this.provisioningState = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpnGatewayNatRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<SubResourceResponse> egressVpnSiteLinkConnections;
        private String etag;
        private @Nullable List<VpnNatRuleMappingResponse> externalMappings;
        private @Nullable String id;
        private List<SubResourceResponse> ingressVpnSiteLinkConnections;
        private @Nullable List<VpnNatRuleMappingResponse> internalMappings;
        private @Nullable String ipConfigurationId;
        private @Nullable String mode;
        private @Nullable String name;
        private String provisioningState;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(VpnGatewayNatRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.egressVpnSiteLinkConnections = defaults.egressVpnSiteLinkConnections;
    	      this.etag = defaults.etag;
    	      this.externalMappings = defaults.externalMappings;
    	      this.id = defaults.id;
    	      this.ingressVpnSiteLinkConnections = defaults.ingressVpnSiteLinkConnections;
    	      this.internalMappings = defaults.internalMappings;
    	      this.ipConfigurationId = defaults.ipConfigurationId;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.type = defaults.type;
        }

        public Builder egressVpnSiteLinkConnections(List<SubResourceResponse> egressVpnSiteLinkConnections) {
            this.egressVpnSiteLinkConnections = Objects.requireNonNull(egressVpnSiteLinkConnections);
            return this;
        }

        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder externalMappings(@Nullable List<VpnNatRuleMappingResponse> externalMappings) {
            this.externalMappings = externalMappings;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder ingressVpnSiteLinkConnections(List<SubResourceResponse> ingressVpnSiteLinkConnections) {
            this.ingressVpnSiteLinkConnections = Objects.requireNonNull(ingressVpnSiteLinkConnections);
            return this;
        }

        public Builder internalMappings(@Nullable List<VpnNatRuleMappingResponse> internalMappings) {
            this.internalMappings = internalMappings;
            return this;
        }

        public Builder ipConfigurationId(@Nullable String ipConfigurationId) {
            this.ipConfigurationId = ipConfigurationId;
            return this;
        }

        public Builder mode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public VpnGatewayNatRuleResponse build() {
            return new VpnGatewayNatRuleResponse(egressVpnSiteLinkConnections, etag, externalMappings, id, ingressVpnSiteLinkConnections, internalMappings, ipConfigurationId, mode, name, provisioningState, type);
        }
    }
}
