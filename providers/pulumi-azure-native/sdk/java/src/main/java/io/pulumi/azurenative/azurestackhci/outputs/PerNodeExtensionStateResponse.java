// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurestackhci.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class PerNodeExtensionStateResponse {
    private final String extension;
    private final String name;
    private final String state;

    @OutputCustomType.Constructor({"extension","name","state"})
    private PerNodeExtensionStateResponse(
        String extension,
        String name,
        String state) {
        this.extension = Objects.requireNonNull(extension);
        this.name = Objects.requireNonNull(name);
        this.state = Objects.requireNonNull(state);
    }

    public String getExtension() {
        return this.extension;
    }
    public String getName() {
        return this.name;
    }
    public String getState() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PerNodeExtensionStateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String extension;
        private String name;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(PerNodeExtensionStateResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extension = defaults.extension;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
        }

        public Builder setExtension(String extension) {
            this.extension = Objects.requireNonNull(extension);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public PerNodeExtensionStateResponse build() {
            return new PerNodeExtensionStateResponse(extension, name, state);
        }
    }
}
