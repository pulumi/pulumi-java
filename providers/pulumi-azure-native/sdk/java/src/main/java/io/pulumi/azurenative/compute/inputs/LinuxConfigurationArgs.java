// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.azurenative.compute.inputs.LinuxPatchSettingsArgs;
import io.pulumi.azurenative.compute.inputs.SshConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
 * 
 */
public final class LinuxConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final LinuxConfigurationArgs Empty = new LinuxConfigurationArgs();

    /**
     * Specifies whether password authentication should be disabled.
     * 
     */
    @InputImport(name="disablePasswordAuthentication")
      private final @Nullable Input<Boolean> disablePasswordAuthentication;

    public Input<Boolean> getDisablePasswordAuthentication() {
        return this.disablePasswordAuthentication == null ? Input.empty() : this.disablePasswordAuthentication;
    }

    /**
     * [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
     * 
     */
    @InputImport(name="patchSettings")
      private final @Nullable Input<LinuxPatchSettingsArgs> patchSettings;

    public Input<LinuxPatchSettingsArgs> getPatchSettings() {
        return this.patchSettings == null ? Input.empty() : this.patchSettings;
    }

    /**
     * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
     * 
     */
    @InputImport(name="provisionVMAgent")
      private final @Nullable Input<Boolean> provisionVMAgent;

    public Input<Boolean> getProvisionVMAgent() {
        return this.provisionVMAgent == null ? Input.empty() : this.provisionVMAgent;
    }

    /**
     * Specifies the ssh key configuration for a Linux OS.
     * 
     */
    @InputImport(name="ssh")
      private final @Nullable Input<SshConfigurationArgs> ssh;

    public Input<SshConfigurationArgs> getSsh() {
        return this.ssh == null ? Input.empty() : this.ssh;
    }

    public LinuxConfigurationArgs(
        @Nullable Input<Boolean> disablePasswordAuthentication,
        @Nullable Input<LinuxPatchSettingsArgs> patchSettings,
        @Nullable Input<Boolean> provisionVMAgent,
        @Nullable Input<SshConfigurationArgs> ssh) {
        this.disablePasswordAuthentication = disablePasswordAuthentication;
        this.patchSettings = patchSettings;
        this.provisionVMAgent = provisionVMAgent;
        this.ssh = ssh;
    }

    private LinuxConfigurationArgs() {
        this.disablePasswordAuthentication = Input.empty();
        this.patchSettings = Input.empty();
        this.provisionVMAgent = Input.empty();
        this.ssh = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinuxConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> disablePasswordAuthentication;
        private @Nullable Input<LinuxPatchSettingsArgs> patchSettings;
        private @Nullable Input<Boolean> provisionVMAgent;
        private @Nullable Input<SshConfigurationArgs> ssh;

        public Builder() {
    	      // Empty
        }

        public Builder(LinuxConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disablePasswordAuthentication = defaults.disablePasswordAuthentication;
    	      this.patchSettings = defaults.patchSettings;
    	      this.provisionVMAgent = defaults.provisionVMAgent;
    	      this.ssh = defaults.ssh;
        }

        public Builder disablePasswordAuthentication(@Nullable Input<Boolean> disablePasswordAuthentication) {
            this.disablePasswordAuthentication = disablePasswordAuthentication;
            return this;
        }

        public Builder disablePasswordAuthentication(@Nullable Boolean disablePasswordAuthentication) {
            this.disablePasswordAuthentication = Input.ofNullable(disablePasswordAuthentication);
            return this;
        }

        public Builder patchSettings(@Nullable Input<LinuxPatchSettingsArgs> patchSettings) {
            this.patchSettings = patchSettings;
            return this;
        }

        public Builder patchSettings(@Nullable LinuxPatchSettingsArgs patchSettings) {
            this.patchSettings = Input.ofNullable(patchSettings);
            return this;
        }

        public Builder provisionVMAgent(@Nullable Input<Boolean> provisionVMAgent) {
            this.provisionVMAgent = provisionVMAgent;
            return this;
        }

        public Builder provisionVMAgent(@Nullable Boolean provisionVMAgent) {
            this.provisionVMAgent = Input.ofNullable(provisionVMAgent);
            return this;
        }

        public Builder ssh(@Nullable Input<SshConfigurationArgs> ssh) {
            this.ssh = ssh;
            return this;
        }

        public Builder ssh(@Nullable SshConfigurationArgs ssh) {
            this.ssh = Input.ofNullable(ssh);
            return this;
        }
        public LinuxConfigurationArgs build() {
            return new LinuxConfigurationArgs(disablePasswordAuthentication, patchSettings, provisionVMAgent, ssh);
        }
    }
}
