// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse;

import io.pulumi.azurenative.synapse.inputs.SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SqlPoolVulnerabilityAssessmentRuleBaselineArgs extends io.pulumi.resources.ResourceArgs {

    public static final SqlPoolVulnerabilityAssessmentRuleBaselineArgs Empty = new SqlPoolVulnerabilityAssessmentRuleBaselineArgs();

    /**
     * The name of the vulnerability assessment rule baseline (default implies a baseline on a Sql pool level rule and master for workspace level rule).
     * 
     */
    @InputImport(name="baselineName")
      private final @Nullable Input<String> baselineName;

    public Input<String> getBaselineName() {
        return this.baselineName == null ? Input.empty() : this.baselineName;
    }

    /**
     * The rule baseline result
     * 
     */
    @InputImport(name="baselineResults", required=true)
      private final Input<List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults;

    public Input<List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs>> getBaselineResults() {
        return this.baselineResults;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The vulnerability assessment rule ID.
     * 
     */
    @InputImport(name="ruleId", required=true)
      private final Input<String> ruleId;

    public Input<String> getRuleId() {
        return this.ruleId;
    }

    /**
     * SQL pool name
     * 
     */
    @InputImport(name="sqlPoolName", required=true)
      private final Input<String> sqlPoolName;

    public Input<String> getSqlPoolName() {
        return this.sqlPoolName;
    }

    /**
     * The name of the vulnerability assessment.
     * 
     */
    @InputImport(name="vulnerabilityAssessmentName", required=true)
      private final Input<String> vulnerabilityAssessmentName;

    public Input<String> getVulnerabilityAssessmentName() {
        return this.vulnerabilityAssessmentName;
    }

    /**
     * The name of the workspace
     * 
     */
    @InputImport(name="workspaceName", required=true)
      private final Input<String> workspaceName;

    public Input<String> getWorkspaceName() {
        return this.workspaceName;
    }

    public SqlPoolVulnerabilityAssessmentRuleBaselineArgs(
        @Nullable Input<String> baselineName,
        Input<List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults,
        Input<String> resourceGroupName,
        Input<String> ruleId,
        Input<String> sqlPoolName,
        Input<String> vulnerabilityAssessmentName,
        Input<String> workspaceName) {
        this.baselineName = baselineName;
        this.baselineResults = Objects.requireNonNull(baselineResults, "expected parameter 'baselineResults' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ruleId = Objects.requireNonNull(ruleId, "expected parameter 'ruleId' to be non-null");
        this.sqlPoolName = Objects.requireNonNull(sqlPoolName, "expected parameter 'sqlPoolName' to be non-null");
        this.vulnerabilityAssessmentName = Objects.requireNonNull(vulnerabilityAssessmentName, "expected parameter 'vulnerabilityAssessmentName' to be non-null");
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private SqlPoolVulnerabilityAssessmentRuleBaselineArgs() {
        this.baselineName = Input.empty();
        this.baselineResults = Input.empty();
        this.resourceGroupName = Input.empty();
        this.ruleId = Input.empty();
        this.sqlPoolName = Input.empty();
        this.vulnerabilityAssessmentName = Input.empty();
        this.workspaceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlPoolVulnerabilityAssessmentRuleBaselineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> baselineName;
        private Input<List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults;
        private Input<String> resourceGroupName;
        private Input<String> ruleId;
        private Input<String> sqlPoolName;
        private Input<String> vulnerabilityAssessmentName;
        private Input<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlPoolVulnerabilityAssessmentRuleBaselineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineName = defaults.baselineName;
    	      this.baselineResults = defaults.baselineResults;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ruleId = defaults.ruleId;
    	      this.sqlPoolName = defaults.sqlPoolName;
    	      this.vulnerabilityAssessmentName = defaults.vulnerabilityAssessmentName;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder baselineName(@Nullable Input<String> baselineName) {
            this.baselineName = baselineName;
            return this;
        }

        public Builder baselineName(@Nullable String baselineName) {
            this.baselineName = Input.ofNullable(baselineName);
            return this;
        }

        public Builder baselineResults(Input<List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults) {
            this.baselineResults = Objects.requireNonNull(baselineResults);
            return this;
        }

        public Builder baselineResults(List<SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs> baselineResults) {
            this.baselineResults = Input.of(Objects.requireNonNull(baselineResults));
            return this;
        }

        public Builder resourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder ruleId(Input<String> ruleId) {
            this.ruleId = Objects.requireNonNull(ruleId);
            return this;
        }

        public Builder ruleId(String ruleId) {
            this.ruleId = Input.of(Objects.requireNonNull(ruleId));
            return this;
        }

        public Builder sqlPoolName(Input<String> sqlPoolName) {
            this.sqlPoolName = Objects.requireNonNull(sqlPoolName);
            return this;
        }

        public Builder sqlPoolName(String sqlPoolName) {
            this.sqlPoolName = Input.of(Objects.requireNonNull(sqlPoolName));
            return this;
        }

        public Builder vulnerabilityAssessmentName(Input<String> vulnerabilityAssessmentName) {
            this.vulnerabilityAssessmentName = Objects.requireNonNull(vulnerabilityAssessmentName);
            return this;
        }

        public Builder vulnerabilityAssessmentName(String vulnerabilityAssessmentName) {
            this.vulnerabilityAssessmentName = Input.of(Objects.requireNonNull(vulnerabilityAssessmentName));
            return this;
        }

        public Builder workspaceName(Input<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }

        public Builder workspaceName(String workspaceName) {
            this.workspaceName = Input.of(Objects.requireNonNull(workspaceName));
            return this;
        }
        public SqlPoolVulnerabilityAssessmentRuleBaselineArgs build() {
            return new SqlPoolVulnerabilityAssessmentRuleBaselineArgs(baselineName, baselineResults, resourceGroupName, ruleId, sqlPoolName, vulnerabilityAssessmentName, workspaceName);
        }
    }
}
