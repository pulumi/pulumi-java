// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic;

import io.pulumi.azurenative.logic.inputs.IntegrationServiceEnvironmentPropertiesArgs;
import io.pulumi.azurenative.logic.inputs.IntegrationServiceEnvironmentSkuArgs;
import io.pulumi.azurenative.logic.inputs.ManagedServiceIdentityArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IntegrationServiceEnvironmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final IntegrationServiceEnvironmentArgs Empty = new IntegrationServiceEnvironmentArgs();

    /**
     * Managed service identity properties.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<ManagedServiceIdentityArgs> identity;

    public Output<ManagedServiceIdentityArgs> getIdentity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * The integration service environment name.
     * 
     */
    @Import(name="integrationServiceEnvironmentName")
      private final @Nullable Output<String> integrationServiceEnvironmentName;

    public Output<String> getIntegrationServiceEnvironmentName() {
        return this.integrationServiceEnvironmentName == null ? Codegen.empty() : this.integrationServiceEnvironmentName;
    }

    /**
     * The resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The integration service environment properties.
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<IntegrationServiceEnvironmentPropertiesArgs> properties;

    public Output<IntegrationServiceEnvironmentPropertiesArgs> getProperties() {
        return this.properties == null ? Codegen.empty() : this.properties;
    }

    /**
     * The resource group.
     * 
     */
    @Import(name="resourceGroup", required=true)
      private final Output<String> resourceGroup;

    public Output<String> getResourceGroup() {
        return this.resourceGroup;
    }

    /**
     * The sku.
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<IntegrationServiceEnvironmentSkuArgs> sku;

    public Output<IntegrationServiceEnvironmentSkuArgs> getSku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * The resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public IntegrationServiceEnvironmentArgs(
        @Nullable Output<ManagedServiceIdentityArgs> identity,
        @Nullable Output<String> integrationServiceEnvironmentName,
        @Nullable Output<String> location,
        @Nullable Output<IntegrationServiceEnvironmentPropertiesArgs> properties,
        Output<String> resourceGroup,
        @Nullable Output<IntegrationServiceEnvironmentSkuArgs> sku,
        @Nullable Output<Map<String,String>> tags) {
        this.identity = identity;
        this.integrationServiceEnvironmentName = integrationServiceEnvironmentName;
        this.location = location;
        this.properties = properties;
        this.resourceGroup = Objects.requireNonNull(resourceGroup, "expected parameter 'resourceGroup' to be non-null");
        this.sku = sku;
        this.tags = tags;
    }

    private IntegrationServiceEnvironmentArgs() {
        this.identity = Codegen.empty();
        this.integrationServiceEnvironmentName = Codegen.empty();
        this.location = Codegen.empty();
        this.properties = Codegen.empty();
        this.resourceGroup = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationServiceEnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ManagedServiceIdentityArgs> identity;
        private @Nullable Output<String> integrationServiceEnvironmentName;
        private @Nullable Output<String> location;
        private @Nullable Output<IntegrationServiceEnvironmentPropertiesArgs> properties;
        private Output<String> resourceGroup;
        private @Nullable Output<IntegrationServiceEnvironmentSkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationServiceEnvironmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.integrationServiceEnvironmentName = defaults.integrationServiceEnvironmentName;
    	      this.location = defaults.location;
    	      this.properties = defaults.properties;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
        }

        public Builder identity(@Nullable Output<ManagedServiceIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable ManagedServiceIdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder integrationServiceEnvironmentName(@Nullable Output<String> integrationServiceEnvironmentName) {
            this.integrationServiceEnvironmentName = integrationServiceEnvironmentName;
            return this;
        }
        public Builder integrationServiceEnvironmentName(@Nullable String integrationServiceEnvironmentName) {
            this.integrationServiceEnvironmentName = Codegen.ofNullable(integrationServiceEnvironmentName);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder properties(@Nullable Output<IntegrationServiceEnvironmentPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }
        public Builder properties(@Nullable IntegrationServiceEnvironmentPropertiesArgs properties) {
            this.properties = Codegen.ofNullable(properties);
            return this;
        }
        public Builder resourceGroup(Output<String> resourceGroup) {
            this.resourceGroup = Objects.requireNonNull(resourceGroup);
            return this;
        }
        public Builder resourceGroup(String resourceGroup) {
            this.resourceGroup = Output.of(Objects.requireNonNull(resourceGroup));
            return this;
        }
        public Builder sku(@Nullable Output<IntegrationServiceEnvironmentSkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable IntegrationServiceEnvironmentSkuArgs sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public IntegrationServiceEnvironmentArgs build() {
            return new IntegrationServiceEnvironmentArgs(identity, integrationServiceEnvironmentName, location, properties, resourceGroup, sku, tags);
        }
    }
}
