// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EncryptionScopeKeyVaultPropertiesResponse {
    /**
     * The object identifier of the current versioned Key Vault Key in use.
     * 
     */
    private final String currentVersionedKeyIdentifier;
    /**
     * The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
     * 
     */
    private final @Nullable String keyUri;
    /**
     * Timestamp of last rotation of the Key Vault Key.
     * 
     */
    private final String lastKeyRotationTimestamp;

    @CustomType.Constructor
    private EncryptionScopeKeyVaultPropertiesResponse(
        @CustomType.Parameter("currentVersionedKeyIdentifier") String currentVersionedKeyIdentifier,
        @CustomType.Parameter("keyUri") @Nullable String keyUri,
        @CustomType.Parameter("lastKeyRotationTimestamp") String lastKeyRotationTimestamp) {
        this.currentVersionedKeyIdentifier = currentVersionedKeyIdentifier;
        this.keyUri = keyUri;
        this.lastKeyRotationTimestamp = lastKeyRotationTimestamp;
    }

    /**
     * The object identifier of the current versioned Key Vault Key in use.
     * 
    */
    public String currentVersionedKeyIdentifier() {
        return this.currentVersionedKeyIdentifier;
    }
    /**
     * The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
     * 
    */
    public Optional<String> keyUri() {
        return Optional.ofNullable(this.keyUri);
    }
    /**
     * Timestamp of last rotation of the Key Vault Key.
     * 
    */
    public String lastKeyRotationTimestamp() {
        return this.lastKeyRotationTimestamp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionScopeKeyVaultPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String currentVersionedKeyIdentifier;
        private @Nullable String keyUri;
        private String lastKeyRotationTimestamp;

        public Builder() {
    	      // Empty
        }

        public Builder(EncryptionScopeKeyVaultPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentVersionedKeyIdentifier = defaults.currentVersionedKeyIdentifier;
    	      this.keyUri = defaults.keyUri;
    	      this.lastKeyRotationTimestamp = defaults.lastKeyRotationTimestamp;
        }

        public Builder currentVersionedKeyIdentifier(String currentVersionedKeyIdentifier) {
            this.currentVersionedKeyIdentifier = Objects.requireNonNull(currentVersionedKeyIdentifier);
            return this;
        }
        public Builder keyUri(@Nullable String keyUri) {
            this.keyUri = keyUri;
            return this;
        }
        public Builder lastKeyRotationTimestamp(String lastKeyRotationTimestamp) {
            this.lastKeyRotationTimestamp = Objects.requireNonNull(lastKeyRotationTimestamp);
            return this;
        }        public EncryptionScopeKeyVaultPropertiesResponse build() {
            return new EncryptionScopeKeyVaultPropertiesResponse(currentVersionedKeyIdentifier, keyUri, lastKeyRotationTimestamp);
        }
    }
}
