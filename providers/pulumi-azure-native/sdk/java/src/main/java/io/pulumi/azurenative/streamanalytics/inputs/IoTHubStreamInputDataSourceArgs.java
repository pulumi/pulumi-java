// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.streamanalytics.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes an IoT Hub input data source that contains stream data.
 * 
 */
public final class IoTHubStreamInputDataSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final IoTHubStreamInputDataSourceArgs Empty = new IoTHubStreamInputDataSourceArgs();

    /**
     * The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hubâ€™s default consumer group.
     * 
     */
    @Import(name="consumerGroupName")
      private final @Nullable Output<String> consumerGroupName;

    public Output<String> getConsumerGroupName() {
        return this.consumerGroupName == null ? Output.empty() : this.consumerGroupName;
    }

    /**
     * The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
     * 
     */
    @Import(name="endpoint")
      private final @Nullable Output<String> endpoint;

    public Output<String> getEndpoint() {
        return this.endpoint == null ? Output.empty() : this.endpoint;
    }

    /**
     * The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="iotHubNamespace")
      private final @Nullable Output<String> iotHubNamespace;

    public Output<String> getIotHubNamespace() {
        return this.iotHubNamespace == null ? Output.empty() : this.iotHubNamespace;
    }

    /**
     * The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="sharedAccessPolicyKey")
      private final @Nullable Output<String> sharedAccessPolicyKey;

    public Output<String> getSharedAccessPolicyKey() {
        return this.sharedAccessPolicyKey == null ? Output.empty() : this.sharedAccessPolicyKey;
    }

    /**
     * The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @Import(name="sharedAccessPolicyName")
      private final @Nullable Output<String> sharedAccessPolicyName;

    public Output<String> getSharedAccessPolicyName() {
        return this.sharedAccessPolicyName == null ? Output.empty() : this.sharedAccessPolicyName;
    }

    /**
     * Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
     * Expected value is 'Microsoft.Devices/IotHubs'.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    public IoTHubStreamInputDataSourceArgs(
        @Nullable Output<String> consumerGroupName,
        @Nullable Output<String> endpoint,
        @Nullable Output<String> iotHubNamespace,
        @Nullable Output<String> sharedAccessPolicyKey,
        @Nullable Output<String> sharedAccessPolicyName,
        Output<String> type) {
        this.consumerGroupName = consumerGroupName;
        this.endpoint = endpoint;
        this.iotHubNamespace = iotHubNamespace;
        this.sharedAccessPolicyKey = sharedAccessPolicyKey;
        this.sharedAccessPolicyName = sharedAccessPolicyName;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private IoTHubStreamInputDataSourceArgs() {
        this.consumerGroupName = Output.empty();
        this.endpoint = Output.empty();
        this.iotHubNamespace = Output.empty();
        this.sharedAccessPolicyKey = Output.empty();
        this.sharedAccessPolicyName = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IoTHubStreamInputDataSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> consumerGroupName;
        private @Nullable Output<String> endpoint;
        private @Nullable Output<String> iotHubNamespace;
        private @Nullable Output<String> sharedAccessPolicyKey;
        private @Nullable Output<String> sharedAccessPolicyName;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(IoTHubStreamInputDataSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerGroupName = defaults.consumerGroupName;
    	      this.endpoint = defaults.endpoint;
    	      this.iotHubNamespace = defaults.iotHubNamespace;
    	      this.sharedAccessPolicyKey = defaults.sharedAccessPolicyKey;
    	      this.sharedAccessPolicyName = defaults.sharedAccessPolicyName;
    	      this.type = defaults.type;
        }

        public Builder consumerGroupName(@Nullable Output<String> consumerGroupName) {
            this.consumerGroupName = consumerGroupName;
            return this;
        }

        public Builder consumerGroupName(@Nullable String consumerGroupName) {
            this.consumerGroupName = Output.ofNullable(consumerGroupName);
            return this;
        }

        public Builder endpoint(@Nullable Output<String> endpoint) {
            this.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = Output.ofNullable(endpoint);
            return this;
        }

        public Builder iotHubNamespace(@Nullable Output<String> iotHubNamespace) {
            this.iotHubNamespace = iotHubNamespace;
            return this;
        }

        public Builder iotHubNamespace(@Nullable String iotHubNamespace) {
            this.iotHubNamespace = Output.ofNullable(iotHubNamespace);
            return this;
        }

        public Builder sharedAccessPolicyKey(@Nullable Output<String> sharedAccessPolicyKey) {
            this.sharedAccessPolicyKey = sharedAccessPolicyKey;
            return this;
        }

        public Builder sharedAccessPolicyKey(@Nullable String sharedAccessPolicyKey) {
            this.sharedAccessPolicyKey = Output.ofNullable(sharedAccessPolicyKey);
            return this;
        }

        public Builder sharedAccessPolicyName(@Nullable Output<String> sharedAccessPolicyName) {
            this.sharedAccessPolicyName = sharedAccessPolicyName;
            return this;
        }

        public Builder sharedAccessPolicyName(@Nullable String sharedAccessPolicyName) {
            this.sharedAccessPolicyName = Output.ofNullable(sharedAccessPolicyName);
            return this;
        }

        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }
        public IoTHubStreamInputDataSourceArgs build() {
            return new IoTHubStreamInputDataSourceArgs(consumerGroupName, endpoint, iotHubNamespace, sharedAccessPolicyKey, sharedAccessPolicyName, type);
        }
    }
}
