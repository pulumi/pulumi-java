// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class VaultCertificateArgs extends io.pulumi.resources.ResourceArgs {

    public static final VaultCertificateArgs Empty = new VaultCertificateArgs();

    @InputImport(name="certificateStore", required=true)
    private final Input<String> certificateStore;

    public Input<String> getCertificateStore() {
        return this.certificateStore;
    }

    @InputImport(name="certificateUrl", required=true)
    private final Input<String> certificateUrl;

    public Input<String> getCertificateUrl() {
        return this.certificateUrl;
    }

    public VaultCertificateArgs(
        Input<String> certificateStore,
        Input<String> certificateUrl) {
        this.certificateStore = Objects.requireNonNull(certificateStore, "expected parameter 'certificateStore' to be non-null");
        this.certificateUrl = Objects.requireNonNull(certificateUrl, "expected parameter 'certificateUrl' to be non-null");
    }

    private VaultCertificateArgs() {
        this.certificateStore = Input.empty();
        this.certificateUrl = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VaultCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> certificateStore;
        private Input<String> certificateUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(VaultCertificateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateStore = defaults.certificateStore;
    	      this.certificateUrl = defaults.certificateUrl;
        }

        public Builder setCertificateStore(Input<String> certificateStore) {
            this.certificateStore = Objects.requireNonNull(certificateStore);
            return this;
        }

        public Builder setCertificateStore(String certificateStore) {
            this.certificateStore = Input.of(Objects.requireNonNull(certificateStore));
            return this;
        }

        public Builder setCertificateUrl(Input<String> certificateUrl) {
            this.certificateUrl = Objects.requireNonNull(certificateUrl);
            return this;
        }

        public Builder setCertificateUrl(String certificateUrl) {
            this.certificateUrl = Input.of(Objects.requireNonNull(certificateUrl));
            return this;
        }

        public VaultCertificateArgs build() {
            return new VaultCertificateArgs(certificateStore, certificateUrl);
        }
    }
}
