// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.confidentialledger;

import io.pulumi.azurenative.confidentialledger.inputs.LedgerPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LedgerArgs extends io.pulumi.resources.ResourceArgs {

    public static final LedgerArgs Empty = new LedgerArgs();

    /**
     * Name of the Confidential Ledger
     * 
     */
    @InputImport(name="ledgerName")
    private final @Nullable Input<String> ledgerName;

    public Input<String> getLedgerName() {
        return this.ledgerName == null ? Input.empty() : this.ledgerName;
    }

    /**
     * The Azure location where the Confidential Ledger is running.
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Properties of Confidential Ledger Resource.
     * 
     */
    @InputImport(name="properties")
    private final @Nullable Input<LedgerPropertiesArgs> properties;

    public Input<LedgerPropertiesArgs> getProperties() {
        return this.properties == null ? Input.empty() : this.properties;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Additional tags for Confidential Ledger
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public LedgerArgs(
        @Nullable Input<String> ledgerName,
        @Nullable Input<String> location,
        @Nullable Input<LedgerPropertiesArgs> properties,
        Input<String> resourceGroupName,
        @Nullable Input<Map<String,String>> tags) {
        this.ledgerName = ledgerName;
        this.location = location;
        this.properties = properties;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private LedgerArgs() {
        this.ledgerName = Input.empty();
        this.location = Input.empty();
        this.properties = Input.empty();
        this.resourceGroupName = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LedgerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> ledgerName;
        private @Nullable Input<String> location;
        private @Nullable Input<LedgerPropertiesArgs> properties;
        private Input<String> resourceGroupName;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(LedgerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ledgerName = defaults.ledgerName;
    	      this.location = defaults.location;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder setLedgerName(@Nullable Input<String> ledgerName) {
            this.ledgerName = ledgerName;
            return this;
        }

        public Builder setLedgerName(@Nullable String ledgerName) {
            this.ledgerName = Input.ofNullable(ledgerName);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setProperties(@Nullable Input<LedgerPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProperties(@Nullable LedgerPropertiesArgs properties) {
            this.properties = Input.ofNullable(properties);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public LedgerArgs build() {
            return new LedgerArgs(ledgerName, location, properties, resourceGroupName, tags);
        }
    }
}
