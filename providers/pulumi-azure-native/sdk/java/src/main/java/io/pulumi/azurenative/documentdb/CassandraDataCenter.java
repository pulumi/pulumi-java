// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.documentdb.CassandraDataCenterArgs;
import io.pulumi.azurenative.documentdb.outputs.DataCenterResourceResponseProperties;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A managed Cassandra data center.
 * API Version: 2021-03-01-preview.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### CosmosDBManagedCassandraDataCenterCreate
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var cassandraDataCenter = new AzureNative.DocumentDB.CassandraDataCenter("cassandraDataCenter", new AzureNative.DocumentDB.CassandraDataCenterArgs
 *         {
 *             ClusterName = "cassandra-prod",
 *             DataCenterName = "dc1",
 *             Properties = new AzureNative.DocumentDB.Inputs.DataCenterResourcePropertiesArgs
 *             {
 *                 Base64EncodedCassandraYamlFragment = "Y29tcGFjdGlvbl90aHJvdWdocHV0X21iX3Blcl9zZWM6IDMyCmNvbXBhY3Rpb25fbGFyZ2VfcGFydGl0aW9uX3dhcm5pbmdfdGhyZXNob2xkX21iOiAxMDA=",
 *                 DataCenterLocation = "West US 2",
 *                 DelegatedSubnetId = "/subscriptions/536e130b-d7d6-4ac7-98a5-de20d69588d2/resourceGroups/customer-vnet-rg/providers/Microsoft.Network/virtualNetworks/customer-vnet/subnets/dc1-subnet",
 *                 NodeCount = 9,
 *             },
 *             ResourceGroupName = "cassandra-prod-rg",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	documentdb "github.com/pulumi/pulumi-azure-native/sdk/go/azure/documentdb"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := documentdb.NewCassandraDataCenter(ctx, "cassandraDataCenter", &documentdb.CassandraDataCenterArgs{
 * 			ClusterName:    pulumi.String("cassandra-prod"),
 * 			DataCenterName: pulumi.String("dc1"),
 * 			Properties: &documentdb.DataCenterResourcePropertiesArgs{
 * 				Base64EncodedCassandraYamlFragment: pulumi.String("Y29tcGFjdGlvbl90aHJvdWdocHV0X21iX3Blcl9zZWM6IDMyCmNvbXBhY3Rpb25fbGFyZ2VfcGFydGl0aW9uX3dhcm5pbmdfdGhyZXNob2xkX21iOiAxMDA="),
 * 				DataCenterLocation:                 pulumi.String("West US 2"),
 * 				DelegatedSubnetId:                  pulumi.String("/subscriptions/536e130b-d7d6-4ac7-98a5-de20d69588d2/resourceGroups/customer-vnet-rg/providers/Microsoft.Network/virtualNetworks/customer-vnet/subnets/dc1-subnet"),
 * 				NodeCount:                          pulumi.Int(9),
 * 			},
 * 			ResourceGroupName: pulumi.String("cassandra-prod-rg"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const cassandraDataCenter = new azure_native.documentdb.CassandraDataCenter("cassandraDataCenter", {
 *     clusterName: "cassandra-prod",
 *     dataCenterName: "dc1",
 *     properties: {
 *         base64EncodedCassandraYamlFragment: "Y29tcGFjdGlvbl90aHJvdWdocHV0X21iX3Blcl9zZWM6IDMyCmNvbXBhY3Rpb25fbGFyZ2VfcGFydGl0aW9uX3dhcm5pbmdfdGhyZXNob2xkX21iOiAxMDA=",
 *         dataCenterLocation: "West US 2",
 *         delegatedSubnetId: "/subscriptions/536e130b-d7d6-4ac7-98a5-de20d69588d2/resourceGroups/customer-vnet-rg/providers/Microsoft.Network/virtualNetworks/customer-vnet/subnets/dc1-subnet",
 *         nodeCount: 9,
 *     },
 *     resourceGroupName: "cassandra-prod-rg",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * cassandra_data_center = azure_native.documentdb.CassandraDataCenter("cassandraDataCenter",
 *     cluster_name="cassandra-prod",
 *     data_center_name="dc1",
 *     properties=azure_native.documentdb.DataCenterResourcePropertiesArgs(
 *         base64_encoded_cassandra_yaml_fragment="Y29tcGFjdGlvbl90aHJvdWdocHV0X21iX3Blcl9zZWM6IDMyCmNvbXBhY3Rpb25fbGFyZ2VfcGFydGl0aW9uX3dhcm5pbmdfdGhyZXNob2xkX21iOiAxMDA=",
 *         data_center_location="West US 2",
 *         delegated_subnet_id="/subscriptions/536e130b-d7d6-4ac7-98a5-de20d69588d2/resourceGroups/customer-vnet-rg/providers/Microsoft.Network/virtualNetworks/customer-vnet/subnets/dc1-subnet",
 *         node_count=9,
 *     ),
 *     resource_group_name="cassandra-prod-rg")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:documentdb:CassandraDataCenter dc1 /subscriptions/subid/resourceGroups/cassandra-prod-rg/providers/Microsoft.DocumentDB/cassandraClusters/cassandra-prod/dataCenters/dc1 
 * ```
 * 
 */
@ResourceType(type="azure-native:documentdb:CassandraDataCenter")
public class CassandraDataCenter extends io.pulumi.resources.CustomResource {
    /**
     * The name of the database account.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the database account.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Properties of a managed Cassandra data center.
     */
    @Export(name="properties", type=DataCenterResourceResponseProperties.class, parameters={})
    private Output<DataCenterResourceResponseProperties> properties;

    /**
     * @return Properties of a managed Cassandra data center.
     */
    public Output<DataCenterResourceResponseProperties> getProperties() {
        return this.properties;
    }
    /**
     * The type of Azure resource.
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of Azure resource.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CassandraDataCenter(String name) {
        this(name, CassandraDataCenterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CassandraDataCenter(String name, CassandraDataCenterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CassandraDataCenter(String name, CassandraDataCenterArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:documentdb:CassandraDataCenter", name, args == null ? CassandraDataCenterArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private CassandraDataCenter(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:documentdb:CassandraDataCenter", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:documentdb/v20210301preview:CassandraDataCenter").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20210401preview:CassandraDataCenter").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20210701preview:CassandraDataCenter").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20211015:CassandraDataCenter").build()),
                Output.of(Alias.builder().type("azure-native:documentdb/v20211015preview:CassandraDataCenter").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CassandraDataCenter get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new CassandraDataCenter(name, id, options);
    }
}
