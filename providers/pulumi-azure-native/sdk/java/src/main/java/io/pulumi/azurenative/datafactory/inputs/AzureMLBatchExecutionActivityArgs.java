// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.azurenative.datafactory.inputs.ActivityDependencyArgs;
import io.pulumi.azurenative.datafactory.inputs.ActivityPolicyArgs;
import io.pulumi.azurenative.datafactory.inputs.AzureMLWebServiceFileArgs;
import io.pulumi.azurenative.datafactory.inputs.LinkedServiceReferenceArgs;
import io.pulumi.azurenative.datafactory.inputs.UserPropertyArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Azure ML Batch Execution activity.
 * 
 */
public final class AzureMLBatchExecutionActivityArgs extends io.pulumi.resources.ResourceArgs {

    public static final AzureMLBatchExecutionActivityArgs Empty = new AzureMLBatchExecutionActivityArgs();

    /**
     * Activity depends on condition.
     * 
     */
    @Import(name="dependsOn")
      private final @Nullable Output<List<ActivityDependencyArgs>> dependsOn;

    public Output<List<ActivityDependencyArgs>> getDependsOn() {
        return this.dependsOn == null ? Output.empty() : this.dependsOn;
    }

    /**
     * Activity description.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
     * 
     */
    @Import(name="globalParameters")
      private final @Nullable Output<Map<String,Object>> globalParameters;

    public Output<Map<String,Object>> getGlobalParameters() {
        return this.globalParameters == null ? Output.empty() : this.globalParameters;
    }

    /**
     * Linked service reference.
     * 
     */
    @Import(name="linkedServiceName")
      private final @Nullable Output<LinkedServiceReferenceArgs> linkedServiceName;

    public Output<LinkedServiceReferenceArgs> getLinkedServiceName() {
        return this.linkedServiceName == null ? Output.empty() : this.linkedServiceName;
    }

    /**
     * Activity name.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    /**
     * Activity policy.
     * 
     */
    @Import(name="policy")
      private final @Nullable Output<ActivityPolicyArgs> policy;

    public Output<ActivityPolicyArgs> getPolicy() {
        return this.policy == null ? Output.empty() : this.policy;
    }

    /**
     * Type of activity.
     * Expected value is 'AzureMLBatchExecution'.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    /**
     * Activity user properties.
     * 
     */
    @Import(name="userProperties")
      private final @Nullable Output<List<UserPropertyArgs>> userProperties;

    public Output<List<UserPropertyArgs>> getUserProperties() {
        return this.userProperties == null ? Output.empty() : this.userProperties;
    }

    /**
     * Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
     * 
     */
    @Import(name="webServiceInputs")
      private final @Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceInputs;

    public Output<Map<String,AzureMLWebServiceFileArgs>> getWebServiceInputs() {
        return this.webServiceInputs == null ? Output.empty() : this.webServiceInputs;
    }

    /**
     * Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
     * 
     */
    @Import(name="webServiceOutputs")
      private final @Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceOutputs;

    public Output<Map<String,AzureMLWebServiceFileArgs>> getWebServiceOutputs() {
        return this.webServiceOutputs == null ? Output.empty() : this.webServiceOutputs;
    }

    public AzureMLBatchExecutionActivityArgs(
        @Nullable Output<List<ActivityDependencyArgs>> dependsOn,
        @Nullable Output<String> description,
        @Nullable Output<Map<String,Object>> globalParameters,
        @Nullable Output<LinkedServiceReferenceArgs> linkedServiceName,
        Output<String> name,
        @Nullable Output<ActivityPolicyArgs> policy,
        Output<String> type,
        @Nullable Output<List<UserPropertyArgs>> userProperties,
        @Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceInputs,
        @Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceOutputs) {
        this.dependsOn = dependsOn;
        this.description = description;
        this.globalParameters = globalParameters;
        this.linkedServiceName = linkedServiceName;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.policy = policy;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.userProperties = userProperties;
        this.webServiceInputs = webServiceInputs;
        this.webServiceOutputs = webServiceOutputs;
    }

    private AzureMLBatchExecutionActivityArgs() {
        this.dependsOn = Output.empty();
        this.description = Output.empty();
        this.globalParameters = Output.empty();
        this.linkedServiceName = Output.empty();
        this.name = Output.empty();
        this.policy = Output.empty();
        this.type = Output.empty();
        this.userProperties = Output.empty();
        this.webServiceInputs = Output.empty();
        this.webServiceOutputs = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureMLBatchExecutionActivityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ActivityDependencyArgs>> dependsOn;
        private @Nullable Output<String> description;
        private @Nullable Output<Map<String,Object>> globalParameters;
        private @Nullable Output<LinkedServiceReferenceArgs> linkedServiceName;
        private Output<String> name;
        private @Nullable Output<ActivityPolicyArgs> policy;
        private Output<String> type;
        private @Nullable Output<List<UserPropertyArgs>> userProperties;
        private @Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceInputs;
        private @Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceOutputs;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureMLBatchExecutionActivityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dependsOn = defaults.dependsOn;
    	      this.description = defaults.description;
    	      this.globalParameters = defaults.globalParameters;
    	      this.linkedServiceName = defaults.linkedServiceName;
    	      this.name = defaults.name;
    	      this.policy = defaults.policy;
    	      this.type = defaults.type;
    	      this.userProperties = defaults.userProperties;
    	      this.webServiceInputs = defaults.webServiceInputs;
    	      this.webServiceOutputs = defaults.webServiceOutputs;
        }

        public Builder dependsOn(@Nullable Output<List<ActivityDependencyArgs>> dependsOn) {
            this.dependsOn = dependsOn;
            return this;
        }
        public Builder dependsOn(@Nullable List<ActivityDependencyArgs> dependsOn) {
            this.dependsOn = Output.ofNullable(dependsOn);
            return this;
        }
        public Builder dependsOn(ActivityDependencyArgs... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder globalParameters(@Nullable Output<Map<String,Object>> globalParameters) {
            this.globalParameters = globalParameters;
            return this;
        }
        public Builder globalParameters(@Nullable Map<String,Object> globalParameters) {
            this.globalParameters = Output.ofNullable(globalParameters);
            return this;
        }
        public Builder linkedServiceName(@Nullable Output<LinkedServiceReferenceArgs> linkedServiceName) {
            this.linkedServiceName = linkedServiceName;
            return this;
        }
        public Builder linkedServiceName(@Nullable LinkedServiceReferenceArgs linkedServiceName) {
            this.linkedServiceName = Output.ofNullable(linkedServiceName);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder policy(@Nullable Output<ActivityPolicyArgs> policy) {
            this.policy = policy;
            return this;
        }
        public Builder policy(@Nullable ActivityPolicyArgs policy) {
            this.policy = Output.ofNullable(policy);
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }
        public Builder userProperties(@Nullable Output<List<UserPropertyArgs>> userProperties) {
            this.userProperties = userProperties;
            return this;
        }
        public Builder userProperties(@Nullable List<UserPropertyArgs> userProperties) {
            this.userProperties = Output.ofNullable(userProperties);
            return this;
        }
        public Builder userProperties(UserPropertyArgs... userProperties) {
            return userProperties(List.of(userProperties));
        }
        public Builder webServiceInputs(@Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceInputs) {
            this.webServiceInputs = webServiceInputs;
            return this;
        }
        public Builder webServiceInputs(@Nullable Map<String,AzureMLWebServiceFileArgs> webServiceInputs) {
            this.webServiceInputs = Output.ofNullable(webServiceInputs);
            return this;
        }
        public Builder webServiceOutputs(@Nullable Output<Map<String,AzureMLWebServiceFileArgs>> webServiceOutputs) {
            this.webServiceOutputs = webServiceOutputs;
            return this;
        }
        public Builder webServiceOutputs(@Nullable Map<String,AzureMLWebServiceFileArgs> webServiceOutputs) {
            this.webServiceOutputs = Output.ofNullable(webServiceOutputs);
            return this;
        }        public AzureMLBatchExecutionActivityArgs build() {
            return new AzureMLBatchExecutionActivityArgs(dependsOn, description, globalParameters, linkedServiceName, name, policy, type, userProperties, webServiceInputs, webServiceOutputs);
        }
    }
}
