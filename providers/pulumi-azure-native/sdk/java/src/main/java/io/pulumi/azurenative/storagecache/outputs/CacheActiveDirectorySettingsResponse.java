// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagecache.outputs;

import io.pulumi.azurenative.storagecache.outputs.CacheActiveDirectorySettingsResponseCredentials;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CacheActiveDirectorySettingsResponse {
    /**
     * The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].
     * 
     */
    private final String cacheNetBiosName;
    /**
     * Active Directory admin credentials used to join the HPC Cache to a domain.
     * 
     */
    private final @Nullable CacheActiveDirectorySettingsResponseCredentials credentials;
    /**
     * True if the HPC Cache is joined to the Active Directory domain.
     * 
     */
    private final String domainJoined;
    /**
     * The fully qualified domain name of the Active Directory domain controller.
     * 
     */
    private final String domainName;
    /**
     * The Active Directory domain's NetBIOS name.
     * 
     */
    private final String domainNetBiosName;
    /**
     * Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
     * 
     */
    private final String primaryDnsIpAddress;
    /**
     * Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
     * 
     */
    private final @Nullable String secondaryDnsIpAddress;

    @CustomType.Constructor
    private CacheActiveDirectorySettingsResponse(
        @CustomType.Parameter("cacheNetBiosName") String cacheNetBiosName,
        @CustomType.Parameter("credentials") @Nullable CacheActiveDirectorySettingsResponseCredentials credentials,
        @CustomType.Parameter("domainJoined") String domainJoined,
        @CustomType.Parameter("domainName") String domainName,
        @CustomType.Parameter("domainNetBiosName") String domainNetBiosName,
        @CustomType.Parameter("primaryDnsIpAddress") String primaryDnsIpAddress,
        @CustomType.Parameter("secondaryDnsIpAddress") @Nullable String secondaryDnsIpAddress) {
        this.cacheNetBiosName = cacheNetBiosName;
        this.credentials = credentials;
        this.domainJoined = domainJoined;
        this.domainName = domainName;
        this.domainNetBiosName = domainNetBiosName;
        this.primaryDnsIpAddress = primaryDnsIpAddress;
        this.secondaryDnsIpAddress = secondaryDnsIpAddress;
    }

    /**
     * The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].
     * 
    */
    public String cacheNetBiosName() {
        return this.cacheNetBiosName;
    }
    /**
     * Active Directory admin credentials used to join the HPC Cache to a domain.
     * 
    */
    public Optional<CacheActiveDirectorySettingsResponseCredentials> credentials() {
        return Optional.ofNullable(this.credentials);
    }
    /**
     * True if the HPC Cache is joined to the Active Directory domain.
     * 
    */
    public String domainJoined() {
        return this.domainJoined;
    }
    /**
     * The fully qualified domain name of the Active Directory domain controller.
     * 
    */
    public String domainName() {
        return this.domainName;
    }
    /**
     * The Active Directory domain's NetBIOS name.
     * 
    */
    public String domainNetBiosName() {
        return this.domainNetBiosName;
    }
    /**
     * Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
     * 
    */
    public String primaryDnsIpAddress() {
        return this.primaryDnsIpAddress;
    }
    /**
     * Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
     * 
    */
    public Optional<String> secondaryDnsIpAddress() {
        return Optional.ofNullable(this.secondaryDnsIpAddress);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheActiveDirectorySettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cacheNetBiosName;
        private @Nullable CacheActiveDirectorySettingsResponseCredentials credentials;
        private String domainJoined;
        private String domainName;
        private String domainNetBiosName;
        private String primaryDnsIpAddress;
        private @Nullable String secondaryDnsIpAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(CacheActiveDirectorySettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheNetBiosName = defaults.cacheNetBiosName;
    	      this.credentials = defaults.credentials;
    	      this.domainJoined = defaults.domainJoined;
    	      this.domainName = defaults.domainName;
    	      this.domainNetBiosName = defaults.domainNetBiosName;
    	      this.primaryDnsIpAddress = defaults.primaryDnsIpAddress;
    	      this.secondaryDnsIpAddress = defaults.secondaryDnsIpAddress;
        }

        public Builder cacheNetBiosName(String cacheNetBiosName) {
            this.cacheNetBiosName = Objects.requireNonNull(cacheNetBiosName);
            return this;
        }
        public Builder credentials(@Nullable CacheActiveDirectorySettingsResponseCredentials credentials) {
            this.credentials = credentials;
            return this;
        }
        public Builder domainJoined(String domainJoined) {
            this.domainJoined = Objects.requireNonNull(domainJoined);
            return this;
        }
        public Builder domainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        public Builder domainNetBiosName(String domainNetBiosName) {
            this.domainNetBiosName = Objects.requireNonNull(domainNetBiosName);
            return this;
        }
        public Builder primaryDnsIpAddress(String primaryDnsIpAddress) {
            this.primaryDnsIpAddress = Objects.requireNonNull(primaryDnsIpAddress);
            return this;
        }
        public Builder secondaryDnsIpAddress(@Nullable String secondaryDnsIpAddress) {
            this.secondaryDnsIpAddress = secondaryDnsIpAddress;
            return this;
        }        public CacheActiveDirectorySettingsResponse build() {
            return new CacheActiveDirectorySettingsResponse(cacheNetBiosName, credentials, domainJoined, domainName, domainNetBiosName, primaryDnsIpAddress, secondaryDnsIpAddress);
        }
    }
}
