// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge.inputs;

import io.pulumi.azurenative.databoxedge.inputs.SymmetricKeyArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Authentication mechanism for IoT devices.
 * 
 */
public final class AuthenticationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AuthenticationArgs Empty = new AuthenticationArgs();

    /**
     * Symmetric key for authentication.
     * 
     */
    @InputImport(name="symmetricKey")
        private final @Nullable Input<SymmetricKeyArgs> symmetricKey;

    public Input<SymmetricKeyArgs> getSymmetricKey() {
        return this.symmetricKey == null ? Input.empty() : this.symmetricKey;
    }

    public AuthenticationArgs(@Nullable Input<SymmetricKeyArgs> symmetricKey) {
        this.symmetricKey = symmetricKey;
    }

    private AuthenticationArgs() {
        this.symmetricKey = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<SymmetricKeyArgs> symmetricKey;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthenticationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.symmetricKey = defaults.symmetricKey;
        }

        public Builder setSymmetricKey(@Nullable Input<SymmetricKeyArgs> symmetricKey) {
            this.symmetricKey = symmetricKey;
            return this;
        }

        public Builder setSymmetricKey(@Nullable SymmetricKeyArgs symmetricKey) {
            this.symmetricKey = Input.ofNullable(symmetricKey);
            return this;
        }
        public AuthenticationArgs build() {
            return new AuthenticationArgs(symmetricKey);
        }
    }
}
