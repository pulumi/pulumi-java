// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.dbformysql;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.dbformysql.ServerKeyArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A MySQL Server key.
API Version: 2020-01-01.

{{% examples %}}
## Example Usage
{{% example %}}
### Creates or updates a MySQL Server key
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var serverKey = new AzureNative.DBforMySQL.ServerKey("serverKey", new AzureNative.DBforMySQL.ServerKeyArgs
        {
            KeyName = "someVault_someKey_01234567890123456789012345678901",
            ResourceGroupName = "testrg",
            ServerKeyType = "AzureKeyVault",
            ServerName = "testserver",
            Uri = "https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901",
        });
    }

}

```

```go
package main

import (
	dbformysql "github.com/pulumi/pulumi-azure-native/sdk/go/azure/dbformysql"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := dbformysql.NewServerKey(ctx, "serverKey", &dbformysql.ServerKeyArgs{
			KeyName:           pulumi.String("someVault_someKey_01234567890123456789012345678901"),
			ResourceGroupName: pulumi.String("testrg"),
			ServerKeyType:     pulumi.String("AzureKeyVault"),
			ServerName:        pulumi.String("testserver"),
			Uri:               pulumi.String("https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const serverKey = new azure_native.dbformysql.ServerKey("serverKey", {
    keyName: "someVault_someKey_01234567890123456789012345678901",
    resourceGroupName: "testrg",
    serverKeyType: "AzureKeyVault",
    serverName: "testserver",
    uri: "https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

server_key = azure_native.dbformysql.ServerKey("serverKey",
    key_name="someVault_someKey_01234567890123456789012345678901",
    resource_group_name="testrg",
    server_key_type="AzureKeyVault",
    server_name="testserver",
    uri="https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:dbformysql:ServerKey omeVault_someKey_01234567890123456789012345678901 /subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBforMySQL/servers/testserver/keys/someVault_someKey_01234567890123456789012345678901 
```

 */
@ResourceType(type="azure-native:dbformysql:ServerKey")
public class ServerKey extends io.pulumi.resources.CustomResource {
    /**
     * The key creation date.
     */
    @OutputExport(name="creationDate", type=String.class, parameters={})
    private Output<String> creationDate;

    /**
     * @return The key creation date.
     */
    public Output<String> getCreationDate() {
        return this.creationDate;
    }
    /**
     * Kind of encryption protector used to protect the key.
     */
    @OutputExport(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return Kind of encryption protector used to protect the key.
     */
    public Output<String> getKind() {
        return this.kind;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The key type like 'AzureKeyVault'.
     */
    @OutputExport(name="serverKeyType", type=String.class, parameters={})
    private Output<String> serverKeyType;

    /**
     * @return The key type like 'AzureKeyVault'.
     */
    public Output<String> getServerKeyType() {
        return this.serverKeyType;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The URI of the key.
     */
    @OutputExport(name="uri", type=String.class, parameters={})
    private Output</* @Nullable */ String> uri;

    /**
     * @return The URI of the key.
     */
    public Output</* @Nullable */ String> getUri() {
        return this.uri;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerKey(String name, ServerKeyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:dbformysql:ServerKey", name, args == null ? ServerKeyArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ServerKey(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:dbformysql:ServerKey", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:dbformysql/v20200101:ServerKey").build()),
                Input.of(Alias.builder().setType("azure-native:dbformysql/v20200101privatepreview:ServerKey").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerKey get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ServerKey(name, id, options);
    }
}
