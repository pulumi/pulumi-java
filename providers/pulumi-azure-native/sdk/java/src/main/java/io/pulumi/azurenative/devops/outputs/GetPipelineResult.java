// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devops.outputs;

import io.pulumi.azurenative.devops.outputs.BootstrapConfigurationResponse;
import io.pulumi.azurenative.devops.outputs.SystemDataResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetPipelineResult {
    /**
     * Configuration used to bootstrap the Pipeline.
     * 
     */
    private final BootstrapConfigurationResponse bootstrapConfiguration;
    /**
     * Resource Id
     * 
     */
    private final String id;
    /**
     * Resource Location
     * 
     */
    private final @Nullable String location;
    /**
     * Resource Name
     * 
     */
    private final String name;
    /**
     * Unique identifier of the Pipeline
     * 
     */
    private final Integer pipelineId;
    /**
     * Specifies which CI/CD provider to use. Valid options are 'azurePipeline', 'githubWorkflow'.
     * 
     */
    private final String pipelineType;
    /**
     * The system metadata pertaining to this resource.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * Resource Tags
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Resource Type
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"bootstrapConfiguration","id","location","name","pipelineId","pipelineType","systemData","tags","type"})
    private GetPipelineResult(
        BootstrapConfigurationResponse bootstrapConfiguration,
        String id,
        @Nullable String location,
        String name,
        Integer pipelineId,
        String pipelineType,
        SystemDataResponse systemData,
        @Nullable Map<String,String> tags,
        String type) {
        this.bootstrapConfiguration = Objects.requireNonNull(bootstrapConfiguration);
        this.id = Objects.requireNonNull(id);
        this.location = location;
        this.name = Objects.requireNonNull(name);
        this.pipelineId = Objects.requireNonNull(pipelineId);
        this.pipelineType = Objects.requireNonNull(pipelineType);
        this.systemData = Objects.requireNonNull(systemData);
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    /**
     * Configuration used to bootstrap the Pipeline.
     * 
     */
    public BootstrapConfigurationResponse getBootstrapConfiguration() {
        return this.bootstrapConfiguration;
    }
    /**
     * Resource Id
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * Resource Location
     * 
     */
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    /**
     * Resource Name
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * Unique identifier of the Pipeline
     * 
     */
    public Integer getPipelineId() {
        return this.pipelineId;
    }
    /**
     * Specifies which CI/CD provider to use. Valid options are 'azurePipeline', 'githubWorkflow'.
     * 
     */
    public String getPipelineType() {
        return this.pipelineType;
    }
    /**
     * The system metadata pertaining to this resource.
     * 
     */
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    /**
     * Resource Tags
     * 
     */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Resource Type
     * 
     */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BootstrapConfigurationResponse bootstrapConfiguration;
        private String id;
        private @Nullable String location;
        private String name;
        private Integer pipelineId;
        private String pipelineType;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootstrapConfiguration = defaults.bootstrapConfiguration;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.pipelineId = defaults.pipelineId;
    	      this.pipelineType = defaults.pipelineType;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setBootstrapConfiguration(BootstrapConfigurationResponse bootstrapConfiguration) {
            this.bootstrapConfiguration = Objects.requireNonNull(bootstrapConfiguration);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPipelineId(Integer pipelineId) {
            this.pipelineId = Objects.requireNonNull(pipelineId);
            return this;
        }

        public Builder setPipelineType(String pipelineType) {
            this.pipelineType = Objects.requireNonNull(pipelineType);
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetPipelineResult build() {
            return new GetPipelineResult(bootstrapConfiguration, id, location, name, pipelineId, pipelineType, systemData, tags, type);
        }
    }
}
