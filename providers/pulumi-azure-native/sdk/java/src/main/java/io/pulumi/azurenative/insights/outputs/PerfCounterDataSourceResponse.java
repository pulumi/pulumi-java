// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class PerfCounterDataSourceResponse {
    private final @Nullable List<String> counterSpecifiers;
    private final @Nullable String name;
    private final @Nullable Integer samplingFrequencyInSeconds;
    private final @Nullable List<String> streams;

    @OutputCustomType.Constructor({"counterSpecifiers","name","samplingFrequencyInSeconds","streams"})
    private PerfCounterDataSourceResponse(
        @Nullable List<String> counterSpecifiers,
        @Nullable String name,
        @Nullable Integer samplingFrequencyInSeconds,
        @Nullable List<String> streams) {
        this.counterSpecifiers = counterSpecifiers;
        this.name = name;
        this.samplingFrequencyInSeconds = samplingFrequencyInSeconds;
        this.streams = streams;
    }

    public List<String> getCounterSpecifiers() {
        return this.counterSpecifiers == null ? List.of() : this.counterSpecifiers;
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Integer> getSamplingFrequencyInSeconds() {
        return Optional.ofNullable(this.samplingFrequencyInSeconds);
    }
    public List<String> getStreams() {
        return this.streams == null ? List.of() : this.streams;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PerfCounterDataSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> counterSpecifiers;
        private @Nullable String name;
        private @Nullable Integer samplingFrequencyInSeconds;
        private @Nullable List<String> streams;

        public Builder() {
    	      // Empty
        }

        public Builder(PerfCounterDataSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.counterSpecifiers = defaults.counterSpecifiers;
    	      this.name = defaults.name;
    	      this.samplingFrequencyInSeconds = defaults.samplingFrequencyInSeconds;
    	      this.streams = defaults.streams;
        }

        public Builder setCounterSpecifiers(@Nullable List<String> counterSpecifiers) {
            this.counterSpecifiers = counterSpecifiers;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setSamplingFrequencyInSeconds(@Nullable Integer samplingFrequencyInSeconds) {
            this.samplingFrequencyInSeconds = samplingFrequencyInSeconds;
            return this;
        }

        public Builder setStreams(@Nullable List<String> streams) {
            this.streams = streams;
            return this;
        }

        public PerfCounterDataSourceResponse build() {
            return new PerfCounterDataSourceResponse(counterSpecifiers, name, samplingFrequencyInSeconds, streams);
        }
    }
}
