// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * AWS cloud account connector based assume role, the role enables delegating access to your AWS resources. The role is composed of role Amazon Resource Name (ARN) and external ID. For more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html">Creating a Role to Delegate Permissions to an IAM User (write only)</a>
 * 
 */
public final class AwAssumeRoleAuthenticationDetailsPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final AwAssumeRoleAuthenticationDetailsPropertiesArgs Empty = new AwAssumeRoleAuthenticationDetailsPropertiesArgs();

    /**
     * Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
     * Expected value is 'awsAssumeRole'.
     * 
     */
    @Import(name="authenticationType", required=true)
      private final Output<String> authenticationType;

    public Output<String> getAuthenticationType() {
        return this.authenticationType;
    }

    /**
     * Assumed role ID is an identifier that you can use to create temporary security credentials.
     * 
     */
    @Import(name="awsAssumeRoleArn", required=true)
      private final Output<String> awsAssumeRoleArn;

    public Output<String> getAwsAssumeRoleArn() {
        return this.awsAssumeRoleArn;
    }

    /**
     * A unique identifier that is required when you assume a role in another account.
     * 
     */
    @Import(name="awsExternalId", required=true)
      private final Output<String> awsExternalId;

    public Output<String> getAwsExternalId() {
        return this.awsExternalId;
    }

    public AwAssumeRoleAuthenticationDetailsPropertiesArgs(
        Output<String> authenticationType,
        Output<String> awsAssumeRoleArn,
        Output<String> awsExternalId) {
        this.authenticationType = Objects.requireNonNull(authenticationType, "expected parameter 'authenticationType' to be non-null");
        this.awsAssumeRoleArn = Objects.requireNonNull(awsAssumeRoleArn, "expected parameter 'awsAssumeRoleArn' to be non-null");
        this.awsExternalId = Objects.requireNonNull(awsExternalId, "expected parameter 'awsExternalId' to be non-null");
    }

    private AwAssumeRoleAuthenticationDetailsPropertiesArgs() {
        this.authenticationType = Output.empty();
        this.awsAssumeRoleArn = Output.empty();
        this.awsExternalId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AwAssumeRoleAuthenticationDetailsPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> authenticationType;
        private Output<String> awsAssumeRoleArn;
        private Output<String> awsExternalId;

        public Builder() {
    	      // Empty
        }

        public Builder(AwAssumeRoleAuthenticationDetailsPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.awsAssumeRoleArn = defaults.awsAssumeRoleArn;
    	      this.awsExternalId = defaults.awsExternalId;
        }

        public Builder authenticationType(Output<String> authenticationType) {
            this.authenticationType = Objects.requireNonNull(authenticationType);
            return this;
        }

        public Builder authenticationType(String authenticationType) {
            this.authenticationType = Output.of(Objects.requireNonNull(authenticationType));
            return this;
        }

        public Builder awsAssumeRoleArn(Output<String> awsAssumeRoleArn) {
            this.awsAssumeRoleArn = Objects.requireNonNull(awsAssumeRoleArn);
            return this;
        }

        public Builder awsAssumeRoleArn(String awsAssumeRoleArn) {
            this.awsAssumeRoleArn = Output.of(Objects.requireNonNull(awsAssumeRoleArn));
            return this;
        }

        public Builder awsExternalId(Output<String> awsExternalId) {
            this.awsExternalId = Objects.requireNonNull(awsExternalId);
            return this;
        }

        public Builder awsExternalId(String awsExternalId) {
            this.awsExternalId = Output.of(Objects.requireNonNull(awsExternalId));
            return this;
        }
        public AwAssumeRoleAuthenticationDetailsPropertiesArgs build() {
            return new AwAssumeRoleAuthenticationDetailsPropertiesArgs(authenticationType, awsAssumeRoleArn, awsExternalId);
        }
    }
}
