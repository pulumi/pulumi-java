// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.testbase.outputs;

import io.pulumi.azurenative.testbase.outputs.CommandResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TestResponse {
    private final List<CommandResponse> commands;
    private final @Nullable Boolean isActive;
    private final String testType;
    private final String validationRunStatus;

    @OutputCustomType.Constructor({"commands","isActive","testType","validationRunStatus"})
    private TestResponse(
        List<CommandResponse> commands,
        @Nullable Boolean isActive,
        String testType,
        String validationRunStatus) {
        this.commands = Objects.requireNonNull(commands);
        this.isActive = isActive;
        this.testType = Objects.requireNonNull(testType);
        this.validationRunStatus = Objects.requireNonNull(validationRunStatus);
    }

    public List<CommandResponse> getCommands() {
        return this.commands;
    }
    public Optional<Boolean> getIsActive() {
        return Optional.ofNullable(this.isActive);
    }
    public String getTestType() {
        return this.testType;
    }
    public String getValidationRunStatus() {
        return this.validationRunStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<CommandResponse> commands;
        private @Nullable Boolean isActive;
        private String testType;
        private String validationRunStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(TestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commands = defaults.commands;
    	      this.isActive = defaults.isActive;
    	      this.testType = defaults.testType;
    	      this.validationRunStatus = defaults.validationRunStatus;
        }

        public Builder setCommands(List<CommandResponse> commands) {
            this.commands = Objects.requireNonNull(commands);
            return this;
        }

        public Builder setIsActive(@Nullable Boolean isActive) {
            this.isActive = isActive;
            return this;
        }

        public Builder setTestType(String testType) {
            this.testType = Objects.requireNonNull(testType);
            return this;
        }

        public Builder setValidationRunStatus(String validationRunStatus) {
            this.validationRunStatus = Objects.requireNonNull(validationRunStatus);
            return this;
        }

        public TestResponse build() {
            return new TestResponse(commands, isActive, testType, validationRunStatus);
        }
    }
}
