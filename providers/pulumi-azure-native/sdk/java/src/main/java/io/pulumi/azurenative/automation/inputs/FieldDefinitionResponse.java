// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FieldDefinitionResponse extends io.pulumi.resources.InvokeArgs {

    public static final FieldDefinitionResponse Empty = new FieldDefinitionResponse();

    @InputImport(name="isEncrypted")
    private final @Nullable Boolean isEncrypted;

    public Optional<Boolean> getIsEncrypted() {
        return this.isEncrypted == null ? Optional.empty() : Optional.ofNullable(this.isEncrypted);
    }

    @InputImport(name="isOptional")
    private final @Nullable Boolean isOptional;

    public Optional<Boolean> getIsOptional() {
        return this.isOptional == null ? Optional.empty() : Optional.ofNullable(this.isOptional);
    }

    @InputImport(name="type", required=true)
    private final String type;

    public String getType() {
        return this.type;
    }

    public FieldDefinitionResponse(
        @Nullable Boolean isEncrypted,
        @Nullable Boolean isOptional,
        String type) {
        this.isEncrypted = isEncrypted;
        this.isOptional = isOptional;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private FieldDefinitionResponse() {
        this.isEncrypted = null;
        this.isOptional = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FieldDefinitionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean isEncrypted;
        private @Nullable Boolean isOptional;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(FieldDefinitionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isEncrypted = defaults.isEncrypted;
    	      this.isOptional = defaults.isOptional;
    	      this.type = defaults.type;
        }

        public Builder setIsEncrypted(@Nullable Boolean isEncrypted) {
            this.isEncrypted = isEncrypted;
            return this;
        }

        public Builder setIsOptional(@Nullable Boolean isOptional) {
            this.isOptional = isOptional;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public FieldDefinitionResponse build() {
            return new FieldDefinitionResponse(isEncrypted, isOptional, type);
        }
    }
}
