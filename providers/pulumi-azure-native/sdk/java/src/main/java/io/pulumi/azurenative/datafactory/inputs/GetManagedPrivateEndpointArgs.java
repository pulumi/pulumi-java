// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class GetManagedPrivateEndpointArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetManagedPrivateEndpointArgs Empty = new GetManagedPrivateEndpointArgs();

    /**
     * The factory name.
     * 
     */
    @InputImport(name="factoryName", required=true)
        private final String factoryName;

    public String getFactoryName() {
        return this.factoryName;
    }

    /**
     * Managed private endpoint name
     * 
     */
    @InputImport(name="managedPrivateEndpointName", required=true)
        private final String managedPrivateEndpointName;

    public String getManagedPrivateEndpointName() {
        return this.managedPrivateEndpointName;
    }

    /**
     * Managed virtual network name
     * 
     */
    @InputImport(name="managedVirtualNetworkName", required=true)
        private final String managedVirtualNetworkName;

    public String getManagedVirtualNetworkName() {
        return this.managedVirtualNetworkName;
    }

    /**
     * The resource group name.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
        private final String resourceGroupName;

    public String getResourceGroupName() {
        return this.resourceGroupName;
    }

    public GetManagedPrivateEndpointArgs(
        String factoryName,
        String managedPrivateEndpointName,
        String managedVirtualNetworkName,
        String resourceGroupName) {
        this.factoryName = Objects.requireNonNull(factoryName, "expected parameter 'factoryName' to be non-null");
        this.managedPrivateEndpointName = Objects.requireNonNull(managedPrivateEndpointName, "expected parameter 'managedPrivateEndpointName' to be non-null");
        this.managedVirtualNetworkName = Objects.requireNonNull(managedVirtualNetworkName, "expected parameter 'managedVirtualNetworkName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private GetManagedPrivateEndpointArgs() {
        this.factoryName = null;
        this.managedPrivateEndpointName = null;
        this.managedVirtualNetworkName = null;
        this.resourceGroupName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedPrivateEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String factoryName;
        private String managedPrivateEndpointName;
        private String managedVirtualNetworkName;
        private String resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedPrivateEndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.factoryName = defaults.factoryName;
    	      this.managedPrivateEndpointName = defaults.managedPrivateEndpointName;
    	      this.managedVirtualNetworkName = defaults.managedVirtualNetworkName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder setFactoryName(String factoryName) {
            this.factoryName = Objects.requireNonNull(factoryName);
            return this;
        }

        public Builder setManagedPrivateEndpointName(String managedPrivateEndpointName) {
            this.managedPrivateEndpointName = Objects.requireNonNull(managedPrivateEndpointName);
            return this;
        }

        public Builder setManagedVirtualNetworkName(String managedVirtualNetworkName) {
            this.managedVirtualNetworkName = Objects.requireNonNull(managedVirtualNetworkName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public GetManagedPrivateEndpointArgs build() {
            return new GetManagedPrivateEndpointArgs(factoryName, managedPrivateEndpointName, managedVirtualNetworkName, resourceGroupName);
        }
    }
}
