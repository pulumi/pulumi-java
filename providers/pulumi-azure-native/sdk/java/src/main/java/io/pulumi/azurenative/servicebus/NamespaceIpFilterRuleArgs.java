// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicebus;

import io.pulumi.azurenative.servicebus.enums.IPAction;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NamespaceIpFilterRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final NamespaceIpFilterRuleArgs Empty = new NamespaceIpFilterRuleArgs();

    /**
     * The IP Filter Action
     * 
     */
    @InputImport(name="action")
    private final @Nullable Input<Either<String,IPAction>> action;

    public Input<Either<String,IPAction>> getAction() {
        return this.action == null ? Input.empty() : this.action;
    }

    /**
     * IP Filter name
     * 
     */
    @InputImport(name="filterName")
    private final @Nullable Input<String> filterName;

    public Input<String> getFilterName() {
        return this.filterName == null ? Input.empty() : this.filterName;
    }

    /**
     * The IP Filter Rule name.
     * 
     */
    @InputImport(name="ipFilterRuleName")
    private final @Nullable Input<String> ipFilterRuleName;

    public Input<String> getIpFilterRuleName() {
        return this.ipFilterRuleName == null ? Input.empty() : this.ipFilterRuleName;
    }

    /**
     * IP Mask
     * 
     */
    @InputImport(name="ipMask")
    private final @Nullable Input<String> ipMask;

    public Input<String> getIpMask() {
        return this.ipMask == null ? Input.empty() : this.ipMask;
    }

    /**
     * The namespace name
     * 
     */
    @InputImport(name="namespaceName", required=true)
    private final Input<String> namespaceName;

    public Input<String> getNamespaceName() {
        return this.namespaceName;
    }

    /**
     * Name of the Resource group within the Azure subscription.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public NamespaceIpFilterRuleArgs(
        @Nullable Input<Either<String,IPAction>> action,
        @Nullable Input<String> filterName,
        @Nullable Input<String> ipFilterRuleName,
        @Nullable Input<String> ipMask,
        Input<String> namespaceName,
        Input<String> resourceGroupName) {
        this.action = action;
        this.filterName = filterName;
        this.ipFilterRuleName = ipFilterRuleName;
        this.ipMask = ipMask;
        this.namespaceName = Objects.requireNonNull(namespaceName, "expected parameter 'namespaceName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private NamespaceIpFilterRuleArgs() {
        this.action = Input.empty();
        this.filterName = Input.empty();
        this.ipFilterRuleName = Input.empty();
        this.ipMask = Input.empty();
        this.namespaceName = Input.empty();
        this.resourceGroupName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamespaceIpFilterRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,IPAction>> action;
        private @Nullable Input<String> filterName;
        private @Nullable Input<String> ipFilterRuleName;
        private @Nullable Input<String> ipMask;
        private Input<String> namespaceName;
        private Input<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(NamespaceIpFilterRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.filterName = defaults.filterName;
    	      this.ipFilterRuleName = defaults.ipFilterRuleName;
    	      this.ipMask = defaults.ipMask;
    	      this.namespaceName = defaults.namespaceName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder setAction(@Nullable Input<Either<String,IPAction>> action) {
            this.action = action;
            return this;
        }

        public Builder setAction(@Nullable Either<String,IPAction> action) {
            this.action = Input.ofNullable(action);
            return this;
        }

        public Builder setFilterName(@Nullable Input<String> filterName) {
            this.filterName = filterName;
            return this;
        }

        public Builder setFilterName(@Nullable String filterName) {
            this.filterName = Input.ofNullable(filterName);
            return this;
        }

        public Builder setIpFilterRuleName(@Nullable Input<String> ipFilterRuleName) {
            this.ipFilterRuleName = ipFilterRuleName;
            return this;
        }

        public Builder setIpFilterRuleName(@Nullable String ipFilterRuleName) {
            this.ipFilterRuleName = Input.ofNullable(ipFilterRuleName);
            return this;
        }

        public Builder setIpMask(@Nullable Input<String> ipMask) {
            this.ipMask = ipMask;
            return this;
        }

        public Builder setIpMask(@Nullable String ipMask) {
            this.ipMask = Input.ofNullable(ipMask);
            return this;
        }

        public Builder setNamespaceName(Input<String> namespaceName) {
            this.namespaceName = Objects.requireNonNull(namespaceName);
            return this;
        }

        public Builder setNamespaceName(String namespaceName) {
            this.namespaceName = Input.of(Objects.requireNonNull(namespaceName));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public NamespaceIpFilterRuleArgs build() {
            return new NamespaceIpFilterRuleArgs(action, filterName, ipFilterRuleName, ipMask, namespaceName, resourceGroupName);
        }
    }
}
