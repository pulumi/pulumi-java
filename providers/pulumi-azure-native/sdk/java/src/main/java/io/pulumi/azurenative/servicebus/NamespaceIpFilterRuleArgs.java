// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicebus;

import io.pulumi.azurenative.servicebus.enums.IPAction;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NamespaceIpFilterRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final NamespaceIpFilterRuleArgs Empty = new NamespaceIpFilterRuleArgs();

    /**
     * The IP Filter Action
     * 
     */
    @Import(name="action")
      private final @Nullable Output<Either<String,IPAction>> action;

    public Output<Either<String,IPAction>> getAction() {
        return this.action == null ? Output.empty() : this.action;
    }

    /**
     * IP Filter name
     * 
     */
    @Import(name="filterName")
      private final @Nullable Output<String> filterName;

    public Output<String> getFilterName() {
        return this.filterName == null ? Output.empty() : this.filterName;
    }

    /**
     * The IP Filter Rule name.
     * 
     */
    @Import(name="ipFilterRuleName")
      private final @Nullable Output<String> ipFilterRuleName;

    public Output<String> getIpFilterRuleName() {
        return this.ipFilterRuleName == null ? Output.empty() : this.ipFilterRuleName;
    }

    /**
     * IP Mask
     * 
     */
    @Import(name="ipMask")
      private final @Nullable Output<String> ipMask;

    public Output<String> getIpMask() {
        return this.ipMask == null ? Output.empty() : this.ipMask;
    }

    /**
     * The namespace name
     * 
     */
    @Import(name="namespaceName", required=true)
      private final Output<String> namespaceName;

    public Output<String> getNamespaceName() {
        return this.namespaceName;
    }

    /**
     * Name of the Resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public NamespaceIpFilterRuleArgs(
        @Nullable Output<Either<String,IPAction>> action,
        @Nullable Output<String> filterName,
        @Nullable Output<String> ipFilterRuleName,
        @Nullable Output<String> ipMask,
        Output<String> namespaceName,
        Output<String> resourceGroupName) {
        this.action = action;
        this.filterName = filterName;
        this.ipFilterRuleName = ipFilterRuleName;
        this.ipMask = ipMask;
        this.namespaceName = Objects.requireNonNull(namespaceName, "expected parameter 'namespaceName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private NamespaceIpFilterRuleArgs() {
        this.action = Output.empty();
        this.filterName = Output.empty();
        this.ipFilterRuleName = Output.empty();
        this.ipMask = Output.empty();
        this.namespaceName = Output.empty();
        this.resourceGroupName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamespaceIpFilterRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,IPAction>> action;
        private @Nullable Output<String> filterName;
        private @Nullable Output<String> ipFilterRuleName;
        private @Nullable Output<String> ipMask;
        private Output<String> namespaceName;
        private Output<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(NamespaceIpFilterRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.filterName = defaults.filterName;
    	      this.ipFilterRuleName = defaults.ipFilterRuleName;
    	      this.ipMask = defaults.ipMask;
    	      this.namespaceName = defaults.namespaceName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder action(@Nullable Output<Either<String,IPAction>> action) {
            this.action = action;
            return this;
        }
        public Builder action(@Nullable Either<String,IPAction> action) {
            this.action = Output.ofNullable(action);
            return this;
        }
        public Builder filterName(@Nullable Output<String> filterName) {
            this.filterName = filterName;
            return this;
        }
        public Builder filterName(@Nullable String filterName) {
            this.filterName = Output.ofNullable(filterName);
            return this;
        }
        public Builder ipFilterRuleName(@Nullable Output<String> ipFilterRuleName) {
            this.ipFilterRuleName = ipFilterRuleName;
            return this;
        }
        public Builder ipFilterRuleName(@Nullable String ipFilterRuleName) {
            this.ipFilterRuleName = Output.ofNullable(ipFilterRuleName);
            return this;
        }
        public Builder ipMask(@Nullable Output<String> ipMask) {
            this.ipMask = ipMask;
            return this;
        }
        public Builder ipMask(@Nullable String ipMask) {
            this.ipMask = Output.ofNullable(ipMask);
            return this;
        }
        public Builder namespaceName(Output<String> namespaceName) {
            this.namespaceName = Objects.requireNonNull(namespaceName);
            return this;
        }
        public Builder namespaceName(String namespaceName) {
            this.namespaceName = Output.of(Objects.requireNonNull(namespaceName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }        public NamespaceIpFilterRuleArgs build() {
            return new NamespaceIpFilterRuleArgs(action, filterName, ipFilterRuleName, ipMask, namespaceName, resourceGroupName);
        }
    }
}
