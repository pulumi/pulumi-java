// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.azurenative.recoveryservices.enums.PossibleOperationsDirections;
import io.pulumi.azurenative.recoveryservices.enums.ReplicationProtectedItemOperation;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Recovery plan action details.
 * 
 */
public final class RecoveryPlanActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final RecoveryPlanActionArgs Empty = new RecoveryPlanActionArgs();

    /**
     * The action name.
     * 
     */
    @Import(name="actionName", required=true)
      private final Output<String> actionName;

    public Output<String> actionName() {
        return this.actionName;
    }

    /**
     * The list of failover directions.
     * 
     */
    @Import(name="failoverDirections", required=true)
      private final Output<List<Either<String,PossibleOperationsDirections>>> failoverDirections;

    public Output<List<Either<String,PossibleOperationsDirections>>> failoverDirections() {
        return this.failoverDirections;
    }

    /**
     * The list of failover types.
     * 
     */
    @Import(name="failoverTypes", required=true)
      private final Output<List<Either<String,ReplicationProtectedItemOperation>>> failoverTypes;

    public Output<List<Either<String,ReplicationProtectedItemOperation>>> failoverTypes() {
        return this.failoverTypes;
    }

    public RecoveryPlanActionArgs(
        Output<String> actionName,
        Output<List<Either<String,PossibleOperationsDirections>>> failoverDirections,
        Output<List<Either<String,ReplicationProtectedItemOperation>>> failoverTypes) {
        this.actionName = Objects.requireNonNull(actionName, "expected parameter 'actionName' to be non-null");
        this.failoverDirections = Objects.requireNonNull(failoverDirections, "expected parameter 'failoverDirections' to be non-null");
        this.failoverTypes = Objects.requireNonNull(failoverTypes, "expected parameter 'failoverTypes' to be non-null");
    }

    private RecoveryPlanActionArgs() {
        this.actionName = Codegen.empty();
        this.failoverDirections = Codegen.empty();
        this.failoverTypes = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecoveryPlanActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> actionName;
        private Output<List<Either<String,PossibleOperationsDirections>>> failoverDirections;
        private Output<List<Either<String,ReplicationProtectedItemOperation>>> failoverTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(RecoveryPlanActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionName = defaults.actionName;
    	      this.failoverDirections = defaults.failoverDirections;
    	      this.failoverTypes = defaults.failoverTypes;
        }

        public Builder actionName(Output<String> actionName) {
            this.actionName = Objects.requireNonNull(actionName);
            return this;
        }
        public Builder actionName(String actionName) {
            this.actionName = Output.of(Objects.requireNonNull(actionName));
            return this;
        }
        public Builder failoverDirections(Output<List<Either<String,PossibleOperationsDirections>>> failoverDirections) {
            this.failoverDirections = Objects.requireNonNull(failoverDirections);
            return this;
        }
        public Builder failoverDirections(List<Either<String,PossibleOperationsDirections>> failoverDirections) {
            this.failoverDirections = Output.of(Objects.requireNonNull(failoverDirections));
            return this;
        }
        public Builder failoverDirections(Either<String,PossibleOperationsDirections>... failoverDirections) {
            return failoverDirections(List.of(failoverDirections));
        }
        public Builder failoverTypes(Output<List<Either<String,ReplicationProtectedItemOperation>>> failoverTypes) {
            this.failoverTypes = Objects.requireNonNull(failoverTypes);
            return this;
        }
        public Builder failoverTypes(List<Either<String,ReplicationProtectedItemOperation>> failoverTypes) {
            this.failoverTypes = Output.of(Objects.requireNonNull(failoverTypes));
            return this;
        }
        public Builder failoverTypes(Either<String,ReplicationProtectedItemOperation>... failoverTypes) {
            return failoverTypes(List.of(failoverTypes));
        }        public RecoveryPlanActionArgs build() {
            return new RecoveryPlanActionArgs(actionName, failoverDirections, failoverTypes);
        }
    }
}
