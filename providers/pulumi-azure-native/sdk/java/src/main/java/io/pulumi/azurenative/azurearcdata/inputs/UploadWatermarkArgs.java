// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurearcdata.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Properties on upload watermark.  Mostly timestamp for each upload data type
 * 
 */
public final class UploadWatermarkArgs extends io.pulumi.resources.ResourceArgs {

    public static final UploadWatermarkArgs Empty = new UploadWatermarkArgs();

    /**
     * Last uploaded date for logs from kubernetes cluster. Defaults to current date time
     * 
     */
    @InputImport(name="logs")
      private final @Nullable Input<String> logs;

    public Input<String> getLogs() {
        return this.logs == null ? Input.empty() : this.logs;
    }

    /**
     * Last uploaded date for metrics from kubernetes cluster. Defaults to current date time
     * 
     */
    @InputImport(name="metrics")
      private final @Nullable Input<String> metrics;

    public Input<String> getMetrics() {
        return this.metrics == null ? Input.empty() : this.metrics;
    }

    /**
     * Last uploaded date for usages from kubernetes cluster. Defaults to current date time
     * 
     */
    @InputImport(name="usages")
      private final @Nullable Input<String> usages;

    public Input<String> getUsages() {
        return this.usages == null ? Input.empty() : this.usages;
    }

    public UploadWatermarkArgs(
        @Nullable Input<String> logs,
        @Nullable Input<String> metrics,
        @Nullable Input<String> usages) {
        this.logs = logs;
        this.metrics = metrics;
        this.usages = usages;
    }

    private UploadWatermarkArgs() {
        this.logs = Input.empty();
        this.metrics = Input.empty();
        this.usages = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UploadWatermarkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> logs;
        private @Nullable Input<String> metrics;
        private @Nullable Input<String> usages;

        public Builder() {
    	      // Empty
        }

        public Builder(UploadWatermarkArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logs = defaults.logs;
    	      this.metrics = defaults.metrics;
    	      this.usages = defaults.usages;
        }

        public Builder setLogs(@Nullable Input<String> logs) {
            this.logs = logs;
            return this;
        }

        public Builder setLogs(@Nullable String logs) {
            this.logs = Input.ofNullable(logs);
            return this;
        }

        public Builder setMetrics(@Nullable Input<String> metrics) {
            this.metrics = metrics;
            return this;
        }

        public Builder setMetrics(@Nullable String metrics) {
            this.metrics = Input.ofNullable(metrics);
            return this;
        }

        public Builder setUsages(@Nullable Input<String> usages) {
            this.usages = usages;
            return this;
        }

        public Builder setUsages(@Nullable String usages) {
            this.usages = Input.ofNullable(usages);
            return this;
        }
        public UploadWatermarkArgs build() {
            return new UploadWatermarkArgs(logs, metrics, usages);
        }
    }
}
