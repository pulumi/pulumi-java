// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.vmwarecloudsimple;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.vmwarecloudsimple.VirtualMachineArgs;
import io.pulumi.azurenative.vmwarecloudsimple.outputs.GuestOSCustomizationResponse;
import io.pulumi.azurenative.vmwarecloudsimple.outputs.ResourcePoolResponse;
import io.pulumi.azurenative.vmwarecloudsimple.outputs.VirtualDiskControllerResponse;
import io.pulumi.azurenative.vmwarecloudsimple.outputs.VirtualDiskResponse;
import io.pulumi.azurenative.vmwarecloudsimple.outputs.VirtualNicResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:vmwarecloudsimple:VirtualMachine")
public class VirtualMachine extends io.pulumi.resources.CustomResource {
    @OutputExport(name="amountOfRam", type=Integer.class, parameters={})
    private Output<Integer> amountOfRam;

    public Output<Integer> getAmountOfRam() {
        return this.amountOfRam;
    }
    @OutputExport(name="controllers", type=List.class, parameters={VirtualDiskControllerResponse.class})
    private Output<List<VirtualDiskControllerResponse>> controllers;

    public Output<List<VirtualDiskControllerResponse>> getControllers() {
        return this.controllers;
    }
    @OutputExport(name="customization", type=GuestOSCustomizationResponse.class, parameters={})
    private Output</* @Nullable */ GuestOSCustomizationResponse> customization;

    public Output</* @Nullable */ GuestOSCustomizationResponse> getCustomization() {
        return this.customization;
    }
    @OutputExport(name="disks", type=List.class, parameters={VirtualDiskResponse.class})
    private Output</* @Nullable */ List<VirtualDiskResponse>> disks;

    public Output</* @Nullable */ List<VirtualDiskResponse>> getDisks() {
        return this.disks;
    }
    @OutputExport(name="dnsname", type=String.class, parameters={})
    private Output<String> dnsname;

    public Output<String> getDnsname() {
        return this.dnsname;
    }
    @OutputExport(name="exposeToGuestVM", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> exposeToGuestVM;

    public Output</* @Nullable */ Boolean> getExposeToGuestVM() {
        return this.exposeToGuestVM;
    }
    @OutputExport(name="folder", type=String.class, parameters={})
    private Output<String> folder;

    public Output<String> getFolder() {
        return this.folder;
    }
    @OutputExport(name="guestOS", type=String.class, parameters={})
    private Output<String> guestOS;

    public Output<String> getGuestOS() {
        return this.guestOS;
    }
    @OutputExport(name="guestOSType", type=String.class, parameters={})
    private Output<String> guestOSType;

    public Output<String> getGuestOSType() {
        return this.guestOSType;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="nics", type=List.class, parameters={VirtualNicResponse.class})
    private Output</* @Nullable */ List<VirtualNicResponse>> nics;

    public Output</* @Nullable */ List<VirtualNicResponse>> getNics() {
        return this.nics;
    }
    @OutputExport(name="numberOfCores", type=Integer.class, parameters={})
    private Output<Integer> numberOfCores;

    public Output<Integer> getNumberOfCores() {
        return this.numberOfCores;
    }
    @OutputExport(name="password", type=String.class, parameters={})
    private Output</* @Nullable */ String> password;

    public Output</* @Nullable */ String> getPassword() {
        return this.password;
    }
    @OutputExport(name="privateCloudId", type=String.class, parameters={})
    private Output<String> privateCloudId;

    public Output<String> getPrivateCloudId() {
        return this.privateCloudId;
    }
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    @OutputExport(name="publicIP", type=String.class, parameters={})
    private Output<String> publicIP;

    public Output<String> getPublicIP() {
        return this.publicIP;
    }
    @OutputExport(name="resourcePool", type=ResourcePoolResponse.class, parameters={})
    private Output</* @Nullable */ ResourcePoolResponse> resourcePool;

    public Output</* @Nullable */ ResourcePoolResponse> getResourcePool() {
        return this.resourcePool;
    }
    @OutputExport(name="status", type=String.class, parameters={})
    private Output<String> status;

    public Output<String> getStatus() {
        return this.status;
    }
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="templateId", type=String.class, parameters={})
    private Output</* @Nullable */ String> templateId;

    public Output</* @Nullable */ String> getTemplateId() {
        return this.templateId;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="username", type=String.class, parameters={})
    private Output</* @Nullable */ String> username;

    public Output</* @Nullable */ String> getUsername() {
        return this.username;
    }
    @OutputExport(name="vSphereNetworks", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> vSphereNetworks;

    public Output</* @Nullable */ List<String>> getVSphereNetworks() {
        return this.vSphereNetworks;
    }
    @OutputExport(name="vmId", type=String.class, parameters={})
    private Output<String> vmId;

    public Output<String> getVmId() {
        return this.vmId;
    }
    @OutputExport(name="vmwaretools", type=String.class, parameters={})
    private Output<String> vmwaretools;

    public Output<String> getVmwaretools() {
        return this.vmwaretools;
    }

    public VirtualMachine(String name, VirtualMachineArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:vmwarecloudsimple:VirtualMachine", name, args == null ? VirtualMachineArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private VirtualMachine(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:vmwarecloudsimple:VirtualMachine", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:vmwarecloudsimple/v20190401:VirtualMachine").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static VirtualMachine get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VirtualMachine(name, id, options);
    }
}
