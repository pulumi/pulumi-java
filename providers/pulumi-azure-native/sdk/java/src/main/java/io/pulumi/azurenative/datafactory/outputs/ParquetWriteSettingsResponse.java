// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ParquetWriteSettingsResponse {
    private final @Nullable Object fileNamePrefix;
    private final @Nullable Object maxRowsPerFile;
    private final String type;

    @OutputCustomType.Constructor({"fileNamePrefix","maxRowsPerFile","type"})
    private ParquetWriteSettingsResponse(
        @Nullable Object fileNamePrefix,
        @Nullable Object maxRowsPerFile,
        String type) {
        this.fileNamePrefix = fileNamePrefix;
        this.maxRowsPerFile = maxRowsPerFile;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<Object> getFileNamePrefix() {
        return Optional.ofNullable(this.fileNamePrefix);
    }
    public Optional<Object> getMaxRowsPerFile() {
        return Optional.ofNullable(this.maxRowsPerFile);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParquetWriteSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object fileNamePrefix;
        private @Nullable Object maxRowsPerFile;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ParquetWriteSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fileNamePrefix = defaults.fileNamePrefix;
    	      this.maxRowsPerFile = defaults.maxRowsPerFile;
    	      this.type = defaults.type;
        }

        public Builder setFileNamePrefix(@Nullable Object fileNamePrefix) {
            this.fileNamePrefix = fileNamePrefix;
            return this;
        }

        public Builder setMaxRowsPerFile(@Nullable Object maxRowsPerFile) {
            this.maxRowsPerFile = maxRowsPerFile;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public ParquetWriteSettingsResponse build() {
            return new ParquetWriteSettingsResponse(fileNamePrefix, maxRowsPerFile, type);
        }
    }
}
