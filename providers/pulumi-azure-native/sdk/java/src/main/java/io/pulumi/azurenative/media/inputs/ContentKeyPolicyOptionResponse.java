// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.azurenative.media.inputs.ContentKeyPolicyClearKeyConfigurationResponse;
import io.pulumi.azurenative.media.inputs.ContentKeyPolicyFairPlayConfigurationResponse;
import io.pulumi.azurenative.media.inputs.ContentKeyPolicyOpenRestrictionResponse;
import io.pulumi.azurenative.media.inputs.ContentKeyPolicyPlayReadyConfigurationResponse;
import io.pulumi.azurenative.media.inputs.ContentKeyPolicyTokenRestrictionResponse;
import io.pulumi.azurenative.media.inputs.ContentKeyPolicyUnknownConfigurationResponse;
import io.pulumi.azurenative.media.inputs.ContentKeyPolicyUnknownRestrictionResponse;
import io.pulumi.azurenative.media.inputs.ContentKeyPolicyWidevineConfigurationResponse;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a policy option.
 * 
 */
public final class ContentKeyPolicyOptionResponse extends io.pulumi.resources.InvokeArgs {

    public static final ContentKeyPolicyOptionResponse Empty = new ContentKeyPolicyOptionResponse();

    /**
     * The key delivery configuration.
     * 
     */
    @Import(name="configuration", required=true)
      private final Object configuration;

    public Object getConfiguration() {
        return this.configuration;
    }

    /**
     * The Policy Option description.
     * 
     */
    @Import(name="name")
      private final @Nullable String name;

    public Optional<String> getName() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    /**
     * The legacy Policy Option ID.
     * 
     */
    @Import(name="policyOptionId", required=true)
      private final String policyOptionId;

    public String getPolicyOptionId() {
        return this.policyOptionId;
    }

    /**
     * The requirements that must be met to deliver keys with this configuration
     * 
     */
    @Import(name="restriction", required=true)
      private final Object restriction;

    public Object getRestriction() {
        return this.restriction;
    }

    public ContentKeyPolicyOptionResponse(
        Object configuration,
        @Nullable String name,
        String policyOptionId,
        Object restriction) {
        this.configuration = Objects.requireNonNull(configuration, "expected parameter 'configuration' to be non-null");
        this.name = name;
        this.policyOptionId = Objects.requireNonNull(policyOptionId, "expected parameter 'policyOptionId' to be non-null");
        this.restriction = Objects.requireNonNull(restriction, "expected parameter 'restriction' to be non-null");
    }

    private ContentKeyPolicyOptionResponse() {
        this.configuration = null;
        this.name = null;
        this.policyOptionId = null;
        this.restriction = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContentKeyPolicyOptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Object configuration;
        private @Nullable String name;
        private String policyOptionId;
        private Object restriction;

        public Builder() {
    	      // Empty
        }

        public Builder(ContentKeyPolicyOptionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.name = defaults.name;
    	      this.policyOptionId = defaults.policyOptionId;
    	      this.restriction = defaults.restriction;
        }

        public Builder configuration(Object configuration) {
            this.configuration = Objects.requireNonNull(configuration);
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder policyOptionId(String policyOptionId) {
            this.policyOptionId = Objects.requireNonNull(policyOptionId);
            return this;
        }

        public Builder restriction(Object restriction) {
            this.restriction = Objects.requireNonNull(restriction);
            return this;
        }
        public ContentKeyPolicyOptionResponse build() {
            return new ContentKeyPolicyOptionResponse(configuration, name, policyOptionId, restriction);
        }
    }
}
