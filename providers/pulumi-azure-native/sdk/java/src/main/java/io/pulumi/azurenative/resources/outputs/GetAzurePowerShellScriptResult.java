// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.resources.outputs;

import io.pulumi.azurenative.resources.outputs.ContainerConfigurationResponse;
import io.pulumi.azurenative.resources.outputs.EnvironmentVariableResponse;
import io.pulumi.azurenative.resources.outputs.ManagedServiceIdentityResponse;
import io.pulumi.azurenative.resources.outputs.ScriptStatusResponse;
import io.pulumi.azurenative.resources.outputs.StorageAccountConfigurationResponse;
import io.pulumi.azurenative.resources.outputs.SystemDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetAzurePowerShellScriptResult {
    private final @Nullable String arguments;
    private final String azPowerShellVersion;
    private final @Nullable String cleanupPreference;
    private final @Nullable ContainerConfigurationResponse containerSettings;
    private final @Nullable List<EnvironmentVariableResponse> environmentVariables;
    private final @Nullable String forceUpdateTag;
    private final String id;
    private final @Nullable ManagedServiceIdentityResponse identity;
    private final String kind;
    private final String location;
    private final String name;
    private final Map<String,Object> outputs;
    private final @Nullable String primaryScriptUri;
    private final String provisioningState;
    private final String retentionInterval;
    private final @Nullable String scriptContent;
    private final ScriptStatusResponse status;
    private final @Nullable StorageAccountConfigurationResponse storageAccountSettings;
    private final @Nullable List<String> supportingScriptUris;
    private final SystemDataResponse systemData;
    private final @Nullable Map<String,String> tags;
    private final @Nullable String timeout;
    private final String type;

    @OutputCustomType.Constructor({"arguments","azPowerShellVersion","cleanupPreference","containerSettings","environmentVariables","forceUpdateTag","id","identity","kind","location","name","outputs","primaryScriptUri","provisioningState","retentionInterval","scriptContent","status","storageAccountSettings","supportingScriptUris","systemData","tags","timeout","type"})
    private GetAzurePowerShellScriptResult(
        @Nullable String arguments,
        String azPowerShellVersion,
        @Nullable String cleanupPreference,
        @Nullable ContainerConfigurationResponse containerSettings,
        @Nullable List<EnvironmentVariableResponse> environmentVariables,
        @Nullable String forceUpdateTag,
        String id,
        @Nullable ManagedServiceIdentityResponse identity,
        String kind,
        String location,
        String name,
        Map<String,Object> outputs,
        @Nullable String primaryScriptUri,
        String provisioningState,
        String retentionInterval,
        @Nullable String scriptContent,
        ScriptStatusResponse status,
        @Nullable StorageAccountConfigurationResponse storageAccountSettings,
        @Nullable List<String> supportingScriptUris,
        SystemDataResponse systemData,
        @Nullable Map<String,String> tags,
        @Nullable String timeout,
        String type) {
        this.arguments = arguments;
        this.azPowerShellVersion = Objects.requireNonNull(azPowerShellVersion);
        this.cleanupPreference = cleanupPreference;
        this.containerSettings = containerSettings;
        this.environmentVariables = environmentVariables;
        this.forceUpdateTag = forceUpdateTag;
        this.id = Objects.requireNonNull(id);
        this.identity = identity;
        this.kind = Objects.requireNonNull(kind);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.outputs = Objects.requireNonNull(outputs);
        this.primaryScriptUri = primaryScriptUri;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.retentionInterval = Objects.requireNonNull(retentionInterval);
        this.scriptContent = scriptContent;
        this.status = Objects.requireNonNull(status);
        this.storageAccountSettings = storageAccountSettings;
        this.supportingScriptUris = supportingScriptUris;
        this.systemData = Objects.requireNonNull(systemData);
        this.tags = tags;
        this.timeout = timeout;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getArguments() {
        return Optional.ofNullable(this.arguments);
    }
    public String getAzPowerShellVersion() {
        return this.azPowerShellVersion;
    }
    public Optional<String> getCleanupPreference() {
        return Optional.ofNullable(this.cleanupPreference);
    }
    public Optional<ContainerConfigurationResponse> getContainerSettings() {
        return Optional.ofNullable(this.containerSettings);
    }
    public List<EnvironmentVariableResponse> getEnvironmentVariables() {
        return this.environmentVariables == null ? List.of() : this.environmentVariables;
    }
    public Optional<String> getForceUpdateTag() {
        return Optional.ofNullable(this.forceUpdateTag);
    }
    public String getId() {
        return this.id;
    }
    public Optional<ManagedServiceIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public String getKind() {
        return this.kind;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public Map<String,Object> getOutputs() {
        return this.outputs;
    }
    public Optional<String> getPrimaryScriptUri() {
        return Optional.ofNullable(this.primaryScriptUri);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public String getRetentionInterval() {
        return this.retentionInterval;
    }
    public Optional<String> getScriptContent() {
        return Optional.ofNullable(this.scriptContent);
    }
    public ScriptStatusResponse getStatus() {
        return this.status;
    }
    public Optional<StorageAccountConfigurationResponse> getStorageAccountSettings() {
        return Optional.ofNullable(this.storageAccountSettings);
    }
    public List<String> getSupportingScriptUris() {
        return this.supportingScriptUris == null ? List.of() : this.supportingScriptUris;
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> getTimeout() {
        return Optional.ofNullable(this.timeout);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAzurePowerShellScriptResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arguments;
        private String azPowerShellVersion;
        private @Nullable String cleanupPreference;
        private @Nullable ContainerConfigurationResponse containerSettings;
        private @Nullable List<EnvironmentVariableResponse> environmentVariables;
        private @Nullable String forceUpdateTag;
        private String id;
        private @Nullable ManagedServiceIdentityResponse identity;
        private String kind;
        private String location;
        private String name;
        private Map<String,Object> outputs;
        private @Nullable String primaryScriptUri;
        private String provisioningState;
        private String retentionInterval;
        private @Nullable String scriptContent;
        private ScriptStatusResponse status;
        private @Nullable StorageAccountConfigurationResponse storageAccountSettings;
        private @Nullable List<String> supportingScriptUris;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private @Nullable String timeout;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAzurePowerShellScriptResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arguments = defaults.arguments;
    	      this.azPowerShellVersion = defaults.azPowerShellVersion;
    	      this.cleanupPreference = defaults.cleanupPreference;
    	      this.containerSettings = defaults.containerSettings;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.forceUpdateTag = defaults.forceUpdateTag;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.outputs = defaults.outputs;
    	      this.primaryScriptUri = defaults.primaryScriptUri;
    	      this.provisioningState = defaults.provisioningState;
    	      this.retentionInterval = defaults.retentionInterval;
    	      this.scriptContent = defaults.scriptContent;
    	      this.status = defaults.status;
    	      this.storageAccountSettings = defaults.storageAccountSettings;
    	      this.supportingScriptUris = defaults.supportingScriptUris;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.timeout = defaults.timeout;
    	      this.type = defaults.type;
        }

        public Builder setArguments(@Nullable String arguments) {
            this.arguments = arguments;
            return this;
        }

        public Builder setAzPowerShellVersion(String azPowerShellVersion) {
            this.azPowerShellVersion = Objects.requireNonNull(azPowerShellVersion);
            return this;
        }

        public Builder setCleanupPreference(@Nullable String cleanupPreference) {
            this.cleanupPreference = cleanupPreference;
            return this;
        }

        public Builder setContainerSettings(@Nullable ContainerConfigurationResponse containerSettings) {
            this.containerSettings = containerSettings;
            return this;
        }

        public Builder setEnvironmentVariables(@Nullable List<EnvironmentVariableResponse> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }

        public Builder setForceUpdateTag(@Nullable String forceUpdateTag) {
            this.forceUpdateTag = forceUpdateTag;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable ManagedServiceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOutputs(Map<String,Object> outputs) {
            this.outputs = Objects.requireNonNull(outputs);
            return this;
        }

        public Builder setPrimaryScriptUri(@Nullable String primaryScriptUri) {
            this.primaryScriptUri = primaryScriptUri;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRetentionInterval(String retentionInterval) {
            this.retentionInterval = Objects.requireNonNull(retentionInterval);
            return this;
        }

        public Builder setScriptContent(@Nullable String scriptContent) {
            this.scriptContent = scriptContent;
            return this;
        }

        public Builder setStatus(ScriptStatusResponse status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setStorageAccountSettings(@Nullable StorageAccountConfigurationResponse storageAccountSettings) {
            this.storageAccountSettings = storageAccountSettings;
            return this;
        }

        public Builder setSupportingScriptUris(@Nullable List<String> supportingScriptUris) {
            this.supportingScriptUris = supportingScriptUris;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTimeout(@Nullable String timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetAzurePowerShellScriptResult build() {
            return new GetAzurePowerShellScriptResult(arguments, azPowerShellVersion, cleanupPreference, containerSettings, environmentVariables, forceUpdateTag, id, identity, kind, location, name, outputs, primaryScriptUri, provisioningState, retentionInterval, scriptContent, status, storageAccountSettings, supportingScriptUris, systemData, tags, timeout, type);
        }
    }
}
