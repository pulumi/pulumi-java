// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights;

import io.pulumi.azurenative.securityinsights.enums.AlertSeverity;
import io.pulumi.azurenative.securityinsights.enums.MicrosoftSecurityProductName;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MicrosoftSecurityIncidentCreationAlertRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final MicrosoftSecurityIncidentCreationAlertRuleArgs Empty = new MicrosoftSecurityIncidentCreationAlertRuleArgs();

    @InputImport(name="alertRuleTemplateName")
    private final @Nullable Input<String> alertRuleTemplateName;

    public Input<String> getAlertRuleTemplateName() {
        return this.alertRuleTemplateName == null ? Input.empty() : this.alertRuleTemplateName;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="displayName", required=true)
    private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    @InputImport(name="displayNamesExcludeFilter")
    private final @Nullable Input<List<String>> displayNamesExcludeFilter;

    public Input<List<String>> getDisplayNamesExcludeFilter() {
        return this.displayNamesExcludeFilter == null ? Input.empty() : this.displayNamesExcludeFilter;
    }

    @InputImport(name="displayNamesFilter")
    private final @Nullable Input<List<String>> displayNamesFilter;

    public Input<List<String>> getDisplayNamesFilter() {
        return this.displayNamesFilter == null ? Input.empty() : this.displayNamesFilter;
    }

    @InputImport(name="enabled", required=true)
    private final Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled;
    }

    @InputImport(name="kind", required=true)
    private final Input<String> kind;

    public Input<String> getKind() {
        return this.kind;
    }

    @InputImport(name="productFilter", required=true)
    private final Input<Either<String,MicrosoftSecurityProductName>> productFilter;

    public Input<Either<String,MicrosoftSecurityProductName>> getProductFilter() {
        return this.productFilter;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="ruleId")
    private final @Nullable Input<String> ruleId;

    public Input<String> getRuleId() {
        return this.ruleId == null ? Input.empty() : this.ruleId;
    }

    @InputImport(name="severitiesFilter")
    private final @Nullable Input<List<Either<String,AlertSeverity>>> severitiesFilter;

    public Input<List<Either<String,AlertSeverity>>> getSeveritiesFilter() {
        return this.severitiesFilter == null ? Input.empty() : this.severitiesFilter;
    }

    @InputImport(name="workspaceName", required=true)
    private final Input<String> workspaceName;

    public Input<String> getWorkspaceName() {
        return this.workspaceName;
    }

    public MicrosoftSecurityIncidentCreationAlertRuleArgs(
        @Nullable Input<String> alertRuleTemplateName,
        @Nullable Input<String> description,
        Input<String> displayName,
        @Nullable Input<List<String>> displayNamesExcludeFilter,
        @Nullable Input<List<String>> displayNamesFilter,
        Input<Boolean> enabled,
        Input<String> kind,
        Input<Either<String,MicrosoftSecurityProductName>> productFilter,
        Input<String> resourceGroupName,
        @Nullable Input<String> ruleId,
        @Nullable Input<List<Either<String,AlertSeverity>>> severitiesFilter,
        Input<String> workspaceName) {
        this.alertRuleTemplateName = alertRuleTemplateName;
        this.description = description;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.displayNamesExcludeFilter = displayNamesExcludeFilter;
        this.displayNamesFilter = displayNamesFilter;
        this.enabled = Objects.requireNonNull(enabled, "expected parameter 'enabled' to be non-null");
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.productFilter = Objects.requireNonNull(productFilter, "expected parameter 'productFilter' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ruleId = ruleId;
        this.severitiesFilter = severitiesFilter;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private MicrosoftSecurityIncidentCreationAlertRuleArgs() {
        this.alertRuleTemplateName = Input.empty();
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.displayNamesExcludeFilter = Input.empty();
        this.displayNamesFilter = Input.empty();
        this.enabled = Input.empty();
        this.kind = Input.empty();
        this.productFilter = Input.empty();
        this.resourceGroupName = Input.empty();
        this.ruleId = Input.empty();
        this.severitiesFilter = Input.empty();
        this.workspaceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MicrosoftSecurityIncidentCreationAlertRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> alertRuleTemplateName;
        private @Nullable Input<String> description;
        private Input<String> displayName;
        private @Nullable Input<List<String>> displayNamesExcludeFilter;
        private @Nullable Input<List<String>> displayNamesFilter;
        private Input<Boolean> enabled;
        private Input<String> kind;
        private Input<Either<String,MicrosoftSecurityProductName>> productFilter;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> ruleId;
        private @Nullable Input<List<Either<String,AlertSeverity>>> severitiesFilter;
        private Input<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(MicrosoftSecurityIncidentCreationAlertRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertRuleTemplateName = defaults.alertRuleTemplateName;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.displayNamesExcludeFilter = defaults.displayNamesExcludeFilter;
    	      this.displayNamesFilter = defaults.displayNamesFilter;
    	      this.enabled = defaults.enabled;
    	      this.kind = defaults.kind;
    	      this.productFilter = defaults.productFilter;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ruleId = defaults.ruleId;
    	      this.severitiesFilter = defaults.severitiesFilter;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder setAlertRuleTemplateName(@Nullable Input<String> alertRuleTemplateName) {
            this.alertRuleTemplateName = alertRuleTemplateName;
            return this;
        }

        public Builder setAlertRuleTemplateName(@Nullable String alertRuleTemplateName) {
            this.alertRuleTemplateName = Input.ofNullable(alertRuleTemplateName);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisplayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder setDisplayNamesExcludeFilter(@Nullable Input<List<String>> displayNamesExcludeFilter) {
            this.displayNamesExcludeFilter = displayNamesExcludeFilter;
            return this;
        }

        public Builder setDisplayNamesExcludeFilter(@Nullable List<String> displayNamesExcludeFilter) {
            this.displayNamesExcludeFilter = Input.ofNullable(displayNamesExcludeFilter);
            return this;
        }

        public Builder setDisplayNamesFilter(@Nullable Input<List<String>> displayNamesFilter) {
            this.displayNamesFilter = displayNamesFilter;
            return this;
        }

        public Builder setDisplayNamesFilter(@Nullable List<String> displayNamesFilter) {
            this.displayNamesFilter = Input.ofNullable(displayNamesFilter);
            return this;
        }

        public Builder setEnabled(Input<Boolean> enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }

        public Builder setEnabled(Boolean enabled) {
            this.enabled = Input.of(Objects.requireNonNull(enabled));
            return this;
        }

        public Builder setKind(Input<String> kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Input.of(Objects.requireNonNull(kind));
            return this;
        }

        public Builder setProductFilter(Input<Either<String,MicrosoftSecurityProductName>> productFilter) {
            this.productFilter = Objects.requireNonNull(productFilter);
            return this;
        }

        public Builder setProductFilter(Either<String,MicrosoftSecurityProductName> productFilter) {
            this.productFilter = Input.of(Objects.requireNonNull(productFilter));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRuleId(@Nullable Input<String> ruleId) {
            this.ruleId = ruleId;
            return this;
        }

        public Builder setRuleId(@Nullable String ruleId) {
            this.ruleId = Input.ofNullable(ruleId);
            return this;
        }

        public Builder setSeveritiesFilter(@Nullable Input<List<Either<String,AlertSeverity>>> severitiesFilter) {
            this.severitiesFilter = severitiesFilter;
            return this;
        }

        public Builder setSeveritiesFilter(@Nullable List<Either<String,AlertSeverity>> severitiesFilter) {
            this.severitiesFilter = Input.ofNullable(severitiesFilter);
            return this;
        }

        public Builder setWorkspaceName(Input<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }

        public Builder setWorkspaceName(String workspaceName) {
            this.workspaceName = Input.of(Objects.requireNonNull(workspaceName));
            return this;
        }

        public MicrosoftSecurityIncidentCreationAlertRuleArgs build() {
            return new MicrosoftSecurityIncidentCreationAlertRuleArgs(alertRuleTemplateName, description, displayName, displayNamesExcludeFilter, displayNamesFilter, enabled, kind, productFilter, resourceGroupName, ruleId, severitiesFilter, workspaceName);
        }
    }
}
