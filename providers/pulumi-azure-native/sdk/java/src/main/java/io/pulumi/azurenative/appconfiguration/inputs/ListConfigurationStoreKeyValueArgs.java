// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.appconfiguration.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListConfigurationStoreKeyValueArgs extends io.pulumi.resources.InvokeArgs {

    public static final ListConfigurationStoreKeyValueArgs Empty = new ListConfigurationStoreKeyValueArgs();

    /**
     * The name of the configuration store.
     * 
     */
    @Import(name="configStoreName", required=true)
      private final String configStoreName;

    public String getConfigStoreName() {
        return this.configStoreName;
    }

    /**
     * The key to retrieve.
     * 
     */
    @Import(name="key", required=true)
      private final String key;

    public String getKey() {
        return this.key;
    }

    /**
     * The label of the key.
     * 
     */
    @Import(name="label")
      private final @Nullable String label;

    public Optional<String> getLabel() {
        return this.label == null ? Optional.empty() : Optional.ofNullable(this.label);
    }

    /**
     * The name of the resource group to which the container registry belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final String resourceGroupName;

    public String getResourceGroupName() {
        return this.resourceGroupName;
    }

    public ListConfigurationStoreKeyValueArgs(
        String configStoreName,
        String key,
        @Nullable String label,
        String resourceGroupName) {
        this.configStoreName = Objects.requireNonNull(configStoreName, "expected parameter 'configStoreName' to be non-null");
        this.key = Objects.requireNonNull(key, "expected parameter 'key' to be non-null");
        this.label = label;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private ListConfigurationStoreKeyValueArgs() {
        this.configStoreName = null;
        this.key = null;
        this.label = null;
        this.resourceGroupName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListConfigurationStoreKeyValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String configStoreName;
        private String key;
        private @Nullable String label;
        private String resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(ListConfigurationStoreKeyValueArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configStoreName = defaults.configStoreName;
    	      this.key = defaults.key;
    	      this.label = defaults.label;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder configStoreName(String configStoreName) {
            this.configStoreName = Objects.requireNonNull(configStoreName);
            return this;
        }

        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }

        public Builder label(@Nullable String label) {
            this.label = label;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public ListConfigurationStoreKeyValueArgs build() {
            return new ListConfigurationStoreKeyValueArgs(configStoreName, key, label, resourceGroupName);
        }
    }
}
