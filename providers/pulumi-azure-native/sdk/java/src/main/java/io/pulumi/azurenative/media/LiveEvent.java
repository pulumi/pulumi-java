// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.media.LiveEventArgs;
import io.pulumi.azurenative.media.outputs.CrossSiteAccessPoliciesResponse;
import io.pulumi.azurenative.media.outputs.LiveEventEncodingResponse;
import io.pulumi.azurenative.media.outputs.LiveEventInputResponse;
import io.pulumi.azurenative.media.outputs.LiveEventPreviewResponse;
import io.pulumi.azurenative.media.outputs.LiveEventTranscriptionResponse;
import io.pulumi.azurenative.media.outputs.SystemDataResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:media:LiveEvent")
public class LiveEvent extends io.pulumi.resources.CustomResource {
    @OutputExport(name="created", type=String.class, parameters={})
    private Output<String> created;

    public Output<String> getCreated() {
        return this.created;
    }
    @OutputExport(name="crossSiteAccessPolicies", type=CrossSiteAccessPoliciesResponse.class, parameters={})
    private Output</* @Nullable */ CrossSiteAccessPoliciesResponse> crossSiteAccessPolicies;

    public Output</* @Nullable */ CrossSiteAccessPoliciesResponse> getCrossSiteAccessPolicies() {
        return this.crossSiteAccessPolicies;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="encoding", type=LiveEventEncodingResponse.class, parameters={})
    private Output</* @Nullable */ LiveEventEncodingResponse> encoding;

    public Output</* @Nullable */ LiveEventEncodingResponse> getEncoding() {
        return this.encoding;
    }
    @OutputExport(name="hostnamePrefix", type=String.class, parameters={})
    private Output</* @Nullable */ String> hostnamePrefix;

    public Output</* @Nullable */ String> getHostnamePrefix() {
        return this.hostnamePrefix;
    }
    @OutputExport(name="input", type=LiveEventInputResponse.class, parameters={})
    private Output<LiveEventInputResponse> input;

    public Output<LiveEventInputResponse> getInput() {
        return this.input;
    }
    @OutputExport(name="lastModified", type=String.class, parameters={})
    private Output<String> lastModified;

    public Output<String> getLastModified() {
        return this.lastModified;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="preview", type=LiveEventPreviewResponse.class, parameters={})
    private Output</* @Nullable */ LiveEventPreviewResponse> preview;

    public Output</* @Nullable */ LiveEventPreviewResponse> getPreview() {
        return this.preview;
    }
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    @OutputExport(name="resourceState", type=String.class, parameters={})
    private Output<String> resourceState;

    public Output<String> getResourceState() {
        return this.resourceState;
    }
    @OutputExport(name="streamOptions", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> streamOptions;

    public Output</* @Nullable */ List<String>> getStreamOptions() {
        return this.streamOptions;
    }
    @OutputExport(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="transcriptions", type=List.class, parameters={LiveEventTranscriptionResponse.class})
    private Output</* @Nullable */ List<LiveEventTranscriptionResponse>> transcriptions;

    public Output</* @Nullable */ List<LiveEventTranscriptionResponse>> getTranscriptions() {
        return this.transcriptions;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="useStaticHostname", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> useStaticHostname;

    public Output</* @Nullable */ Boolean> getUseStaticHostname() {
        return this.useStaticHostname;
    }

    public LiveEvent(String name, LiveEventArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:LiveEvent", name, args == null ? LiveEventArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private LiveEvent(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:LiveEvent", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:media/v20180330preview:LiveEvent").build()),
                Input.of(Alias.builder().setType("azure-native:media/v20180601preview:LiveEvent").build()),
                Input.of(Alias.builder().setType("azure-native:media/v20180701:LiveEvent").build()),
                Input.of(Alias.builder().setType("azure-native:media/v20190501preview:LiveEvent").build()),
                Input.of(Alias.builder().setType("azure-native:media/v20200501:LiveEvent").build()),
                Input.of(Alias.builder().setType("azure-native:media/v20210601:LiveEvent").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static LiveEvent get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new LiveEvent(name, id, options);
    }
}
