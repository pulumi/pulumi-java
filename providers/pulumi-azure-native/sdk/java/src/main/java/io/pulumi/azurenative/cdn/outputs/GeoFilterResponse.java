// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GeoFilterResponse {
    private final String action;
    private final List<String> countryCodes;
    private final String relativePath;

    @OutputCustomType.Constructor({"action","countryCodes","relativePath"})
    private GeoFilterResponse(
        String action,
        List<String> countryCodes,
        String relativePath) {
        this.action = Objects.requireNonNull(action);
        this.countryCodes = Objects.requireNonNull(countryCodes);
        this.relativePath = Objects.requireNonNull(relativePath);
    }

    public String getAction() {
        return this.action;
    }
    public List<String> getCountryCodes() {
        return this.countryCodes;
    }
    public String getRelativePath() {
        return this.relativePath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GeoFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String action;
        private List<String> countryCodes;
        private String relativePath;

        public Builder() {
    	      // Empty
        }

        public Builder(GeoFilterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.countryCodes = defaults.countryCodes;
    	      this.relativePath = defaults.relativePath;
        }

        public Builder setAction(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder setCountryCodes(List<String> countryCodes) {
            this.countryCodes = Objects.requireNonNull(countryCodes);
            return this;
        }

        public Builder setRelativePath(String relativePath) {
            this.relativePath = Objects.requireNonNull(relativePath);
            return this;
        }

        public GeoFilterResponse build() {
            return new GeoFilterResponse(action, countryCodes, relativePath);
        }
    }
}
