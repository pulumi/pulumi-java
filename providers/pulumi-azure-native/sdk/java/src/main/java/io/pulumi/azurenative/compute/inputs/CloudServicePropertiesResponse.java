// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.azurenative.compute.inputs.CloudServiceExtensionProfileResponse;
import io.pulumi.azurenative.compute.inputs.CloudServiceNetworkProfileResponse;
import io.pulumi.azurenative.compute.inputs.CloudServiceOsProfileResponse;
import io.pulumi.azurenative.compute.inputs.CloudServiceRoleProfileResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudServicePropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final CloudServicePropertiesResponse Empty = new CloudServicePropertiesResponse();

    @InputImport(name="allowModelOverride")
    private final @Nullable Boolean allowModelOverride;

    public Optional<Boolean> getAllowModelOverride() {
        return this.allowModelOverride == null ? Optional.empty() : Optional.ofNullable(this.allowModelOverride);
    }

    @InputImport(name="configuration")
    private final @Nullable String configuration;

    public Optional<String> getConfiguration() {
        return this.configuration == null ? Optional.empty() : Optional.ofNullable(this.configuration);
    }

    @InputImport(name="configurationUrl")
    private final @Nullable String configurationUrl;

    public Optional<String> getConfigurationUrl() {
        return this.configurationUrl == null ? Optional.empty() : Optional.ofNullable(this.configurationUrl);
    }

    @InputImport(name="extensionProfile")
    private final @Nullable CloudServiceExtensionProfileResponse extensionProfile;

    public Optional<CloudServiceExtensionProfileResponse> getExtensionProfile() {
        return this.extensionProfile == null ? Optional.empty() : Optional.ofNullable(this.extensionProfile);
    }

    @InputImport(name="networkProfile")
    private final @Nullable CloudServiceNetworkProfileResponse networkProfile;

    public Optional<CloudServiceNetworkProfileResponse> getNetworkProfile() {
        return this.networkProfile == null ? Optional.empty() : Optional.ofNullable(this.networkProfile);
    }

    @InputImport(name="osProfile")
    private final @Nullable CloudServiceOsProfileResponse osProfile;

    public Optional<CloudServiceOsProfileResponse> getOsProfile() {
        return this.osProfile == null ? Optional.empty() : Optional.ofNullable(this.osProfile);
    }

    @InputImport(name="packageUrl")
    private final @Nullable String packageUrl;

    public Optional<String> getPackageUrl() {
        return this.packageUrl == null ? Optional.empty() : Optional.ofNullable(this.packageUrl);
    }

    @InputImport(name="provisioningState", required=true)
    private final String provisioningState;

    public String getProvisioningState() {
        return this.provisioningState;
    }

    @InputImport(name="roleProfile")
    private final @Nullable CloudServiceRoleProfileResponse roleProfile;

    public Optional<CloudServiceRoleProfileResponse> getRoleProfile() {
        return this.roleProfile == null ? Optional.empty() : Optional.ofNullable(this.roleProfile);
    }

    @InputImport(name="startCloudService")
    private final @Nullable Boolean startCloudService;

    public Optional<Boolean> getStartCloudService() {
        return this.startCloudService == null ? Optional.empty() : Optional.ofNullable(this.startCloudService);
    }

    @InputImport(name="uniqueId", required=true)
    private final String uniqueId;

    public String getUniqueId() {
        return this.uniqueId;
    }

    @InputImport(name="upgradeMode")
    private final @Nullable String upgradeMode;

    public Optional<String> getUpgradeMode() {
        return this.upgradeMode == null ? Optional.empty() : Optional.ofNullable(this.upgradeMode);
    }

    public CloudServicePropertiesResponse(
        @Nullable Boolean allowModelOverride,
        @Nullable String configuration,
        @Nullable String configurationUrl,
        @Nullable CloudServiceExtensionProfileResponse extensionProfile,
        @Nullable CloudServiceNetworkProfileResponse networkProfile,
        @Nullable CloudServiceOsProfileResponse osProfile,
        @Nullable String packageUrl,
        String provisioningState,
        @Nullable CloudServiceRoleProfileResponse roleProfile,
        @Nullable Boolean startCloudService,
        String uniqueId,
        @Nullable String upgradeMode) {
        this.allowModelOverride = allowModelOverride;
        this.configuration = configuration;
        this.configurationUrl = configurationUrl;
        this.extensionProfile = extensionProfile;
        this.networkProfile = networkProfile;
        this.osProfile = osProfile;
        this.packageUrl = packageUrl;
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.roleProfile = roleProfile;
        this.startCloudService = startCloudService;
        this.uniqueId = Objects.requireNonNull(uniqueId, "expected parameter 'uniqueId' to be non-null");
        this.upgradeMode = upgradeMode;
    }

    private CloudServicePropertiesResponse() {
        this.allowModelOverride = null;
        this.configuration = null;
        this.configurationUrl = null;
        this.extensionProfile = null;
        this.networkProfile = null;
        this.osProfile = null;
        this.packageUrl = null;
        this.provisioningState = null;
        this.roleProfile = null;
        this.startCloudService = null;
        this.uniqueId = null;
        this.upgradeMode = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudServicePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowModelOverride;
        private @Nullable String configuration;
        private @Nullable String configurationUrl;
        private @Nullable CloudServiceExtensionProfileResponse extensionProfile;
        private @Nullable CloudServiceNetworkProfileResponse networkProfile;
        private @Nullable CloudServiceOsProfileResponse osProfile;
        private @Nullable String packageUrl;
        private String provisioningState;
        private @Nullable CloudServiceRoleProfileResponse roleProfile;
        private @Nullable Boolean startCloudService;
        private String uniqueId;
        private @Nullable String upgradeMode;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudServicePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowModelOverride = defaults.allowModelOverride;
    	      this.configuration = defaults.configuration;
    	      this.configurationUrl = defaults.configurationUrl;
    	      this.extensionProfile = defaults.extensionProfile;
    	      this.networkProfile = defaults.networkProfile;
    	      this.osProfile = defaults.osProfile;
    	      this.packageUrl = defaults.packageUrl;
    	      this.provisioningState = defaults.provisioningState;
    	      this.roleProfile = defaults.roleProfile;
    	      this.startCloudService = defaults.startCloudService;
    	      this.uniqueId = defaults.uniqueId;
    	      this.upgradeMode = defaults.upgradeMode;
        }

        public Builder setAllowModelOverride(@Nullable Boolean allowModelOverride) {
            this.allowModelOverride = allowModelOverride;
            return this;
        }

        public Builder setConfiguration(@Nullable String configuration) {
            this.configuration = configuration;
            return this;
        }

        public Builder setConfigurationUrl(@Nullable String configurationUrl) {
            this.configurationUrl = configurationUrl;
            return this;
        }

        public Builder setExtensionProfile(@Nullable CloudServiceExtensionProfileResponse extensionProfile) {
            this.extensionProfile = extensionProfile;
            return this;
        }

        public Builder setNetworkProfile(@Nullable CloudServiceNetworkProfileResponse networkProfile) {
            this.networkProfile = networkProfile;
            return this;
        }

        public Builder setOsProfile(@Nullable CloudServiceOsProfileResponse osProfile) {
            this.osProfile = osProfile;
            return this;
        }

        public Builder setPackageUrl(@Nullable String packageUrl) {
            this.packageUrl = packageUrl;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRoleProfile(@Nullable CloudServiceRoleProfileResponse roleProfile) {
            this.roleProfile = roleProfile;
            return this;
        }

        public Builder setStartCloudService(@Nullable Boolean startCloudService) {
            this.startCloudService = startCloudService;
            return this;
        }

        public Builder setUniqueId(String uniqueId) {
            this.uniqueId = Objects.requireNonNull(uniqueId);
            return this;
        }

        public Builder setUpgradeMode(@Nullable String upgradeMode) {
            this.upgradeMode = upgradeMode;
            return this;
        }

        public CloudServicePropertiesResponse build() {
            return new CloudServicePropertiesResponse(allowModelOverride, configuration, configurationUrl, extensionProfile, networkProfile, osProfile, packageUrl, provisioningState, roleProfile, startCloudService, uniqueId, upgradeMode);
        }
    }
}
