// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.operationalinsights.inputs;

import io.pulumi.azurenative.operationalinsights.enums.ColumnDataTypeHintEnum;
import io.pulumi.azurenative.operationalinsights.enums.ColumnTypeEnum;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ColumnArgs extends io.pulumi.resources.ResourceArgs {

    public static final ColumnArgs Empty = new ColumnArgs();

    @InputImport(name="dataTypeHint")
    private final @Nullable Input<Either<String,ColumnDataTypeHintEnum>> dataTypeHint;

    public Input<Either<String,ColumnDataTypeHintEnum>> getDataTypeHint() {
        return this.dataTypeHint == null ? Input.empty() : this.dataTypeHint;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="displayName")
    private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="type")
    private final @Nullable Input<Either<String,ColumnTypeEnum>> type;

    public Input<Either<String,ColumnTypeEnum>> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public ColumnArgs(
        @Nullable Input<Either<String,ColumnDataTypeHintEnum>> dataTypeHint,
        @Nullable Input<String> description,
        @Nullable Input<String> displayName,
        @Nullable Input<String> name,
        @Nullable Input<Either<String,ColumnTypeEnum>> type) {
        this.dataTypeHint = dataTypeHint;
        this.description = description;
        this.displayName = displayName;
        this.name = name;
        this.type = type;
    }

    private ColumnArgs() {
        this.dataTypeHint = Input.empty();
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.name = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ColumnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,ColumnDataTypeHintEnum>> dataTypeHint;
        private @Nullable Input<String> description;
        private @Nullable Input<String> displayName;
        private @Nullable Input<String> name;
        private @Nullable Input<Either<String,ColumnTypeEnum>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(ColumnArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataTypeHint = defaults.dataTypeHint;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        public Builder setDataTypeHint(@Nullable Input<Either<String,ColumnDataTypeHintEnum>> dataTypeHint) {
            this.dataTypeHint = dataTypeHint;
            return this;
        }

        public Builder setDataTypeHint(@Nullable Either<String,ColumnDataTypeHintEnum> dataTypeHint) {
            this.dataTypeHint = Input.ofNullable(dataTypeHint);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setType(@Nullable Input<Either<String,ColumnTypeEnum>> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable Either<String,ColumnTypeEnum> type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public ColumnArgs build() {
            return new ColumnArgs(dataTypeHint, description, displayName, name, type);
        }
    }
}
