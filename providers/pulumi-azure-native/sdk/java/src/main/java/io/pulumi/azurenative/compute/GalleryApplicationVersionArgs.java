// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.compute.inputs.GalleryApplicationVersionPublishingProfileArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GalleryApplicationVersionArgs extends io.pulumi.resources.ResourceArgs {

    public static final GalleryApplicationVersionArgs Empty = new GalleryApplicationVersionArgs();

    /**
     * The name of the gallery Application Definition in which the Application Version is to be created.
     * 
     */
    @InputImport(name="galleryApplicationName", required=true)
        private final Input<String> galleryApplicationName;

    public Input<String> getGalleryApplicationName() {
        return this.galleryApplicationName;
    }

    /**
     * The name of the gallery Application Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * 
     */
    @InputImport(name="galleryApplicationVersionName")
        private final @Nullable Input<String> galleryApplicationVersionName;

    public Input<String> getGalleryApplicationVersionName() {
        return this.galleryApplicationVersionName == null ? Input.empty() : this.galleryApplicationVersionName;
    }

    /**
     * The name of the Shared Application Gallery in which the Application Definition resides.
     * 
     */
    @InputImport(name="galleryName", required=true)
        private final Input<String> galleryName;

    public Input<String> getGalleryName() {
        return this.galleryName;
    }

    /**
     * Resource location
     * 
     */
    @InputImport(name="location")
        private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The publishing profile of a gallery image version.
     * 
     */
    @InputImport(name="publishingProfile", required=true)
        private final Input<GalleryApplicationVersionPublishingProfileArgs> publishingProfile;

    public Input<GalleryApplicationVersionPublishingProfileArgs> getPublishingProfile() {
        return this.publishingProfile;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
        private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags
     * 
     */
    @InputImport(name="tags")
        private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public GalleryApplicationVersionArgs(
        Input<String> galleryApplicationName,
        @Nullable Input<String> galleryApplicationVersionName,
        Input<String> galleryName,
        @Nullable Input<String> location,
        Input<GalleryApplicationVersionPublishingProfileArgs> publishingProfile,
        Input<String> resourceGroupName,
        @Nullable Input<Map<String,String>> tags) {
        this.galleryApplicationName = Objects.requireNonNull(galleryApplicationName, "expected parameter 'galleryApplicationName' to be non-null");
        this.galleryApplicationVersionName = galleryApplicationVersionName;
        this.galleryName = Objects.requireNonNull(galleryName, "expected parameter 'galleryName' to be non-null");
        this.location = location;
        this.publishingProfile = Objects.requireNonNull(publishingProfile, "expected parameter 'publishingProfile' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private GalleryApplicationVersionArgs() {
        this.galleryApplicationName = Input.empty();
        this.galleryApplicationVersionName = Input.empty();
        this.galleryName = Input.empty();
        this.location = Input.empty();
        this.publishingProfile = Input.empty();
        this.resourceGroupName = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GalleryApplicationVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> galleryApplicationName;
        private @Nullable Input<String> galleryApplicationVersionName;
        private Input<String> galleryName;
        private @Nullable Input<String> location;
        private Input<GalleryApplicationVersionPublishingProfileArgs> publishingProfile;
        private Input<String> resourceGroupName;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GalleryApplicationVersionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.galleryApplicationName = defaults.galleryApplicationName;
    	      this.galleryApplicationVersionName = defaults.galleryApplicationVersionName;
    	      this.galleryName = defaults.galleryName;
    	      this.location = defaults.location;
    	      this.publishingProfile = defaults.publishingProfile;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder setGalleryApplicationName(Input<String> galleryApplicationName) {
            this.galleryApplicationName = Objects.requireNonNull(galleryApplicationName);
            return this;
        }

        public Builder setGalleryApplicationName(String galleryApplicationName) {
            this.galleryApplicationName = Input.of(Objects.requireNonNull(galleryApplicationName));
            return this;
        }

        public Builder setGalleryApplicationVersionName(@Nullable Input<String> galleryApplicationVersionName) {
            this.galleryApplicationVersionName = galleryApplicationVersionName;
            return this;
        }

        public Builder setGalleryApplicationVersionName(@Nullable String galleryApplicationVersionName) {
            this.galleryApplicationVersionName = Input.ofNullable(galleryApplicationVersionName);
            return this;
        }

        public Builder setGalleryName(Input<String> galleryName) {
            this.galleryName = Objects.requireNonNull(galleryName);
            return this;
        }

        public Builder setGalleryName(String galleryName) {
            this.galleryName = Input.of(Objects.requireNonNull(galleryName));
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setPublishingProfile(Input<GalleryApplicationVersionPublishingProfileArgs> publishingProfile) {
            this.publishingProfile = Objects.requireNonNull(publishingProfile);
            return this;
        }

        public Builder setPublishingProfile(GalleryApplicationVersionPublishingProfileArgs publishingProfile) {
            this.publishingProfile = Input.of(Objects.requireNonNull(publishingProfile));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public GalleryApplicationVersionArgs build() {
            return new GalleryApplicationVersionArgs(galleryApplicationName, galleryApplicationVersionName, galleryName, location, publishingProfile, resourceGroupName, tags);
        }
    }
}
