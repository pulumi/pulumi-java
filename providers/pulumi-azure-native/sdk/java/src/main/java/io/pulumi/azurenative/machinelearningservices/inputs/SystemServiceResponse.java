// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * A system service running on a compute.
 * 
 */
public final class SystemServiceResponse extends io.pulumi.resources.InvokeArgs {

    public static final SystemServiceResponse Empty = new SystemServiceResponse();

    /**
     * Public IP address
     * 
     */
    @InputImport(name="publicIpAddress", required=true)
      private final String publicIpAddress;

    public String getPublicIpAddress() {
        return this.publicIpAddress;
    }

    /**
     * The type of this system service.
     * 
     */
    @InputImport(name="systemServiceType", required=true)
      private final String systemServiceType;

    public String getSystemServiceType() {
        return this.systemServiceType;
    }

    /**
     * The version for this type.
     * 
     */
    @InputImport(name="version", required=true)
      private final String version;

    public String getVersion() {
        return this.version;
    }

    public SystemServiceResponse(
        String publicIpAddress,
        String systemServiceType,
        String version) {
        this.publicIpAddress = Objects.requireNonNull(publicIpAddress, "expected parameter 'publicIpAddress' to be non-null");
        this.systemServiceType = Objects.requireNonNull(systemServiceType, "expected parameter 'systemServiceType' to be non-null");
        this.version = Objects.requireNonNull(version, "expected parameter 'version' to be non-null");
    }

    private SystemServiceResponse() {
        this.publicIpAddress = null;
        this.systemServiceType = null;
        this.version = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SystemServiceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String publicIpAddress;
        private String systemServiceType;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(SystemServiceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.publicIpAddress = defaults.publicIpAddress;
    	      this.systemServiceType = defaults.systemServiceType;
    	      this.version = defaults.version;
        }

        public Builder setPublicIpAddress(String publicIpAddress) {
            this.publicIpAddress = Objects.requireNonNull(publicIpAddress);
            return this;
        }

        public Builder setSystemServiceType(String systemServiceType) {
            this.systemServiceType = Objects.requireNonNull(systemServiceType);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public SystemServiceResponse build() {
            return new SystemServiceResponse(publicIpAddress, systemServiceType, version);
        }
    }
}
