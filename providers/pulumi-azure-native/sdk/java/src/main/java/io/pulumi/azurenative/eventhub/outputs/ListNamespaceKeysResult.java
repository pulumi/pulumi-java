// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.eventhub.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class ListNamespaceKeysResult {
    /**
     * Primary connection string of the alias if GEO DR is enabled
     * 
     */
    private final String aliasPrimaryConnectionString;
    /**
     * Secondary  connection string of the alias if GEO DR is enabled
     * 
     */
    private final String aliasSecondaryConnectionString;
    /**
     * A string that describes the AuthorizationRule.
     * 
     */
    private final String keyName;
    /**
     * Primary connection string of the created namespace AuthorizationRule.
     * 
     */
    private final String primaryConnectionString;
    /**
     * A base64-encoded 256-bit primary key for signing and validating the SAS token.
     * 
     */
    private final String primaryKey;
    /**
     * Secondary connection string of the created namespace AuthorizationRule.
     * 
     */
    private final String secondaryConnectionString;
    /**
     * A base64-encoded 256-bit primary key for signing and validating the SAS token.
     * 
     */
    private final String secondaryKey;

    @OutputCustomType.Constructor
    private ListNamespaceKeysResult(
        @OutputCustomType.Parameter("aliasPrimaryConnectionString") String aliasPrimaryConnectionString,
        @OutputCustomType.Parameter("aliasSecondaryConnectionString") String aliasSecondaryConnectionString,
        @OutputCustomType.Parameter("keyName") String keyName,
        @OutputCustomType.Parameter("primaryConnectionString") String primaryConnectionString,
        @OutputCustomType.Parameter("primaryKey") String primaryKey,
        @OutputCustomType.Parameter("secondaryConnectionString") String secondaryConnectionString,
        @OutputCustomType.Parameter("secondaryKey") String secondaryKey) {
        this.aliasPrimaryConnectionString = aliasPrimaryConnectionString;
        this.aliasSecondaryConnectionString = aliasSecondaryConnectionString;
        this.keyName = keyName;
        this.primaryConnectionString = primaryConnectionString;
        this.primaryKey = primaryKey;
        this.secondaryConnectionString = secondaryConnectionString;
        this.secondaryKey = secondaryKey;
    }

    /**
     * Primary connection string of the alias if GEO DR is enabled
     * 
    */
    public String getAliasPrimaryConnectionString() {
        return this.aliasPrimaryConnectionString;
    }
    /**
     * Secondary  connection string of the alias if GEO DR is enabled
     * 
    */
    public String getAliasSecondaryConnectionString() {
        return this.aliasSecondaryConnectionString;
    }
    /**
     * A string that describes the AuthorizationRule.
     * 
    */
    public String getKeyName() {
        return this.keyName;
    }
    /**
     * Primary connection string of the created namespace AuthorizationRule.
     * 
    */
    public String getPrimaryConnectionString() {
        return this.primaryConnectionString;
    }
    /**
     * A base64-encoded 256-bit primary key for signing and validating the SAS token.
     * 
    */
    public String getPrimaryKey() {
        return this.primaryKey;
    }
    /**
     * Secondary connection string of the created namespace AuthorizationRule.
     * 
    */
    public String getSecondaryConnectionString() {
        return this.secondaryConnectionString;
    }
    /**
     * A base64-encoded 256-bit primary key for signing and validating the SAS token.
     * 
    */
    public String getSecondaryKey() {
        return this.secondaryKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListNamespaceKeysResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String aliasPrimaryConnectionString;
        private String aliasSecondaryConnectionString;
        private String keyName;
        private String primaryConnectionString;
        private String primaryKey;
        private String secondaryConnectionString;
        private String secondaryKey;

        public Builder() {
    	      // Empty
        }

        public Builder(ListNamespaceKeysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliasPrimaryConnectionString = defaults.aliasPrimaryConnectionString;
    	      this.aliasSecondaryConnectionString = defaults.aliasSecondaryConnectionString;
    	      this.keyName = defaults.keyName;
    	      this.primaryConnectionString = defaults.primaryConnectionString;
    	      this.primaryKey = defaults.primaryKey;
    	      this.secondaryConnectionString = defaults.secondaryConnectionString;
    	      this.secondaryKey = defaults.secondaryKey;
        }

        public Builder aliasPrimaryConnectionString(String aliasPrimaryConnectionString) {
            this.aliasPrimaryConnectionString = Objects.requireNonNull(aliasPrimaryConnectionString);
            return this;
        }

        public Builder aliasSecondaryConnectionString(String aliasSecondaryConnectionString) {
            this.aliasSecondaryConnectionString = Objects.requireNonNull(aliasSecondaryConnectionString);
            return this;
        }

        public Builder keyName(String keyName) {
            this.keyName = Objects.requireNonNull(keyName);
            return this;
        }

        public Builder primaryConnectionString(String primaryConnectionString) {
            this.primaryConnectionString = Objects.requireNonNull(primaryConnectionString);
            return this;
        }

        public Builder primaryKey(String primaryKey) {
            this.primaryKey = Objects.requireNonNull(primaryKey);
            return this;
        }

        public Builder secondaryConnectionString(String secondaryConnectionString) {
            this.secondaryConnectionString = Objects.requireNonNull(secondaryConnectionString);
            return this;
        }

        public Builder secondaryKey(String secondaryKey) {
            this.secondaryKey = Objects.requireNonNull(secondaryKey);
            return this;
        }
        public ListNamespaceKeysResult build() {
            return new ListNamespaceKeysResult(aliasPrimaryConnectionString, aliasSecondaryConnectionString, keyName, primaryConnectionString, primaryKey, secondaryConnectionString, secondaryKey);
        }
    }
}
