// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents configuration of dataset used in a labeling job.
 * 
 */
public final class LabelingDatasetConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final LabelingDatasetConfigurationArgs Empty = new LabelingDatasetConfigurationArgs();

    /**
     * Name of the data asset to perform labeling.
     * 
     */
    @Import(name="assetName", required=true)
      private final Output<String> assetName;

    public Output<String> getAssetName() {
        return this.assetName;
    }

    /**
     * AML dataset version.
     * 
     */
    @Import(name="datasetVersion", required=true)
      private final Output<String> datasetVersion;

    public Output<String> getDatasetVersion() {
        return this.datasetVersion;
    }

    /**
     * Indicates whether to enable incremental dataset refresh.
     * 
     */
    @Import(name="enableIncrementalDatasetRefresh")
      private final @Nullable Output<Boolean> enableIncrementalDatasetRefresh;

    public Output<Boolean> getEnableIncrementalDatasetRefresh() {
        return this.enableIncrementalDatasetRefresh == null ? Output.empty() : this.enableIncrementalDatasetRefresh;
    }

    public LabelingDatasetConfigurationArgs(
        Output<String> assetName,
        Output<String> datasetVersion,
        @Nullable Output<Boolean> enableIncrementalDatasetRefresh) {
        this.assetName = Objects.requireNonNull(assetName, "expected parameter 'assetName' to be non-null");
        this.datasetVersion = Objects.requireNonNull(datasetVersion, "expected parameter 'datasetVersion' to be non-null");
        this.enableIncrementalDatasetRefresh = enableIncrementalDatasetRefresh;
    }

    private LabelingDatasetConfigurationArgs() {
        this.assetName = Output.empty();
        this.datasetVersion = Output.empty();
        this.enableIncrementalDatasetRefresh = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LabelingDatasetConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> assetName;
        private Output<String> datasetVersion;
        private @Nullable Output<Boolean> enableIncrementalDatasetRefresh;

        public Builder() {
    	      // Empty
        }

        public Builder(LabelingDatasetConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetName = defaults.assetName;
    	      this.datasetVersion = defaults.datasetVersion;
    	      this.enableIncrementalDatasetRefresh = defaults.enableIncrementalDatasetRefresh;
        }

        public Builder assetName(Output<String> assetName) {
            this.assetName = Objects.requireNonNull(assetName);
            return this;
        }

        public Builder assetName(String assetName) {
            this.assetName = Output.of(Objects.requireNonNull(assetName));
            return this;
        }

        public Builder datasetVersion(Output<String> datasetVersion) {
            this.datasetVersion = Objects.requireNonNull(datasetVersion);
            return this;
        }

        public Builder datasetVersion(String datasetVersion) {
            this.datasetVersion = Output.of(Objects.requireNonNull(datasetVersion));
            return this;
        }

        public Builder enableIncrementalDatasetRefresh(@Nullable Output<Boolean> enableIncrementalDatasetRefresh) {
            this.enableIncrementalDatasetRefresh = enableIncrementalDatasetRefresh;
            return this;
        }

        public Builder enableIncrementalDatasetRefresh(@Nullable Boolean enableIncrementalDatasetRefresh) {
            this.enableIncrementalDatasetRefresh = Output.ofNullable(enableIncrementalDatasetRefresh);
            return this;
        }
        public LabelingDatasetConfigurationArgs build() {
            return new LabelingDatasetConfigurationArgs(assetName, datasetVersion, enableIncrementalDatasetRefresh);
        }
    }
}
