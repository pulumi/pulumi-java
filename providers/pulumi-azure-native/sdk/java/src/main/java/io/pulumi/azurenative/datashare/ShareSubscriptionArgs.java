// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datashare;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ShareSubscriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ShareSubscriptionArgs Empty = new ShareSubscriptionArgs();

    /**
     * The name of the share account.
     * 
     */
    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    /**
     * The expiration date of the share subscription.
     * 
     */
    @InputImport(name="expirationDate")
    private final @Nullable Input<String> expirationDate;

    public Input<String> getExpirationDate() {
        return this.expirationDate == null ? Input.empty() : this.expirationDate;
    }

    /**
     * The invitation id.
     * 
     */
    @InputImport(name="invitationId", required=true)
    private final Input<String> invitationId;

    public Input<String> getInvitationId() {
        return this.invitationId;
    }

    /**
     * The resource group name.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the shareSubscription.
     * 
     */
    @InputImport(name="shareSubscriptionName")
    private final @Nullable Input<String> shareSubscriptionName;

    public Input<String> getShareSubscriptionName() {
        return this.shareSubscriptionName == null ? Input.empty() : this.shareSubscriptionName;
    }

    /**
     * Source share location.
     * 
     */
    @InputImport(name="sourceShareLocation", required=true)
    private final Input<String> sourceShareLocation;

    public Input<String> getSourceShareLocation() {
        return this.sourceShareLocation;
    }

    public ShareSubscriptionArgs(
        Input<String> accountName,
        @Nullable Input<String> expirationDate,
        Input<String> invitationId,
        Input<String> resourceGroupName,
        @Nullable Input<String> shareSubscriptionName,
        Input<String> sourceShareLocation) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.expirationDate = expirationDate;
        this.invitationId = Objects.requireNonNull(invitationId, "expected parameter 'invitationId' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.shareSubscriptionName = shareSubscriptionName;
        this.sourceShareLocation = Objects.requireNonNull(sourceShareLocation, "expected parameter 'sourceShareLocation' to be non-null");
    }

    private ShareSubscriptionArgs() {
        this.accountName = Input.empty();
        this.expirationDate = Input.empty();
        this.invitationId = Input.empty();
        this.resourceGroupName = Input.empty();
        this.shareSubscriptionName = Input.empty();
        this.sourceShareLocation = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ShareSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<String> expirationDate;
        private Input<String> invitationId;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> shareSubscriptionName;
        private Input<String> sourceShareLocation;

        public Builder() {
    	      // Empty
        }

        public Builder(ShareSubscriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.expirationDate = defaults.expirationDate;
    	      this.invitationId = defaults.invitationId;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.shareSubscriptionName = defaults.shareSubscriptionName;
    	      this.sourceShareLocation = defaults.sourceShareLocation;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setExpirationDate(@Nullable Input<String> expirationDate) {
            this.expirationDate = expirationDate;
            return this;
        }

        public Builder setExpirationDate(@Nullable String expirationDate) {
            this.expirationDate = Input.ofNullable(expirationDate);
            return this;
        }

        public Builder setInvitationId(Input<String> invitationId) {
            this.invitationId = Objects.requireNonNull(invitationId);
            return this;
        }

        public Builder setInvitationId(String invitationId) {
            this.invitationId = Input.of(Objects.requireNonNull(invitationId));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setShareSubscriptionName(@Nullable Input<String> shareSubscriptionName) {
            this.shareSubscriptionName = shareSubscriptionName;
            return this;
        }

        public Builder setShareSubscriptionName(@Nullable String shareSubscriptionName) {
            this.shareSubscriptionName = Input.ofNullable(shareSubscriptionName);
            return this;
        }

        public Builder setSourceShareLocation(Input<String> sourceShareLocation) {
            this.sourceShareLocation = Objects.requireNonNull(sourceShareLocation);
            return this;
        }

        public Builder setSourceShareLocation(String sourceShareLocation) {
            this.sourceShareLocation = Input.of(Objects.requireNonNull(sourceShareLocation));
            return this;
        }

        public ShareSubscriptionArgs build() {
            return new ShareSubscriptionArgs(accountName, expirationDate, invitationId, resourceGroupName, shareSubscriptionName, sourceShareLocation);
        }
    }
}
