// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.network.WebApplicationFirewallPolicyArgs;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayResponse;
import io.pulumi.azurenative.network.outputs.ManagedRulesDefinitionResponse;
import io.pulumi.azurenative.network.outputs.PolicySettingsResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.azurenative.network.outputs.WebApplicationFirewallCustomRuleResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Defines web application firewall policy.
 * API Version: 2020-11-01.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Creates or updates a WAF policy within a resource group
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var webApplicationFirewallPolicy = new AzureNative.Network.WebApplicationFirewallPolicy("webApplicationFirewallPolicy", new AzureNative.Network.WebApplicationFirewallPolicyArgs
 *         {
 *             CustomRules = 
 *             {
 *                 new AzureNative.Network.Inputs.WebApplicationFirewallCustomRuleArgs
 *                 {
 *                     Action = "Block",
 *                     MatchConditions = 
 *                     {
 *                         new AzureNative.Network.Inputs.MatchConditionArgs
 *                         {
 *                             MatchValues = 
 *                             {
 *                                 "192.168.1.0/24",
 *                                 "10.0.0.0/24",
 *                             },
 *                             MatchVariables = 
 *                             {
 *                                 new AzureNative.Network.Inputs.MatchVariableArgs
 *                                 {
 *                                     VariableName = "RemoteAddr",
 *                                 },
 *                             },
 *                             Operator = "IPMatch",
 *                         },
 *                     },
 *                     Name = "Rule1",
 *                     Priority = 1,
 *                     RuleType = "MatchRule",
 *                 },
 *                 new AzureNative.Network.Inputs.WebApplicationFirewallCustomRuleArgs
 *                 {
 *                     Action = "Block",
 *                     MatchConditions = 
 *                     {
 *                         new AzureNative.Network.Inputs.MatchConditionArgs
 *                         {
 *                             MatchValues = 
 *                             {
 *                                 "192.168.1.0/24",
 *                             },
 *                             MatchVariables = 
 *                             {
 *                                 new AzureNative.Network.Inputs.MatchVariableArgs
 *                                 {
 *                                     VariableName = "RemoteAddr",
 *                                 },
 *                             },
 *                             Operator = "IPMatch",
 *                         },
 *                         new AzureNative.Network.Inputs.MatchConditionArgs
 *                         {
 *                             MatchValues = 
 *                             {
 *                                 "Windows",
 *                             },
 *                             MatchVariables = 
 *                             {
 *                                 new AzureNative.Network.Inputs.MatchVariableArgs
 *                                 {
 *                                     Selector = "UserAgent",
 *                                     VariableName = "RequestHeaders",
 *                                 },
 *                             },
 *                             Operator = "Contains",
 *                         },
 *                     },
 *                     Name = "Rule2",
 *                     Priority = 2,
 *                     RuleType = "MatchRule",
 *                 },
 *             },
 *             Location = "WestUs",
 *             ManagedRules = new AzureNative.Network.Inputs.ManagedRulesDefinitionArgs
 *             {
 *                 ManagedRuleSets = 
 *                 {
 *                     new AzureNative.Network.Inputs.ManagedRuleSetArgs
 *                     {
 *                         RuleSetType = "OWASP",
 *                         RuleSetVersion = "3.0",
 *                     },
 *                 },
 *             },
 *             PolicyName = "Policy1",
 *             ResourceGroupName = "rg1",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	network "github.com/pulumi/pulumi-azure-native/sdk/go/azure/network"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := network.NewWebApplicationFirewallPolicy(ctx, "webApplicationFirewallPolicy", &network.WebApplicationFirewallPolicyArgs{
 * 			CustomRules: []network.WebApplicationFirewallCustomRuleArgs{
 * 				&network.WebApplicationFirewallCustomRuleArgs{
 * 					Action: pulumi.String("Block"),
 * 					MatchConditions: []network.MatchConditionArgs{
 * 						&network.MatchConditionArgs{
 * 							MatchValues: pulumi.StringArray{
 * 								pulumi.String("192.168.1.0/24"),
 * 								pulumi.String("10.0.0.0/24"),
 * 							},
 * 							MatchVariables: []network.MatchVariableArgs{
 * 								&network.MatchVariableArgs{
 * 									VariableName: pulumi.String("RemoteAddr"),
 * 								},
 * 							},
 * 							Operator: pulumi.String("IPMatch"),
 * 						},
 * 					},
 * 					Name:     pulumi.String("Rule1"),
 * 					Priority: pulumi.Int(1),
 * 					RuleType: pulumi.String("MatchRule"),
 * 				},
 * 				&network.WebApplicationFirewallCustomRuleArgs{
 * 					Action: pulumi.String("Block"),
 * 					MatchConditions: []network.MatchConditionArgs{
 * 						&network.MatchConditionArgs{
 * 							MatchValues: pulumi.StringArray{
 * 								pulumi.String("192.168.1.0/24"),
 * 							},
 * 							MatchVariables: []network.MatchVariableArgs{
 * 								&network.MatchVariableArgs{
 * 									VariableName: pulumi.String("RemoteAddr"),
 * 								},
 * 							},
 * 							Operator: pulumi.String("IPMatch"),
 * 						},
 * 						&network.MatchConditionArgs{
 * 							MatchValues: pulumi.StringArray{
 * 								pulumi.String("Windows"),
 * 							},
 * 							MatchVariables: []network.MatchVariableArgs{
 * 								&network.MatchVariableArgs{
 * 									Selector:     pulumi.String("UserAgent"),
 * 									VariableName: pulumi.String("RequestHeaders"),
 * 								},
 * 							},
 * 							Operator: pulumi.String("Contains"),
 * 						},
 * 					},
 * 					Name:     pulumi.String("Rule2"),
 * 					Priority: pulumi.Int(2),
 * 					RuleType: pulumi.String("MatchRule"),
 * 				},
 * 			},
 * 			Location: pulumi.String("WestUs"),
 * 			ManagedRules: &network.ManagedRulesDefinitionArgs{
 * 				ManagedRuleSets: network.ManagedRuleSetArray{
 * 					&network.ManagedRuleSetArgs{
 * 						RuleSetType:    pulumi.String("OWASP"),
 * 						RuleSetVersion: pulumi.String("3.0"),
 * 					},
 * 				},
 * 			},
 * 			PolicyName:        pulumi.String("Policy1"),
 * 			ResourceGroupName: pulumi.String("rg1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const webApplicationFirewallPolicy = new azure_native.network.WebApplicationFirewallPolicy("webApplicationFirewallPolicy", {
 *     customRules: [
 *         {
 *             action: "Block",
 *             matchConditions: [{
 *                 matchValues: [
 *                     "192.168.1.0/24",
 *                     "10.0.0.0/24",
 *                 ],
 *                 matchVariables: [{
 *                     variableName: "RemoteAddr",
 *                 }],
 *                 operator: "IPMatch",
 *             }],
 *             name: "Rule1",
 *             priority: 1,
 *             ruleType: "MatchRule",
 *         },
 *         {
 *             action: "Block",
 *             matchConditions: [
 *                 {
 *                     matchValues: ["192.168.1.0/24"],
 *                     matchVariables: [{
 *                         variableName: "RemoteAddr",
 *                     }],
 *                     operator: "IPMatch",
 *                 },
 *                 {
 *                     matchValues: ["Windows"],
 *                     matchVariables: [{
 *                         selector: "UserAgent",
 *                         variableName: "RequestHeaders",
 *                     }],
 *                     operator: "Contains",
 *                 },
 *             ],
 *             name: "Rule2",
 *             priority: 2,
 *             ruleType: "MatchRule",
 *         },
 *     ],
 *     location: "WestUs",
 *     managedRules: {
 *         managedRuleSets: [{
 *             ruleSetType: "OWASP",
 *             ruleSetVersion: "3.0",
 *         }],
 *     },
 *     policyName: "Policy1",
 *     resourceGroupName: "rg1",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * web_application_firewall_policy = azure_native.network.WebApplicationFirewallPolicy("webApplicationFirewallPolicy",
 *     custom_rules=[
 *         azure_native.network.WebApplicationFirewallCustomRuleArgs(
 *             action="Block",
 *             match_conditions=[azure_native.network.MatchConditionArgs(
 *                 match_values=[
 *                     "192.168.1.0/24",
 *                     "10.0.0.0/24",
 *                 ],
 *                 match_variables=[azure_native.network.MatchVariableArgs(
 *                     variable_name="RemoteAddr",
 *                 )],
 *                 operator="IPMatch",
 *             )],
 *             name="Rule1",
 *             priority=1,
 *             rule_type="MatchRule",
 *         ),
 *         azure_native.network.WebApplicationFirewallCustomRuleArgs(
 *             action="Block",
 *             match_conditions=[
 *                 azure_native.network.MatchConditionArgs(
 *                     match_values=["192.168.1.0/24"],
 *                     match_variables=[azure_native.network.MatchVariableArgs(
 *                         variable_name="RemoteAddr",
 *                     )],
 *                     operator="IPMatch",
 *                 ),
 *                 azure_native.network.MatchConditionArgs(
 *                     match_values=["Windows"],
 *                     match_variables=[azure_native.network.MatchVariableArgs(
 *                         selector="UserAgent",
 *                         variable_name="RequestHeaders",
 *                     )],
 *                     operator="Contains",
 *                 ),
 *             ],
 *             name="Rule2",
 *             priority=2,
 *             rule_type="MatchRule",
 *         ),
 *     ],
 *     location="WestUs",
 *     managed_rules=azure_native.network.ManagedRulesDefinitionArgs(
 *         managed_rule_sets=[azure_native.network.ManagedRuleSetArgs(
 *             rule_set_type="OWASP",
 *             rule_set_version="3.0",
 *         )],
 *     ),
 *     policy_name="Policy1",
 *     resource_group_name="rg1")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:WebApplicationFirewallPolicy Policy1 /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/Policy1 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:WebApplicationFirewallPolicy")
public class WebApplicationFirewallPolicy extends io.pulumi.resources.CustomResource {
    /**
     * A collection of references to application gateways.
     */
    @Export(name="applicationGateways", type=List.class, parameters={ApplicationGatewayResponse.class})
    private Output<List<ApplicationGatewayResponse>> applicationGateways;

    /**
     * @return A collection of references to application gateways.
     */
    public Output<List<ApplicationGatewayResponse>> getApplicationGateways() {
        return this.applicationGateways;
    }
    /**
     * The custom rules inside the policy.
     */
    @Export(name="customRules", type=List.class, parameters={WebApplicationFirewallCustomRuleResponse.class})
    private Output</* @Nullable */ List<WebApplicationFirewallCustomRuleResponse>> customRules;

    /**
     * @return The custom rules inside the policy.
     */
    public Output</* @Nullable */ List<WebApplicationFirewallCustomRuleResponse>> getCustomRules() {
        return this.customRules;
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     */
    public Output<String> getEtag() {
        return this.etag;
    }
    /**
     * A collection of references to application gateway http listeners.
     */
    @Export(name="httpListeners", type=List.class, parameters={SubResourceResponse.class})
    private Output<List<SubResourceResponse>> httpListeners;

    /**
     * @return A collection of references to application gateway http listeners.
     */
    public Output<List<SubResourceResponse>> getHttpListeners() {
        return this.httpListeners;
    }
    /**
     * Resource location.
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * Describes the managedRules structure.
     */
    @Export(name="managedRules", type=ManagedRulesDefinitionResponse.class, parameters={})
    private Output<ManagedRulesDefinitionResponse> managedRules;

    /**
     * @return Describes the managedRules structure.
     */
    public Output<ManagedRulesDefinitionResponse> getManagedRules() {
        return this.managedRules;
    }
    /**
     * Resource name.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * A collection of references to application gateway path rules.
     */
    @Export(name="pathBasedRules", type=List.class, parameters={SubResourceResponse.class})
    private Output<List<SubResourceResponse>> pathBasedRules;

    /**
     * @return A collection of references to application gateway path rules.
     */
    public Output<List<SubResourceResponse>> getPathBasedRules() {
        return this.pathBasedRules;
    }
    /**
     * The PolicySettings for policy.
     */
    @Export(name="policySettings", type=PolicySettingsResponse.class, parameters={})
    private Output</* @Nullable */ PolicySettingsResponse> policySettings;

    /**
     * @return The PolicySettings for policy.
     */
    public Output</* @Nullable */ PolicySettingsResponse> getPolicySettings() {
        return this.policySettings;
    }
    /**
     * The provisioning state of the web application firewall policy resource.
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the web application firewall policy resource.
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource status of the policy.
     */
    @Export(name="resourceState", type=String.class, parameters={})
    private Output<String> resourceState;

    /**
     * @return Resource status of the policy.
     */
    public Output<String> getResourceState() {
        return this.resourceState;
    }
    /**
     * Resource tags.
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Resource type.
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WebApplicationFirewallPolicy(String name) {
        this(name, WebApplicationFirewallPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WebApplicationFirewallPolicy(String name, WebApplicationFirewallPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WebApplicationFirewallPolicy(String name, WebApplicationFirewallPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:WebApplicationFirewallPolicy", name, args == null ? WebApplicationFirewallPolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private WebApplicationFirewallPolicy(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:WebApplicationFirewallPolicy", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20181201:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190201:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190401:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190601:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190701:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190801:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190901:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191101:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191201:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200301:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200401:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200501:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200601:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200701:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200801:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20201101:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210201:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210301:WebApplicationFirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210501:WebApplicationFirewallPolicy").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WebApplicationFirewallPolicy get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new WebApplicationFirewallPolicy(name, id, options);
    }
}
