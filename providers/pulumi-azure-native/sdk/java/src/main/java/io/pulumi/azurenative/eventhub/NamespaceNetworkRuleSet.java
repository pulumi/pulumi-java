// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.eventhub;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.eventhub.NamespaceNetworkRuleSetArgs;
import io.pulumi.azurenative.eventhub.outputs.NWRuleSetIpRulesResponse;
import io.pulumi.azurenative.eventhub.outputs.NWRuleSetVirtualNetworkRulesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Description of NetworkRuleSet resource.
API Version: 2017-04-01.

{{% examples %}}
## Example Usage
{{% example %}}
### NameSpaceNetworkRuleSetCreate
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var namespaceNetworkRuleSet = new AzureNative.EventHub.NamespaceNetworkRuleSet("namespaceNetworkRuleSet", new AzureNative.EventHub.NamespaceNetworkRuleSetArgs
        {
            DefaultAction = "Deny",
            IpRules = 
            {
                new AzureNative.EventHub.Inputs.NWRuleSetIpRulesArgs
                {
                    Action = "Allow",
                    IpMask = "1.1.1.1",
                },
                new AzureNative.EventHub.Inputs.NWRuleSetIpRulesArgs
                {
                    Action = "Allow",
                    IpMask = "1.1.1.2",
                },
                new AzureNative.EventHub.Inputs.NWRuleSetIpRulesArgs
                {
                    Action = "Allow",
                    IpMask = "1.1.1.3",
                },
                new AzureNative.EventHub.Inputs.NWRuleSetIpRulesArgs
                {
                    Action = "Allow",
                    IpMask = "1.1.1.4",
                },
                new AzureNative.EventHub.Inputs.NWRuleSetIpRulesArgs
                {
                    Action = "Allow",
                    IpMask = "1.1.1.5",
                },
            },
            NamespaceName = "sdk-Namespace-6019",
            ResourceGroupName = "ResourceGroup",
            VirtualNetworkRules = 
            {
                new AzureNative.EventHub.Inputs.NWRuleSetVirtualNetworkRulesArgs
                {
                    IgnoreMissingVnetServiceEndpoint = true,
                    Subnet = new AzureNative.EventHub.Inputs.SubnetArgs
                    {
                        Id = "/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet2",
                    },
                },
                new AzureNative.EventHub.Inputs.NWRuleSetVirtualNetworkRulesArgs
                {
                    IgnoreMissingVnetServiceEndpoint = false,
                    Subnet = new AzureNative.EventHub.Inputs.SubnetArgs
                    {
                        Id = "/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet3",
                    },
                },
                new AzureNative.EventHub.Inputs.NWRuleSetVirtualNetworkRulesArgs
                {
                    IgnoreMissingVnetServiceEndpoint = false,
                    Subnet = new AzureNative.EventHub.Inputs.SubnetArgs
                    {
                        Id = "/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet6",
                    },
                },
            },
        });
    }

}

```

```go
package main

import (
	eventhub "github.com/pulumi/pulumi-azure-native/sdk/go/azure/eventhub"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := eventhub.NewNamespaceNetworkRuleSet(ctx, "namespaceNetworkRuleSet", &eventhub.NamespaceNetworkRuleSetArgs{
			DefaultAction: pulumi.String("Deny"),
			IpRules: []eventhub.NWRuleSetIpRulesArgs{
				&eventhub.NWRuleSetIpRulesArgs{
					Action: pulumi.String("Allow"),
					IpMask: pulumi.String("1.1.1.1"),
				},
				&eventhub.NWRuleSetIpRulesArgs{
					Action: pulumi.String("Allow"),
					IpMask: pulumi.String("1.1.1.2"),
				},
				&eventhub.NWRuleSetIpRulesArgs{
					Action: pulumi.String("Allow"),
					IpMask: pulumi.String("1.1.1.3"),
				},
				&eventhub.NWRuleSetIpRulesArgs{
					Action: pulumi.String("Allow"),
					IpMask: pulumi.String("1.1.1.4"),
				},
				&eventhub.NWRuleSetIpRulesArgs{
					Action: pulumi.String("Allow"),
					IpMask: pulumi.String("1.1.1.5"),
				},
			},
			NamespaceName:     pulumi.String("sdk-Namespace-6019"),
			ResourceGroupName: pulumi.String("ResourceGroup"),
			VirtualNetworkRules: []eventhub.NWRuleSetVirtualNetworkRulesArgs{
				&eventhub.NWRuleSetVirtualNetworkRulesArgs{
					IgnoreMissingVnetServiceEndpoint: pulumi.Bool(true),
					Subnet: &eventhub.SubnetArgs{
						Id: pulumi.String("/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet2"),
					},
				},
				&eventhub.NWRuleSetVirtualNetworkRulesArgs{
					IgnoreMissingVnetServiceEndpoint: pulumi.Bool(false),
					Subnet: &eventhub.SubnetArgs{
						Id: pulumi.String("/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet3"),
					},
				},
				&eventhub.NWRuleSetVirtualNetworkRulesArgs{
					IgnoreMissingVnetServiceEndpoint: pulumi.Bool(false),
					Subnet: &eventhub.SubnetArgs{
						Id: pulumi.String("/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet6"),
					},
				},
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const namespaceNetworkRuleSet = new azure_native.eventhub.NamespaceNetworkRuleSet("namespaceNetworkRuleSet", {
    defaultAction: "Deny",
    ipRules: [
        {
            action: "Allow",
            ipMask: "1.1.1.1",
        },
        {
            action: "Allow",
            ipMask: "1.1.1.2",
        },
        {
            action: "Allow",
            ipMask: "1.1.1.3",
        },
        {
            action: "Allow",
            ipMask: "1.1.1.4",
        },
        {
            action: "Allow",
            ipMask: "1.1.1.5",
        },
    ],
    namespaceName: "sdk-Namespace-6019",
    resourceGroupName: "ResourceGroup",
    virtualNetworkRules: [
        {
            ignoreMissingVnetServiceEndpoint: true,
            subnet: {
                id: "/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet2",
            },
        },
        {
            ignoreMissingVnetServiceEndpoint: false,
            subnet: {
                id: "/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet3",
            },
        },
        {
            ignoreMissingVnetServiceEndpoint: false,
            subnet: {
                id: "/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet6",
            },
        },
    ],
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

namespace_network_rule_set = azure_native.eventhub.NamespaceNetworkRuleSet("namespaceNetworkRuleSet",
    default_action="Deny",
    ip_rules=[
        azure_native.eventhub.NWRuleSetIpRulesArgs(
            action="Allow",
            ip_mask="1.1.1.1",
        ),
        azure_native.eventhub.NWRuleSetIpRulesArgs(
            action="Allow",
            ip_mask="1.1.1.2",
        ),
        azure_native.eventhub.NWRuleSetIpRulesArgs(
            action="Allow",
            ip_mask="1.1.1.3",
        ),
        azure_native.eventhub.NWRuleSetIpRulesArgs(
            action="Allow",
            ip_mask="1.1.1.4",
        ),
        azure_native.eventhub.NWRuleSetIpRulesArgs(
            action="Allow",
            ip_mask="1.1.1.5",
        ),
    ],
    namespace_name="sdk-Namespace-6019",
    resource_group_name="ResourceGroup",
    virtual_network_rules=[
        azure_native.eventhub.NWRuleSetVirtualNetworkRulesArgs(
            ignore_missing_vnet_service_endpoint=True,
            subnet=azure_native.eventhub.SubnetArgs(
                id="/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet2",
            ),
        ),
        azure_native.eventhub.NWRuleSetVirtualNetworkRulesArgs(
            ignore_missing_vnet_service_endpoint=False,
            subnet=azure_native.eventhub.SubnetArgs(
                id="/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet3",
            ),
        ),
        azure_native.eventhub.NWRuleSetVirtualNetworkRulesArgs(
            ignore_missing_vnet_service_endpoint=False,
            subnet=azure_native.eventhub.SubnetArgs(
                id="/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet6",
            ),
        ),
    ])

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:eventhub:NamespaceNetworkRuleSet default /subscriptions/854d368f-1828-428f-8f3c-f2affa9b2f7d/resourceGroups/resourcegroupid/providers/Microsoft.EventHub/namespaces/sdk-Namespace-9659/networkrulesets/default 
```

 */
@ResourceType(type="azure-native:eventhub:NamespaceNetworkRuleSet")
public class NamespaceNetworkRuleSet extends io.pulumi.resources.CustomResource {
    /**
     * Default Action for Network Rule Set
     */
    @OutputExport(name="defaultAction", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultAction;

    /**
     * @return Default Action for Network Rule Set
     */
    public Output</* @Nullable */ String> getDefaultAction() {
        return this.defaultAction;
    }
    /**
     * List of IpRules
     */
    @OutputExport(name="ipRules", type=List.class, parameters={NWRuleSetIpRulesResponse.class})
    private Output</* @Nullable */ List<NWRuleSetIpRulesResponse>> ipRules;

    /**
     * @return List of IpRules
     */
    public Output</* @Nullable */ List<NWRuleSetIpRulesResponse>> getIpRules() {
        return this.ipRules;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * List VirtualNetwork Rules
     */
    @OutputExport(name="virtualNetworkRules", type=List.class, parameters={NWRuleSetVirtualNetworkRulesResponse.class})
    private Output</* @Nullable */ List<NWRuleSetVirtualNetworkRulesResponse>> virtualNetworkRules;

    /**
     * @return List VirtualNetwork Rules
     */
    public Output</* @Nullable */ List<NWRuleSetVirtualNetworkRulesResponse>> getVirtualNetworkRules() {
        return this.virtualNetworkRules;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NamespaceNetworkRuleSet(String name, NamespaceNetworkRuleSetArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:eventhub:NamespaceNetworkRuleSet", name, args == null ? NamespaceNetworkRuleSetArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private NamespaceNetworkRuleSet(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:eventhub:NamespaceNetworkRuleSet", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:eventhub/v20170401:NamespaceNetworkRuleSet").build()),
                Input.of(Alias.builder().setType("azure-native:eventhub/v20180101preview:NamespaceNetworkRuleSet").build()),
                Input.of(Alias.builder().setType("azure-native:eventhub/v20210101preview:NamespaceNetworkRuleSet").build()),
                Input.of(Alias.builder().setType("azure-native:eventhub/v20210601preview:NamespaceNetworkRuleSet").build()),
                Input.of(Alias.builder().setType("azure-native:eventhub/v20211101:NamespaceNetworkRuleSet").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NamespaceNetworkRuleSet get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new NamespaceNetworkRuleSet(name, id, options);
    }
}
