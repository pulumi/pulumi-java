// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.labservices.inputs;

import io.pulumi.azurenative.labservices.enums.ManagedLabVmSize;
import io.pulumi.azurenative.labservices.inputs.ReferenceVmArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents resource specific settings
 * 
 */
public final class ResourceSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourceSettingsArgs Empty = new ResourceSettingsArgs();

    /**
     * The resource id of the gallery image used for creating the virtual machine
     * 
     */
    @InputImport(name="galleryImageResourceId")
    private final @Nullable Input<String> galleryImageResourceId;

    public Input<String> getGalleryImageResourceId() {
        return this.galleryImageResourceId == null ? Input.empty() : this.galleryImageResourceId;
    }

    /**
     * Details specific to Reference Vm
     * 
     */
    @InputImport(name="referenceVm", required=true)
    private final Input<ReferenceVmArgs> referenceVm;

    public Input<ReferenceVmArgs> getReferenceVm() {
        return this.referenceVm;
    }

    /**
     * The size of the virtual machine
     * 
     */
    @InputImport(name="size")
    private final @Nullable Input<Either<String,ManagedLabVmSize>> size;

    public Input<Either<String,ManagedLabVmSize>> getSize() {
        return this.size == null ? Input.empty() : this.size;
    }

    public ResourceSettingsArgs(
        @Nullable Input<String> galleryImageResourceId,
        Input<ReferenceVmArgs> referenceVm,
        @Nullable Input<Either<String,ManagedLabVmSize>> size) {
        this.galleryImageResourceId = galleryImageResourceId;
        this.referenceVm = Objects.requireNonNull(referenceVm, "expected parameter 'referenceVm' to be non-null");
        this.size = size;
    }

    private ResourceSettingsArgs() {
        this.galleryImageResourceId = Input.empty();
        this.referenceVm = Input.empty();
        this.size = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> galleryImageResourceId;
        private Input<ReferenceVmArgs> referenceVm;
        private @Nullable Input<Either<String,ManagedLabVmSize>> size;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.galleryImageResourceId = defaults.galleryImageResourceId;
    	      this.referenceVm = defaults.referenceVm;
    	      this.size = defaults.size;
        }

        public Builder setGalleryImageResourceId(@Nullable Input<String> galleryImageResourceId) {
            this.galleryImageResourceId = galleryImageResourceId;
            return this;
        }

        public Builder setGalleryImageResourceId(@Nullable String galleryImageResourceId) {
            this.galleryImageResourceId = Input.ofNullable(galleryImageResourceId);
            return this;
        }

        public Builder setReferenceVm(Input<ReferenceVmArgs> referenceVm) {
            this.referenceVm = Objects.requireNonNull(referenceVm);
            return this;
        }

        public Builder setReferenceVm(ReferenceVmArgs referenceVm) {
            this.referenceVm = Input.of(Objects.requireNonNull(referenceVm));
            return this;
        }

        public Builder setSize(@Nullable Input<Either<String,ManagedLabVmSize>> size) {
            this.size = size;
            return this;
        }

        public Builder setSize(@Nullable Either<String,ManagedLabVmSize> size) {
            this.size = Input.ofNullable(size);
            return this;
        }

        public ResourceSettingsArgs build() {
            return new ResourceSettingsArgs(galleryImageResourceId, referenceVm, size);
        }
    }
}
