// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databox.outputs;

import io.pulumi.azurenative.databox.outputs.TransferConfigurationResponseTransferAllDetails;
import io.pulumi.azurenative.databox.outputs.TransferConfigurationResponseTransferFilterDetails;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TransferConfigurationResponse {
    private final @Nullable TransferConfigurationResponseTransferAllDetails transferAllDetails;
    private final String transferConfigurationType;
    private final @Nullable TransferConfigurationResponseTransferFilterDetails transferFilterDetails;

    @OutputCustomType.Constructor({"transferAllDetails","transferConfigurationType","transferFilterDetails"})
    private TransferConfigurationResponse(
        @Nullable TransferConfigurationResponseTransferAllDetails transferAllDetails,
        String transferConfigurationType,
        @Nullable TransferConfigurationResponseTransferFilterDetails transferFilterDetails) {
        this.transferAllDetails = transferAllDetails;
        this.transferConfigurationType = Objects.requireNonNull(transferConfigurationType);
        this.transferFilterDetails = transferFilterDetails;
    }

    public Optional<TransferConfigurationResponseTransferAllDetails> getTransferAllDetails() {
        return Optional.ofNullable(this.transferAllDetails);
    }
    public String getTransferConfigurationType() {
        return this.transferConfigurationType;
    }
    public Optional<TransferConfigurationResponseTransferFilterDetails> getTransferFilterDetails() {
        return Optional.ofNullable(this.transferFilterDetails);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable TransferConfigurationResponseTransferAllDetails transferAllDetails;
        private String transferConfigurationType;
        private @Nullable TransferConfigurationResponseTransferFilterDetails transferFilterDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(TransferConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.transferAllDetails = defaults.transferAllDetails;
    	      this.transferConfigurationType = defaults.transferConfigurationType;
    	      this.transferFilterDetails = defaults.transferFilterDetails;
        }

        public Builder setTransferAllDetails(@Nullable TransferConfigurationResponseTransferAllDetails transferAllDetails) {
            this.transferAllDetails = transferAllDetails;
            return this;
        }

        public Builder setTransferConfigurationType(String transferConfigurationType) {
            this.transferConfigurationType = Objects.requireNonNull(transferConfigurationType);
            return this;
        }

        public Builder setTransferFilterDetails(@Nullable TransferConfigurationResponseTransferFilterDetails transferFilterDetails) {
            this.transferFilterDetails = transferFilterDetails;
            return this;
        }

        public TransferConfigurationResponse build() {
            return new TransferConfigurationResponse(transferAllDetails, transferConfigurationType, transferFilterDetails);
        }
    }
}
