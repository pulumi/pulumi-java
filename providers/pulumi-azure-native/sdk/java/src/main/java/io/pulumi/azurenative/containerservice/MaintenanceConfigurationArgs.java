// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerservice;

import io.pulumi.azurenative.containerservice.inputs.TimeInWeekArgs;
import io.pulumi.azurenative.containerservice.inputs.TimeSpanArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MaintenanceConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final MaintenanceConfigurationArgs Empty = new MaintenanceConfigurationArgs();

    /**
     * The name of the maintenance configuration.
     * 
     */
    @Import(name="configName")
      private final @Nullable Output<String> configName;

    public Output<String> getConfigName() {
        return this.configName == null ? Codegen.empty() : this.configName;
    }

    /**
     * Time slots on which upgrade is not allowed.
     * 
     */
    @Import(name="notAllowedTime")
      private final @Nullable Output<List<TimeSpanArgs>> notAllowedTime;

    public Output<List<TimeSpanArgs>> getNotAllowedTime() {
        return this.notAllowedTime == null ? Codegen.empty() : this.notAllowedTime;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the managed cluster resource.
     * 
     */
    @Import(name="resourceName", required=true)
      private final Output<String> resourceName;

    public Output<String> getPropResourceName() {
        return this.resourceName;
    }

    /**
     * Weekday time slots allowed to upgrade.
     * 
     */
    @Import(name="timeInWeek")
      private final @Nullable Output<List<TimeInWeekArgs>> timeInWeek;

    public Output<List<TimeInWeekArgs>> getTimeInWeek() {
        return this.timeInWeek == null ? Codegen.empty() : this.timeInWeek;
    }

    public MaintenanceConfigurationArgs(
        @Nullable Output<String> configName,
        @Nullable Output<List<TimeSpanArgs>> notAllowedTime,
        Output<String> resourceGroupName,
        Output<String> resourceName,
        @Nullable Output<List<TimeInWeekArgs>> timeInWeek) {
        this.configName = configName;
        this.notAllowedTime = notAllowedTime;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
        this.timeInWeek = timeInWeek;
    }

    private MaintenanceConfigurationArgs() {
        this.configName = Codegen.empty();
        this.notAllowedTime = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.resourceName = Codegen.empty();
        this.timeInWeek = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MaintenanceConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> configName;
        private @Nullable Output<List<TimeSpanArgs>> notAllowedTime;
        private Output<String> resourceGroupName;
        private Output<String> resourceName;
        private @Nullable Output<List<TimeInWeekArgs>> timeInWeek;

        public Builder() {
    	      // Empty
        }

        public Builder(MaintenanceConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configName = defaults.configName;
    	      this.notAllowedTime = defaults.notAllowedTime;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.timeInWeek = defaults.timeInWeek;
        }

        public Builder configName(@Nullable Output<String> configName) {
            this.configName = configName;
            return this;
        }
        public Builder configName(@Nullable String configName) {
            this.configName = Codegen.ofNullable(configName);
            return this;
        }
        public Builder notAllowedTime(@Nullable Output<List<TimeSpanArgs>> notAllowedTime) {
            this.notAllowedTime = notAllowedTime;
            return this;
        }
        public Builder notAllowedTime(@Nullable List<TimeSpanArgs> notAllowedTime) {
            this.notAllowedTime = Codegen.ofNullable(notAllowedTime);
            return this;
        }
        public Builder notAllowedTime(TimeSpanArgs... notAllowedTime) {
            return notAllowedTime(List.of(notAllowedTime));
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourceName(Output<String> resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Output.of(Objects.requireNonNull(resourceName));
            return this;
        }
        public Builder timeInWeek(@Nullable Output<List<TimeInWeekArgs>> timeInWeek) {
            this.timeInWeek = timeInWeek;
            return this;
        }
        public Builder timeInWeek(@Nullable List<TimeInWeekArgs> timeInWeek) {
            this.timeInWeek = Codegen.ofNullable(timeInWeek);
            return this;
        }
        public Builder timeInWeek(TimeInWeekArgs... timeInWeek) {
            return timeInWeek(List.of(timeInWeek));
        }        public MaintenanceConfigurationArgs build() {
            return new MaintenanceConfigurationArgs(configName, notAllowedTime, resourceGroupName, resourceName, timeInWeek);
        }
    }
}
