// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.outputs;

import io.pulumi.azurenative.servicefabric.outputs.ApplicationTypeVersionsCleanupPolicyResponse;
import io.pulumi.azurenative.servicefabric.outputs.AzureActiveDirectoryResponse;
import io.pulumi.azurenative.servicefabric.outputs.CertificateDescriptionResponse;
import io.pulumi.azurenative.servicefabric.outputs.ClientCertificateCommonNameResponse;
import io.pulumi.azurenative.servicefabric.outputs.ClientCertificateThumbprintResponse;
import io.pulumi.azurenative.servicefabric.outputs.ClusterUpgradePolicyResponse;
import io.pulumi.azurenative.servicefabric.outputs.ClusterVersionDetailsResponse;
import io.pulumi.azurenative.servicefabric.outputs.DiagnosticsStorageAccountConfigResponse;
import io.pulumi.azurenative.servicefabric.outputs.NodeTypeDescriptionResponse;
import io.pulumi.azurenative.servicefabric.outputs.ServerCertificateCommonNamesResponse;
import io.pulumi.azurenative.servicefabric.outputs.SettingsSectionDescriptionResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetClusterResult {
    private final @Nullable List<String> addOnFeatures;
    private final @Nullable ApplicationTypeVersionsCleanupPolicyResponse applicationTypeVersionsCleanupPolicy;
    private final List<ClusterVersionDetailsResponse> availableClusterVersions;
    private final @Nullable AzureActiveDirectoryResponse azureActiveDirectory;
    private final @Nullable CertificateDescriptionResponse certificate;
    private final @Nullable ServerCertificateCommonNamesResponse certificateCommonNames;
    private final @Nullable List<ClientCertificateCommonNameResponse> clientCertificateCommonNames;
    private final @Nullable List<ClientCertificateThumbprintResponse> clientCertificateThumbprints;
    private final @Nullable String clusterCodeVersion;
    private final String clusterEndpoint;
    private final String clusterId;
    private final String clusterState;
    private final @Nullable DiagnosticsStorageAccountConfigResponse diagnosticsStorageAccountConfig;
    private final String etag;
    private final @Nullable Boolean eventStoreServiceEnabled;
    private final @Nullable List<SettingsSectionDescriptionResponse> fabricSettings;
    private final String id;
    private final String location;
    private final String managementEndpoint;
    private final String name;
    private final List<NodeTypeDescriptionResponse> nodeTypes;
    private final String provisioningState;
    private final @Nullable String reliabilityLevel;
    private final @Nullable CertificateDescriptionResponse reverseProxyCertificate;
    private final @Nullable ServerCertificateCommonNamesResponse reverseProxyCertificateCommonNames;
    private final @Nullable Map<String,String> tags;
    private final String type;
    private final @Nullable ClusterUpgradePolicyResponse upgradeDescription;
    private final @Nullable String upgradeMode;
    private final @Nullable String vmImage;

    @OutputCustomType.Constructor({"addOnFeatures","applicationTypeVersionsCleanupPolicy","availableClusterVersions","azureActiveDirectory","certificate","certificateCommonNames","clientCertificateCommonNames","clientCertificateThumbprints","clusterCodeVersion","clusterEndpoint","clusterId","clusterState","diagnosticsStorageAccountConfig","etag","eventStoreServiceEnabled","fabricSettings","id","location","managementEndpoint","name","nodeTypes","provisioningState","reliabilityLevel","reverseProxyCertificate","reverseProxyCertificateCommonNames","tags","type","upgradeDescription","upgradeMode","vmImage"})
    private GetClusterResult(
        @Nullable List<String> addOnFeatures,
        @Nullable ApplicationTypeVersionsCleanupPolicyResponse applicationTypeVersionsCleanupPolicy,
        List<ClusterVersionDetailsResponse> availableClusterVersions,
        @Nullable AzureActiveDirectoryResponse azureActiveDirectory,
        @Nullable CertificateDescriptionResponse certificate,
        @Nullable ServerCertificateCommonNamesResponse certificateCommonNames,
        @Nullable List<ClientCertificateCommonNameResponse> clientCertificateCommonNames,
        @Nullable List<ClientCertificateThumbprintResponse> clientCertificateThumbprints,
        @Nullable String clusterCodeVersion,
        String clusterEndpoint,
        String clusterId,
        String clusterState,
        @Nullable DiagnosticsStorageAccountConfigResponse diagnosticsStorageAccountConfig,
        String etag,
        @Nullable Boolean eventStoreServiceEnabled,
        @Nullable List<SettingsSectionDescriptionResponse> fabricSettings,
        String id,
        String location,
        String managementEndpoint,
        String name,
        List<NodeTypeDescriptionResponse> nodeTypes,
        String provisioningState,
        @Nullable String reliabilityLevel,
        @Nullable CertificateDescriptionResponse reverseProxyCertificate,
        @Nullable ServerCertificateCommonNamesResponse reverseProxyCertificateCommonNames,
        @Nullable Map<String,String> tags,
        String type,
        @Nullable ClusterUpgradePolicyResponse upgradeDescription,
        @Nullable String upgradeMode,
        @Nullable String vmImage) {
        this.addOnFeatures = addOnFeatures;
        this.applicationTypeVersionsCleanupPolicy = applicationTypeVersionsCleanupPolicy;
        this.availableClusterVersions = Objects.requireNonNull(availableClusterVersions);
        this.azureActiveDirectory = azureActiveDirectory;
        this.certificate = certificate;
        this.certificateCommonNames = certificateCommonNames;
        this.clientCertificateCommonNames = clientCertificateCommonNames;
        this.clientCertificateThumbprints = clientCertificateThumbprints;
        this.clusterCodeVersion = clusterCodeVersion;
        this.clusterEndpoint = Objects.requireNonNull(clusterEndpoint);
        this.clusterId = Objects.requireNonNull(clusterId);
        this.clusterState = Objects.requireNonNull(clusterState);
        this.diagnosticsStorageAccountConfig = diagnosticsStorageAccountConfig;
        this.etag = Objects.requireNonNull(etag);
        this.eventStoreServiceEnabled = eventStoreServiceEnabled;
        this.fabricSettings = fabricSettings;
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.managementEndpoint = Objects.requireNonNull(managementEndpoint);
        this.name = Objects.requireNonNull(name);
        this.nodeTypes = Objects.requireNonNull(nodeTypes);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.reliabilityLevel = reliabilityLevel;
        this.reverseProxyCertificate = reverseProxyCertificate;
        this.reverseProxyCertificateCommonNames = reverseProxyCertificateCommonNames;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.upgradeDescription = upgradeDescription;
        this.upgradeMode = upgradeMode;
        this.vmImage = vmImage;
    }

    public List<String> getAddOnFeatures() {
        return this.addOnFeatures == null ? List.of() : this.addOnFeatures;
    }
    public Optional<ApplicationTypeVersionsCleanupPolicyResponse> getApplicationTypeVersionsCleanupPolicy() {
        return Optional.ofNullable(this.applicationTypeVersionsCleanupPolicy);
    }
    public List<ClusterVersionDetailsResponse> getAvailableClusterVersions() {
        return this.availableClusterVersions;
    }
    public Optional<AzureActiveDirectoryResponse> getAzureActiveDirectory() {
        return Optional.ofNullable(this.azureActiveDirectory);
    }
    public Optional<CertificateDescriptionResponse> getCertificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<ServerCertificateCommonNamesResponse> getCertificateCommonNames() {
        return Optional.ofNullable(this.certificateCommonNames);
    }
    public List<ClientCertificateCommonNameResponse> getClientCertificateCommonNames() {
        return this.clientCertificateCommonNames == null ? List.of() : this.clientCertificateCommonNames;
    }
    public List<ClientCertificateThumbprintResponse> getClientCertificateThumbprints() {
        return this.clientCertificateThumbprints == null ? List.of() : this.clientCertificateThumbprints;
    }
    public Optional<String> getClusterCodeVersion() {
        return Optional.ofNullable(this.clusterCodeVersion);
    }
    public String getClusterEndpoint() {
        return this.clusterEndpoint;
    }
    public String getClusterId() {
        return this.clusterId;
    }
    public String getClusterState() {
        return this.clusterState;
    }
    public Optional<DiagnosticsStorageAccountConfigResponse> getDiagnosticsStorageAccountConfig() {
        return Optional.ofNullable(this.diagnosticsStorageAccountConfig);
    }
    public String getEtag() {
        return this.etag;
    }
    public Optional<Boolean> getEventStoreServiceEnabled() {
        return Optional.ofNullable(this.eventStoreServiceEnabled);
    }
    public List<SettingsSectionDescriptionResponse> getFabricSettings() {
        return this.fabricSettings == null ? List.of() : this.fabricSettings;
    }
    public String getId() {
        return this.id;
    }
    public String getLocation() {
        return this.location;
    }
    public String getManagementEndpoint() {
        return this.managementEndpoint;
    }
    public String getName() {
        return this.name;
    }
    public List<NodeTypeDescriptionResponse> getNodeTypes() {
        return this.nodeTypes;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<String> getReliabilityLevel() {
        return Optional.ofNullable(this.reliabilityLevel);
    }
    public Optional<CertificateDescriptionResponse> getReverseProxyCertificate() {
        return Optional.ofNullable(this.reverseProxyCertificate);
    }
    public Optional<ServerCertificateCommonNamesResponse> getReverseProxyCertificateCommonNames() {
        return Optional.ofNullable(this.reverseProxyCertificateCommonNames);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }
    public Optional<ClusterUpgradePolicyResponse> getUpgradeDescription() {
        return Optional.ofNullable(this.upgradeDescription);
    }
    public Optional<String> getUpgradeMode() {
        return Optional.ofNullable(this.upgradeMode);
    }
    public Optional<String> getVmImage() {
        return Optional.ofNullable(this.vmImage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> addOnFeatures;
        private @Nullable ApplicationTypeVersionsCleanupPolicyResponse applicationTypeVersionsCleanupPolicy;
        private List<ClusterVersionDetailsResponse> availableClusterVersions;
        private @Nullable AzureActiveDirectoryResponse azureActiveDirectory;
        private @Nullable CertificateDescriptionResponse certificate;
        private @Nullable ServerCertificateCommonNamesResponse certificateCommonNames;
        private @Nullable List<ClientCertificateCommonNameResponse> clientCertificateCommonNames;
        private @Nullable List<ClientCertificateThumbprintResponse> clientCertificateThumbprints;
        private @Nullable String clusterCodeVersion;
        private String clusterEndpoint;
        private String clusterId;
        private String clusterState;
        private @Nullable DiagnosticsStorageAccountConfigResponse diagnosticsStorageAccountConfig;
        private String etag;
        private @Nullable Boolean eventStoreServiceEnabled;
        private @Nullable List<SettingsSectionDescriptionResponse> fabricSettings;
        private String id;
        private String location;
        private String managementEndpoint;
        private String name;
        private List<NodeTypeDescriptionResponse> nodeTypes;
        private String provisioningState;
        private @Nullable String reliabilityLevel;
        private @Nullable CertificateDescriptionResponse reverseProxyCertificate;
        private @Nullable ServerCertificateCommonNamesResponse reverseProxyCertificateCommonNames;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable ClusterUpgradePolicyResponse upgradeDescription;
        private @Nullable String upgradeMode;
        private @Nullable String vmImage;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addOnFeatures = defaults.addOnFeatures;
    	      this.applicationTypeVersionsCleanupPolicy = defaults.applicationTypeVersionsCleanupPolicy;
    	      this.availableClusterVersions = defaults.availableClusterVersions;
    	      this.azureActiveDirectory = defaults.azureActiveDirectory;
    	      this.certificate = defaults.certificate;
    	      this.certificateCommonNames = defaults.certificateCommonNames;
    	      this.clientCertificateCommonNames = defaults.clientCertificateCommonNames;
    	      this.clientCertificateThumbprints = defaults.clientCertificateThumbprints;
    	      this.clusterCodeVersion = defaults.clusterCodeVersion;
    	      this.clusterEndpoint = defaults.clusterEndpoint;
    	      this.clusterId = defaults.clusterId;
    	      this.clusterState = defaults.clusterState;
    	      this.diagnosticsStorageAccountConfig = defaults.diagnosticsStorageAccountConfig;
    	      this.etag = defaults.etag;
    	      this.eventStoreServiceEnabled = defaults.eventStoreServiceEnabled;
    	      this.fabricSettings = defaults.fabricSettings;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.managementEndpoint = defaults.managementEndpoint;
    	      this.name = defaults.name;
    	      this.nodeTypes = defaults.nodeTypes;
    	      this.provisioningState = defaults.provisioningState;
    	      this.reliabilityLevel = defaults.reliabilityLevel;
    	      this.reverseProxyCertificate = defaults.reverseProxyCertificate;
    	      this.reverseProxyCertificateCommonNames = defaults.reverseProxyCertificateCommonNames;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.upgradeDescription = defaults.upgradeDescription;
    	      this.upgradeMode = defaults.upgradeMode;
    	      this.vmImage = defaults.vmImage;
        }

        public Builder setAddOnFeatures(@Nullable List<String> addOnFeatures) {
            this.addOnFeatures = addOnFeatures;
            return this;
        }

        public Builder setApplicationTypeVersionsCleanupPolicy(@Nullable ApplicationTypeVersionsCleanupPolicyResponse applicationTypeVersionsCleanupPolicy) {
            this.applicationTypeVersionsCleanupPolicy = applicationTypeVersionsCleanupPolicy;
            return this;
        }

        public Builder setAvailableClusterVersions(List<ClusterVersionDetailsResponse> availableClusterVersions) {
            this.availableClusterVersions = Objects.requireNonNull(availableClusterVersions);
            return this;
        }

        public Builder setAzureActiveDirectory(@Nullable AzureActiveDirectoryResponse azureActiveDirectory) {
            this.azureActiveDirectory = azureActiveDirectory;
            return this;
        }

        public Builder setCertificate(@Nullable CertificateDescriptionResponse certificate) {
            this.certificate = certificate;
            return this;
        }

        public Builder setCertificateCommonNames(@Nullable ServerCertificateCommonNamesResponse certificateCommonNames) {
            this.certificateCommonNames = certificateCommonNames;
            return this;
        }

        public Builder setClientCertificateCommonNames(@Nullable List<ClientCertificateCommonNameResponse> clientCertificateCommonNames) {
            this.clientCertificateCommonNames = clientCertificateCommonNames;
            return this;
        }

        public Builder setClientCertificateThumbprints(@Nullable List<ClientCertificateThumbprintResponse> clientCertificateThumbprints) {
            this.clientCertificateThumbprints = clientCertificateThumbprints;
            return this;
        }

        public Builder setClusterCodeVersion(@Nullable String clusterCodeVersion) {
            this.clusterCodeVersion = clusterCodeVersion;
            return this;
        }

        public Builder setClusterEndpoint(String clusterEndpoint) {
            this.clusterEndpoint = Objects.requireNonNull(clusterEndpoint);
            return this;
        }

        public Builder setClusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }

        public Builder setClusterState(String clusterState) {
            this.clusterState = Objects.requireNonNull(clusterState);
            return this;
        }

        public Builder setDiagnosticsStorageAccountConfig(@Nullable DiagnosticsStorageAccountConfigResponse diagnosticsStorageAccountConfig) {
            this.diagnosticsStorageAccountConfig = diagnosticsStorageAccountConfig;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setEventStoreServiceEnabled(@Nullable Boolean eventStoreServiceEnabled) {
            this.eventStoreServiceEnabled = eventStoreServiceEnabled;
            return this;
        }

        public Builder setFabricSettings(@Nullable List<SettingsSectionDescriptionResponse> fabricSettings) {
            this.fabricSettings = fabricSettings;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setManagementEndpoint(String managementEndpoint) {
            this.managementEndpoint = Objects.requireNonNull(managementEndpoint);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNodeTypes(List<NodeTypeDescriptionResponse> nodeTypes) {
            this.nodeTypes = Objects.requireNonNull(nodeTypes);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setReliabilityLevel(@Nullable String reliabilityLevel) {
            this.reliabilityLevel = reliabilityLevel;
            return this;
        }

        public Builder setReverseProxyCertificate(@Nullable CertificateDescriptionResponse reverseProxyCertificate) {
            this.reverseProxyCertificate = reverseProxyCertificate;
            return this;
        }

        public Builder setReverseProxyCertificateCommonNames(@Nullable ServerCertificateCommonNamesResponse reverseProxyCertificateCommonNames) {
            this.reverseProxyCertificateCommonNames = reverseProxyCertificateCommonNames;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUpgradeDescription(@Nullable ClusterUpgradePolicyResponse upgradeDescription) {
            this.upgradeDescription = upgradeDescription;
            return this;
        }

        public Builder setUpgradeMode(@Nullable String upgradeMode) {
            this.upgradeMode = upgradeMode;
            return this;
        }

        public Builder setVmImage(@Nullable String vmImage) {
            this.vmImage = vmImage;
            return this;
        }

        public GetClusterResult build() {
            return new GetClusterResult(addOnFeatures, applicationTypeVersionsCleanupPolicy, availableClusterVersions, azureActiveDirectory, certificate, certificateCommonNames, clientCertificateCommonNames, clientCertificateThumbprints, clusterCodeVersion, clusterEndpoint, clusterId, clusterState, diagnosticsStorageAccountConfig, etag, eventStoreServiceEnabled, fabricSettings, id, location, managementEndpoint, name, nodeTypes, provisioningState, reliabilityLevel, reverseProxyCertificate, reverseProxyCertificateCommonNames, tags, type, upgradeDescription, upgradeMode, vmImage);
        }
    }
}
