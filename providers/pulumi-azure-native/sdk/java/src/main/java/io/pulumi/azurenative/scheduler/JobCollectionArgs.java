// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.scheduler;

import io.pulumi.azurenative.scheduler.inputs.JobCollectionPropertiesArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobCollectionArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobCollectionArgs Empty = new JobCollectionArgs();

    /**
     * The job collection name.
     * 
     */
    @Import(name="jobCollectionName")
      private final @Nullable Output<String> jobCollectionName;

    public Output<String> getJobCollectionName() {
        return this.jobCollectionName == null ? Output.empty() : this.jobCollectionName;
    }

    /**
     * Gets or sets the storage account location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Gets or sets the job collection resource name.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Gets or sets the job collection properties.
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<JobCollectionPropertiesArgs> properties;

    public Output<JobCollectionPropertiesArgs> getProperties() {
        return this.properties == null ? Output.empty() : this.properties;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public JobCollectionArgs(
        @Nullable Output<String> jobCollectionName,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<JobCollectionPropertiesArgs> properties,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.jobCollectionName = jobCollectionName;
        this.location = location;
        this.name = name;
        this.properties = properties;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private JobCollectionArgs() {
        this.jobCollectionName = Output.empty();
        this.location = Output.empty();
        this.name = Output.empty();
        this.properties = Output.empty();
        this.resourceGroupName = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobCollectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> jobCollectionName;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<JobCollectionPropertiesArgs> properties;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(JobCollectionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jobCollectionName = defaults.jobCollectionName;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder jobCollectionName(@Nullable Output<String> jobCollectionName) {
            this.jobCollectionName = jobCollectionName;
            return this;
        }

        public Builder jobCollectionName(@Nullable String jobCollectionName) {
            this.jobCollectionName = Output.ofNullable(jobCollectionName);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder properties(@Nullable Output<JobCollectionPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }

        public Builder properties(@Nullable JobCollectionPropertiesArgs properties) {
            this.properties = Output.ofNullable(properties);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public JobCollectionArgs build() {
            return new JobCollectionArgs(jobCollectionName, location, name, properties, resourceGroupName, tags);
        }
    }
}
