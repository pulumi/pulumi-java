// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hybridnetwork.inputs;

import io.pulumi.azurenative.hybridnetwork.inputs.SshConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies the Linux operating system settings on the virtual machine.
 * 
 */
public final class LinuxConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final LinuxConfigurationArgs Empty = new LinuxConfigurationArgs();

    /**
     * Specifies the ssh key configuration for a Linux OS.
     * 
     */
    @Import(name="ssh")
      private final @Nullable Output<SshConfigurationArgs> ssh;

    public Output<SshConfigurationArgs> ssh() {
        return this.ssh == null ? Codegen.empty() : this.ssh;
    }

    public LinuxConfigurationArgs(@Nullable Output<SshConfigurationArgs> ssh) {
        this.ssh = ssh;
    }

    private LinuxConfigurationArgs() {
        this.ssh = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinuxConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SshConfigurationArgs> ssh;

        public Builder() {
    	      // Empty
        }

        public Builder(LinuxConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ssh = defaults.ssh;
        }

        public Builder ssh(@Nullable Output<SshConfigurationArgs> ssh) {
            this.ssh = ssh;
            return this;
        }
        public Builder ssh(@Nullable SshConfigurationArgs ssh) {
            this.ssh = Codegen.ofNullable(ssh);
            return this;
        }        public LinuxConfigurationArgs build() {
            return new LinuxConfigurationArgs(ssh);
        }
    }
}
