// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.blueprint.inputs;

import io.pulumi.azurenative.blueprint.inputs.KeyVaultReferenceResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Reference to a Key Vault secret.
 * 
 */
public final class SecretValueReferenceResponse extends io.pulumi.resources.InvokeArgs {

    public static final SecretValueReferenceResponse Empty = new SecretValueReferenceResponse();

    /**
     * Specifies the reference to a given Azure Key Vault.
     * 
     */
    @InputImport(name="keyVault", required=true)
      private final KeyVaultReferenceResponse keyVault;

    public KeyVaultReferenceResponse getKeyVault() {
        return this.keyVault;
    }

    /**
     * Name of the secret.
     * 
     */
    @InputImport(name="secretName", required=true)
      private final String secretName;

    public String getSecretName() {
        return this.secretName;
    }

    /**
     * The version of the secret to use. If left blank, the latest version of the secret is used.
     * 
     */
    @InputImport(name="secretVersion")
      private final @Nullable String secretVersion;

    public Optional<String> getSecretVersion() {
        return this.secretVersion == null ? Optional.empty() : Optional.ofNullable(this.secretVersion);
    }

    public SecretValueReferenceResponse(
        KeyVaultReferenceResponse keyVault,
        String secretName,
        @Nullable String secretVersion) {
        this.keyVault = Objects.requireNonNull(keyVault, "expected parameter 'keyVault' to be non-null");
        this.secretName = Objects.requireNonNull(secretName, "expected parameter 'secretName' to be non-null");
        this.secretVersion = secretVersion;
    }

    private SecretValueReferenceResponse() {
        this.keyVault = null;
        this.secretName = null;
        this.secretVersion = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretValueReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyVaultReferenceResponse keyVault;
        private String secretName;
        private @Nullable String secretVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(SecretValueReferenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyVault = defaults.keyVault;
    	      this.secretName = defaults.secretName;
    	      this.secretVersion = defaults.secretVersion;
        }

        public Builder setKeyVault(KeyVaultReferenceResponse keyVault) {
            this.keyVault = Objects.requireNonNull(keyVault);
            return this;
        }

        public Builder setSecretName(String secretName) {
            this.secretName = Objects.requireNonNull(secretName);
            return this;
        }

        public Builder setSecretVersion(@Nullable String secretVersion) {
            this.secretVersion = secretVersion;
            return this;
        }
        public SecretValueReferenceResponse build() {
            return new SecretValueReferenceResponse(keyVault, secretName, secretVersion);
        }
    }
}
