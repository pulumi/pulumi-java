// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.servicefabric.ManagedClusterArgs;
import io.pulumi.azurenative.servicefabric.outputs.AzureActiveDirectoryResponse;
import io.pulumi.azurenative.servicefabric.outputs.ClientCertificateResponse;
import io.pulumi.azurenative.servicefabric.outputs.LoadBalancingRuleResponse;
import io.pulumi.azurenative.servicefabric.outputs.SettingsSectionDescriptionResponse;
import io.pulumi.azurenative.servicefabric.outputs.SkuResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:servicefabric:ManagedCluster")
public class ManagedCluster extends io.pulumi.resources.CustomResource {
    @OutputExport(name="addonFeatures", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> addonFeatures;

    public Output</* @Nullable */ List<String>> getAddonFeatures() {
        return this.addonFeatures;
    }
    @OutputExport(name="adminPassword", type=String.class, parameters={})
    private Output</* @Nullable */ String> adminPassword;

    public Output</* @Nullable */ String> getAdminPassword() {
        return this.adminPassword;
    }
    @OutputExport(name="adminUserName", type=String.class, parameters={})
    private Output<String> adminUserName;

    public Output<String> getAdminUserName() {
        return this.adminUserName;
    }
    @OutputExport(name="azureActiveDirectory", type=AzureActiveDirectoryResponse.class, parameters={})
    private Output</* @Nullable */ AzureActiveDirectoryResponse> azureActiveDirectory;

    public Output</* @Nullable */ AzureActiveDirectoryResponse> getAzureActiveDirectory() {
        return this.azureActiveDirectory;
    }
    @OutputExport(name="clientConnectionPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> clientConnectionPort;

    public Output</* @Nullable */ Integer> getClientConnectionPort() {
        return this.clientConnectionPort;
    }
    @OutputExport(name="clients", type=List.class, parameters={ClientCertificateResponse.class})
    private Output</* @Nullable */ List<ClientCertificateResponse>> clients;

    public Output</* @Nullable */ List<ClientCertificateResponse>> getClients() {
        return this.clients;
    }
    @OutputExport(name="clusterCertificateThumbprint", type=String.class, parameters={})
    private Output<String> clusterCertificateThumbprint;

    public Output<String> getClusterCertificateThumbprint() {
        return this.clusterCertificateThumbprint;
    }
    @OutputExport(name="clusterCodeVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> clusterCodeVersion;

    public Output</* @Nullable */ String> getClusterCodeVersion() {
        return this.clusterCodeVersion;
    }
    @OutputExport(name="clusterId", type=String.class, parameters={})
    private Output<String> clusterId;

    public Output<String> getClusterId() {
        return this.clusterId;
    }
    @OutputExport(name="clusterState", type=String.class, parameters={})
    private Output<String> clusterState;

    public Output<String> getClusterState() {
        return this.clusterState;
    }
    @OutputExport(name="dnsName", type=String.class, parameters={})
    private Output<String> dnsName;

    public Output<String> getDnsName() {
        return this.dnsName;
    }
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    public Output<String> getEtag() {
        return this.etag;
    }
    @OutputExport(name="fabricSettings", type=List.class, parameters={SettingsSectionDescriptionResponse.class})
    private Output</* @Nullable */ List<SettingsSectionDescriptionResponse>> fabricSettings;

    public Output</* @Nullable */ List<SettingsSectionDescriptionResponse>> getFabricSettings() {
        return this.fabricSettings;
    }
    @OutputExport(name="fqdn", type=String.class, parameters={})
    private Output<String> fqdn;

    public Output<String> getFqdn() {
        return this.fqdn;
    }
    @OutputExport(name="httpGatewayConnectionPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> httpGatewayConnectionPort;

    public Output</* @Nullable */ Integer> getHttpGatewayConnectionPort() {
        return this.httpGatewayConnectionPort;
    }
    @OutputExport(name="loadBalancingRules", type=List.class, parameters={LoadBalancingRuleResponse.class})
    private Output</* @Nullable */ List<LoadBalancingRuleResponse>> loadBalancingRules;

    public Output</* @Nullable */ List<LoadBalancingRuleResponse>> getLoadBalancingRules() {
        return this.loadBalancingRules;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    @OutputExport(name="sku", type=SkuResponse.class, parameters={})
    private Output</* @Nullable */ SkuResponse> sku;

    public Output</* @Nullable */ SkuResponse> getSku() {
        return this.sku;
    }
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    public ManagedCluster(String name, ManagedClusterArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicefabric:ManagedCluster", name, args == null ? ManagedClusterArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ManagedCluster(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:servicefabric:ManagedCluster", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20200101preview:ManagedCluster").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20210101preview:ManagedCluster").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20210501:ManagedCluster").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20210701preview:ManagedCluster").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20210901privatepreview:ManagedCluster").build()),
                Input.of(Alias.builder().setType("azure-native:servicefabric/v20211101preview:ManagedCluster").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static ManagedCluster get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ManagedCluster(name, id, options);
    }
}
