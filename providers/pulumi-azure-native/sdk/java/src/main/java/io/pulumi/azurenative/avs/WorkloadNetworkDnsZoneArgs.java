// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.avs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkloadNetworkDnsZoneArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkloadNetworkDnsZoneArgs Empty = new WorkloadNetworkDnsZoneArgs();

    /**
     * Display name of the DNS Zone.
     * 
     */
    @InputImport(name="displayName")
        private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * DNS Server IP array of the DNS Zone.
     * 
     */
    @InputImport(name="dnsServerIps")
        private final @Nullable Input<List<String>> dnsServerIps;

    public Input<List<String>> getDnsServerIps() {
        return this.dnsServerIps == null ? Input.empty() : this.dnsServerIps;
    }

    /**
     * Number of DNS Services using the DNS zone.
     * 
     */
    @InputImport(name="dnsServices")
        private final @Nullable Input<Double> dnsServices;

    public Input<Double> getDnsServices() {
        return this.dnsServices == null ? Input.empty() : this.dnsServices;
    }

    /**
     * NSX DNS Zone identifier. Generally the same as the DNS Zone's display name
     * 
     */
    @InputImport(name="dnsZoneId")
        private final @Nullable Input<String> dnsZoneId;

    public Input<String> getDnsZoneId() {
        return this.dnsZoneId == null ? Input.empty() : this.dnsZoneId;
    }

    /**
     * Domain names of the DNS Zone.
     * 
     */
    @InputImport(name="domain")
        private final @Nullable Input<List<String>> domain;

    public Input<List<String>> getDomain() {
        return this.domain == null ? Input.empty() : this.domain;
    }

    /**
     * Name of the private cloud
     * 
     */
    @InputImport(name="privateCloudName", required=true)
        private final Input<String> privateCloudName;

    public Input<String> getPrivateCloudName() {
        return this.privateCloudName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
        private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * NSX revision number.
     * 
     */
    @InputImport(name="revision")
        private final @Nullable Input<Double> revision;

    public Input<Double> getRevision() {
        return this.revision == null ? Input.empty() : this.revision;
    }

    /**
     * Source IP of the DNS Zone.
     * 
     */
    @InputImport(name="sourceIp")
        private final @Nullable Input<String> sourceIp;

    public Input<String> getSourceIp() {
        return this.sourceIp == null ? Input.empty() : this.sourceIp;
    }

    public WorkloadNetworkDnsZoneArgs(
        @Nullable Input<String> displayName,
        @Nullable Input<List<String>> dnsServerIps,
        @Nullable Input<Double> dnsServices,
        @Nullable Input<String> dnsZoneId,
        @Nullable Input<List<String>> domain,
        Input<String> privateCloudName,
        Input<String> resourceGroupName,
        @Nullable Input<Double> revision,
        @Nullable Input<String> sourceIp) {
        this.displayName = displayName;
        this.dnsServerIps = dnsServerIps;
        this.dnsServices = dnsServices;
        this.dnsZoneId = dnsZoneId;
        this.domain = domain;
        this.privateCloudName = Objects.requireNonNull(privateCloudName, "expected parameter 'privateCloudName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.revision = revision;
        this.sourceIp = sourceIp;
    }

    private WorkloadNetworkDnsZoneArgs() {
        this.displayName = Input.empty();
        this.dnsServerIps = Input.empty();
        this.dnsServices = Input.empty();
        this.dnsZoneId = Input.empty();
        this.domain = Input.empty();
        this.privateCloudName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.revision = Input.empty();
        this.sourceIp = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadNetworkDnsZoneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> displayName;
        private @Nullable Input<List<String>> dnsServerIps;
        private @Nullable Input<Double> dnsServices;
        private @Nullable Input<String> dnsZoneId;
        private @Nullable Input<List<String>> domain;
        private Input<String> privateCloudName;
        private Input<String> resourceGroupName;
        private @Nullable Input<Double> revision;
        private @Nullable Input<String> sourceIp;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkloadNetworkDnsZoneArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.dnsServerIps = defaults.dnsServerIps;
    	      this.dnsServices = defaults.dnsServices;
    	      this.dnsZoneId = defaults.dnsZoneId;
    	      this.domain = defaults.domain;
    	      this.privateCloudName = defaults.privateCloudName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.revision = defaults.revision;
    	      this.sourceIp = defaults.sourceIp;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setDnsServerIps(@Nullable Input<List<String>> dnsServerIps) {
            this.dnsServerIps = dnsServerIps;
            return this;
        }

        public Builder setDnsServerIps(@Nullable List<String> dnsServerIps) {
            this.dnsServerIps = Input.ofNullable(dnsServerIps);
            return this;
        }

        public Builder setDnsServices(@Nullable Input<Double> dnsServices) {
            this.dnsServices = dnsServices;
            return this;
        }

        public Builder setDnsServices(@Nullable Double dnsServices) {
            this.dnsServices = Input.ofNullable(dnsServices);
            return this;
        }

        public Builder setDnsZoneId(@Nullable Input<String> dnsZoneId) {
            this.dnsZoneId = dnsZoneId;
            return this;
        }

        public Builder setDnsZoneId(@Nullable String dnsZoneId) {
            this.dnsZoneId = Input.ofNullable(dnsZoneId);
            return this;
        }

        public Builder setDomain(@Nullable Input<List<String>> domain) {
            this.domain = domain;
            return this;
        }

        public Builder setDomain(@Nullable List<String> domain) {
            this.domain = Input.ofNullable(domain);
            return this;
        }

        public Builder setPrivateCloudName(Input<String> privateCloudName) {
            this.privateCloudName = Objects.requireNonNull(privateCloudName);
            return this;
        }

        public Builder setPrivateCloudName(String privateCloudName) {
            this.privateCloudName = Input.of(Objects.requireNonNull(privateCloudName));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRevision(@Nullable Input<Double> revision) {
            this.revision = revision;
            return this;
        }

        public Builder setRevision(@Nullable Double revision) {
            this.revision = Input.ofNullable(revision);
            return this;
        }

        public Builder setSourceIp(@Nullable Input<String> sourceIp) {
            this.sourceIp = sourceIp;
            return this;
        }

        public Builder setSourceIp(@Nullable String sourceIp) {
            this.sourceIp = Input.ofNullable(sourceIp);
            return this;
        }
        public WorkloadNetworkDnsZoneArgs build() {
            return new WorkloadNetworkDnsZoneArgs(displayName, dnsServerIps, dnsServices, dnsZoneId, domain, privateCloudName, resourceGroupName, revision, sourceIp);
        }
    }
}
