// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.outputs;

import io.pulumi.azurenative.media.outputs.AccountEncryptionResponse;
import io.pulumi.azurenative.media.outputs.MediaServiceIdentityResponse;
import io.pulumi.azurenative.media.outputs.StorageAccountResponse;
import io.pulumi.azurenative.media.outputs.SystemDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetMediaServiceResult {
    private final @Nullable AccountEncryptionResponse encryption;
    private final String id;
    private final @Nullable MediaServiceIdentityResponse identity;
    private final String location;
    private final String mediaServiceId;
    private final String name;
    private final @Nullable List<StorageAccountResponse> storageAccounts;
    private final @Nullable String storageAuthentication;
    private final SystemDataResponse systemData;
    private final @Nullable Map<String,String> tags;
    private final String type;

    @OutputCustomType.Constructor({"encryption","id","identity","location","mediaServiceId","name","storageAccounts","storageAuthentication","systemData","tags","type"})
    private GetMediaServiceResult(
        @Nullable AccountEncryptionResponse encryption,
        String id,
        @Nullable MediaServiceIdentityResponse identity,
        String location,
        String mediaServiceId,
        String name,
        @Nullable List<StorageAccountResponse> storageAccounts,
        @Nullable String storageAuthentication,
        SystemDataResponse systemData,
        @Nullable Map<String,String> tags,
        String type) {
        this.encryption = encryption;
        this.id = Objects.requireNonNull(id);
        this.identity = identity;
        this.location = Objects.requireNonNull(location);
        this.mediaServiceId = Objects.requireNonNull(mediaServiceId);
        this.name = Objects.requireNonNull(name);
        this.storageAccounts = storageAccounts;
        this.storageAuthentication = storageAuthentication;
        this.systemData = Objects.requireNonNull(systemData);
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<AccountEncryptionResponse> getEncryption() {
        return Optional.ofNullable(this.encryption);
    }
    public String getId() {
        return this.id;
    }
    public Optional<MediaServiceIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public String getLocation() {
        return this.location;
    }
    public String getMediaServiceId() {
        return this.mediaServiceId;
    }
    public String getName() {
        return this.name;
    }
    public List<StorageAccountResponse> getStorageAccounts() {
        return this.storageAccounts == null ? List.of() : this.storageAccounts;
    }
    public Optional<String> getStorageAuthentication() {
        return Optional.ofNullable(this.storageAuthentication);
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMediaServiceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AccountEncryptionResponse encryption;
        private String id;
        private @Nullable MediaServiceIdentityResponse identity;
        private String location;
        private String mediaServiceId;
        private String name;
        private @Nullable List<StorageAccountResponse> storageAccounts;
        private @Nullable String storageAuthentication;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMediaServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryption = defaults.encryption;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.mediaServiceId = defaults.mediaServiceId;
    	      this.name = defaults.name;
    	      this.storageAccounts = defaults.storageAccounts;
    	      this.storageAuthentication = defaults.storageAuthentication;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setEncryption(@Nullable AccountEncryptionResponse encryption) {
            this.encryption = encryption;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable MediaServiceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setMediaServiceId(String mediaServiceId) {
            this.mediaServiceId = Objects.requireNonNull(mediaServiceId);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setStorageAccounts(@Nullable List<StorageAccountResponse> storageAccounts) {
            this.storageAccounts = storageAccounts;
            return this;
        }

        public Builder setStorageAuthentication(@Nullable String storageAuthentication) {
            this.storageAuthentication = storageAuthentication;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetMediaServiceResult build() {
            return new GetMediaServiceResult(encryption, id, identity, location, mediaServiceId, name, storageAccounts, storageAuthentication, systemData, tags, type);
        }
    }
}
