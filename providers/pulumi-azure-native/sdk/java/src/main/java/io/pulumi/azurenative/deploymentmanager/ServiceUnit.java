// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.deploymentmanager;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.deploymentmanager.ServiceUnitArgs;
import io.pulumi.azurenative.deploymentmanager.outputs.ServiceUnitArtifactsResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Represents the response of a service unit resource.
API Version: 2019-11-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create service unit using SAS URIs
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var serviceUnit = new AzureNative.DeploymentManager.ServiceUnit("serviceUnit", new AzureNative.DeploymentManager.ServiceUnitArgs
        {
            Artifacts = new AzureNative.DeploymentManager.Inputs.ServiceUnitArtifactsArgs
            {
                ParametersUri = "https://mystorageaccount.blob.core.windows.net/myartifactsource/parameter/myTopologyUnit.parameters.json?st=2018-07-07T14%3A10%3A00Z&se=2019-12-31T15%3A10%3A00Z&sp=rl&sv=2017-04-17&sr=c&sig=Yh2SoJ1NhhLRwCLln7de%2Fkabcdefghijklmno5sWEIk%3D",
                TemplateUri = "https://mystorageaccount.blob.core.windows.net/myartifactsource/templates/myTopologyUnit.template.json?st=2018-07-07T14%3A10%3A00Z&se=2019-12-31T15%3A10%3A00Z&sp=rl&sv=2017-04-17&sr=c&sig=Yh2SoJ1NhhLRwCLln7de%2Fkabcdefghijklmno5sWEIk%3D",
            },
            DeploymentMode = "Incremental",
            Location = "centralus",
            ResourceGroupName = "myResourceGroup",
            ServiceName = "myService",
            ServiceTopologyName = "myTopology",
            ServiceUnitName = "myServiceUnit",
            Tags = ,
            TargetResourceGroup = "myDeploymentResourceGroup",
        });
    }

}

```

```go
package main

import (
	"fmt"

	deploymentmanager "github.com/pulumi/pulumi-azure-native/sdk/go/azure/deploymentmanager"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := deploymentmanager.NewServiceUnit(ctx, "serviceUnit", &deploymentmanager.ServiceUnitArgs{
			Artifacts: &deploymentmanager.ServiceUnitArtifactsArgs{
				ParametersUri: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v", "https://mystorageaccount.blob.core.windows.net/myartifactsource/parameter/myTopologyUnit.parameters.json?st=2018-07-07T14", "%", "3A10", "%", "3A00Z&se=2019-12-31T15", "%", "3A10", "%", "3A00Z&sp=rl&sv=2017-04-17&sr=c&sig=Yh2SoJ1NhhLRwCLln7de", "%", "2Fkabcdefghijklmno5sWEIk", "%", "3D")),
				TemplateUri:   pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v", "https://mystorageaccount.blob.core.windows.net/myartifactsource/templates/myTopologyUnit.template.json?st=2018-07-07T14", "%", "3A10", "%", "3A00Z&se=2019-12-31T15", "%", "3A10", "%", "3A00Z&sp=rl&sv=2017-04-17&sr=c&sig=Yh2SoJ1NhhLRwCLln7de", "%", "2Fkabcdefghijklmno5sWEIk", "%", "3D")),
			},
			DeploymentMode:      "Incremental",
			Location:            pulumi.String("centralus"),
			ResourceGroupName:   pulumi.String("myResourceGroup"),
			ServiceName:         pulumi.String("myService"),
			ServiceTopologyName: pulumi.String("myTopology"),
			ServiceUnitName:     pulumi.String("myServiceUnit"),
			Tags:                nil,
			TargetResourceGroup: pulumi.String("myDeploymentResourceGroup"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const serviceUnit = new azure_native.deploymentmanager.ServiceUnit("serviceUnit", {
    artifacts: {
        parametersUri: `https://mystorageaccount.blob.core.windows.net/myartifactsource/parameter/myTopologyUnit.parameters.json?st=2018-07-07T14%3A10%3A00Z&se=2019-12-31T15%3A10%3A00Z&sp=rl&sv=2017-04-17&sr=c&sig=Yh2SoJ1NhhLRwCLln7de%2Fkabcdefghijklmno5sWEIk%3D`,
        templateUri: `https://mystorageaccount.blob.core.windows.net/myartifactsource/templates/myTopologyUnit.template.json?st=2018-07-07T14%3A10%3A00Z&se=2019-12-31T15%3A10%3A00Z&sp=rl&sv=2017-04-17&sr=c&sig=Yh2SoJ1NhhLRwCLln7de%2Fkabcdefghijklmno5sWEIk%3D`,
    },
    deploymentMode: "Incremental",
    location: "centralus",
    resourceGroupName: "myResourceGroup",
    serviceName: "myService",
    serviceTopologyName: "myTopology",
    serviceUnitName: "myServiceUnit",
    tags: {},
    targetResourceGroup: "myDeploymentResourceGroup",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

service_unit = azure_native.deploymentmanager.ServiceUnit("serviceUnit",
    artifacts=azure_native.deploymentmanager.ServiceUnitArtifactsArgs(
        parameters_uri="https://mystorageaccount.blob.core.windows.net/myartifactsource/parameter/myTopologyUnit.parameters.json?st=2018-07-07T14%3A10%3A00Z&se=2019-12-31T15%3A10%3A00Z&sp=rl&sv=2017-04-17&sr=c&sig=Yh2SoJ1NhhLRwCLln7de%2Fkabcdefghijklmno5sWEIk%3D",
        template_uri="https://mystorageaccount.blob.core.windows.net/myartifactsource/templates/myTopologyUnit.template.json?st=2018-07-07T14%3A10%3A00Z&se=2019-12-31T15%3A10%3A00Z&sp=rl&sv=2017-04-17&sr=c&sig=Yh2SoJ1NhhLRwCLln7de%2Fkabcdefghijklmno5sWEIk%3D",
    ),
    deployment_mode="Incremental",
    location="centralus",
    resource_group_name="myResourceGroup",
    service_name="myService",
    service_topology_name="myTopology",
    service_unit_name="myServiceUnit",
    tags={},
    target_resource_group="myDeploymentResourceGroup")

```

{{% /example %}}
{{% example %}}
### Create service unit using relative paths into the artifact source
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var serviceUnit = new AzureNative.DeploymentManager.ServiceUnit("serviceUnit", new AzureNative.DeploymentManager.ServiceUnitArgs
        {
            Artifacts = new AzureNative.DeploymentManager.Inputs.ServiceUnitArtifactsArgs
            {
                ParametersArtifactSourceRelativePath = "parameter/myTopologyUnit.parameters.json",
                TemplateArtifactSourceRelativePath = "templates/myTopologyUnit.template.json",
            },
            DeploymentMode = "Incremental",
            Location = "centralus",
            ResourceGroupName = "myResourceGroup",
            ServiceName = "myService",
            ServiceTopologyName = "myTopology",
            ServiceUnitName = "myServiceUnit",
            Tags = ,
            TargetResourceGroup = "myDeploymentResourceGroup",
        });
    }

}

```

```go
package main

import (
	deploymentmanager "github.com/pulumi/pulumi-azure-native/sdk/go/azure/deploymentmanager"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := deploymentmanager.NewServiceUnit(ctx, "serviceUnit", &deploymentmanager.ServiceUnitArgs{
			Artifacts: &deploymentmanager.ServiceUnitArtifactsArgs{
				ParametersArtifactSourceRelativePath: pulumi.String("parameter/myTopologyUnit.parameters.json"),
				TemplateArtifactSourceRelativePath:   pulumi.String("templates/myTopologyUnit.template.json"),
			},
			DeploymentMode:      "Incremental",
			Location:            pulumi.String("centralus"),
			ResourceGroupName:   pulumi.String("myResourceGroup"),
			ServiceName:         pulumi.String("myService"),
			ServiceTopologyName: pulumi.String("myTopology"),
			ServiceUnitName:     pulumi.String("myServiceUnit"),
			Tags:                nil,
			TargetResourceGroup: pulumi.String("myDeploymentResourceGroup"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const serviceUnit = new azure_native.deploymentmanager.ServiceUnit("serviceUnit", {
    artifacts: {
        parametersArtifactSourceRelativePath: "parameter/myTopologyUnit.parameters.json",
        templateArtifactSourceRelativePath: "templates/myTopologyUnit.template.json",
    },
    deploymentMode: "Incremental",
    location: "centralus",
    resourceGroupName: "myResourceGroup",
    serviceName: "myService",
    serviceTopologyName: "myTopology",
    serviceUnitName: "myServiceUnit",
    tags: {},
    targetResourceGroup: "myDeploymentResourceGroup",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

service_unit = azure_native.deploymentmanager.ServiceUnit("serviceUnit",
    artifacts=azure_native.deploymentmanager.ServiceUnitArtifactsArgs(
        parameters_artifact_source_relative_path="parameter/myTopologyUnit.parameters.json",
        template_artifact_source_relative_path="templates/myTopologyUnit.template.json",
    ),
    deployment_mode="Incremental",
    location="centralus",
    resource_group_name="myResourceGroup",
    service_name="myService",
    service_topology_name="myTopology",
    service_unit_name="myServiceUnit",
    tags={},
    target_resource_group="myDeploymentResourceGroup")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:deploymentmanager:ServiceUnit myServiceUnit /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}/serviceUnits/{serviceUnitName} 
```

 */
@ResourceType(type="azure-native:deploymentmanager:ServiceUnit")
public class ServiceUnit extends io.pulumi.resources.CustomResource {
    /**
     * The artifacts for the service unit.
     */
    @OutputExport(name="artifacts", type=ServiceUnitArtifactsResponse.class, parameters={})
    private Output</* @Nullable */ ServiceUnitArtifactsResponse> artifacts;

    /**
     * @return The artifacts for the service unit.
     */
    public Output</* @Nullable */ ServiceUnitArtifactsResponse> getArtifacts() {
        return this.artifacts;
    }
    /**
     * Describes the type of ARM deployment to be performed on the resource.
     */
    @OutputExport(name="deploymentMode", type=String.class, parameters={})
    private Output<String> deploymentMode;

    /**
     * @return Describes the type of ARM deployment to be performed on the resource.
     */
    public Output<String> getDeploymentMode() {
        return this.deploymentMode;
    }
    /**
     * The geo-location where the resource lives
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
     */
    @OutputExport(name="targetResourceGroup", type=String.class, parameters={})
    private Output<String> targetResourceGroup;

    /**
     * @return The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
     */
    public Output<String> getTargetResourceGroup() {
        return this.targetResourceGroup;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceUnit(String name, ServiceUnitArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:deploymentmanager:ServiceUnit", name, args == null ? ServiceUnitArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ServiceUnit(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:deploymentmanager:ServiceUnit", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:deploymentmanager/v20180901preview:ServiceUnit").build()),
                Input.of(Alias.builder().setType("azure-native:deploymentmanager/v20191101preview:ServiceUnit").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceUnit get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ServiceUnit(name, id, options);
    }
}
