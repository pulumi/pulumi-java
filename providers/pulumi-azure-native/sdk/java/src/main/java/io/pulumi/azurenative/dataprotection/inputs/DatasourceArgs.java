// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.dataprotection.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatasourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasourceArgs Empty = new DatasourceArgs();

    @InputImport(name="datasourceType")
    private final @Nullable Input<String> datasourceType;

    public Input<String> getDatasourceType() {
        return this.datasourceType == null ? Input.empty() : this.datasourceType;
    }

    @InputImport(name="objectType")
    private final @Nullable Input<String> objectType;

    public Input<String> getObjectType() {
        return this.objectType == null ? Input.empty() : this.objectType;
    }

    @InputImport(name="resourceID", required=true)
    private final Input<String> resourceID;

    public Input<String> getResourceID() {
        return this.resourceID;
    }

    @InputImport(name="resourceLocation")
    private final @Nullable Input<String> resourceLocation;

    public Input<String> getResourceLocation() {
        return this.resourceLocation == null ? Input.empty() : this.resourceLocation;
    }

    @InputImport(name="resourceName")
    private final @Nullable Input<String> resourceName;

    public Input<String> getPropResourceName() {
        return this.resourceName == null ? Input.empty() : this.resourceName;
    }

    @InputImport(name="resourceType")
    private final @Nullable Input<String> resourceType;

    public Input<String> getPropResourceType() {
        return this.resourceType == null ? Input.empty() : this.resourceType;
    }

    @InputImport(name="resourceUri")
    private final @Nullable Input<String> resourceUri;

    public Input<String> getResourceUri() {
        return this.resourceUri == null ? Input.empty() : this.resourceUri;
    }

    public DatasourceArgs(
        @Nullable Input<String> datasourceType,
        @Nullable Input<String> objectType,
        Input<String> resourceID,
        @Nullable Input<String> resourceLocation,
        @Nullable Input<String> resourceName,
        @Nullable Input<String> resourceType,
        @Nullable Input<String> resourceUri) {
        this.datasourceType = datasourceType;
        this.objectType = objectType;
        this.resourceID = Objects.requireNonNull(resourceID, "expected parameter 'resourceID' to be non-null");
        this.resourceLocation = resourceLocation;
        this.resourceName = resourceName;
        this.resourceType = resourceType;
        this.resourceUri = resourceUri;
    }

    private DatasourceArgs() {
        this.datasourceType = Input.empty();
        this.objectType = Input.empty();
        this.resourceID = Input.empty();
        this.resourceLocation = Input.empty();
        this.resourceName = Input.empty();
        this.resourceType = Input.empty();
        this.resourceUri = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> datasourceType;
        private @Nullable Input<String> objectType;
        private Input<String> resourceID;
        private @Nullable Input<String> resourceLocation;
        private @Nullable Input<String> resourceName;
        private @Nullable Input<String> resourceType;
        private @Nullable Input<String> resourceUri;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasourceType = defaults.datasourceType;
    	      this.objectType = defaults.objectType;
    	      this.resourceID = defaults.resourceID;
    	      this.resourceLocation = defaults.resourceLocation;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
    	      this.resourceUri = defaults.resourceUri;
        }

        public Builder setDatasourceType(@Nullable Input<String> datasourceType) {
            this.datasourceType = datasourceType;
            return this;
        }

        public Builder setDatasourceType(@Nullable String datasourceType) {
            this.datasourceType = Input.ofNullable(datasourceType);
            return this;
        }

        public Builder setObjectType(@Nullable Input<String> objectType) {
            this.objectType = objectType;
            return this;
        }

        public Builder setObjectType(@Nullable String objectType) {
            this.objectType = Input.ofNullable(objectType);
            return this;
        }

        public Builder setResourceID(Input<String> resourceID) {
            this.resourceID = Objects.requireNonNull(resourceID);
            return this;
        }

        public Builder setResourceID(String resourceID) {
            this.resourceID = Input.of(Objects.requireNonNull(resourceID));
            return this;
        }

        public Builder setResourceLocation(@Nullable Input<String> resourceLocation) {
            this.resourceLocation = resourceLocation;
            return this;
        }

        public Builder setResourceLocation(@Nullable String resourceLocation) {
            this.resourceLocation = Input.ofNullable(resourceLocation);
            return this;
        }

        public Builder setResourceName(@Nullable Input<String> resourceName) {
            this.resourceName = resourceName;
            return this;
        }

        public Builder setResourceName(@Nullable String resourceName) {
            this.resourceName = Input.ofNullable(resourceName);
            return this;
        }

        public Builder setResourceType(@Nullable Input<String> resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        public Builder setResourceType(@Nullable String resourceType) {
            this.resourceType = Input.ofNullable(resourceType);
            return this;
        }

        public Builder setResourceUri(@Nullable Input<String> resourceUri) {
            this.resourceUri = resourceUri;
            return this;
        }

        public Builder setResourceUri(@Nullable String resourceUri) {
            this.resourceUri = Input.ofNullable(resourceUri);
            return this;
        }

        public DatasourceArgs build() {
            return new DatasourceArgs(datasourceType, objectType, resourceID, resourceLocation, resourceName, resourceType, resourceUri);
        }
    }
}
