// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation.inputs;

import io.pulumi.azurenative.automation.enums.ContentSourceType;
import io.pulumi.azurenative.automation.inputs.ContentHashArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Definition of the content source.
 * 
 */
public final class ContentSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContentSourceArgs Empty = new ContentSourceArgs();

    /**
     * Gets or sets the hash.
     * 
     */
    @Import(name="hash")
      private final @Nullable Output<ContentHashArgs> hash;

    public Output<ContentHashArgs> getHash() {
        return this.hash == null ? Codegen.empty() : this.hash;
    }

    /**
     * Gets or sets the content source type.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<Either<String,ContentSourceType>> type;

    public Output<Either<String,ContentSourceType>> getType() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    /**
     * Gets or sets the value of the content. This is based on the content source type.
     * 
     */
    @Import(name="value")
      private final @Nullable Output<String> value;

    public Output<String> getValue() {
        return this.value == null ? Codegen.empty() : this.value;
    }

    /**
     * Gets or sets the version of the content.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<String> version;

    public Output<String> getVersion() {
        return this.version == null ? Codegen.empty() : this.version;
    }

    public ContentSourceArgs(
        @Nullable Output<ContentHashArgs> hash,
        @Nullable Output<Either<String,ContentSourceType>> type,
        @Nullable Output<String> value,
        @Nullable Output<String> version) {
        this.hash = hash;
        this.type = type;
        this.value = value;
        this.version = version;
    }

    private ContentSourceArgs() {
        this.hash = Codegen.empty();
        this.type = Codegen.empty();
        this.value = Codegen.empty();
        this.version = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContentSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ContentHashArgs> hash;
        private @Nullable Output<Either<String,ContentSourceType>> type;
        private @Nullable Output<String> value;
        private @Nullable Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ContentSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hash = defaults.hash;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
    	      this.version = defaults.version;
        }

        public Builder hash(@Nullable Output<ContentHashArgs> hash) {
            this.hash = hash;
            return this;
        }
        public Builder hash(@Nullable ContentHashArgs hash) {
            this.hash = Codegen.ofNullable(hash);
            return this;
        }
        public Builder type(@Nullable Output<Either<String,ContentSourceType>> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable Either<String,ContentSourceType> type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }
        public Builder value(@Nullable Output<String> value) {
            this.value = value;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = Codegen.ofNullable(value);
            return this;
        }
        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }
        public Builder version(@Nullable String version) {
            this.version = Codegen.ofNullable(version);
            return this;
        }        public ContentSourceArgs build() {
            return new ContentSourceArgs(hash, type, value, version);
        }
    }
}
