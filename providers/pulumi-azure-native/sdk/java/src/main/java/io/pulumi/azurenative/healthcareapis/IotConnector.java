// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.healthcareapis;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.healthcareapis.IotConnectorArgs;
import io.pulumi.azurenative.healthcareapis.outputs.IotEventHubIngestionEndpointConfigurationResponse;
import io.pulumi.azurenative.healthcareapis.outputs.IotMappingPropertiesResponse;
import io.pulumi.azurenative.healthcareapis.outputs.ServiceManagedIdentityResponseIdentity;
import io.pulumi.azurenative.healthcareapis.outputs.SystemDataResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * IoT Connector definition.
API Version: 2021-06-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create an IoT Connector
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var iotConnector = new AzureNative.HealthcareApis.IotConnector("iotConnector", new AzureNative.HealthcareApis.IotConnectorArgs
        {
            DeviceMapping = new AzureNative.HealthcareApis.Inputs.IotMappingPropertiesArgs
            {
                Content = 
                {
                    { "template", 
                    {
                        
                        {
                            { "template", 
                            {
                                { "deviceIdExpression", "$.deviceid" },
                                { "timestampExpression", "$.measurementdatetime" },
                                { "typeMatchExpression", "$..[?(@heartrate)]" },
                                { "typeName", "heartrate" },
                                { "values", 
                                {
                                    
                                    {
                                        { "required", "true" },
                                        { "valueExpression", "$.heartrate" },
                                        { "valueName", "hr" },
                                    },
                                } },
                            } },
                            { "templateType", "JsonPathContent" },
                        },
                    } },
                    { "templateType", "CollectionContent" },
                },
            },
            Identity = new AzureNative.HealthcareApis.Inputs.ServiceManagedIdentityIdentityArgs
            {
                Type = "SystemAssigned",
            },
            IngestionEndpointConfiguration = new AzureNative.HealthcareApis.Inputs.IotEventHubIngestionEndpointConfigurationArgs
            {
                ConsumerGroup = "ConsumerGroupA",
                EventHubName = "MyEventHubName",
                FullyQualifiedEventHubNamespace = "myeventhub.servicesbus.windows.net",
            },
            IotConnectorName = "blue",
            Location = "westus",
            ResourceGroupName = "testRG",
            Tags = 
            {
                { "additionalProp1", "string" },
                { "additionalProp2", "string" },
                { "additionalProp3", "string" },
            },
            WorkspaceName = "workspace1",
        });
    }

}

```

```go
package main

import (
	"fmt"

	healthcareapis "github.com/pulumi/pulumi-azure-native/sdk/go/azure/healthcareapis"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := healthcareapis.NewIotConnector(ctx, "iotConnector", &healthcareapis.IotConnectorArgs{
			DeviceMapping: &healthcareapis.IotMappingPropertiesArgs{
				Content: pulumi.Any{
					Template: []map[string]interface{}{
						map[string]interface{}{
							"template": map[string]interface{}{
								"deviceIdExpression":  fmt.Sprintf("%v%v", "$", ".deviceid"),
								"timestampExpression": fmt.Sprintf("%v%v", "$", ".measurementdatetime"),
								"typeMatchExpression": fmt.Sprintf("%v%v", "$", "..[?(@heartrate)]"),
								"typeName":            "heartrate",
								"values": []map[string]interface{}{
									map[string]interface{}{
										"required":        "true",
										"valueExpression": fmt.Sprintf("%v%v", "$", ".heartrate"),
										"valueName":       "hr",
									},
								},
							},
							"templateType": "JsonPathContent",
						},
					},
					TemplateType: "CollectionContent",
				},
			},
			Identity: &healthcareapis.ServiceManagedIdentityIdentityArgs{
				Type: pulumi.String("SystemAssigned"),
			},
			IngestionEndpointConfiguration: &healthcareapis.IotEventHubIngestionEndpointConfigurationArgs{
				ConsumerGroup:                   pulumi.String("ConsumerGroupA"),
				EventHubName:                    pulumi.String("MyEventHubName"),
				FullyQualifiedEventHubNamespace: pulumi.String("myeventhub.servicesbus.windows.net"),
			},
			IotConnectorName:  pulumi.String("blue"),
			Location:          pulumi.String("westus"),
			ResourceGroupName: pulumi.String("testRG"),
			Tags: pulumi.StringMap{
				"additionalProp1": pulumi.String("string"),
				"additionalProp2": pulumi.String("string"),
				"additionalProp3": pulumi.String("string"),
			},
			WorkspaceName: pulumi.String("workspace1"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const iotConnector = new azure_native.healthcareapis.IotConnector("iotConnector", {
    deviceMapping: {
        content: {
            template: [{
                template: {
                    deviceIdExpression: `$.deviceid`,
                    timestampExpression: `$.measurementdatetime`,
                    typeMatchExpression: `$..[?(@heartrate)]`,
                    typeName: "heartrate",
                    values: [{
                        required: "true",
                        valueExpression: `$.heartrate`,
                        valueName: "hr",
                    }],
                },
                templateType: "JsonPathContent",
            }],
            templateType: "CollectionContent",
        },
    },
    identity: {
        type: "SystemAssigned",
    },
    ingestionEndpointConfiguration: {
        consumerGroup: "ConsumerGroupA",
        eventHubName: "MyEventHubName",
        fullyQualifiedEventHubNamespace: "myeventhub.servicesbus.windows.net",
    },
    iotConnectorName: "blue",
    location: "westus",
    resourceGroupName: "testRG",
    tags: {
        additionalProp1: "string",
        additionalProp2: "string",
        additionalProp3: "string",
    },
    workspaceName: "workspace1",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

iot_connector = azure_native.healthcareapis.IotConnector("iotConnector",
    device_mapping=azure_native.healthcareapis.IotMappingPropertiesArgs(
        content={
            "template": [{
                "template": {
                    "deviceIdExpression": "$.deviceid",
                    "timestampExpression": "$.measurementdatetime",
                    "typeMatchExpression": "$..[?(@heartrate)]",
                    "typeName": "heartrate",
                    "values": [{
                        "required": "true",
                        "valueExpression": "$.heartrate",
                        "valueName": "hr",
                    }],
                },
                "templateType": "JsonPathContent",
            }],
            "templateType": "CollectionContent",
        },
    ),
    identity=azure_native.healthcareapis.ServiceManagedIdentityIdentityArgs(
        type="SystemAssigned",
    ),
    ingestion_endpoint_configuration=azure_native.healthcareapis.IotEventHubIngestionEndpointConfigurationArgs(
        consumer_group="ConsumerGroupA",
        event_hub_name="MyEventHubName",
        fully_qualified_event_hub_namespace="myeventhub.servicesbus.windows.net",
    ),
    iot_connector_name="blue",
    location="westus",
    resource_group_name="testRG",
    tags={
        "additionalProp1": "string",
        "additionalProp2": "string",
        "additionalProp3": "string",
    },
    workspace_name="workspace1")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:healthcareapis:IotConnector blue /subscriptions/subid/resourceGroups/testRG/providers/Microsoft.HealthcareApis/workspaces/workspace1/iotconnectors/blue 
```

 */
@ResourceType(type="azure-native:healthcareapis:IotConnector")
public class IotConnector extends io.pulumi.resources.CustomResource {
    /**
     * Device Mappings.
     */
    @OutputExport(name="deviceMapping", type=IotMappingPropertiesResponse.class, parameters={})
    private Output</* @Nullable */ IotMappingPropertiesResponse> deviceMapping;

    /**
     * @return Device Mappings.
     */
    public Output</* @Nullable */ IotMappingPropertiesResponse> getDeviceMapping() {
        return this.deviceMapping;
    }
    /**
     * An etag associated with the resource, used for optimistic concurrency when editing it.
     */
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output</* @Nullable */ String> etag;

    /**
     * @return An etag associated with the resource, used for optimistic concurrency when editing it.
     */
    public Output</* @Nullable */ String> getEtag() {
        return this.etag;
    }
    /**
     * Setting indicating whether the service has a managed identity associated with it.
     */
    @OutputExport(name="identity", type=ServiceManagedIdentityResponseIdentity.class, parameters={})
    private Output</* @Nullable */ ServiceManagedIdentityResponseIdentity> identity;

    /**
     * @return Setting indicating whether the service has a managed identity associated with it.
     */
    public Output</* @Nullable */ ServiceManagedIdentityResponseIdentity> getIdentity() {
        return this.identity;
    }
    /**
     * Source configuration.
     */
    @OutputExport(name="ingestionEndpointConfiguration", type=IotEventHubIngestionEndpointConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ IotEventHubIngestionEndpointConfigurationResponse> ingestionEndpointConfiguration;

    /**
     * @return Source configuration.
     */
    public Output</* @Nullable */ IotEventHubIngestionEndpointConfigurationResponse> getIngestionEndpointConfiguration() {
        return this.ingestionEndpointConfiguration;
    }
    /**
     * The resource location.
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The resource location.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * The resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The provisioning state.
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state.
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    @OutputExport(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IotConnector(String name, IotConnectorArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:healthcareapis:IotConnector", name, args == null ? IotConnectorArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private IotConnector(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:healthcareapis:IotConnector", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:healthcareapis/v20210601preview:IotConnector").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IotConnector get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new IotConnector(name, id, options);
    }
}
