// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines the parameters for the url rewrite action.
 * 
 */
public final class UrlRewriteActionParametersArgs extends io.pulumi.resources.ResourceArgs {

    public static final UrlRewriteActionParametersArgs Empty = new UrlRewriteActionParametersArgs();

    /**
     * Define the relative URL to which the above requests will be rewritten by.
     * 
     */
    @InputImport(name="destination", required=true)
      private final Output<String> destination;

    public Output<String> getDestination() {
        return this.destination;
    }

    @InputImport(name="odataType", required=true)
      private final Output<String> odataType;

    public Output<String> getOdataType() {
        return this.odataType;
    }

    /**
     * Whether to preserve unmatched path. Default value is true.
     * 
     */
    @InputImport(name="preserveUnmatchedPath")
      private final @Nullable Output<Boolean> preserveUnmatchedPath;

    public Output<Boolean> getPreserveUnmatchedPath() {
        return this.preserveUnmatchedPath == null ? Output.empty() : this.preserveUnmatchedPath;
    }

    /**
     * define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
     * 
     */
    @InputImport(name="sourcePattern", required=true)
      private final Output<String> sourcePattern;

    public Output<String> getSourcePattern() {
        return this.sourcePattern;
    }

    public UrlRewriteActionParametersArgs(
        Output<String> destination,
        Output<String> odataType,
        @Nullable Output<Boolean> preserveUnmatchedPath,
        Output<String> sourcePattern) {
        this.destination = Objects.requireNonNull(destination, "expected parameter 'destination' to be non-null");
        this.odataType = Objects.requireNonNull(odataType, "expected parameter 'odataType' to be non-null");
        this.preserveUnmatchedPath = preserveUnmatchedPath;
        this.sourcePattern = Objects.requireNonNull(sourcePattern, "expected parameter 'sourcePattern' to be non-null");
    }

    private UrlRewriteActionParametersArgs() {
        this.destination = Output.empty();
        this.odataType = Output.empty();
        this.preserveUnmatchedPath = Output.empty();
        this.sourcePattern = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UrlRewriteActionParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> destination;
        private Output<String> odataType;
        private @Nullable Output<Boolean> preserveUnmatchedPath;
        private Output<String> sourcePattern;

        public Builder() {
    	      // Empty
        }

        public Builder(UrlRewriteActionParametersArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.odataType = defaults.odataType;
    	      this.preserveUnmatchedPath = defaults.preserveUnmatchedPath;
    	      this.sourcePattern = defaults.sourcePattern;
        }

        public Builder destination(Output<String> destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }

        public Builder destination(String destination) {
            this.destination = Output.of(Objects.requireNonNull(destination));
            return this;
        }

        public Builder odataType(Output<String> odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder odataType(String odataType) {
            this.odataType = Output.of(Objects.requireNonNull(odataType));
            return this;
        }

        public Builder preserveUnmatchedPath(@Nullable Output<Boolean> preserveUnmatchedPath) {
            this.preserveUnmatchedPath = preserveUnmatchedPath;
            return this;
        }

        public Builder preserveUnmatchedPath(@Nullable Boolean preserveUnmatchedPath) {
            this.preserveUnmatchedPath = Output.ofNullable(preserveUnmatchedPath);
            return this;
        }

        public Builder sourcePattern(Output<String> sourcePattern) {
            this.sourcePattern = Objects.requireNonNull(sourcePattern);
            return this;
        }

        public Builder sourcePattern(String sourcePattern) {
            this.sourcePattern = Output.of(Objects.requireNonNull(sourcePattern));
            return this;
        }
        public UrlRewriteActionParametersArgs build() {
            return new UrlRewriteActionParametersArgs(destination, odataType, preserveUnmatchedPath, sourcePattern);
        }
    }
}
