// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Info for certificate to be exported for TDE enabled databases.
 * 
 */
public final class SelectedCertificateInputArgs extends io.pulumi.resources.ResourceArgs {

    public static final SelectedCertificateInputArgs Empty = new SelectedCertificateInputArgs();

    /**
     * Name of certificate to be exported.
     * 
     */
    @Import(name="certificateName", required=true)
      private final Output<String> certificateName;

    public Output<String> getCertificateName() {
        return this.certificateName;
    }

    /**
     * Password to use for encrypting the exported certificate.
     * 
     */
    @Import(name="password", required=true)
      private final Output<String> password;

    public Output<String> getPassword() {
        return this.password;
    }

    public SelectedCertificateInputArgs(
        Output<String> certificateName,
        Output<String> password) {
        this.certificateName = Objects.requireNonNull(certificateName, "expected parameter 'certificateName' to be non-null");
        this.password = Objects.requireNonNull(password, "expected parameter 'password' to be non-null");
    }

    private SelectedCertificateInputArgs() {
        this.certificateName = Output.empty();
        this.password = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SelectedCertificateInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> certificateName;
        private Output<String> password;

        public Builder() {
    	      // Empty
        }

        public Builder(SelectedCertificateInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateName = defaults.certificateName;
    	      this.password = defaults.password;
        }

        public Builder certificateName(Output<String> certificateName) {
            this.certificateName = Objects.requireNonNull(certificateName);
            return this;
        }

        public Builder certificateName(String certificateName) {
            this.certificateName = Output.of(Objects.requireNonNull(certificateName));
            return this;
        }

        public Builder password(Output<String> password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }

        public Builder password(String password) {
            this.password = Output.of(Objects.requireNonNull(password));
            return this;
        }
        public SelectedCertificateInputArgs build() {
            return new SelectedCertificateInputArgs(certificateName, password);
        }
    }
}
