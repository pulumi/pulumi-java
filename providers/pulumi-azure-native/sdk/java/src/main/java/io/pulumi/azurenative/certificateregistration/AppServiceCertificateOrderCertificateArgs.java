// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.certificateregistration;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppServiceCertificateOrderCertificateArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppServiceCertificateOrderCertificateArgs Empty = new AppServiceCertificateOrderCertificateArgs();

    /**
     * Name of the certificate order.
     * 
     */
    @Import(name="certificateOrderName", required=true)
      private final Output<String> certificateOrderName;

    public Output<String> getCertificateOrderName() {
        return this.certificateOrderName;
    }

    /**
     * Key Vault resource Id.
     * 
     */
    @Import(name="keyVaultId")
      private final @Nullable Output<String> keyVaultId;

    public Output<String> getKeyVaultId() {
        return this.keyVaultId == null ? Output.empty() : this.keyVaultId;
    }

    /**
     * Key Vault secret name.
     * 
     */
    @Import(name="keyVaultSecretName")
      private final @Nullable Output<String> keyVaultSecretName;

    public Output<String> getKeyVaultSecretName() {
        return this.keyVaultSecretName == null ? Output.empty() : this.keyVaultSecretName;
    }

    /**
     * Kind of resource.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<String> kind;

    public Output<String> getKind() {
        return this.kind == null ? Output.empty() : this.kind;
    }

    /**
     * Resource Location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Name of the certificate.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Name of the resource group to which the resource belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public AppServiceCertificateOrderCertificateArgs(
        Output<String> certificateOrderName,
        @Nullable Output<String> keyVaultId,
        @Nullable Output<String> keyVaultSecretName,
        @Nullable Output<String> kind,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.certificateOrderName = Objects.requireNonNull(certificateOrderName, "expected parameter 'certificateOrderName' to be non-null");
        this.keyVaultId = keyVaultId;
        this.keyVaultSecretName = keyVaultSecretName;
        this.kind = kind;
        this.location = location;
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private AppServiceCertificateOrderCertificateArgs() {
        this.certificateOrderName = Output.empty();
        this.keyVaultId = Output.empty();
        this.keyVaultSecretName = Output.empty();
        this.kind = Output.empty();
        this.location = Output.empty();
        this.name = Output.empty();
        this.resourceGroupName = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppServiceCertificateOrderCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> certificateOrderName;
        private @Nullable Output<String> keyVaultId;
        private @Nullable Output<String> keyVaultSecretName;
        private @Nullable Output<String> kind;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AppServiceCertificateOrderCertificateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateOrderName = defaults.certificateOrderName;
    	      this.keyVaultId = defaults.keyVaultId;
    	      this.keyVaultSecretName = defaults.keyVaultSecretName;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder certificateOrderName(Output<String> certificateOrderName) {
            this.certificateOrderName = Objects.requireNonNull(certificateOrderName);
            return this;
        }
        public Builder certificateOrderName(String certificateOrderName) {
            this.certificateOrderName = Output.of(Objects.requireNonNull(certificateOrderName));
            return this;
        }
        public Builder keyVaultId(@Nullable Output<String> keyVaultId) {
            this.keyVaultId = keyVaultId;
            return this;
        }
        public Builder keyVaultId(@Nullable String keyVaultId) {
            this.keyVaultId = Output.ofNullable(keyVaultId);
            return this;
        }
        public Builder keyVaultSecretName(@Nullable Output<String> keyVaultSecretName) {
            this.keyVaultSecretName = keyVaultSecretName;
            return this;
        }
        public Builder keyVaultSecretName(@Nullable String keyVaultSecretName) {
            this.keyVaultSecretName = Output.ofNullable(keyVaultSecretName);
            return this;
        }
        public Builder kind(@Nullable Output<String> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = Output.ofNullable(kind);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }        public AppServiceCertificateOrderCertificateArgs build() {
            return new AppServiceCertificateOrderCertificateArgs(certificateOrderName, keyVaultId, keyVaultSecretName, kind, location, name, resourceGroupName, tags);
        }
    }
}
