// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation.inputs;

import io.pulumi.azurenative.automation.enums.LinuxUpdateClasses;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Linux specific update configuration.
 * 
 */
public final class LinuxPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final LinuxPropertiesArgs Empty = new LinuxPropertiesArgs();

    /**
     * packages excluded from the software update configuration.
     * 
     */
    @Import(name="excludedPackageNameMasks")
      private final @Nullable Output<List<String>> excludedPackageNameMasks;

    public Output<List<String>> getExcludedPackageNameMasks() {
        return this.excludedPackageNameMasks == null ? Output.empty() : this.excludedPackageNameMasks;
    }

    /**
     * Update classifications included in the software update configuration.
     * 
     */
    @Import(name="includedPackageClassifications")
      private final @Nullable Output<Either<String,LinuxUpdateClasses>> includedPackageClassifications;

    public Output<Either<String,LinuxUpdateClasses>> getIncludedPackageClassifications() {
        return this.includedPackageClassifications == null ? Output.empty() : this.includedPackageClassifications;
    }

    /**
     * packages included from the software update configuration.
     * 
     */
    @Import(name="includedPackageNameMasks")
      private final @Nullable Output<List<String>> includedPackageNameMasks;

    public Output<List<String>> getIncludedPackageNameMasks() {
        return this.includedPackageNameMasks == null ? Output.empty() : this.includedPackageNameMasks;
    }

    /**
     * Reboot setting for the software update configuration.
     * 
     */
    @Import(name="rebootSetting")
      private final @Nullable Output<String> rebootSetting;

    public Output<String> getRebootSetting() {
        return this.rebootSetting == null ? Output.empty() : this.rebootSetting;
    }

    public LinuxPropertiesArgs(
        @Nullable Output<List<String>> excludedPackageNameMasks,
        @Nullable Output<Either<String,LinuxUpdateClasses>> includedPackageClassifications,
        @Nullable Output<List<String>> includedPackageNameMasks,
        @Nullable Output<String> rebootSetting) {
        this.excludedPackageNameMasks = excludedPackageNameMasks;
        this.includedPackageClassifications = includedPackageClassifications;
        this.includedPackageNameMasks = includedPackageNameMasks;
        this.rebootSetting = rebootSetting;
    }

    private LinuxPropertiesArgs() {
        this.excludedPackageNameMasks = Output.empty();
        this.includedPackageClassifications = Output.empty();
        this.includedPackageNameMasks = Output.empty();
        this.rebootSetting = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinuxPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> excludedPackageNameMasks;
        private @Nullable Output<Either<String,LinuxUpdateClasses>> includedPackageClassifications;
        private @Nullable Output<List<String>> includedPackageNameMasks;
        private @Nullable Output<String> rebootSetting;

        public Builder() {
    	      // Empty
        }

        public Builder(LinuxPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludedPackageNameMasks = defaults.excludedPackageNameMasks;
    	      this.includedPackageClassifications = defaults.includedPackageClassifications;
    	      this.includedPackageNameMasks = defaults.includedPackageNameMasks;
    	      this.rebootSetting = defaults.rebootSetting;
        }

        public Builder excludedPackageNameMasks(@Nullable Output<List<String>> excludedPackageNameMasks) {
            this.excludedPackageNameMasks = excludedPackageNameMasks;
            return this;
        }

        public Builder excludedPackageNameMasks(@Nullable List<String> excludedPackageNameMasks) {
            this.excludedPackageNameMasks = Output.ofNullable(excludedPackageNameMasks);
            return this;
        }

        public Builder includedPackageClassifications(@Nullable Output<Either<String,LinuxUpdateClasses>> includedPackageClassifications) {
            this.includedPackageClassifications = includedPackageClassifications;
            return this;
        }

        public Builder includedPackageClassifications(@Nullable Either<String,LinuxUpdateClasses> includedPackageClassifications) {
            this.includedPackageClassifications = Output.ofNullable(includedPackageClassifications);
            return this;
        }

        public Builder includedPackageNameMasks(@Nullable Output<List<String>> includedPackageNameMasks) {
            this.includedPackageNameMasks = includedPackageNameMasks;
            return this;
        }

        public Builder includedPackageNameMasks(@Nullable List<String> includedPackageNameMasks) {
            this.includedPackageNameMasks = Output.ofNullable(includedPackageNameMasks);
            return this;
        }

        public Builder rebootSetting(@Nullable Output<String> rebootSetting) {
            this.rebootSetting = rebootSetting;
            return this;
        }

        public Builder rebootSetting(@Nullable String rebootSetting) {
            this.rebootSetting = Output.ofNullable(rebootSetting);
            return this;
        }
        public LinuxPropertiesArgs build() {
            return new LinuxPropertiesArgs(excludedPackageNameMasks, includedPackageClassifications, includedPackageNameMasks, rebootSetting);
        }
    }
}
