// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.insights.enums.ItemScope;
import io.pulumi.azurenative.insights.enums.ItemType;
import io.pulumi.azurenative.insights.inputs.ApplicationInsightsComponentAnalyticsItemPropertiesArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AnalyticsItemArgs extends io.pulumi.resources.ResourceArgs {

    public static final AnalyticsItemArgs Empty = new AnalyticsItemArgs();

    /**
     * The content of this item
     * 
     */
    @Import(name="content")
      private final @Nullable Output<String> content;

    public Output<String> content() {
        return this.content == null ? Codegen.empty() : this.content;
    }

    /**
     * Internally assigned unique id of the item definition.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * The user-defined name of the item.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Flag indicating whether or not to force save an item. This allows overriding an item if it already exists.
     * 
     */
    @Import(name="overrideItem")
      private final @Nullable Output<Boolean> overrideItem;

    public Output<Boolean> overrideItem() {
        return this.overrideItem == null ? Codegen.empty() : this.overrideItem;
    }

    /**
     * A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<ApplicationInsightsComponentAnalyticsItemPropertiesArgs> properties;

    public Output<ApplicationInsightsComponentAnalyticsItemPropertiesArgs> properties() {
        return this.properties == null ? Codegen.empty() : this.properties;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Application Insights component resource.
     * 
     */
    @Import(name="resourceName", required=true)
      private final Output<String> resourceName;

    public Output<String> resourceName() {
        return this.resourceName;
    }

    /**
     * Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     * 
     */
    @Import(name="scope")
      private final @Nullable Output<Either<String,ItemScope>> scope;

    public Output<Either<String,ItemScope>> scope() {
        return this.scope == null ? Codegen.empty() : this.scope;
    }

    /**
     * Enum indicating if this item definition is owned by a specific user or is shared between all users with access to the Application Insights component.
     * 
     */
    @Import(name="scopePath", required=true)
      private final Output<String> scopePath;

    public Output<String> scopePath() {
        return this.scopePath;
    }

    /**
     * Enum indicating the type of the Analytics item.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<Either<String,ItemType>> type;

    public Output<Either<String,ItemType>> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public AnalyticsItemArgs(
        @Nullable Output<String> content,
        @Nullable Output<String> id,
        @Nullable Output<String> name,
        @Nullable Output<Boolean> overrideItem,
        @Nullable Output<ApplicationInsightsComponentAnalyticsItemPropertiesArgs> properties,
        Output<String> resourceGroupName,
        Output<String> resourceName,
        @Nullable Output<Either<String,ItemScope>> scope,
        Output<String> scopePath,
        @Nullable Output<Either<String,ItemType>> type) {
        this.content = content;
        this.id = id;
        this.name = name;
        this.overrideItem = overrideItem;
        this.properties = properties;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
        this.scope = scope;
        this.scopePath = Objects.requireNonNull(scopePath, "expected parameter 'scopePath' to be non-null");
        this.type = type;
    }

    private AnalyticsItemArgs() {
        this.content = Codegen.empty();
        this.id = Codegen.empty();
        this.name = Codegen.empty();
        this.overrideItem = Codegen.empty();
        this.properties = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.resourceName = Codegen.empty();
        this.scope = Codegen.empty();
        this.scopePath = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnalyticsItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> content;
        private @Nullable Output<String> id;
        private @Nullable Output<String> name;
        private @Nullable Output<Boolean> overrideItem;
        private @Nullable Output<ApplicationInsightsComponentAnalyticsItemPropertiesArgs> properties;
        private Output<String> resourceGroupName;
        private Output<String> resourceName;
        private @Nullable Output<Either<String,ItemScope>> scope;
        private Output<String> scopePath;
        private @Nullable Output<Either<String,ItemType>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(AnalyticsItemArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.overrideItem = defaults.overrideItem;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.scope = defaults.scope;
    	      this.scopePath = defaults.scopePath;
    	      this.type = defaults.type;
        }

        public Builder content(@Nullable Output<String> content) {
            this.content = content;
            return this;
        }
        public Builder content(@Nullable String content) {
            this.content = Codegen.ofNullable(content);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder overrideItem(@Nullable Output<Boolean> overrideItem) {
            this.overrideItem = overrideItem;
            return this;
        }
        public Builder overrideItem(@Nullable Boolean overrideItem) {
            this.overrideItem = Codegen.ofNullable(overrideItem);
            return this;
        }
        public Builder properties(@Nullable Output<ApplicationInsightsComponentAnalyticsItemPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }
        public Builder properties(@Nullable ApplicationInsightsComponentAnalyticsItemPropertiesArgs properties) {
            this.properties = Codegen.ofNullable(properties);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourceName(Output<String> resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Output.of(Objects.requireNonNull(resourceName));
            return this;
        }
        public Builder scope(@Nullable Output<Either<String,ItemScope>> scope) {
            this.scope = scope;
            return this;
        }
        public Builder scope(@Nullable Either<String,ItemScope> scope) {
            this.scope = Codegen.ofNullable(scope);
            return this;
        }
        public Builder scopePath(Output<String> scopePath) {
            this.scopePath = Objects.requireNonNull(scopePath);
            return this;
        }
        public Builder scopePath(String scopePath) {
            this.scopePath = Output.of(Objects.requireNonNull(scopePath));
            return this;
        }
        public Builder type(@Nullable Output<Either<String,ItemType>> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable Either<String,ItemType> type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public AnalyticsItemArgs build() {
            return new AnalyticsItemArgs(content, id, name, overrideItem, properties, resourceGroupName, resourceName, scope, scopePath, type);
        }
    }
}
