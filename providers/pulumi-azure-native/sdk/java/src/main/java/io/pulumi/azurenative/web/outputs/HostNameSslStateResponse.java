// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class HostNameSslStateResponse {
    private final @Nullable String hostType;
    private final @Nullable String name;
    private final @Nullable String sslState;
    private final @Nullable String thumbprint;
    private final @Nullable Boolean toUpdate;
    private final @Nullable String virtualIP;

    @OutputCustomType.Constructor({"hostType","name","sslState","thumbprint","toUpdate","virtualIP"})
    private HostNameSslStateResponse(
        @Nullable String hostType,
        @Nullable String name,
        @Nullable String sslState,
        @Nullable String thumbprint,
        @Nullable Boolean toUpdate,
        @Nullable String virtualIP) {
        this.hostType = hostType;
        this.name = name;
        this.sslState = sslState;
        this.thumbprint = thumbprint;
        this.toUpdate = toUpdate;
        this.virtualIP = virtualIP;
    }

    public Optional<String> getHostType() {
        return Optional.ofNullable(this.hostType);
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> getSslState() {
        return Optional.ofNullable(this.sslState);
    }
    public Optional<String> getThumbprint() {
        return Optional.ofNullable(this.thumbprint);
    }
    public Optional<Boolean> getToUpdate() {
        return Optional.ofNullable(this.toUpdate);
    }
    public Optional<String> getVirtualIP() {
        return Optional.ofNullable(this.virtualIP);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HostNameSslStateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String hostType;
        private @Nullable String name;
        private @Nullable String sslState;
        private @Nullable String thumbprint;
        private @Nullable Boolean toUpdate;
        private @Nullable String virtualIP;

        public Builder() {
    	      // Empty
        }

        public Builder(HostNameSslStateResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostType = defaults.hostType;
    	      this.name = defaults.name;
    	      this.sslState = defaults.sslState;
    	      this.thumbprint = defaults.thumbprint;
    	      this.toUpdate = defaults.toUpdate;
    	      this.virtualIP = defaults.virtualIP;
        }

        public Builder setHostType(@Nullable String hostType) {
            this.hostType = hostType;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setSslState(@Nullable String sslState) {
            this.sslState = sslState;
            return this;
        }

        public Builder setThumbprint(@Nullable String thumbprint) {
            this.thumbprint = thumbprint;
            return this;
        }

        public Builder setToUpdate(@Nullable Boolean toUpdate) {
            this.toUpdate = toUpdate;
            return this;
        }

        public Builder setVirtualIP(@Nullable String virtualIP) {
            this.virtualIP = virtualIP;
            return this;
        }

        public HostNameSslStateResponse build() {
            return new HostNameSslStateResponse(hostType, name, sslState, thumbprint, toUpdate, virtualIP);
        }
    }
}
