// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge.outputs;

import io.pulumi.azurenative.databoxedge.outputs.AsymmetricEncryptedSecretResponse;
import io.pulumi.azurenative.databoxedge.outputs.SystemDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetStorageAccountCredentialResult {
    private final @Nullable AsymmetricEncryptedSecretResponse accountKey;
    private final String accountType;
    private final String alias;
    private final @Nullable String blobDomainName;
    private final @Nullable String connectionString;
    private final String id;
    private final String name;
    private final String sslStatus;
    private final @Nullable String storageAccountId;
    private final SystemDataResponse systemData;
    private final String type;
    private final @Nullable String userName;

    @OutputCustomType.Constructor({"accountKey","accountType","alias","blobDomainName","connectionString","id","name","sslStatus","storageAccountId","systemData","type","userName"})
    private GetStorageAccountCredentialResult(
        @Nullable AsymmetricEncryptedSecretResponse accountKey,
        String accountType,
        String alias,
        @Nullable String blobDomainName,
        @Nullable String connectionString,
        String id,
        String name,
        String sslStatus,
        @Nullable String storageAccountId,
        SystemDataResponse systemData,
        String type,
        @Nullable String userName) {
        this.accountKey = accountKey;
        this.accountType = Objects.requireNonNull(accountType);
        this.alias = Objects.requireNonNull(alias);
        this.blobDomainName = blobDomainName;
        this.connectionString = connectionString;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.sslStatus = Objects.requireNonNull(sslStatus);
        this.storageAccountId = storageAccountId;
        this.systemData = Objects.requireNonNull(systemData);
        this.type = Objects.requireNonNull(type);
        this.userName = userName;
    }

    public Optional<AsymmetricEncryptedSecretResponse> getAccountKey() {
        return Optional.ofNullable(this.accountKey);
    }
    public String getAccountType() {
        return this.accountType;
    }
    public String getAlias() {
        return this.alias;
    }
    public Optional<String> getBlobDomainName() {
        return Optional.ofNullable(this.blobDomainName);
    }
    public Optional<String> getConnectionString() {
        return Optional.ofNullable(this.connectionString);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public String getSslStatus() {
        return this.sslStatus;
    }
    public Optional<String> getStorageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public String getType() {
        return this.type;
    }
    public Optional<String> getUserName() {
        return Optional.ofNullable(this.userName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStorageAccountCredentialResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AsymmetricEncryptedSecretResponse accountKey;
        private String accountType;
        private String alias;
        private @Nullable String blobDomainName;
        private @Nullable String connectionString;
        private String id;
        private String name;
        private String sslStatus;
        private @Nullable String storageAccountId;
        private SystemDataResponse systemData;
        private String type;
        private @Nullable String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStorageAccountCredentialResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountKey = defaults.accountKey;
    	      this.accountType = defaults.accountType;
    	      this.alias = defaults.alias;
    	      this.blobDomainName = defaults.blobDomainName;
    	      this.connectionString = defaults.connectionString;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.sslStatus = defaults.sslStatus;
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
    	      this.userName = defaults.userName;
        }

        public Builder setAccountKey(@Nullable AsymmetricEncryptedSecretResponse accountKey) {
            this.accountKey = accountKey;
            return this;
        }

        public Builder setAccountType(String accountType) {
            this.accountType = Objects.requireNonNull(accountType);
            return this;
        }

        public Builder setAlias(String alias) {
            this.alias = Objects.requireNonNull(alias);
            return this;
        }

        public Builder setBlobDomainName(@Nullable String blobDomainName) {
            this.blobDomainName = blobDomainName;
            return this;
        }

        public Builder setConnectionString(@Nullable String connectionString) {
            this.connectionString = connectionString;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSslStatus(String sslStatus) {
            this.sslStatus = Objects.requireNonNull(sslStatus);
            return this;
        }

        public Builder setStorageAccountId(@Nullable String storageAccountId) {
            this.storageAccountId = storageAccountId;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUserName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }

        public GetStorageAccountCredentialResult build() {
            return new GetStorageAccountCredentialResult(accountKey, accountType, alias, blobDomainName, connectionString, id, name, sslStatus, storageAccountId, systemData, type, userName);
        }
    }
}
