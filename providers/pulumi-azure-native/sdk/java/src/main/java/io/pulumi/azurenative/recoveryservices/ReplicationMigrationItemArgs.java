// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices;

import io.pulumi.azurenative.recoveryservices.inputs.EnableMigrationInputPropertiesArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ReplicationMigrationItemArgs extends io.pulumi.resources.ResourceArgs {

    public static final ReplicationMigrationItemArgs Empty = new ReplicationMigrationItemArgs();

    /**
     * Fabric name.
     * 
     */
    @Import(name="fabricName", required=true)
      private final Output<String> fabricName;

    public Output<String> getFabricName() {
        return this.fabricName;
    }

    /**
     * Migration item name.
     * 
     */
    @Import(name="migrationItemName")
      private final @Nullable Output<String> migrationItemName;

    public Output<String> getMigrationItemName() {
        return this.migrationItemName == null ? Codegen.empty() : this.migrationItemName;
    }

    /**
     * Enable migration input properties.
     * 
     */
    @Import(name="properties", required=true)
      private final Output<EnableMigrationInputPropertiesArgs> properties;

    public Output<EnableMigrationInputPropertiesArgs> getProperties() {
        return this.properties;
    }

    /**
     * Protection container name.
     * 
     */
    @Import(name="protectionContainerName", required=true)
      private final Output<String> protectionContainerName;

    public Output<String> getProtectionContainerName() {
        return this.protectionContainerName;
    }

    /**
     * The name of the resource group where the recovery services vault is present.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the recovery services vault.
     * 
     */
    @Import(name="resourceName", required=true)
      private final Output<String> resourceName;

    public Output<String> getPropResourceName() {
        return this.resourceName;
    }

    public ReplicationMigrationItemArgs(
        Output<String> fabricName,
        @Nullable Output<String> migrationItemName,
        Output<EnableMigrationInputPropertiesArgs> properties,
        Output<String> protectionContainerName,
        Output<String> resourceGroupName,
        Output<String> resourceName) {
        this.fabricName = Objects.requireNonNull(fabricName, "expected parameter 'fabricName' to be non-null");
        this.migrationItemName = migrationItemName;
        this.properties = Objects.requireNonNull(properties, "expected parameter 'properties' to be non-null");
        this.protectionContainerName = Objects.requireNonNull(protectionContainerName, "expected parameter 'protectionContainerName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
    }

    private ReplicationMigrationItemArgs() {
        this.fabricName = Codegen.empty();
        this.migrationItemName = Codegen.empty();
        this.properties = Codegen.empty();
        this.protectionContainerName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.resourceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicationMigrationItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> fabricName;
        private @Nullable Output<String> migrationItemName;
        private Output<EnableMigrationInputPropertiesArgs> properties;
        private Output<String> protectionContainerName;
        private Output<String> resourceGroupName;
        private Output<String> resourceName;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicationMigrationItemArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fabricName = defaults.fabricName;
    	      this.migrationItemName = defaults.migrationItemName;
    	      this.properties = defaults.properties;
    	      this.protectionContainerName = defaults.protectionContainerName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
        }

        public Builder fabricName(Output<String> fabricName) {
            this.fabricName = Objects.requireNonNull(fabricName);
            return this;
        }
        public Builder fabricName(String fabricName) {
            this.fabricName = Output.of(Objects.requireNonNull(fabricName));
            return this;
        }
        public Builder migrationItemName(@Nullable Output<String> migrationItemName) {
            this.migrationItemName = migrationItemName;
            return this;
        }
        public Builder migrationItemName(@Nullable String migrationItemName) {
            this.migrationItemName = Codegen.ofNullable(migrationItemName);
            return this;
        }
        public Builder properties(Output<EnableMigrationInputPropertiesArgs> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }
        public Builder properties(EnableMigrationInputPropertiesArgs properties) {
            this.properties = Output.of(Objects.requireNonNull(properties));
            return this;
        }
        public Builder protectionContainerName(Output<String> protectionContainerName) {
            this.protectionContainerName = Objects.requireNonNull(protectionContainerName);
            return this;
        }
        public Builder protectionContainerName(String protectionContainerName) {
            this.protectionContainerName = Output.of(Objects.requireNonNull(protectionContainerName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourceName(Output<String> resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Output.of(Objects.requireNonNull(resourceName));
            return this;
        }        public ReplicationMigrationItemArgs build() {
            return new ReplicationMigrationItemArgs(fabricName, migrationItemName, properties, protectionContainerName, resourceGroupName, resourceName);
        }
    }
}
