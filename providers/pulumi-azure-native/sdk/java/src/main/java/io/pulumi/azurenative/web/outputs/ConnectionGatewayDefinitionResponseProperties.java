// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.ConnectionGatewayReferenceResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ConnectionGatewayDefinitionResponseProperties {
    /**
     * The URI of the backend
     * 
     */
    private final @Nullable String backendUri;
    /**
     * The gateway installation reference
     * 
     */
    private final @Nullable ConnectionGatewayReferenceResponse connectionGatewayInstallation;
    /**
     * The gateway admin
     * 
     */
    private final @Nullable List<String> contactInformation;
    /**
     * The gateway description
     * 
     */
    private final @Nullable String description;
    /**
     * The gateway display name
     * 
     */
    private final @Nullable String displayName;
    /**
     * The machine name of the gateway
     * 
     */
    private final @Nullable String machineName;
    /**
     * The gateway status
     * 
     */
    private final @Nullable Object status;

    @OutputCustomType.Constructor({"backendUri","connectionGatewayInstallation","contactInformation","description","displayName","machineName","status"})
    private ConnectionGatewayDefinitionResponseProperties(
        @Nullable String backendUri,
        @Nullable ConnectionGatewayReferenceResponse connectionGatewayInstallation,
        @Nullable List<String> contactInformation,
        @Nullable String description,
        @Nullable String displayName,
        @Nullable String machineName,
        @Nullable Object status) {
        this.backendUri = backendUri;
        this.connectionGatewayInstallation = connectionGatewayInstallation;
        this.contactInformation = contactInformation;
        this.description = description;
        this.displayName = displayName;
        this.machineName = machineName;
        this.status = status;
    }

    /**
     * The URI of the backend
     * 
     */
    public Optional<String> getBackendUri() {
        return Optional.ofNullable(this.backendUri);
    }
    /**
     * The gateway installation reference
     * 
     */
    public Optional<ConnectionGatewayReferenceResponse> getConnectionGatewayInstallation() {
        return Optional.ofNullable(this.connectionGatewayInstallation);
    }
    /**
     * The gateway admin
     * 
     */
    public List<String> getContactInformation() {
        return this.contactInformation == null ? List.of() : this.contactInformation;
    }
    /**
     * The gateway description
     * 
     */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * The gateway display name
     * 
     */
    public Optional<String> getDisplayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * The machine name of the gateway
     * 
     */
    public Optional<String> getMachineName() {
        return Optional.ofNullable(this.machineName);
    }
    /**
     * The gateway status
     * 
     */
    public Optional<Object> getStatus() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionGatewayDefinitionResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String backendUri;
        private @Nullable ConnectionGatewayReferenceResponse connectionGatewayInstallation;
        private @Nullable List<String> contactInformation;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable String machineName;
        private @Nullable Object status;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionGatewayDefinitionResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendUri = defaults.backendUri;
    	      this.connectionGatewayInstallation = defaults.connectionGatewayInstallation;
    	      this.contactInformation = defaults.contactInformation;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.machineName = defaults.machineName;
    	      this.status = defaults.status;
        }

        public Builder setBackendUri(@Nullable String backendUri) {
            this.backendUri = backendUri;
            return this;
        }

        public Builder setConnectionGatewayInstallation(@Nullable ConnectionGatewayReferenceResponse connectionGatewayInstallation) {
            this.connectionGatewayInstallation = connectionGatewayInstallation;
            return this;
        }

        public Builder setContactInformation(@Nullable List<String> contactInformation) {
            this.contactInformation = contactInformation;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setMachineName(@Nullable String machineName) {
            this.machineName = machineName;
            return this;
        }

        public Builder setStatus(@Nullable Object status) {
            this.status = status;
            return this;
        }

        public ConnectionGatewayDefinitionResponseProperties build() {
            return new ConnectionGatewayDefinitionResponseProperties(backendUri, connectionGatewayInstallation, contactInformation, description, displayName, machineName, status);
        }
    }
}
