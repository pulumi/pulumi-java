// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.outputs;

import io.pulumi.azurenative.compute.outputs.ApiErrorResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class AvailablePatchSummaryResponse {
    private final String assessmentActivityId;
    private final Integer criticalAndSecurityPatchCount;
    private final ApiErrorResponse error;
    private final String lastModifiedTime;
    private final Integer otherPatchCount;
    private final Boolean rebootPending;
    private final String startTime;
    private final String status;

    @OutputCustomType.Constructor({"assessmentActivityId","criticalAndSecurityPatchCount","error","lastModifiedTime","otherPatchCount","rebootPending","startTime","status"})
    private AvailablePatchSummaryResponse(
        String assessmentActivityId,
        Integer criticalAndSecurityPatchCount,
        ApiErrorResponse error,
        String lastModifiedTime,
        Integer otherPatchCount,
        Boolean rebootPending,
        String startTime,
        String status) {
        this.assessmentActivityId = Objects.requireNonNull(assessmentActivityId);
        this.criticalAndSecurityPatchCount = Objects.requireNonNull(criticalAndSecurityPatchCount);
        this.error = Objects.requireNonNull(error);
        this.lastModifiedTime = Objects.requireNonNull(lastModifiedTime);
        this.otherPatchCount = Objects.requireNonNull(otherPatchCount);
        this.rebootPending = Objects.requireNonNull(rebootPending);
        this.startTime = Objects.requireNonNull(startTime);
        this.status = Objects.requireNonNull(status);
    }

    public String getAssessmentActivityId() {
        return this.assessmentActivityId;
    }
    public Integer getCriticalAndSecurityPatchCount() {
        return this.criticalAndSecurityPatchCount;
    }
    public ApiErrorResponse getError() {
        return this.error;
    }
    public String getLastModifiedTime() {
        return this.lastModifiedTime;
    }
    public Integer getOtherPatchCount() {
        return this.otherPatchCount;
    }
    public Boolean getRebootPending() {
        return this.rebootPending;
    }
    public String getStartTime() {
        return this.startTime;
    }
    public String getStatus() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AvailablePatchSummaryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String assessmentActivityId;
        private Integer criticalAndSecurityPatchCount;
        private ApiErrorResponse error;
        private String lastModifiedTime;
        private Integer otherPatchCount;
        private Boolean rebootPending;
        private String startTime;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(AvailablePatchSummaryResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assessmentActivityId = defaults.assessmentActivityId;
    	      this.criticalAndSecurityPatchCount = defaults.criticalAndSecurityPatchCount;
    	      this.error = defaults.error;
    	      this.lastModifiedTime = defaults.lastModifiedTime;
    	      this.otherPatchCount = defaults.otherPatchCount;
    	      this.rebootPending = defaults.rebootPending;
    	      this.startTime = defaults.startTime;
    	      this.status = defaults.status;
        }

        public Builder setAssessmentActivityId(String assessmentActivityId) {
            this.assessmentActivityId = Objects.requireNonNull(assessmentActivityId);
            return this;
        }

        public Builder setCriticalAndSecurityPatchCount(Integer criticalAndSecurityPatchCount) {
            this.criticalAndSecurityPatchCount = Objects.requireNonNull(criticalAndSecurityPatchCount);
            return this;
        }

        public Builder setError(ApiErrorResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }

        public Builder setLastModifiedTime(String lastModifiedTime) {
            this.lastModifiedTime = Objects.requireNonNull(lastModifiedTime);
            return this;
        }

        public Builder setOtherPatchCount(Integer otherPatchCount) {
            this.otherPatchCount = Objects.requireNonNull(otherPatchCount);
            return this;
        }

        public Builder setRebootPending(Boolean rebootPending) {
            this.rebootPending = Objects.requireNonNull(rebootPending);
            return this;
        }

        public Builder setStartTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public AvailablePatchSummaryResponse build() {
            return new AvailablePatchSummaryResponse(assessmentActivityId, criticalAndSecurityPatchCount, error, lastModifiedTime, otherPatchCount, rebootPending, startTime, status);
        }
    }
}
