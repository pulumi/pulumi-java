// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.scheduler.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OAuthAuthenticationArgs extends io.pulumi.resources.ResourceArgs {

    public static final OAuthAuthenticationArgs Empty = new OAuthAuthenticationArgs();

    /**
     * Gets or sets the audience.
     * 
     */
    @Import(name="audience")
      private final @Nullable Output<String> audience;

    public Output<String> getAudience() {
        return this.audience == null ? Output.empty() : this.audience;
    }

    /**
     * Gets or sets the client identifier.
     * 
     */
    @Import(name="clientId")
      private final @Nullable Output<String> clientId;

    public Output<String> getClientId() {
        return this.clientId == null ? Output.empty() : this.clientId;
    }

    /**
     * Gets or sets the secret, return value will always be empty.
     * 
     */
    @Import(name="secret")
      private final @Nullable Output<String> secret;

    public Output<String> getSecret() {
        return this.secret == null ? Output.empty() : this.secret;
    }

    /**
     * Gets or sets the tenant.
     * 
     */
    @Import(name="tenant")
      private final @Nullable Output<String> tenant;

    public Output<String> getTenant() {
        return this.tenant == null ? Output.empty() : this.tenant;
    }

    /**
     * Gets or sets the HTTP authentication type.
     * Expected value is 'ActiveDirectoryOAuth'.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    public OAuthAuthenticationArgs(
        @Nullable Output<String> audience,
        @Nullable Output<String> clientId,
        @Nullable Output<String> secret,
        @Nullable Output<String> tenant,
        Output<String> type) {
        this.audience = audience;
        this.clientId = clientId;
        this.secret = secret;
        this.tenant = tenant;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private OAuthAuthenticationArgs() {
        this.audience = Output.empty();
        this.clientId = Output.empty();
        this.secret = Output.empty();
        this.tenant = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OAuthAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> audience;
        private @Nullable Output<String> clientId;
        private @Nullable Output<String> secret;
        private @Nullable Output<String> tenant;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(OAuthAuthenticationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audience = defaults.audience;
    	      this.clientId = defaults.clientId;
    	      this.secret = defaults.secret;
    	      this.tenant = defaults.tenant;
    	      this.type = defaults.type;
        }

        public Builder audience(@Nullable Output<String> audience) {
            this.audience = audience;
            return this;
        }

        public Builder audience(@Nullable String audience) {
            this.audience = Output.ofNullable(audience);
            return this;
        }

        public Builder clientId(@Nullable Output<String> clientId) {
            this.clientId = clientId;
            return this;
        }

        public Builder clientId(@Nullable String clientId) {
            this.clientId = Output.ofNullable(clientId);
            return this;
        }

        public Builder secret(@Nullable Output<String> secret) {
            this.secret = secret;
            return this;
        }

        public Builder secret(@Nullable String secret) {
            this.secret = Output.ofNullable(secret);
            return this;
        }

        public Builder tenant(@Nullable Output<String> tenant) {
            this.tenant = tenant;
            return this;
        }

        public Builder tenant(@Nullable String tenant) {
            this.tenant = Output.ofNullable(tenant);
            return this;
        }

        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }
        public OAuthAuthenticationArgs build() {
            return new OAuthAuthenticationArgs(audience, clientId, secret, tenant, type);
        }
    }
}
