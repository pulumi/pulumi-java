// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.authorization;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.authorization.ManagementLockAtResourceLevelArgs;
import io.pulumi.azurenative.authorization.outputs.ManagementLockOwnerResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The lock information.
 * API Version: 2017-04-01.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Create management lock at resource level
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var managementLockAtResourceLevel = new AzureNative.Authorization.ManagementLockAtResourceLevel("managementLockAtResourceLevel", new AzureNative.Authorization.ManagementLockAtResourceLevelArgs
 *         {
 *             Level = "ReadOnly",
 *             LockName = "testlock",
 *             ParentResourcePath = "parentResourcePath",
 *             ResourceGroupName = "resourcegroupname",
 *             ResourceName = "teststorageaccount",
 *             ResourceProviderNamespace = "Microsoft.Storage",
 *             ResourceType = "storageAccounts",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	authorization "github.com/pulumi/pulumi-azure-native/sdk/go/azure/authorization"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := authorization.NewManagementLockAtResourceLevel(ctx, "managementLockAtResourceLevel", &authorization.ManagementLockAtResourceLevelArgs{
 * 			Level:                     pulumi.String("ReadOnly"),
 * 			LockName:                  pulumi.String("testlock"),
 * 			ParentResourcePath:        pulumi.String("parentResourcePath"),
 * 			ResourceGroupName:         pulumi.String("resourcegroupname"),
 * 			ResourceName:              pulumi.String("teststorageaccount"),
 * 			ResourceProviderNamespace: pulumi.String("Microsoft.Storage"),
 * 			ResourceType:              pulumi.String("storageAccounts"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const managementLockAtResourceLevel = new azure_native.authorization.ManagementLockAtResourceLevel("managementLockAtResourceLevel", {
 *     level: "ReadOnly",
 *     lockName: "testlock",
 *     parentResourcePath: "parentResourcePath",
 *     resourceGroupName: "resourcegroupname",
 *     resourceName: "teststorageaccount",
 *     resourceProviderNamespace: "Microsoft.Storage",
 *     resourceType: "storageAccounts",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * management_lock_at_resource_level = azure_native.authorization.ManagementLockAtResourceLevel("managementLockAtResourceLevel",
 *     level="ReadOnly",
 *     lock_name="testlock",
 *     parent_resource_path="parentResourcePath",
 *     resource_group_name="resourcegroupname",
 *     resource_name="teststorageaccount",
 *     resource_provider_namespace="Microsoft.Storage",
 *     resource_type="storageAccounts")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:authorization:ManagementLockAtResourceLevel testlock /subscriptions/subscriptionId/resourceGroups/resourcegroupname/providers/Microsoft.Authorization/locks/testlock 
 * ```
 * 
 */
@ResourceType(type="azure-native:authorization:ManagementLockAtResourceLevel")
public class ManagementLockAtResourceLevel extends io.pulumi.resources.CustomResource {
    /**
     * The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized users are able to read and modify the resources, but not delete. ReadOnly means authorized users can only read from a resource, but they can't modify or delete it.
     */
    @Export(name="level", type=String.class, parameters={})
    private Output<String> level;

    /**
     * @return The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized users are able to read and modify the resources, but not delete. ReadOnly means authorized users can only read from a resource, but they can't modify or delete it.
     */
    public Output<String> getLevel() {
        return this.level;
    }
    /**
     * The name of the lock.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the lock.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Notes about the lock. Maximum of 512 characters.
     */
    @Export(name="notes", type=String.class, parameters={})
    private Output</* @Nullable */ String> notes;

    /**
     * @return Notes about the lock. Maximum of 512 characters.
     */
    public Output</* @Nullable */ String> getNotes() {
        return this.notes;
    }
    /**
     * The owners of the lock.
     */
    @Export(name="owners", type=List.class, parameters={ManagementLockOwnerResponse.class})
    private Output</* @Nullable */ List<ManagementLockOwnerResponse>> owners;

    /**
     * @return The owners of the lock.
     */
    public Output</* @Nullable */ List<ManagementLockOwnerResponse>> getOwners() {
        return this.owners;
    }
    /**
     * The resource type of the lock - Microsoft.Authorization/locks.
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The resource type of the lock - Microsoft.Authorization/locks.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagementLockAtResourceLevel(String name) {
        this(name, ManagementLockAtResourceLevelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagementLockAtResourceLevel(String name, ManagementLockAtResourceLevelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagementLockAtResourceLevel(String name, ManagementLockAtResourceLevelArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:authorization:ManagementLockAtResourceLevel", name, args == null ? ManagementLockAtResourceLevelArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ManagementLockAtResourceLevel(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:authorization:ManagementLockAtResourceLevel", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:authorization/v20160901:ManagementLockAtResourceLevel").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20170401:ManagementLockAtResourceLevel").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20200501:ManagementLockAtResourceLevel").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagementLockAtResourceLevel get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ManagementLockAtResourceLevel(name, id, options);
    }
}
