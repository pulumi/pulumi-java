// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.vmwarecloudsimple.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Guest OS nic customization
 * 
 */
public final class GuestOSNICCustomizationArgs extends io.pulumi.resources.ResourceArgs {

    public static final GuestOSNICCustomizationArgs Empty = new GuestOSNICCustomizationArgs();

    /**
     * IP address allocation method
     * 
     */
    @Import(name="allocation")
      private final @Nullable Output<String> allocation;

    public Output<String> getAllocation() {
        return this.allocation == null ? Codegen.empty() : this.allocation;
    }

    /**
     * List of dns servers to use
     * 
     */
    @Import(name="dnsServers")
      private final @Nullable Output<List<String>> dnsServers;

    public Output<List<String>> getDnsServers() {
        return this.dnsServers == null ? Codegen.empty() : this.dnsServers;
    }

    /**
     * Gateway addresses assigned to nic
     * 
     */
    @Import(name="gateway")
      private final @Nullable Output<List<String>> gateway;

    public Output<List<String>> getGateway() {
        return this.gateway == null ? Codegen.empty() : this.gateway;
    }

    /**
     * Static ip address for nic
     * 
     */
    @Import(name="ipAddress")
      private final @Nullable Output<String> ipAddress;

    public Output<String> getIpAddress() {
        return this.ipAddress == null ? Codegen.empty() : this.ipAddress;
    }

    /**
     * Network mask for nic
     * 
     */
    @Import(name="mask")
      private final @Nullable Output<String> mask;

    public Output<String> getMask() {
        return this.mask == null ? Codegen.empty() : this.mask;
    }

    /**
     * primary WINS server for Windows
     * 
     */
    @Import(name="primaryWinsServer")
      private final @Nullable Output<String> primaryWinsServer;

    public Output<String> getPrimaryWinsServer() {
        return this.primaryWinsServer == null ? Codegen.empty() : this.primaryWinsServer;
    }

    /**
     * secondary WINS server for Windows
     * 
     */
    @Import(name="secondaryWinsServer")
      private final @Nullable Output<String> secondaryWinsServer;

    public Output<String> getSecondaryWinsServer() {
        return this.secondaryWinsServer == null ? Codegen.empty() : this.secondaryWinsServer;
    }

    public GuestOSNICCustomizationArgs(
        @Nullable Output<String> allocation,
        @Nullable Output<List<String>> dnsServers,
        @Nullable Output<List<String>> gateway,
        @Nullable Output<String> ipAddress,
        @Nullable Output<String> mask,
        @Nullable Output<String> primaryWinsServer,
        @Nullable Output<String> secondaryWinsServer) {
        this.allocation = allocation;
        this.dnsServers = dnsServers;
        this.gateway = gateway;
        this.ipAddress = ipAddress;
        this.mask = mask;
        this.primaryWinsServer = primaryWinsServer;
        this.secondaryWinsServer = secondaryWinsServer;
    }

    private GuestOSNICCustomizationArgs() {
        this.allocation = Codegen.empty();
        this.dnsServers = Codegen.empty();
        this.gateway = Codegen.empty();
        this.ipAddress = Codegen.empty();
        this.mask = Codegen.empty();
        this.primaryWinsServer = Codegen.empty();
        this.secondaryWinsServer = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GuestOSNICCustomizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> allocation;
        private @Nullable Output<List<String>> dnsServers;
        private @Nullable Output<List<String>> gateway;
        private @Nullable Output<String> ipAddress;
        private @Nullable Output<String> mask;
        private @Nullable Output<String> primaryWinsServer;
        private @Nullable Output<String> secondaryWinsServer;

        public Builder() {
    	      // Empty
        }

        public Builder(GuestOSNICCustomizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocation = defaults.allocation;
    	      this.dnsServers = defaults.dnsServers;
    	      this.gateway = defaults.gateway;
    	      this.ipAddress = defaults.ipAddress;
    	      this.mask = defaults.mask;
    	      this.primaryWinsServer = defaults.primaryWinsServer;
    	      this.secondaryWinsServer = defaults.secondaryWinsServer;
        }

        public Builder allocation(@Nullable Output<String> allocation) {
            this.allocation = allocation;
            return this;
        }
        public Builder allocation(@Nullable String allocation) {
            this.allocation = Codegen.ofNullable(allocation);
            return this;
        }
        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            this.dnsServers = dnsServers;
            return this;
        }
        public Builder dnsServers(@Nullable List<String> dnsServers) {
            this.dnsServers = Codegen.ofNullable(dnsServers);
            return this;
        }
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }
        public Builder gateway(@Nullable Output<List<String>> gateway) {
            this.gateway = gateway;
            return this;
        }
        public Builder gateway(@Nullable List<String> gateway) {
            this.gateway = Codegen.ofNullable(gateway);
            return this;
        }
        public Builder gateway(String... gateway) {
            return gateway(List.of(gateway));
        }
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = Codegen.ofNullable(ipAddress);
            return this;
        }
        public Builder mask(@Nullable Output<String> mask) {
            this.mask = mask;
            return this;
        }
        public Builder mask(@Nullable String mask) {
            this.mask = Codegen.ofNullable(mask);
            return this;
        }
        public Builder primaryWinsServer(@Nullable Output<String> primaryWinsServer) {
            this.primaryWinsServer = primaryWinsServer;
            return this;
        }
        public Builder primaryWinsServer(@Nullable String primaryWinsServer) {
            this.primaryWinsServer = Codegen.ofNullable(primaryWinsServer);
            return this;
        }
        public Builder secondaryWinsServer(@Nullable Output<String> secondaryWinsServer) {
            this.secondaryWinsServer = secondaryWinsServer;
            return this;
        }
        public Builder secondaryWinsServer(@Nullable String secondaryWinsServer) {
            this.secondaryWinsServer = Codegen.ofNullable(secondaryWinsServer);
            return this;
        }        public GuestOSNICCustomizationArgs build() {
            return new GuestOSNICCustomizationArgs(allocation, dnsServers, gateway, ipAddress, mask, primaryWinsServer, secondaryWinsServer);
        }
    }
}
