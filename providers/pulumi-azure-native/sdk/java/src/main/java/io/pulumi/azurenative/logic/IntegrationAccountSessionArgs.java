// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IntegrationAccountSessionArgs extends io.pulumi.resources.ResourceArgs {

    public static final IntegrationAccountSessionArgs Empty = new IntegrationAccountSessionArgs();

    /**
     * The session content.
     * 
     */
    @InputImport(name="content")
      private final @Nullable Input<Object> content;

    public Input<Object> getContent() {
        return this.content == null ? Input.empty() : this.content;
    }

    /**
     * The integration account name.
     * 
     */
    @InputImport(name="integrationAccountName", required=true)
      private final Input<String> integrationAccountName;

    public Input<String> getIntegrationAccountName() {
        return this.integrationAccountName;
    }

    /**
     * The resource location.
     * 
     */
    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The resource group name.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The integration account session name.
     * 
     */
    @InputImport(name="sessionName")
      private final @Nullable Input<String> sessionName;

    public Input<String> getSessionName() {
        return this.sessionName == null ? Input.empty() : this.sessionName;
    }

    /**
     * The resource tags.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public IntegrationAccountSessionArgs(
        @Nullable Input<Object> content,
        Input<String> integrationAccountName,
        @Nullable Input<String> location,
        Input<String> resourceGroupName,
        @Nullable Input<String> sessionName,
        @Nullable Input<Map<String,String>> tags) {
        this.content = content;
        this.integrationAccountName = Objects.requireNonNull(integrationAccountName, "expected parameter 'integrationAccountName' to be non-null");
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sessionName = sessionName;
        this.tags = tags;
    }

    private IntegrationAccountSessionArgs() {
        this.content = Input.empty();
        this.integrationAccountName = Input.empty();
        this.location = Input.empty();
        this.resourceGroupName = Input.empty();
        this.sessionName = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationAccountSessionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Object> content;
        private Input<String> integrationAccountName;
        private @Nullable Input<String> location;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> sessionName;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationAccountSessionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.integrationAccountName = defaults.integrationAccountName;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sessionName = defaults.sessionName;
    	      this.tags = defaults.tags;
        }

        public Builder setContent(@Nullable Input<Object> content) {
            this.content = content;
            return this;
        }

        public Builder setContent(@Nullable Object content) {
            this.content = Input.ofNullable(content);
            return this;
        }

        public Builder setIntegrationAccountName(Input<String> integrationAccountName) {
            this.integrationAccountName = Objects.requireNonNull(integrationAccountName);
            return this;
        }

        public Builder setIntegrationAccountName(String integrationAccountName) {
            this.integrationAccountName = Input.of(Objects.requireNonNull(integrationAccountName));
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setSessionName(@Nullable Input<String> sessionName) {
            this.sessionName = sessionName;
            return this;
        }

        public Builder setSessionName(@Nullable String sessionName) {
            this.sessionName = Input.ofNullable(sessionName);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public IntegrationAccountSessionArgs build() {
            return new IntegrationAccountSessionArgs(content, integrationAccountName, location, resourceGroupName, sessionName, tags);
        }
    }
}
