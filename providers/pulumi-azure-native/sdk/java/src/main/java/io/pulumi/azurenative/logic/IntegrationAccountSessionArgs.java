// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IntegrationAccountSessionArgs extends io.pulumi.resources.ResourceArgs {

    public static final IntegrationAccountSessionArgs Empty = new IntegrationAccountSessionArgs();

    /**
     * The session content.
     * 
     */
    @Import(name="content")
      private final @Nullable Output<Object> content;

    public Output<Object> getContent() {
        return this.content == null ? Output.empty() : this.content;
    }

    /**
     * The integration account name.
     * 
     */
    @Import(name="integrationAccountName", required=true)
      private final Output<String> integrationAccountName;

    public Output<String> getIntegrationAccountName() {
        return this.integrationAccountName;
    }

    /**
     * The resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The integration account session name.
     * 
     */
    @Import(name="sessionName")
      private final @Nullable Output<String> sessionName;

    public Output<String> getSessionName() {
        return this.sessionName == null ? Output.empty() : this.sessionName;
    }

    /**
     * The resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public IntegrationAccountSessionArgs(
        @Nullable Output<Object> content,
        Output<String> integrationAccountName,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<String> sessionName,
        @Nullable Output<Map<String,String>> tags) {
        this.content = content;
        this.integrationAccountName = Objects.requireNonNull(integrationAccountName, "expected parameter 'integrationAccountName' to be non-null");
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sessionName = sessionName;
        this.tags = tags;
    }

    private IntegrationAccountSessionArgs() {
        this.content = Output.empty();
        this.integrationAccountName = Output.empty();
        this.location = Output.empty();
        this.resourceGroupName = Output.empty();
        this.sessionName = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationAccountSessionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> content;
        private Output<String> integrationAccountName;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> sessionName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationAccountSessionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.integrationAccountName = defaults.integrationAccountName;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sessionName = defaults.sessionName;
    	      this.tags = defaults.tags;
        }

        public Builder content(@Nullable Output<Object> content) {
            this.content = content;
            return this;
        }
        public Builder content(@Nullable Object content) {
            this.content = Output.ofNullable(content);
            return this;
        }
        public Builder integrationAccountName(Output<String> integrationAccountName) {
            this.integrationAccountName = Objects.requireNonNull(integrationAccountName);
            return this;
        }
        public Builder integrationAccountName(String integrationAccountName) {
            this.integrationAccountName = Output.of(Objects.requireNonNull(integrationAccountName));
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder sessionName(@Nullable Output<String> sessionName) {
            this.sessionName = sessionName;
            return this;
        }
        public Builder sessionName(@Nullable String sessionName) {
            this.sessionName = Output.ofNullable(sessionName);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }        public IntegrationAccountSessionArgs build() {
            return new IntegrationAccountSessionArgs(content, integrationAccountName, location, resourceGroupName, sessionName, tags);
        }
    }
}
