// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.netapp.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetBackupResult {
    private final String backupId;
    private final String backupType;
    private final String creationDate;
    private final String failureReason;
    private final String id;
    private final @Nullable String label;
    private final String location;
    private final String name;
    private final String provisioningState;
    private final Double size;
    private final String type;
    private final String volumeName;

    @OutputCustomType.Constructor({"backupId","backupType","creationDate","failureReason","id","label","location","name","provisioningState","size","type","volumeName"})
    private GetBackupResult(
        String backupId,
        String backupType,
        String creationDate,
        String failureReason,
        String id,
        @Nullable String label,
        String location,
        String name,
        String provisioningState,
        Double size,
        String type,
        String volumeName) {
        this.backupId = Objects.requireNonNull(backupId);
        this.backupType = Objects.requireNonNull(backupType);
        this.creationDate = Objects.requireNonNull(creationDate);
        this.failureReason = Objects.requireNonNull(failureReason);
        this.id = Objects.requireNonNull(id);
        this.label = label;
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.size = Objects.requireNonNull(size);
        this.type = Objects.requireNonNull(type);
        this.volumeName = Objects.requireNonNull(volumeName);
    }

    public String getBackupId() {
        return this.backupId;
    }
    public String getBackupType() {
        return this.backupType;
    }
    public String getCreationDate() {
        return this.creationDate;
    }
    public String getFailureReason() {
        return this.failureReason;
    }
    public String getId() {
        return this.id;
    }
    public Optional<String> getLabel() {
        return Optional.ofNullable(this.label);
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Double getSize() {
        return this.size;
    }
    public String getType() {
        return this.type;
    }
    public String getVolumeName() {
        return this.volumeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String backupId;
        private String backupType;
        private String creationDate;
        private String failureReason;
        private String id;
        private @Nullable String label;
        private String location;
        private String name;
        private String provisioningState;
        private Double size;
        private String type;
        private String volumeName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBackupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupId = defaults.backupId;
    	      this.backupType = defaults.backupType;
    	      this.creationDate = defaults.creationDate;
    	      this.failureReason = defaults.failureReason;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.size = defaults.size;
    	      this.type = defaults.type;
    	      this.volumeName = defaults.volumeName;
        }

        public Builder setBackupId(String backupId) {
            this.backupId = Objects.requireNonNull(backupId);
            return this;
        }

        public Builder setBackupType(String backupType) {
            this.backupType = Objects.requireNonNull(backupType);
            return this;
        }

        public Builder setCreationDate(String creationDate) {
            this.creationDate = Objects.requireNonNull(creationDate);
            return this;
        }

        public Builder setFailureReason(String failureReason) {
            this.failureReason = Objects.requireNonNull(failureReason);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLabel(@Nullable String label) {
            this.label = label;
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setSize(Double size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVolumeName(String volumeName) {
            this.volumeName = Objects.requireNonNull(volumeName);
            return this;
        }

        public GetBackupResult build() {
            return new GetBackupResult(backupId, backupType, creationDate, failureReason, id, label, location, name, provisioningState, size, type, volumeName);
        }
    }
}
