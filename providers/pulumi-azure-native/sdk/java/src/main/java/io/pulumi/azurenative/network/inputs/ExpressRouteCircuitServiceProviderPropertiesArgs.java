// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Contains ServiceProviderProperties in an ExpressRouteCircuit.
 * 
 */
public final class ExpressRouteCircuitServiceProviderPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final ExpressRouteCircuitServiceProviderPropertiesArgs Empty = new ExpressRouteCircuitServiceProviderPropertiesArgs();

    /**
     * The BandwidthInMbps.
     * 
     */
    @InputImport(name="bandwidthInMbps")
    private final @Nullable Input<Integer> bandwidthInMbps;

    public Input<Integer> getBandwidthInMbps() {
        return this.bandwidthInMbps == null ? Input.empty() : this.bandwidthInMbps;
    }

    /**
     * The peering location.
     * 
     */
    @InputImport(name="peeringLocation")
    private final @Nullable Input<String> peeringLocation;

    public Input<String> getPeeringLocation() {
        return this.peeringLocation == null ? Input.empty() : this.peeringLocation;
    }

    /**
     * The serviceProviderName.
     * 
     */
    @InputImport(name="serviceProviderName")
    private final @Nullable Input<String> serviceProviderName;

    public Input<String> getServiceProviderName() {
        return this.serviceProviderName == null ? Input.empty() : this.serviceProviderName;
    }

    public ExpressRouteCircuitServiceProviderPropertiesArgs(
        @Nullable Input<Integer> bandwidthInMbps,
        @Nullable Input<String> peeringLocation,
        @Nullable Input<String> serviceProviderName) {
        this.bandwidthInMbps = bandwidthInMbps;
        this.peeringLocation = peeringLocation;
        this.serviceProviderName = serviceProviderName;
    }

    private ExpressRouteCircuitServiceProviderPropertiesArgs() {
        this.bandwidthInMbps = Input.empty();
        this.peeringLocation = Input.empty();
        this.serviceProviderName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExpressRouteCircuitServiceProviderPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> bandwidthInMbps;
        private @Nullable Input<String> peeringLocation;
        private @Nullable Input<String> serviceProviderName;

        public Builder() {
    	      // Empty
        }

        public Builder(ExpressRouteCircuitServiceProviderPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthInMbps = defaults.bandwidthInMbps;
    	      this.peeringLocation = defaults.peeringLocation;
    	      this.serviceProviderName = defaults.serviceProviderName;
        }

        public Builder setBandwidthInMbps(@Nullable Input<Integer> bandwidthInMbps) {
            this.bandwidthInMbps = bandwidthInMbps;
            return this;
        }

        public Builder setBandwidthInMbps(@Nullable Integer bandwidthInMbps) {
            this.bandwidthInMbps = Input.ofNullable(bandwidthInMbps);
            return this;
        }

        public Builder setPeeringLocation(@Nullable Input<String> peeringLocation) {
            this.peeringLocation = peeringLocation;
            return this;
        }

        public Builder setPeeringLocation(@Nullable String peeringLocation) {
            this.peeringLocation = Input.ofNullable(peeringLocation);
            return this;
        }

        public Builder setServiceProviderName(@Nullable Input<String> serviceProviderName) {
            this.serviceProviderName = serviceProviderName;
            return this;
        }

        public Builder setServiceProviderName(@Nullable String serviceProviderName) {
            this.serviceProviderName = Input.ofNullable(serviceProviderName);
            return this;
        }

        public ExpressRouteCircuitServiceProviderPropertiesArgs build() {
            return new ExpressRouteCircuitServiceProviderPropertiesArgs(bandwidthInMbps, peeringLocation, serviceProviderName);
        }
    }
}
