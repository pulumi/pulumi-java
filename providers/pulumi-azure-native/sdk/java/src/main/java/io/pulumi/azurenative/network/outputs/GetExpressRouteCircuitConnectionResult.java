// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.Ipv6CircuitConnectionConfigResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExpressRouteCircuitConnectionResult {
    /**
     * /29 IP address space to carve out Customer addresses for tunnels.
     * 
     */
    private final @Nullable String addressPrefix;
    /**
     * The authorization key.
     * 
     */
    private final @Nullable String authorizationKey;
    /**
     * Express Route Circuit connection state.
     * 
     */
    private final String circuitConnectionStatus;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private final String etag;
    /**
     * Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
     * 
     */
    private final @Nullable SubResourceResponse expressRouteCircuitPeering;
    /**
     * Resource ID.
     * 
     */
    private final @Nullable String id;
    /**
     * IPv6 Address PrefixProperties of the express route circuit connection.
     * 
     */
    private final @Nullable Ipv6CircuitConnectionConfigResponse ipv6CircuitConnectionConfig;
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    private final @Nullable String name;
    /**
     * Reference to Express Route Circuit Private Peering Resource of the peered circuit.
     * 
     */
    private final @Nullable SubResourceResponse peerExpressRouteCircuitPeering;
    /**
     * The provisioning state of the express route circuit connection resource.
     * 
     */
    private final String provisioningState;
    /**
     * Type of the resource.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetExpressRouteCircuitConnectionResult(
        @CustomType.Parameter("addressPrefix") @Nullable String addressPrefix,
        @CustomType.Parameter("authorizationKey") @Nullable String authorizationKey,
        @CustomType.Parameter("circuitConnectionStatus") String circuitConnectionStatus,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("expressRouteCircuitPeering") @Nullable SubResourceResponse expressRouteCircuitPeering,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("ipv6CircuitConnectionConfig") @Nullable Ipv6CircuitConnectionConfigResponse ipv6CircuitConnectionConfig,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("peerExpressRouteCircuitPeering") @Nullable SubResourceResponse peerExpressRouteCircuitPeering,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("type") String type) {
        this.addressPrefix = addressPrefix;
        this.authorizationKey = authorizationKey;
        this.circuitConnectionStatus = circuitConnectionStatus;
        this.etag = etag;
        this.expressRouteCircuitPeering = expressRouteCircuitPeering;
        this.id = id;
        this.ipv6CircuitConnectionConfig = ipv6CircuitConnectionConfig;
        this.name = name;
        this.peerExpressRouteCircuitPeering = peerExpressRouteCircuitPeering;
        this.provisioningState = provisioningState;
        this.type = type;
    }

    /**
     * /29 IP address space to carve out Customer addresses for tunnels.
     * 
    */
    public Optional<String> getAddressPrefix() {
        return Optional.ofNullable(this.addressPrefix);
    }
    /**
     * The authorization key.
     * 
    */
    public Optional<String> getAuthorizationKey() {
        return Optional.ofNullable(this.authorizationKey);
    }
    /**
     * Express Route Circuit connection state.
     * 
    */
    public String getCircuitConnectionStatus() {
        return this.circuitConnectionStatus;
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
    */
    public String getEtag() {
        return this.etag;
    }
    /**
     * Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
     * 
    */
    public Optional<SubResourceResponse> getExpressRouteCircuitPeering() {
        return Optional.ofNullable(this.expressRouteCircuitPeering);
    }
    /**
     * Resource ID.
     * 
    */
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    /**
     * IPv6 Address PrefixProperties of the express route circuit connection.
     * 
    */
    public Optional<Ipv6CircuitConnectionConfigResponse> getIpv6CircuitConnectionConfig() {
        return Optional.ofNullable(this.ipv6CircuitConnectionConfig);
    }
    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
    */
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    /**
     * Reference to Express Route Circuit Private Peering Resource of the peered circuit.
     * 
    */
    public Optional<SubResourceResponse> getPeerExpressRouteCircuitPeering() {
        return Optional.ofNullable(this.peerExpressRouteCircuitPeering);
    }
    /**
     * The provisioning state of the express route circuit connection resource.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Type of the resource.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExpressRouteCircuitConnectionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String addressPrefix;
        private @Nullable String authorizationKey;
        private String circuitConnectionStatus;
        private String etag;
        private @Nullable SubResourceResponse expressRouteCircuitPeering;
        private @Nullable String id;
        private @Nullable Ipv6CircuitConnectionConfigResponse ipv6CircuitConnectionConfig;
        private @Nullable String name;
        private @Nullable SubResourceResponse peerExpressRouteCircuitPeering;
        private String provisioningState;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetExpressRouteCircuitConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPrefix = defaults.addressPrefix;
    	      this.authorizationKey = defaults.authorizationKey;
    	      this.circuitConnectionStatus = defaults.circuitConnectionStatus;
    	      this.etag = defaults.etag;
    	      this.expressRouteCircuitPeering = defaults.expressRouteCircuitPeering;
    	      this.id = defaults.id;
    	      this.ipv6CircuitConnectionConfig = defaults.ipv6CircuitConnectionConfig;
    	      this.name = defaults.name;
    	      this.peerExpressRouteCircuitPeering = defaults.peerExpressRouteCircuitPeering;
    	      this.provisioningState = defaults.provisioningState;
    	      this.type = defaults.type;
        }

        public Builder addressPrefix(@Nullable String addressPrefix) {
            this.addressPrefix = addressPrefix;
            return this;
        }
        public Builder authorizationKey(@Nullable String authorizationKey) {
            this.authorizationKey = authorizationKey;
            return this;
        }
        public Builder circuitConnectionStatus(String circuitConnectionStatus) {
            this.circuitConnectionStatus = Objects.requireNonNull(circuitConnectionStatus);
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder expressRouteCircuitPeering(@Nullable SubResourceResponse expressRouteCircuitPeering) {
            this.expressRouteCircuitPeering = expressRouteCircuitPeering;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder ipv6CircuitConnectionConfig(@Nullable Ipv6CircuitConnectionConfigResponse ipv6CircuitConnectionConfig) {
            this.ipv6CircuitConnectionConfig = ipv6CircuitConnectionConfig;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder peerExpressRouteCircuitPeering(@Nullable SubResourceResponse peerExpressRouteCircuitPeering) {
            this.peerExpressRouteCircuitPeering = peerExpressRouteCircuitPeering;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetExpressRouteCircuitConnectionResult build() {
            return new GetExpressRouteCircuitConnectionResult(addressPrefix, authorizationKey, circuitConnectionStatus, etag, expressRouteCircuitPeering, id, ipv6CircuitConnectionConfig, name, peerExpressRouteCircuitPeering, provisioningState, type);
        }
    }
}
