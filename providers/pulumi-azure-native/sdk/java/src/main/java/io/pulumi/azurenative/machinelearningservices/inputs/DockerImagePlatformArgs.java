// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.enums.OperatingSystemType;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DockerImagePlatformArgs extends io.pulumi.resources.ResourceArgs {

    public static final DockerImagePlatformArgs Empty = new DockerImagePlatformArgs();

    /**
     * The OS type the Environment.
     * 
     */
    @InputImport(name="operatingSystemType")
      private final @Nullable Input<Either<String,OperatingSystemType>> operatingSystemType;

    public Input<Either<String,OperatingSystemType>> getOperatingSystemType() {
        return this.operatingSystemType == null ? Input.empty() : this.operatingSystemType;
    }

    public DockerImagePlatformArgs(@Nullable Input<Either<String,OperatingSystemType>> operatingSystemType) {
        this.operatingSystemType = operatingSystemType;
    }

    private DockerImagePlatformArgs() {
        this.operatingSystemType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DockerImagePlatformArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,OperatingSystemType>> operatingSystemType;

        public Builder() {
    	      // Empty
        }

        public Builder(DockerImagePlatformArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.operatingSystemType = defaults.operatingSystemType;
        }

        public Builder setOperatingSystemType(@Nullable Input<Either<String,OperatingSystemType>> operatingSystemType) {
            this.operatingSystemType = operatingSystemType;
            return this;
        }

        public Builder setOperatingSystemType(@Nullable Either<String,OperatingSystemType> operatingSystemType) {
            this.operatingSystemType = Input.ofNullable(operatingSystemType);
            return this;
        }
        public DockerImagePlatformArgs build() {
            return new DockerImagePlatformArgs(operatingSystemType);
        }
    }
}
