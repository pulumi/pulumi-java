// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies the configuration parameters for automatic repairs on the virtual machine scale set.
 * 
 */
public final class AutomaticRepairsPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final AutomaticRepairsPolicyArgs Empty = new AutomaticRepairsPolicyArgs();

    /**
     * Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.
     * 
     */
    @Import(name="enabled")
      private final @Nullable Output<Boolean> enabled;

    public Output<Boolean> getEnabled() {
        return this.enabled == null ? Codegen.empty() : this.enabled;
    }

    /**
     * The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).
     * 
     */
    @Import(name="gracePeriod")
      private final @Nullable Output<String> gracePeriod;

    public Output<String> getGracePeriod() {
        return this.gracePeriod == null ? Codegen.empty() : this.gracePeriod;
    }

    public AutomaticRepairsPolicyArgs(
        @Nullable Output<Boolean> enabled,
        @Nullable Output<String> gracePeriod) {
        this.enabled = enabled;
        this.gracePeriod = gracePeriod;
    }

    private AutomaticRepairsPolicyArgs() {
        this.enabled = Codegen.empty();
        this.gracePeriod = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomaticRepairsPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> enabled;
        private @Nullable Output<String> gracePeriod;

        public Builder() {
    	      // Empty
        }

        public Builder(AutomaticRepairsPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.gracePeriod = defaults.gracePeriod;
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = Codegen.ofNullable(enabled);
            return this;
        }
        public Builder gracePeriod(@Nullable Output<String> gracePeriod) {
            this.gracePeriod = gracePeriod;
            return this;
        }
        public Builder gracePeriod(@Nullable String gracePeriod) {
            this.gracePeriod = Codegen.ofNullable(gracePeriod);
            return this;
        }        public AutomaticRepairsPolicyArgs build() {
            return new AutomaticRepairsPolicyArgs(enabled, gracePeriod);
        }
    }
}
