// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * This type describes a volume provided by an Azure Files file share.
 * 
 */
public final class VolumeProviderParametersAzureFileArgs extends io.pulumi.resources.ResourceArgs {

    public static final VolumeProviderParametersAzureFileArgs Empty = new VolumeProviderParametersAzureFileArgs();

    /**
     * Access key of the Azure storage account for the File Share.
     * 
     */
    @InputImport(name="accountKey")
      private final @Nullable Output<String> accountKey;

    public Output<String> getAccountKey() {
        return this.accountKey == null ? Output.empty() : this.accountKey;
    }

    /**
     * Name of the Azure storage account for the File Share.
     * 
     */
    @InputImport(name="accountName", required=true)
      private final Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName;
    }

    /**
     * Name of the Azure Files file share that provides storage for the volume.
     * 
     */
    @InputImport(name="shareName", required=true)
      private final Output<String> shareName;

    public Output<String> getShareName() {
        return this.shareName;
    }

    public VolumeProviderParametersAzureFileArgs(
        @Nullable Output<String> accountKey,
        Output<String> accountName,
        Output<String> shareName) {
        this.accountKey = accountKey;
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.shareName = Objects.requireNonNull(shareName, "expected parameter 'shareName' to be non-null");
    }

    private VolumeProviderParametersAzureFileArgs() {
        this.accountKey = Output.empty();
        this.accountName = Output.empty();
        this.shareName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeProviderParametersAzureFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountKey;
        private Output<String> accountName;
        private Output<String> shareName;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeProviderParametersAzureFileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountKey = defaults.accountKey;
    	      this.accountName = defaults.accountName;
    	      this.shareName = defaults.shareName;
        }

        public Builder accountKey(@Nullable Output<String> accountKey) {
            this.accountKey = accountKey;
            return this;
        }

        public Builder accountKey(@Nullable String accountKey) {
            this.accountKey = Output.ofNullable(accountKey);
            return this;
        }

        public Builder accountName(Output<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder accountName(String accountName) {
            this.accountName = Output.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder shareName(Output<String> shareName) {
            this.shareName = Objects.requireNonNull(shareName);
            return this;
        }

        public Builder shareName(String shareName) {
            this.shareName = Output.of(Objects.requireNonNull(shareName));
            return this;
        }
        public VolumeProviderParametersAzureFileArgs build() {
            return new VolumeProviderParametersAzureFileArgs(accountKey, accountName, shareName);
        }
    }
}
