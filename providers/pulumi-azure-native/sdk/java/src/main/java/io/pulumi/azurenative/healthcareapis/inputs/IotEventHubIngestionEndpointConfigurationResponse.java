// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.healthcareapis.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Event Hub ingestion endpoint configuration
 * 
 */
public final class IotEventHubIngestionEndpointConfigurationResponse extends io.pulumi.resources.InvokeArgs {

    public static final IotEventHubIngestionEndpointConfigurationResponse Empty = new IotEventHubIngestionEndpointConfigurationResponse();

    /**
     * Consumer group of the event hub to connected to.
     * 
     */
    @InputImport(name="consumerGroup")
      private final @Nullable String consumerGroup;

    public Optional<String> getConsumerGroup() {
        return this.consumerGroup == null ? Optional.empty() : Optional.ofNullable(this.consumerGroup);
    }

    /**
     * Event Hub name to connect to.
     * 
     */
    @InputImport(name="eventHubName")
      private final @Nullable String eventHubName;

    public Optional<String> getEventHubName() {
        return this.eventHubName == null ? Optional.empty() : Optional.ofNullable(this.eventHubName);
    }

    /**
     * Fully qualified namespace of the Event Hub to connect to.
     * 
     */
    @InputImport(name="fullyQualifiedEventHubNamespace")
      private final @Nullable String fullyQualifiedEventHubNamespace;

    public Optional<String> getFullyQualifiedEventHubNamespace() {
        return this.fullyQualifiedEventHubNamespace == null ? Optional.empty() : Optional.ofNullable(this.fullyQualifiedEventHubNamespace);
    }

    public IotEventHubIngestionEndpointConfigurationResponse(
        @Nullable String consumerGroup,
        @Nullable String eventHubName,
        @Nullable String fullyQualifiedEventHubNamespace) {
        this.consumerGroup = consumerGroup;
        this.eventHubName = eventHubName;
        this.fullyQualifiedEventHubNamespace = fullyQualifiedEventHubNamespace;
    }

    private IotEventHubIngestionEndpointConfigurationResponse() {
        this.consumerGroup = null;
        this.eventHubName = null;
        this.fullyQualifiedEventHubNamespace = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IotEventHubIngestionEndpointConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String consumerGroup;
        private @Nullable String eventHubName;
        private @Nullable String fullyQualifiedEventHubNamespace;

        public Builder() {
    	      // Empty
        }

        public Builder(IotEventHubIngestionEndpointConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerGroup = defaults.consumerGroup;
    	      this.eventHubName = defaults.eventHubName;
    	      this.fullyQualifiedEventHubNamespace = defaults.fullyQualifiedEventHubNamespace;
        }

        public Builder setConsumerGroup(@Nullable String consumerGroup) {
            this.consumerGroup = consumerGroup;
            return this;
        }

        public Builder setEventHubName(@Nullable String eventHubName) {
            this.eventHubName = eventHubName;
            return this;
        }

        public Builder setFullyQualifiedEventHubNamespace(@Nullable String fullyQualifiedEventHubNamespace) {
            this.fullyQualifiedEventHubNamespace = fullyQualifiedEventHubNamespace;
            return this;
        }
        public IotEventHubIngestionEndpointConfigurationResponse build() {
            return new IotEventHubIngestionEndpointConfigurationResponse(consumerGroup, eventHubName, fullyQualifiedEventHubNamespace);
        }
    }
}
