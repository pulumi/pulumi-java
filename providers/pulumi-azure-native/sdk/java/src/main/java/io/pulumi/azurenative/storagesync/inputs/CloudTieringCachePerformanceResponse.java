// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagesync.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Server endpoint cloud tiering status object.
 * 
 */
public final class CloudTieringCachePerformanceResponse extends io.pulumi.resources.InvokeArgs {

    public static final CloudTieringCachePerformanceResponse Empty = new CloudTieringCachePerformanceResponse();

    /**
     * Count of bytes that were served from the local server
     * 
     */
    @Import(name="cacheHitBytes", required=true)
      private final Double cacheHitBytes;

    public Double cacheHitBytes() {
        return this.cacheHitBytes;
    }

    /**
     * Percentage of total bytes (hit + miss) that were served from the local server
     * 
     */
    @Import(name="cacheHitBytesPercent", required=true)
      private final Integer cacheHitBytesPercent;

    public Integer cacheHitBytesPercent() {
        return this.cacheHitBytesPercent;
    }

    /**
     * Count of bytes that were served from the cloud
     * 
     */
    @Import(name="cacheMissBytes", required=true)
      private final Double cacheMissBytes;

    public Double cacheMissBytes() {
        return this.cacheMissBytes;
    }

    /**
     * Last updated timestamp
     * 
     */
    @Import(name="lastUpdatedTimestamp", required=true)
      private final String lastUpdatedTimestamp;

    public String lastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }

    public CloudTieringCachePerformanceResponse(
        Double cacheHitBytes,
        Integer cacheHitBytesPercent,
        Double cacheMissBytes,
        String lastUpdatedTimestamp) {
        this.cacheHitBytes = Objects.requireNonNull(cacheHitBytes, "expected parameter 'cacheHitBytes' to be non-null");
        this.cacheHitBytesPercent = Objects.requireNonNull(cacheHitBytesPercent, "expected parameter 'cacheHitBytesPercent' to be non-null");
        this.cacheMissBytes = Objects.requireNonNull(cacheMissBytes, "expected parameter 'cacheMissBytes' to be non-null");
        this.lastUpdatedTimestamp = Objects.requireNonNull(lastUpdatedTimestamp, "expected parameter 'lastUpdatedTimestamp' to be non-null");
    }

    private CloudTieringCachePerformanceResponse() {
        this.cacheHitBytes = null;
        this.cacheHitBytesPercent = null;
        this.cacheMissBytes = null;
        this.lastUpdatedTimestamp = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudTieringCachePerformanceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double cacheHitBytes;
        private Integer cacheHitBytesPercent;
        private Double cacheMissBytes;
        private String lastUpdatedTimestamp;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudTieringCachePerformanceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheHitBytes = defaults.cacheHitBytes;
    	      this.cacheHitBytesPercent = defaults.cacheHitBytesPercent;
    	      this.cacheMissBytes = defaults.cacheMissBytes;
    	      this.lastUpdatedTimestamp = defaults.lastUpdatedTimestamp;
        }

        public Builder cacheHitBytes(Double cacheHitBytes) {
            this.cacheHitBytes = Objects.requireNonNull(cacheHitBytes);
            return this;
        }
        public Builder cacheHitBytesPercent(Integer cacheHitBytesPercent) {
            this.cacheHitBytesPercent = Objects.requireNonNull(cacheHitBytesPercent);
            return this;
        }
        public Builder cacheMissBytes(Double cacheMissBytes) {
            this.cacheMissBytes = Objects.requireNonNull(cacheMissBytes);
            return this;
        }
        public Builder lastUpdatedTimestamp(String lastUpdatedTimestamp) {
            this.lastUpdatedTimestamp = Objects.requireNonNull(lastUpdatedTimestamp);
            return this;
        }        public CloudTieringCachePerformanceResponse build() {
            return new CloudTieringCachePerformanceResponse(cacheHitBytes, cacheHitBytesPercent, cacheMissBytes, lastUpdatedTimestamp);
        }
    }
}
