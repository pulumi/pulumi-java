// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.compute.enums.VirtualMachineEvictionPolicyTypes;
import io.pulumi.azurenative.compute.enums.VirtualMachinePriorityTypes;
import io.pulumi.azurenative.compute.inputs.AdditionalCapabilitiesArgs;
import io.pulumi.azurenative.compute.inputs.BillingProfileArgs;
import io.pulumi.azurenative.compute.inputs.DiagnosticsProfileArgs;
import io.pulumi.azurenative.compute.inputs.ExtendedLocationArgs;
import io.pulumi.azurenative.compute.inputs.HardwareProfileArgs;
import io.pulumi.azurenative.compute.inputs.NetworkProfileArgs;
import io.pulumi.azurenative.compute.inputs.OSProfileArgs;
import io.pulumi.azurenative.compute.inputs.PlanArgs;
import io.pulumi.azurenative.compute.inputs.ScheduledEventsProfileArgs;
import io.pulumi.azurenative.compute.inputs.SecurityProfileArgs;
import io.pulumi.azurenative.compute.inputs.StorageProfileArgs;
import io.pulumi.azurenative.compute.inputs.SubResourceArgs;
import io.pulumi.azurenative.compute.inputs.VirtualMachineIdentityArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualMachineArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualMachineArgs Empty = new VirtualMachineArgs();

    /**
     * Specifies additional capabilities enabled or disabled on the virtual machine.
     * 
     */
    @Import(name="additionalCapabilities")
      private final @Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities;

    public Output<AdditionalCapabilitiesArgs> getAdditionalCapabilities() {
        return this.additionalCapabilities == null ? Output.empty() : this.additionalCapabilities;
    }

    /**
     * Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). <br><br> For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates) <br><br> Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. <br><br>This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
     * 
     */
    @Import(name="availabilitySet")
      private final @Nullable Output<SubResourceArgs> availabilitySet;

    public Output<SubResourceArgs> getAvailabilitySet() {
        return this.availabilitySet == null ? Output.empty() : this.availabilitySet;
    }

    /**
     * Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum api-version: 2019-03-01.
     * 
     */
    @Import(name="billingProfile")
      private final @Nullable Output<BillingProfileArgs> billingProfile;

    public Output<BillingProfileArgs> getBillingProfile() {
        return this.billingProfile == null ? Output.empty() : this.billingProfile;
    }

    /**
     * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
     * 
     */
    @Import(name="diagnosticsProfile")
      private final @Nullable Output<DiagnosticsProfileArgs> diagnosticsProfile;

    public Output<DiagnosticsProfileArgs> getDiagnosticsProfile() {
        return this.diagnosticsProfile == null ? Output.empty() : this.diagnosticsProfile;
    }

    /**
     * Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
     * 
     */
    @Import(name="evictionPolicy")
      private final @Nullable Output<Either<String,VirtualMachineEvictionPolicyTypes>> evictionPolicy;

    public Output<Either<String,VirtualMachineEvictionPolicyTypes>> getEvictionPolicy() {
        return this.evictionPolicy == null ? Output.empty() : this.evictionPolicy;
    }

    /**
     * The extended location of the Virtual Machine.
     * 
     */
    @Import(name="extendedLocation")
      private final @Nullable Output<ExtendedLocationArgs> extendedLocation;

    public Output<ExtendedLocationArgs> getExtendedLocation() {
        return this.extendedLocation == null ? Output.empty() : this.extendedLocation;
    }

    /**
     * Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01
     * 
     */
    @Import(name="extensionsTimeBudget")
      private final @Nullable Output<String> extensionsTimeBudget;

    public Output<String> getExtensionsTimeBudget() {
        return this.extensionsTimeBudget == null ? Output.empty() : this.extensionsTimeBudget;
    }

    /**
     * Specifies the hardware settings for the virtual machine.
     * 
     */
    @Import(name="hardwareProfile")
      private final @Nullable Output<HardwareProfileArgs> hardwareProfile;

    public Output<HardwareProfileArgs> getHardwareProfile() {
        return this.hardwareProfile == null ? Output.empty() : this.hardwareProfile;
    }

    /**
     * Specifies information about the dedicated host that the virtual machine resides in. <br><br>Minimum api-version: 2018-10-01.
     * 
     */
    @Import(name="host")
      private final @Nullable Output<SubResourceArgs> host;

    public Output<SubResourceArgs> getHost() {
        return this.host == null ? Output.empty() : this.host;
    }

    /**
     * Specifies information about the dedicated host group that the virtual machine resides in. <br><br>Minimum api-version: 2020-06-01. <br><br>NOTE: User cannot specify both host and hostGroup properties.
     * 
     */
    @Import(name="hostGroup")
      private final @Nullable Output<SubResourceArgs> hostGroup;

    public Output<SubResourceArgs> getHostGroup() {
        return this.hostGroup == null ? Output.empty() : this.hostGroup;
    }

    /**
     * The identity of the virtual machine, if configured.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<VirtualMachineIdentityArgs> identity;

    public Output<VirtualMachineIdentityArgs> getIdentity() {
        return this.identity == null ? Output.empty() : this.identity;
    }

    /**
     * Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15
     * 
     */
    @Import(name="licenseType")
      private final @Nullable Output<String> licenseType;

    public Output<String> getLicenseType() {
        return this.licenseType == null ? Output.empty() : this.licenseType;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * Specifies the network interfaces of the virtual machine.
     * 
     */
    @Import(name="networkProfile")
      private final @Nullable Output<NetworkProfileArgs> networkProfile;

    public Output<NetworkProfileArgs> getNetworkProfile() {
        return this.networkProfile == null ? Output.empty() : this.networkProfile;
    }

    /**
     * Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.
     * 
     */
    @Import(name="osProfile")
      private final @Nullable Output<OSProfileArgs> osProfile;

    public Output<OSProfileArgs> getOsProfile() {
        return this.osProfile == null ? Output.empty() : this.osProfile;
    }

    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     * 
     */
    @Import(name="plan")
      private final @Nullable Output<PlanArgs> plan;

    public Output<PlanArgs> getPlan() {
        return this.plan == null ? Output.empty() : this.plan;
    }

    /**
     * Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01
     * 
     */
    @Import(name="platformFaultDomain")
      private final @Nullable Output<Integer> platformFaultDomain;

    public Output<Integer> getPlatformFaultDomain() {
        return this.platformFaultDomain == null ? Output.empty() : this.platformFaultDomain;
    }

    /**
     * Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01
     * 
     */
    @Import(name="priority")
      private final @Nullable Output<Either<String,VirtualMachinePriorityTypes>> priority;

    public Output<Either<String,VirtualMachinePriorityTypes>> getPriority() {
        return this.priority == null ? Output.empty() : this.priority;
    }

    /**
     * Specifies information about the proximity placement group that the virtual machine should be assigned to. <br><br>Minimum api-version: 2018-04-01.
     * 
     */
    @Import(name="proximityPlacementGroup")
      private final @Nullable Output<SubResourceArgs> proximityPlacementGroup;

    public Output<SubResourceArgs> getProximityPlacementGroup() {
        return this.proximityPlacementGroup == null ? Output.empty() : this.proximityPlacementGroup;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies Scheduled Event related configurations.
     * 
     */
    @Import(name="scheduledEventsProfile")
      private final @Nullable Output<ScheduledEventsProfileArgs> scheduledEventsProfile;

    public Output<ScheduledEventsProfileArgs> getScheduledEventsProfile() {
        return this.scheduledEventsProfile == null ? Output.empty() : this.scheduledEventsProfile;
    }

    /**
     * Specifies the Security related profile settings for the virtual machine.
     * 
     */
    @Import(name="securityProfile")
      private final @Nullable Output<SecurityProfileArgs> securityProfile;

    public Output<SecurityProfileArgs> getSecurityProfile() {
        return this.securityProfile == null ? Output.empty() : this.securityProfile;
    }

    /**
     * Specifies the storage settings for the virtual machine disks.
     * 
     */
    @Import(name="storageProfile")
      private final @Nullable Output<StorageProfileArgs> storageProfile;

    public Output<StorageProfileArgs> getStorageProfile() {
        return this.storageProfile == null ? Output.empty() : this.storageProfile;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01
     * 
     */
    @Import(name="userData")
      private final @Nullable Output<String> userData;

    public Output<String> getUserData() {
        return this.userData == null ? Output.empty() : this.userData;
    }

    /**
     * Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. <br><br>This property cannot exist along with a non-null properties.availabilitySet reference. <br><br>Minimum api‐version: 2019‐03‐01
     * 
     */
    @Import(name="virtualMachineScaleSet")
      private final @Nullable Output<SubResourceArgs> virtualMachineScaleSet;

    public Output<SubResourceArgs> getVirtualMachineScaleSet() {
        return this.virtualMachineScaleSet == null ? Output.empty() : this.virtualMachineScaleSet;
    }

    /**
     * The name of the virtual machine.
     * 
     */
    @Import(name="vmName")
      private final @Nullable Output<String> vmName;

    public Output<String> getVmName() {
        return this.vmName == null ? Output.empty() : this.vmName;
    }

    /**
     * The virtual machine zones.
     * 
     */
    @Import(name="zones")
      private final @Nullable Output<List<String>> zones;

    public Output<List<String>> getZones() {
        return this.zones == null ? Output.empty() : this.zones;
    }

    public VirtualMachineArgs(
        @Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities,
        @Nullable Output<SubResourceArgs> availabilitySet,
        @Nullable Output<BillingProfileArgs> billingProfile,
        @Nullable Output<DiagnosticsProfileArgs> diagnosticsProfile,
        @Nullable Output<Either<String,VirtualMachineEvictionPolicyTypes>> evictionPolicy,
        @Nullable Output<ExtendedLocationArgs> extendedLocation,
        @Nullable Output<String> extensionsTimeBudget,
        @Nullable Output<HardwareProfileArgs> hardwareProfile,
        @Nullable Output<SubResourceArgs> host,
        @Nullable Output<SubResourceArgs> hostGroup,
        @Nullable Output<VirtualMachineIdentityArgs> identity,
        @Nullable Output<String> licenseType,
        @Nullable Output<String> location,
        @Nullable Output<NetworkProfileArgs> networkProfile,
        @Nullable Output<OSProfileArgs> osProfile,
        @Nullable Output<PlanArgs> plan,
        @Nullable Output<Integer> platformFaultDomain,
        @Nullable Output<Either<String,VirtualMachinePriorityTypes>> priority,
        @Nullable Output<SubResourceArgs> proximityPlacementGroup,
        Output<String> resourceGroupName,
        @Nullable Output<ScheduledEventsProfileArgs> scheduledEventsProfile,
        @Nullable Output<SecurityProfileArgs> securityProfile,
        @Nullable Output<StorageProfileArgs> storageProfile,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> userData,
        @Nullable Output<SubResourceArgs> virtualMachineScaleSet,
        @Nullable Output<String> vmName,
        @Nullable Output<List<String>> zones) {
        this.additionalCapabilities = additionalCapabilities;
        this.availabilitySet = availabilitySet;
        this.billingProfile = billingProfile;
        this.diagnosticsProfile = diagnosticsProfile;
        this.evictionPolicy = evictionPolicy;
        this.extendedLocation = extendedLocation;
        this.extensionsTimeBudget = extensionsTimeBudget;
        this.hardwareProfile = hardwareProfile;
        this.host = host;
        this.hostGroup = hostGroup;
        this.identity = identity;
        this.licenseType = licenseType;
        this.location = location;
        this.networkProfile = networkProfile;
        this.osProfile = osProfile;
        this.plan = plan;
        this.platformFaultDomain = platformFaultDomain;
        this.priority = priority;
        this.proximityPlacementGroup = proximityPlacementGroup;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.scheduledEventsProfile = scheduledEventsProfile;
        this.securityProfile = securityProfile;
        this.storageProfile = storageProfile;
        this.tags = tags;
        this.userData = userData;
        this.virtualMachineScaleSet = virtualMachineScaleSet;
        this.vmName = vmName;
        this.zones = zones;
    }

    private VirtualMachineArgs() {
        this.additionalCapabilities = Output.empty();
        this.availabilitySet = Output.empty();
        this.billingProfile = Output.empty();
        this.diagnosticsProfile = Output.empty();
        this.evictionPolicy = Output.empty();
        this.extendedLocation = Output.empty();
        this.extensionsTimeBudget = Output.empty();
        this.hardwareProfile = Output.empty();
        this.host = Output.empty();
        this.hostGroup = Output.empty();
        this.identity = Output.empty();
        this.licenseType = Output.empty();
        this.location = Output.empty();
        this.networkProfile = Output.empty();
        this.osProfile = Output.empty();
        this.plan = Output.empty();
        this.platformFaultDomain = Output.empty();
        this.priority = Output.empty();
        this.proximityPlacementGroup = Output.empty();
        this.resourceGroupName = Output.empty();
        this.scheduledEventsProfile = Output.empty();
        this.securityProfile = Output.empty();
        this.storageProfile = Output.empty();
        this.tags = Output.empty();
        this.userData = Output.empty();
        this.virtualMachineScaleSet = Output.empty();
        this.vmName = Output.empty();
        this.zones = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities;
        private @Nullable Output<SubResourceArgs> availabilitySet;
        private @Nullable Output<BillingProfileArgs> billingProfile;
        private @Nullable Output<DiagnosticsProfileArgs> diagnosticsProfile;
        private @Nullable Output<Either<String,VirtualMachineEvictionPolicyTypes>> evictionPolicy;
        private @Nullable Output<ExtendedLocationArgs> extendedLocation;
        private @Nullable Output<String> extensionsTimeBudget;
        private @Nullable Output<HardwareProfileArgs> hardwareProfile;
        private @Nullable Output<SubResourceArgs> host;
        private @Nullable Output<SubResourceArgs> hostGroup;
        private @Nullable Output<VirtualMachineIdentityArgs> identity;
        private @Nullable Output<String> licenseType;
        private @Nullable Output<String> location;
        private @Nullable Output<NetworkProfileArgs> networkProfile;
        private @Nullable Output<OSProfileArgs> osProfile;
        private @Nullable Output<PlanArgs> plan;
        private @Nullable Output<Integer> platformFaultDomain;
        private @Nullable Output<Either<String,VirtualMachinePriorityTypes>> priority;
        private @Nullable Output<SubResourceArgs> proximityPlacementGroup;
        private Output<String> resourceGroupName;
        private @Nullable Output<ScheduledEventsProfileArgs> scheduledEventsProfile;
        private @Nullable Output<SecurityProfileArgs> securityProfile;
        private @Nullable Output<StorageProfileArgs> storageProfile;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> userData;
        private @Nullable Output<SubResourceArgs> virtualMachineScaleSet;
        private @Nullable Output<String> vmName;
        private @Nullable Output<List<String>> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalCapabilities = defaults.additionalCapabilities;
    	      this.availabilitySet = defaults.availabilitySet;
    	      this.billingProfile = defaults.billingProfile;
    	      this.diagnosticsProfile = defaults.diagnosticsProfile;
    	      this.evictionPolicy = defaults.evictionPolicy;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.extensionsTimeBudget = defaults.extensionsTimeBudget;
    	      this.hardwareProfile = defaults.hardwareProfile;
    	      this.host = defaults.host;
    	      this.hostGroup = defaults.hostGroup;
    	      this.identity = defaults.identity;
    	      this.licenseType = defaults.licenseType;
    	      this.location = defaults.location;
    	      this.networkProfile = defaults.networkProfile;
    	      this.osProfile = defaults.osProfile;
    	      this.plan = defaults.plan;
    	      this.platformFaultDomain = defaults.platformFaultDomain;
    	      this.priority = defaults.priority;
    	      this.proximityPlacementGroup = defaults.proximityPlacementGroup;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.scheduledEventsProfile = defaults.scheduledEventsProfile;
    	      this.securityProfile = defaults.securityProfile;
    	      this.storageProfile = defaults.storageProfile;
    	      this.tags = defaults.tags;
    	      this.userData = defaults.userData;
    	      this.virtualMachineScaleSet = defaults.virtualMachineScaleSet;
    	      this.vmName = defaults.vmName;
    	      this.zones = defaults.zones;
        }

        public Builder additionalCapabilities(@Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities) {
            this.additionalCapabilities = additionalCapabilities;
            return this;
        }

        public Builder additionalCapabilities(@Nullable AdditionalCapabilitiesArgs additionalCapabilities) {
            this.additionalCapabilities = Output.ofNullable(additionalCapabilities);
            return this;
        }

        public Builder availabilitySet(@Nullable Output<SubResourceArgs> availabilitySet) {
            this.availabilitySet = availabilitySet;
            return this;
        }

        public Builder availabilitySet(@Nullable SubResourceArgs availabilitySet) {
            this.availabilitySet = Output.ofNullable(availabilitySet);
            return this;
        }

        public Builder billingProfile(@Nullable Output<BillingProfileArgs> billingProfile) {
            this.billingProfile = billingProfile;
            return this;
        }

        public Builder billingProfile(@Nullable BillingProfileArgs billingProfile) {
            this.billingProfile = Output.ofNullable(billingProfile);
            return this;
        }

        public Builder diagnosticsProfile(@Nullable Output<DiagnosticsProfileArgs> diagnosticsProfile) {
            this.diagnosticsProfile = diagnosticsProfile;
            return this;
        }

        public Builder diagnosticsProfile(@Nullable DiagnosticsProfileArgs diagnosticsProfile) {
            this.diagnosticsProfile = Output.ofNullable(diagnosticsProfile);
            return this;
        }

        public Builder evictionPolicy(@Nullable Output<Either<String,VirtualMachineEvictionPolicyTypes>> evictionPolicy) {
            this.evictionPolicy = evictionPolicy;
            return this;
        }

        public Builder evictionPolicy(@Nullable Either<String,VirtualMachineEvictionPolicyTypes> evictionPolicy) {
            this.evictionPolicy = Output.ofNullable(evictionPolicy);
            return this;
        }

        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }

        public Builder extendedLocation(@Nullable ExtendedLocationArgs extendedLocation) {
            this.extendedLocation = Output.ofNullable(extendedLocation);
            return this;
        }

        public Builder extensionsTimeBudget(@Nullable Output<String> extensionsTimeBudget) {
            this.extensionsTimeBudget = extensionsTimeBudget;
            return this;
        }

        public Builder extensionsTimeBudget(@Nullable String extensionsTimeBudget) {
            this.extensionsTimeBudget = Output.ofNullable(extensionsTimeBudget);
            return this;
        }

        public Builder hardwareProfile(@Nullable Output<HardwareProfileArgs> hardwareProfile) {
            this.hardwareProfile = hardwareProfile;
            return this;
        }

        public Builder hardwareProfile(@Nullable HardwareProfileArgs hardwareProfile) {
            this.hardwareProfile = Output.ofNullable(hardwareProfile);
            return this;
        }

        public Builder host(@Nullable Output<SubResourceArgs> host) {
            this.host = host;
            return this;
        }

        public Builder host(@Nullable SubResourceArgs host) {
            this.host = Output.ofNullable(host);
            return this;
        }

        public Builder hostGroup(@Nullable Output<SubResourceArgs> hostGroup) {
            this.hostGroup = hostGroup;
            return this;
        }

        public Builder hostGroup(@Nullable SubResourceArgs hostGroup) {
            this.hostGroup = Output.ofNullable(hostGroup);
            return this;
        }

        public Builder identity(@Nullable Output<VirtualMachineIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }

        public Builder identity(@Nullable VirtualMachineIdentityArgs identity) {
            this.identity = Output.ofNullable(identity);
            return this;
        }

        public Builder licenseType(@Nullable Output<String> licenseType) {
            this.licenseType = licenseType;
            return this;
        }

        public Builder licenseType(@Nullable String licenseType) {
            this.licenseType = Output.ofNullable(licenseType);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder networkProfile(@Nullable Output<NetworkProfileArgs> networkProfile) {
            this.networkProfile = networkProfile;
            return this;
        }

        public Builder networkProfile(@Nullable NetworkProfileArgs networkProfile) {
            this.networkProfile = Output.ofNullable(networkProfile);
            return this;
        }

        public Builder osProfile(@Nullable Output<OSProfileArgs> osProfile) {
            this.osProfile = osProfile;
            return this;
        }

        public Builder osProfile(@Nullable OSProfileArgs osProfile) {
            this.osProfile = Output.ofNullable(osProfile);
            return this;
        }

        public Builder plan(@Nullable Output<PlanArgs> plan) {
            this.plan = plan;
            return this;
        }

        public Builder plan(@Nullable PlanArgs plan) {
            this.plan = Output.ofNullable(plan);
            return this;
        }

        public Builder platformFaultDomain(@Nullable Output<Integer> platformFaultDomain) {
            this.platformFaultDomain = platformFaultDomain;
            return this;
        }

        public Builder platformFaultDomain(@Nullable Integer platformFaultDomain) {
            this.platformFaultDomain = Output.ofNullable(platformFaultDomain);
            return this;
        }

        public Builder priority(@Nullable Output<Either<String,VirtualMachinePriorityTypes>> priority) {
            this.priority = priority;
            return this;
        }

        public Builder priority(@Nullable Either<String,VirtualMachinePriorityTypes> priority) {
            this.priority = Output.ofNullable(priority);
            return this;
        }

        public Builder proximityPlacementGroup(@Nullable Output<SubResourceArgs> proximityPlacementGroup) {
            this.proximityPlacementGroup = proximityPlacementGroup;
            return this;
        }

        public Builder proximityPlacementGroup(@Nullable SubResourceArgs proximityPlacementGroup) {
            this.proximityPlacementGroup = Output.ofNullable(proximityPlacementGroup);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder scheduledEventsProfile(@Nullable Output<ScheduledEventsProfileArgs> scheduledEventsProfile) {
            this.scheduledEventsProfile = scheduledEventsProfile;
            return this;
        }

        public Builder scheduledEventsProfile(@Nullable ScheduledEventsProfileArgs scheduledEventsProfile) {
            this.scheduledEventsProfile = Output.ofNullable(scheduledEventsProfile);
            return this;
        }

        public Builder securityProfile(@Nullable Output<SecurityProfileArgs> securityProfile) {
            this.securityProfile = securityProfile;
            return this;
        }

        public Builder securityProfile(@Nullable SecurityProfileArgs securityProfile) {
            this.securityProfile = Output.ofNullable(securityProfile);
            return this;
        }

        public Builder storageProfile(@Nullable Output<StorageProfileArgs> storageProfile) {
            this.storageProfile = storageProfile;
            return this;
        }

        public Builder storageProfile(@Nullable StorageProfileArgs storageProfile) {
            this.storageProfile = Output.ofNullable(storageProfile);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder userData(@Nullable Output<String> userData) {
            this.userData = userData;
            return this;
        }

        public Builder userData(@Nullable String userData) {
            this.userData = Output.ofNullable(userData);
            return this;
        }

        public Builder virtualMachineScaleSet(@Nullable Output<SubResourceArgs> virtualMachineScaleSet) {
            this.virtualMachineScaleSet = virtualMachineScaleSet;
            return this;
        }

        public Builder virtualMachineScaleSet(@Nullable SubResourceArgs virtualMachineScaleSet) {
            this.virtualMachineScaleSet = Output.ofNullable(virtualMachineScaleSet);
            return this;
        }

        public Builder vmName(@Nullable Output<String> vmName) {
            this.vmName = vmName;
            return this;
        }

        public Builder vmName(@Nullable String vmName) {
            this.vmName = Output.ofNullable(vmName);
            return this;
        }

        public Builder zones(@Nullable Output<List<String>> zones) {
            this.zones = zones;
            return this;
        }

        public Builder zones(@Nullable List<String> zones) {
            this.zones = Output.ofNullable(zones);
            return this;
        }
        public VirtualMachineArgs build() {
            return new VirtualMachineArgs(additionalCapabilities, availabilitySet, billingProfile, diagnosticsProfile, evictionPolicy, extendedLocation, extensionsTimeBudget, hardwareProfile, host, hostGroup, identity, licenseType, location, networkProfile, osProfile, plan, platformFaultDomain, priority, proximityPlacementGroup, resourceGroupName, scheduledEventsProfile, securityProfile, storageProfile, tags, userData, virtualMachineScaleSet, vmName, zones);
        }
    }
}
