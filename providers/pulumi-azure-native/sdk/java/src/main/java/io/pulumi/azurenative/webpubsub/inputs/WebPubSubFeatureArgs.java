// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.webpubsub.inputs;

import io.pulumi.azurenative.webpubsub.enums.FeatureFlags;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Feature of a resource, which controls the runtime behavior.
 * 
 */
public final class WebPubSubFeatureArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebPubSubFeatureArgs Empty = new WebPubSubFeatureArgs();

    /**
     * FeatureFlags is the supported features of Azure SignalR service.
     *  - EnableConnectivityLogs: "true"/"false", to enable/disable the connectivity log category respectively.
     *  - EnableMessagingLogs: "true"/"false", to enable/disable the connectivity log category respectively.
     *  - EnableLiveTrace: Live Trace allows you to know what's happening inside Azure SignalR service, it will give you live traces in real time, it will be helpful when you developing your own Azure SignalR based web application or self-troubleshooting some issues. Please note that live traces are counted as outbound messages that will be charged. Values allowed: "true"/"false", to enable/disable live trace feature.
     * 
     */
    @Import(name="flag", required=true)
      private final Output<Either<String,FeatureFlags>> flag;

    public Output<Either<String,FeatureFlags>> getFlag() {
        return this.flag;
    }

    /**
     * Optional properties related to this feature.
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<Map<String,String>> properties;

    public Output<Map<String,String>> getProperties() {
        return this.properties == null ? Output.empty() : this.properties;
    }

    /**
     * Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values.
     * 
     */
    @Import(name="value", required=true)
      private final Output<String> value;

    public Output<String> getValue() {
        return this.value;
    }

    public WebPubSubFeatureArgs(
        Output<Either<String,FeatureFlags>> flag,
        @Nullable Output<Map<String,String>> properties,
        Output<String> value) {
        this.flag = Objects.requireNonNull(flag, "expected parameter 'flag' to be non-null");
        this.properties = properties;
        this.value = Objects.requireNonNull(value, "expected parameter 'value' to be non-null");
    }

    private WebPubSubFeatureArgs() {
        this.flag = Output.empty();
        this.properties = Output.empty();
        this.value = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebPubSubFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Either<String,FeatureFlags>> flag;
        private @Nullable Output<Map<String,String>> properties;
        private Output<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(WebPubSubFeatureArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.flag = defaults.flag;
    	      this.properties = defaults.properties;
    	      this.value = defaults.value;
        }

        public Builder flag(Output<Either<String,FeatureFlags>> flag) {
            this.flag = Objects.requireNonNull(flag);
            return this;
        }

        public Builder flag(Either<String,FeatureFlags> flag) {
            this.flag = Output.of(Objects.requireNonNull(flag));
            return this;
        }

        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            this.properties = properties;
            return this;
        }

        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = Output.ofNullable(properties);
            return this;
        }

        public Builder value(Output<String> value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }

        public Builder value(String value) {
            this.value = Output.of(Objects.requireNonNull(value));
            return this;
        }
        public WebPubSubFeatureArgs build() {
            return new WebPubSubFeatureArgs(flag, properties, value);
        }
    }
}
