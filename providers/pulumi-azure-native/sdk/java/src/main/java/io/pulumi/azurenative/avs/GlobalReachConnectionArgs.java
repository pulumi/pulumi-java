// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.avs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GlobalReachConnectionArgs extends io.pulumi.resources.ResourceArgs {

    public static final GlobalReachConnectionArgs Empty = new GlobalReachConnectionArgs();

    /**
     * Authorization key from the peer express route used for the global reach connection
     * 
     */
    @Import(name="authorizationKey")
      private final @Nullable Output<String> authorizationKey;

    public Output<String> getAuthorizationKey() {
        return this.authorizationKey == null ? Output.empty() : this.authorizationKey;
    }

    /**
     * Name of the global reach connection in the private cloud
     * 
     */
    @Import(name="globalReachConnectionName")
      private final @Nullable Output<String> globalReachConnectionName;

    public Output<String> getGlobalReachConnectionName() {
        return this.globalReachConnectionName == null ? Output.empty() : this.globalReachConnectionName;
    }

    /**
     * Identifier of the ExpressRoute Circuit to peer with in the global reach connection
     * 
     */
    @Import(name="peerExpressRouteCircuit")
      private final @Nullable Output<String> peerExpressRouteCircuit;

    public Output<String> getPeerExpressRouteCircuit() {
        return this.peerExpressRouteCircuit == null ? Output.empty() : this.peerExpressRouteCircuit;
    }

    /**
     * The name of the private cloud.
     * 
     */
    @Import(name="privateCloudName", required=true)
      private final Output<String> privateCloudName;

    public Output<String> getPrivateCloudName() {
        return this.privateCloudName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public GlobalReachConnectionArgs(
        @Nullable Output<String> authorizationKey,
        @Nullable Output<String> globalReachConnectionName,
        @Nullable Output<String> peerExpressRouteCircuit,
        Output<String> privateCloudName,
        Output<String> resourceGroupName) {
        this.authorizationKey = authorizationKey;
        this.globalReachConnectionName = globalReachConnectionName;
        this.peerExpressRouteCircuit = peerExpressRouteCircuit;
        this.privateCloudName = Objects.requireNonNull(privateCloudName, "expected parameter 'privateCloudName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private GlobalReachConnectionArgs() {
        this.authorizationKey = Output.empty();
        this.globalReachConnectionName = Output.empty();
        this.peerExpressRouteCircuit = Output.empty();
        this.privateCloudName = Output.empty();
        this.resourceGroupName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GlobalReachConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> authorizationKey;
        private @Nullable Output<String> globalReachConnectionName;
        private @Nullable Output<String> peerExpressRouteCircuit;
        private Output<String> privateCloudName;
        private Output<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(GlobalReachConnectionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationKey = defaults.authorizationKey;
    	      this.globalReachConnectionName = defaults.globalReachConnectionName;
    	      this.peerExpressRouteCircuit = defaults.peerExpressRouteCircuit;
    	      this.privateCloudName = defaults.privateCloudName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder authorizationKey(@Nullable Output<String> authorizationKey) {
            this.authorizationKey = authorizationKey;
            return this;
        }
        public Builder authorizationKey(@Nullable String authorizationKey) {
            this.authorizationKey = Output.ofNullable(authorizationKey);
            return this;
        }
        public Builder globalReachConnectionName(@Nullable Output<String> globalReachConnectionName) {
            this.globalReachConnectionName = globalReachConnectionName;
            return this;
        }
        public Builder globalReachConnectionName(@Nullable String globalReachConnectionName) {
            this.globalReachConnectionName = Output.ofNullable(globalReachConnectionName);
            return this;
        }
        public Builder peerExpressRouteCircuit(@Nullable Output<String> peerExpressRouteCircuit) {
            this.peerExpressRouteCircuit = peerExpressRouteCircuit;
            return this;
        }
        public Builder peerExpressRouteCircuit(@Nullable String peerExpressRouteCircuit) {
            this.peerExpressRouteCircuit = Output.ofNullable(peerExpressRouteCircuit);
            return this;
        }
        public Builder privateCloudName(Output<String> privateCloudName) {
            this.privateCloudName = Objects.requireNonNull(privateCloudName);
            return this;
        }
        public Builder privateCloudName(String privateCloudName) {
            this.privateCloudName = Output.of(Objects.requireNonNull(privateCloudName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }        public GlobalReachConnectionArgs build() {
            return new GlobalReachConnectionArgs(authorizationKey, globalReachConnectionName, peerExpressRouteCircuit, privateCloudName, resourceGroupName);
        }
    }
}
