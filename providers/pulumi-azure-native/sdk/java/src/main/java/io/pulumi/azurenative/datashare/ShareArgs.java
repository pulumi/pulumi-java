// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datashare;

import io.pulumi.azurenative.datashare.enums.ShareKind;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ShareArgs extends io.pulumi.resources.ResourceArgs {

    public static final ShareArgs Empty = new ShareArgs();

    /**
     * The name of the share account.
     * 
     */
    @Import(name="accountName", required=true)
      private final Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName;
    }

    /**
     * Share description.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Share kind.
     * 
     */
    @Import(name="shareKind")
      private final @Nullable Output<Either<String,ShareKind>> shareKind;

    public Output<Either<String,ShareKind>> getShareKind() {
        return this.shareKind == null ? Codegen.empty() : this.shareKind;
    }

    /**
     * The name of the share.
     * 
     */
    @Import(name="shareName")
      private final @Nullable Output<String> shareName;

    public Output<String> getShareName() {
        return this.shareName == null ? Codegen.empty() : this.shareName;
    }

    /**
     * Share terms.
     * 
     */
    @Import(name="terms")
      private final @Nullable Output<String> terms;

    public Output<String> getTerms() {
        return this.terms == null ? Codegen.empty() : this.terms;
    }

    public ShareArgs(
        Output<String> accountName,
        @Nullable Output<String> description,
        Output<String> resourceGroupName,
        @Nullable Output<Either<String,ShareKind>> shareKind,
        @Nullable Output<String> shareName,
        @Nullable Output<String> terms) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.description = description;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.shareKind = shareKind;
        this.shareName = shareName;
        this.terms = terms;
    }

    private ShareArgs() {
        this.accountName = Codegen.empty();
        this.description = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.shareKind = Codegen.empty();
        this.shareName = Codegen.empty();
        this.terms = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountName;
        private @Nullable Output<String> description;
        private Output<String> resourceGroupName;
        private @Nullable Output<Either<String,ShareKind>> shareKind;
        private @Nullable Output<String> shareName;
        private @Nullable Output<String> terms;

        public Builder() {
    	      // Empty
        }

        public Builder(ShareArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.description = defaults.description;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.shareKind = defaults.shareKind;
    	      this.shareName = defaults.shareName;
    	      this.terms = defaults.terms;
        }

        public Builder accountName(Output<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        public Builder accountName(String accountName) {
            this.accountName = Output.of(Objects.requireNonNull(accountName));
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder shareKind(@Nullable Output<Either<String,ShareKind>> shareKind) {
            this.shareKind = shareKind;
            return this;
        }
        public Builder shareKind(@Nullable Either<String,ShareKind> shareKind) {
            this.shareKind = Codegen.ofNullable(shareKind);
            return this;
        }
        public Builder shareName(@Nullable Output<String> shareName) {
            this.shareName = shareName;
            return this;
        }
        public Builder shareName(@Nullable String shareName) {
            this.shareName = Codegen.ofNullable(shareName);
            return this;
        }
        public Builder terms(@Nullable Output<String> terms) {
            this.terms = terms;
            return this;
        }
        public Builder terms(@Nullable String terms) {
            this.terms = Codegen.ofNullable(terms);
            return this;
        }        public ShareArgs build() {
            return new ShareArgs(accountName, description, resourceGroupName, shareKind, shareName, terms);
        }
    }
}
