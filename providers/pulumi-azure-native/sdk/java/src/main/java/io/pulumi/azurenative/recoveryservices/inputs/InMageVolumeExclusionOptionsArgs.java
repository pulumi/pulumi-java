// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
 * 
 */
public final class InMageVolumeExclusionOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final InMageVolumeExclusionOptionsArgs Empty = new InMageVolumeExclusionOptionsArgs();

    /**
     * The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.
     * 
     */
    @Import(name="onlyExcludeIfSingleVolume")
      private final @Nullable Output<String> onlyExcludeIfSingleVolume;

    public Output<String> onlyExcludeIfSingleVolume() {
        return this.onlyExcludeIfSingleVolume == null ? Codegen.empty() : this.onlyExcludeIfSingleVolume;
    }

    /**
     * The volume label. The disk having any volume with this label will be excluded from replication.
     * 
     */
    @Import(name="volumeLabel")
      private final @Nullable Output<String> volumeLabel;

    public Output<String> volumeLabel() {
        return this.volumeLabel == null ? Codegen.empty() : this.volumeLabel;
    }

    public InMageVolumeExclusionOptionsArgs(
        @Nullable Output<String> onlyExcludeIfSingleVolume,
        @Nullable Output<String> volumeLabel) {
        this.onlyExcludeIfSingleVolume = onlyExcludeIfSingleVolume;
        this.volumeLabel = volumeLabel;
    }

    private InMageVolumeExclusionOptionsArgs() {
        this.onlyExcludeIfSingleVolume = Codegen.empty();
        this.volumeLabel = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InMageVolumeExclusionOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> onlyExcludeIfSingleVolume;
        private @Nullable Output<String> volumeLabel;

        public Builder() {
    	      // Empty
        }

        public Builder(InMageVolumeExclusionOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.onlyExcludeIfSingleVolume = defaults.onlyExcludeIfSingleVolume;
    	      this.volumeLabel = defaults.volumeLabel;
        }

        public Builder onlyExcludeIfSingleVolume(@Nullable Output<String> onlyExcludeIfSingleVolume) {
            this.onlyExcludeIfSingleVolume = onlyExcludeIfSingleVolume;
            return this;
        }
        public Builder onlyExcludeIfSingleVolume(@Nullable String onlyExcludeIfSingleVolume) {
            this.onlyExcludeIfSingleVolume = Codegen.ofNullable(onlyExcludeIfSingleVolume);
            return this;
        }
        public Builder volumeLabel(@Nullable Output<String> volumeLabel) {
            this.volumeLabel = volumeLabel;
            return this;
        }
        public Builder volumeLabel(@Nullable String volumeLabel) {
            this.volumeLabel = Codegen.ofNullable(volumeLabel);
            return this;
        }        public InMageVolumeExclusionOptionsArgs build() {
            return new InMageVolumeExclusionOptionsArgs(onlyExcludeIfSingleVolume, volumeLabel);
        }
    }
}
