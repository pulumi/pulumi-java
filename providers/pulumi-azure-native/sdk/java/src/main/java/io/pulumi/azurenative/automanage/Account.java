// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automanage;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.automanage.outputs.AccountIdentityResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Definition of the Automanage account.
API Version: 2020-06-30-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create or update Automanage account
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var account = new AzureNative.Automanage.Account("account", new AzureNative.Automanage.AccountArgs
        {
            AccountName = "account",
            Identity = new AzureNative.Automanage.Inputs.AccountIdentityArgs
            {
                Type = "SystemAssigned",
            },
            Location = "East US",
            ResourceGroupName = "resourceGroup",
            Tags = 
            {
                { "Organization", "Administration" },
            },
        });
    }

}

```

```go
package main

import (
	automanage "github.com/pulumi/pulumi-azure-native/sdk/go/azure/automanage"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := automanage.NewAccount(ctx, "account", &automanage.AccountArgs{
			AccountName: pulumi.String("account"),
			Identity: &automanage.AccountIdentityArgs{
				Type: "SystemAssigned",
			},
			Location:          pulumi.String("East US"),
			ResourceGroupName: pulumi.String("resourceGroup"),
			Tags: pulumi.StringMap{
				"Organization": pulumi.String("Administration"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const account = new azure_native.automanage.Account("account", {
    accountName: "account",
    identity: {
        type: "SystemAssigned",
    },
    location: "East US",
    resourceGroupName: "resourceGroup",
    tags: {
        Organization: "Administration",
    },
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

account = azure_native.automanage.Account("account",
    account_name="account",
    identity=azure_native.automanage.AccountIdentityArgs(
        type="SystemAssigned",
    ),
    location="East US",
    resource_group_name="resourceGroup",
    tags={
        "Organization": "Administration",
    })

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:automanage:Account account /subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automanage/accounts/account 
```

 */
@ResourceType(type="azure-native:automanage:Account")
public class Account extends io.pulumi.resources.CustomResource {
    /**
     * The identity of the Automanage account.
     */
    @OutputExport(name="identity", type=AccountIdentityResponse.class, parameters={})
    private Output</* @Nullable */ AccountIdentityResponse> identity;

    /**
     * @return The identity of the Automanage account.
     */
    public Output</* @Nullable */ AccountIdentityResponse> getIdentity() {
        return this.identity;
    }
    /**
     * The geo-location where the resource lives
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Account(String name, AccountArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:automanage:Account", name, args == null ? AccountArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Account(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:automanage:Account", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:automanage/v20200630preview:Account").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Account get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Account(name, id, options);
    }
}
