// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.inputs.AutoScaleSettingsArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.CodeConfigurationArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.DataPathAssetReferenceArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.IdAssetReferenceArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.ManualScaleSettingsArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.OnlineRequestSettingsArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.OutputPathAssetReferenceArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.ProbeSettingsArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ManagedOnlineDeploymentArgs extends io.pulumi.resources.ResourceArgs {

    public static final ManagedOnlineDeploymentArgs Empty = new ManagedOnlineDeploymentArgs();

    /**
     * If true, enables Application Insights logging.
     * 
     */
    @InputImport(name="appInsightsEnabled")
      private final @Nullable Input<Boolean> appInsightsEnabled;

    public Input<Boolean> getAppInsightsEnabled() {
        return this.appInsightsEnabled == null ? Input.empty() : this.appInsightsEnabled;
    }

    /**
     * Code configuration for the endpoint deployment.
     * 
     */
    @InputImport(name="codeConfiguration")
      private final @Nullable Input<CodeConfigurationArgs> codeConfiguration;

    public Input<CodeConfigurationArgs> getCodeConfiguration() {
        return this.codeConfiguration == null ? Input.empty() : this.codeConfiguration;
    }

    /**
     * Description of the endpoint deployment.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Enum to determine endpoint compute type.
     * Expected value is 'Managed'.
     * 
     */
    @InputImport(name="endpointComputeType", required=true)
      private final Input<String> endpointComputeType;

    public Input<String> getEndpointComputeType() {
        return this.endpointComputeType;
    }

    /**
     * ARM resource ID of the environment specification for the endpoint deployment.
     * 
     */
    @InputImport(name="environmentId")
      private final @Nullable Input<String> environmentId;

    public Input<String> getEnvironmentId() {
        return this.environmentId == null ? Input.empty() : this.environmentId;
    }

    /**
     * Environment variables configuration for the deployment.
     * 
     */
    @InputImport(name="environmentVariables")
      private final @Nullable Input<Map<String,String>> environmentVariables;

    public Input<Map<String,String>> getEnvironmentVariables() {
        return this.environmentVariables == null ? Input.empty() : this.environmentVariables;
    }

    /**
     * Compute instance type.
     * 
     */
    @InputImport(name="instanceType")
      private final @Nullable Input<String> instanceType;

    public Input<String> getInstanceType() {
        return this.instanceType == null ? Input.empty() : this.instanceType;
    }

    /**
     * Deployment container liveness/readiness probe configuration.
     * 
     */
    @InputImport(name="livenessProbe")
      private final @Nullable Input<ProbeSettingsArgs> livenessProbe;

    public Input<ProbeSettingsArgs> getLivenessProbe() {
        return this.livenessProbe == null ? Input.empty() : this.livenessProbe;
    }

    /**
     * Reference to the model asset for the endpoint deployment.
     * 
     */
    @InputImport(name="model")
      private final @Nullable Input<Object> model;

    public Input<Object> getModel() {
        return this.model == null ? Input.empty() : this.model;
    }

    /**
     * Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    @InputImport(name="properties")
      private final @Nullable Input<Map<String,String>> properties;

    public Input<Map<String,String>> getProperties() {
        return this.properties == null ? Input.empty() : this.properties;
    }

    /**
     * Deployment container liveness/readiness probe configuration.
     * 
     */
    @InputImport(name="readinessProbe")
      private final @Nullable Input<ProbeSettingsArgs> readinessProbe;

    public Input<ProbeSettingsArgs> getReadinessProbe() {
        return this.readinessProbe == null ? Input.empty() : this.readinessProbe;
    }

    /**
     * Online deployment scoring requests configuration.
     * 
     */
    @InputImport(name="requestSettings")
      private final @Nullable Input<OnlineRequestSettingsArgs> requestSettings;

    public Input<OnlineRequestSettingsArgs> getRequestSettings() {
        return this.requestSettings == null ? Input.empty() : this.requestSettings;
    }

    /**
     * Online deployment scaling configuration.
     * 
     */
    @InputImport(name="scaleSettings")
      private final @Nullable Input<Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs>> scaleSettings;

    public Input<Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs>> getScaleSettings() {
        return this.scaleSettings == null ? Input.empty() : this.scaleSettings;
    }

    public ManagedOnlineDeploymentArgs(
        @Nullable Input<Boolean> appInsightsEnabled,
        @Nullable Input<CodeConfigurationArgs> codeConfiguration,
        @Nullable Input<String> description,
        Input<String> endpointComputeType,
        @Nullable Input<String> environmentId,
        @Nullable Input<Map<String,String>> environmentVariables,
        @Nullable Input<String> instanceType,
        @Nullable Input<ProbeSettingsArgs> livenessProbe,
        @Nullable Input<Object> model,
        @Nullable Input<Map<String,String>> properties,
        @Nullable Input<ProbeSettingsArgs> readinessProbe,
        @Nullable Input<OnlineRequestSettingsArgs> requestSettings,
        @Nullable Input<Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs>> scaleSettings) {
        this.appInsightsEnabled = appInsightsEnabled;
        this.codeConfiguration = codeConfiguration;
        this.description = description;
        this.endpointComputeType = Objects.requireNonNull(endpointComputeType, "expected parameter 'endpointComputeType' to be non-null");
        this.environmentId = environmentId;
        this.environmentVariables = environmentVariables;
        this.instanceType = instanceType;
        this.livenessProbe = livenessProbe;
        this.model = model;
        this.properties = properties;
        this.readinessProbe = readinessProbe;
        this.requestSettings = requestSettings;
        this.scaleSettings = scaleSettings;
    }

    private ManagedOnlineDeploymentArgs() {
        this.appInsightsEnabled = Input.empty();
        this.codeConfiguration = Input.empty();
        this.description = Input.empty();
        this.endpointComputeType = Input.empty();
        this.environmentId = Input.empty();
        this.environmentVariables = Input.empty();
        this.instanceType = Input.empty();
        this.livenessProbe = Input.empty();
        this.model = Input.empty();
        this.properties = Input.empty();
        this.readinessProbe = Input.empty();
        this.requestSettings = Input.empty();
        this.scaleSettings = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedOnlineDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> appInsightsEnabled;
        private @Nullable Input<CodeConfigurationArgs> codeConfiguration;
        private @Nullable Input<String> description;
        private Input<String> endpointComputeType;
        private @Nullable Input<String> environmentId;
        private @Nullable Input<Map<String,String>> environmentVariables;
        private @Nullable Input<String> instanceType;
        private @Nullable Input<ProbeSettingsArgs> livenessProbe;
        private @Nullable Input<Object> model;
        private @Nullable Input<Map<String,String>> properties;
        private @Nullable Input<ProbeSettingsArgs> readinessProbe;
        private @Nullable Input<OnlineRequestSettingsArgs> requestSettings;
        private @Nullable Input<Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs>> scaleSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedOnlineDeploymentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appInsightsEnabled = defaults.appInsightsEnabled;
    	      this.codeConfiguration = defaults.codeConfiguration;
    	      this.description = defaults.description;
    	      this.endpointComputeType = defaults.endpointComputeType;
    	      this.environmentId = defaults.environmentId;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.instanceType = defaults.instanceType;
    	      this.livenessProbe = defaults.livenessProbe;
    	      this.model = defaults.model;
    	      this.properties = defaults.properties;
    	      this.readinessProbe = defaults.readinessProbe;
    	      this.requestSettings = defaults.requestSettings;
    	      this.scaleSettings = defaults.scaleSettings;
        }

        public Builder setAppInsightsEnabled(@Nullable Input<Boolean> appInsightsEnabled) {
            this.appInsightsEnabled = appInsightsEnabled;
            return this;
        }

        public Builder setAppInsightsEnabled(@Nullable Boolean appInsightsEnabled) {
            this.appInsightsEnabled = Input.ofNullable(appInsightsEnabled);
            return this;
        }

        public Builder setCodeConfiguration(@Nullable Input<CodeConfigurationArgs> codeConfiguration) {
            this.codeConfiguration = codeConfiguration;
            return this;
        }

        public Builder setCodeConfiguration(@Nullable CodeConfigurationArgs codeConfiguration) {
            this.codeConfiguration = Input.ofNullable(codeConfiguration);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setEndpointComputeType(Input<String> endpointComputeType) {
            this.endpointComputeType = Objects.requireNonNull(endpointComputeType);
            return this;
        }

        public Builder setEndpointComputeType(String endpointComputeType) {
            this.endpointComputeType = Input.of(Objects.requireNonNull(endpointComputeType));
            return this;
        }

        public Builder setEnvironmentId(@Nullable Input<String> environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        public Builder setEnvironmentId(@Nullable String environmentId) {
            this.environmentId = Input.ofNullable(environmentId);
            return this;
        }

        public Builder setEnvironmentVariables(@Nullable Input<Map<String,String>> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }

        public Builder setEnvironmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = Input.ofNullable(environmentVariables);
            return this;
        }

        public Builder setInstanceType(@Nullable Input<String> instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        public Builder setInstanceType(@Nullable String instanceType) {
            this.instanceType = Input.ofNullable(instanceType);
            return this;
        }

        public Builder setLivenessProbe(@Nullable Input<ProbeSettingsArgs> livenessProbe) {
            this.livenessProbe = livenessProbe;
            return this;
        }

        public Builder setLivenessProbe(@Nullable ProbeSettingsArgs livenessProbe) {
            this.livenessProbe = Input.ofNullable(livenessProbe);
            return this;
        }

        public Builder setModel(@Nullable Input<Object> model) {
            this.model = model;
            return this;
        }

        public Builder setModel(@Nullable Object model) {
            this.model = Input.ofNullable(model);
            return this;
        }

        public Builder setProperties(@Nullable Input<Map<String,String>> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProperties(@Nullable Map<String,String> properties) {
            this.properties = Input.ofNullable(properties);
            return this;
        }

        public Builder setReadinessProbe(@Nullable Input<ProbeSettingsArgs> readinessProbe) {
            this.readinessProbe = readinessProbe;
            return this;
        }

        public Builder setReadinessProbe(@Nullable ProbeSettingsArgs readinessProbe) {
            this.readinessProbe = Input.ofNullable(readinessProbe);
            return this;
        }

        public Builder setRequestSettings(@Nullable Input<OnlineRequestSettingsArgs> requestSettings) {
            this.requestSettings = requestSettings;
            return this;
        }

        public Builder setRequestSettings(@Nullable OnlineRequestSettingsArgs requestSettings) {
            this.requestSettings = Input.ofNullable(requestSettings);
            return this;
        }

        public Builder setScaleSettings(@Nullable Input<Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs>> scaleSettings) {
            this.scaleSettings = scaleSettings;
            return this;
        }

        public Builder setScaleSettings(@Nullable Either<AutoScaleSettingsArgs,ManualScaleSettingsArgs> scaleSettings) {
            this.scaleSettings = Input.ofNullable(scaleSettings);
            return this;
        }
        public ManagedOnlineDeploymentArgs build() {
            return new ManagedOnlineDeploymentArgs(appInsightsEnabled, codeConfiguration, description, endpointComputeType, environmentId, environmentVariables, instanceType, livenessProbe, model, properties, readinessProbe, requestSettings, scaleSettings);
        }
    }
}
