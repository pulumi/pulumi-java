// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Describes destination endpoint for routing traffic.
 * 
 */
public final class GatewayDestinationResponse extends io.pulumi.resources.InvokeArgs {

    public static final GatewayDestinationResponse Empty = new GatewayDestinationResponse();

    /**
     * Name of the service fabric Mesh application.
     * 
     */
    @InputImport(name="applicationName", required=true)
        private final String applicationName;

    public String getApplicationName() {
        return this.applicationName;
    }

    /**
     * name of the endpoint in the service.
     * 
     */
    @InputImport(name="endpointName", required=true)
        private final String endpointName;

    public String getEndpointName() {
        return this.endpointName;
    }

    /**
     * service that contains the endpoint.
     * 
     */
    @InputImport(name="serviceName", required=true)
        private final String serviceName;

    public String getServiceName() {
        return this.serviceName;
    }

    public GatewayDestinationResponse(
        String applicationName,
        String endpointName,
        String serviceName) {
        this.applicationName = Objects.requireNonNull(applicationName, "expected parameter 'applicationName' to be non-null");
        this.endpointName = Objects.requireNonNull(endpointName, "expected parameter 'endpointName' to be non-null");
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
    }

    private GatewayDestinationResponse() {
        this.applicationName = null;
        this.endpointName = null;
        this.serviceName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayDestinationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String applicationName;
        private String endpointName;
        private String serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayDestinationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationName = defaults.applicationName;
    	      this.endpointName = defaults.endpointName;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder setApplicationName(String applicationName) {
            this.applicationName = Objects.requireNonNull(applicationName);
            return this;
        }

        public Builder setEndpointName(String endpointName) {
            this.endpointName = Objects.requireNonNull(endpointName);
            return this;
        }

        public Builder setServiceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public GatewayDestinationResponse build() {
            return new GatewayDestinationResponse(applicationName, endpointName, serviceName);
        }
    }
}
