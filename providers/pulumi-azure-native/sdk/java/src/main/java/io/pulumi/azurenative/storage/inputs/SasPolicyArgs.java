// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.inputs;

import io.pulumi.azurenative.storage.enums.ExpirationAction;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * SasPolicy assigned to the storage account.
 * 
 */
public final class SasPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final SasPolicyArgs Empty = new SasPolicyArgs();

    /**
     * The SAS expiration action. Can only be Log.
     * 
     */
    @InputImport(name="expirationAction", required=true)
        private final Input<Either<String,ExpirationAction>> expirationAction;

    public Input<Either<String,ExpirationAction>> getExpirationAction() {
        return this.expirationAction;
    }

    /**
     * The SAS expiration period, DD.HH:MM:SS.
     * 
     */
    @InputImport(name="sasExpirationPeriod", required=true)
        private final Input<String> sasExpirationPeriod;

    public Input<String> getSasExpirationPeriod() {
        return this.sasExpirationPeriod;
    }

    public SasPolicyArgs(
        Input<Either<String,ExpirationAction>> expirationAction,
        Input<String> sasExpirationPeriod) {
        this.expirationAction = expirationAction == null ? Input.ofLeft("Log") : Objects.requireNonNull(expirationAction, "expected parameter 'expirationAction' to be non-null");
        this.sasExpirationPeriod = Objects.requireNonNull(sasExpirationPeriod, "expected parameter 'sasExpirationPeriod' to be non-null");
    }

    private SasPolicyArgs() {
        this.expirationAction = Input.empty();
        this.sasExpirationPeriod = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SasPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Either<String,ExpirationAction>> expirationAction;
        private Input<String> sasExpirationPeriod;

        public Builder() {
    	      // Empty
        }

        public Builder(SasPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationAction = defaults.expirationAction;
    	      this.sasExpirationPeriod = defaults.sasExpirationPeriod;
        }

        public Builder setExpirationAction(Input<Either<String,ExpirationAction>> expirationAction) {
            this.expirationAction = Objects.requireNonNull(expirationAction);
            return this;
        }

        public Builder setExpirationAction(Either<String,ExpirationAction> expirationAction) {
            this.expirationAction = Input.of(Objects.requireNonNull(expirationAction));
            return this;
        }

        public Builder setSasExpirationPeriod(Input<String> sasExpirationPeriod) {
            this.sasExpirationPeriod = Objects.requireNonNull(sasExpirationPeriod);
            return this;
        }

        public Builder setSasExpirationPeriod(String sasExpirationPeriod) {
            this.sasExpirationPeriod = Input.of(Objects.requireNonNull(sasExpirationPeriod));
            return this;
        }
        public SasPolicyArgs build() {
            return new SasPolicyArgs(expirationAction, sasExpirationPeriod);
        }
    }
}
