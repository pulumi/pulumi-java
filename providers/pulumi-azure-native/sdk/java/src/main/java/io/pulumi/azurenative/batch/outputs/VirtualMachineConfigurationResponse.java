// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.outputs;

import io.pulumi.azurenative.batch.outputs.ContainerConfigurationResponse;
import io.pulumi.azurenative.batch.outputs.DataDiskResponse;
import io.pulumi.azurenative.batch.outputs.DiskEncryptionConfigurationResponse;
import io.pulumi.azurenative.batch.outputs.ImageReferenceResponse;
import io.pulumi.azurenative.batch.outputs.NodePlacementConfigurationResponse;
import io.pulumi.azurenative.batch.outputs.VMExtensionResponse;
import io.pulumi.azurenative.batch.outputs.WindowsConfigurationResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class VirtualMachineConfigurationResponse {
    private final @Nullable ContainerConfigurationResponse containerConfiguration;
    private final @Nullable List<DataDiskResponse> dataDisks;
    private final @Nullable DiskEncryptionConfigurationResponse diskEncryptionConfiguration;
    private final @Nullable List<VMExtensionResponse> extensions;
    private final ImageReferenceResponse imageReference;
    private final @Nullable String licenseType;
    private final String nodeAgentSkuId;
    private final @Nullable NodePlacementConfigurationResponse nodePlacementConfiguration;
    private final @Nullable WindowsConfigurationResponse windowsConfiguration;

    @OutputCustomType.Constructor({"containerConfiguration","dataDisks","diskEncryptionConfiguration","extensions","imageReference","licenseType","nodeAgentSkuId","nodePlacementConfiguration","windowsConfiguration"})
    private VirtualMachineConfigurationResponse(
        @Nullable ContainerConfigurationResponse containerConfiguration,
        @Nullable List<DataDiskResponse> dataDisks,
        @Nullable DiskEncryptionConfigurationResponse diskEncryptionConfiguration,
        @Nullable List<VMExtensionResponse> extensions,
        ImageReferenceResponse imageReference,
        @Nullable String licenseType,
        String nodeAgentSkuId,
        @Nullable NodePlacementConfigurationResponse nodePlacementConfiguration,
        @Nullable WindowsConfigurationResponse windowsConfiguration) {
        this.containerConfiguration = containerConfiguration;
        this.dataDisks = dataDisks;
        this.diskEncryptionConfiguration = diskEncryptionConfiguration;
        this.extensions = extensions;
        this.imageReference = Objects.requireNonNull(imageReference);
        this.licenseType = licenseType;
        this.nodeAgentSkuId = Objects.requireNonNull(nodeAgentSkuId);
        this.nodePlacementConfiguration = nodePlacementConfiguration;
        this.windowsConfiguration = windowsConfiguration;
    }

    public Optional<ContainerConfigurationResponse> getContainerConfiguration() {
        return Optional.ofNullable(this.containerConfiguration);
    }
    public List<DataDiskResponse> getDataDisks() {
        return this.dataDisks == null ? List.of() : this.dataDisks;
    }
    public Optional<DiskEncryptionConfigurationResponse> getDiskEncryptionConfiguration() {
        return Optional.ofNullable(this.diskEncryptionConfiguration);
    }
    public List<VMExtensionResponse> getExtensions() {
        return this.extensions == null ? List.of() : this.extensions;
    }
    public ImageReferenceResponse getImageReference() {
        return this.imageReference;
    }
    public Optional<String> getLicenseType() {
        return Optional.ofNullable(this.licenseType);
    }
    public String getNodeAgentSkuId() {
        return this.nodeAgentSkuId;
    }
    public Optional<NodePlacementConfigurationResponse> getNodePlacementConfiguration() {
        return Optional.ofNullable(this.nodePlacementConfiguration);
    }
    public Optional<WindowsConfigurationResponse> getWindowsConfiguration() {
        return Optional.ofNullable(this.windowsConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ContainerConfigurationResponse containerConfiguration;
        private @Nullable List<DataDiskResponse> dataDisks;
        private @Nullable DiskEncryptionConfigurationResponse diskEncryptionConfiguration;
        private @Nullable List<VMExtensionResponse> extensions;
        private ImageReferenceResponse imageReference;
        private @Nullable String licenseType;
        private String nodeAgentSkuId;
        private @Nullable NodePlacementConfigurationResponse nodePlacementConfiguration;
        private @Nullable WindowsConfigurationResponse windowsConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerConfiguration = defaults.containerConfiguration;
    	      this.dataDisks = defaults.dataDisks;
    	      this.diskEncryptionConfiguration = defaults.diskEncryptionConfiguration;
    	      this.extensions = defaults.extensions;
    	      this.imageReference = defaults.imageReference;
    	      this.licenseType = defaults.licenseType;
    	      this.nodeAgentSkuId = defaults.nodeAgentSkuId;
    	      this.nodePlacementConfiguration = defaults.nodePlacementConfiguration;
    	      this.windowsConfiguration = defaults.windowsConfiguration;
        }

        public Builder setContainerConfiguration(@Nullable ContainerConfigurationResponse containerConfiguration) {
            this.containerConfiguration = containerConfiguration;
            return this;
        }

        public Builder setDataDisks(@Nullable List<DataDiskResponse> dataDisks) {
            this.dataDisks = dataDisks;
            return this;
        }

        public Builder setDiskEncryptionConfiguration(@Nullable DiskEncryptionConfigurationResponse diskEncryptionConfiguration) {
            this.diskEncryptionConfiguration = diskEncryptionConfiguration;
            return this;
        }

        public Builder setExtensions(@Nullable List<VMExtensionResponse> extensions) {
            this.extensions = extensions;
            return this;
        }

        public Builder setImageReference(ImageReferenceResponse imageReference) {
            this.imageReference = Objects.requireNonNull(imageReference);
            return this;
        }

        public Builder setLicenseType(@Nullable String licenseType) {
            this.licenseType = licenseType;
            return this;
        }

        public Builder setNodeAgentSkuId(String nodeAgentSkuId) {
            this.nodeAgentSkuId = Objects.requireNonNull(nodeAgentSkuId);
            return this;
        }

        public Builder setNodePlacementConfiguration(@Nullable NodePlacementConfigurationResponse nodePlacementConfiguration) {
            this.nodePlacementConfiguration = nodePlacementConfiguration;
            return this;
        }

        public Builder setWindowsConfiguration(@Nullable WindowsConfigurationResponse windowsConfiguration) {
            this.windowsConfiguration = windowsConfiguration;
            return this;
        }

        public VirtualMachineConfigurationResponse build() {
            return new VirtualMachineConfigurationResponse(containerConfiguration, dataDisks, diskEncryptionConfiguration, extensions, imageReference, licenseType, nodeAgentSkuId, nodePlacementConfiguration, windowsConfiguration);
        }
    }
}
