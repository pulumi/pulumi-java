// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.datafactory.TriggerArgs;
import io.pulumi.azurenative.datafactory.outputs.BlobEventsTriggerResponse;
import io.pulumi.azurenative.datafactory.outputs.BlobTriggerResponse;
import io.pulumi.azurenative.datafactory.outputs.ChainingTriggerResponse;
import io.pulumi.azurenative.datafactory.outputs.CustomEventsTriggerResponse;
import io.pulumi.azurenative.datafactory.outputs.MultiplePipelineTriggerResponse;
import io.pulumi.azurenative.datafactory.outputs.RerunTumblingWindowTriggerResponse;
import io.pulumi.azurenative.datafactory.outputs.ScheduleTriggerResponse;
import io.pulumi.azurenative.datafactory.outputs.TumblingWindowTriggerResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Trigger resource type.
API Version: 2018-06-01.

{{% examples %}}
## Example Usage
{{% example %}}
### Triggers_Create
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var trigger = new AzureNative.DataFactory.Trigger("trigger", new AzureNative.DataFactory.TriggerArgs
        {
            FactoryName = "exampleFactoryName",
            Properties = new AzureNative.DataFactory.Inputs.ScheduleTriggerArgs
            {
                Pipelines = 
                {
                    new AzureNative.DataFactory.Inputs.TriggerPipelineReferenceArgs
                    {
                        Parameters = 
                        {
                            { "OutputBlobNameList", 
                            {
                                "exampleoutput.csv",
                            } },
                        },
                        PipelineReference = new AzureNative.DataFactory.Inputs.PipelineReferenceArgs
                        {
                            ReferenceName = "examplePipeline",
                            Type = "PipelineReference",
                        },
                    },
                },
                Recurrence = new AzureNative.DataFactory.Inputs.ScheduleTriggerRecurrenceArgs
                {
                    EndTime = "2018-06-16T00:55:13.8441801Z",
                    Frequency = "Minute",
                    Interval = 4,
                    StartTime = "2018-06-16T00:39:13.8441801Z",
                    TimeZone = "UTC",
                },
                Type = "ScheduleTrigger",
            },
            ResourceGroupName = "exampleResourceGroup",
            TriggerName = "exampleTrigger",
        });
    }

}

```

```go
package main

import (
	datafactory "github.com/pulumi/pulumi-azure-native/sdk/go/azure/datafactory"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := datafactory.NewTrigger(ctx, "trigger", &datafactory.TriggerArgs{
			FactoryName: pulumi.String("exampleFactoryName"),
			Properties: datafactory.ScheduleTrigger{
				Pipelines: []datafactory.TriggerPipelineReference{
					datafactory.TriggerPipelineReference{
						Parameters: map[string]interface{}{
							"OutputBlobNameList": []string{
								"exampleoutput.csv",
							},
						},
						PipelineReference: datafactory.PipelineReference{
							ReferenceName: "examplePipeline",
							Type:          "PipelineReference",
						},
					},
				},
				Recurrence: datafactory.ScheduleTriggerRecurrence{
					EndTime:   "2018-06-16T00:55:13.8441801Z",
					Frequency: "Minute",
					Interval:  4,
					StartTime: "2018-06-16T00:39:13.8441801Z",
					TimeZone:  "UTC",
				},
				Type: "ScheduleTrigger",
			},
			ResourceGroupName: pulumi.String("exampleResourceGroup"),
			TriggerName:       pulumi.String("exampleTrigger"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const trigger = new azure_native.datafactory.Trigger("trigger", {
    factoryName: "exampleFactoryName",
    properties: {
        pipelines: [{
            parameters: {
                OutputBlobNameList: ["exampleoutput.csv"],
            },
            pipelineReference: {
                referenceName: "examplePipeline",
                type: "PipelineReference",
            },
        }],
        recurrence: {
            endTime: "2018-06-16T00:55:13.8441801Z",
            frequency: "Minute",
            interval: 4,
            startTime: "2018-06-16T00:39:13.8441801Z",
            timeZone: "UTC",
        },
        type: "ScheduleTrigger",
    },
    resourceGroupName: "exampleResourceGroup",
    triggerName: "exampleTrigger",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

trigger = azure_native.datafactory.Trigger("trigger",
    factory_name="exampleFactoryName",
    properties=azure_native.datafactory.ScheduleTriggerArgs(
        pipelines=[azure_native.datafactory.TriggerPipelineReferenceArgs(
            parameters={
                "OutputBlobNameList": ["exampleoutput.csv"],
            },
            pipeline_reference=azure_native.datafactory.PipelineReferenceArgs(
                reference_name="examplePipeline",
                type="PipelineReference",
            ),
        )],
        recurrence=azure_native.datafactory.ScheduleTriggerRecurrenceArgs(
            end_time="2018-06-16T00:55:13.8441801Z",
            frequency="Minute",
            interval=4,
            start_time="2018-06-16T00:39:13.8441801Z",
            time_zone="UTC",
        ),
        type="ScheduleTrigger",
    ),
    resource_group_name="exampleResourceGroup",
    trigger_name="exampleTrigger")

```

{{% /example %}}
{{% example %}}
### Triggers_Update
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var trigger = new AzureNative.DataFactory.Trigger("trigger", new AzureNative.DataFactory.TriggerArgs
        {
            FactoryName = "exampleFactoryName",
            Properties = new AzureNative.DataFactory.Inputs.ScheduleTriggerArgs
            {
                Description = "Example description",
                Pipelines = 
                {
                    new AzureNative.DataFactory.Inputs.TriggerPipelineReferenceArgs
                    {
                        Parameters = 
                        {
                            { "OutputBlobNameList", 
                            {
                                "exampleoutput.csv",
                            } },
                        },
                        PipelineReference = new AzureNative.DataFactory.Inputs.PipelineReferenceArgs
                        {
                            ReferenceName = "examplePipeline",
                            Type = "PipelineReference",
                        },
                    },
                },
                Recurrence = new AzureNative.DataFactory.Inputs.ScheduleTriggerRecurrenceArgs
                {
                    EndTime = "2018-06-16T00:55:14.905167Z",
                    Frequency = "Minute",
                    Interval = 4,
                    StartTime = "2018-06-16T00:39:14.905167Z",
                    TimeZone = "UTC",
                },
                Type = "ScheduleTrigger",
            },
            ResourceGroupName = "exampleResourceGroup",
            TriggerName = "exampleTrigger",
        });
    }

}

```

```go
package main

import (
	datafactory "github.com/pulumi/pulumi-azure-native/sdk/go/azure/datafactory"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := datafactory.NewTrigger(ctx, "trigger", &datafactory.TriggerArgs{
			FactoryName: pulumi.String("exampleFactoryName"),
			Properties: datafactory.ScheduleTrigger{
				Description: "Example description",
				Pipelines: []datafactory.TriggerPipelineReference{
					datafactory.TriggerPipelineReference{
						Parameters: map[string]interface{}{
							"OutputBlobNameList": []string{
								"exampleoutput.csv",
							},
						},
						PipelineReference: datafactory.PipelineReference{
							ReferenceName: "examplePipeline",
							Type:          "PipelineReference",
						},
					},
				},
				Recurrence: datafactory.ScheduleTriggerRecurrence{
					EndTime:   "2018-06-16T00:55:14.905167Z",
					Frequency: "Minute",
					Interval:  4,
					StartTime: "2018-06-16T00:39:14.905167Z",
					TimeZone:  "UTC",
				},
				Type: "ScheduleTrigger",
			},
			ResourceGroupName: pulumi.String("exampleResourceGroup"),
			TriggerName:       pulumi.String("exampleTrigger"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const trigger = new azure_native.datafactory.Trigger("trigger", {
    factoryName: "exampleFactoryName",
    properties: {
        description: "Example description",
        pipelines: [{
            parameters: {
                OutputBlobNameList: ["exampleoutput.csv"],
            },
            pipelineReference: {
                referenceName: "examplePipeline",
                type: "PipelineReference",
            },
        }],
        recurrence: {
            endTime: "2018-06-16T00:55:14.905167Z",
            frequency: "Minute",
            interval: 4,
            startTime: "2018-06-16T00:39:14.905167Z",
            timeZone: "UTC",
        },
        type: "ScheduleTrigger",
    },
    resourceGroupName: "exampleResourceGroup",
    triggerName: "exampleTrigger",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

trigger = azure_native.datafactory.Trigger("trigger",
    factory_name="exampleFactoryName",
    properties=azure_native.datafactory.ScheduleTriggerArgs(
        description="Example description",
        pipelines=[azure_native.datafactory.TriggerPipelineReferenceArgs(
            parameters={
                "OutputBlobNameList": ["exampleoutput.csv"],
            },
            pipeline_reference=azure_native.datafactory.PipelineReferenceArgs(
                reference_name="examplePipeline",
                type="PipelineReference",
            ),
        )],
        recurrence=azure_native.datafactory.ScheduleTriggerRecurrenceArgs(
            end_time="2018-06-16T00:55:14.905167Z",
            frequency="Minute",
            interval=4,
            start_time="2018-06-16T00:39:14.905167Z",
            time_zone="UTC",
        ),
        type="ScheduleTrigger",
    ),
    resource_group_name="exampleResourceGroup",
    trigger_name="exampleTrigger")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:datafactory:Trigger exampleTrigger /subscriptions/12345678-1234-1234-1234-12345678abc/resourceGroups/exampleResourceGroup/providers/Microsoft.DataFactory/factories/exampleFactoryName/triggers/exampleTrigger 
```

 */
@ResourceType(type="azure-native:datafactory:Trigger")
public class Trigger extends io.pulumi.resources.CustomResource {
    /**
     * Etag identifies change in the resource.
     */
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return Etag identifies change in the resource.
     */
    public Output<String> getEtag() {
        return this.etag;
    }
    /**
     * The resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Properties of the trigger.
     */
    @OutputExport(name="properties", type=Object.class, parameters={})
    private Output<Object> properties;

    /**
     * @return Properties of the trigger.
     */
    public Output<Object> getProperties() {
        return this.properties;
    }
    /**
     * The resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Trigger(String name, TriggerArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:datafactory:Trigger", name, args == null ? TriggerArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Trigger(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:datafactory:Trigger", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:datafactory/v20170901preview:Trigger").build()),
                Input.of(Alias.builder().setType("azure-native:datafactory/v20180601:Trigger").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Trigger get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Trigger(name, id, options);
    }
}
