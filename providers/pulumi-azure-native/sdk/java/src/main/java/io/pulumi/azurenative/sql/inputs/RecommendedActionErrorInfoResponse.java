// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class RecommendedActionErrorInfoResponse extends io.pulumi.resources.InvokeArgs {

    public static final RecommendedActionErrorInfoResponse Empty = new RecommendedActionErrorInfoResponse();

    @InputImport(name="errorCode", required=true)
    private final String errorCode;

    public String getErrorCode() {
        return this.errorCode;
    }

    @InputImport(name="isRetryable", required=true)
    private final String isRetryable;

    public String getIsRetryable() {
        return this.isRetryable;
    }

    public RecommendedActionErrorInfoResponse(
        String errorCode,
        String isRetryable) {
        this.errorCode = Objects.requireNonNull(errorCode, "expected parameter 'errorCode' to be non-null");
        this.isRetryable = Objects.requireNonNull(isRetryable, "expected parameter 'isRetryable' to be non-null");
    }

    private RecommendedActionErrorInfoResponse() {
        this.errorCode = null;
        this.isRetryable = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecommendedActionErrorInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String errorCode;
        private String isRetryable;

        public Builder() {
    	      // Empty
        }

        public Builder(RecommendedActionErrorInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorCode = defaults.errorCode;
    	      this.isRetryable = defaults.isRetryable;
        }

        public Builder setErrorCode(String errorCode) {
            this.errorCode = Objects.requireNonNull(errorCode);
            return this;
        }

        public Builder setIsRetryable(String isRetryable) {
            this.isRetryable = Objects.requireNonNull(isRetryable);
            return this;
        }

        public RecommendedActionErrorInfoResponse build() {
            return new RecommendedActionErrorInfoResponse(errorCode, isRetryable);
        }
    }
}
