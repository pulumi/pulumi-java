// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.netapp;

import io.pulumi.azurenative.netapp.inputs.AccountEncryptionArgs;
import io.pulumi.azurenative.netapp.inputs.ActiveDirectoryArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccountArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccountArgs Empty = new AccountArgs();

    /**
     * The name of the NetApp account
     * 
     */
    @Import(name="accountName")
      private final @Nullable Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName == null ? Output.empty() : this.accountName;
    }

    /**
     * Active Directories
     * 
     */
    @Import(name="activeDirectories")
      private final @Nullable Output<List<ActiveDirectoryArgs>> activeDirectories;

    public Output<List<ActiveDirectoryArgs>> getActiveDirectories() {
        return this.activeDirectories == null ? Output.empty() : this.activeDirectories;
    }

    /**
     * Encryption settings
     * 
     */
    @Import(name="encryption")
      private final @Nullable Output<AccountEncryptionArgs> encryption;

    public Output<AccountEncryptionArgs> getEncryption() {
        return this.encryption == null ? Output.empty() : this.encryption;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public AccountArgs(
        @Nullable Output<String> accountName,
        @Nullable Output<List<ActiveDirectoryArgs>> activeDirectories,
        @Nullable Output<AccountEncryptionArgs> encryption,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.accountName = accountName;
        this.activeDirectories = activeDirectories;
        this.encryption = encryption;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private AccountArgs() {
        this.accountName = Output.empty();
        this.activeDirectories = Output.empty();
        this.encryption = Output.empty();
        this.location = Output.empty();
        this.resourceGroupName = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountName;
        private @Nullable Output<List<ActiveDirectoryArgs>> activeDirectories;
        private @Nullable Output<AccountEncryptionArgs> encryption;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.activeDirectories = defaults.activeDirectories;
    	      this.encryption = defaults.encryption;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder accountName(@Nullable Output<String> accountName) {
            this.accountName = accountName;
            return this;
        }
        public Builder accountName(@Nullable String accountName) {
            this.accountName = Output.ofNullable(accountName);
            return this;
        }
        public Builder activeDirectories(@Nullable Output<List<ActiveDirectoryArgs>> activeDirectories) {
            this.activeDirectories = activeDirectories;
            return this;
        }
        public Builder activeDirectories(@Nullable List<ActiveDirectoryArgs> activeDirectories) {
            this.activeDirectories = Output.ofNullable(activeDirectories);
            return this;
        }
        public Builder activeDirectories(ActiveDirectoryArgs... activeDirectories) {
            return activeDirectories(List.of(activeDirectories));
        }
        public Builder encryption(@Nullable Output<AccountEncryptionArgs> encryption) {
            this.encryption = encryption;
            return this;
        }
        public Builder encryption(@Nullable AccountEncryptionArgs encryption) {
            this.encryption = Output.ofNullable(encryption);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }        public AccountArgs build() {
            return new AccountArgs(accountName, activeDirectories, encryption, location, resourceGroupName, tags);
        }
    }
}
