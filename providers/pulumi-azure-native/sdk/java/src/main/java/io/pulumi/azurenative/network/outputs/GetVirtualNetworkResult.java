// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.AddressSpaceResponse;
import io.pulumi.azurenative.network.outputs.DhcpOptionsResponse;
import io.pulumi.azurenative.network.outputs.ExtendedLocationResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.azurenative.network.outputs.SubnetResponse;
import io.pulumi.azurenative.network.outputs.VirtualNetworkBgpCommunitiesResponse;
import io.pulumi.azurenative.network.outputs.VirtualNetworkPeeringResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualNetworkResult {
    /**
     * The AddressSpace that contains an array of IP address ranges that can be used by subnets.
     * 
     */
    private final @Nullable AddressSpaceResponse addressSpace;
    /**
     * Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
     * 
     */
    private final @Nullable VirtualNetworkBgpCommunitiesResponse bgpCommunities;
    /**
     * The DDoS protection plan associated with the virtual network.
     * 
     */
    private final @Nullable SubResourceResponse ddosProtectionPlan;
    /**
     * The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
     * 
     */
    private final @Nullable DhcpOptionsResponse dhcpOptions;
    /**
     * Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
     * 
     */
    private final @Nullable Boolean enableDdosProtection;
    /**
     * Indicates if VM protection is enabled for all the subnets in the virtual network.
     * 
     */
    private final @Nullable Boolean enableVmProtection;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private final String etag;
    /**
     * The extended location of the virtual network.
     * 
     */
    private final @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * Resource ID.
     * 
     */
    private final @Nullable String id;
    /**
     * Array of IpAllocation which reference this VNET.
     * 
     */
    private final @Nullable List<SubResourceResponse> ipAllocations;
    /**
     * Resource location.
     * 
     */
    private final @Nullable String location;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * The provisioning state of the virtual network resource.
     * 
     */
    private final String provisioningState;
    /**
     * The resourceGuid property of the Virtual Network resource.
     * 
     */
    private final String resourceGuid;
    /**
     * A list of subnets in a Virtual Network.
     * 
     */
    private final @Nullable List<SubnetResponse> subnets;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Resource type.
     * 
     */
    private final String type;
    /**
     * A list of peerings in a Virtual Network.
     * 
     */
    private final @Nullable List<VirtualNetworkPeeringResponse> virtualNetworkPeerings;

    @CustomType.Constructor
    private GetVirtualNetworkResult(
        @CustomType.Parameter("addressSpace") @Nullable AddressSpaceResponse addressSpace,
        @CustomType.Parameter("bgpCommunities") @Nullable VirtualNetworkBgpCommunitiesResponse bgpCommunities,
        @CustomType.Parameter("ddosProtectionPlan") @Nullable SubResourceResponse ddosProtectionPlan,
        @CustomType.Parameter("dhcpOptions") @Nullable DhcpOptionsResponse dhcpOptions,
        @CustomType.Parameter("enableDdosProtection") @Nullable Boolean enableDdosProtection,
        @CustomType.Parameter("enableVmProtection") @Nullable Boolean enableVmProtection,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("extendedLocation") @Nullable ExtendedLocationResponse extendedLocation,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("ipAllocations") @Nullable List<SubResourceResponse> ipAllocations,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("resourceGuid") String resourceGuid,
        @CustomType.Parameter("subnets") @Nullable List<SubnetResponse> subnets,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("virtualNetworkPeerings") @Nullable List<VirtualNetworkPeeringResponse> virtualNetworkPeerings) {
        this.addressSpace = addressSpace;
        this.bgpCommunities = bgpCommunities;
        this.ddosProtectionPlan = ddosProtectionPlan;
        this.dhcpOptions = dhcpOptions;
        this.enableDdosProtection = enableDdosProtection;
        this.enableVmProtection = enableVmProtection;
        this.etag = etag;
        this.extendedLocation = extendedLocation;
        this.id = id;
        this.ipAllocations = ipAllocations;
        this.location = location;
        this.name = name;
        this.provisioningState = provisioningState;
        this.resourceGuid = resourceGuid;
        this.subnets = subnets;
        this.tags = tags;
        this.type = type;
        this.virtualNetworkPeerings = virtualNetworkPeerings;
    }

    /**
     * The AddressSpace that contains an array of IP address ranges that can be used by subnets.
     * 
    */
    public Optional<AddressSpaceResponse> getAddressSpace() {
        return Optional.ofNullable(this.addressSpace);
    }
    /**
     * Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
     * 
    */
    public Optional<VirtualNetworkBgpCommunitiesResponse> getBgpCommunities() {
        return Optional.ofNullable(this.bgpCommunities);
    }
    /**
     * The DDoS protection plan associated with the virtual network.
     * 
    */
    public Optional<SubResourceResponse> getDdosProtectionPlan() {
        return Optional.ofNullable(this.ddosProtectionPlan);
    }
    /**
     * The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
     * 
    */
    public Optional<DhcpOptionsResponse> getDhcpOptions() {
        return Optional.ofNullable(this.dhcpOptions);
    }
    /**
     * Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
     * 
    */
    public Optional<Boolean> getEnableDdosProtection() {
        return Optional.ofNullable(this.enableDdosProtection);
    }
    /**
     * Indicates if VM protection is enabled for all the subnets in the virtual network.
     * 
    */
    public Optional<Boolean> getEnableVmProtection() {
        return Optional.ofNullable(this.enableVmProtection);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
    */
    public String getEtag() {
        return this.etag;
    }
    /**
     * The extended location of the virtual network.
     * 
    */
    public Optional<ExtendedLocationResponse> getExtendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * Resource ID.
     * 
    */
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    /**
     * Array of IpAllocation which reference this VNET.
     * 
    */
    public List<SubResourceResponse> getIpAllocations() {
        return this.ipAllocations == null ? List.of() : this.ipAllocations;
    }
    /**
     * Resource location.
     * 
    */
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    /**
     * Resource name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The provisioning state of the virtual network resource.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The resourceGuid property of the Virtual Network resource.
     * 
    */
    public String getResourceGuid() {
        return this.resourceGuid;
    }
    /**
     * A list of subnets in a Virtual Network.
     * 
    */
    public List<SubnetResponse> getSubnets() {
        return this.subnets == null ? List.of() : this.subnets;
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Resource type.
     * 
    */
    public String getType() {
        return this.type;
    }
    /**
     * A list of peerings in a Virtual Network.
     * 
    */
    public List<VirtualNetworkPeeringResponse> getVirtualNetworkPeerings() {
        return this.virtualNetworkPeerings == null ? List.of() : this.virtualNetworkPeerings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualNetworkResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AddressSpaceResponse addressSpace;
        private @Nullable VirtualNetworkBgpCommunitiesResponse bgpCommunities;
        private @Nullable SubResourceResponse ddosProtectionPlan;
        private @Nullable DhcpOptionsResponse dhcpOptions;
        private @Nullable Boolean enableDdosProtection;
        private @Nullable Boolean enableVmProtection;
        private String etag;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private @Nullable String id;
        private @Nullable List<SubResourceResponse> ipAllocations;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private String resourceGuid;
        private @Nullable List<SubnetResponse> subnets;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable List<VirtualNetworkPeeringResponse> virtualNetworkPeerings;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressSpace = defaults.addressSpace;
    	      this.bgpCommunities = defaults.bgpCommunities;
    	      this.ddosProtectionPlan = defaults.ddosProtectionPlan;
    	      this.dhcpOptions = defaults.dhcpOptions;
    	      this.enableDdosProtection = defaults.enableDdosProtection;
    	      this.enableVmProtection = defaults.enableVmProtection;
    	      this.etag = defaults.etag;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.id = defaults.id;
    	      this.ipAllocations = defaults.ipAllocations;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.subnets = defaults.subnets;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.virtualNetworkPeerings = defaults.virtualNetworkPeerings;
        }

        public Builder addressSpace(@Nullable AddressSpaceResponse addressSpace) {
            this.addressSpace = addressSpace;
            return this;
        }

        public Builder bgpCommunities(@Nullable VirtualNetworkBgpCommunitiesResponse bgpCommunities) {
            this.bgpCommunities = bgpCommunities;
            return this;
        }

        public Builder ddosProtectionPlan(@Nullable SubResourceResponse ddosProtectionPlan) {
            this.ddosProtectionPlan = ddosProtectionPlan;
            return this;
        }

        public Builder dhcpOptions(@Nullable DhcpOptionsResponse dhcpOptions) {
            this.dhcpOptions = dhcpOptions;
            return this;
        }

        public Builder enableDdosProtection(@Nullable Boolean enableDdosProtection) {
            this.enableDdosProtection = enableDdosProtection;
            return this;
        }

        public Builder enableVmProtection(@Nullable Boolean enableVmProtection) {
            this.enableVmProtection = enableVmProtection;
            return this;
        }

        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder ipAllocations(@Nullable List<SubResourceResponse> ipAllocations) {
            this.ipAllocations = ipAllocations;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder resourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }

        public Builder subnets(@Nullable List<SubnetResponse> subnets) {
            this.subnets = subnets;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder virtualNetworkPeerings(@Nullable List<VirtualNetworkPeeringResponse> virtualNetworkPeerings) {
            this.virtualNetworkPeerings = virtualNetworkPeerings;
            return this;
        }
        public GetVirtualNetworkResult build() {
            return new GetVirtualNetworkResult(addressSpace, bgpCommunities, ddosProtectionPlan, dhcpOptions, enableDdosProtection, enableVmProtection, etag, extendedLocation, id, ipAllocations, location, name, provisioningState, resourceGuid, subnets, tags, type, virtualNetworkPeerings);
        }
    }
}
