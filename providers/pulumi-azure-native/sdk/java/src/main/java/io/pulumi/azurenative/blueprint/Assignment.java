// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.blueprint;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.blueprint.AssignmentArgs;
import io.pulumi.azurenative.blueprint.outputs.AssignmentLockSettingsResponse;
import io.pulumi.azurenative.blueprint.outputs.AssignmentStatusResponse;
import io.pulumi.azurenative.blueprint.outputs.ManagedServiceIdentityResponse;
import io.pulumi.azurenative.blueprint.outputs.ParameterValueResponse;
import io.pulumi.azurenative.blueprint.outputs.ResourceGroupValueResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Represents a blueprint assignment.
 * API Version: 2018-11-01-preview.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Assignment with system-assigned managed identity at management group scope
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var assignment = new AzureNative.Blueprint.Assignment("assignment", new AzureNative.Blueprint.AssignmentArgs
 *         {
 *             AssignmentName = "assignSimpleBlueprint",
 *             BlueprintId = "/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *             Description = "enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *             Identity = new AzureNative.Blueprint.Inputs.ManagedServiceIdentityArgs
 *             {
 *                 Type = "SystemAssigned",
 *             },
 *             Location = "eastus",
 *             Parameters = 
 *             {
 *                 { "costCenter", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = "Contoso/Online/Shopping/Production",
 *                 } },
 *                 { "owners", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = 
 *                     {
 *                         "johnDoe@contoso.com",
 *                         "johnsteam@contoso.com",
 *                     },
 *                 } },
 *                 { "storageAccountType", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = "Standard_LRS",
 *                 } },
 *             },
 *             ResourceGroups = 
 *             {
 *                 { "storageRG", new AzureNative.Blueprint.Inputs.ResourceGroupValueArgs
 *                 {
 *                     Location = "eastus",
 *                     Name = "defaultRG",
 *                 } },
 *             },
 *             ResourceScope = "managementGroups/ContosoOnlineGroup",
 *             Scope = "subscriptions/00000000-0000-0000-0000-000000000000",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	blueprint "github.com/pulumi/pulumi-azure-native/sdk/go/azure/blueprint"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := blueprint.NewAssignment(ctx, "assignment", &blueprint.AssignmentArgs{
 * 			AssignmentName: pulumi.String("assignSimpleBlueprint"),
 * 			BlueprintId:    pulumi.String("/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint"),
 * 			Description:    pulumi.String("enforce pre-defined simpleBlueprint to this XXXXXXXX subscription."),
 * 			Identity: &blueprint.ManagedServiceIdentityArgs{
 * 				Type: pulumi.String("SystemAssigned"),
 * 			},
 * 			Location: pulumi.String("eastus"),
 * 			Parameters: blueprint.ParameterValueMap{
 * 				"costCenter": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any("Contoso/Online/Shopping/Production"),
 * 				},
 * 				"owners": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any{
 * 						"johnDoe@contoso.com",
 * 						"johnsteam@contoso.com",
 * 					},
 * 				},
 * 				"storageAccountType": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any("Standard_LRS"),
 * 				},
 * 			},
 * 			ResourceGroups: blueprint.ResourceGroupValueMap{
 * 				"storageRG": &blueprint.ResourceGroupValueArgs{
 * 					Location: pulumi.String("eastus"),
 * 					Name:     pulumi.String("defaultRG"),
 * 				},
 * 			},
 * 			ResourceScope: pulumi.String("managementGroups/ContosoOnlineGroup"),
 * 			Scope:         pulumi.String("subscriptions/00000000-0000-0000-0000-000000000000"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const assignment = new azure_native.blueprint.Assignment("assignment", {
 *     assignmentName: "assignSimpleBlueprint",
 *     blueprintId: "/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *     description: "enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     location: "eastus",
 *     parameters: {
 *         costCenter: {
 *             value: "Contoso/Online/Shopping/Production",
 *         },
 *         owners: {
 *             value: [
 *                 "johnDoe@contoso.com",
 *                 "johnsteam@contoso.com",
 *             ],
 *         },
 *         storageAccountType: {
 *             value: "Standard_LRS",
 *         },
 *     },
 *     resourceGroups: {
 *         storageRG: {
 *             location: "eastus",
 *             name: "defaultRG",
 *         },
 *     },
 *     resourceScope: "managementGroups/ContosoOnlineGroup",
 *     scope: "subscriptions/00000000-0000-0000-0000-000000000000",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * assignment = azure_native.blueprint.Assignment("assignment",
 *     assignment_name="assignSimpleBlueprint",
 *     blueprint_id="/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *     description="enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *     identity=azure_native.blueprint.ManagedServiceIdentityArgs(
 *         type="SystemAssigned",
 *     ),
 *     location="eastus",
 *     parameters={
 *         "costCenter": azure_native.blueprint.ParameterValueArgs(
 *             value="Contoso/Online/Shopping/Production",
 *         ),
 *         "owners": azure_native.blueprint.ParameterValueArgs(
 *             value=[
 *                 "johnDoe@contoso.com",
 *                 "johnsteam@contoso.com",
 *             ],
 *         ),
 *         "storageAccountType": azure_native.blueprint.ParameterValueArgs(
 *             value="Standard_LRS",
 *         ),
 *     },
 *     resource_groups={
 *         "storageRG": azure_native.blueprint.ResourceGroupValueArgs(
 *             location="eastus",
 *             name="defaultRG",
 *         ),
 *     },
 *     resource_scope="managementGroups/ContosoOnlineGroup",
 *     scope="subscriptions/00000000-0000-0000-0000-000000000000")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Assignment with system-assigned managed identity at subscription scope
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var assignment = new AzureNative.Blueprint.Assignment("assignment", new AzureNative.Blueprint.AssignmentArgs
 *         {
 *             AssignmentName = "assignSimpleBlueprint",
 *             BlueprintId = "/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *             Description = "enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *             Identity = new AzureNative.Blueprint.Inputs.ManagedServiceIdentityArgs
 *             {
 *                 Type = "SystemAssigned",
 *             },
 *             Location = "eastus",
 *             Parameters = 
 *             {
 *                 { "costCenter", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = "Contoso/Online/Shopping/Production",
 *                 } },
 *                 { "owners", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = 
 *                     {
 *                         "johnDoe@contoso.com",
 *                         "johnsteam@contoso.com",
 *                     },
 *                 } },
 *                 { "storageAccountType", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = "Standard_LRS",
 *                 } },
 *             },
 *             ResourceGroups = 
 *             {
 *                 { "storageRG", new AzureNative.Blueprint.Inputs.ResourceGroupValueArgs
 *                 {
 *                     Location = "eastus",
 *                     Name = "defaultRG",
 *                 } },
 *             },
 *             ResourceScope = "subscriptions/00000000-0000-0000-0000-000000000000",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	blueprint "github.com/pulumi/pulumi-azure-native/sdk/go/azure/blueprint"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := blueprint.NewAssignment(ctx, "assignment", &blueprint.AssignmentArgs{
 * 			AssignmentName: pulumi.String("assignSimpleBlueprint"),
 * 			BlueprintId:    pulumi.String("/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint"),
 * 			Description:    pulumi.String("enforce pre-defined simpleBlueprint to this XXXXXXXX subscription."),
 * 			Identity: &blueprint.ManagedServiceIdentityArgs{
 * 				Type: pulumi.String("SystemAssigned"),
 * 			},
 * 			Location: pulumi.String("eastus"),
 * 			Parameters: blueprint.ParameterValueMap{
 * 				"costCenter": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any("Contoso/Online/Shopping/Production"),
 * 				},
 * 				"owners": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any{
 * 						"johnDoe@contoso.com",
 * 						"johnsteam@contoso.com",
 * 					},
 * 				},
 * 				"storageAccountType": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any("Standard_LRS"),
 * 				},
 * 			},
 * 			ResourceGroups: blueprint.ResourceGroupValueMap{
 * 				"storageRG": &blueprint.ResourceGroupValueArgs{
 * 					Location: pulumi.String("eastus"),
 * 					Name:     pulumi.String("defaultRG"),
 * 				},
 * 			},
 * 			ResourceScope: pulumi.String("subscriptions/00000000-0000-0000-0000-000000000000"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const assignment = new azure_native.blueprint.Assignment("assignment", {
 *     assignmentName: "assignSimpleBlueprint",
 *     blueprintId: "/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *     description: "enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     location: "eastus",
 *     parameters: {
 *         costCenter: {
 *             value: "Contoso/Online/Shopping/Production",
 *         },
 *         owners: {
 *             value: [
 *                 "johnDoe@contoso.com",
 *                 "johnsteam@contoso.com",
 *             ],
 *         },
 *         storageAccountType: {
 *             value: "Standard_LRS",
 *         },
 *     },
 *     resourceGroups: {
 *         storageRG: {
 *             location: "eastus",
 *             name: "defaultRG",
 *         },
 *     },
 *     resourceScope: "subscriptions/00000000-0000-0000-0000-000000000000",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * assignment = azure_native.blueprint.Assignment("assignment",
 *     assignment_name="assignSimpleBlueprint",
 *     blueprint_id="/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *     description="enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *     identity=azure_native.blueprint.ManagedServiceIdentityArgs(
 *         type="SystemAssigned",
 *     ),
 *     location="eastus",
 *     parameters={
 *         "costCenter": azure_native.blueprint.ParameterValueArgs(
 *             value="Contoso/Online/Shopping/Production",
 *         ),
 *         "owners": azure_native.blueprint.ParameterValueArgs(
 *             value=[
 *                 "johnDoe@contoso.com",
 *                 "johnsteam@contoso.com",
 *             ],
 *         ),
 *         "storageAccountType": azure_native.blueprint.ParameterValueArgs(
 *             value="Standard_LRS",
 *         ),
 *     },
 *     resource_groups={
 *         "storageRG": azure_native.blueprint.ResourceGroupValueArgs(
 *             location="eastus",
 *             name="defaultRG",
 *         ),
 *     },
 *     resource_scope="subscriptions/00000000-0000-0000-0000-000000000000")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Assignment with user-assigned managed identity at management group scope
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var assignment = new AzureNative.Blueprint.Assignment("assignment", new AzureNative.Blueprint.AssignmentArgs
 *         {
 *             AssignmentName = "assignSimpleBlueprint",
 *             BlueprintId = "/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *             Description = "enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *             Identity = new AzureNative.Blueprint.Inputs.ManagedServiceIdentityArgs
 *             {
 *                 Type = "UserAssigned",
 *                 UserAssignedIdentities = 
 *                 {
 *                     { "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-identity",  },
 *                 },
 *             },
 *             Location = "eastus",
 *             Parameters = 
 *             {
 *                 { "costCenter", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = "Contoso/Online/Shopping/Production",
 *                 } },
 *                 { "owners", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = 
 *                     {
 *                         "johnDoe@contoso.com",
 *                         "johnsteam@contoso.com",
 *                     },
 *                 } },
 *                 { "storageAccountType", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = "Standard_LRS",
 *                 } },
 *             },
 *             ResourceGroups = 
 *             {
 *                 { "storageRG", new AzureNative.Blueprint.Inputs.ResourceGroupValueArgs
 *                 {
 *                     Location = "eastus",
 *                     Name = "defaultRG",
 *                 } },
 *             },
 *             ResourceScope = "managementGroups/ContosoOnlineGroup",
 *             Scope = "subscriptions/00000000-0000-0000-0000-000000000000",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	blueprint "github.com/pulumi/pulumi-azure-native/sdk/go/azure/blueprint"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := blueprint.NewAssignment(ctx, "assignment", &blueprint.AssignmentArgs{
 * 			AssignmentName: pulumi.String("assignSimpleBlueprint"),
 * 			BlueprintId:    pulumi.String("/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint"),
 * 			Description:    pulumi.String("enforce pre-defined simpleBlueprint to this XXXXXXXX subscription."),
 * 			Identity: &blueprint.ManagedServiceIdentityArgs{
 * 				Type: pulumi.String("UserAssigned"),
 * 				UserAssignedIdentities: blueprint.UserAssignedIdentityMap{
 * 					"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-identity": nil,
 * 				},
 * 			},
 * 			Location: pulumi.String("eastus"),
 * 			Parameters: blueprint.ParameterValueMap{
 * 				"costCenter": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any("Contoso/Online/Shopping/Production"),
 * 				},
 * 				"owners": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any{
 * 						"johnDoe@contoso.com",
 * 						"johnsteam@contoso.com",
 * 					},
 * 				},
 * 				"storageAccountType": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any("Standard_LRS"),
 * 				},
 * 			},
 * 			ResourceGroups: blueprint.ResourceGroupValueMap{
 * 				"storageRG": &blueprint.ResourceGroupValueArgs{
 * 					Location: pulumi.String("eastus"),
 * 					Name:     pulumi.String("defaultRG"),
 * 				},
 * 			},
 * 			ResourceScope: pulumi.String("managementGroups/ContosoOnlineGroup"),
 * 			Scope:         pulumi.String("subscriptions/00000000-0000-0000-0000-000000000000"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const assignment = new azure_native.blueprint.Assignment("assignment", {
 *     assignmentName: "assignSimpleBlueprint",
 *     blueprintId: "/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *     description: "enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *     identity: {
 *         type: "UserAssigned",
 *         userAssignedIdentities: {
 *             "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-identity": {},
 *         },
 *     },
 *     location: "eastus",
 *     parameters: {
 *         costCenter: {
 *             value: "Contoso/Online/Shopping/Production",
 *         },
 *         owners: {
 *             value: [
 *                 "johnDoe@contoso.com",
 *                 "johnsteam@contoso.com",
 *             ],
 *         },
 *         storageAccountType: {
 *             value: "Standard_LRS",
 *         },
 *     },
 *     resourceGroups: {
 *         storageRG: {
 *             location: "eastus",
 *             name: "defaultRG",
 *         },
 *     },
 *     resourceScope: "managementGroups/ContosoOnlineGroup",
 *     scope: "subscriptions/00000000-0000-0000-0000-000000000000",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * assignment = azure_native.blueprint.Assignment("assignment",
 *     assignment_name="assignSimpleBlueprint",
 *     blueprint_id="/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *     description="enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *     identity=azure_native.blueprint.ManagedServiceIdentityArgs(
 *         type="UserAssigned",
 *         user_assigned_identities={
 *             "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-identity": azure_native.blueprint.UserAssignedIdentityArgs(),
 *         },
 *     ),
 *     location="eastus",
 *     parameters={
 *         "costCenter": azure_native.blueprint.ParameterValueArgs(
 *             value="Contoso/Online/Shopping/Production",
 *         ),
 *         "owners": azure_native.blueprint.ParameterValueArgs(
 *             value=[
 *                 "johnDoe@contoso.com",
 *                 "johnsteam@contoso.com",
 *             ],
 *         ),
 *         "storageAccountType": azure_native.blueprint.ParameterValueArgs(
 *             value="Standard_LRS",
 *         ),
 *     },
 *     resource_groups={
 *         "storageRG": azure_native.blueprint.ResourceGroupValueArgs(
 *             location="eastus",
 *             name="defaultRG",
 *         ),
 *     },
 *     resource_scope="managementGroups/ContosoOnlineGroup",
 *     scope="subscriptions/00000000-0000-0000-0000-000000000000")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Assignment with user-assigned managed identity at subscription scope
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var assignment = new AzureNative.Blueprint.Assignment("assignment", new AzureNative.Blueprint.AssignmentArgs
 *         {
 *             AssignmentName = "assignSimpleBlueprint",
 *             BlueprintId = "/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *             Description = "enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *             Identity = new AzureNative.Blueprint.Inputs.ManagedServiceIdentityArgs
 *             {
 *                 Type = "UserAssigned",
 *                 UserAssignedIdentities = 
 *                 {
 *                     { "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-identity",  },
 *                 },
 *             },
 *             Location = "eastus",
 *             Parameters = 
 *             {
 *                 { "costCenter", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = "Contoso/Online/Shopping/Production",
 *                 } },
 *                 { "owners", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = 
 *                     {
 *                         "johnDoe@contoso.com",
 *                         "johnsteam@contoso.com",
 *                     },
 *                 } },
 *                 { "storageAccountType", new AzureNative.Blueprint.Inputs.ParameterValueArgs
 *                 {
 *                     Value = "Standard_LRS",
 *                 } },
 *             },
 *             ResourceGroups = 
 *             {
 *                 { "storageRG", new AzureNative.Blueprint.Inputs.ResourceGroupValueArgs
 *                 {
 *                     Location = "eastus",
 *                     Name = "defaultRG",
 *                 } },
 *             },
 *             ResourceScope = "subscriptions/00000000-0000-0000-0000-000000000000",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	blueprint "github.com/pulumi/pulumi-azure-native/sdk/go/azure/blueprint"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := blueprint.NewAssignment(ctx, "assignment", &blueprint.AssignmentArgs{
 * 			AssignmentName: pulumi.String("assignSimpleBlueprint"),
 * 			BlueprintId:    pulumi.String("/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint"),
 * 			Description:    pulumi.String("enforce pre-defined simpleBlueprint to this XXXXXXXX subscription."),
 * 			Identity: &blueprint.ManagedServiceIdentityArgs{
 * 				Type: pulumi.String("UserAssigned"),
 * 				UserAssignedIdentities: blueprint.UserAssignedIdentityMap{
 * 					"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-identity": nil,
 * 				},
 * 			},
 * 			Location: pulumi.String("eastus"),
 * 			Parameters: blueprint.ParameterValueMap{
 * 				"costCenter": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any("Contoso/Online/Shopping/Production"),
 * 				},
 * 				"owners": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any{
 * 						"johnDoe@contoso.com",
 * 						"johnsteam@contoso.com",
 * 					},
 * 				},
 * 				"storageAccountType": &blueprint.ParameterValueArgs{
 * 					Value: pulumi.Any("Standard_LRS"),
 * 				},
 * 			},
 * 			ResourceGroups: blueprint.ResourceGroupValueMap{
 * 				"storageRG": &blueprint.ResourceGroupValueArgs{
 * 					Location: pulumi.String("eastus"),
 * 					Name:     pulumi.String("defaultRG"),
 * 				},
 * 			},
 * 			ResourceScope: pulumi.String("subscriptions/00000000-0000-0000-0000-000000000000"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const assignment = new azure_native.blueprint.Assignment("assignment", {
 *     assignmentName: "assignSimpleBlueprint",
 *     blueprintId: "/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *     description: "enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *     identity: {
 *         type: "UserAssigned",
 *         userAssignedIdentities: {
 *             "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-identity": {},
 *         },
 *     },
 *     location: "eastus",
 *     parameters: {
 *         costCenter: {
 *             value: "Contoso/Online/Shopping/Production",
 *         },
 *         owners: {
 *             value: [
 *                 "johnDoe@contoso.com",
 *                 "johnsteam@contoso.com",
 *             ],
 *         },
 *         storageAccountType: {
 *             value: "Standard_LRS",
 *         },
 *     },
 *     resourceGroups: {
 *         storageRG: {
 *             location: "eastus",
 *             name: "defaultRG",
 *         },
 *     },
 *     resourceScope: "subscriptions/00000000-0000-0000-0000-000000000000",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * assignment = azure_native.blueprint.Assignment("assignment",
 *     assignment_name="assignSimpleBlueprint",
 *     blueprint_id="/providers/Microsoft.Management/managementGroups/ContosoOnlineGroup/providers/Microsoft.Blueprint/blueprints/simpleBlueprint",
 *     description="enforce pre-defined simpleBlueprint to this XXXXXXXX subscription.",
 *     identity=azure_native.blueprint.ManagedServiceIdentityArgs(
 *         type="UserAssigned",
 *         user_assigned_identities={
 *             "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-resource-group/providers/Microsoft.ManagedIdentity/userAssignedIdentities/contoso-identity": azure_native.blueprint.UserAssignedIdentityArgs(),
 *         },
 *     ),
 *     location="eastus",
 *     parameters={
 *         "costCenter": azure_native.blueprint.ParameterValueArgs(
 *             value="Contoso/Online/Shopping/Production",
 *         ),
 *         "owners": azure_native.blueprint.ParameterValueArgs(
 *             value=[
 *                 "johnDoe@contoso.com",
 *                 "johnsteam@contoso.com",
 *             ],
 *         ),
 *         "storageAccountType": azure_native.blueprint.ParameterValueArgs(
 *             value="Standard_LRS",
 *         ),
 *     },
 *     resource_groups={
 *         "storageRG": azure_native.blueprint.ResourceGroupValueArgs(
 *             location="eastus",
 *             name="defaultRG",
 *         ),
 *     },
 *     resource_scope="subscriptions/00000000-0000-0000-0000-000000000000")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:blueprint:Assignment assignSimpleBlueprint /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Blueprint/blueprintAssignments/assignSimpleBlueprint 
 * ```
 * 
 */
@ResourceType(type="azure-native:blueprint:Assignment")
public class Assignment extends io.pulumi.resources.CustomResource {
    /**
     * ID of the published version of a blueprint definition.
     */
    @Export(name="blueprintId", type=String.class, parameters={})
    private Output</* @Nullable */ String> blueprintId;

    /**
     * @return ID of the published version of a blueprint definition.
     */
    public Output</* @Nullable */ String> getBlueprintId() {
        return this.blueprintId;
    }
    /**
     * Multi-line explain this resource.
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Multi-line explain this resource.
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * One-liner string explain this resource.
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return One-liner string explain this resource.
     */
    public Output</* @Nullable */ String> getDisplayName() {
        return this.displayName;
    }
    /**
     * Managed identity for this blueprint assignment.
     */
    @Export(name="identity", type=ManagedServiceIdentityResponse.class, parameters={})
    private Output<ManagedServiceIdentityResponse> identity;

    /**
     * @return Managed identity for this blueprint assignment.
     */
    public Output<ManagedServiceIdentityResponse> getIdentity() {
        return this.identity;
    }
    /**
     * The location of this blueprint assignment.
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location of this blueprint assignment.
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * Defines how resources deployed by a blueprint assignment are locked.
     */
    @Export(name="locks", type=AssignmentLockSettingsResponse.class, parameters={})
    private Output</* @Nullable */ AssignmentLockSettingsResponse> locks;

    /**
     * @return Defines how resources deployed by a blueprint assignment are locked.
     */
    public Output</* @Nullable */ AssignmentLockSettingsResponse> getLocks() {
        return this.locks;
    }
    /**
     * Name of this resource.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of this resource.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Blueprint assignment parameter values.
     */
    @Export(name="parameters", type=Map.class, parameters={String.class, ParameterValueResponse.class})
    private Output<Map<String,ParameterValueResponse>> parameters;

    /**
     * @return Blueprint assignment parameter values.
     */
    public Output<Map<String,ParameterValueResponse>> getParameters() {
        return this.parameters;
    }
    /**
     * State of the blueprint assignment.
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return State of the blueprint assignment.
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Names and locations of resource group placeholders.
     */
    @Export(name="resourceGroups", type=Map.class, parameters={String.class, ResourceGroupValueResponse.class})
    private Output<Map<String,ResourceGroupValueResponse>> resourceGroups;

    /**
     * @return Names and locations of resource group placeholders.
     */
    public Output<Map<String,ResourceGroupValueResponse>> getResourceGroups() {
        return this.resourceGroups;
    }
    /**
     * The target subscription scope of the blueprint assignment (format: '/subscriptions/{subscriptionId}'). For management group level assignments, the property is required.
     */
    @Export(name="scope", type=String.class, parameters={})
    private Output</* @Nullable */ String> scope;

    /**
     * @return The target subscription scope of the blueprint assignment (format: '/subscriptions/{subscriptionId}'). For management group level assignments, the property is required.
     */
    public Output</* @Nullable */ String> getScope() {
        return this.scope;
    }
    /**
     * Status of blueprint assignment. This field is readonly.
     */
    @Export(name="status", type=AssignmentStatusResponse.class, parameters={})
    private Output<AssignmentStatusResponse> status;

    /**
     * @return Status of blueprint assignment. This field is readonly.
     */
    public Output<AssignmentStatusResponse> getStatus() {
        return this.status;
    }
    /**
     * Type of this resource.
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of this resource.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Assignment(String name) {
        this(name, AssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Assignment(String name, AssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Assignment(String name, AssignmentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:blueprint:Assignment", name, args == null ? AssignmentArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Assignment(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:blueprint:Assignment", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:blueprint/v20181101preview:Assignment").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Assignment get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Assignment(name, id, options);
    }
}
