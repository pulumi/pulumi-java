// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn.inputs;

import io.pulumi.azurenative.cdn.enums.SharedPrivateLinkResourceStatus;
import io.pulumi.azurenative.cdn.inputs.ResourceReferenceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin.
 * 
 */
public final class SharedPrivateLinkResourcePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final SharedPrivateLinkResourcePropertiesArgs Empty = new SharedPrivateLinkResourcePropertiesArgs();

    /**
     * The group id from the provider of resource the shared private link resource is for.
     * 
     */
    @InputImport(name="groupId")
        private final @Nullable Input<String> groupId;

    public Input<String> getGroupId() {
        return this.groupId == null ? Input.empty() : this.groupId;
    }

    /**
     * The resource id of the resource the shared private link resource is for.
     * 
     */
    @InputImport(name="privateLink")
        private final @Nullable Input<ResourceReferenceArgs> privateLink;

    public Input<ResourceReferenceArgs> getPrivateLink() {
        return this.privateLink == null ? Input.empty() : this.privateLink;
    }

    /**
     * The location of the shared private link resource
     * 
     */
    @InputImport(name="privateLinkLocation")
        private final @Nullable Input<String> privateLinkLocation;

    public Input<String> getPrivateLinkLocation() {
        return this.privateLinkLocation == null ? Input.empty() : this.privateLinkLocation;
    }

    /**
     * The request message for requesting approval of the shared private link resource.
     * 
     */
    @InputImport(name="requestMessage")
        private final @Nullable Input<String> requestMessage;

    public Input<String> getRequestMessage() {
        return this.requestMessage == null ? Input.empty() : this.requestMessage;
    }

    /**
     * Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.
     * 
     */
    @InputImport(name="status")
        private final @Nullable Input<SharedPrivateLinkResourceStatus> status;

    public Input<SharedPrivateLinkResourceStatus> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    public SharedPrivateLinkResourcePropertiesArgs(
        @Nullable Input<String> groupId,
        @Nullable Input<ResourceReferenceArgs> privateLink,
        @Nullable Input<String> privateLinkLocation,
        @Nullable Input<String> requestMessage,
        @Nullable Input<SharedPrivateLinkResourceStatus> status) {
        this.groupId = groupId;
        this.privateLink = privateLink;
        this.privateLinkLocation = privateLinkLocation;
        this.requestMessage = requestMessage;
        this.status = status;
    }

    private SharedPrivateLinkResourcePropertiesArgs() {
        this.groupId = Input.empty();
        this.privateLink = Input.empty();
        this.privateLinkLocation = Input.empty();
        this.requestMessage = Input.empty();
        this.status = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SharedPrivateLinkResourcePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> groupId;
        private @Nullable Input<ResourceReferenceArgs> privateLink;
        private @Nullable Input<String> privateLinkLocation;
        private @Nullable Input<String> requestMessage;
        private @Nullable Input<SharedPrivateLinkResourceStatus> status;

        public Builder() {
    	      // Empty
        }

        public Builder(SharedPrivateLinkResourcePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupId = defaults.groupId;
    	      this.privateLink = defaults.privateLink;
    	      this.privateLinkLocation = defaults.privateLinkLocation;
    	      this.requestMessage = defaults.requestMessage;
    	      this.status = defaults.status;
        }

        public Builder setGroupId(@Nullable Input<String> groupId) {
            this.groupId = groupId;
            return this;
        }

        public Builder setGroupId(@Nullable String groupId) {
            this.groupId = Input.ofNullable(groupId);
            return this;
        }

        public Builder setPrivateLink(@Nullable Input<ResourceReferenceArgs> privateLink) {
            this.privateLink = privateLink;
            return this;
        }

        public Builder setPrivateLink(@Nullable ResourceReferenceArgs privateLink) {
            this.privateLink = Input.ofNullable(privateLink);
            return this;
        }

        public Builder setPrivateLinkLocation(@Nullable Input<String> privateLinkLocation) {
            this.privateLinkLocation = privateLinkLocation;
            return this;
        }

        public Builder setPrivateLinkLocation(@Nullable String privateLinkLocation) {
            this.privateLinkLocation = Input.ofNullable(privateLinkLocation);
            return this;
        }

        public Builder setRequestMessage(@Nullable Input<String> requestMessage) {
            this.requestMessage = requestMessage;
            return this;
        }

        public Builder setRequestMessage(@Nullable String requestMessage) {
            this.requestMessage = Input.ofNullable(requestMessage);
            return this;
        }

        public Builder setStatus(@Nullable Input<SharedPrivateLinkResourceStatus> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable SharedPrivateLinkResourceStatus status) {
            this.status = Input.ofNullable(status);
            return this;
        }
        public SharedPrivateLinkResourcePropertiesArgs build() {
            return new SharedPrivateLinkResourcePropertiesArgs(groupId, privateLink, privateLinkLocation, requestMessage, status);
        }
    }
}
