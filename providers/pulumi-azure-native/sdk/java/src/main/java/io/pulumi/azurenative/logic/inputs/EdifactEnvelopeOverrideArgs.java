// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The Edifact envelope override settings.
 * 
 */
public final class EdifactEnvelopeOverrideArgs extends io.pulumi.resources.ResourceArgs {

    public static final EdifactEnvelopeOverrideArgs Empty = new EdifactEnvelopeOverrideArgs();

    /**
     * The application password.
     * 
     */
    @InputImport(name="applicationPassword")
        private final @Nullable Input<String> applicationPassword;

    public Input<String> getApplicationPassword() {
        return this.applicationPassword == null ? Input.empty() : this.applicationPassword;
    }

    /**
     * The association assigned code.
     * 
     */
    @InputImport(name="associationAssignedCode")
        private final @Nullable Input<String> associationAssignedCode;

    public Input<String> getAssociationAssignedCode() {
        return this.associationAssignedCode == null ? Input.empty() : this.associationAssignedCode;
    }

    /**
     * The controlling agency code.
     * 
     */
    @InputImport(name="controllingAgencyCode")
        private final @Nullable Input<String> controllingAgencyCode;

    public Input<String> getControllingAgencyCode() {
        return this.controllingAgencyCode == null ? Input.empty() : this.controllingAgencyCode;
    }

    /**
     * The functional group id.
     * 
     */
    @InputImport(name="functionalGroupId")
        private final @Nullable Input<String> functionalGroupId;

    public Input<String> getFunctionalGroupId() {
        return this.functionalGroupId == null ? Input.empty() : this.functionalGroupId;
    }

    /**
     * The group header message release.
     * 
     */
    @InputImport(name="groupHeaderMessageRelease")
        private final @Nullable Input<String> groupHeaderMessageRelease;

    public Input<String> getGroupHeaderMessageRelease() {
        return this.groupHeaderMessageRelease == null ? Input.empty() : this.groupHeaderMessageRelease;
    }

    /**
     * The group header message version.
     * 
     */
    @InputImport(name="groupHeaderMessageVersion")
        private final @Nullable Input<String> groupHeaderMessageVersion;

    public Input<String> getGroupHeaderMessageVersion() {
        return this.groupHeaderMessageVersion == null ? Input.empty() : this.groupHeaderMessageVersion;
    }

    /**
     * The message association assigned code.
     * 
     */
    @InputImport(name="messageAssociationAssignedCode")
        private final @Nullable Input<String> messageAssociationAssignedCode;

    public Input<String> getMessageAssociationAssignedCode() {
        return this.messageAssociationAssignedCode == null ? Input.empty() : this.messageAssociationAssignedCode;
    }

    /**
     * The message id on which this envelope settings has to be applied.
     * 
     */
    @InputImport(name="messageId")
        private final @Nullable Input<String> messageId;

    public Input<String> getMessageId() {
        return this.messageId == null ? Input.empty() : this.messageId;
    }

    /**
     * The message release version on which this envelope settings has to be applied.
     * 
     */
    @InputImport(name="messageRelease")
        private final @Nullable Input<String> messageRelease;

    public Input<String> getMessageRelease() {
        return this.messageRelease == null ? Input.empty() : this.messageRelease;
    }

    /**
     * The message version on which this envelope settings has to be applied.
     * 
     */
    @InputImport(name="messageVersion")
        private final @Nullable Input<String> messageVersion;

    public Input<String> getMessageVersion() {
        return this.messageVersion == null ? Input.empty() : this.messageVersion;
    }

    /**
     * The receiver application id.
     * 
     */
    @InputImport(name="receiverApplicationId")
        private final @Nullable Input<String> receiverApplicationId;

    public Input<String> getReceiverApplicationId() {
        return this.receiverApplicationId == null ? Input.empty() : this.receiverApplicationId;
    }

    /**
     * The receiver application qualifier.
     * 
     */
    @InputImport(name="receiverApplicationQualifier")
        private final @Nullable Input<String> receiverApplicationQualifier;

    public Input<String> getReceiverApplicationQualifier() {
        return this.receiverApplicationQualifier == null ? Input.empty() : this.receiverApplicationQualifier;
    }

    /**
     * The sender application id.
     * 
     */
    @InputImport(name="senderApplicationId")
        private final @Nullable Input<String> senderApplicationId;

    public Input<String> getSenderApplicationId() {
        return this.senderApplicationId == null ? Input.empty() : this.senderApplicationId;
    }

    /**
     * The sender application qualifier.
     * 
     */
    @InputImport(name="senderApplicationQualifier")
        private final @Nullable Input<String> senderApplicationQualifier;

    public Input<String> getSenderApplicationQualifier() {
        return this.senderApplicationQualifier == null ? Input.empty() : this.senderApplicationQualifier;
    }

    /**
     * The target namespace on which this envelope settings has to be applied.
     * 
     */
    @InputImport(name="targetNamespace")
        private final @Nullable Input<String> targetNamespace;

    public Input<String> getTargetNamespace() {
        return this.targetNamespace == null ? Input.empty() : this.targetNamespace;
    }

    public EdifactEnvelopeOverrideArgs(
        @Nullable Input<String> applicationPassword,
        @Nullable Input<String> associationAssignedCode,
        @Nullable Input<String> controllingAgencyCode,
        @Nullable Input<String> functionalGroupId,
        @Nullable Input<String> groupHeaderMessageRelease,
        @Nullable Input<String> groupHeaderMessageVersion,
        @Nullable Input<String> messageAssociationAssignedCode,
        @Nullable Input<String> messageId,
        @Nullable Input<String> messageRelease,
        @Nullable Input<String> messageVersion,
        @Nullable Input<String> receiverApplicationId,
        @Nullable Input<String> receiverApplicationQualifier,
        @Nullable Input<String> senderApplicationId,
        @Nullable Input<String> senderApplicationQualifier,
        @Nullable Input<String> targetNamespace) {
        this.applicationPassword = applicationPassword;
        this.associationAssignedCode = associationAssignedCode;
        this.controllingAgencyCode = controllingAgencyCode;
        this.functionalGroupId = functionalGroupId;
        this.groupHeaderMessageRelease = groupHeaderMessageRelease;
        this.groupHeaderMessageVersion = groupHeaderMessageVersion;
        this.messageAssociationAssignedCode = messageAssociationAssignedCode;
        this.messageId = messageId;
        this.messageRelease = messageRelease;
        this.messageVersion = messageVersion;
        this.receiverApplicationId = receiverApplicationId;
        this.receiverApplicationQualifier = receiverApplicationQualifier;
        this.senderApplicationId = senderApplicationId;
        this.senderApplicationQualifier = senderApplicationQualifier;
        this.targetNamespace = targetNamespace;
    }

    private EdifactEnvelopeOverrideArgs() {
        this.applicationPassword = Input.empty();
        this.associationAssignedCode = Input.empty();
        this.controllingAgencyCode = Input.empty();
        this.functionalGroupId = Input.empty();
        this.groupHeaderMessageRelease = Input.empty();
        this.groupHeaderMessageVersion = Input.empty();
        this.messageAssociationAssignedCode = Input.empty();
        this.messageId = Input.empty();
        this.messageRelease = Input.empty();
        this.messageVersion = Input.empty();
        this.receiverApplicationId = Input.empty();
        this.receiverApplicationQualifier = Input.empty();
        this.senderApplicationId = Input.empty();
        this.senderApplicationQualifier = Input.empty();
        this.targetNamespace = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdifactEnvelopeOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> applicationPassword;
        private @Nullable Input<String> associationAssignedCode;
        private @Nullable Input<String> controllingAgencyCode;
        private @Nullable Input<String> functionalGroupId;
        private @Nullable Input<String> groupHeaderMessageRelease;
        private @Nullable Input<String> groupHeaderMessageVersion;
        private @Nullable Input<String> messageAssociationAssignedCode;
        private @Nullable Input<String> messageId;
        private @Nullable Input<String> messageRelease;
        private @Nullable Input<String> messageVersion;
        private @Nullable Input<String> receiverApplicationId;
        private @Nullable Input<String> receiverApplicationQualifier;
        private @Nullable Input<String> senderApplicationId;
        private @Nullable Input<String> senderApplicationQualifier;
        private @Nullable Input<String> targetNamespace;

        public Builder() {
    	      // Empty
        }

        public Builder(EdifactEnvelopeOverrideArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationPassword = defaults.applicationPassword;
    	      this.associationAssignedCode = defaults.associationAssignedCode;
    	      this.controllingAgencyCode = defaults.controllingAgencyCode;
    	      this.functionalGroupId = defaults.functionalGroupId;
    	      this.groupHeaderMessageRelease = defaults.groupHeaderMessageRelease;
    	      this.groupHeaderMessageVersion = defaults.groupHeaderMessageVersion;
    	      this.messageAssociationAssignedCode = defaults.messageAssociationAssignedCode;
    	      this.messageId = defaults.messageId;
    	      this.messageRelease = defaults.messageRelease;
    	      this.messageVersion = defaults.messageVersion;
    	      this.receiverApplicationId = defaults.receiverApplicationId;
    	      this.receiverApplicationQualifier = defaults.receiverApplicationQualifier;
    	      this.senderApplicationId = defaults.senderApplicationId;
    	      this.senderApplicationQualifier = defaults.senderApplicationQualifier;
    	      this.targetNamespace = defaults.targetNamespace;
        }

        public Builder setApplicationPassword(@Nullable Input<String> applicationPassword) {
            this.applicationPassword = applicationPassword;
            return this;
        }

        public Builder setApplicationPassword(@Nullable String applicationPassword) {
            this.applicationPassword = Input.ofNullable(applicationPassword);
            return this;
        }

        public Builder setAssociationAssignedCode(@Nullable Input<String> associationAssignedCode) {
            this.associationAssignedCode = associationAssignedCode;
            return this;
        }

        public Builder setAssociationAssignedCode(@Nullable String associationAssignedCode) {
            this.associationAssignedCode = Input.ofNullable(associationAssignedCode);
            return this;
        }

        public Builder setControllingAgencyCode(@Nullable Input<String> controllingAgencyCode) {
            this.controllingAgencyCode = controllingAgencyCode;
            return this;
        }

        public Builder setControllingAgencyCode(@Nullable String controllingAgencyCode) {
            this.controllingAgencyCode = Input.ofNullable(controllingAgencyCode);
            return this;
        }

        public Builder setFunctionalGroupId(@Nullable Input<String> functionalGroupId) {
            this.functionalGroupId = functionalGroupId;
            return this;
        }

        public Builder setFunctionalGroupId(@Nullable String functionalGroupId) {
            this.functionalGroupId = Input.ofNullable(functionalGroupId);
            return this;
        }

        public Builder setGroupHeaderMessageRelease(@Nullable Input<String> groupHeaderMessageRelease) {
            this.groupHeaderMessageRelease = groupHeaderMessageRelease;
            return this;
        }

        public Builder setGroupHeaderMessageRelease(@Nullable String groupHeaderMessageRelease) {
            this.groupHeaderMessageRelease = Input.ofNullable(groupHeaderMessageRelease);
            return this;
        }

        public Builder setGroupHeaderMessageVersion(@Nullable Input<String> groupHeaderMessageVersion) {
            this.groupHeaderMessageVersion = groupHeaderMessageVersion;
            return this;
        }

        public Builder setGroupHeaderMessageVersion(@Nullable String groupHeaderMessageVersion) {
            this.groupHeaderMessageVersion = Input.ofNullable(groupHeaderMessageVersion);
            return this;
        }

        public Builder setMessageAssociationAssignedCode(@Nullable Input<String> messageAssociationAssignedCode) {
            this.messageAssociationAssignedCode = messageAssociationAssignedCode;
            return this;
        }

        public Builder setMessageAssociationAssignedCode(@Nullable String messageAssociationAssignedCode) {
            this.messageAssociationAssignedCode = Input.ofNullable(messageAssociationAssignedCode);
            return this;
        }

        public Builder setMessageId(@Nullable Input<String> messageId) {
            this.messageId = messageId;
            return this;
        }

        public Builder setMessageId(@Nullable String messageId) {
            this.messageId = Input.ofNullable(messageId);
            return this;
        }

        public Builder setMessageRelease(@Nullable Input<String> messageRelease) {
            this.messageRelease = messageRelease;
            return this;
        }

        public Builder setMessageRelease(@Nullable String messageRelease) {
            this.messageRelease = Input.ofNullable(messageRelease);
            return this;
        }

        public Builder setMessageVersion(@Nullable Input<String> messageVersion) {
            this.messageVersion = messageVersion;
            return this;
        }

        public Builder setMessageVersion(@Nullable String messageVersion) {
            this.messageVersion = Input.ofNullable(messageVersion);
            return this;
        }

        public Builder setReceiverApplicationId(@Nullable Input<String> receiverApplicationId) {
            this.receiverApplicationId = receiverApplicationId;
            return this;
        }

        public Builder setReceiverApplicationId(@Nullable String receiverApplicationId) {
            this.receiverApplicationId = Input.ofNullable(receiverApplicationId);
            return this;
        }

        public Builder setReceiverApplicationQualifier(@Nullable Input<String> receiverApplicationQualifier) {
            this.receiverApplicationQualifier = receiverApplicationQualifier;
            return this;
        }

        public Builder setReceiverApplicationQualifier(@Nullable String receiverApplicationQualifier) {
            this.receiverApplicationQualifier = Input.ofNullable(receiverApplicationQualifier);
            return this;
        }

        public Builder setSenderApplicationId(@Nullable Input<String> senderApplicationId) {
            this.senderApplicationId = senderApplicationId;
            return this;
        }

        public Builder setSenderApplicationId(@Nullable String senderApplicationId) {
            this.senderApplicationId = Input.ofNullable(senderApplicationId);
            return this;
        }

        public Builder setSenderApplicationQualifier(@Nullable Input<String> senderApplicationQualifier) {
            this.senderApplicationQualifier = senderApplicationQualifier;
            return this;
        }

        public Builder setSenderApplicationQualifier(@Nullable String senderApplicationQualifier) {
            this.senderApplicationQualifier = Input.ofNullable(senderApplicationQualifier);
            return this;
        }

        public Builder setTargetNamespace(@Nullable Input<String> targetNamespace) {
            this.targetNamespace = targetNamespace;
            return this;
        }

        public Builder setTargetNamespace(@Nullable String targetNamespace) {
            this.targetNamespace = Input.ofNullable(targetNamespace);
            return this;
        }
        public EdifactEnvelopeOverrideArgs build() {
            return new EdifactEnvelopeOverrideArgs(applicationPassword, associationAssignedCode, controllingAgencyCode, functionalGroupId, groupHeaderMessageRelease, groupHeaderMessageVersion, messageAssociationAssignedCode, messageId, messageRelease, messageVersion, receiverApplicationId, receiverApplicationQualifier, senderApplicationId, senderApplicationQualifier, targetNamespace);
        }
    }
}
