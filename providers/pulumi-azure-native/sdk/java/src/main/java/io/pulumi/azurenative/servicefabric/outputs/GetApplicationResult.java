// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.outputs;

import io.pulumi.azurenative.servicefabric.outputs.ApplicationMetricDescriptionResponse;
import io.pulumi.azurenative.servicefabric.outputs.ApplicationUpgradePolicyResponse;
import io.pulumi.azurenative.servicefabric.outputs.ApplicationUserAssignedIdentityResponse;
import io.pulumi.azurenative.servicefabric.outputs.ManagedIdentityResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetApplicationResult {
    private final String etag;
    private final String id;
    private final @Nullable ManagedIdentityResponse identity;
    private final @Nullable String location;
    private final @Nullable List<ApplicationUserAssignedIdentityResponse> managedIdentities;
    private final @Nullable Double maximumNodes;
    private final @Nullable List<ApplicationMetricDescriptionResponse> metrics;
    private final @Nullable Double minimumNodes;
    private final String name;
    private final @Nullable Map<String,String> parameters;
    private final String provisioningState;
    private final @Nullable Boolean removeApplicationCapacity;
    private final @Nullable Map<String,String> tags;
    private final String type;
    private final @Nullable String typeName;
    private final @Nullable String typeVersion;
    private final @Nullable ApplicationUpgradePolicyResponse upgradePolicy;

    @OutputCustomType.Constructor({"etag","id","identity","location","managedIdentities","maximumNodes","metrics","minimumNodes","name","parameters","provisioningState","removeApplicationCapacity","tags","type","typeName","typeVersion","upgradePolicy"})
    private GetApplicationResult(
        String etag,
        String id,
        @Nullable ManagedIdentityResponse identity,
        @Nullable String location,
        @Nullable List<ApplicationUserAssignedIdentityResponse> managedIdentities,
        @Nullable Double maximumNodes,
        @Nullable List<ApplicationMetricDescriptionResponse> metrics,
        @Nullable Double minimumNodes,
        String name,
        @Nullable Map<String,String> parameters,
        String provisioningState,
        @Nullable Boolean removeApplicationCapacity,
        @Nullable Map<String,String> tags,
        String type,
        @Nullable String typeName,
        @Nullable String typeVersion,
        @Nullable ApplicationUpgradePolicyResponse upgradePolicy) {
        this.etag = Objects.requireNonNull(etag);
        this.id = Objects.requireNonNull(id);
        this.identity = identity;
        this.location = location;
        this.managedIdentities = managedIdentities;
        this.maximumNodes = maximumNodes;
        this.metrics = metrics;
        this.minimumNodes = minimumNodes;
        this.name = Objects.requireNonNull(name);
        this.parameters = parameters;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.removeApplicationCapacity = removeApplicationCapacity;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.typeName = typeName;
        this.typeVersion = typeVersion;
        this.upgradePolicy = upgradePolicy;
    }

    public String getEtag() {
        return this.etag;
    }
    public String getId() {
        return this.id;
    }
    public Optional<ManagedIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public List<ApplicationUserAssignedIdentityResponse> getManagedIdentities() {
        return this.managedIdentities == null ? List.of() : this.managedIdentities;
    }
    public Optional<Double> getMaximumNodes() {
        return Optional.ofNullable(this.maximumNodes);
    }
    public List<ApplicationMetricDescriptionResponse> getMetrics() {
        return this.metrics == null ? List.of() : this.metrics;
    }
    public Optional<Double> getMinimumNodes() {
        return Optional.ofNullable(this.minimumNodes);
    }
    public String getName() {
        return this.name;
    }
    public Map<String,String> getParameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<Boolean> getRemoveApplicationCapacity() {
        return Optional.ofNullable(this.removeApplicationCapacity);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }
    public Optional<String> getTypeName() {
        return Optional.ofNullable(this.typeName);
    }
    public Optional<String> getTypeVersion() {
        return Optional.ofNullable(this.typeVersion);
    }
    public Optional<ApplicationUpgradePolicyResponse> getUpgradePolicy() {
        return Optional.ofNullable(this.upgradePolicy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String etag;
        private String id;
        private @Nullable ManagedIdentityResponse identity;
        private @Nullable String location;
        private @Nullable List<ApplicationUserAssignedIdentityResponse> managedIdentities;
        private @Nullable Double maximumNodes;
        private @Nullable List<ApplicationMetricDescriptionResponse> metrics;
        private @Nullable Double minimumNodes;
        private String name;
        private @Nullable Map<String,String> parameters;
        private String provisioningState;
        private @Nullable Boolean removeApplicationCapacity;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String typeName;
        private @Nullable String typeVersion;
        private @Nullable ApplicationUpgradePolicyResponse upgradePolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.managedIdentities = defaults.managedIdentities;
    	      this.maximumNodes = defaults.maximumNodes;
    	      this.metrics = defaults.metrics;
    	      this.minimumNodes = defaults.minimumNodes;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.provisioningState = defaults.provisioningState;
    	      this.removeApplicationCapacity = defaults.removeApplicationCapacity;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.typeName = defaults.typeName;
    	      this.typeVersion = defaults.typeVersion;
    	      this.upgradePolicy = defaults.upgradePolicy;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIdentity(@Nullable ManagedIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setManagedIdentities(@Nullable List<ApplicationUserAssignedIdentityResponse> managedIdentities) {
            this.managedIdentities = managedIdentities;
            return this;
        }

        public Builder setMaximumNodes(@Nullable Double maximumNodes) {
            this.maximumNodes = maximumNodes;
            return this;
        }

        public Builder setMetrics(@Nullable List<ApplicationMetricDescriptionResponse> metrics) {
            this.metrics = metrics;
            return this;
        }

        public Builder setMinimumNodes(@Nullable Double minimumNodes) {
            this.minimumNodes = minimumNodes;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setParameters(@Nullable Map<String,String> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRemoveApplicationCapacity(@Nullable Boolean removeApplicationCapacity) {
            this.removeApplicationCapacity = removeApplicationCapacity;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setTypeName(@Nullable String typeName) {
            this.typeName = typeName;
            return this;
        }

        public Builder setTypeVersion(@Nullable String typeVersion) {
            this.typeVersion = typeVersion;
            return this;
        }

        public Builder setUpgradePolicy(@Nullable ApplicationUpgradePolicyResponse upgradePolicy) {
            this.upgradePolicy = upgradePolicy;
            return this;
        }

        public GetApplicationResult build() {
            return new GetApplicationResult(etag, id, identity, location, managedIdentities, maximumNodes, metrics, minimumNodes, name, parameters, provisioningState, removeApplicationCapacity, tags, type, typeName, typeVersion, upgradePolicy);
        }
    }
}
