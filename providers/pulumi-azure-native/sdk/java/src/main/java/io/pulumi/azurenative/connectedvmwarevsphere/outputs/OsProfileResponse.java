// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.connectedvmwarevsphere.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class OsProfileResponse {
    /**
     * Gets or sets administrator username.
     * 
     */
    private final @Nullable String adminUsername;
    /**
     * Gets or sets computer name.
     * 
     */
    private final @Nullable String computerName;
    /**
     * Gets or sets os name.
     * 
     */
    private final String osName;
    /**
     * Gets or sets the type of the os.
     * 
     */
    private final @Nullable String osType;
    /**
     * Gets or sets the current running status of VMware Tools running in the guest operating system.
     * 
     */
    private final String toolsRunningStatus;
    /**
     * Gets or sets the current version of VMware Tools.
     * 
     */
    private final String toolsVersion;
    /**
     * Gets or sets the current version status of VMware Tools installed in the guest operating system.
     * 
     */
    private final String toolsVersionStatus;

    @OutputCustomType.Constructor({"adminUsername","computerName","osName","osType","toolsRunningStatus","toolsVersion","toolsVersionStatus"})
    private OsProfileResponse(
        @Nullable String adminUsername,
        @Nullable String computerName,
        String osName,
        @Nullable String osType,
        String toolsRunningStatus,
        String toolsVersion,
        String toolsVersionStatus) {
        this.adminUsername = adminUsername;
        this.computerName = computerName;
        this.osName = Objects.requireNonNull(osName);
        this.osType = osType;
        this.toolsRunningStatus = Objects.requireNonNull(toolsRunningStatus);
        this.toolsVersion = Objects.requireNonNull(toolsVersion);
        this.toolsVersionStatus = Objects.requireNonNull(toolsVersionStatus);
    }

    /**
     * Gets or sets administrator username.
     * 
     */
    public Optional<String> getAdminUsername() {
        return Optional.ofNullable(this.adminUsername);
    }
    /**
     * Gets or sets computer name.
     * 
     */
    public Optional<String> getComputerName() {
        return Optional.ofNullable(this.computerName);
    }
    /**
     * Gets or sets os name.
     * 
     */
    public String getOsName() {
        return this.osName;
    }
    /**
     * Gets or sets the type of the os.
     * 
     */
    public Optional<String> getOsType() {
        return Optional.ofNullable(this.osType);
    }
    /**
     * Gets or sets the current running status of VMware Tools running in the guest operating system.
     * 
     */
    public String getToolsRunningStatus() {
        return this.toolsRunningStatus;
    }
    /**
     * Gets or sets the current version of VMware Tools.
     * 
     */
    public String getToolsVersion() {
        return this.toolsVersion;
    }
    /**
     * Gets or sets the current version status of VMware Tools installed in the guest operating system.
     * 
     */
    public String getToolsVersionStatus() {
        return this.toolsVersionStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String adminUsername;
        private @Nullable String computerName;
        private String osName;
        private @Nullable String osType;
        private String toolsRunningStatus;
        private String toolsVersion;
        private String toolsVersionStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(OsProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminUsername = defaults.adminUsername;
    	      this.computerName = defaults.computerName;
    	      this.osName = defaults.osName;
    	      this.osType = defaults.osType;
    	      this.toolsRunningStatus = defaults.toolsRunningStatus;
    	      this.toolsVersion = defaults.toolsVersion;
    	      this.toolsVersionStatus = defaults.toolsVersionStatus;
        }

        public Builder setAdminUsername(@Nullable String adminUsername) {
            this.adminUsername = adminUsername;
            return this;
        }

        public Builder setComputerName(@Nullable String computerName) {
            this.computerName = computerName;
            return this;
        }

        public Builder setOsName(String osName) {
            this.osName = Objects.requireNonNull(osName);
            return this;
        }

        public Builder setOsType(@Nullable String osType) {
            this.osType = osType;
            return this;
        }

        public Builder setToolsRunningStatus(String toolsRunningStatus) {
            this.toolsRunningStatus = Objects.requireNonNull(toolsRunningStatus);
            return this;
        }

        public Builder setToolsVersion(String toolsVersion) {
            this.toolsVersion = Objects.requireNonNull(toolsVersion);
            return this;
        }

        public Builder setToolsVersionStatus(String toolsVersionStatus) {
            this.toolsVersionStatus = Objects.requireNonNull(toolsVersionStatus);
            return this;
        }

        public OsProfileResponse build() {
            return new OsProfileResponse(adminUsername, computerName, osName, osType, toolsRunningStatus, toolsVersion, toolsVersionStatus);
        }
    }
}
