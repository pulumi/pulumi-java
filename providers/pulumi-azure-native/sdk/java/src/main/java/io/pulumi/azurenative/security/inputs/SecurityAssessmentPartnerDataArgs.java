// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Data regarding 3rd party partner integration
 * 
 */
public final class SecurityAssessmentPartnerDataArgs extends io.pulumi.resources.ResourceArgs {

    public static final SecurityAssessmentPartnerDataArgs Empty = new SecurityAssessmentPartnerDataArgs();

    /**
     * Name of the company of the partner
     * 
     */
    @Import(name="partnerName", required=true)
      private final Output<String> partnerName;

    public Output<String> getPartnerName() {
        return this.partnerName;
    }

    /**
     * secret to authenticate the partner - write only
     * 
     */
    @Import(name="secret", required=true)
      private final Output<String> secret;

    public Output<String> getSecret() {
        return this.secret;
    }

    public SecurityAssessmentPartnerDataArgs(
        Output<String> partnerName,
        Output<String> secret) {
        this.partnerName = Objects.requireNonNull(partnerName, "expected parameter 'partnerName' to be non-null");
        this.secret = Objects.requireNonNull(secret, "expected parameter 'secret' to be non-null");
    }

    private SecurityAssessmentPartnerDataArgs() {
        this.partnerName = Codegen.empty();
        this.secret = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityAssessmentPartnerDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> partnerName;
        private Output<String> secret;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityAssessmentPartnerDataArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.partnerName = defaults.partnerName;
    	      this.secret = defaults.secret;
        }

        public Builder partnerName(Output<String> partnerName) {
            this.partnerName = Objects.requireNonNull(partnerName);
            return this;
        }
        public Builder partnerName(String partnerName) {
            this.partnerName = Output.of(Objects.requireNonNull(partnerName));
            return this;
        }
        public Builder secret(Output<String> secret) {
            this.secret = Objects.requireNonNull(secret);
            return this;
        }
        public Builder secret(String secret) {
            this.secret = Output.of(Objects.requireNonNull(secret));
            return this;
        }        public SecurityAssessmentPartnerDataArgs build() {
            return new SecurityAssessmentPartnerDataArgs(partnerName, secret);
        }
    }
}
