// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sqlvirtualmachine;

import io.pulumi.azurenative.sqlvirtualmachine.enums.SqlImageSku;
import io.pulumi.azurenative.sqlvirtualmachine.enums.SqlManagementMode;
import io.pulumi.azurenative.sqlvirtualmachine.enums.SqlServerLicenseType;
import io.pulumi.azurenative.sqlvirtualmachine.inputs.AutoBackupSettingsArgs;
import io.pulumi.azurenative.sqlvirtualmachine.inputs.AutoPatchingSettingsArgs;
import io.pulumi.azurenative.sqlvirtualmachine.inputs.KeyVaultCredentialSettingsArgs;
import io.pulumi.azurenative.sqlvirtualmachine.inputs.ResourceIdentityArgs;
import io.pulumi.azurenative.sqlvirtualmachine.inputs.ServerConfigurationsManagementSettingsArgs;
import io.pulumi.azurenative.sqlvirtualmachine.inputs.StorageConfigurationSettingsArgs;
import io.pulumi.azurenative.sqlvirtualmachine.inputs.WsfcDomainCredentialsArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SqlVirtualMachineArgs extends io.pulumi.resources.ResourceArgs {

    public static final SqlVirtualMachineArgs Empty = new SqlVirtualMachineArgs();

    /**
     * Auto backup settings for SQL Server.
     * 
     */
    @Import(name="autoBackupSettings")
      private final @Nullable Output<AutoBackupSettingsArgs> autoBackupSettings;

    public Output<AutoBackupSettingsArgs> getAutoBackupSettings() {
        return this.autoBackupSettings == null ? Codegen.empty() : this.autoBackupSettings;
    }

    /**
     * Auto patching settings for applying critical security updates to SQL virtual machine.
     * 
     */
    @Import(name="autoPatchingSettings")
      private final @Nullable Output<AutoPatchingSettingsArgs> autoPatchingSettings;

    public Output<AutoPatchingSettingsArgs> getAutoPatchingSettings() {
        return this.autoPatchingSettings == null ? Codegen.empty() : this.autoPatchingSettings;
    }

    /**
     * Azure Active Directory identity of the server.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<ResourceIdentityArgs> identity;

    public Output<ResourceIdentityArgs> getIdentity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * Key vault credential settings.
     * 
     */
    @Import(name="keyVaultCredentialSettings")
      private final @Nullable Output<KeyVaultCredentialSettingsArgs> keyVaultCredentialSettings;

    public Output<KeyVaultCredentialSettingsArgs> getKeyVaultCredentialSettings() {
        return this.keyVaultCredentialSettings == null ? Codegen.empty() : this.keyVaultCredentialSettings;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * SQL Server configuration management settings.
     * 
     */
    @Import(name="serverConfigurationsManagementSettings")
      private final @Nullable Output<ServerConfigurationsManagementSettingsArgs> serverConfigurationsManagementSettings;

    public Output<ServerConfigurationsManagementSettingsArgs> getServerConfigurationsManagementSettings() {
        return this.serverConfigurationsManagementSettings == null ? Codegen.empty() : this.serverConfigurationsManagementSettings;
    }

    /**
     * SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.
     * 
     */
    @Import(name="sqlImageOffer")
      private final @Nullable Output<String> sqlImageOffer;

    public Output<String> getSqlImageOffer() {
        return this.sqlImageOffer == null ? Codegen.empty() : this.sqlImageOffer;
    }

    /**
     * SQL Server edition type.
     * 
     */
    @Import(name="sqlImageSku")
      private final @Nullable Output<Either<String,SqlImageSku>> sqlImageSku;

    public Output<Either<String,SqlImageSku>> getSqlImageSku() {
        return this.sqlImageSku == null ? Codegen.empty() : this.sqlImageSku;
    }

    /**
     * SQL Server Management type.
     * 
     */
    @Import(name="sqlManagement")
      private final @Nullable Output<Either<String,SqlManagementMode>> sqlManagement;

    public Output<Either<String,SqlManagementMode>> getSqlManagement() {
        return this.sqlManagement == null ? Codegen.empty() : this.sqlManagement;
    }

    /**
     * SQL Server license type.
     * 
     */
    @Import(name="sqlServerLicenseType")
      private final @Nullable Output<Either<String,SqlServerLicenseType>> sqlServerLicenseType;

    public Output<Either<String,SqlServerLicenseType>> getSqlServerLicenseType() {
        return this.sqlServerLicenseType == null ? Codegen.empty() : this.sqlServerLicenseType;
    }

    /**
     * ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.
     * 
     */
    @Import(name="sqlVirtualMachineGroupResourceId")
      private final @Nullable Output<String> sqlVirtualMachineGroupResourceId;

    public Output<String> getSqlVirtualMachineGroupResourceId() {
        return this.sqlVirtualMachineGroupResourceId == null ? Codegen.empty() : this.sqlVirtualMachineGroupResourceId;
    }

    /**
     * Name of the SQL virtual machine.
     * 
     */
    @Import(name="sqlVirtualMachineName")
      private final @Nullable Output<String> sqlVirtualMachineName;

    public Output<String> getSqlVirtualMachineName() {
        return this.sqlVirtualMachineName == null ? Codegen.empty() : this.sqlVirtualMachineName;
    }

    /**
     * Storage Configuration Settings.
     * 
     */
    @Import(name="storageConfigurationSettings")
      private final @Nullable Output<StorageConfigurationSettingsArgs> storageConfigurationSettings;

    public Output<StorageConfigurationSettingsArgs> getStorageConfigurationSettings() {
        return this.storageConfigurationSettings == null ? Codegen.empty() : this.storageConfigurationSettings;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * ARM Resource id of underlying virtual machine created from SQL marketplace image.
     * 
     */
    @Import(name="virtualMachineResourceId")
      private final @Nullable Output<String> virtualMachineResourceId;

    public Output<String> getVirtualMachineResourceId() {
        return this.virtualMachineResourceId == null ? Codegen.empty() : this.virtualMachineResourceId;
    }

    /**
     * Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
     * 
     */
    @Import(name="wsfcDomainCredentials")
      private final @Nullable Output<WsfcDomainCredentialsArgs> wsfcDomainCredentials;

    public Output<WsfcDomainCredentialsArgs> getWsfcDomainCredentials() {
        return this.wsfcDomainCredentials == null ? Codegen.empty() : this.wsfcDomainCredentials;
    }

    public SqlVirtualMachineArgs(
        @Nullable Output<AutoBackupSettingsArgs> autoBackupSettings,
        @Nullable Output<AutoPatchingSettingsArgs> autoPatchingSettings,
        @Nullable Output<ResourceIdentityArgs> identity,
        @Nullable Output<KeyVaultCredentialSettingsArgs> keyVaultCredentialSettings,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<ServerConfigurationsManagementSettingsArgs> serverConfigurationsManagementSettings,
        @Nullable Output<String> sqlImageOffer,
        @Nullable Output<Either<String,SqlImageSku>> sqlImageSku,
        @Nullable Output<Either<String,SqlManagementMode>> sqlManagement,
        @Nullable Output<Either<String,SqlServerLicenseType>> sqlServerLicenseType,
        @Nullable Output<String> sqlVirtualMachineGroupResourceId,
        @Nullable Output<String> sqlVirtualMachineName,
        @Nullable Output<StorageConfigurationSettingsArgs> storageConfigurationSettings,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> virtualMachineResourceId,
        @Nullable Output<WsfcDomainCredentialsArgs> wsfcDomainCredentials) {
        this.autoBackupSettings = autoBackupSettings;
        this.autoPatchingSettings = autoPatchingSettings;
        this.identity = identity;
        this.keyVaultCredentialSettings = keyVaultCredentialSettings;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serverConfigurationsManagementSettings = serverConfigurationsManagementSettings;
        this.sqlImageOffer = sqlImageOffer;
        this.sqlImageSku = sqlImageSku;
        this.sqlManagement = sqlManagement;
        this.sqlServerLicenseType = sqlServerLicenseType;
        this.sqlVirtualMachineGroupResourceId = sqlVirtualMachineGroupResourceId;
        this.sqlVirtualMachineName = sqlVirtualMachineName;
        this.storageConfigurationSettings = storageConfigurationSettings;
        this.tags = tags;
        this.virtualMachineResourceId = virtualMachineResourceId;
        this.wsfcDomainCredentials = wsfcDomainCredentials;
    }

    private SqlVirtualMachineArgs() {
        this.autoBackupSettings = Codegen.empty();
        this.autoPatchingSettings = Codegen.empty();
        this.identity = Codegen.empty();
        this.keyVaultCredentialSettings = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.serverConfigurationsManagementSettings = Codegen.empty();
        this.sqlImageOffer = Codegen.empty();
        this.sqlImageSku = Codegen.empty();
        this.sqlManagement = Codegen.empty();
        this.sqlServerLicenseType = Codegen.empty();
        this.sqlVirtualMachineGroupResourceId = Codegen.empty();
        this.sqlVirtualMachineName = Codegen.empty();
        this.storageConfigurationSettings = Codegen.empty();
        this.tags = Codegen.empty();
        this.virtualMachineResourceId = Codegen.empty();
        this.wsfcDomainCredentials = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlVirtualMachineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AutoBackupSettingsArgs> autoBackupSettings;
        private @Nullable Output<AutoPatchingSettingsArgs> autoPatchingSettings;
        private @Nullable Output<ResourceIdentityArgs> identity;
        private @Nullable Output<KeyVaultCredentialSettingsArgs> keyVaultCredentialSettings;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<ServerConfigurationsManagementSettingsArgs> serverConfigurationsManagementSettings;
        private @Nullable Output<String> sqlImageOffer;
        private @Nullable Output<Either<String,SqlImageSku>> sqlImageSku;
        private @Nullable Output<Either<String,SqlManagementMode>> sqlManagement;
        private @Nullable Output<Either<String,SqlServerLicenseType>> sqlServerLicenseType;
        private @Nullable Output<String> sqlVirtualMachineGroupResourceId;
        private @Nullable Output<String> sqlVirtualMachineName;
        private @Nullable Output<StorageConfigurationSettingsArgs> storageConfigurationSettings;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> virtualMachineResourceId;
        private @Nullable Output<WsfcDomainCredentialsArgs> wsfcDomainCredentials;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlVirtualMachineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoBackupSettings = defaults.autoBackupSettings;
    	      this.autoPatchingSettings = defaults.autoPatchingSettings;
    	      this.identity = defaults.identity;
    	      this.keyVaultCredentialSettings = defaults.keyVaultCredentialSettings;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serverConfigurationsManagementSettings = defaults.serverConfigurationsManagementSettings;
    	      this.sqlImageOffer = defaults.sqlImageOffer;
    	      this.sqlImageSku = defaults.sqlImageSku;
    	      this.sqlManagement = defaults.sqlManagement;
    	      this.sqlServerLicenseType = defaults.sqlServerLicenseType;
    	      this.sqlVirtualMachineGroupResourceId = defaults.sqlVirtualMachineGroupResourceId;
    	      this.sqlVirtualMachineName = defaults.sqlVirtualMachineName;
    	      this.storageConfigurationSettings = defaults.storageConfigurationSettings;
    	      this.tags = defaults.tags;
    	      this.virtualMachineResourceId = defaults.virtualMachineResourceId;
    	      this.wsfcDomainCredentials = defaults.wsfcDomainCredentials;
        }

        public Builder autoBackupSettings(@Nullable Output<AutoBackupSettingsArgs> autoBackupSettings) {
            this.autoBackupSettings = autoBackupSettings;
            return this;
        }
        public Builder autoBackupSettings(@Nullable AutoBackupSettingsArgs autoBackupSettings) {
            this.autoBackupSettings = Codegen.ofNullable(autoBackupSettings);
            return this;
        }
        public Builder autoPatchingSettings(@Nullable Output<AutoPatchingSettingsArgs> autoPatchingSettings) {
            this.autoPatchingSettings = autoPatchingSettings;
            return this;
        }
        public Builder autoPatchingSettings(@Nullable AutoPatchingSettingsArgs autoPatchingSettings) {
            this.autoPatchingSettings = Codegen.ofNullable(autoPatchingSettings);
            return this;
        }
        public Builder identity(@Nullable Output<ResourceIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable ResourceIdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder keyVaultCredentialSettings(@Nullable Output<KeyVaultCredentialSettingsArgs> keyVaultCredentialSettings) {
            this.keyVaultCredentialSettings = keyVaultCredentialSettings;
            return this;
        }
        public Builder keyVaultCredentialSettings(@Nullable KeyVaultCredentialSettingsArgs keyVaultCredentialSettings) {
            this.keyVaultCredentialSettings = Codegen.ofNullable(keyVaultCredentialSettings);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder serverConfigurationsManagementSettings(@Nullable Output<ServerConfigurationsManagementSettingsArgs> serverConfigurationsManagementSettings) {
            this.serverConfigurationsManagementSettings = serverConfigurationsManagementSettings;
            return this;
        }
        public Builder serverConfigurationsManagementSettings(@Nullable ServerConfigurationsManagementSettingsArgs serverConfigurationsManagementSettings) {
            this.serverConfigurationsManagementSettings = Codegen.ofNullable(serverConfigurationsManagementSettings);
            return this;
        }
        public Builder sqlImageOffer(@Nullable Output<String> sqlImageOffer) {
            this.sqlImageOffer = sqlImageOffer;
            return this;
        }
        public Builder sqlImageOffer(@Nullable String sqlImageOffer) {
            this.sqlImageOffer = Codegen.ofNullable(sqlImageOffer);
            return this;
        }
        public Builder sqlImageSku(@Nullable Output<Either<String,SqlImageSku>> sqlImageSku) {
            this.sqlImageSku = sqlImageSku;
            return this;
        }
        public Builder sqlImageSku(@Nullable Either<String,SqlImageSku> sqlImageSku) {
            this.sqlImageSku = Codegen.ofNullable(sqlImageSku);
            return this;
        }
        public Builder sqlManagement(@Nullable Output<Either<String,SqlManagementMode>> sqlManagement) {
            this.sqlManagement = sqlManagement;
            return this;
        }
        public Builder sqlManagement(@Nullable Either<String,SqlManagementMode> sqlManagement) {
            this.sqlManagement = Codegen.ofNullable(sqlManagement);
            return this;
        }
        public Builder sqlServerLicenseType(@Nullable Output<Either<String,SqlServerLicenseType>> sqlServerLicenseType) {
            this.sqlServerLicenseType = sqlServerLicenseType;
            return this;
        }
        public Builder sqlServerLicenseType(@Nullable Either<String,SqlServerLicenseType> sqlServerLicenseType) {
            this.sqlServerLicenseType = Codegen.ofNullable(sqlServerLicenseType);
            return this;
        }
        public Builder sqlVirtualMachineGroupResourceId(@Nullable Output<String> sqlVirtualMachineGroupResourceId) {
            this.sqlVirtualMachineGroupResourceId = sqlVirtualMachineGroupResourceId;
            return this;
        }
        public Builder sqlVirtualMachineGroupResourceId(@Nullable String sqlVirtualMachineGroupResourceId) {
            this.sqlVirtualMachineGroupResourceId = Codegen.ofNullable(sqlVirtualMachineGroupResourceId);
            return this;
        }
        public Builder sqlVirtualMachineName(@Nullable Output<String> sqlVirtualMachineName) {
            this.sqlVirtualMachineName = sqlVirtualMachineName;
            return this;
        }
        public Builder sqlVirtualMachineName(@Nullable String sqlVirtualMachineName) {
            this.sqlVirtualMachineName = Codegen.ofNullable(sqlVirtualMachineName);
            return this;
        }
        public Builder storageConfigurationSettings(@Nullable Output<StorageConfigurationSettingsArgs> storageConfigurationSettings) {
            this.storageConfigurationSettings = storageConfigurationSettings;
            return this;
        }
        public Builder storageConfigurationSettings(@Nullable StorageConfigurationSettingsArgs storageConfigurationSettings) {
            this.storageConfigurationSettings = Codegen.ofNullable(storageConfigurationSettings);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder virtualMachineResourceId(@Nullable Output<String> virtualMachineResourceId) {
            this.virtualMachineResourceId = virtualMachineResourceId;
            return this;
        }
        public Builder virtualMachineResourceId(@Nullable String virtualMachineResourceId) {
            this.virtualMachineResourceId = Codegen.ofNullable(virtualMachineResourceId);
            return this;
        }
        public Builder wsfcDomainCredentials(@Nullable Output<WsfcDomainCredentialsArgs> wsfcDomainCredentials) {
            this.wsfcDomainCredentials = wsfcDomainCredentials;
            return this;
        }
        public Builder wsfcDomainCredentials(@Nullable WsfcDomainCredentialsArgs wsfcDomainCredentials) {
            this.wsfcDomainCredentials = Codegen.ofNullable(wsfcDomainCredentials);
            return this;
        }        public SqlVirtualMachineArgs build() {
            return new SqlVirtualMachineArgs(autoBackupSettings, autoPatchingSettings, identity, keyVaultCredentialSettings, location, resourceGroupName, serverConfigurationsManagementSettings, sqlImageOffer, sqlImageSku, sqlManagement, sqlServerLicenseType, sqlVirtualMachineGroupResourceId, sqlVirtualMachineName, storageConfigurationSettings, tags, virtualMachineResourceId, wsfcDomainCredentials);
        }
    }
}
