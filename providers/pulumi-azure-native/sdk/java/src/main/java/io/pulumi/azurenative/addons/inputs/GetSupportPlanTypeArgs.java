// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.addons.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class GetSupportPlanTypeArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetSupportPlanTypeArgs Empty = new GetSupportPlanTypeArgs();

    /**
     * The Canonical support plan type.
     * 
     */
    @InputImport(name="planTypeName", required=true)
      private final String planTypeName;

    public String getPlanTypeName() {
        return this.planTypeName;
    }

    /**
     * The support plan type. For now the only valid type is "canonical".
     * 
     */
    @InputImport(name="providerName", required=true)
      private final String providerName;

    public String getProviderName() {
        return this.providerName;
    }

    public GetSupportPlanTypeArgs(
        String planTypeName,
        String providerName) {
        this.planTypeName = Objects.requireNonNull(planTypeName, "expected parameter 'planTypeName' to be non-null");
        this.providerName = Objects.requireNonNull(providerName, "expected parameter 'providerName' to be non-null");
    }

    private GetSupportPlanTypeArgs() {
        this.planTypeName = null;
        this.providerName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSupportPlanTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String planTypeName;
        private String providerName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSupportPlanTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.planTypeName = defaults.planTypeName;
    	      this.providerName = defaults.providerName;
        }

        public Builder planTypeName(String planTypeName) {
            this.planTypeName = Objects.requireNonNull(planTypeName);
            return this;
        }

        public Builder providerName(String providerName) {
            this.providerName = Objects.requireNonNull(providerName);
            return this;
        }
        public GetSupportPlanTypeArgs build() {
            return new GetSupportPlanTypeArgs(planTypeName, providerName);
        }
    }
}
