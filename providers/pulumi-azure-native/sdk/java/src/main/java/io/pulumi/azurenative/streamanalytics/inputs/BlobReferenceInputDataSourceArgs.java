// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.streamanalytics.inputs;

import io.pulumi.azurenative.streamanalytics.inputs.StorageAccountArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BlobReferenceInputDataSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final BlobReferenceInputDataSourceArgs Empty = new BlobReferenceInputDataSourceArgs();

    @InputImport(name="container")
    private final @Nullable Input<String> container;

    public Input<String> getContainer() {
        return this.container == null ? Input.empty() : this.container;
    }

    @InputImport(name="dateFormat")
    private final @Nullable Input<String> dateFormat;

    public Input<String> getDateFormat() {
        return this.dateFormat == null ? Input.empty() : this.dateFormat;
    }

    @InputImport(name="pathPattern")
    private final @Nullable Input<String> pathPattern;

    public Input<String> getPathPattern() {
        return this.pathPattern == null ? Input.empty() : this.pathPattern;
    }

    @InputImport(name="storageAccounts")
    private final @Nullable Input<List<StorageAccountArgs>> storageAccounts;

    public Input<List<StorageAccountArgs>> getStorageAccounts() {
        return this.storageAccounts == null ? Input.empty() : this.storageAccounts;
    }

    @InputImport(name="timeFormat")
    private final @Nullable Input<String> timeFormat;

    public Input<String> getTimeFormat() {
        return this.timeFormat == null ? Input.empty() : this.timeFormat;
    }

    @InputImport(name="type", required=true)
    private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    public BlobReferenceInputDataSourceArgs(
        @Nullable Input<String> container,
        @Nullable Input<String> dateFormat,
        @Nullable Input<String> pathPattern,
        @Nullable Input<List<StorageAccountArgs>> storageAccounts,
        @Nullable Input<String> timeFormat,
        Input<String> type) {
        this.container = container;
        this.dateFormat = dateFormat;
        this.pathPattern = pathPattern;
        this.storageAccounts = storageAccounts;
        this.timeFormat = timeFormat;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private BlobReferenceInputDataSourceArgs() {
        this.container = Input.empty();
        this.dateFormat = Input.empty();
        this.pathPattern = Input.empty();
        this.storageAccounts = Input.empty();
        this.timeFormat = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BlobReferenceInputDataSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> container;
        private @Nullable Input<String> dateFormat;
        private @Nullable Input<String> pathPattern;
        private @Nullable Input<List<StorageAccountArgs>> storageAccounts;
        private @Nullable Input<String> timeFormat;
        private Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(BlobReferenceInputDataSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.container = defaults.container;
    	      this.dateFormat = defaults.dateFormat;
    	      this.pathPattern = defaults.pathPattern;
    	      this.storageAccounts = defaults.storageAccounts;
    	      this.timeFormat = defaults.timeFormat;
    	      this.type = defaults.type;
        }

        public Builder setContainer(@Nullable Input<String> container) {
            this.container = container;
            return this;
        }

        public Builder setContainer(@Nullable String container) {
            this.container = Input.ofNullable(container);
            return this;
        }

        public Builder setDateFormat(@Nullable Input<String> dateFormat) {
            this.dateFormat = dateFormat;
            return this;
        }

        public Builder setDateFormat(@Nullable String dateFormat) {
            this.dateFormat = Input.ofNullable(dateFormat);
            return this;
        }

        public Builder setPathPattern(@Nullable Input<String> pathPattern) {
            this.pathPattern = pathPattern;
            return this;
        }

        public Builder setPathPattern(@Nullable String pathPattern) {
            this.pathPattern = Input.ofNullable(pathPattern);
            return this;
        }

        public Builder setStorageAccounts(@Nullable Input<List<StorageAccountArgs>> storageAccounts) {
            this.storageAccounts = storageAccounts;
            return this;
        }

        public Builder setStorageAccounts(@Nullable List<StorageAccountArgs> storageAccounts) {
            this.storageAccounts = Input.ofNullable(storageAccounts);
            return this;
        }

        public Builder setTimeFormat(@Nullable Input<String> timeFormat) {
            this.timeFormat = timeFormat;
            return this;
        }

        public Builder setTimeFormat(@Nullable String timeFormat) {
            this.timeFormat = Input.ofNullable(timeFormat);
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public BlobReferenceInputDataSourceArgs build() {
            return new BlobReferenceInputDataSourceArgs(container, dateFormat, pathPattern, storageAccounts, timeFormat, type);
        }
    }
}
