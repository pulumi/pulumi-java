// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Description of the IoT hub.
 * 
 */
public final class IotHubDefinitionDescriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final IotHubDefinitionDescriptionArgs Empty = new IotHubDefinitionDescriptionArgs();

    /**
     * weight to apply for a given iot h.
     * 
     */
    @Import(name="allocationWeight")
      private final @Nullable Output<Integer> allocationWeight;

    public Output<Integer> getAllocationWeight() {
        return this.allocationWeight == null ? Codegen.empty() : this.allocationWeight;
    }

    /**
     * flag for applying allocationPolicy or not for a given iot hub.
     * 
     */
    @Import(name="applyAllocationPolicy")
      private final @Nullable Output<Boolean> applyAllocationPolicy;

    public Output<Boolean> getApplyAllocationPolicy() {
        return this.applyAllocationPolicy == null ? Codegen.empty() : this.applyAllocationPolicy;
    }

    /**
     * Connection string of the IoT hub.
     * 
     */
    @Import(name="connectionString", required=true)
      private final Output<String> connectionString;

    public Output<String> getConnectionString() {
        return this.connectionString;
    }

    /**
     * ARM region of the IoT hub.
     * 
     */
    @Import(name="location", required=true)
      private final Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }

    public IotHubDefinitionDescriptionArgs(
        @Nullable Output<Integer> allocationWeight,
        @Nullable Output<Boolean> applyAllocationPolicy,
        Output<String> connectionString,
        Output<String> location) {
        this.allocationWeight = allocationWeight;
        this.applyAllocationPolicy = applyAllocationPolicy;
        this.connectionString = Objects.requireNonNull(connectionString, "expected parameter 'connectionString' to be non-null");
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
    }

    private IotHubDefinitionDescriptionArgs() {
        this.allocationWeight = Codegen.empty();
        this.applyAllocationPolicy = Codegen.empty();
        this.connectionString = Codegen.empty();
        this.location = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IotHubDefinitionDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> allocationWeight;
        private @Nullable Output<Boolean> applyAllocationPolicy;
        private Output<String> connectionString;
        private Output<String> location;

        public Builder() {
    	      // Empty
        }

        public Builder(IotHubDefinitionDescriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationWeight = defaults.allocationWeight;
    	      this.applyAllocationPolicy = defaults.applyAllocationPolicy;
    	      this.connectionString = defaults.connectionString;
    	      this.location = defaults.location;
        }

        public Builder allocationWeight(@Nullable Output<Integer> allocationWeight) {
            this.allocationWeight = allocationWeight;
            return this;
        }
        public Builder allocationWeight(@Nullable Integer allocationWeight) {
            this.allocationWeight = Codegen.ofNullable(allocationWeight);
            return this;
        }
        public Builder applyAllocationPolicy(@Nullable Output<Boolean> applyAllocationPolicy) {
            this.applyAllocationPolicy = applyAllocationPolicy;
            return this;
        }
        public Builder applyAllocationPolicy(@Nullable Boolean applyAllocationPolicy) {
            this.applyAllocationPolicy = Codegen.ofNullable(applyAllocationPolicy);
            return this;
        }
        public Builder connectionString(Output<String> connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }
        public Builder connectionString(String connectionString) {
            this.connectionString = Output.of(Objects.requireNonNull(connectionString));
            return this;
        }
        public Builder location(Output<String> location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder location(String location) {
            this.location = Output.of(Objects.requireNonNull(location));
            return this;
        }        public IotHubDefinitionDescriptionArgs build() {
            return new IotHubDefinitionDescriptionArgs(allocationWeight, applyAllocationPolicy, connectionString, location);
        }
    }
}
