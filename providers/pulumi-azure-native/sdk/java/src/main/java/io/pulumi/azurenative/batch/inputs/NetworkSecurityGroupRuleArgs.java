// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.inputs;

import io.pulumi.azurenative.batch.enums.NetworkSecurityGroupRuleAccess;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkSecurityGroupRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkSecurityGroupRuleArgs Empty = new NetworkSecurityGroupRuleArgs();

    @Import(name="access", required=true)
      private final Output<NetworkSecurityGroupRuleAccess> access;

    public Output<NetworkSecurityGroupRuleAccess> access() {
        return this.access;
    }

    /**
     * Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
     * 
     */
    @Import(name="priority", required=true)
      private final Output<Integer> priority;

    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     * Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.
     * 
     */
    @Import(name="sourceAddressPrefix", required=true)
      private final Output<String> sourceAddressPrefix;

    public Output<String> sourceAddressPrefix() {
        return this.sourceAddressPrefix;
    }

    /**
     * Valid values are '*' (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. 100-200). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be *.
     * 
     */
    @Import(name="sourcePortRanges")
      private final @Nullable Output<List<String>> sourcePortRanges;

    public Output<List<String>> sourcePortRanges() {
        return this.sourcePortRanges == null ? Codegen.empty() : this.sourcePortRanges;
    }

    public NetworkSecurityGroupRuleArgs(
        Output<NetworkSecurityGroupRuleAccess> access,
        Output<Integer> priority,
        Output<String> sourceAddressPrefix,
        @Nullable Output<List<String>> sourcePortRanges) {
        this.access = Objects.requireNonNull(access, "expected parameter 'access' to be non-null");
        this.priority = Objects.requireNonNull(priority, "expected parameter 'priority' to be non-null");
        this.sourceAddressPrefix = Objects.requireNonNull(sourceAddressPrefix, "expected parameter 'sourceAddressPrefix' to be non-null");
        this.sourcePortRanges = sourcePortRanges;
    }

    private NetworkSecurityGroupRuleArgs() {
        this.access = Codegen.empty();
        this.priority = Codegen.empty();
        this.sourceAddressPrefix = Codegen.empty();
        this.sourcePortRanges = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkSecurityGroupRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<NetworkSecurityGroupRuleAccess> access;
        private Output<Integer> priority;
        private Output<String> sourceAddressPrefix;
        private @Nullable Output<List<String>> sourcePortRanges;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkSecurityGroupRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.access = defaults.access;
    	      this.priority = defaults.priority;
    	      this.sourceAddressPrefix = defaults.sourceAddressPrefix;
    	      this.sourcePortRanges = defaults.sourcePortRanges;
        }

        public Builder access(Output<NetworkSecurityGroupRuleAccess> access) {
            this.access = Objects.requireNonNull(access);
            return this;
        }
        public Builder access(NetworkSecurityGroupRuleAccess access) {
            this.access = Output.of(Objects.requireNonNull(access));
            return this;
        }
        public Builder priority(Output<Integer> priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }
        public Builder priority(Integer priority) {
            this.priority = Output.of(Objects.requireNonNull(priority));
            return this;
        }
        public Builder sourceAddressPrefix(Output<String> sourceAddressPrefix) {
            this.sourceAddressPrefix = Objects.requireNonNull(sourceAddressPrefix);
            return this;
        }
        public Builder sourceAddressPrefix(String sourceAddressPrefix) {
            this.sourceAddressPrefix = Output.of(Objects.requireNonNull(sourceAddressPrefix));
            return this;
        }
        public Builder sourcePortRanges(@Nullable Output<List<String>> sourcePortRanges) {
            this.sourcePortRanges = sourcePortRanges;
            return this;
        }
        public Builder sourcePortRanges(@Nullable List<String> sourcePortRanges) {
            this.sourcePortRanges = Codegen.ofNullable(sourcePortRanges);
            return this;
        }
        public Builder sourcePortRanges(String... sourcePortRanges) {
            return sourcePortRanges(List.of(sourcePortRanges));
        }        public NetworkSecurityGroupRuleArgs build() {
            return new NetworkSecurityGroupRuleArgs(access, priority, sourceAddressPrefix, sourcePortRanges);
        }
    }
}
