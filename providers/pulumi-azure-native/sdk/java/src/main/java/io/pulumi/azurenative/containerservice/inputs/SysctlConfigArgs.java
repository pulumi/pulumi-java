// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerservice.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Sysctl settings for Linux agent nodes.
 * 
 */
public final class SysctlConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final SysctlConfigArgs Empty = new SysctlConfigArgs();

    /**
     * Sysctl setting fs.aio-max-nr.
     * 
     */
    @InputImport(name="fsAioMaxNr")
      private final @Nullable Input<Integer> fsAioMaxNr;

    public Input<Integer> getFsAioMaxNr() {
        return this.fsAioMaxNr == null ? Input.empty() : this.fsAioMaxNr;
    }

    /**
     * Sysctl setting fs.file-max.
     * 
     */
    @InputImport(name="fsFileMax")
      private final @Nullable Input<Integer> fsFileMax;

    public Input<Integer> getFsFileMax() {
        return this.fsFileMax == null ? Input.empty() : this.fsFileMax;
    }

    /**
     * Sysctl setting fs.inotify.max_user_watches.
     * 
     */
    @InputImport(name="fsInotifyMaxUserWatches")
      private final @Nullable Input<Integer> fsInotifyMaxUserWatches;

    public Input<Integer> getFsInotifyMaxUserWatches() {
        return this.fsInotifyMaxUserWatches == null ? Input.empty() : this.fsInotifyMaxUserWatches;
    }

    /**
     * Sysctl setting fs.nr_open.
     * 
     */
    @InputImport(name="fsNrOpen")
      private final @Nullable Input<Integer> fsNrOpen;

    public Input<Integer> getFsNrOpen() {
        return this.fsNrOpen == null ? Input.empty() : this.fsNrOpen;
    }

    /**
     * Sysctl setting kernel.threads-max.
     * 
     */
    @InputImport(name="kernelThreadsMax")
      private final @Nullable Input<Integer> kernelThreadsMax;

    public Input<Integer> getKernelThreadsMax() {
        return this.kernelThreadsMax == null ? Input.empty() : this.kernelThreadsMax;
    }

    /**
     * Sysctl setting net.core.netdev_max_backlog.
     * 
     */
    @InputImport(name="netCoreNetdevMaxBacklog")
      private final @Nullable Input<Integer> netCoreNetdevMaxBacklog;

    public Input<Integer> getNetCoreNetdevMaxBacklog() {
        return this.netCoreNetdevMaxBacklog == null ? Input.empty() : this.netCoreNetdevMaxBacklog;
    }

    /**
     * Sysctl setting net.core.optmem_max.
     * 
     */
    @InputImport(name="netCoreOptmemMax")
      private final @Nullable Input<Integer> netCoreOptmemMax;

    public Input<Integer> getNetCoreOptmemMax() {
        return this.netCoreOptmemMax == null ? Input.empty() : this.netCoreOptmemMax;
    }

    /**
     * Sysctl setting net.core.rmem_default.
     * 
     */
    @InputImport(name="netCoreRmemDefault")
      private final @Nullable Input<Integer> netCoreRmemDefault;

    public Input<Integer> getNetCoreRmemDefault() {
        return this.netCoreRmemDefault == null ? Input.empty() : this.netCoreRmemDefault;
    }

    /**
     * Sysctl setting net.core.rmem_max.
     * 
     */
    @InputImport(name="netCoreRmemMax")
      private final @Nullable Input<Integer> netCoreRmemMax;

    public Input<Integer> getNetCoreRmemMax() {
        return this.netCoreRmemMax == null ? Input.empty() : this.netCoreRmemMax;
    }

    /**
     * Sysctl setting net.core.somaxconn.
     * 
     */
    @InputImport(name="netCoreSomaxconn")
      private final @Nullable Input<Integer> netCoreSomaxconn;

    public Input<Integer> getNetCoreSomaxconn() {
        return this.netCoreSomaxconn == null ? Input.empty() : this.netCoreSomaxconn;
    }

    /**
     * Sysctl setting net.core.wmem_default.
     * 
     */
    @InputImport(name="netCoreWmemDefault")
      private final @Nullable Input<Integer> netCoreWmemDefault;

    public Input<Integer> getNetCoreWmemDefault() {
        return this.netCoreWmemDefault == null ? Input.empty() : this.netCoreWmemDefault;
    }

    /**
     * Sysctl setting net.core.wmem_max.
     * 
     */
    @InputImport(name="netCoreWmemMax")
      private final @Nullable Input<Integer> netCoreWmemMax;

    public Input<Integer> getNetCoreWmemMax() {
        return this.netCoreWmemMax == null ? Input.empty() : this.netCoreWmemMax;
    }

    /**
     * Sysctl setting net.ipv4.ip_local_port_range.
     * 
     */
    @InputImport(name="netIpv4IpLocalPortRange")
      private final @Nullable Input<String> netIpv4IpLocalPortRange;

    public Input<String> getNetIpv4IpLocalPortRange() {
        return this.netIpv4IpLocalPortRange == null ? Input.empty() : this.netIpv4IpLocalPortRange;
    }

    /**
     * Sysctl setting net.ipv4.neigh.default.gc_thresh1.
     * 
     */
    @InputImport(name="netIpv4NeighDefaultGcThresh1")
      private final @Nullable Input<Integer> netIpv4NeighDefaultGcThresh1;

    public Input<Integer> getNetIpv4NeighDefaultGcThresh1() {
        return this.netIpv4NeighDefaultGcThresh1 == null ? Input.empty() : this.netIpv4NeighDefaultGcThresh1;
    }

    /**
     * Sysctl setting net.ipv4.neigh.default.gc_thresh2.
     * 
     */
    @InputImport(name="netIpv4NeighDefaultGcThresh2")
      private final @Nullable Input<Integer> netIpv4NeighDefaultGcThresh2;

    public Input<Integer> getNetIpv4NeighDefaultGcThresh2() {
        return this.netIpv4NeighDefaultGcThresh2 == null ? Input.empty() : this.netIpv4NeighDefaultGcThresh2;
    }

    /**
     * Sysctl setting net.ipv4.neigh.default.gc_thresh3.
     * 
     */
    @InputImport(name="netIpv4NeighDefaultGcThresh3")
      private final @Nullable Input<Integer> netIpv4NeighDefaultGcThresh3;

    public Input<Integer> getNetIpv4NeighDefaultGcThresh3() {
        return this.netIpv4NeighDefaultGcThresh3 == null ? Input.empty() : this.netIpv4NeighDefaultGcThresh3;
    }

    /**
     * Sysctl setting net.ipv4.tcp_fin_timeout.
     * 
     */
    @InputImport(name="netIpv4TcpFinTimeout")
      private final @Nullable Input<Integer> netIpv4TcpFinTimeout;

    public Input<Integer> getNetIpv4TcpFinTimeout() {
        return this.netIpv4TcpFinTimeout == null ? Input.empty() : this.netIpv4TcpFinTimeout;
    }

    /**
     * Sysctl setting net.ipv4.tcp_keepalive_probes.
     * 
     */
    @InputImport(name="netIpv4TcpKeepaliveProbes")
      private final @Nullable Input<Integer> netIpv4TcpKeepaliveProbes;

    public Input<Integer> getNetIpv4TcpKeepaliveProbes() {
        return this.netIpv4TcpKeepaliveProbes == null ? Input.empty() : this.netIpv4TcpKeepaliveProbes;
    }

    /**
     * Sysctl setting net.ipv4.tcp_keepalive_time.
     * 
     */
    @InputImport(name="netIpv4TcpKeepaliveTime")
      private final @Nullable Input<Integer> netIpv4TcpKeepaliveTime;

    public Input<Integer> getNetIpv4TcpKeepaliveTime() {
        return this.netIpv4TcpKeepaliveTime == null ? Input.empty() : this.netIpv4TcpKeepaliveTime;
    }

    /**
     * Sysctl setting net.ipv4.tcp_max_syn_backlog.
     * 
     */
    @InputImport(name="netIpv4TcpMaxSynBacklog")
      private final @Nullable Input<Integer> netIpv4TcpMaxSynBacklog;

    public Input<Integer> getNetIpv4TcpMaxSynBacklog() {
        return this.netIpv4TcpMaxSynBacklog == null ? Input.empty() : this.netIpv4TcpMaxSynBacklog;
    }

    /**
     * Sysctl setting net.ipv4.tcp_max_tw_buckets.
     * 
     */
    @InputImport(name="netIpv4TcpMaxTwBuckets")
      private final @Nullable Input<Integer> netIpv4TcpMaxTwBuckets;

    public Input<Integer> getNetIpv4TcpMaxTwBuckets() {
        return this.netIpv4TcpMaxTwBuckets == null ? Input.empty() : this.netIpv4TcpMaxTwBuckets;
    }

    /**
     * Sysctl setting net.ipv4.tcp_tw_reuse.
     * 
     */
    @InputImport(name="netIpv4TcpTwReuse")
      private final @Nullable Input<Boolean> netIpv4TcpTwReuse;

    public Input<Boolean> getNetIpv4TcpTwReuse() {
        return this.netIpv4TcpTwReuse == null ? Input.empty() : this.netIpv4TcpTwReuse;
    }

    /**
     * Sysctl setting net.ipv4.tcp_keepalive_intvl.
     * 
     */
    @InputImport(name="netIpv4TcpkeepaliveIntvl")
      private final @Nullable Input<Integer> netIpv4TcpkeepaliveIntvl;

    public Input<Integer> getNetIpv4TcpkeepaliveIntvl() {
        return this.netIpv4TcpkeepaliveIntvl == null ? Input.empty() : this.netIpv4TcpkeepaliveIntvl;
    }

    /**
     * Sysctl setting net.netfilter.nf_conntrack_buckets.
     * 
     */
    @InputImport(name="netNetfilterNfConntrackBuckets")
      private final @Nullable Input<Integer> netNetfilterNfConntrackBuckets;

    public Input<Integer> getNetNetfilterNfConntrackBuckets() {
        return this.netNetfilterNfConntrackBuckets == null ? Input.empty() : this.netNetfilterNfConntrackBuckets;
    }

    /**
     * Sysctl setting net.netfilter.nf_conntrack_max.
     * 
     */
    @InputImport(name="netNetfilterNfConntrackMax")
      private final @Nullable Input<Integer> netNetfilterNfConntrackMax;

    public Input<Integer> getNetNetfilterNfConntrackMax() {
        return this.netNetfilterNfConntrackMax == null ? Input.empty() : this.netNetfilterNfConntrackMax;
    }

    /**
     * Sysctl setting vm.max_map_count.
     * 
     */
    @InputImport(name="vmMaxMapCount")
      private final @Nullable Input<Integer> vmMaxMapCount;

    public Input<Integer> getVmMaxMapCount() {
        return this.vmMaxMapCount == null ? Input.empty() : this.vmMaxMapCount;
    }

    /**
     * Sysctl setting vm.swappiness.
     * 
     */
    @InputImport(name="vmSwappiness")
      private final @Nullable Input<Integer> vmSwappiness;

    public Input<Integer> getVmSwappiness() {
        return this.vmSwappiness == null ? Input.empty() : this.vmSwappiness;
    }

    /**
     * Sysctl setting vm.vfs_cache_pressure.
     * 
     */
    @InputImport(name="vmVfsCachePressure")
      private final @Nullable Input<Integer> vmVfsCachePressure;

    public Input<Integer> getVmVfsCachePressure() {
        return this.vmVfsCachePressure == null ? Input.empty() : this.vmVfsCachePressure;
    }

    public SysctlConfigArgs(
        @Nullable Input<Integer> fsAioMaxNr,
        @Nullable Input<Integer> fsFileMax,
        @Nullable Input<Integer> fsInotifyMaxUserWatches,
        @Nullable Input<Integer> fsNrOpen,
        @Nullable Input<Integer> kernelThreadsMax,
        @Nullable Input<Integer> netCoreNetdevMaxBacklog,
        @Nullable Input<Integer> netCoreOptmemMax,
        @Nullable Input<Integer> netCoreRmemDefault,
        @Nullable Input<Integer> netCoreRmemMax,
        @Nullable Input<Integer> netCoreSomaxconn,
        @Nullable Input<Integer> netCoreWmemDefault,
        @Nullable Input<Integer> netCoreWmemMax,
        @Nullable Input<String> netIpv4IpLocalPortRange,
        @Nullable Input<Integer> netIpv4NeighDefaultGcThresh1,
        @Nullable Input<Integer> netIpv4NeighDefaultGcThresh2,
        @Nullable Input<Integer> netIpv4NeighDefaultGcThresh3,
        @Nullable Input<Integer> netIpv4TcpFinTimeout,
        @Nullable Input<Integer> netIpv4TcpKeepaliveProbes,
        @Nullable Input<Integer> netIpv4TcpKeepaliveTime,
        @Nullable Input<Integer> netIpv4TcpMaxSynBacklog,
        @Nullable Input<Integer> netIpv4TcpMaxTwBuckets,
        @Nullable Input<Boolean> netIpv4TcpTwReuse,
        @Nullable Input<Integer> netIpv4TcpkeepaliveIntvl,
        @Nullable Input<Integer> netNetfilterNfConntrackBuckets,
        @Nullable Input<Integer> netNetfilterNfConntrackMax,
        @Nullable Input<Integer> vmMaxMapCount,
        @Nullable Input<Integer> vmSwappiness,
        @Nullable Input<Integer> vmVfsCachePressure) {
        this.fsAioMaxNr = fsAioMaxNr;
        this.fsFileMax = fsFileMax;
        this.fsInotifyMaxUserWatches = fsInotifyMaxUserWatches;
        this.fsNrOpen = fsNrOpen;
        this.kernelThreadsMax = kernelThreadsMax;
        this.netCoreNetdevMaxBacklog = netCoreNetdevMaxBacklog;
        this.netCoreOptmemMax = netCoreOptmemMax;
        this.netCoreRmemDefault = netCoreRmemDefault;
        this.netCoreRmemMax = netCoreRmemMax;
        this.netCoreSomaxconn = netCoreSomaxconn;
        this.netCoreWmemDefault = netCoreWmemDefault;
        this.netCoreWmemMax = netCoreWmemMax;
        this.netIpv4IpLocalPortRange = netIpv4IpLocalPortRange;
        this.netIpv4NeighDefaultGcThresh1 = netIpv4NeighDefaultGcThresh1;
        this.netIpv4NeighDefaultGcThresh2 = netIpv4NeighDefaultGcThresh2;
        this.netIpv4NeighDefaultGcThresh3 = netIpv4NeighDefaultGcThresh3;
        this.netIpv4TcpFinTimeout = netIpv4TcpFinTimeout;
        this.netIpv4TcpKeepaliveProbes = netIpv4TcpKeepaliveProbes;
        this.netIpv4TcpKeepaliveTime = netIpv4TcpKeepaliveTime;
        this.netIpv4TcpMaxSynBacklog = netIpv4TcpMaxSynBacklog;
        this.netIpv4TcpMaxTwBuckets = netIpv4TcpMaxTwBuckets;
        this.netIpv4TcpTwReuse = netIpv4TcpTwReuse;
        this.netIpv4TcpkeepaliveIntvl = netIpv4TcpkeepaliveIntvl;
        this.netNetfilterNfConntrackBuckets = netNetfilterNfConntrackBuckets;
        this.netNetfilterNfConntrackMax = netNetfilterNfConntrackMax;
        this.vmMaxMapCount = vmMaxMapCount;
        this.vmSwappiness = vmSwappiness;
        this.vmVfsCachePressure = vmVfsCachePressure;
    }

    private SysctlConfigArgs() {
        this.fsAioMaxNr = Input.empty();
        this.fsFileMax = Input.empty();
        this.fsInotifyMaxUserWatches = Input.empty();
        this.fsNrOpen = Input.empty();
        this.kernelThreadsMax = Input.empty();
        this.netCoreNetdevMaxBacklog = Input.empty();
        this.netCoreOptmemMax = Input.empty();
        this.netCoreRmemDefault = Input.empty();
        this.netCoreRmemMax = Input.empty();
        this.netCoreSomaxconn = Input.empty();
        this.netCoreWmemDefault = Input.empty();
        this.netCoreWmemMax = Input.empty();
        this.netIpv4IpLocalPortRange = Input.empty();
        this.netIpv4NeighDefaultGcThresh1 = Input.empty();
        this.netIpv4NeighDefaultGcThresh2 = Input.empty();
        this.netIpv4NeighDefaultGcThresh3 = Input.empty();
        this.netIpv4TcpFinTimeout = Input.empty();
        this.netIpv4TcpKeepaliveProbes = Input.empty();
        this.netIpv4TcpKeepaliveTime = Input.empty();
        this.netIpv4TcpMaxSynBacklog = Input.empty();
        this.netIpv4TcpMaxTwBuckets = Input.empty();
        this.netIpv4TcpTwReuse = Input.empty();
        this.netIpv4TcpkeepaliveIntvl = Input.empty();
        this.netNetfilterNfConntrackBuckets = Input.empty();
        this.netNetfilterNfConntrackMax = Input.empty();
        this.vmMaxMapCount = Input.empty();
        this.vmSwappiness = Input.empty();
        this.vmVfsCachePressure = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SysctlConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> fsAioMaxNr;
        private @Nullable Input<Integer> fsFileMax;
        private @Nullable Input<Integer> fsInotifyMaxUserWatches;
        private @Nullable Input<Integer> fsNrOpen;
        private @Nullable Input<Integer> kernelThreadsMax;
        private @Nullable Input<Integer> netCoreNetdevMaxBacklog;
        private @Nullable Input<Integer> netCoreOptmemMax;
        private @Nullable Input<Integer> netCoreRmemDefault;
        private @Nullable Input<Integer> netCoreRmemMax;
        private @Nullable Input<Integer> netCoreSomaxconn;
        private @Nullable Input<Integer> netCoreWmemDefault;
        private @Nullable Input<Integer> netCoreWmemMax;
        private @Nullable Input<String> netIpv4IpLocalPortRange;
        private @Nullable Input<Integer> netIpv4NeighDefaultGcThresh1;
        private @Nullable Input<Integer> netIpv4NeighDefaultGcThresh2;
        private @Nullable Input<Integer> netIpv4NeighDefaultGcThresh3;
        private @Nullable Input<Integer> netIpv4TcpFinTimeout;
        private @Nullable Input<Integer> netIpv4TcpKeepaliveProbes;
        private @Nullable Input<Integer> netIpv4TcpKeepaliveTime;
        private @Nullable Input<Integer> netIpv4TcpMaxSynBacklog;
        private @Nullable Input<Integer> netIpv4TcpMaxTwBuckets;
        private @Nullable Input<Boolean> netIpv4TcpTwReuse;
        private @Nullable Input<Integer> netIpv4TcpkeepaliveIntvl;
        private @Nullable Input<Integer> netNetfilterNfConntrackBuckets;
        private @Nullable Input<Integer> netNetfilterNfConntrackMax;
        private @Nullable Input<Integer> vmMaxMapCount;
        private @Nullable Input<Integer> vmSwappiness;
        private @Nullable Input<Integer> vmVfsCachePressure;

        public Builder() {
    	      // Empty
        }

        public Builder(SysctlConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fsAioMaxNr = defaults.fsAioMaxNr;
    	      this.fsFileMax = defaults.fsFileMax;
    	      this.fsInotifyMaxUserWatches = defaults.fsInotifyMaxUserWatches;
    	      this.fsNrOpen = defaults.fsNrOpen;
    	      this.kernelThreadsMax = defaults.kernelThreadsMax;
    	      this.netCoreNetdevMaxBacklog = defaults.netCoreNetdevMaxBacklog;
    	      this.netCoreOptmemMax = defaults.netCoreOptmemMax;
    	      this.netCoreRmemDefault = defaults.netCoreRmemDefault;
    	      this.netCoreRmemMax = defaults.netCoreRmemMax;
    	      this.netCoreSomaxconn = defaults.netCoreSomaxconn;
    	      this.netCoreWmemDefault = defaults.netCoreWmemDefault;
    	      this.netCoreWmemMax = defaults.netCoreWmemMax;
    	      this.netIpv4IpLocalPortRange = defaults.netIpv4IpLocalPortRange;
    	      this.netIpv4NeighDefaultGcThresh1 = defaults.netIpv4NeighDefaultGcThresh1;
    	      this.netIpv4NeighDefaultGcThresh2 = defaults.netIpv4NeighDefaultGcThresh2;
    	      this.netIpv4NeighDefaultGcThresh3 = defaults.netIpv4NeighDefaultGcThresh3;
    	      this.netIpv4TcpFinTimeout = defaults.netIpv4TcpFinTimeout;
    	      this.netIpv4TcpKeepaliveProbes = defaults.netIpv4TcpKeepaliveProbes;
    	      this.netIpv4TcpKeepaliveTime = defaults.netIpv4TcpKeepaliveTime;
    	      this.netIpv4TcpMaxSynBacklog = defaults.netIpv4TcpMaxSynBacklog;
    	      this.netIpv4TcpMaxTwBuckets = defaults.netIpv4TcpMaxTwBuckets;
    	      this.netIpv4TcpTwReuse = defaults.netIpv4TcpTwReuse;
    	      this.netIpv4TcpkeepaliveIntvl = defaults.netIpv4TcpkeepaliveIntvl;
    	      this.netNetfilterNfConntrackBuckets = defaults.netNetfilterNfConntrackBuckets;
    	      this.netNetfilterNfConntrackMax = defaults.netNetfilterNfConntrackMax;
    	      this.vmMaxMapCount = defaults.vmMaxMapCount;
    	      this.vmSwappiness = defaults.vmSwappiness;
    	      this.vmVfsCachePressure = defaults.vmVfsCachePressure;
        }

        public Builder fsAioMaxNr(@Nullable Input<Integer> fsAioMaxNr) {
            this.fsAioMaxNr = fsAioMaxNr;
            return this;
        }

        public Builder fsAioMaxNr(@Nullable Integer fsAioMaxNr) {
            this.fsAioMaxNr = Input.ofNullable(fsAioMaxNr);
            return this;
        }

        public Builder fsFileMax(@Nullable Input<Integer> fsFileMax) {
            this.fsFileMax = fsFileMax;
            return this;
        }

        public Builder fsFileMax(@Nullable Integer fsFileMax) {
            this.fsFileMax = Input.ofNullable(fsFileMax);
            return this;
        }

        public Builder fsInotifyMaxUserWatches(@Nullable Input<Integer> fsInotifyMaxUserWatches) {
            this.fsInotifyMaxUserWatches = fsInotifyMaxUserWatches;
            return this;
        }

        public Builder fsInotifyMaxUserWatches(@Nullable Integer fsInotifyMaxUserWatches) {
            this.fsInotifyMaxUserWatches = Input.ofNullable(fsInotifyMaxUserWatches);
            return this;
        }

        public Builder fsNrOpen(@Nullable Input<Integer> fsNrOpen) {
            this.fsNrOpen = fsNrOpen;
            return this;
        }

        public Builder fsNrOpen(@Nullable Integer fsNrOpen) {
            this.fsNrOpen = Input.ofNullable(fsNrOpen);
            return this;
        }

        public Builder kernelThreadsMax(@Nullable Input<Integer> kernelThreadsMax) {
            this.kernelThreadsMax = kernelThreadsMax;
            return this;
        }

        public Builder kernelThreadsMax(@Nullable Integer kernelThreadsMax) {
            this.kernelThreadsMax = Input.ofNullable(kernelThreadsMax);
            return this;
        }

        public Builder netCoreNetdevMaxBacklog(@Nullable Input<Integer> netCoreNetdevMaxBacklog) {
            this.netCoreNetdevMaxBacklog = netCoreNetdevMaxBacklog;
            return this;
        }

        public Builder netCoreNetdevMaxBacklog(@Nullable Integer netCoreNetdevMaxBacklog) {
            this.netCoreNetdevMaxBacklog = Input.ofNullable(netCoreNetdevMaxBacklog);
            return this;
        }

        public Builder netCoreOptmemMax(@Nullable Input<Integer> netCoreOptmemMax) {
            this.netCoreOptmemMax = netCoreOptmemMax;
            return this;
        }

        public Builder netCoreOptmemMax(@Nullable Integer netCoreOptmemMax) {
            this.netCoreOptmemMax = Input.ofNullable(netCoreOptmemMax);
            return this;
        }

        public Builder netCoreRmemDefault(@Nullable Input<Integer> netCoreRmemDefault) {
            this.netCoreRmemDefault = netCoreRmemDefault;
            return this;
        }

        public Builder netCoreRmemDefault(@Nullable Integer netCoreRmemDefault) {
            this.netCoreRmemDefault = Input.ofNullable(netCoreRmemDefault);
            return this;
        }

        public Builder netCoreRmemMax(@Nullable Input<Integer> netCoreRmemMax) {
            this.netCoreRmemMax = netCoreRmemMax;
            return this;
        }

        public Builder netCoreRmemMax(@Nullable Integer netCoreRmemMax) {
            this.netCoreRmemMax = Input.ofNullable(netCoreRmemMax);
            return this;
        }

        public Builder netCoreSomaxconn(@Nullable Input<Integer> netCoreSomaxconn) {
            this.netCoreSomaxconn = netCoreSomaxconn;
            return this;
        }

        public Builder netCoreSomaxconn(@Nullable Integer netCoreSomaxconn) {
            this.netCoreSomaxconn = Input.ofNullable(netCoreSomaxconn);
            return this;
        }

        public Builder netCoreWmemDefault(@Nullable Input<Integer> netCoreWmemDefault) {
            this.netCoreWmemDefault = netCoreWmemDefault;
            return this;
        }

        public Builder netCoreWmemDefault(@Nullable Integer netCoreWmemDefault) {
            this.netCoreWmemDefault = Input.ofNullable(netCoreWmemDefault);
            return this;
        }

        public Builder netCoreWmemMax(@Nullable Input<Integer> netCoreWmemMax) {
            this.netCoreWmemMax = netCoreWmemMax;
            return this;
        }

        public Builder netCoreWmemMax(@Nullable Integer netCoreWmemMax) {
            this.netCoreWmemMax = Input.ofNullable(netCoreWmemMax);
            return this;
        }

        public Builder netIpv4IpLocalPortRange(@Nullable Input<String> netIpv4IpLocalPortRange) {
            this.netIpv4IpLocalPortRange = netIpv4IpLocalPortRange;
            return this;
        }

        public Builder netIpv4IpLocalPortRange(@Nullable String netIpv4IpLocalPortRange) {
            this.netIpv4IpLocalPortRange = Input.ofNullable(netIpv4IpLocalPortRange);
            return this;
        }

        public Builder netIpv4NeighDefaultGcThresh1(@Nullable Input<Integer> netIpv4NeighDefaultGcThresh1) {
            this.netIpv4NeighDefaultGcThresh1 = netIpv4NeighDefaultGcThresh1;
            return this;
        }

        public Builder netIpv4NeighDefaultGcThresh1(@Nullable Integer netIpv4NeighDefaultGcThresh1) {
            this.netIpv4NeighDefaultGcThresh1 = Input.ofNullable(netIpv4NeighDefaultGcThresh1);
            return this;
        }

        public Builder netIpv4NeighDefaultGcThresh2(@Nullable Input<Integer> netIpv4NeighDefaultGcThresh2) {
            this.netIpv4NeighDefaultGcThresh2 = netIpv4NeighDefaultGcThresh2;
            return this;
        }

        public Builder netIpv4NeighDefaultGcThresh2(@Nullable Integer netIpv4NeighDefaultGcThresh2) {
            this.netIpv4NeighDefaultGcThresh2 = Input.ofNullable(netIpv4NeighDefaultGcThresh2);
            return this;
        }

        public Builder netIpv4NeighDefaultGcThresh3(@Nullable Input<Integer> netIpv4NeighDefaultGcThresh3) {
            this.netIpv4NeighDefaultGcThresh3 = netIpv4NeighDefaultGcThresh3;
            return this;
        }

        public Builder netIpv4NeighDefaultGcThresh3(@Nullable Integer netIpv4NeighDefaultGcThresh3) {
            this.netIpv4NeighDefaultGcThresh3 = Input.ofNullable(netIpv4NeighDefaultGcThresh3);
            return this;
        }

        public Builder netIpv4TcpFinTimeout(@Nullable Input<Integer> netIpv4TcpFinTimeout) {
            this.netIpv4TcpFinTimeout = netIpv4TcpFinTimeout;
            return this;
        }

        public Builder netIpv4TcpFinTimeout(@Nullable Integer netIpv4TcpFinTimeout) {
            this.netIpv4TcpFinTimeout = Input.ofNullable(netIpv4TcpFinTimeout);
            return this;
        }

        public Builder netIpv4TcpKeepaliveProbes(@Nullable Input<Integer> netIpv4TcpKeepaliveProbes) {
            this.netIpv4TcpKeepaliveProbes = netIpv4TcpKeepaliveProbes;
            return this;
        }

        public Builder netIpv4TcpKeepaliveProbes(@Nullable Integer netIpv4TcpKeepaliveProbes) {
            this.netIpv4TcpKeepaliveProbes = Input.ofNullable(netIpv4TcpKeepaliveProbes);
            return this;
        }

        public Builder netIpv4TcpKeepaliveTime(@Nullable Input<Integer> netIpv4TcpKeepaliveTime) {
            this.netIpv4TcpKeepaliveTime = netIpv4TcpKeepaliveTime;
            return this;
        }

        public Builder netIpv4TcpKeepaliveTime(@Nullable Integer netIpv4TcpKeepaliveTime) {
            this.netIpv4TcpKeepaliveTime = Input.ofNullable(netIpv4TcpKeepaliveTime);
            return this;
        }

        public Builder netIpv4TcpMaxSynBacklog(@Nullable Input<Integer> netIpv4TcpMaxSynBacklog) {
            this.netIpv4TcpMaxSynBacklog = netIpv4TcpMaxSynBacklog;
            return this;
        }

        public Builder netIpv4TcpMaxSynBacklog(@Nullable Integer netIpv4TcpMaxSynBacklog) {
            this.netIpv4TcpMaxSynBacklog = Input.ofNullable(netIpv4TcpMaxSynBacklog);
            return this;
        }

        public Builder netIpv4TcpMaxTwBuckets(@Nullable Input<Integer> netIpv4TcpMaxTwBuckets) {
            this.netIpv4TcpMaxTwBuckets = netIpv4TcpMaxTwBuckets;
            return this;
        }

        public Builder netIpv4TcpMaxTwBuckets(@Nullable Integer netIpv4TcpMaxTwBuckets) {
            this.netIpv4TcpMaxTwBuckets = Input.ofNullable(netIpv4TcpMaxTwBuckets);
            return this;
        }

        public Builder netIpv4TcpTwReuse(@Nullable Input<Boolean> netIpv4TcpTwReuse) {
            this.netIpv4TcpTwReuse = netIpv4TcpTwReuse;
            return this;
        }

        public Builder netIpv4TcpTwReuse(@Nullable Boolean netIpv4TcpTwReuse) {
            this.netIpv4TcpTwReuse = Input.ofNullable(netIpv4TcpTwReuse);
            return this;
        }

        public Builder netIpv4TcpkeepaliveIntvl(@Nullable Input<Integer> netIpv4TcpkeepaliveIntvl) {
            this.netIpv4TcpkeepaliveIntvl = netIpv4TcpkeepaliveIntvl;
            return this;
        }

        public Builder netIpv4TcpkeepaliveIntvl(@Nullable Integer netIpv4TcpkeepaliveIntvl) {
            this.netIpv4TcpkeepaliveIntvl = Input.ofNullable(netIpv4TcpkeepaliveIntvl);
            return this;
        }

        public Builder netNetfilterNfConntrackBuckets(@Nullable Input<Integer> netNetfilterNfConntrackBuckets) {
            this.netNetfilterNfConntrackBuckets = netNetfilterNfConntrackBuckets;
            return this;
        }

        public Builder netNetfilterNfConntrackBuckets(@Nullable Integer netNetfilterNfConntrackBuckets) {
            this.netNetfilterNfConntrackBuckets = Input.ofNullable(netNetfilterNfConntrackBuckets);
            return this;
        }

        public Builder netNetfilterNfConntrackMax(@Nullable Input<Integer> netNetfilterNfConntrackMax) {
            this.netNetfilterNfConntrackMax = netNetfilterNfConntrackMax;
            return this;
        }

        public Builder netNetfilterNfConntrackMax(@Nullable Integer netNetfilterNfConntrackMax) {
            this.netNetfilterNfConntrackMax = Input.ofNullable(netNetfilterNfConntrackMax);
            return this;
        }

        public Builder vmMaxMapCount(@Nullable Input<Integer> vmMaxMapCount) {
            this.vmMaxMapCount = vmMaxMapCount;
            return this;
        }

        public Builder vmMaxMapCount(@Nullable Integer vmMaxMapCount) {
            this.vmMaxMapCount = Input.ofNullable(vmMaxMapCount);
            return this;
        }

        public Builder vmSwappiness(@Nullable Input<Integer> vmSwappiness) {
            this.vmSwappiness = vmSwappiness;
            return this;
        }

        public Builder vmSwappiness(@Nullable Integer vmSwappiness) {
            this.vmSwappiness = Input.ofNullable(vmSwappiness);
            return this;
        }

        public Builder vmVfsCachePressure(@Nullable Input<Integer> vmVfsCachePressure) {
            this.vmVfsCachePressure = vmVfsCachePressure;
            return this;
        }

        public Builder vmVfsCachePressure(@Nullable Integer vmVfsCachePressure) {
            this.vmVfsCachePressure = Input.ofNullable(vmVfsCachePressure);
            return this;
        }
        public SysctlConfigArgs build() {
            return new SysctlConfigArgs(fsAioMaxNr, fsFileMax, fsInotifyMaxUserWatches, fsNrOpen, kernelThreadsMax, netCoreNetdevMaxBacklog, netCoreOptmemMax, netCoreRmemDefault, netCoreRmemMax, netCoreSomaxconn, netCoreWmemDefault, netCoreWmemMax, netIpv4IpLocalPortRange, netIpv4NeighDefaultGcThresh1, netIpv4NeighDefaultGcThresh2, netIpv4NeighDefaultGcThresh3, netIpv4TcpFinTimeout, netIpv4TcpKeepaliveProbes, netIpv4TcpKeepaliveTime, netIpv4TcpMaxSynBacklog, netIpv4TcpMaxTwBuckets, netIpv4TcpTwReuse, netIpv4TcpkeepaliveIntvl, netNetfilterNfConntrackBuckets, netNetfilterNfConntrackMax, vmMaxMapCount, vmSwappiness, vmVfsCachePressure);
        }
    }
}
