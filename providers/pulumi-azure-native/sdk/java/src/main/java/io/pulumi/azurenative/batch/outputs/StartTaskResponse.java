// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.outputs;

import io.pulumi.azurenative.batch.outputs.EnvironmentSettingResponse;
import io.pulumi.azurenative.batch.outputs.ResourceFileResponse;
import io.pulumi.azurenative.batch.outputs.TaskContainerSettingsResponse;
import io.pulumi.azurenative.batch.outputs.UserIdentityResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class StartTaskResponse {
    private final @Nullable String commandLine;
    private final @Nullable TaskContainerSettingsResponse containerSettings;
    private final @Nullable List<EnvironmentSettingResponse> environmentSettings;
    private final @Nullable Integer maxTaskRetryCount;
    private final @Nullable List<ResourceFileResponse> resourceFiles;
    private final @Nullable UserIdentityResponse userIdentity;
    private final @Nullable Boolean waitForSuccess;

    @OutputCustomType.Constructor({"commandLine","containerSettings","environmentSettings","maxTaskRetryCount","resourceFiles","userIdentity","waitForSuccess"})
    private StartTaskResponse(
        @Nullable String commandLine,
        @Nullable TaskContainerSettingsResponse containerSettings,
        @Nullable List<EnvironmentSettingResponse> environmentSettings,
        @Nullable Integer maxTaskRetryCount,
        @Nullable List<ResourceFileResponse> resourceFiles,
        @Nullable UserIdentityResponse userIdentity,
        @Nullable Boolean waitForSuccess) {
        this.commandLine = commandLine;
        this.containerSettings = containerSettings;
        this.environmentSettings = environmentSettings;
        this.maxTaskRetryCount = maxTaskRetryCount;
        this.resourceFiles = resourceFiles;
        this.userIdentity = userIdentity;
        this.waitForSuccess = waitForSuccess;
    }

    public Optional<String> getCommandLine() {
        return Optional.ofNullable(this.commandLine);
    }
    public Optional<TaskContainerSettingsResponse> getContainerSettings() {
        return Optional.ofNullable(this.containerSettings);
    }
    public List<EnvironmentSettingResponse> getEnvironmentSettings() {
        return this.environmentSettings == null ? List.of() : this.environmentSettings;
    }
    public Optional<Integer> getMaxTaskRetryCount() {
        return Optional.ofNullable(this.maxTaskRetryCount);
    }
    public List<ResourceFileResponse> getResourceFiles() {
        return this.resourceFiles == null ? List.of() : this.resourceFiles;
    }
    public Optional<UserIdentityResponse> getUserIdentity() {
        return Optional.ofNullable(this.userIdentity);
    }
    public Optional<Boolean> getWaitForSuccess() {
        return Optional.ofNullable(this.waitForSuccess);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StartTaskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String commandLine;
        private @Nullable TaskContainerSettingsResponse containerSettings;
        private @Nullable List<EnvironmentSettingResponse> environmentSettings;
        private @Nullable Integer maxTaskRetryCount;
        private @Nullable List<ResourceFileResponse> resourceFiles;
        private @Nullable UserIdentityResponse userIdentity;
        private @Nullable Boolean waitForSuccess;

        public Builder() {
    	      // Empty
        }

        public Builder(StartTaskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commandLine = defaults.commandLine;
    	      this.containerSettings = defaults.containerSettings;
    	      this.environmentSettings = defaults.environmentSettings;
    	      this.maxTaskRetryCount = defaults.maxTaskRetryCount;
    	      this.resourceFiles = defaults.resourceFiles;
    	      this.userIdentity = defaults.userIdentity;
    	      this.waitForSuccess = defaults.waitForSuccess;
        }

        public Builder setCommandLine(@Nullable String commandLine) {
            this.commandLine = commandLine;
            return this;
        }

        public Builder setContainerSettings(@Nullable TaskContainerSettingsResponse containerSettings) {
            this.containerSettings = containerSettings;
            return this;
        }

        public Builder setEnvironmentSettings(@Nullable List<EnvironmentSettingResponse> environmentSettings) {
            this.environmentSettings = environmentSettings;
            return this;
        }

        public Builder setMaxTaskRetryCount(@Nullable Integer maxTaskRetryCount) {
            this.maxTaskRetryCount = maxTaskRetryCount;
            return this;
        }

        public Builder setResourceFiles(@Nullable List<ResourceFileResponse> resourceFiles) {
            this.resourceFiles = resourceFiles;
            return this;
        }

        public Builder setUserIdentity(@Nullable UserIdentityResponse userIdentity) {
            this.userIdentity = userIdentity;
            return this;
        }

        public Builder setWaitForSuccess(@Nullable Boolean waitForSuccess) {
            this.waitForSuccess = waitForSuccess;
            return this;
        }

        public StartTaskResponse build() {
            return new StartTaskResponse(commandLine, containerSettings, environmentSettings, maxTaskRetryCount, resourceFiles, userIdentity, waitForSuccess);
        }
    }
}
