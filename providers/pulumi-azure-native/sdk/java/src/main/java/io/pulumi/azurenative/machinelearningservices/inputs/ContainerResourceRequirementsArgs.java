// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContainerResourceRequirementsArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContainerResourceRequirementsArgs Empty = new ContainerResourceRequirementsArgs();

    @InputImport(name="cpu")
    private final @Nullable Input<Double> cpu;

    public Input<Double> getCpu() {
        return this.cpu == null ? Input.empty() : this.cpu;
    }

    @InputImport(name="cpuLimit")
    private final @Nullable Input<Double> cpuLimit;

    public Input<Double> getCpuLimit() {
        return this.cpuLimit == null ? Input.empty() : this.cpuLimit;
    }

    @InputImport(name="fpga")
    private final @Nullable Input<Integer> fpga;

    public Input<Integer> getFpga() {
        return this.fpga == null ? Input.empty() : this.fpga;
    }

    @InputImport(name="gpu")
    private final @Nullable Input<Integer> gpu;

    public Input<Integer> getGpu() {
        return this.gpu == null ? Input.empty() : this.gpu;
    }

    @InputImport(name="memoryInGB")
    private final @Nullable Input<Double> memoryInGB;

    public Input<Double> getMemoryInGB() {
        return this.memoryInGB == null ? Input.empty() : this.memoryInGB;
    }

    @InputImport(name="memoryInGBLimit")
    private final @Nullable Input<Double> memoryInGBLimit;

    public Input<Double> getMemoryInGBLimit() {
        return this.memoryInGBLimit == null ? Input.empty() : this.memoryInGBLimit;
    }

    public ContainerResourceRequirementsArgs(
        @Nullable Input<Double> cpu,
        @Nullable Input<Double> cpuLimit,
        @Nullable Input<Integer> fpga,
        @Nullable Input<Integer> gpu,
        @Nullable Input<Double> memoryInGB,
        @Nullable Input<Double> memoryInGBLimit) {
        this.cpu = cpu;
        this.cpuLimit = cpuLimit;
        this.fpga = fpga;
        this.gpu = gpu;
        this.memoryInGB = memoryInGB;
        this.memoryInGBLimit = memoryInGBLimit;
    }

    private ContainerResourceRequirementsArgs() {
        this.cpu = Input.empty();
        this.cpuLimit = Input.empty();
        this.fpga = Input.empty();
        this.gpu = Input.empty();
        this.memoryInGB = Input.empty();
        this.memoryInGBLimit = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerResourceRequirementsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Double> cpu;
        private @Nullable Input<Double> cpuLimit;
        private @Nullable Input<Integer> fpga;
        private @Nullable Input<Integer> gpu;
        private @Nullable Input<Double> memoryInGB;
        private @Nullable Input<Double> memoryInGBLimit;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerResourceRequirementsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpu = defaults.cpu;
    	      this.cpuLimit = defaults.cpuLimit;
    	      this.fpga = defaults.fpga;
    	      this.gpu = defaults.gpu;
    	      this.memoryInGB = defaults.memoryInGB;
    	      this.memoryInGBLimit = defaults.memoryInGBLimit;
        }

        public Builder setCpu(@Nullable Input<Double> cpu) {
            this.cpu = cpu;
            return this;
        }

        public Builder setCpu(@Nullable Double cpu) {
            this.cpu = Input.ofNullable(cpu);
            return this;
        }

        public Builder setCpuLimit(@Nullable Input<Double> cpuLimit) {
            this.cpuLimit = cpuLimit;
            return this;
        }

        public Builder setCpuLimit(@Nullable Double cpuLimit) {
            this.cpuLimit = Input.ofNullable(cpuLimit);
            return this;
        }

        public Builder setFpga(@Nullable Input<Integer> fpga) {
            this.fpga = fpga;
            return this;
        }

        public Builder setFpga(@Nullable Integer fpga) {
            this.fpga = Input.ofNullable(fpga);
            return this;
        }

        public Builder setGpu(@Nullable Input<Integer> gpu) {
            this.gpu = gpu;
            return this;
        }

        public Builder setGpu(@Nullable Integer gpu) {
            this.gpu = Input.ofNullable(gpu);
            return this;
        }

        public Builder setMemoryInGB(@Nullable Input<Double> memoryInGB) {
            this.memoryInGB = memoryInGB;
            return this;
        }

        public Builder setMemoryInGB(@Nullable Double memoryInGB) {
            this.memoryInGB = Input.ofNullable(memoryInGB);
            return this;
        }

        public Builder setMemoryInGBLimit(@Nullable Input<Double> memoryInGBLimit) {
            this.memoryInGBLimit = memoryInGBLimit;
            return this;
        }

        public Builder setMemoryInGBLimit(@Nullable Double memoryInGBLimit) {
            this.memoryInGBLimit = Input.ofNullable(memoryInGBLimit);
            return this;
        }

        public ContainerResourceRequirementsArgs build() {
            return new ContainerResourceRequirementsArgs(cpu, cpuLimit, fpga, gpu, memoryInGB, memoryInGBLimit);
        }
    }
}
