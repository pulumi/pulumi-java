// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.videoanalyzer.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class UsernamePasswordCredentialsResponse {
    /**
     * Password to be presented as part of the credentials. It is recommended that this value is parameterized as a secret string in order to prevent this value to be returned as part of the resource on API requests.
     * 
     */
    private final String password;
    /**
     * The discriminator for derived types.
     * Expected value is '#Microsoft.VideoAnalyzer.UsernamePasswordCredentials'.
     * 
     */
    private final String type;
    /**
     * Username to be presented as part of the credentials.
     * 
     */
    private final String username;

    @OutputCustomType.Constructor
    private UsernamePasswordCredentialsResponse(
        @OutputCustomType.Parameter("password") String password,
        @OutputCustomType.Parameter("type") String type,
        @OutputCustomType.Parameter("username") String username) {
        this.password = password;
        this.type = type;
        this.username = username;
    }

    /**
     * Password to be presented as part of the credentials. It is recommended that this value is parameterized as a secret string in order to prevent this value to be returned as part of the resource on API requests.
     * 
    */
    public String getPassword() {
        return this.password;
    }
    /**
     * The discriminator for derived types.
     * Expected value is '#Microsoft.VideoAnalyzer.UsernamePasswordCredentials'.
     * 
    */
    public String getType() {
        return this.type;
    }
    /**
     * Username to be presented as part of the credentials.
     * 
    */
    public String getUsername() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UsernamePasswordCredentialsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String password;
        private String type;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(UsernamePasswordCredentialsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.type = defaults.type;
    	      this.username = defaults.username;
        }

        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public UsernamePasswordCredentialsResponse build() {
            return new UsernamePasswordCredentialsResponse(password, type, username);
        }
    }
}
