// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DatabaseSummaryResultResponse {
    /**
     * Migration end time
     * 
     */
    private final String endedOn;
    /**
     * Wildcard string prefix to use for querying all errors of the item
     * 
     */
    private final String errorPrefix;
    /**
     * Number of successfully completed items
     * 
     */
    private final Double itemsCompletedCount;
    /**
     * Number of items
     * 
     */
    private final Double itemsCount;
    /**
     * Name of the item
     * 
     */
    private final String name;
    /**
     * Wildcard string prefix to use for querying all sub-tem results of the item
     * 
     */
    private final String resultPrefix;
    /**
     * Size of the database in megabytes
     * 
     */
    private final Double sizeMB;
    /**
     * Migration start time
     * 
     */
    private final String startedOn;
    /**
     * Current state of migration
     * 
     */
    private final String state;
    /**
     * Status message
     * 
     */
    private final String statusMessage;

    @CustomType.Constructor
    private DatabaseSummaryResultResponse(
        @CustomType.Parameter("endedOn") String endedOn,
        @CustomType.Parameter("errorPrefix") String errorPrefix,
        @CustomType.Parameter("itemsCompletedCount") Double itemsCompletedCount,
        @CustomType.Parameter("itemsCount") Double itemsCount,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("resultPrefix") String resultPrefix,
        @CustomType.Parameter("sizeMB") Double sizeMB,
        @CustomType.Parameter("startedOn") String startedOn,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("statusMessage") String statusMessage) {
        this.endedOn = endedOn;
        this.errorPrefix = errorPrefix;
        this.itemsCompletedCount = itemsCompletedCount;
        this.itemsCount = itemsCount;
        this.name = name;
        this.resultPrefix = resultPrefix;
        this.sizeMB = sizeMB;
        this.startedOn = startedOn;
        this.state = state;
        this.statusMessage = statusMessage;
    }

    /**
     * Migration end time
     * 
    */
    public String getEndedOn() {
        return this.endedOn;
    }
    /**
     * Wildcard string prefix to use for querying all errors of the item
     * 
    */
    public String getErrorPrefix() {
        return this.errorPrefix;
    }
    /**
     * Number of successfully completed items
     * 
    */
    public Double getItemsCompletedCount() {
        return this.itemsCompletedCount;
    }
    /**
     * Number of items
     * 
    */
    public Double getItemsCount() {
        return this.itemsCount;
    }
    /**
     * Name of the item
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Wildcard string prefix to use for querying all sub-tem results of the item
     * 
    */
    public String getResultPrefix() {
        return this.resultPrefix;
    }
    /**
     * Size of the database in megabytes
     * 
    */
    public Double getSizeMB() {
        return this.sizeMB;
    }
    /**
     * Migration start time
     * 
    */
    public String getStartedOn() {
        return this.startedOn;
    }
    /**
     * Current state of migration
     * 
    */
    public String getState() {
        return this.state;
    }
    /**
     * Status message
     * 
    */
    public String getStatusMessage() {
        return this.statusMessage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseSummaryResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String endedOn;
        private String errorPrefix;
        private Double itemsCompletedCount;
        private Double itemsCount;
        private String name;
        private String resultPrefix;
        private Double sizeMB;
        private String startedOn;
        private String state;
        private String statusMessage;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseSummaryResultResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endedOn = defaults.endedOn;
    	      this.errorPrefix = defaults.errorPrefix;
    	      this.itemsCompletedCount = defaults.itemsCompletedCount;
    	      this.itemsCount = defaults.itemsCount;
    	      this.name = defaults.name;
    	      this.resultPrefix = defaults.resultPrefix;
    	      this.sizeMB = defaults.sizeMB;
    	      this.startedOn = defaults.startedOn;
    	      this.state = defaults.state;
    	      this.statusMessage = defaults.statusMessage;
        }

        public Builder endedOn(String endedOn) {
            this.endedOn = Objects.requireNonNull(endedOn);
            return this;
        }
        public Builder errorPrefix(String errorPrefix) {
            this.errorPrefix = Objects.requireNonNull(errorPrefix);
            return this;
        }
        public Builder itemsCompletedCount(Double itemsCompletedCount) {
            this.itemsCompletedCount = Objects.requireNonNull(itemsCompletedCount);
            return this;
        }
        public Builder itemsCount(Double itemsCount) {
            this.itemsCount = Objects.requireNonNull(itemsCount);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder resultPrefix(String resultPrefix) {
            this.resultPrefix = Objects.requireNonNull(resultPrefix);
            return this;
        }
        public Builder sizeMB(Double sizeMB) {
            this.sizeMB = Objects.requireNonNull(sizeMB);
            return this;
        }
        public Builder startedOn(String startedOn) {
            this.startedOn = Objects.requireNonNull(startedOn);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder statusMessage(String statusMessage) {
            this.statusMessage = Objects.requireNonNull(statusMessage);
            return this;
        }        public DatabaseSummaryResultResponse build() {
            return new DatabaseSummaryResultResponse(endedOn, errorPrefix, itemsCompletedCount, itemsCount, name, resultPrefix, sizeMB, startedOn, state, statusMessage);
        }
    }
}
