// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Settings for user account that gets created on each on the nodes of a compute.
 * 
 */
public final class UserAccountCredentialsArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserAccountCredentialsArgs Empty = new UserAccountCredentialsArgs();

    /**
     * Name of the administrator user account which can be used to SSH to nodes.
     * 
     */
    @Import(name="adminUserName", required=true)
      private final Output<String> adminUserName;

    public Output<String> getAdminUserName() {
        return this.adminUserName;
    }

    /**
     * Password of the administrator user account.
     * 
     */
    @Import(name="adminUserPassword")
      private final @Nullable Output<String> adminUserPassword;

    public Output<String> getAdminUserPassword() {
        return this.adminUserPassword == null ? Codegen.empty() : this.adminUserPassword;
    }

    /**
     * SSH public key of the administrator user account.
     * 
     */
    @Import(name="adminUserSshPublicKey")
      private final @Nullable Output<String> adminUserSshPublicKey;

    public Output<String> getAdminUserSshPublicKey() {
        return this.adminUserSshPublicKey == null ? Codegen.empty() : this.adminUserSshPublicKey;
    }

    public UserAccountCredentialsArgs(
        Output<String> adminUserName,
        @Nullable Output<String> adminUserPassword,
        @Nullable Output<String> adminUserSshPublicKey) {
        this.adminUserName = Objects.requireNonNull(adminUserName, "expected parameter 'adminUserName' to be non-null");
        this.adminUserPassword = adminUserPassword;
        this.adminUserSshPublicKey = adminUserSshPublicKey;
    }

    private UserAccountCredentialsArgs() {
        this.adminUserName = Codegen.empty();
        this.adminUserPassword = Codegen.empty();
        this.adminUserSshPublicKey = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserAccountCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> adminUserName;
        private @Nullable Output<String> adminUserPassword;
        private @Nullable Output<String> adminUserSshPublicKey;

        public Builder() {
    	      // Empty
        }

        public Builder(UserAccountCredentialsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminUserName = defaults.adminUserName;
    	      this.adminUserPassword = defaults.adminUserPassword;
    	      this.adminUserSshPublicKey = defaults.adminUserSshPublicKey;
        }

        public Builder adminUserName(Output<String> adminUserName) {
            this.adminUserName = Objects.requireNonNull(adminUserName);
            return this;
        }
        public Builder adminUserName(String adminUserName) {
            this.adminUserName = Output.of(Objects.requireNonNull(adminUserName));
            return this;
        }
        public Builder adminUserPassword(@Nullable Output<String> adminUserPassword) {
            this.adminUserPassword = adminUserPassword;
            return this;
        }
        public Builder adminUserPassword(@Nullable String adminUserPassword) {
            this.adminUserPassword = Codegen.ofNullable(adminUserPassword);
            return this;
        }
        public Builder adminUserSshPublicKey(@Nullable Output<String> adminUserSshPublicKey) {
            this.adminUserSshPublicKey = adminUserSshPublicKey;
            return this;
        }
        public Builder adminUserSshPublicKey(@Nullable String adminUserSshPublicKey) {
            this.adminUserSshPublicKey = Codegen.ofNullable(adminUserSshPublicKey);
            return this;
        }        public UserAccountCredentialsArgs build() {
            return new UserAccountCredentialsArgs(adminUserName, adminUserPassword, adminUserSshPublicKey);
        }
    }
}
