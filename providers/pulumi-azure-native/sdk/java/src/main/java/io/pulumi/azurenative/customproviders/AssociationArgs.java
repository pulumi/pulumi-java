// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customproviders;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AssociationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AssociationArgs Empty = new AssociationArgs();

    /**
     * The name of the association.
     * 
     */
    @InputImport(name="associationName")
    private final @Nullable Input<String> associationName;

    public Input<String> getAssociationName() {
        return this.associationName == null ? Input.empty() : this.associationName;
    }

    /**
     * The scope of the association. The scope can be any valid REST resource instance. For example, use '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/Microsoft.Compute/virtualMachines/{vm-name}' for a virtual machine resource.
     * 
     */
    @InputImport(name="scope", required=true)
    private final Input<String> scope;

    public Input<String> getScope() {
        return this.scope;
    }

    /**
     * The REST resource instance of the target resource for this association.
     * 
     */
    @InputImport(name="targetResourceId")
    private final @Nullable Input<String> targetResourceId;

    public Input<String> getTargetResourceId() {
        return this.targetResourceId == null ? Input.empty() : this.targetResourceId;
    }

    public AssociationArgs(
        @Nullable Input<String> associationName,
        Input<String> scope,
        @Nullable Input<String> targetResourceId) {
        this.associationName = associationName;
        this.scope = Objects.requireNonNull(scope, "expected parameter 'scope' to be non-null");
        this.targetResourceId = targetResourceId;
    }

    private AssociationArgs() {
        this.associationName = Input.empty();
        this.scope = Input.empty();
        this.targetResourceId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> associationName;
        private Input<String> scope;
        private @Nullable Input<String> targetResourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(AssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associationName = defaults.associationName;
    	      this.scope = defaults.scope;
    	      this.targetResourceId = defaults.targetResourceId;
        }

        public Builder setAssociationName(@Nullable Input<String> associationName) {
            this.associationName = associationName;
            return this;
        }

        public Builder setAssociationName(@Nullable String associationName) {
            this.associationName = Input.ofNullable(associationName);
            return this;
        }

        public Builder setScope(Input<String> scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }

        public Builder setScope(String scope) {
            this.scope = Input.of(Objects.requireNonNull(scope));
            return this;
        }

        public Builder setTargetResourceId(@Nullable Input<String> targetResourceId) {
            this.targetResourceId = targetResourceId;
            return this;
        }

        public Builder setTargetResourceId(@Nullable String targetResourceId) {
            this.targetResourceId = Input.ofNullable(targetResourceId);
            return this;
        }

        public AssociationArgs build() {
            return new AssociationArgs(associationName, scope, targetResourceId);
        }
    }
}
