// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.appplatform;

import io.pulumi.azurenative.appplatform.inputs.GatewayRouteConfigPropertiesArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GatewayRouteConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final GatewayRouteConfigArgs Empty = new GatewayRouteConfigArgs();

    /**
     * The name of Spring Cloud Gateway.
     * 
     */
    @Import(name="gatewayName", required=true)
      private final Output<String> gatewayName;

    public Output<String> getGatewayName() {
        return this.gatewayName;
    }

    /**
     * API route config of the Spring Cloud Gateway
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<GatewayRouteConfigPropertiesArgs> properties;

    public Output<GatewayRouteConfigPropertiesArgs> getProperties() {
        return this.properties == null ? Codegen.empty() : this.properties;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Spring Cloud Gateway route config.
     * 
     */
    @Import(name="routeConfigName")
      private final @Nullable Output<String> routeConfigName;

    public Output<String> getRouteConfigName() {
        return this.routeConfigName == null ? Codegen.empty() : this.routeConfigName;
    }

    /**
     * The name of the Service resource.
     * 
     */
    @Import(name="serviceName", required=true)
      private final Output<String> serviceName;

    public Output<String> getServiceName() {
        return this.serviceName;
    }

    public GatewayRouteConfigArgs(
        Output<String> gatewayName,
        @Nullable Output<GatewayRouteConfigPropertiesArgs> properties,
        Output<String> resourceGroupName,
        @Nullable Output<String> routeConfigName,
        Output<String> serviceName) {
        this.gatewayName = Objects.requireNonNull(gatewayName, "expected parameter 'gatewayName' to be non-null");
        this.properties = properties;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.routeConfigName = routeConfigName;
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
    }

    private GatewayRouteConfigArgs() {
        this.gatewayName = Codegen.empty();
        this.properties = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.routeConfigName = Codegen.empty();
        this.serviceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayRouteConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> gatewayName;
        private @Nullable Output<GatewayRouteConfigPropertiesArgs> properties;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> routeConfigName;
        private Output<String> serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayRouteConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gatewayName = defaults.gatewayName;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.routeConfigName = defaults.routeConfigName;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder gatewayName(Output<String> gatewayName) {
            this.gatewayName = Objects.requireNonNull(gatewayName);
            return this;
        }
        public Builder gatewayName(String gatewayName) {
            this.gatewayName = Output.of(Objects.requireNonNull(gatewayName));
            return this;
        }
        public Builder properties(@Nullable Output<GatewayRouteConfigPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }
        public Builder properties(@Nullable GatewayRouteConfigPropertiesArgs properties) {
            this.properties = Codegen.ofNullable(properties);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder routeConfigName(@Nullable Output<String> routeConfigName) {
            this.routeConfigName = routeConfigName;
            return this;
        }
        public Builder routeConfigName(@Nullable String routeConfigName) {
            this.routeConfigName = Codegen.ofNullable(routeConfigName);
            return this;
        }
        public Builder serviceName(Output<String> serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Output.of(Objects.requireNonNull(serviceName));
            return this;
        }        public GatewayRouteConfigArgs build() {
            return new GatewayRouteConfigArgs(gatewayName, properties, resourceGroupName, routeConfigName, serviceName);
        }
    }
}
