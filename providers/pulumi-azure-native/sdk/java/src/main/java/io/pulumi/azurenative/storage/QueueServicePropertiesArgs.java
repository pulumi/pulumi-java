// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage;

import io.pulumi.azurenative.storage.inputs.CorsRulesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class QueueServicePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final QueueServicePropertiesArgs Empty = new QueueServicePropertiesArgs();

    /**
     * The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * 
     */
    @InputImport(name="accountName", required=true)
      private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    /**
     * Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service.
     * 
     */
    @InputImport(name="cors")
      private final @Nullable Input<CorsRulesArgs> cors;

    public Input<CorsRulesArgs> getCors() {
        return this.cors == null ? Input.empty() : this.cors;
    }

    /**
     * The name of the Queue Service within the specified storage account. Queue Service Name must be 'default'
     * 
     */
    @InputImport(name="queueServiceName")
      private final @Nullable Input<String> queueServiceName;

    public Input<String> getQueueServiceName() {
        return this.queueServiceName == null ? Input.empty() : this.queueServiceName;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public QueueServicePropertiesArgs(
        Input<String> accountName,
        @Nullable Input<CorsRulesArgs> cors,
        @Nullable Input<String> queueServiceName,
        Input<String> resourceGroupName) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.cors = cors;
        this.queueServiceName = queueServiceName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private QueueServicePropertiesArgs() {
        this.accountName = Input.empty();
        this.cors = Input.empty();
        this.queueServiceName = Input.empty();
        this.resourceGroupName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueServicePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<CorsRulesArgs> cors;
        private @Nullable Input<String> queueServiceName;
        private Input<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(QueueServicePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.cors = defaults.cors;
    	      this.queueServiceName = defaults.queueServiceName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder accountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder accountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder cors(@Nullable Input<CorsRulesArgs> cors) {
            this.cors = cors;
            return this;
        }

        public Builder cors(@Nullable CorsRulesArgs cors) {
            this.cors = Input.ofNullable(cors);
            return this;
        }

        public Builder queueServiceName(@Nullable Input<String> queueServiceName) {
            this.queueServiceName = queueServiceName;
            return this;
        }

        public Builder queueServiceName(@Nullable String queueServiceName) {
            this.queueServiceName = Input.ofNullable(queueServiceName);
            return this;
        }

        public Builder resourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public QueueServicePropertiesArgs build() {
            return new QueueServicePropertiesArgs(accountName, cors, queueServiceName, resourceGroupName);
        }
    }
}
