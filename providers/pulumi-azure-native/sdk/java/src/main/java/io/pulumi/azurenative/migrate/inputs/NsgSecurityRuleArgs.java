// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.migrate.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Security Rule data model for Network Security Groups.
 * 
 */
public final class NsgSecurityRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final NsgSecurityRuleArgs Empty = new NsgSecurityRuleArgs();

    /**
     * Gets or sets whether network traffic is allowed or denied.
     * Possible values are “Allow” and “Deny”.
     * 
     */
    @InputImport(name="access")
    private final @Nullable Input<String> access;

    public Input<String> getAccess() {
        return this.access == null ? Input.empty() : this.access;
    }

    /**
     * Gets or sets a description for this rule. Restricted to 140 chars.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Gets or sets destination address prefix. CIDR or source IP range.
     *  A “*” can also be used to match all source IPs. Default tags such
     * as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
     * 
     */
    @InputImport(name="destinationAddressPrefix")
    private final @Nullable Input<String> destinationAddressPrefix;

    public Input<String> getDestinationAddressPrefix() {
        return this.destinationAddressPrefix == null ? Input.empty() : this.destinationAddressPrefix;
    }

    /**
     * Gets or sets Destination Port or Range. Integer or range between
     * 0 and 65535. A “*” can also be used to match all ports.
     * 
     */
    @InputImport(name="destinationPortRange")
    private final @Nullable Input<String> destinationPortRange;

    public Input<String> getDestinationPortRange() {
        return this.destinationPortRange == null ? Input.empty() : this.destinationPortRange;
    }

    /**
     * Gets or sets the direction of the rule.InBound or Outbound. The
     * direction specifies if rule will be evaluated on incoming or outgoing traffic.
     * 
     */
    @InputImport(name="direction")
    private final @Nullable Input<String> direction;

    public Input<String> getDirection() {
        return this.direction == null ? Input.empty() : this.direction;
    }

    /**
     * Gets or sets the Security rule name.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Gets or sets the priority of the rule. The value can be between
     * 100 and 4096. The priority number must be unique for each rule in the collection.
     * The lower the priority number, the higher the priority of the rule.
     * 
     */
    @InputImport(name="priority")
    private final @Nullable Input<Integer> priority;

    public Input<Integer> getPriority() {
        return this.priority == null ? Input.empty() : this.priority;
    }

    /**
     * Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
     * 
     */
    @InputImport(name="protocol")
    private final @Nullable Input<String> protocol;

    public Input<String> getProtocol() {
        return this.protocol == null ? Input.empty() : this.protocol;
    }

    /**
     * Gets or sets source address prefix. CIDR or source IP range. A
     * “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
     * ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
     * rule, specifies where network traffic originates from.
     * 
     */
    @InputImport(name="sourceAddressPrefix")
    private final @Nullable Input<String> sourceAddressPrefix;

    public Input<String> getSourceAddressPrefix() {
        return this.sourceAddressPrefix == null ? Input.empty() : this.sourceAddressPrefix;
    }

    /**
     * Gets or sets Source Port or Range. Integer or range between 0 and
     * 65535. A “*” can also be used to match all ports.
     * 
     */
    @InputImport(name="sourcePortRange")
    private final @Nullable Input<String> sourcePortRange;

    public Input<String> getSourcePortRange() {
        return this.sourcePortRange == null ? Input.empty() : this.sourcePortRange;
    }

    public NsgSecurityRuleArgs(
        @Nullable Input<String> access,
        @Nullable Input<String> description,
        @Nullable Input<String> destinationAddressPrefix,
        @Nullable Input<String> destinationPortRange,
        @Nullable Input<String> direction,
        @Nullable Input<String> name,
        @Nullable Input<Integer> priority,
        @Nullable Input<String> protocol,
        @Nullable Input<String> sourceAddressPrefix,
        @Nullable Input<String> sourcePortRange) {
        this.access = access;
        this.description = description;
        this.destinationAddressPrefix = destinationAddressPrefix;
        this.destinationPortRange = destinationPortRange;
        this.direction = direction;
        this.name = name;
        this.priority = priority;
        this.protocol = protocol;
        this.sourceAddressPrefix = sourceAddressPrefix;
        this.sourcePortRange = sourcePortRange;
    }

    private NsgSecurityRuleArgs() {
        this.access = Input.empty();
        this.description = Input.empty();
        this.destinationAddressPrefix = Input.empty();
        this.destinationPortRange = Input.empty();
        this.direction = Input.empty();
        this.name = Input.empty();
        this.priority = Input.empty();
        this.protocol = Input.empty();
        this.sourceAddressPrefix = Input.empty();
        this.sourcePortRange = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NsgSecurityRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> access;
        private @Nullable Input<String> description;
        private @Nullable Input<String> destinationAddressPrefix;
        private @Nullable Input<String> destinationPortRange;
        private @Nullable Input<String> direction;
        private @Nullable Input<String> name;
        private @Nullable Input<Integer> priority;
        private @Nullable Input<String> protocol;
        private @Nullable Input<String> sourceAddressPrefix;
        private @Nullable Input<String> sourcePortRange;

        public Builder() {
    	      // Empty
        }

        public Builder(NsgSecurityRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.access = defaults.access;
    	      this.description = defaults.description;
    	      this.destinationAddressPrefix = defaults.destinationAddressPrefix;
    	      this.destinationPortRange = defaults.destinationPortRange;
    	      this.direction = defaults.direction;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.protocol = defaults.protocol;
    	      this.sourceAddressPrefix = defaults.sourceAddressPrefix;
    	      this.sourcePortRange = defaults.sourcePortRange;
        }

        public Builder setAccess(@Nullable Input<String> access) {
            this.access = access;
            return this;
        }

        public Builder setAccess(@Nullable String access) {
            this.access = Input.ofNullable(access);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDestinationAddressPrefix(@Nullable Input<String> destinationAddressPrefix) {
            this.destinationAddressPrefix = destinationAddressPrefix;
            return this;
        }

        public Builder setDestinationAddressPrefix(@Nullable String destinationAddressPrefix) {
            this.destinationAddressPrefix = Input.ofNullable(destinationAddressPrefix);
            return this;
        }

        public Builder setDestinationPortRange(@Nullable Input<String> destinationPortRange) {
            this.destinationPortRange = destinationPortRange;
            return this;
        }

        public Builder setDestinationPortRange(@Nullable String destinationPortRange) {
            this.destinationPortRange = Input.ofNullable(destinationPortRange);
            return this;
        }

        public Builder setDirection(@Nullable Input<String> direction) {
            this.direction = direction;
            return this;
        }

        public Builder setDirection(@Nullable String direction) {
            this.direction = Input.ofNullable(direction);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPriority(@Nullable Input<Integer> priority) {
            this.priority = priority;
            return this;
        }

        public Builder setPriority(@Nullable Integer priority) {
            this.priority = Input.ofNullable(priority);
            return this;
        }

        public Builder setProtocol(@Nullable Input<String> protocol) {
            this.protocol = protocol;
            return this;
        }

        public Builder setProtocol(@Nullable String protocol) {
            this.protocol = Input.ofNullable(protocol);
            return this;
        }

        public Builder setSourceAddressPrefix(@Nullable Input<String> sourceAddressPrefix) {
            this.sourceAddressPrefix = sourceAddressPrefix;
            return this;
        }

        public Builder setSourceAddressPrefix(@Nullable String sourceAddressPrefix) {
            this.sourceAddressPrefix = Input.ofNullable(sourceAddressPrefix);
            return this;
        }

        public Builder setSourcePortRange(@Nullable Input<String> sourcePortRange) {
            this.sourcePortRange = sourcePortRange;
            return this;
        }

        public Builder setSourcePortRange(@Nullable String sourcePortRange) {
            this.sourcePortRange = Input.ofNullable(sourcePortRange);
            return this;
        }

        public NsgSecurityRuleArgs build() {
            return new NsgSecurityRuleArgs(access, description, destinationAddressPrefix, destinationPortRange, direction, name, priority, protocol, sourceAddressPrefix, sourcePortRange);
        }
    }
}
