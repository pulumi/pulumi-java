// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.inputs;

import io.pulumi.azurenative.servicefabric.enums.ServiceLoadMetricWeight;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies a metric to load balance a service during runtime.
 * 
 */
public final class ServiceLoadMetricDescriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceLoadMetricDescriptionArgs Empty = new ServiceLoadMetricDescriptionArgs();

    /**
     * Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
     * 
     */
    @InputImport(name="defaultLoad")
      private final @Nullable Input<Integer> defaultLoad;

    public Input<Integer> getDefaultLoad() {
        return this.defaultLoad == null ? Input.empty() : this.defaultLoad;
    }

    /**
     * The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
     * 
     */
    @InputImport(name="name", required=true)
      private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    /**
     * Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
     * 
     */
    @InputImport(name="primaryDefaultLoad")
      private final @Nullable Input<Integer> primaryDefaultLoad;

    public Input<Integer> getPrimaryDefaultLoad() {
        return this.primaryDefaultLoad == null ? Input.empty() : this.primaryDefaultLoad;
    }

    /**
     * Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
     * 
     */
    @InputImport(name="secondaryDefaultLoad")
      private final @Nullable Input<Integer> secondaryDefaultLoad;

    public Input<Integer> getSecondaryDefaultLoad() {
        return this.secondaryDefaultLoad == null ? Input.empty() : this.secondaryDefaultLoad;
    }

    /**
     * The service load metric relative weight, compared to other metrics configured for this service, as a number.
     * 
     */
    @InputImport(name="weight")
      private final @Nullable Input<Either<String,ServiceLoadMetricWeight>> weight;

    public Input<Either<String,ServiceLoadMetricWeight>> getWeight() {
        return this.weight == null ? Input.empty() : this.weight;
    }

    public ServiceLoadMetricDescriptionArgs(
        @Nullable Input<Integer> defaultLoad,
        Input<String> name,
        @Nullable Input<Integer> primaryDefaultLoad,
        @Nullable Input<Integer> secondaryDefaultLoad,
        @Nullable Input<Either<String,ServiceLoadMetricWeight>> weight) {
        this.defaultLoad = defaultLoad;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.primaryDefaultLoad = primaryDefaultLoad;
        this.secondaryDefaultLoad = secondaryDefaultLoad;
        this.weight = weight;
    }

    private ServiceLoadMetricDescriptionArgs() {
        this.defaultLoad = Input.empty();
        this.name = Input.empty();
        this.primaryDefaultLoad = Input.empty();
        this.secondaryDefaultLoad = Input.empty();
        this.weight = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceLoadMetricDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> defaultLoad;
        private Input<String> name;
        private @Nullable Input<Integer> primaryDefaultLoad;
        private @Nullable Input<Integer> secondaryDefaultLoad;
        private @Nullable Input<Either<String,ServiceLoadMetricWeight>> weight;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceLoadMetricDescriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultLoad = defaults.defaultLoad;
    	      this.name = defaults.name;
    	      this.primaryDefaultLoad = defaults.primaryDefaultLoad;
    	      this.secondaryDefaultLoad = defaults.secondaryDefaultLoad;
    	      this.weight = defaults.weight;
        }

        public Builder setDefaultLoad(@Nullable Input<Integer> defaultLoad) {
            this.defaultLoad = defaultLoad;
            return this;
        }

        public Builder setDefaultLoad(@Nullable Integer defaultLoad) {
            this.defaultLoad = Input.ofNullable(defaultLoad);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setPrimaryDefaultLoad(@Nullable Input<Integer> primaryDefaultLoad) {
            this.primaryDefaultLoad = primaryDefaultLoad;
            return this;
        }

        public Builder setPrimaryDefaultLoad(@Nullable Integer primaryDefaultLoad) {
            this.primaryDefaultLoad = Input.ofNullable(primaryDefaultLoad);
            return this;
        }

        public Builder setSecondaryDefaultLoad(@Nullable Input<Integer> secondaryDefaultLoad) {
            this.secondaryDefaultLoad = secondaryDefaultLoad;
            return this;
        }

        public Builder setSecondaryDefaultLoad(@Nullable Integer secondaryDefaultLoad) {
            this.secondaryDefaultLoad = Input.ofNullable(secondaryDefaultLoad);
            return this;
        }

        public Builder setWeight(@Nullable Input<Either<String,ServiceLoadMetricWeight>> weight) {
            this.weight = weight;
            return this;
        }

        public Builder setWeight(@Nullable Either<String,ServiceLoadMetricWeight> weight) {
            this.weight = Input.ofNullable(weight);
            return this;
        }
        public ServiceLoadMetricDescriptionArgs build() {
            return new ServiceLoadMetricDescriptionArgs(defaultLoad, name, primaryDefaultLoad, secondaryDefaultLoad, weight);
        }
    }
}
