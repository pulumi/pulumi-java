// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.inputs;

import io.pulumi.azurenative.servicefabric.enums.ServiceLoadMetricWeight;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies a metric to load balance a service during runtime.
 * 
 */
public final class ServiceLoadMetricDescriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceLoadMetricDescriptionArgs Empty = new ServiceLoadMetricDescriptionArgs();

    /**
     * Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
     * 
     */
    @Import(name="defaultLoad")
      private final @Nullable Output<Integer> defaultLoad;

    public Output<Integer> defaultLoad() {
        return this.defaultLoad == null ? Codegen.empty() : this.defaultLoad;
    }

    /**
     * The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
     * 
     */
    @Import(name="primaryDefaultLoad")
      private final @Nullable Output<Integer> primaryDefaultLoad;

    public Output<Integer> primaryDefaultLoad() {
        return this.primaryDefaultLoad == null ? Codegen.empty() : this.primaryDefaultLoad;
    }

    /**
     * Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
     * 
     */
    @Import(name="secondaryDefaultLoad")
      private final @Nullable Output<Integer> secondaryDefaultLoad;

    public Output<Integer> secondaryDefaultLoad() {
        return this.secondaryDefaultLoad == null ? Codegen.empty() : this.secondaryDefaultLoad;
    }

    /**
     * The service load metric relative weight, compared to other metrics configured for this service, as a number.
     * 
     */
    @Import(name="weight")
      private final @Nullable Output<Either<String,ServiceLoadMetricWeight>> weight;

    public Output<Either<String,ServiceLoadMetricWeight>> weight() {
        return this.weight == null ? Codegen.empty() : this.weight;
    }

    public ServiceLoadMetricDescriptionArgs(
        @Nullable Output<Integer> defaultLoad,
        Output<String> name,
        @Nullable Output<Integer> primaryDefaultLoad,
        @Nullable Output<Integer> secondaryDefaultLoad,
        @Nullable Output<Either<String,ServiceLoadMetricWeight>> weight) {
        this.defaultLoad = defaultLoad;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.primaryDefaultLoad = primaryDefaultLoad;
        this.secondaryDefaultLoad = secondaryDefaultLoad;
        this.weight = weight;
    }

    private ServiceLoadMetricDescriptionArgs() {
        this.defaultLoad = Codegen.empty();
        this.name = Codegen.empty();
        this.primaryDefaultLoad = Codegen.empty();
        this.secondaryDefaultLoad = Codegen.empty();
        this.weight = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceLoadMetricDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> defaultLoad;
        private Output<String> name;
        private @Nullable Output<Integer> primaryDefaultLoad;
        private @Nullable Output<Integer> secondaryDefaultLoad;
        private @Nullable Output<Either<String,ServiceLoadMetricWeight>> weight;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceLoadMetricDescriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultLoad = defaults.defaultLoad;
    	      this.name = defaults.name;
    	      this.primaryDefaultLoad = defaults.primaryDefaultLoad;
    	      this.secondaryDefaultLoad = defaults.secondaryDefaultLoad;
    	      this.weight = defaults.weight;
        }

        public Builder defaultLoad(@Nullable Output<Integer> defaultLoad) {
            this.defaultLoad = defaultLoad;
            return this;
        }
        public Builder defaultLoad(@Nullable Integer defaultLoad) {
            this.defaultLoad = Codegen.ofNullable(defaultLoad);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder primaryDefaultLoad(@Nullable Output<Integer> primaryDefaultLoad) {
            this.primaryDefaultLoad = primaryDefaultLoad;
            return this;
        }
        public Builder primaryDefaultLoad(@Nullable Integer primaryDefaultLoad) {
            this.primaryDefaultLoad = Codegen.ofNullable(primaryDefaultLoad);
            return this;
        }
        public Builder secondaryDefaultLoad(@Nullable Output<Integer> secondaryDefaultLoad) {
            this.secondaryDefaultLoad = secondaryDefaultLoad;
            return this;
        }
        public Builder secondaryDefaultLoad(@Nullable Integer secondaryDefaultLoad) {
            this.secondaryDefaultLoad = Codegen.ofNullable(secondaryDefaultLoad);
            return this;
        }
        public Builder weight(@Nullable Output<Either<String,ServiceLoadMetricWeight>> weight) {
            this.weight = weight;
            return this;
        }
        public Builder weight(@Nullable Either<String,ServiceLoadMetricWeight> weight) {
            this.weight = Codegen.ofNullable(weight);
            return this;
        }        public ServiceLoadMetricDescriptionArgs build() {
            return new ServiceLoadMetricDescriptionArgs(defaultLoad, name, primaryDefaultLoad, secondaryDefaultLoad, weight);
        }
    }
}
