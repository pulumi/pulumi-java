// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.resources.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The provider extended location.
 * 
 */
public final class ProviderExtendedLocationResponse extends io.pulumi.resources.InvokeArgs {

    public static final ProviderExtendedLocationResponse Empty = new ProviderExtendedLocationResponse();

    /**
     * The extended locations for the azure location.
     * 
     */
    @Import(name="extendedLocations")
      private final @Nullable List<String> extendedLocations;

    public List<String> extendedLocations() {
        return this.extendedLocations == null ? List.of() : this.extendedLocations;
    }

    /**
     * The azure location.
     * 
     */
    @Import(name="location")
      private final @Nullable String location;

    public Optional<String> location() {
        return this.location == null ? Optional.empty() : Optional.ofNullable(this.location);
    }

    /**
     * The extended location type.
     * 
     */
    @Import(name="type")
      private final @Nullable String type;

    public Optional<String> type() {
        return this.type == null ? Optional.empty() : Optional.ofNullable(this.type);
    }

    public ProviderExtendedLocationResponse(
        @Nullable List<String> extendedLocations,
        @Nullable String location,
        @Nullable String type) {
        this.extendedLocations = extendedLocations;
        this.location = location;
        this.type = type;
    }

    private ProviderExtendedLocationResponse() {
        this.extendedLocations = List.of();
        this.location = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProviderExtendedLocationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> extendedLocations;
        private @Nullable String location;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ProviderExtendedLocationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extendedLocations = defaults.extendedLocations;
    	      this.location = defaults.location;
    	      this.type = defaults.type;
        }

        public Builder extendedLocations(@Nullable List<String> extendedLocations) {
            this.extendedLocations = extendedLocations;
            return this;
        }
        public Builder extendedLocations(String... extendedLocations) {
            return extendedLocations(List.of(extendedLocations));
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }        public ProviderExtendedLocationResponse build() {
            return new ProviderExtendedLocationResponse(extendedLocations, location, type);
        }
    }
}
