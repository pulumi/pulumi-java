// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.providerhub.inputs;

import io.pulumi.azurenative.providerhub.inputs.ServiceTreeInfoArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResourceProviderManifestPropertiesManagementArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourceProviderManifestPropertiesManagementArgs Empty = new ResourceProviderManifestPropertiesManagementArgs();

    @Import(name="incidentContactEmail")
      private final @Nullable Output<String> incidentContactEmail;

    public Output<String> incidentContactEmail() {
        return this.incidentContactEmail == null ? Codegen.empty() : this.incidentContactEmail;
    }

    @Import(name="incidentRoutingService")
      private final @Nullable Output<String> incidentRoutingService;

    public Output<String> incidentRoutingService() {
        return this.incidentRoutingService == null ? Codegen.empty() : this.incidentRoutingService;
    }

    @Import(name="incidentRoutingTeam")
      private final @Nullable Output<String> incidentRoutingTeam;

    public Output<String> incidentRoutingTeam() {
        return this.incidentRoutingTeam == null ? Codegen.empty() : this.incidentRoutingTeam;
    }

    @Import(name="manifestOwners")
      private final @Nullable Output<List<String>> manifestOwners;

    public Output<List<String>> manifestOwners() {
        return this.manifestOwners == null ? Codegen.empty() : this.manifestOwners;
    }

    @Import(name="resourceAccessPolicy")
      private final @Nullable Output<String> resourceAccessPolicy;

    public Output<String> resourceAccessPolicy() {
        return this.resourceAccessPolicy == null ? Codegen.empty() : this.resourceAccessPolicy;
    }

    @Import(name="resourceAccessRoles")
      private final @Nullable Output<List<Object>> resourceAccessRoles;

    public Output<List<Object>> resourceAccessRoles() {
        return this.resourceAccessRoles == null ? Codegen.empty() : this.resourceAccessRoles;
    }

    @Import(name="schemaOwners")
      private final @Nullable Output<List<String>> schemaOwners;

    public Output<List<String>> schemaOwners() {
        return this.schemaOwners == null ? Codegen.empty() : this.schemaOwners;
    }

    @Import(name="serviceTreeInfos")
      private final @Nullable Output<List<ServiceTreeInfoArgs>> serviceTreeInfos;

    public Output<List<ServiceTreeInfoArgs>> serviceTreeInfos() {
        return this.serviceTreeInfos == null ? Codegen.empty() : this.serviceTreeInfos;
    }

    public ResourceProviderManifestPropertiesManagementArgs(
        @Nullable Output<String> incidentContactEmail,
        @Nullable Output<String> incidentRoutingService,
        @Nullable Output<String> incidentRoutingTeam,
        @Nullable Output<List<String>> manifestOwners,
        @Nullable Output<String> resourceAccessPolicy,
        @Nullable Output<List<Object>> resourceAccessRoles,
        @Nullable Output<List<String>> schemaOwners,
        @Nullable Output<List<ServiceTreeInfoArgs>> serviceTreeInfos) {
        this.incidentContactEmail = incidentContactEmail;
        this.incidentRoutingService = incidentRoutingService;
        this.incidentRoutingTeam = incidentRoutingTeam;
        this.manifestOwners = manifestOwners;
        this.resourceAccessPolicy = resourceAccessPolicy;
        this.resourceAccessRoles = resourceAccessRoles;
        this.schemaOwners = schemaOwners;
        this.serviceTreeInfos = serviceTreeInfos;
    }

    private ResourceProviderManifestPropertiesManagementArgs() {
        this.incidentContactEmail = Codegen.empty();
        this.incidentRoutingService = Codegen.empty();
        this.incidentRoutingTeam = Codegen.empty();
        this.manifestOwners = Codegen.empty();
        this.resourceAccessPolicy = Codegen.empty();
        this.resourceAccessRoles = Codegen.empty();
        this.schemaOwners = Codegen.empty();
        this.serviceTreeInfos = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceProviderManifestPropertiesManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> incidentContactEmail;
        private @Nullable Output<String> incidentRoutingService;
        private @Nullable Output<String> incidentRoutingTeam;
        private @Nullable Output<List<String>> manifestOwners;
        private @Nullable Output<String> resourceAccessPolicy;
        private @Nullable Output<List<Object>> resourceAccessRoles;
        private @Nullable Output<List<String>> schemaOwners;
        private @Nullable Output<List<ServiceTreeInfoArgs>> serviceTreeInfos;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceProviderManifestPropertiesManagementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.incidentContactEmail = defaults.incidentContactEmail;
    	      this.incidentRoutingService = defaults.incidentRoutingService;
    	      this.incidentRoutingTeam = defaults.incidentRoutingTeam;
    	      this.manifestOwners = defaults.manifestOwners;
    	      this.resourceAccessPolicy = defaults.resourceAccessPolicy;
    	      this.resourceAccessRoles = defaults.resourceAccessRoles;
    	      this.schemaOwners = defaults.schemaOwners;
    	      this.serviceTreeInfos = defaults.serviceTreeInfos;
        }

        public Builder incidentContactEmail(@Nullable Output<String> incidentContactEmail) {
            this.incidentContactEmail = incidentContactEmail;
            return this;
        }
        public Builder incidentContactEmail(@Nullable String incidentContactEmail) {
            this.incidentContactEmail = Codegen.ofNullable(incidentContactEmail);
            return this;
        }
        public Builder incidentRoutingService(@Nullable Output<String> incidentRoutingService) {
            this.incidentRoutingService = incidentRoutingService;
            return this;
        }
        public Builder incidentRoutingService(@Nullable String incidentRoutingService) {
            this.incidentRoutingService = Codegen.ofNullable(incidentRoutingService);
            return this;
        }
        public Builder incidentRoutingTeam(@Nullable Output<String> incidentRoutingTeam) {
            this.incidentRoutingTeam = incidentRoutingTeam;
            return this;
        }
        public Builder incidentRoutingTeam(@Nullable String incidentRoutingTeam) {
            this.incidentRoutingTeam = Codegen.ofNullable(incidentRoutingTeam);
            return this;
        }
        public Builder manifestOwners(@Nullable Output<List<String>> manifestOwners) {
            this.manifestOwners = manifestOwners;
            return this;
        }
        public Builder manifestOwners(@Nullable List<String> manifestOwners) {
            this.manifestOwners = Codegen.ofNullable(manifestOwners);
            return this;
        }
        public Builder manifestOwners(String... manifestOwners) {
            return manifestOwners(List.of(manifestOwners));
        }
        public Builder resourceAccessPolicy(@Nullable Output<String> resourceAccessPolicy) {
            this.resourceAccessPolicy = resourceAccessPolicy;
            return this;
        }
        public Builder resourceAccessPolicy(@Nullable String resourceAccessPolicy) {
            this.resourceAccessPolicy = Codegen.ofNullable(resourceAccessPolicy);
            return this;
        }
        public Builder resourceAccessRoles(@Nullable Output<List<Object>> resourceAccessRoles) {
            this.resourceAccessRoles = resourceAccessRoles;
            return this;
        }
        public Builder resourceAccessRoles(@Nullable List<Object> resourceAccessRoles) {
            this.resourceAccessRoles = Codegen.ofNullable(resourceAccessRoles);
            return this;
        }
        public Builder resourceAccessRoles(Object... resourceAccessRoles) {
            return resourceAccessRoles(List.of(resourceAccessRoles));
        }
        public Builder schemaOwners(@Nullable Output<List<String>> schemaOwners) {
            this.schemaOwners = schemaOwners;
            return this;
        }
        public Builder schemaOwners(@Nullable List<String> schemaOwners) {
            this.schemaOwners = Codegen.ofNullable(schemaOwners);
            return this;
        }
        public Builder schemaOwners(String... schemaOwners) {
            return schemaOwners(List.of(schemaOwners));
        }
        public Builder serviceTreeInfos(@Nullable Output<List<ServiceTreeInfoArgs>> serviceTreeInfos) {
            this.serviceTreeInfos = serviceTreeInfos;
            return this;
        }
        public Builder serviceTreeInfos(@Nullable List<ServiceTreeInfoArgs> serviceTreeInfos) {
            this.serviceTreeInfos = Codegen.ofNullable(serviceTreeInfos);
            return this;
        }
        public Builder serviceTreeInfos(ServiceTreeInfoArgs... serviceTreeInfos) {
            return serviceTreeInfos(List.of(serviceTreeInfos));
        }        public ResourceProviderManifestPropertiesManagementArgs build() {
            return new ResourceProviderManifestPropertiesManagementArgs(incidentContactEmail, incidentRoutingService, incidentRoutingTeam, manifestOwners, resourceAccessPolicy, resourceAccessRoles, schemaOwners, serviceTreeInfos);
        }
    }
}
