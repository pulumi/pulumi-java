// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.ApplicationGatewayAuthenticationCertificateResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayAutoscaleConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayBackendAddressPoolResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayBackendHttpSettingsResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayCustomErrorResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayFrontendIPConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayFrontendPortResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayHttpListenerResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayIPConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayPrivateEndpointConnectionResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayPrivateLinkConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayProbeResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayRedirectConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayRequestRoutingRuleResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayRewriteRuleSetResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewaySkuResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewaySslCertificateResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewaySslPolicyResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewaySslProfileResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayTrustedClientCertificateResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayTrustedRootCertificateResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayUrlPathMapResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayWebApplicationFirewallConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ManagedServiceIdentityResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ApplicationGatewayResponse {
    private final @Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates;
    private final @Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration;
    private final @Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools;
    private final @Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection;
    private final @Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations;
    private final @Nullable Boolean enableFips;
    private final @Nullable Boolean enableHttp2;
    private final String etag;
    private final @Nullable SubResourceResponse firewallPolicy;
    private final @Nullable Boolean forceFirewallPolicyAssociation;
    private final @Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations;
    private final @Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts;
    private final @Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations;
    private final @Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners;
    private final @Nullable String id;
    private final @Nullable ManagedServiceIdentityResponse identity;
    private final @Nullable String location;
    private final String name;
    private final String operationalState;
    private final List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections;
    private final @Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations;
    private final @Nullable List<ApplicationGatewayProbeResponse> probes;
    private final String provisioningState;
    private final @Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations;
    private final @Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules;
    private final String resourceGuid;
    private final @Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets;
    private final @Nullable ApplicationGatewaySkuResponse sku;
    private final @Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates;
    private final @Nullable ApplicationGatewaySslPolicyResponse sslPolicy;
    private final @Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles;
    private final @Nullable Map<String,String> tags;
    private final @Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates;
    private final @Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates;
    private final String type;
    private final @Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps;
    private final @Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration;
    private final @Nullable List<String> zones;

    @OutputCustomType.Constructor({"authenticationCertificates","autoscaleConfiguration","backendAddressPools","backendHttpSettingsCollection","customErrorConfigurations","enableFips","enableHttp2","etag","firewallPolicy","forceFirewallPolicyAssociation","frontendIPConfigurations","frontendPorts","gatewayIPConfigurations","httpListeners","id","identity","location","name","operationalState","privateEndpointConnections","privateLinkConfigurations","probes","provisioningState","redirectConfigurations","requestRoutingRules","resourceGuid","rewriteRuleSets","sku","sslCertificates","sslPolicy","sslProfiles","tags","trustedClientCertificates","trustedRootCertificates","type","urlPathMaps","webApplicationFirewallConfiguration","zones"})
    private ApplicationGatewayResponse(
        @Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates,
        @Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration,
        @Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools,
        @Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection,
        @Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations,
        @Nullable Boolean enableFips,
        @Nullable Boolean enableHttp2,
        String etag,
        @Nullable SubResourceResponse firewallPolicy,
        @Nullable Boolean forceFirewallPolicyAssociation,
        @Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations,
        @Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts,
        @Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations,
        @Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners,
        @Nullable String id,
        @Nullable ManagedServiceIdentityResponse identity,
        @Nullable String location,
        String name,
        String operationalState,
        List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections,
        @Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations,
        @Nullable List<ApplicationGatewayProbeResponse> probes,
        String provisioningState,
        @Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations,
        @Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules,
        String resourceGuid,
        @Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets,
        @Nullable ApplicationGatewaySkuResponse sku,
        @Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates,
        @Nullable ApplicationGatewaySslPolicyResponse sslPolicy,
        @Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles,
        @Nullable Map<String,String> tags,
        @Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates,
        @Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates,
        String type,
        @Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps,
        @Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration,
        @Nullable List<String> zones) {
        this.authenticationCertificates = authenticationCertificates;
        this.autoscaleConfiguration = autoscaleConfiguration;
        this.backendAddressPools = backendAddressPools;
        this.backendHttpSettingsCollection = backendHttpSettingsCollection;
        this.customErrorConfigurations = customErrorConfigurations;
        this.enableFips = enableFips;
        this.enableHttp2 = enableHttp2;
        this.etag = Objects.requireNonNull(etag);
        this.firewallPolicy = firewallPolicy;
        this.forceFirewallPolicyAssociation = forceFirewallPolicyAssociation;
        this.frontendIPConfigurations = frontendIPConfigurations;
        this.frontendPorts = frontendPorts;
        this.gatewayIPConfigurations = gatewayIPConfigurations;
        this.httpListeners = httpListeners;
        this.id = id;
        this.identity = identity;
        this.location = location;
        this.name = Objects.requireNonNull(name);
        this.operationalState = Objects.requireNonNull(operationalState);
        this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
        this.privateLinkConfigurations = privateLinkConfigurations;
        this.probes = probes;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.redirectConfigurations = redirectConfigurations;
        this.requestRoutingRules = requestRoutingRules;
        this.resourceGuid = Objects.requireNonNull(resourceGuid);
        this.rewriteRuleSets = rewriteRuleSets;
        this.sku = sku;
        this.sslCertificates = sslCertificates;
        this.sslPolicy = sslPolicy;
        this.sslProfiles = sslProfiles;
        this.tags = tags;
        this.trustedClientCertificates = trustedClientCertificates;
        this.trustedRootCertificates = trustedRootCertificates;
        this.type = Objects.requireNonNull(type);
        this.urlPathMaps = urlPathMaps;
        this.webApplicationFirewallConfiguration = webApplicationFirewallConfiguration;
        this.zones = zones;
    }

    public List<ApplicationGatewayAuthenticationCertificateResponse> getAuthenticationCertificates() {
        return this.authenticationCertificates == null ? List.of() : this.authenticationCertificates;
    }
    public Optional<ApplicationGatewayAutoscaleConfigurationResponse> getAutoscaleConfiguration() {
        return Optional.ofNullable(this.autoscaleConfiguration);
    }
    public List<ApplicationGatewayBackendAddressPoolResponse> getBackendAddressPools() {
        return this.backendAddressPools == null ? List.of() : this.backendAddressPools;
    }
    public List<ApplicationGatewayBackendHttpSettingsResponse> getBackendHttpSettingsCollection() {
        return this.backendHttpSettingsCollection == null ? List.of() : this.backendHttpSettingsCollection;
    }
    public List<ApplicationGatewayCustomErrorResponse> getCustomErrorConfigurations() {
        return this.customErrorConfigurations == null ? List.of() : this.customErrorConfigurations;
    }
    public Optional<Boolean> getEnableFips() {
        return Optional.ofNullable(this.enableFips);
    }
    public Optional<Boolean> getEnableHttp2() {
        return Optional.ofNullable(this.enableHttp2);
    }
    public String getEtag() {
        return this.etag;
    }
    public Optional<SubResourceResponse> getFirewallPolicy() {
        return Optional.ofNullable(this.firewallPolicy);
    }
    public Optional<Boolean> getForceFirewallPolicyAssociation() {
        return Optional.ofNullable(this.forceFirewallPolicyAssociation);
    }
    public List<ApplicationGatewayFrontendIPConfigurationResponse> getFrontendIPConfigurations() {
        return this.frontendIPConfigurations == null ? List.of() : this.frontendIPConfigurations;
    }
    public List<ApplicationGatewayFrontendPortResponse> getFrontendPorts() {
        return this.frontendPorts == null ? List.of() : this.frontendPorts;
    }
    public List<ApplicationGatewayIPConfigurationResponse> getGatewayIPConfigurations() {
        return this.gatewayIPConfigurations == null ? List.of() : this.gatewayIPConfigurations;
    }
    public List<ApplicationGatewayHttpListenerResponse> getHttpListeners() {
        return this.httpListeners == null ? List.of() : this.httpListeners;
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public Optional<ManagedServiceIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public String getName() {
        return this.name;
    }
    public String getOperationalState() {
        return this.operationalState;
    }
    public List<ApplicationGatewayPrivateEndpointConnectionResponse> getPrivateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    public List<ApplicationGatewayPrivateLinkConfigurationResponse> getPrivateLinkConfigurations() {
        return this.privateLinkConfigurations == null ? List.of() : this.privateLinkConfigurations;
    }
    public List<ApplicationGatewayProbeResponse> getProbes() {
        return this.probes == null ? List.of() : this.probes;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public List<ApplicationGatewayRedirectConfigurationResponse> getRedirectConfigurations() {
        return this.redirectConfigurations == null ? List.of() : this.redirectConfigurations;
    }
    public List<ApplicationGatewayRequestRoutingRuleResponse> getRequestRoutingRules() {
        return this.requestRoutingRules == null ? List.of() : this.requestRoutingRules;
    }
    public String getResourceGuid() {
        return this.resourceGuid;
    }
    public List<ApplicationGatewayRewriteRuleSetResponse> getRewriteRuleSets() {
        return this.rewriteRuleSets == null ? List.of() : this.rewriteRuleSets;
    }
    public Optional<ApplicationGatewaySkuResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public List<ApplicationGatewaySslCertificateResponse> getSslCertificates() {
        return this.sslCertificates == null ? List.of() : this.sslCertificates;
    }
    public Optional<ApplicationGatewaySslPolicyResponse> getSslPolicy() {
        return Optional.ofNullable(this.sslPolicy);
    }
    public List<ApplicationGatewaySslProfileResponse> getSslProfiles() {
        return this.sslProfiles == null ? List.of() : this.sslProfiles;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public List<ApplicationGatewayTrustedClientCertificateResponse> getTrustedClientCertificates() {
        return this.trustedClientCertificates == null ? List.of() : this.trustedClientCertificates;
    }
    public List<ApplicationGatewayTrustedRootCertificateResponse> getTrustedRootCertificates() {
        return this.trustedRootCertificates == null ? List.of() : this.trustedRootCertificates;
    }
    public String getType() {
        return this.type;
    }
    public List<ApplicationGatewayUrlPathMapResponse> getUrlPathMaps() {
        return this.urlPathMaps == null ? List.of() : this.urlPathMaps;
    }
    public Optional<ApplicationGatewayWebApplicationFirewallConfigurationResponse> getWebApplicationFirewallConfiguration() {
        return Optional.ofNullable(this.webApplicationFirewallConfiguration);
    }
    public List<String> getZones() {
        return this.zones == null ? List.of() : this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewayResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates;
        private @Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration;
        private @Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools;
        private @Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection;
        private @Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations;
        private @Nullable Boolean enableFips;
        private @Nullable Boolean enableHttp2;
        private String etag;
        private @Nullable SubResourceResponse firewallPolicy;
        private @Nullable Boolean forceFirewallPolicyAssociation;
        private @Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations;
        private @Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts;
        private @Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations;
        private @Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners;
        private @Nullable String id;
        private @Nullable ManagedServiceIdentityResponse identity;
        private @Nullable String location;
        private String name;
        private String operationalState;
        private List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections;
        private @Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations;
        private @Nullable List<ApplicationGatewayProbeResponse> probes;
        private String provisioningState;
        private @Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations;
        private @Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules;
        private String resourceGuid;
        private @Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets;
        private @Nullable ApplicationGatewaySkuResponse sku;
        private @Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates;
        private @Nullable ApplicationGatewaySslPolicyResponse sslPolicy;
        private @Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles;
        private @Nullable Map<String,String> tags;
        private @Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates;
        private @Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates;
        private String type;
        private @Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps;
        private @Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration;
        private @Nullable List<String> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationGatewayResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationCertificates = defaults.authenticationCertificates;
    	      this.autoscaleConfiguration = defaults.autoscaleConfiguration;
    	      this.backendAddressPools = defaults.backendAddressPools;
    	      this.backendHttpSettingsCollection = defaults.backendHttpSettingsCollection;
    	      this.customErrorConfigurations = defaults.customErrorConfigurations;
    	      this.enableFips = defaults.enableFips;
    	      this.enableHttp2 = defaults.enableHttp2;
    	      this.etag = defaults.etag;
    	      this.firewallPolicy = defaults.firewallPolicy;
    	      this.forceFirewallPolicyAssociation = defaults.forceFirewallPolicyAssociation;
    	      this.frontendIPConfigurations = defaults.frontendIPConfigurations;
    	      this.frontendPorts = defaults.frontendPorts;
    	      this.gatewayIPConfigurations = defaults.gatewayIPConfigurations;
    	      this.httpListeners = defaults.httpListeners;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.operationalState = defaults.operationalState;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.privateLinkConfigurations = defaults.privateLinkConfigurations;
    	      this.probes = defaults.probes;
    	      this.provisioningState = defaults.provisioningState;
    	      this.redirectConfigurations = defaults.redirectConfigurations;
    	      this.requestRoutingRules = defaults.requestRoutingRules;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.rewriteRuleSets = defaults.rewriteRuleSets;
    	      this.sku = defaults.sku;
    	      this.sslCertificates = defaults.sslCertificates;
    	      this.sslPolicy = defaults.sslPolicy;
    	      this.sslProfiles = defaults.sslProfiles;
    	      this.tags = defaults.tags;
    	      this.trustedClientCertificates = defaults.trustedClientCertificates;
    	      this.trustedRootCertificates = defaults.trustedRootCertificates;
    	      this.type = defaults.type;
    	      this.urlPathMaps = defaults.urlPathMaps;
    	      this.webApplicationFirewallConfiguration = defaults.webApplicationFirewallConfiguration;
    	      this.zones = defaults.zones;
        }

        public Builder setAuthenticationCertificates(@Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates) {
            this.authenticationCertificates = authenticationCertificates;
            return this;
        }

        public Builder setAutoscaleConfiguration(@Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration) {
            this.autoscaleConfiguration = autoscaleConfiguration;
            return this;
        }

        public Builder setBackendAddressPools(@Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools) {
            this.backendAddressPools = backendAddressPools;
            return this;
        }

        public Builder setBackendHttpSettingsCollection(@Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection) {
            this.backendHttpSettingsCollection = backendHttpSettingsCollection;
            return this;
        }

        public Builder setCustomErrorConfigurations(@Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations) {
            this.customErrorConfigurations = customErrorConfigurations;
            return this;
        }

        public Builder setEnableFips(@Nullable Boolean enableFips) {
            this.enableFips = enableFips;
            return this;
        }

        public Builder setEnableHttp2(@Nullable Boolean enableHttp2) {
            this.enableHttp2 = enableHttp2;
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setFirewallPolicy(@Nullable SubResourceResponse firewallPolicy) {
            this.firewallPolicy = firewallPolicy;
            return this;
        }

        public Builder setForceFirewallPolicyAssociation(@Nullable Boolean forceFirewallPolicyAssociation) {
            this.forceFirewallPolicyAssociation = forceFirewallPolicyAssociation;
            return this;
        }

        public Builder setFrontendIPConfigurations(@Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations) {
            this.frontendIPConfigurations = frontendIPConfigurations;
            return this;
        }

        public Builder setFrontendPorts(@Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts) {
            this.frontendPorts = frontendPorts;
            return this;
        }

        public Builder setGatewayIPConfigurations(@Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations) {
            this.gatewayIPConfigurations = gatewayIPConfigurations;
            return this;
        }

        public Builder setHttpListeners(@Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners) {
            this.httpListeners = httpListeners;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setIdentity(@Nullable ManagedServiceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOperationalState(String operationalState) {
            this.operationalState = Objects.requireNonNull(operationalState);
            return this;
        }

        public Builder setPrivateEndpointConnections(List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }

        public Builder setPrivateLinkConfigurations(@Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations) {
            this.privateLinkConfigurations = privateLinkConfigurations;
            return this;
        }

        public Builder setProbes(@Nullable List<ApplicationGatewayProbeResponse> probes) {
            this.probes = probes;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRedirectConfigurations(@Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations) {
            this.redirectConfigurations = redirectConfigurations;
            return this;
        }

        public Builder setRequestRoutingRules(@Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules) {
            this.requestRoutingRules = requestRoutingRules;
            return this;
        }

        public Builder setResourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }

        public Builder setRewriteRuleSets(@Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets) {
            this.rewriteRuleSets = rewriteRuleSets;
            return this;
        }

        public Builder setSku(@Nullable ApplicationGatewaySkuResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSslCertificates(@Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates) {
            this.sslCertificates = sslCertificates;
            return this;
        }

        public Builder setSslPolicy(@Nullable ApplicationGatewaySslPolicyResponse sslPolicy) {
            this.sslPolicy = sslPolicy;
            return this;
        }

        public Builder setSslProfiles(@Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles) {
            this.sslProfiles = sslProfiles;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTrustedClientCertificates(@Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates) {
            this.trustedClientCertificates = trustedClientCertificates;
            return this;
        }

        public Builder setTrustedRootCertificates(@Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates) {
            this.trustedRootCertificates = trustedRootCertificates;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUrlPathMaps(@Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps) {
            this.urlPathMaps = urlPathMaps;
            return this;
        }

        public Builder setWebApplicationFirewallConfiguration(@Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration) {
            this.webApplicationFirewallConfiguration = webApplicationFirewallConfiguration;
            return this;
        }

        public Builder setZones(@Nullable List<String> zones) {
            this.zones = zones;
            return this;
        }

        public ApplicationGatewayResponse build() {
            return new ApplicationGatewayResponse(authenticationCertificates, autoscaleConfiguration, backendAddressPools, backendHttpSettingsCollection, customErrorConfigurations, enableFips, enableHttp2, etag, firewallPolicy, forceFirewallPolicyAssociation, frontendIPConfigurations, frontendPorts, gatewayIPConfigurations, httpListeners, id, identity, location, name, operationalState, privateEndpointConnections, privateLinkConfigurations, probes, provisioningState, redirectConfigurations, requestRoutingRules, resourceGuid, rewriteRuleSets, sku, sslCertificates, sslPolicy, sslProfiles, tags, trustedClientCertificates, trustedRootCertificates, type, urlPathMaps, webApplicationFirewallConfiguration, zones);
        }
    }
}
