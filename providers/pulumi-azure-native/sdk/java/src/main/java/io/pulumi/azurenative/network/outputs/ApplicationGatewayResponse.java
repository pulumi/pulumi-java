// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.ApplicationGatewayAuthenticationCertificateResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayAutoscaleConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayBackendAddressPoolResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayBackendHttpSettingsResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayCustomErrorResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayFrontendIPConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayFrontendPortResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayHttpListenerResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayIPConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayPrivateEndpointConnectionResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayPrivateLinkConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayProbeResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayRedirectConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayRequestRoutingRuleResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayRewriteRuleSetResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewaySkuResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewaySslCertificateResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewaySslPolicyResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewaySslProfileResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayTrustedClientCertificateResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayTrustedRootCertificateResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayUrlPathMapResponse;
import io.pulumi.azurenative.network.outputs.ApplicationGatewayWebApplicationFirewallConfigurationResponse;
import io.pulumi.azurenative.network.outputs.ManagedServiceIdentityResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGatewayResponse {
    /**
     * Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates;
    /**
     * Autoscale Configuration.
     * 
     */
    private final @Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration;
    /**
     * Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools;
    /**
     * Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection;
    /**
     * Custom error configurations of the application gateway resource.
     * 
     */
    private final @Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations;
    /**
     * Whether FIPS is enabled on the application gateway resource.
     * 
     */
    private final @Nullable Boolean enableFips;
    /**
     * Whether HTTP2 is enabled on the application gateway resource.
     * 
     */
    private final @Nullable Boolean enableHttp2;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private final String etag;
    /**
     * Reference to the FirewallPolicy resource.
     * 
     */
    private final @Nullable SubResourceResponse firewallPolicy;
    /**
     * If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
     * 
     */
    private final @Nullable Boolean forceFirewallPolicyAssociation;
    /**
     * Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations;
    /**
     * Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts;
    /**
     * Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations;
    /**
     * Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners;
    /**
     * Resource ID.
     * 
     */
    private final @Nullable String id;
    /**
     * The identity of the application gateway, if configured.
     * 
     */
    private final @Nullable ManagedServiceIdentityResponse identity;
    /**
     * Resource location.
     * 
     */
    private final @Nullable String location;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * Operational state of the application gateway resource.
     * 
     */
    private final String operationalState;
    /**
     * Private Endpoint connections on application gateway.
     * 
     */
    private final List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * PrivateLink configurations on application gateway.
     * 
     */
    private final @Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations;
    /**
     * Probes of the application gateway resource.
     * 
     */
    private final @Nullable List<ApplicationGatewayProbeResponse> probes;
    /**
     * The provisioning state of the application gateway resource.
     * 
     */
    private final String provisioningState;
    /**
     * Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations;
    /**
     * Request routing rules of the application gateway resource.
     * 
     */
    private final @Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules;
    /**
     * The resource GUID property of the application gateway resource.
     * 
     */
    private final String resourceGuid;
    /**
     * Rewrite rules for the application gateway resource.
     * 
     */
    private final @Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets;
    /**
     * SKU of the application gateway resource.
     * 
     */
    private final @Nullable ApplicationGatewaySkuResponse sku;
    /**
     * SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates;
    /**
     * SSL policy of the application gateway resource.
     * 
     */
    private final @Nullable ApplicationGatewaySslPolicyResponse sslPolicy;
    /**
     * SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates;
    /**
     * Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates;
    /**
     * Resource type.
     * 
     */
    private final String type;
    /**
     * URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
     */
    private final @Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps;
    /**
     * Web application firewall configuration.
     * 
     */
    private final @Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration;
    /**
     * A list of availability zones denoting where the resource needs to come from.
     * 
     */
    private final @Nullable List<String> zones;

    @CustomType.Constructor
    private ApplicationGatewayResponse(
        @CustomType.Parameter("authenticationCertificates") @Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates,
        @CustomType.Parameter("autoscaleConfiguration") @Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration,
        @CustomType.Parameter("backendAddressPools") @Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools,
        @CustomType.Parameter("backendHttpSettingsCollection") @Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection,
        @CustomType.Parameter("customErrorConfigurations") @Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations,
        @CustomType.Parameter("enableFips") @Nullable Boolean enableFips,
        @CustomType.Parameter("enableHttp2") @Nullable Boolean enableHttp2,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("firewallPolicy") @Nullable SubResourceResponse firewallPolicy,
        @CustomType.Parameter("forceFirewallPolicyAssociation") @Nullable Boolean forceFirewallPolicyAssociation,
        @CustomType.Parameter("frontendIPConfigurations") @Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations,
        @CustomType.Parameter("frontendPorts") @Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts,
        @CustomType.Parameter("gatewayIPConfigurations") @Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations,
        @CustomType.Parameter("httpListeners") @Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("identity") @Nullable ManagedServiceIdentityResponse identity,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("operationalState") String operationalState,
        @CustomType.Parameter("privateEndpointConnections") List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections,
        @CustomType.Parameter("privateLinkConfigurations") @Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations,
        @CustomType.Parameter("probes") @Nullable List<ApplicationGatewayProbeResponse> probes,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("redirectConfigurations") @Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations,
        @CustomType.Parameter("requestRoutingRules") @Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules,
        @CustomType.Parameter("resourceGuid") String resourceGuid,
        @CustomType.Parameter("rewriteRuleSets") @Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets,
        @CustomType.Parameter("sku") @Nullable ApplicationGatewaySkuResponse sku,
        @CustomType.Parameter("sslCertificates") @Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates,
        @CustomType.Parameter("sslPolicy") @Nullable ApplicationGatewaySslPolicyResponse sslPolicy,
        @CustomType.Parameter("sslProfiles") @Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("trustedClientCertificates") @Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates,
        @CustomType.Parameter("trustedRootCertificates") @Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("urlPathMaps") @Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps,
        @CustomType.Parameter("webApplicationFirewallConfiguration") @Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration,
        @CustomType.Parameter("zones") @Nullable List<String> zones) {
        this.authenticationCertificates = authenticationCertificates;
        this.autoscaleConfiguration = autoscaleConfiguration;
        this.backendAddressPools = backendAddressPools;
        this.backendHttpSettingsCollection = backendHttpSettingsCollection;
        this.customErrorConfigurations = customErrorConfigurations;
        this.enableFips = enableFips;
        this.enableHttp2 = enableHttp2;
        this.etag = etag;
        this.firewallPolicy = firewallPolicy;
        this.forceFirewallPolicyAssociation = forceFirewallPolicyAssociation;
        this.frontendIPConfigurations = frontendIPConfigurations;
        this.frontendPorts = frontendPorts;
        this.gatewayIPConfigurations = gatewayIPConfigurations;
        this.httpListeners = httpListeners;
        this.id = id;
        this.identity = identity;
        this.location = location;
        this.name = name;
        this.operationalState = operationalState;
        this.privateEndpointConnections = privateEndpointConnections;
        this.privateLinkConfigurations = privateLinkConfigurations;
        this.probes = probes;
        this.provisioningState = provisioningState;
        this.redirectConfigurations = redirectConfigurations;
        this.requestRoutingRules = requestRoutingRules;
        this.resourceGuid = resourceGuid;
        this.rewriteRuleSets = rewriteRuleSets;
        this.sku = sku;
        this.sslCertificates = sslCertificates;
        this.sslPolicy = sslPolicy;
        this.sslProfiles = sslProfiles;
        this.tags = tags;
        this.trustedClientCertificates = trustedClientCertificates;
        this.trustedRootCertificates = trustedRootCertificates;
        this.type = type;
        this.urlPathMaps = urlPathMaps;
        this.webApplicationFirewallConfiguration = webApplicationFirewallConfiguration;
        this.zones = zones;
    }

    /**
     * Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates() {
        return this.authenticationCertificates == null ? List.of() : this.authenticationCertificates;
    }
    /**
     * Autoscale Configuration.
     * 
    */
    public Optional<ApplicationGatewayAutoscaleConfigurationResponse> autoscaleConfiguration() {
        return Optional.ofNullable(this.autoscaleConfiguration);
    }
    /**
     * Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools() {
        return this.backendAddressPools == null ? List.of() : this.backendAddressPools;
    }
    /**
     * Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection() {
        return this.backendHttpSettingsCollection == null ? List.of() : this.backendHttpSettingsCollection;
    }
    /**
     * Custom error configurations of the application gateway resource.
     * 
    */
    public List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations() {
        return this.customErrorConfigurations == null ? List.of() : this.customErrorConfigurations;
    }
    /**
     * Whether FIPS is enabled on the application gateway resource.
     * 
    */
    public Optional<Boolean> enableFips() {
        return Optional.ofNullable(this.enableFips);
    }
    /**
     * Whether HTTP2 is enabled on the application gateway resource.
     * 
    */
    public Optional<Boolean> enableHttp2() {
        return Optional.ofNullable(this.enableHttp2);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
    */
    public String etag() {
        return this.etag;
    }
    /**
     * Reference to the FirewallPolicy resource.
     * 
    */
    public Optional<SubResourceResponse> firewallPolicy() {
        return Optional.ofNullable(this.firewallPolicy);
    }
    /**
     * If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
     * 
    */
    public Optional<Boolean> forceFirewallPolicyAssociation() {
        return Optional.ofNullable(this.forceFirewallPolicyAssociation);
    }
    /**
     * Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations() {
        return this.frontendIPConfigurations == null ? List.of() : this.frontendIPConfigurations;
    }
    /**
     * Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayFrontendPortResponse> frontendPorts() {
        return this.frontendPorts == null ? List.of() : this.frontendPorts;
    }
    /**
     * Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations() {
        return this.gatewayIPConfigurations == null ? List.of() : this.gatewayIPConfigurations;
    }
    /**
     * Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayHttpListenerResponse> httpListeners() {
        return this.httpListeners == null ? List.of() : this.httpListeners;
    }
    /**
     * Resource ID.
     * 
    */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * The identity of the application gateway, if configured.
     * 
    */
    public Optional<ManagedServiceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * Resource location.
     * 
    */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * Resource name.
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Operational state of the application gateway resource.
     * 
    */
    public String operationalState() {
        return this.operationalState;
    }
    /**
     * Private Endpoint connections on application gateway.
     * 
    */
    public List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * PrivateLink configurations on application gateway.
     * 
    */
    public List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations() {
        return this.privateLinkConfigurations == null ? List.of() : this.privateLinkConfigurations;
    }
    /**
     * Probes of the application gateway resource.
     * 
    */
    public List<ApplicationGatewayProbeResponse> probes() {
        return this.probes == null ? List.of() : this.probes;
    }
    /**
     * The provisioning state of the application gateway resource.
     * 
    */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations() {
        return this.redirectConfigurations == null ? List.of() : this.redirectConfigurations;
    }
    /**
     * Request routing rules of the application gateway resource.
     * 
    */
    public List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules() {
        return this.requestRoutingRules == null ? List.of() : this.requestRoutingRules;
    }
    /**
     * The resource GUID property of the application gateway resource.
     * 
    */
    public String resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * Rewrite rules for the application gateway resource.
     * 
    */
    public List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets() {
        return this.rewriteRuleSets == null ? List.of() : this.rewriteRuleSets;
    }
    /**
     * SKU of the application gateway resource.
     * 
    */
    public Optional<ApplicationGatewaySkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewaySslCertificateResponse> sslCertificates() {
        return this.sslCertificates == null ? List.of() : this.sslCertificates;
    }
    /**
     * SSL policy of the application gateway resource.
     * 
    */
    public Optional<ApplicationGatewaySslPolicyResponse> sslPolicy() {
        return Optional.ofNullable(this.sslPolicy);
    }
    /**
     * SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewaySslProfileResponse> sslProfiles() {
        return this.sslProfiles == null ? List.of() : this.sslProfiles;
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates() {
        return this.trustedClientCertificates == null ? List.of() : this.trustedClientCertificates;
    }
    /**
     * Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates() {
        return this.trustedRootCertificates == null ? List.of() : this.trustedRootCertificates;
    }
    /**
     * Resource type.
     * 
    */
    public String type() {
        return this.type;
    }
    /**
     * URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
     * 
    */
    public List<ApplicationGatewayUrlPathMapResponse> urlPathMaps() {
        return this.urlPathMaps == null ? List.of() : this.urlPathMaps;
    }
    /**
     * Web application firewall configuration.
     * 
    */
    public Optional<ApplicationGatewayWebApplicationFirewallConfigurationResponse> webApplicationFirewallConfiguration() {
        return Optional.ofNullable(this.webApplicationFirewallConfiguration);
    }
    /**
     * A list of availability zones denoting where the resource needs to come from.
     * 
    */
    public List<String> zones() {
        return this.zones == null ? List.of() : this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewayResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates;
        private @Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration;
        private @Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools;
        private @Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection;
        private @Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations;
        private @Nullable Boolean enableFips;
        private @Nullable Boolean enableHttp2;
        private String etag;
        private @Nullable SubResourceResponse firewallPolicy;
        private @Nullable Boolean forceFirewallPolicyAssociation;
        private @Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations;
        private @Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts;
        private @Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations;
        private @Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners;
        private @Nullable String id;
        private @Nullable ManagedServiceIdentityResponse identity;
        private @Nullable String location;
        private String name;
        private String operationalState;
        private List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections;
        private @Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations;
        private @Nullable List<ApplicationGatewayProbeResponse> probes;
        private String provisioningState;
        private @Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations;
        private @Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules;
        private String resourceGuid;
        private @Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets;
        private @Nullable ApplicationGatewaySkuResponse sku;
        private @Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates;
        private @Nullable ApplicationGatewaySslPolicyResponse sslPolicy;
        private @Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles;
        private @Nullable Map<String,String> tags;
        private @Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates;
        private @Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates;
        private String type;
        private @Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps;
        private @Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration;
        private @Nullable List<String> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationGatewayResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationCertificates = defaults.authenticationCertificates;
    	      this.autoscaleConfiguration = defaults.autoscaleConfiguration;
    	      this.backendAddressPools = defaults.backendAddressPools;
    	      this.backendHttpSettingsCollection = defaults.backendHttpSettingsCollection;
    	      this.customErrorConfigurations = defaults.customErrorConfigurations;
    	      this.enableFips = defaults.enableFips;
    	      this.enableHttp2 = defaults.enableHttp2;
    	      this.etag = defaults.etag;
    	      this.firewallPolicy = defaults.firewallPolicy;
    	      this.forceFirewallPolicyAssociation = defaults.forceFirewallPolicyAssociation;
    	      this.frontendIPConfigurations = defaults.frontendIPConfigurations;
    	      this.frontendPorts = defaults.frontendPorts;
    	      this.gatewayIPConfigurations = defaults.gatewayIPConfigurations;
    	      this.httpListeners = defaults.httpListeners;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.operationalState = defaults.operationalState;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.privateLinkConfigurations = defaults.privateLinkConfigurations;
    	      this.probes = defaults.probes;
    	      this.provisioningState = defaults.provisioningState;
    	      this.redirectConfigurations = defaults.redirectConfigurations;
    	      this.requestRoutingRules = defaults.requestRoutingRules;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.rewriteRuleSets = defaults.rewriteRuleSets;
    	      this.sku = defaults.sku;
    	      this.sslCertificates = defaults.sslCertificates;
    	      this.sslPolicy = defaults.sslPolicy;
    	      this.sslProfiles = defaults.sslProfiles;
    	      this.tags = defaults.tags;
    	      this.trustedClientCertificates = defaults.trustedClientCertificates;
    	      this.trustedRootCertificates = defaults.trustedRootCertificates;
    	      this.type = defaults.type;
    	      this.urlPathMaps = defaults.urlPathMaps;
    	      this.webApplicationFirewallConfiguration = defaults.webApplicationFirewallConfiguration;
    	      this.zones = defaults.zones;
        }

        public Builder authenticationCertificates(@Nullable List<ApplicationGatewayAuthenticationCertificateResponse> authenticationCertificates) {
            this.authenticationCertificates = authenticationCertificates;
            return this;
        }
        public Builder authenticationCertificates(ApplicationGatewayAuthenticationCertificateResponse... authenticationCertificates) {
            return authenticationCertificates(List.of(authenticationCertificates));
        }
        public Builder autoscaleConfiguration(@Nullable ApplicationGatewayAutoscaleConfigurationResponse autoscaleConfiguration) {
            this.autoscaleConfiguration = autoscaleConfiguration;
            return this;
        }
        public Builder backendAddressPools(@Nullable List<ApplicationGatewayBackendAddressPoolResponse> backendAddressPools) {
            this.backendAddressPools = backendAddressPools;
            return this;
        }
        public Builder backendAddressPools(ApplicationGatewayBackendAddressPoolResponse... backendAddressPools) {
            return backendAddressPools(List.of(backendAddressPools));
        }
        public Builder backendHttpSettingsCollection(@Nullable List<ApplicationGatewayBackendHttpSettingsResponse> backendHttpSettingsCollection) {
            this.backendHttpSettingsCollection = backendHttpSettingsCollection;
            return this;
        }
        public Builder backendHttpSettingsCollection(ApplicationGatewayBackendHttpSettingsResponse... backendHttpSettingsCollection) {
            return backendHttpSettingsCollection(List.of(backendHttpSettingsCollection));
        }
        public Builder customErrorConfigurations(@Nullable List<ApplicationGatewayCustomErrorResponse> customErrorConfigurations) {
            this.customErrorConfigurations = customErrorConfigurations;
            return this;
        }
        public Builder customErrorConfigurations(ApplicationGatewayCustomErrorResponse... customErrorConfigurations) {
            return customErrorConfigurations(List.of(customErrorConfigurations));
        }
        public Builder enableFips(@Nullable Boolean enableFips) {
            this.enableFips = enableFips;
            return this;
        }
        public Builder enableHttp2(@Nullable Boolean enableHttp2) {
            this.enableHttp2 = enableHttp2;
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder firewallPolicy(@Nullable SubResourceResponse firewallPolicy) {
            this.firewallPolicy = firewallPolicy;
            return this;
        }
        public Builder forceFirewallPolicyAssociation(@Nullable Boolean forceFirewallPolicyAssociation) {
            this.forceFirewallPolicyAssociation = forceFirewallPolicyAssociation;
            return this;
        }
        public Builder frontendIPConfigurations(@Nullable List<ApplicationGatewayFrontendIPConfigurationResponse> frontendIPConfigurations) {
            this.frontendIPConfigurations = frontendIPConfigurations;
            return this;
        }
        public Builder frontendIPConfigurations(ApplicationGatewayFrontendIPConfigurationResponse... frontendIPConfigurations) {
            return frontendIPConfigurations(List.of(frontendIPConfigurations));
        }
        public Builder frontendPorts(@Nullable List<ApplicationGatewayFrontendPortResponse> frontendPorts) {
            this.frontendPorts = frontendPorts;
            return this;
        }
        public Builder frontendPorts(ApplicationGatewayFrontendPortResponse... frontendPorts) {
            return frontendPorts(List.of(frontendPorts));
        }
        public Builder gatewayIPConfigurations(@Nullable List<ApplicationGatewayIPConfigurationResponse> gatewayIPConfigurations) {
            this.gatewayIPConfigurations = gatewayIPConfigurations;
            return this;
        }
        public Builder gatewayIPConfigurations(ApplicationGatewayIPConfigurationResponse... gatewayIPConfigurations) {
            return gatewayIPConfigurations(List.of(gatewayIPConfigurations));
        }
        public Builder httpListeners(@Nullable List<ApplicationGatewayHttpListenerResponse> httpListeners) {
            this.httpListeners = httpListeners;
            return this;
        }
        public Builder httpListeners(ApplicationGatewayHttpListenerResponse... httpListeners) {
            return httpListeners(List.of(httpListeners));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder identity(@Nullable ManagedServiceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder operationalState(String operationalState) {
            this.operationalState = Objects.requireNonNull(operationalState);
            return this;
        }
        public Builder privateEndpointConnections(List<ApplicationGatewayPrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }
        public Builder privateEndpointConnections(ApplicationGatewayPrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        public Builder privateLinkConfigurations(@Nullable List<ApplicationGatewayPrivateLinkConfigurationResponse> privateLinkConfigurations) {
            this.privateLinkConfigurations = privateLinkConfigurations;
            return this;
        }
        public Builder privateLinkConfigurations(ApplicationGatewayPrivateLinkConfigurationResponse... privateLinkConfigurations) {
            return privateLinkConfigurations(List.of(privateLinkConfigurations));
        }
        public Builder probes(@Nullable List<ApplicationGatewayProbeResponse> probes) {
            this.probes = probes;
            return this;
        }
        public Builder probes(ApplicationGatewayProbeResponse... probes) {
            return probes(List.of(probes));
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder redirectConfigurations(@Nullable List<ApplicationGatewayRedirectConfigurationResponse> redirectConfigurations) {
            this.redirectConfigurations = redirectConfigurations;
            return this;
        }
        public Builder redirectConfigurations(ApplicationGatewayRedirectConfigurationResponse... redirectConfigurations) {
            return redirectConfigurations(List.of(redirectConfigurations));
        }
        public Builder requestRoutingRules(@Nullable List<ApplicationGatewayRequestRoutingRuleResponse> requestRoutingRules) {
            this.requestRoutingRules = requestRoutingRules;
            return this;
        }
        public Builder requestRoutingRules(ApplicationGatewayRequestRoutingRuleResponse... requestRoutingRules) {
            return requestRoutingRules(List.of(requestRoutingRules));
        }
        public Builder resourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }
        public Builder rewriteRuleSets(@Nullable List<ApplicationGatewayRewriteRuleSetResponse> rewriteRuleSets) {
            this.rewriteRuleSets = rewriteRuleSets;
            return this;
        }
        public Builder rewriteRuleSets(ApplicationGatewayRewriteRuleSetResponse... rewriteRuleSets) {
            return rewriteRuleSets(List.of(rewriteRuleSets));
        }
        public Builder sku(@Nullable ApplicationGatewaySkuResponse sku) {
            this.sku = sku;
            return this;
        }
        public Builder sslCertificates(@Nullable List<ApplicationGatewaySslCertificateResponse> sslCertificates) {
            this.sslCertificates = sslCertificates;
            return this;
        }
        public Builder sslCertificates(ApplicationGatewaySslCertificateResponse... sslCertificates) {
            return sslCertificates(List.of(sslCertificates));
        }
        public Builder sslPolicy(@Nullable ApplicationGatewaySslPolicyResponse sslPolicy) {
            this.sslPolicy = sslPolicy;
            return this;
        }
        public Builder sslProfiles(@Nullable List<ApplicationGatewaySslProfileResponse> sslProfiles) {
            this.sslProfiles = sslProfiles;
            return this;
        }
        public Builder sslProfiles(ApplicationGatewaySslProfileResponse... sslProfiles) {
            return sslProfiles(List.of(sslProfiles));
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder trustedClientCertificates(@Nullable List<ApplicationGatewayTrustedClientCertificateResponse> trustedClientCertificates) {
            this.trustedClientCertificates = trustedClientCertificates;
            return this;
        }
        public Builder trustedClientCertificates(ApplicationGatewayTrustedClientCertificateResponse... trustedClientCertificates) {
            return trustedClientCertificates(List.of(trustedClientCertificates));
        }
        public Builder trustedRootCertificates(@Nullable List<ApplicationGatewayTrustedRootCertificateResponse> trustedRootCertificates) {
            this.trustedRootCertificates = trustedRootCertificates;
            return this;
        }
        public Builder trustedRootCertificates(ApplicationGatewayTrustedRootCertificateResponse... trustedRootCertificates) {
            return trustedRootCertificates(List.of(trustedRootCertificates));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder urlPathMaps(@Nullable List<ApplicationGatewayUrlPathMapResponse> urlPathMaps) {
            this.urlPathMaps = urlPathMaps;
            return this;
        }
        public Builder urlPathMaps(ApplicationGatewayUrlPathMapResponse... urlPathMaps) {
            return urlPathMaps(List.of(urlPathMaps));
        }
        public Builder webApplicationFirewallConfiguration(@Nullable ApplicationGatewayWebApplicationFirewallConfigurationResponse webApplicationFirewallConfiguration) {
            this.webApplicationFirewallConfiguration = webApplicationFirewallConfiguration;
            return this;
        }
        public Builder zones(@Nullable List<String> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }        public ApplicationGatewayResponse build() {
            return new ApplicationGatewayResponse(authenticationCertificates, autoscaleConfiguration, backendAddressPools, backendHttpSettingsCollection, customErrorConfigurations, enableFips, enableHttp2, etag, firewallPolicy, forceFirewallPolicyAssociation, frontendIPConfigurations, frontendPorts, gatewayIPConfigurations, httpListeners, id, identity, location, name, operationalState, privateEndpointConnections, privateLinkConfigurations, probes, provisioningState, redirectConfigurations, requestRoutingRules, resourceGuid, rewriteRuleSets, sku, sslCertificates, sslPolicy, sslProfiles, tags, trustedClientCertificates, trustedRootCertificates, type, urlPathMaps, webApplicationFirewallConfiguration, zones);
        }
    }
}
