// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storsimple;

import io.pulumi.azurenative.storsimple.enums.Kind;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccessControlRecordArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccessControlRecordArgs Empty = new AccessControlRecordArgs();

    /**
     * The name of the access control record.
     * 
     */
    @Import(name="accessControlRecordName")
      private final @Nullable Output<String> accessControlRecordName;

    public Output<String> getAccessControlRecordName() {
        return this.accessControlRecordName == null ? Codegen.empty() : this.accessControlRecordName;
    }

    /**
     * The iSCSI initiator name (IQN).
     * 
     */
    @Import(name="initiatorName", required=true)
      private final Output<String> initiatorName;

    public Output<String> getInitiatorName() {
        return this.initiatorName;
    }

    /**
     * The Kind of the object. Currently only Series8000 is supported
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<Kind> kind;

    public Output<Kind> getKind() {
        return this.kind == null ? Codegen.empty() : this.kind;
    }

    /**
     * The manager name
     * 
     */
    @Import(name="managerName", required=true)
      private final Output<String> managerName;

    public Output<String> getManagerName() {
        return this.managerName;
    }

    /**
     * The resource group name
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public AccessControlRecordArgs(
        @Nullable Output<String> accessControlRecordName,
        Output<String> initiatorName,
        @Nullable Output<Kind> kind,
        Output<String> managerName,
        Output<String> resourceGroupName) {
        this.accessControlRecordName = accessControlRecordName;
        this.initiatorName = Objects.requireNonNull(initiatorName, "expected parameter 'initiatorName' to be non-null");
        this.kind = kind;
        this.managerName = Objects.requireNonNull(managerName, "expected parameter 'managerName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private AccessControlRecordArgs() {
        this.accessControlRecordName = Codegen.empty();
        this.initiatorName = Codegen.empty();
        this.kind = Codegen.empty();
        this.managerName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessControlRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accessControlRecordName;
        private Output<String> initiatorName;
        private @Nullable Output<Kind> kind;
        private Output<String> managerName;
        private Output<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessControlRecordArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlRecordName = defaults.accessControlRecordName;
    	      this.initiatorName = defaults.initiatorName;
    	      this.kind = defaults.kind;
    	      this.managerName = defaults.managerName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder accessControlRecordName(@Nullable Output<String> accessControlRecordName) {
            this.accessControlRecordName = accessControlRecordName;
            return this;
        }
        public Builder accessControlRecordName(@Nullable String accessControlRecordName) {
            this.accessControlRecordName = Codegen.ofNullable(accessControlRecordName);
            return this;
        }
        public Builder initiatorName(Output<String> initiatorName) {
            this.initiatorName = Objects.requireNonNull(initiatorName);
            return this;
        }
        public Builder initiatorName(String initiatorName) {
            this.initiatorName = Output.of(Objects.requireNonNull(initiatorName));
            return this;
        }
        public Builder kind(@Nullable Output<Kind> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable Kind kind) {
            this.kind = Codegen.ofNullable(kind);
            return this;
        }
        public Builder managerName(Output<String> managerName) {
            this.managerName = Objects.requireNonNull(managerName);
            return this;
        }
        public Builder managerName(String managerName) {
            this.managerName = Output.of(Objects.requireNonNull(managerName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }        public AccessControlRecordArgs build() {
            return new AccessControlRecordArgs(accessControlRecordName, initiatorName, kind, managerName, resourceGroupName);
        }
    }
}
