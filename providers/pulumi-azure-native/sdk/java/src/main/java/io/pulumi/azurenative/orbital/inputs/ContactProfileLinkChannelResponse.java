// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.orbital.inputs;

import io.pulumi.azurenative.orbital.inputs.EndPointResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Contact Profile Link Channel
 * 
 */
public final class ContactProfileLinkChannelResponse extends io.pulumi.resources.InvokeArgs {

    public static final ContactProfileLinkChannelResponse Empty = new ContactProfileLinkChannelResponse();

    /**
     * Bandwidth in MHz
     * 
     */
    @InputImport(name="bandwidthMHz", required=true)
        private final Double bandwidthMHz;

    public Double getBandwidthMHz() {
        return this.bandwidthMHz;
    }

    /**
     * Center Frequency in MHz
     * 
     */
    @InputImport(name="centerFrequencyMHz", required=true)
        private final Double centerFrequencyMHz;

    public Double getCenterFrequencyMHz() {
        return this.centerFrequencyMHz;
    }

    /**
     * Configuration for decoding
     * 
     */
    @InputImport(name="decodingConfiguration")
        private final @Nullable String decodingConfiguration;

    public Optional<String> getDecodingConfiguration() {
        return this.decodingConfiguration == null ? Optional.empty() : Optional.ofNullable(this.decodingConfiguration);
    }

    /**
     * Configuration for demodulation
     * 
     */
    @InputImport(name="demodulationConfiguration")
        private final @Nullable String demodulationConfiguration;

    public Optional<String> getDemodulationConfiguration() {
        return this.demodulationConfiguration == null ? Optional.empty() : Optional.ofNullable(this.demodulationConfiguration);
    }

    /**
     * Configuration for encoding
     * 
     */
    @InputImport(name="encodingConfiguration")
        private final @Nullable String encodingConfiguration;

    public Optional<String> getEncodingConfiguration() {
        return this.encodingConfiguration == null ? Optional.empty() : Optional.ofNullable(this.encodingConfiguration);
    }

    /**
     * Customer End point to store/retrieve data during a contact.
     * 
     */
    @InputImport(name="endPoint", required=true)
        private final EndPointResponse endPoint;

    public EndPointResponse getEndPoint() {
        return this.endPoint;
    }

    /**
     * Configuration for modulation
     * 
     */
    @InputImport(name="modulationConfiguration")
        private final @Nullable String modulationConfiguration;

    public Optional<String> getModulationConfiguration() {
        return this.modulationConfiguration == null ? Optional.empty() : Optional.ofNullable(this.modulationConfiguration);
    }

    public ContactProfileLinkChannelResponse(
        Double bandwidthMHz,
        Double centerFrequencyMHz,
        @Nullable String decodingConfiguration,
        @Nullable String demodulationConfiguration,
        @Nullable String encodingConfiguration,
        EndPointResponse endPoint,
        @Nullable String modulationConfiguration) {
        this.bandwidthMHz = Objects.requireNonNull(bandwidthMHz, "expected parameter 'bandwidthMHz' to be non-null");
        this.centerFrequencyMHz = Objects.requireNonNull(centerFrequencyMHz, "expected parameter 'centerFrequencyMHz' to be non-null");
        this.decodingConfiguration = decodingConfiguration;
        this.demodulationConfiguration = demodulationConfiguration;
        this.encodingConfiguration = encodingConfiguration;
        this.endPoint = Objects.requireNonNull(endPoint, "expected parameter 'endPoint' to be non-null");
        this.modulationConfiguration = modulationConfiguration;
    }

    private ContactProfileLinkChannelResponse() {
        this.bandwidthMHz = null;
        this.centerFrequencyMHz = null;
        this.decodingConfiguration = null;
        this.demodulationConfiguration = null;
        this.encodingConfiguration = null;
        this.endPoint = null;
        this.modulationConfiguration = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactProfileLinkChannelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double bandwidthMHz;
        private Double centerFrequencyMHz;
        private @Nullable String decodingConfiguration;
        private @Nullable String demodulationConfiguration;
        private @Nullable String encodingConfiguration;
        private EndPointResponse endPoint;
        private @Nullable String modulationConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(ContactProfileLinkChannelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthMHz = defaults.bandwidthMHz;
    	      this.centerFrequencyMHz = defaults.centerFrequencyMHz;
    	      this.decodingConfiguration = defaults.decodingConfiguration;
    	      this.demodulationConfiguration = defaults.demodulationConfiguration;
    	      this.encodingConfiguration = defaults.encodingConfiguration;
    	      this.endPoint = defaults.endPoint;
    	      this.modulationConfiguration = defaults.modulationConfiguration;
        }

        public Builder setBandwidthMHz(Double bandwidthMHz) {
            this.bandwidthMHz = Objects.requireNonNull(bandwidthMHz);
            return this;
        }

        public Builder setCenterFrequencyMHz(Double centerFrequencyMHz) {
            this.centerFrequencyMHz = Objects.requireNonNull(centerFrequencyMHz);
            return this;
        }

        public Builder setDecodingConfiguration(@Nullable String decodingConfiguration) {
            this.decodingConfiguration = decodingConfiguration;
            return this;
        }

        public Builder setDemodulationConfiguration(@Nullable String demodulationConfiguration) {
            this.demodulationConfiguration = demodulationConfiguration;
            return this;
        }

        public Builder setEncodingConfiguration(@Nullable String encodingConfiguration) {
            this.encodingConfiguration = encodingConfiguration;
            return this;
        }

        public Builder setEndPoint(EndPointResponse endPoint) {
            this.endPoint = Objects.requireNonNull(endPoint);
            return this;
        }

        public Builder setModulationConfiguration(@Nullable String modulationConfiguration) {
            this.modulationConfiguration = modulationConfiguration;
            return this;
        }
        public ContactProfileLinkChannelResponse build() {
            return new ContactProfileLinkChannelResponse(bandwidthMHz, centerFrequencyMHz, decodingConfiguration, demodulationConfiguration, encodingConfiguration, endPoint, modulationConfiguration);
        }
    }
}
