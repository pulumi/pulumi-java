// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.azurenative.datamigration.outputs.ReportableExceptionResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse {
    private final String databaseName;
    private final String endedOn;
    private final List<ReportableExceptionResponse> exceptionsAndWarnings;
    private final String id;
    private final String message;
    private final String resultType;
    private final Double sizeMB;
    private final String stage;
    private final String startedOn;
    private final String state;

    @OutputCustomType.Constructor({"databaseName","endedOn","exceptionsAndWarnings","id","message","resultType","sizeMB","stage","startedOn","state"})
    private MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse(
        String databaseName,
        String endedOn,
        List<ReportableExceptionResponse> exceptionsAndWarnings,
        String id,
        String message,
        String resultType,
        Double sizeMB,
        String stage,
        String startedOn,
        String state) {
        this.databaseName = Objects.requireNonNull(databaseName);
        this.endedOn = Objects.requireNonNull(endedOn);
        this.exceptionsAndWarnings = Objects.requireNonNull(exceptionsAndWarnings);
        this.id = Objects.requireNonNull(id);
        this.message = Objects.requireNonNull(message);
        this.resultType = Objects.requireNonNull(resultType);
        this.sizeMB = Objects.requireNonNull(sizeMB);
        this.stage = Objects.requireNonNull(stage);
        this.startedOn = Objects.requireNonNull(startedOn);
        this.state = Objects.requireNonNull(state);
    }

    public String getDatabaseName() {
        return this.databaseName;
    }
    public String getEndedOn() {
        return this.endedOn;
    }
    public List<ReportableExceptionResponse> getExceptionsAndWarnings() {
        return this.exceptionsAndWarnings;
    }
    public String getId() {
        return this.id;
    }
    public String getMessage() {
        return this.message;
    }
    public String getResultType() {
        return this.resultType;
    }
    public Double getSizeMB() {
        return this.sizeMB;
    }
    public String getStage() {
        return this.stage;
    }
    public String getStartedOn() {
        return this.startedOn;
    }
    public String getState() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String databaseName;
        private String endedOn;
        private List<ReportableExceptionResponse> exceptionsAndWarnings;
        private String id;
        private String message;
        private String resultType;
        private Double sizeMB;
        private String stage;
        private String startedOn;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.endedOn = defaults.endedOn;
    	      this.exceptionsAndWarnings = defaults.exceptionsAndWarnings;
    	      this.id = defaults.id;
    	      this.message = defaults.message;
    	      this.resultType = defaults.resultType;
    	      this.sizeMB = defaults.sizeMB;
    	      this.stage = defaults.stage;
    	      this.startedOn = defaults.startedOn;
    	      this.state = defaults.state;
        }

        public Builder setDatabaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }

        public Builder setEndedOn(String endedOn) {
            this.endedOn = Objects.requireNonNull(endedOn);
            return this;
        }

        public Builder setExceptionsAndWarnings(List<ReportableExceptionResponse> exceptionsAndWarnings) {
            this.exceptionsAndWarnings = Objects.requireNonNull(exceptionsAndWarnings);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setMessage(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }

        public Builder setResultType(String resultType) {
            this.resultType = Objects.requireNonNull(resultType);
            return this;
        }

        public Builder setSizeMB(Double sizeMB) {
            this.sizeMB = Objects.requireNonNull(sizeMB);
            return this;
        }

        public Builder setStage(String stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }

        public Builder setStartedOn(String startedOn) {
            this.startedOn = Objects.requireNonNull(startedOn);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse build() {
            return new MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse(databaseName, endedOn, exceptionsAndWarnings, id, message, resultType, sizeMB, stage, startedOn, state);
        }
    }
}
