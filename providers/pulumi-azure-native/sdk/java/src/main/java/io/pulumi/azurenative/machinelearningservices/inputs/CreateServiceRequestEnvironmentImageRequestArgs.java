// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.inputs.EnvironmentImageRequestEnvironmentArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.EnvironmentImageRequestEnvironmentReferenceArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.ImageAssetArgs;
import io.pulumi.azurenative.machinelearningservices.inputs.ModelArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The Environment, models and assets needed for inferencing.
 * 
 */
public final class CreateServiceRequestEnvironmentImageRequestArgs extends io.pulumi.resources.ResourceArgs {

    public static final CreateServiceRequestEnvironmentImageRequestArgs Empty = new CreateServiceRequestEnvironmentImageRequestArgs();

    /**
     * The list of assets.
     * 
     */
    @Import(name="assets")
      private final @Nullable Output<List<ImageAssetArgs>> assets;

    public Output<List<ImageAssetArgs>> getAssets() {
        return this.assets == null ? Codegen.empty() : this.assets;
    }

    /**
     * The name of the driver file.
     * 
     */
    @Import(name="driverProgram")
      private final @Nullable Output<String> driverProgram;

    public Output<String> getDriverProgram() {
        return this.driverProgram == null ? Codegen.empty() : this.driverProgram;
    }

    /**
     * The details of the AZURE ML environment.
     * 
     */
    @Import(name="environment")
      private final @Nullable Output<EnvironmentImageRequestEnvironmentArgs> environment;

    public Output<EnvironmentImageRequestEnvironmentArgs> getEnvironment() {
        return this.environment == null ? Codegen.empty() : this.environment;
    }

    /**
     * The unique identifying details of the AZURE ML environment.
     * 
     */
    @Import(name="environmentReference")
      private final @Nullable Output<EnvironmentImageRequestEnvironmentReferenceArgs> environmentReference;

    public Output<EnvironmentImageRequestEnvironmentReferenceArgs> getEnvironmentReference() {
        return this.environmentReference == null ? Codegen.empty() : this.environmentReference;
    }

    /**
     * The list of model Ids.
     * 
     */
    @Import(name="modelIds")
      private final @Nullable Output<List<String>> modelIds;

    public Output<List<String>> getModelIds() {
        return this.modelIds == null ? Codegen.empty() : this.modelIds;
    }

    /**
     * The list of models.
     * 
     */
    @Import(name="models")
      private final @Nullable Output<List<ModelArgs>> models;

    public Output<List<ModelArgs>> getModels() {
        return this.models == null ? Codegen.empty() : this.models;
    }

    public CreateServiceRequestEnvironmentImageRequestArgs(
        @Nullable Output<List<ImageAssetArgs>> assets,
        @Nullable Output<String> driverProgram,
        @Nullable Output<EnvironmentImageRequestEnvironmentArgs> environment,
        @Nullable Output<EnvironmentImageRequestEnvironmentReferenceArgs> environmentReference,
        @Nullable Output<List<String>> modelIds,
        @Nullable Output<List<ModelArgs>> models) {
        this.assets = assets;
        this.driverProgram = driverProgram;
        this.environment = environment;
        this.environmentReference = environmentReference;
        this.modelIds = modelIds;
        this.models = models;
    }

    private CreateServiceRequestEnvironmentImageRequestArgs() {
        this.assets = Codegen.empty();
        this.driverProgram = Codegen.empty();
        this.environment = Codegen.empty();
        this.environmentReference = Codegen.empty();
        this.modelIds = Codegen.empty();
        this.models = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CreateServiceRequestEnvironmentImageRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ImageAssetArgs>> assets;
        private @Nullable Output<String> driverProgram;
        private @Nullable Output<EnvironmentImageRequestEnvironmentArgs> environment;
        private @Nullable Output<EnvironmentImageRequestEnvironmentReferenceArgs> environmentReference;
        private @Nullable Output<List<String>> modelIds;
        private @Nullable Output<List<ModelArgs>> models;

        public Builder() {
    	      // Empty
        }

        public Builder(CreateServiceRequestEnvironmentImageRequestArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assets = defaults.assets;
    	      this.driverProgram = defaults.driverProgram;
    	      this.environment = defaults.environment;
    	      this.environmentReference = defaults.environmentReference;
    	      this.modelIds = defaults.modelIds;
    	      this.models = defaults.models;
        }

        public Builder assets(@Nullable Output<List<ImageAssetArgs>> assets) {
            this.assets = assets;
            return this;
        }
        public Builder assets(@Nullable List<ImageAssetArgs> assets) {
            this.assets = Codegen.ofNullable(assets);
            return this;
        }
        public Builder assets(ImageAssetArgs... assets) {
            return assets(List.of(assets));
        }
        public Builder driverProgram(@Nullable Output<String> driverProgram) {
            this.driverProgram = driverProgram;
            return this;
        }
        public Builder driverProgram(@Nullable String driverProgram) {
            this.driverProgram = Codegen.ofNullable(driverProgram);
            return this;
        }
        public Builder environment(@Nullable Output<EnvironmentImageRequestEnvironmentArgs> environment) {
            this.environment = environment;
            return this;
        }
        public Builder environment(@Nullable EnvironmentImageRequestEnvironmentArgs environment) {
            this.environment = Codegen.ofNullable(environment);
            return this;
        }
        public Builder environmentReference(@Nullable Output<EnvironmentImageRequestEnvironmentReferenceArgs> environmentReference) {
            this.environmentReference = environmentReference;
            return this;
        }
        public Builder environmentReference(@Nullable EnvironmentImageRequestEnvironmentReferenceArgs environmentReference) {
            this.environmentReference = Codegen.ofNullable(environmentReference);
            return this;
        }
        public Builder modelIds(@Nullable Output<List<String>> modelIds) {
            this.modelIds = modelIds;
            return this;
        }
        public Builder modelIds(@Nullable List<String> modelIds) {
            this.modelIds = Codegen.ofNullable(modelIds);
            return this;
        }
        public Builder modelIds(String... modelIds) {
            return modelIds(List.of(modelIds));
        }
        public Builder models(@Nullable Output<List<ModelArgs>> models) {
            this.models = models;
            return this;
        }
        public Builder models(@Nullable List<ModelArgs> models) {
            this.models = Codegen.ofNullable(models);
            return this;
        }
        public Builder models(ModelArgs... models) {
            return models(List.of(models));
        }        public CreateServiceRequestEnvironmentImageRequestArgs build() {
            return new CreateServiceRequestEnvironmentImageRequestArgs(assets, driverProgram, environment, environmentReference, modelIds, models);
        }
    }
}
