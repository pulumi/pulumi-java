// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.network.enums.VpnGatewayTunnelingProtocol;
import io.pulumi.azurenative.network.inputs.IpsecPolicyArgs;
import io.pulumi.azurenative.network.inputs.P2SVpnServerConfigRadiusClientRootCertificateArgs;
import io.pulumi.azurenative.network.inputs.P2SVpnServerConfigRadiusServerRootCertificateArgs;
import io.pulumi.azurenative.network.inputs.P2SVpnServerConfigVpnClientRevokedCertificateArgs;
import io.pulumi.azurenative.network.inputs.P2SVpnServerConfigVpnClientRootCertificateArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class P2sVpnServerConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final P2sVpnServerConfigurationArgs Empty = new P2sVpnServerConfigurationArgs();

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Output.empty() : this.id;
    }

    /**
     * The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Radius client root certificate of P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigRadiusClientRootCertificates")
      private final @Nullable Output<List<P2SVpnServerConfigRadiusClientRootCertificateArgs>> p2SVpnServerConfigRadiusClientRootCertificates;

    public Output<List<P2SVpnServerConfigRadiusClientRootCertificateArgs>> getP2SVpnServerConfigRadiusClientRootCertificates() {
        return this.p2SVpnServerConfigRadiusClientRootCertificates == null ? Output.empty() : this.p2SVpnServerConfigRadiusClientRootCertificates;
    }

    /**
     * Radius Server root certificate of P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigRadiusServerRootCertificates")
      private final @Nullable Output<List<P2SVpnServerConfigRadiusServerRootCertificateArgs>> p2SVpnServerConfigRadiusServerRootCertificates;

    public Output<List<P2SVpnServerConfigRadiusServerRootCertificateArgs>> getP2SVpnServerConfigRadiusServerRootCertificates() {
        return this.p2SVpnServerConfigRadiusServerRootCertificates == null ? Output.empty() : this.p2SVpnServerConfigRadiusServerRootCertificates;
    }

    /**
     * VPN client revoked certificate of P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigVpnClientRevokedCertificates")
      private final @Nullable Output<List<P2SVpnServerConfigVpnClientRevokedCertificateArgs>> p2SVpnServerConfigVpnClientRevokedCertificates;

    public Output<List<P2SVpnServerConfigVpnClientRevokedCertificateArgs>> getP2SVpnServerConfigVpnClientRevokedCertificates() {
        return this.p2SVpnServerConfigVpnClientRevokedCertificates == null ? Output.empty() : this.p2SVpnServerConfigVpnClientRevokedCertificates;
    }

    /**
     * VPN client root certificate of P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigVpnClientRootCertificates")
      private final @Nullable Output<List<P2SVpnServerConfigVpnClientRootCertificateArgs>> p2SVpnServerConfigVpnClientRootCertificates;

    public Output<List<P2SVpnServerConfigVpnClientRootCertificateArgs>> getP2SVpnServerConfigVpnClientRootCertificates() {
        return this.p2SVpnServerConfigVpnClientRootCertificates == null ? Output.empty() : this.p2SVpnServerConfigVpnClientRootCertificates;
    }

    /**
     * The name of the P2SVpnServerConfiguration.
     * 
     */
    @Import(name="p2SVpnServerConfigurationName")
      private final @Nullable Output<String> p2SVpnServerConfigurationName;

    public Output<String> getP2SVpnServerConfigurationName() {
        return this.p2SVpnServerConfigurationName == null ? Output.empty() : this.p2SVpnServerConfigurationName;
    }

    /**
     * The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
     * 
     */
    @Import(name="radiusServerAddress")
      private final @Nullable Output<String> radiusServerAddress;

    public Output<String> getRadiusServerAddress() {
        return this.radiusServerAddress == null ? Output.empty() : this.radiusServerAddress;
    }

    /**
     * The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
     * 
     */
    @Import(name="radiusServerSecret")
      private final @Nullable Output<String> radiusServerSecret;

    public Output<String> getRadiusServerSecret() {
        return this.radiusServerSecret == null ? Output.empty() : this.radiusServerSecret;
    }

    /**
     * The resource group name of the VirtualWan.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the VirtualWan.
     * 
     */
    @Import(name="virtualWanName", required=true)
      private final Output<String> virtualWanName;

    public Output<String> getVirtualWanName() {
        return this.virtualWanName;
    }

    /**
     * VpnClientIpsecPolicies for P2SVpnServerConfiguration.
     * 
     */
    @Import(name="vpnClientIpsecPolicies")
      private final @Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies;

    public Output<List<IpsecPolicyArgs>> getVpnClientIpsecPolicies() {
        return this.vpnClientIpsecPolicies == null ? Output.empty() : this.vpnClientIpsecPolicies;
    }

    /**
     * VPN protocols for the P2SVpnServerConfiguration.
     * 
     */
    @Import(name="vpnProtocols")
      private final @Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols;

    public Output<List<Either<String,VpnGatewayTunnelingProtocol>>> getVpnProtocols() {
        return this.vpnProtocols == null ? Output.empty() : this.vpnProtocols;
    }

    public P2sVpnServerConfigurationArgs(
        @Nullable Output<String> id,
        @Nullable Output<String> name,
        @Nullable Output<List<P2SVpnServerConfigRadiusClientRootCertificateArgs>> p2SVpnServerConfigRadiusClientRootCertificates,
        @Nullable Output<List<P2SVpnServerConfigRadiusServerRootCertificateArgs>> p2SVpnServerConfigRadiusServerRootCertificates,
        @Nullable Output<List<P2SVpnServerConfigVpnClientRevokedCertificateArgs>> p2SVpnServerConfigVpnClientRevokedCertificates,
        @Nullable Output<List<P2SVpnServerConfigVpnClientRootCertificateArgs>> p2SVpnServerConfigVpnClientRootCertificates,
        @Nullable Output<String> p2SVpnServerConfigurationName,
        @Nullable Output<String> radiusServerAddress,
        @Nullable Output<String> radiusServerSecret,
        Output<String> resourceGroupName,
        Output<String> virtualWanName,
        @Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies,
        @Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols) {
        this.id = id;
        this.name = name;
        this.p2SVpnServerConfigRadiusClientRootCertificates = p2SVpnServerConfigRadiusClientRootCertificates;
        this.p2SVpnServerConfigRadiusServerRootCertificates = p2SVpnServerConfigRadiusServerRootCertificates;
        this.p2SVpnServerConfigVpnClientRevokedCertificates = p2SVpnServerConfigVpnClientRevokedCertificates;
        this.p2SVpnServerConfigVpnClientRootCertificates = p2SVpnServerConfigVpnClientRootCertificates;
        this.p2SVpnServerConfigurationName = p2SVpnServerConfigurationName;
        this.radiusServerAddress = radiusServerAddress;
        this.radiusServerSecret = radiusServerSecret;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.virtualWanName = Objects.requireNonNull(virtualWanName, "expected parameter 'virtualWanName' to be non-null");
        this.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
        this.vpnProtocols = vpnProtocols;
    }

    private P2sVpnServerConfigurationArgs() {
        this.id = Output.empty();
        this.name = Output.empty();
        this.p2SVpnServerConfigRadiusClientRootCertificates = Output.empty();
        this.p2SVpnServerConfigRadiusServerRootCertificates = Output.empty();
        this.p2SVpnServerConfigVpnClientRevokedCertificates = Output.empty();
        this.p2SVpnServerConfigVpnClientRootCertificates = Output.empty();
        this.p2SVpnServerConfigurationName = Output.empty();
        this.radiusServerAddress = Output.empty();
        this.radiusServerSecret = Output.empty();
        this.resourceGroupName = Output.empty();
        this.virtualWanName = Output.empty();
        this.vpnClientIpsecPolicies = Output.empty();
        this.vpnProtocols = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(P2sVpnServerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> id;
        private @Nullable Output<String> name;
        private @Nullable Output<List<P2SVpnServerConfigRadiusClientRootCertificateArgs>> p2SVpnServerConfigRadiusClientRootCertificates;
        private @Nullable Output<List<P2SVpnServerConfigRadiusServerRootCertificateArgs>> p2SVpnServerConfigRadiusServerRootCertificates;
        private @Nullable Output<List<P2SVpnServerConfigVpnClientRevokedCertificateArgs>> p2SVpnServerConfigVpnClientRevokedCertificates;
        private @Nullable Output<List<P2SVpnServerConfigVpnClientRootCertificateArgs>> p2SVpnServerConfigVpnClientRootCertificates;
        private @Nullable Output<String> p2SVpnServerConfigurationName;
        private @Nullable Output<String> radiusServerAddress;
        private @Nullable Output<String> radiusServerSecret;
        private Output<String> resourceGroupName;
        private Output<String> virtualWanName;
        private @Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies;
        private @Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols;

        public Builder() {
    	      // Empty
        }

        public Builder(P2sVpnServerConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.p2SVpnServerConfigRadiusClientRootCertificates = defaults.p2SVpnServerConfigRadiusClientRootCertificates;
    	      this.p2SVpnServerConfigRadiusServerRootCertificates = defaults.p2SVpnServerConfigRadiusServerRootCertificates;
    	      this.p2SVpnServerConfigVpnClientRevokedCertificates = defaults.p2SVpnServerConfigVpnClientRevokedCertificates;
    	      this.p2SVpnServerConfigVpnClientRootCertificates = defaults.p2SVpnServerConfigVpnClientRootCertificates;
    	      this.p2SVpnServerConfigurationName = defaults.p2SVpnServerConfigurationName;
    	      this.radiusServerAddress = defaults.radiusServerAddress;
    	      this.radiusServerSecret = defaults.radiusServerSecret;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.virtualWanName = defaults.virtualWanName;
    	      this.vpnClientIpsecPolicies = defaults.vpnClientIpsecPolicies;
    	      this.vpnProtocols = defaults.vpnProtocols;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Output.ofNullable(id);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder p2SVpnServerConfigRadiusClientRootCertificates(@Nullable Output<List<P2SVpnServerConfigRadiusClientRootCertificateArgs>> p2SVpnServerConfigRadiusClientRootCertificates) {
            this.p2SVpnServerConfigRadiusClientRootCertificates = p2SVpnServerConfigRadiusClientRootCertificates;
            return this;
        }
        public Builder p2SVpnServerConfigRadiusClientRootCertificates(@Nullable List<P2SVpnServerConfigRadiusClientRootCertificateArgs> p2SVpnServerConfigRadiusClientRootCertificates) {
            this.p2SVpnServerConfigRadiusClientRootCertificates = Output.ofNullable(p2SVpnServerConfigRadiusClientRootCertificates);
            return this;
        }
        public Builder p2SVpnServerConfigRadiusClientRootCertificates(P2SVpnServerConfigRadiusClientRootCertificateArgs... p2SVpnServerConfigRadiusClientRootCertificates) {
            return p2SVpnServerConfigRadiusClientRootCertificates(List.of(p2SVpnServerConfigRadiusClientRootCertificates));
        }
        public Builder p2SVpnServerConfigRadiusServerRootCertificates(@Nullable Output<List<P2SVpnServerConfigRadiusServerRootCertificateArgs>> p2SVpnServerConfigRadiusServerRootCertificates) {
            this.p2SVpnServerConfigRadiusServerRootCertificates = p2SVpnServerConfigRadiusServerRootCertificates;
            return this;
        }
        public Builder p2SVpnServerConfigRadiusServerRootCertificates(@Nullable List<P2SVpnServerConfigRadiusServerRootCertificateArgs> p2SVpnServerConfigRadiusServerRootCertificates) {
            this.p2SVpnServerConfigRadiusServerRootCertificates = Output.ofNullable(p2SVpnServerConfigRadiusServerRootCertificates);
            return this;
        }
        public Builder p2SVpnServerConfigRadiusServerRootCertificates(P2SVpnServerConfigRadiusServerRootCertificateArgs... p2SVpnServerConfigRadiusServerRootCertificates) {
            return p2SVpnServerConfigRadiusServerRootCertificates(List.of(p2SVpnServerConfigRadiusServerRootCertificates));
        }
        public Builder p2SVpnServerConfigVpnClientRevokedCertificates(@Nullable Output<List<P2SVpnServerConfigVpnClientRevokedCertificateArgs>> p2SVpnServerConfigVpnClientRevokedCertificates) {
            this.p2SVpnServerConfigVpnClientRevokedCertificates = p2SVpnServerConfigVpnClientRevokedCertificates;
            return this;
        }
        public Builder p2SVpnServerConfigVpnClientRevokedCertificates(@Nullable List<P2SVpnServerConfigVpnClientRevokedCertificateArgs> p2SVpnServerConfigVpnClientRevokedCertificates) {
            this.p2SVpnServerConfigVpnClientRevokedCertificates = Output.ofNullable(p2SVpnServerConfigVpnClientRevokedCertificates);
            return this;
        }
        public Builder p2SVpnServerConfigVpnClientRevokedCertificates(P2SVpnServerConfigVpnClientRevokedCertificateArgs... p2SVpnServerConfigVpnClientRevokedCertificates) {
            return p2SVpnServerConfigVpnClientRevokedCertificates(List.of(p2SVpnServerConfigVpnClientRevokedCertificates));
        }
        public Builder p2SVpnServerConfigVpnClientRootCertificates(@Nullable Output<List<P2SVpnServerConfigVpnClientRootCertificateArgs>> p2SVpnServerConfigVpnClientRootCertificates) {
            this.p2SVpnServerConfigVpnClientRootCertificates = p2SVpnServerConfigVpnClientRootCertificates;
            return this;
        }
        public Builder p2SVpnServerConfigVpnClientRootCertificates(@Nullable List<P2SVpnServerConfigVpnClientRootCertificateArgs> p2SVpnServerConfigVpnClientRootCertificates) {
            this.p2SVpnServerConfigVpnClientRootCertificates = Output.ofNullable(p2SVpnServerConfigVpnClientRootCertificates);
            return this;
        }
        public Builder p2SVpnServerConfigVpnClientRootCertificates(P2SVpnServerConfigVpnClientRootCertificateArgs... p2SVpnServerConfigVpnClientRootCertificates) {
            return p2SVpnServerConfigVpnClientRootCertificates(List.of(p2SVpnServerConfigVpnClientRootCertificates));
        }
        public Builder p2SVpnServerConfigurationName(@Nullable Output<String> p2SVpnServerConfigurationName) {
            this.p2SVpnServerConfigurationName = p2SVpnServerConfigurationName;
            return this;
        }
        public Builder p2SVpnServerConfigurationName(@Nullable String p2SVpnServerConfigurationName) {
            this.p2SVpnServerConfigurationName = Output.ofNullable(p2SVpnServerConfigurationName);
            return this;
        }
        public Builder radiusServerAddress(@Nullable Output<String> radiusServerAddress) {
            this.radiusServerAddress = radiusServerAddress;
            return this;
        }
        public Builder radiusServerAddress(@Nullable String radiusServerAddress) {
            this.radiusServerAddress = Output.ofNullable(radiusServerAddress);
            return this;
        }
        public Builder radiusServerSecret(@Nullable Output<String> radiusServerSecret) {
            this.radiusServerSecret = radiusServerSecret;
            return this;
        }
        public Builder radiusServerSecret(@Nullable String radiusServerSecret) {
            this.radiusServerSecret = Output.ofNullable(radiusServerSecret);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder virtualWanName(Output<String> virtualWanName) {
            this.virtualWanName = Objects.requireNonNull(virtualWanName);
            return this;
        }
        public Builder virtualWanName(String virtualWanName) {
            this.virtualWanName = Output.of(Objects.requireNonNull(virtualWanName));
            return this;
        }
        public Builder vpnClientIpsecPolicies(@Nullable Output<List<IpsecPolicyArgs>> vpnClientIpsecPolicies) {
            this.vpnClientIpsecPolicies = vpnClientIpsecPolicies;
            return this;
        }
        public Builder vpnClientIpsecPolicies(@Nullable List<IpsecPolicyArgs> vpnClientIpsecPolicies) {
            this.vpnClientIpsecPolicies = Output.ofNullable(vpnClientIpsecPolicies);
            return this;
        }
        public Builder vpnClientIpsecPolicies(IpsecPolicyArgs... vpnClientIpsecPolicies) {
            return vpnClientIpsecPolicies(List.of(vpnClientIpsecPolicies));
        }
        public Builder vpnProtocols(@Nullable Output<List<Either<String,VpnGatewayTunnelingProtocol>>> vpnProtocols) {
            this.vpnProtocols = vpnProtocols;
            return this;
        }
        public Builder vpnProtocols(@Nullable List<Either<String,VpnGatewayTunnelingProtocol>> vpnProtocols) {
            this.vpnProtocols = Output.ofNullable(vpnProtocols);
            return this;
        }
        public Builder vpnProtocols(Either<String,VpnGatewayTunnelingProtocol>... vpnProtocols) {
            return vpnProtocols(List.of(vpnProtocols));
        }        public P2sVpnServerConfigurationArgs build() {
            return new P2sVpnServerConfigurationArgs(id, name, p2SVpnServerConfigRadiusClientRootCertificates, p2SVpnServerConfigRadiusServerRootCertificates, p2SVpnServerConfigVpnClientRevokedCertificates, p2SVpnServerConfigVpnClientRootCertificates, p2SVpnServerConfigurationName, radiusServerAddress, radiusServerSecret, resourceGroupName, virtualWanName, vpnClientIpsecPolicies, vpnProtocols);
        }
    }
}
