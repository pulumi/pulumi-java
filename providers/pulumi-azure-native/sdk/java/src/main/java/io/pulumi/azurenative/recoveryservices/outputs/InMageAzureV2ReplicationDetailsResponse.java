// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.outputs;

import io.pulumi.azurenative.recoveryservices.outputs.AzureVmDiskDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.HealthErrorResponse;
import io.pulumi.azurenative.recoveryservices.outputs.InMageAzureV2ManagedDiskDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.InMageAzureV2ProtectedDiskDetailsResponse;
import io.pulumi.azurenative.recoveryservices.outputs.VMNicDetailsResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InMageAzureV2ReplicationDetailsResponse {
    /**
     * Agent expiry date.
     * 
     */
    private final @Nullable String agentExpiryDate;
    /**
     * The agent version.
     * 
     */
    private final @Nullable String agentVersion;
    /**
     * Azure VM Disk details.
     * 
     */
    private final @Nullable List<AzureVmDiskDetailsResponse> azureVMDiskDetails;
    /**
     * The compressed data change rate in MB.
     * 
     */
    private final @Nullable Double compressedDataRateInMB;
    /**
     * The data stores of the on-premise machine. Value can be list of strings that contain data store names.
     * 
     */
    private final @Nullable List<String> datastores;
    /**
     * A value indicating the discovery type of the machine. Value can be vCenter or physical.
     * 
     */
    private final @Nullable String discoveryType;
    /**
     * A value indicating whether any disk is resized for this VM.
     * 
     */
    private final @Nullable String diskResized;
    /**
     * The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     * 
     */
    private final @Nullable String enableRdpOnTargetOption;
    /**
     * The infrastructure VM Id.
     * 
     */
    private final @Nullable String infrastructureVmId;
    /**
     * Gets the Instance type.
     * Expected value is 'InMageAzureV2'.
     * 
     */
    private final String instanceType;
    /**
     * The source IP address.
     * 
     */
    private final @Nullable String ipAddress;
    /**
     * A value indicating whether installed agent needs to be updated.
     * 
     */
    private final @Nullable String isAgentUpdateRequired;
    /**
     * A value indicating whether the source server requires a restart after update.
     * 
     */
    private final @Nullable String isRebootAfterUpdateRequired;
    /**
     * The last heartbeat received from the source server.
     * 
     */
    private final @Nullable String lastHeartbeat;
    /**
     * The last RPO calculated time.
     * 
     */
    private final @Nullable String lastRpoCalculatedTime;
    /**
     * The last update time received from on-prem components.
     * 
     */
    private final @Nullable String lastUpdateReceivedTime;
    /**
     * License Type of the VM to be used.
     * 
     */
    private final @Nullable String licenseType;
    /**
     * The master target Id.
     * 
     */
    private final @Nullable String masterTargetId;
    /**
     * The multi vm group Id.
     * 
     */
    private final @Nullable String multiVmGroupId;
    /**
     * The multi vm group name.
     * 
     */
    private final @Nullable String multiVmGroupName;
    /**
     * A value indicating whether multi vm sync is enabled or disabled.
     * 
     */
    private final @Nullable String multiVmSyncStatus;
    /**
     * The id of the disk containing the OS.
     * 
     */
    private final @Nullable String osDiskId;
    /**
     * The type of the OS on the VM.
     * 
     */
    private final @Nullable String osType;
    /**
     * The OS Version of the protected item.
     * 
     */
    private final @Nullable String osVersion;
    /**
     * The process server Id.
     * 
     */
    private final @Nullable String processServerId;
    /**
     * The process server name.
     * 
     */
    private final String processServerName;
    /**
     * The list of protected disks.
     * 
     */
    private final @Nullable List<InMageAzureV2ProtectedDiskDetailsResponse> protectedDisks;
    /**
     * The list of protected managed disks.
     * 
     */
    private final @Nullable List<InMageAzureV2ManagedDiskDetailsResponse> protectedManagedDisks;
    /**
     * The protection stage.
     * 
     */
    private final @Nullable String protectionStage;
    /**
     * The recovery availability set Id.
     * 
     */
    private final @Nullable String recoveryAvailabilitySetId;
    /**
     * The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
     * 
     */
    private final @Nullable String recoveryAzureLogStorageAccountId;
    /**
     * The target resource group Id.
     * 
     */
    private final @Nullable String recoveryAzureResourceGroupId;
    /**
     * The recovery Azure storage account.
     * 
     */
    private final @Nullable String recoveryAzureStorageAccount;
    /**
     * Recovery Azure given name.
     * 
     */
    private final @Nullable String recoveryAzureVMName;
    /**
     * The Recovery Azure VM size.
     * 
     */
    private final @Nullable String recoveryAzureVMSize;
    /**
     * The replica id of the protected item.
     * 
     */
    private final @Nullable String replicaId;
    /**
     * The resync progress percentage.
     * 
     */
    private final @Nullable Integer resyncProgressPercentage;
    /**
     * The RPO in seconds.
     * 
     */
    private final @Nullable Double rpoInSeconds;
    /**
     * The selected recovery azure network Id.
     * 
     */
    private final @Nullable String selectedRecoveryAzureNetworkId;
    /**
     * The selected source nic Id which will be used as the primary nic during failover.
     * 
     */
    private final @Nullable String selectedSourceNicId;
    /**
     * The test failover virtual network.
     * 
     */
    private final @Nullable String selectedTfoAzureNetworkId;
    /**
     * The CPU count of the VM on the primary side.
     * 
     */
    private final @Nullable Integer sourceVmCpuCount;
    /**
     * The RAM size of the VM on the primary side.
     * 
     */
    private final @Nullable Integer sourceVmRamSizeInMB;
    /**
     * The target availability zone.
     * 
     */
    private final @Nullable String targetAvailabilityZone;
    /**
     * The target proximity placement group Id.
     * 
     */
    private final @Nullable String targetProximityPlacementGroupId;
    /**
     * The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
     * 
     */
    private final @Nullable String targetVmId;
    /**
     * The uncompressed data change rate in MB.
     * 
     */
    private final @Nullable Double uncompressedDataRateInMB;
    /**
     * A value indicating whether managed disks should be used during failover.
     * 
     */
    private final @Nullable String useManagedDisks;
    /**
     * The vCenter infrastructure Id.
     * 
     */
    private final @Nullable String vCenterInfrastructureId;
    /**
     * The validation errors of the on-premise machine Value can be list of validation errors.
     * 
     */
    private final @Nullable List<HealthErrorResponse> validationErrors;
    /**
     * The OS disk VHD name.
     * 
     */
    private final @Nullable String vhdName;
    /**
     * The virtual machine Id.
     * 
     */
    private final @Nullable String vmId;
    /**
     * The PE Network details.
     * 
     */
    private final @Nullable List<VMNicDetailsResponse> vmNics;
    /**
     * The protection state for the vm.
     * 
     */
    private final @Nullable String vmProtectionState;
    /**
     * The protection state description for the vm.
     * 
     */
    private final @Nullable String vmProtectionStateDescription;

    @CustomType.Constructor
    private InMageAzureV2ReplicationDetailsResponse(
        @CustomType.Parameter("agentExpiryDate") @Nullable String agentExpiryDate,
        @CustomType.Parameter("agentVersion") @Nullable String agentVersion,
        @CustomType.Parameter("azureVMDiskDetails") @Nullable List<AzureVmDiskDetailsResponse> azureVMDiskDetails,
        @CustomType.Parameter("compressedDataRateInMB") @Nullable Double compressedDataRateInMB,
        @CustomType.Parameter("datastores") @Nullable List<String> datastores,
        @CustomType.Parameter("discoveryType") @Nullable String discoveryType,
        @CustomType.Parameter("diskResized") @Nullable String diskResized,
        @CustomType.Parameter("enableRdpOnTargetOption") @Nullable String enableRdpOnTargetOption,
        @CustomType.Parameter("infrastructureVmId") @Nullable String infrastructureVmId,
        @CustomType.Parameter("instanceType") String instanceType,
        @CustomType.Parameter("ipAddress") @Nullable String ipAddress,
        @CustomType.Parameter("isAgentUpdateRequired") @Nullable String isAgentUpdateRequired,
        @CustomType.Parameter("isRebootAfterUpdateRequired") @Nullable String isRebootAfterUpdateRequired,
        @CustomType.Parameter("lastHeartbeat") @Nullable String lastHeartbeat,
        @CustomType.Parameter("lastRpoCalculatedTime") @Nullable String lastRpoCalculatedTime,
        @CustomType.Parameter("lastUpdateReceivedTime") @Nullable String lastUpdateReceivedTime,
        @CustomType.Parameter("licenseType") @Nullable String licenseType,
        @CustomType.Parameter("masterTargetId") @Nullable String masterTargetId,
        @CustomType.Parameter("multiVmGroupId") @Nullable String multiVmGroupId,
        @CustomType.Parameter("multiVmGroupName") @Nullable String multiVmGroupName,
        @CustomType.Parameter("multiVmSyncStatus") @Nullable String multiVmSyncStatus,
        @CustomType.Parameter("osDiskId") @Nullable String osDiskId,
        @CustomType.Parameter("osType") @Nullable String osType,
        @CustomType.Parameter("osVersion") @Nullable String osVersion,
        @CustomType.Parameter("processServerId") @Nullable String processServerId,
        @CustomType.Parameter("processServerName") String processServerName,
        @CustomType.Parameter("protectedDisks") @Nullable List<InMageAzureV2ProtectedDiskDetailsResponse> protectedDisks,
        @CustomType.Parameter("protectedManagedDisks") @Nullable List<InMageAzureV2ManagedDiskDetailsResponse> protectedManagedDisks,
        @CustomType.Parameter("protectionStage") @Nullable String protectionStage,
        @CustomType.Parameter("recoveryAvailabilitySetId") @Nullable String recoveryAvailabilitySetId,
        @CustomType.Parameter("recoveryAzureLogStorageAccountId") @Nullable String recoveryAzureLogStorageAccountId,
        @CustomType.Parameter("recoveryAzureResourceGroupId") @Nullable String recoveryAzureResourceGroupId,
        @CustomType.Parameter("recoveryAzureStorageAccount") @Nullable String recoveryAzureStorageAccount,
        @CustomType.Parameter("recoveryAzureVMName") @Nullable String recoveryAzureVMName,
        @CustomType.Parameter("recoveryAzureVMSize") @Nullable String recoveryAzureVMSize,
        @CustomType.Parameter("replicaId") @Nullable String replicaId,
        @CustomType.Parameter("resyncProgressPercentage") @Nullable Integer resyncProgressPercentage,
        @CustomType.Parameter("rpoInSeconds") @Nullable Double rpoInSeconds,
        @CustomType.Parameter("selectedRecoveryAzureNetworkId") @Nullable String selectedRecoveryAzureNetworkId,
        @CustomType.Parameter("selectedSourceNicId") @Nullable String selectedSourceNicId,
        @CustomType.Parameter("selectedTfoAzureNetworkId") @Nullable String selectedTfoAzureNetworkId,
        @CustomType.Parameter("sourceVmCpuCount") @Nullable Integer sourceVmCpuCount,
        @CustomType.Parameter("sourceVmRamSizeInMB") @Nullable Integer sourceVmRamSizeInMB,
        @CustomType.Parameter("targetAvailabilityZone") @Nullable String targetAvailabilityZone,
        @CustomType.Parameter("targetProximityPlacementGroupId") @Nullable String targetProximityPlacementGroupId,
        @CustomType.Parameter("targetVmId") @Nullable String targetVmId,
        @CustomType.Parameter("uncompressedDataRateInMB") @Nullable Double uncompressedDataRateInMB,
        @CustomType.Parameter("useManagedDisks") @Nullable String useManagedDisks,
        @CustomType.Parameter("vCenterInfrastructureId") @Nullable String vCenterInfrastructureId,
        @CustomType.Parameter("validationErrors") @Nullable List<HealthErrorResponse> validationErrors,
        @CustomType.Parameter("vhdName") @Nullable String vhdName,
        @CustomType.Parameter("vmId") @Nullable String vmId,
        @CustomType.Parameter("vmNics") @Nullable List<VMNicDetailsResponse> vmNics,
        @CustomType.Parameter("vmProtectionState") @Nullable String vmProtectionState,
        @CustomType.Parameter("vmProtectionStateDescription") @Nullable String vmProtectionStateDescription) {
        this.agentExpiryDate = agentExpiryDate;
        this.agentVersion = agentVersion;
        this.azureVMDiskDetails = azureVMDiskDetails;
        this.compressedDataRateInMB = compressedDataRateInMB;
        this.datastores = datastores;
        this.discoveryType = discoveryType;
        this.diskResized = diskResized;
        this.enableRdpOnTargetOption = enableRdpOnTargetOption;
        this.infrastructureVmId = infrastructureVmId;
        this.instanceType = instanceType;
        this.ipAddress = ipAddress;
        this.isAgentUpdateRequired = isAgentUpdateRequired;
        this.isRebootAfterUpdateRequired = isRebootAfterUpdateRequired;
        this.lastHeartbeat = lastHeartbeat;
        this.lastRpoCalculatedTime = lastRpoCalculatedTime;
        this.lastUpdateReceivedTime = lastUpdateReceivedTime;
        this.licenseType = licenseType;
        this.masterTargetId = masterTargetId;
        this.multiVmGroupId = multiVmGroupId;
        this.multiVmGroupName = multiVmGroupName;
        this.multiVmSyncStatus = multiVmSyncStatus;
        this.osDiskId = osDiskId;
        this.osType = osType;
        this.osVersion = osVersion;
        this.processServerId = processServerId;
        this.processServerName = processServerName;
        this.protectedDisks = protectedDisks;
        this.protectedManagedDisks = protectedManagedDisks;
        this.protectionStage = protectionStage;
        this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
        this.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
        this.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
        this.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
        this.recoveryAzureVMName = recoveryAzureVMName;
        this.recoveryAzureVMSize = recoveryAzureVMSize;
        this.replicaId = replicaId;
        this.resyncProgressPercentage = resyncProgressPercentage;
        this.rpoInSeconds = rpoInSeconds;
        this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
        this.selectedSourceNicId = selectedSourceNicId;
        this.selectedTfoAzureNetworkId = selectedTfoAzureNetworkId;
        this.sourceVmCpuCount = sourceVmCpuCount;
        this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
        this.targetAvailabilityZone = targetAvailabilityZone;
        this.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
        this.targetVmId = targetVmId;
        this.uncompressedDataRateInMB = uncompressedDataRateInMB;
        this.useManagedDisks = useManagedDisks;
        this.vCenterInfrastructureId = vCenterInfrastructureId;
        this.validationErrors = validationErrors;
        this.vhdName = vhdName;
        this.vmId = vmId;
        this.vmNics = vmNics;
        this.vmProtectionState = vmProtectionState;
        this.vmProtectionStateDescription = vmProtectionStateDescription;
    }

    /**
     * Agent expiry date.
     * 
    */
    public Optional<String> getAgentExpiryDate() {
        return Optional.ofNullable(this.agentExpiryDate);
    }
    /**
     * The agent version.
     * 
    */
    public Optional<String> getAgentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }
    /**
     * Azure VM Disk details.
     * 
    */
    public List<AzureVmDiskDetailsResponse> getAzureVMDiskDetails() {
        return this.azureVMDiskDetails == null ? List.of() : this.azureVMDiskDetails;
    }
    /**
     * The compressed data change rate in MB.
     * 
    */
    public Optional<Double> getCompressedDataRateInMB() {
        return Optional.ofNullable(this.compressedDataRateInMB);
    }
    /**
     * The data stores of the on-premise machine. Value can be list of strings that contain data store names.
     * 
    */
    public List<String> getDatastores() {
        return this.datastores == null ? List.of() : this.datastores;
    }
    /**
     * A value indicating the discovery type of the machine. Value can be vCenter or physical.
     * 
    */
    public Optional<String> getDiscoveryType() {
        return Optional.ofNullable(this.discoveryType);
    }
    /**
     * A value indicating whether any disk is resized for this VM.
     * 
    */
    public Optional<String> getDiskResized() {
        return Optional.ofNullable(this.diskResized);
    }
    /**
     * The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     * 
    */
    public Optional<String> getEnableRdpOnTargetOption() {
        return Optional.ofNullable(this.enableRdpOnTargetOption);
    }
    /**
     * The infrastructure VM Id.
     * 
    */
    public Optional<String> getInfrastructureVmId() {
        return Optional.ofNullable(this.infrastructureVmId);
    }
    /**
     * Gets the Instance type.
     * Expected value is 'InMageAzureV2'.
     * 
    */
    public String getInstanceType() {
        return this.instanceType;
    }
    /**
     * The source IP address.
     * 
    */
    public Optional<String> getIpAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * A value indicating whether installed agent needs to be updated.
     * 
    */
    public Optional<String> getIsAgentUpdateRequired() {
        return Optional.ofNullable(this.isAgentUpdateRequired);
    }
    /**
     * A value indicating whether the source server requires a restart after update.
     * 
    */
    public Optional<String> getIsRebootAfterUpdateRequired() {
        return Optional.ofNullable(this.isRebootAfterUpdateRequired);
    }
    /**
     * The last heartbeat received from the source server.
     * 
    */
    public Optional<String> getLastHeartbeat() {
        return Optional.ofNullable(this.lastHeartbeat);
    }
    /**
     * The last RPO calculated time.
     * 
    */
    public Optional<String> getLastRpoCalculatedTime() {
        return Optional.ofNullable(this.lastRpoCalculatedTime);
    }
    /**
     * The last update time received from on-prem components.
     * 
    */
    public Optional<String> getLastUpdateReceivedTime() {
        return Optional.ofNullable(this.lastUpdateReceivedTime);
    }
    /**
     * License Type of the VM to be used.
     * 
    */
    public Optional<String> getLicenseType() {
        return Optional.ofNullable(this.licenseType);
    }
    /**
     * The master target Id.
     * 
    */
    public Optional<String> getMasterTargetId() {
        return Optional.ofNullable(this.masterTargetId);
    }
    /**
     * The multi vm group Id.
     * 
    */
    public Optional<String> getMultiVmGroupId() {
        return Optional.ofNullable(this.multiVmGroupId);
    }
    /**
     * The multi vm group name.
     * 
    */
    public Optional<String> getMultiVmGroupName() {
        return Optional.ofNullable(this.multiVmGroupName);
    }
    /**
     * A value indicating whether multi vm sync is enabled or disabled.
     * 
    */
    public Optional<String> getMultiVmSyncStatus() {
        return Optional.ofNullable(this.multiVmSyncStatus);
    }
    /**
     * The id of the disk containing the OS.
     * 
    */
    public Optional<String> getOsDiskId() {
        return Optional.ofNullable(this.osDiskId);
    }
    /**
     * The type of the OS on the VM.
     * 
    */
    public Optional<String> getOsType() {
        return Optional.ofNullable(this.osType);
    }
    /**
     * The OS Version of the protected item.
     * 
    */
    public Optional<String> getOsVersion() {
        return Optional.ofNullable(this.osVersion);
    }
    /**
     * The process server Id.
     * 
    */
    public Optional<String> getProcessServerId() {
        return Optional.ofNullable(this.processServerId);
    }
    /**
     * The process server name.
     * 
    */
    public String getProcessServerName() {
        return this.processServerName;
    }
    /**
     * The list of protected disks.
     * 
    */
    public List<InMageAzureV2ProtectedDiskDetailsResponse> getProtectedDisks() {
        return this.protectedDisks == null ? List.of() : this.protectedDisks;
    }
    /**
     * The list of protected managed disks.
     * 
    */
    public List<InMageAzureV2ManagedDiskDetailsResponse> getProtectedManagedDisks() {
        return this.protectedManagedDisks == null ? List.of() : this.protectedManagedDisks;
    }
    /**
     * The protection stage.
     * 
    */
    public Optional<String> getProtectionStage() {
        return Optional.ofNullable(this.protectionStage);
    }
    /**
     * The recovery availability set Id.
     * 
    */
    public Optional<String> getRecoveryAvailabilitySetId() {
        return Optional.ofNullable(this.recoveryAvailabilitySetId);
    }
    /**
     * The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
     * 
    */
    public Optional<String> getRecoveryAzureLogStorageAccountId() {
        return Optional.ofNullable(this.recoveryAzureLogStorageAccountId);
    }
    /**
     * The target resource group Id.
     * 
    */
    public Optional<String> getRecoveryAzureResourceGroupId() {
        return Optional.ofNullable(this.recoveryAzureResourceGroupId);
    }
    /**
     * The recovery Azure storage account.
     * 
    */
    public Optional<String> getRecoveryAzureStorageAccount() {
        return Optional.ofNullable(this.recoveryAzureStorageAccount);
    }
    /**
     * Recovery Azure given name.
     * 
    */
    public Optional<String> getRecoveryAzureVMName() {
        return Optional.ofNullable(this.recoveryAzureVMName);
    }
    /**
     * The Recovery Azure VM size.
     * 
    */
    public Optional<String> getRecoveryAzureVMSize() {
        return Optional.ofNullable(this.recoveryAzureVMSize);
    }
    /**
     * The replica id of the protected item.
     * 
    */
    public Optional<String> getReplicaId() {
        return Optional.ofNullable(this.replicaId);
    }
    /**
     * The resync progress percentage.
     * 
    */
    public Optional<Integer> getResyncProgressPercentage() {
        return Optional.ofNullable(this.resyncProgressPercentage);
    }
    /**
     * The RPO in seconds.
     * 
    */
    public Optional<Double> getRpoInSeconds() {
        return Optional.ofNullable(this.rpoInSeconds);
    }
    /**
     * The selected recovery azure network Id.
     * 
    */
    public Optional<String> getSelectedRecoveryAzureNetworkId() {
        return Optional.ofNullable(this.selectedRecoveryAzureNetworkId);
    }
    /**
     * The selected source nic Id which will be used as the primary nic during failover.
     * 
    */
    public Optional<String> getSelectedSourceNicId() {
        return Optional.ofNullable(this.selectedSourceNicId);
    }
    /**
     * The test failover virtual network.
     * 
    */
    public Optional<String> getSelectedTfoAzureNetworkId() {
        return Optional.ofNullable(this.selectedTfoAzureNetworkId);
    }
    /**
     * The CPU count of the VM on the primary side.
     * 
    */
    public Optional<Integer> getSourceVmCpuCount() {
        return Optional.ofNullable(this.sourceVmCpuCount);
    }
    /**
     * The RAM size of the VM on the primary side.
     * 
    */
    public Optional<Integer> getSourceVmRamSizeInMB() {
        return Optional.ofNullable(this.sourceVmRamSizeInMB);
    }
    /**
     * The target availability zone.
     * 
    */
    public Optional<String> getTargetAvailabilityZone() {
        return Optional.ofNullable(this.targetAvailabilityZone);
    }
    /**
     * The target proximity placement group Id.
     * 
    */
    public Optional<String> getTargetProximityPlacementGroupId() {
        return Optional.ofNullable(this.targetProximityPlacementGroupId);
    }
    /**
     * The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
     * 
    */
    public Optional<String> getTargetVmId() {
        return Optional.ofNullable(this.targetVmId);
    }
    /**
     * The uncompressed data change rate in MB.
     * 
    */
    public Optional<Double> getUncompressedDataRateInMB() {
        return Optional.ofNullable(this.uncompressedDataRateInMB);
    }
    /**
     * A value indicating whether managed disks should be used during failover.
     * 
    */
    public Optional<String> getUseManagedDisks() {
        return Optional.ofNullable(this.useManagedDisks);
    }
    /**
     * The vCenter infrastructure Id.
     * 
    */
    public Optional<String> getVCenterInfrastructureId() {
        return Optional.ofNullable(this.vCenterInfrastructureId);
    }
    /**
     * The validation errors of the on-premise machine Value can be list of validation errors.
     * 
    */
    public List<HealthErrorResponse> getValidationErrors() {
        return this.validationErrors == null ? List.of() : this.validationErrors;
    }
    /**
     * The OS disk VHD name.
     * 
    */
    public Optional<String> getVhdName() {
        return Optional.ofNullable(this.vhdName);
    }
    /**
     * The virtual machine Id.
     * 
    */
    public Optional<String> getVmId() {
        return Optional.ofNullable(this.vmId);
    }
    /**
     * The PE Network details.
     * 
    */
    public List<VMNicDetailsResponse> getVmNics() {
        return this.vmNics == null ? List.of() : this.vmNics;
    }
    /**
     * The protection state for the vm.
     * 
    */
    public Optional<String> getVmProtectionState() {
        return Optional.ofNullable(this.vmProtectionState);
    }
    /**
     * The protection state description for the vm.
     * 
    */
    public Optional<String> getVmProtectionStateDescription() {
        return Optional.ofNullable(this.vmProtectionStateDescription);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InMageAzureV2ReplicationDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String agentExpiryDate;
        private @Nullable String agentVersion;
        private @Nullable List<AzureVmDiskDetailsResponse> azureVMDiskDetails;
        private @Nullable Double compressedDataRateInMB;
        private @Nullable List<String> datastores;
        private @Nullable String discoveryType;
        private @Nullable String diskResized;
        private @Nullable String enableRdpOnTargetOption;
        private @Nullable String infrastructureVmId;
        private String instanceType;
        private @Nullable String ipAddress;
        private @Nullable String isAgentUpdateRequired;
        private @Nullable String isRebootAfterUpdateRequired;
        private @Nullable String lastHeartbeat;
        private @Nullable String lastRpoCalculatedTime;
        private @Nullable String lastUpdateReceivedTime;
        private @Nullable String licenseType;
        private @Nullable String masterTargetId;
        private @Nullable String multiVmGroupId;
        private @Nullable String multiVmGroupName;
        private @Nullable String multiVmSyncStatus;
        private @Nullable String osDiskId;
        private @Nullable String osType;
        private @Nullable String osVersion;
        private @Nullable String processServerId;
        private String processServerName;
        private @Nullable List<InMageAzureV2ProtectedDiskDetailsResponse> protectedDisks;
        private @Nullable List<InMageAzureV2ManagedDiskDetailsResponse> protectedManagedDisks;
        private @Nullable String protectionStage;
        private @Nullable String recoveryAvailabilitySetId;
        private @Nullable String recoveryAzureLogStorageAccountId;
        private @Nullable String recoveryAzureResourceGroupId;
        private @Nullable String recoveryAzureStorageAccount;
        private @Nullable String recoveryAzureVMName;
        private @Nullable String recoveryAzureVMSize;
        private @Nullable String replicaId;
        private @Nullable Integer resyncProgressPercentage;
        private @Nullable Double rpoInSeconds;
        private @Nullable String selectedRecoveryAzureNetworkId;
        private @Nullable String selectedSourceNicId;
        private @Nullable String selectedTfoAzureNetworkId;
        private @Nullable Integer sourceVmCpuCount;
        private @Nullable Integer sourceVmRamSizeInMB;
        private @Nullable String targetAvailabilityZone;
        private @Nullable String targetProximityPlacementGroupId;
        private @Nullable String targetVmId;
        private @Nullable Double uncompressedDataRateInMB;
        private @Nullable String useManagedDisks;
        private @Nullable String vCenterInfrastructureId;
        private @Nullable List<HealthErrorResponse> validationErrors;
        private @Nullable String vhdName;
        private @Nullable String vmId;
        private @Nullable List<VMNicDetailsResponse> vmNics;
        private @Nullable String vmProtectionState;
        private @Nullable String vmProtectionStateDescription;

        public Builder() {
    	      // Empty
        }

        public Builder(InMageAzureV2ReplicationDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentExpiryDate = defaults.agentExpiryDate;
    	      this.agentVersion = defaults.agentVersion;
    	      this.azureVMDiskDetails = defaults.azureVMDiskDetails;
    	      this.compressedDataRateInMB = defaults.compressedDataRateInMB;
    	      this.datastores = defaults.datastores;
    	      this.discoveryType = defaults.discoveryType;
    	      this.diskResized = defaults.diskResized;
    	      this.enableRdpOnTargetOption = defaults.enableRdpOnTargetOption;
    	      this.infrastructureVmId = defaults.infrastructureVmId;
    	      this.instanceType = defaults.instanceType;
    	      this.ipAddress = defaults.ipAddress;
    	      this.isAgentUpdateRequired = defaults.isAgentUpdateRequired;
    	      this.isRebootAfterUpdateRequired = defaults.isRebootAfterUpdateRequired;
    	      this.lastHeartbeat = defaults.lastHeartbeat;
    	      this.lastRpoCalculatedTime = defaults.lastRpoCalculatedTime;
    	      this.lastUpdateReceivedTime = defaults.lastUpdateReceivedTime;
    	      this.licenseType = defaults.licenseType;
    	      this.masterTargetId = defaults.masterTargetId;
    	      this.multiVmGroupId = defaults.multiVmGroupId;
    	      this.multiVmGroupName = defaults.multiVmGroupName;
    	      this.multiVmSyncStatus = defaults.multiVmSyncStatus;
    	      this.osDiskId = defaults.osDiskId;
    	      this.osType = defaults.osType;
    	      this.osVersion = defaults.osVersion;
    	      this.processServerId = defaults.processServerId;
    	      this.processServerName = defaults.processServerName;
    	      this.protectedDisks = defaults.protectedDisks;
    	      this.protectedManagedDisks = defaults.protectedManagedDisks;
    	      this.protectionStage = defaults.protectionStage;
    	      this.recoveryAvailabilitySetId = defaults.recoveryAvailabilitySetId;
    	      this.recoveryAzureLogStorageAccountId = defaults.recoveryAzureLogStorageAccountId;
    	      this.recoveryAzureResourceGroupId = defaults.recoveryAzureResourceGroupId;
    	      this.recoveryAzureStorageAccount = defaults.recoveryAzureStorageAccount;
    	      this.recoveryAzureVMName = defaults.recoveryAzureVMName;
    	      this.recoveryAzureVMSize = defaults.recoveryAzureVMSize;
    	      this.replicaId = defaults.replicaId;
    	      this.resyncProgressPercentage = defaults.resyncProgressPercentage;
    	      this.rpoInSeconds = defaults.rpoInSeconds;
    	      this.selectedRecoveryAzureNetworkId = defaults.selectedRecoveryAzureNetworkId;
    	      this.selectedSourceNicId = defaults.selectedSourceNicId;
    	      this.selectedTfoAzureNetworkId = defaults.selectedTfoAzureNetworkId;
    	      this.sourceVmCpuCount = defaults.sourceVmCpuCount;
    	      this.sourceVmRamSizeInMB = defaults.sourceVmRamSizeInMB;
    	      this.targetAvailabilityZone = defaults.targetAvailabilityZone;
    	      this.targetProximityPlacementGroupId = defaults.targetProximityPlacementGroupId;
    	      this.targetVmId = defaults.targetVmId;
    	      this.uncompressedDataRateInMB = defaults.uncompressedDataRateInMB;
    	      this.useManagedDisks = defaults.useManagedDisks;
    	      this.vCenterInfrastructureId = defaults.vCenterInfrastructureId;
    	      this.validationErrors = defaults.validationErrors;
    	      this.vhdName = defaults.vhdName;
    	      this.vmId = defaults.vmId;
    	      this.vmNics = defaults.vmNics;
    	      this.vmProtectionState = defaults.vmProtectionState;
    	      this.vmProtectionStateDescription = defaults.vmProtectionStateDescription;
        }

        public Builder agentExpiryDate(@Nullable String agentExpiryDate) {
            this.agentExpiryDate = agentExpiryDate;
            return this;
        }
        public Builder agentVersion(@Nullable String agentVersion) {
            this.agentVersion = agentVersion;
            return this;
        }
        public Builder azureVMDiskDetails(@Nullable List<AzureVmDiskDetailsResponse> azureVMDiskDetails) {
            this.azureVMDiskDetails = azureVMDiskDetails;
            return this;
        }
        public Builder azureVMDiskDetails(AzureVmDiskDetailsResponse... azureVMDiskDetails) {
            return azureVMDiskDetails(List.of(azureVMDiskDetails));
        }
        public Builder compressedDataRateInMB(@Nullable Double compressedDataRateInMB) {
            this.compressedDataRateInMB = compressedDataRateInMB;
            return this;
        }
        public Builder datastores(@Nullable List<String> datastores) {
            this.datastores = datastores;
            return this;
        }
        public Builder datastores(String... datastores) {
            return datastores(List.of(datastores));
        }
        public Builder discoveryType(@Nullable String discoveryType) {
            this.discoveryType = discoveryType;
            return this;
        }
        public Builder diskResized(@Nullable String diskResized) {
            this.diskResized = diskResized;
            return this;
        }
        public Builder enableRdpOnTargetOption(@Nullable String enableRdpOnTargetOption) {
            this.enableRdpOnTargetOption = enableRdpOnTargetOption;
            return this;
        }
        public Builder infrastructureVmId(@Nullable String infrastructureVmId) {
            this.infrastructureVmId = infrastructureVmId;
            return this;
        }
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        public Builder isAgentUpdateRequired(@Nullable String isAgentUpdateRequired) {
            this.isAgentUpdateRequired = isAgentUpdateRequired;
            return this;
        }
        public Builder isRebootAfterUpdateRequired(@Nullable String isRebootAfterUpdateRequired) {
            this.isRebootAfterUpdateRequired = isRebootAfterUpdateRequired;
            return this;
        }
        public Builder lastHeartbeat(@Nullable String lastHeartbeat) {
            this.lastHeartbeat = lastHeartbeat;
            return this;
        }
        public Builder lastRpoCalculatedTime(@Nullable String lastRpoCalculatedTime) {
            this.lastRpoCalculatedTime = lastRpoCalculatedTime;
            return this;
        }
        public Builder lastUpdateReceivedTime(@Nullable String lastUpdateReceivedTime) {
            this.lastUpdateReceivedTime = lastUpdateReceivedTime;
            return this;
        }
        public Builder licenseType(@Nullable String licenseType) {
            this.licenseType = licenseType;
            return this;
        }
        public Builder masterTargetId(@Nullable String masterTargetId) {
            this.masterTargetId = masterTargetId;
            return this;
        }
        public Builder multiVmGroupId(@Nullable String multiVmGroupId) {
            this.multiVmGroupId = multiVmGroupId;
            return this;
        }
        public Builder multiVmGroupName(@Nullable String multiVmGroupName) {
            this.multiVmGroupName = multiVmGroupName;
            return this;
        }
        public Builder multiVmSyncStatus(@Nullable String multiVmSyncStatus) {
            this.multiVmSyncStatus = multiVmSyncStatus;
            return this;
        }
        public Builder osDiskId(@Nullable String osDiskId) {
            this.osDiskId = osDiskId;
            return this;
        }
        public Builder osType(@Nullable String osType) {
            this.osType = osType;
            return this;
        }
        public Builder osVersion(@Nullable String osVersion) {
            this.osVersion = osVersion;
            return this;
        }
        public Builder processServerId(@Nullable String processServerId) {
            this.processServerId = processServerId;
            return this;
        }
        public Builder processServerName(String processServerName) {
            this.processServerName = Objects.requireNonNull(processServerName);
            return this;
        }
        public Builder protectedDisks(@Nullable List<InMageAzureV2ProtectedDiskDetailsResponse> protectedDisks) {
            this.protectedDisks = protectedDisks;
            return this;
        }
        public Builder protectedDisks(InMageAzureV2ProtectedDiskDetailsResponse... protectedDisks) {
            return protectedDisks(List.of(protectedDisks));
        }
        public Builder protectedManagedDisks(@Nullable List<InMageAzureV2ManagedDiskDetailsResponse> protectedManagedDisks) {
            this.protectedManagedDisks = protectedManagedDisks;
            return this;
        }
        public Builder protectedManagedDisks(InMageAzureV2ManagedDiskDetailsResponse... protectedManagedDisks) {
            return protectedManagedDisks(List.of(protectedManagedDisks));
        }
        public Builder protectionStage(@Nullable String protectionStage) {
            this.protectionStage = protectionStage;
            return this;
        }
        public Builder recoveryAvailabilitySetId(@Nullable String recoveryAvailabilitySetId) {
            this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
            return this;
        }
        public Builder recoveryAzureLogStorageAccountId(@Nullable String recoveryAzureLogStorageAccountId) {
            this.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
            return this;
        }
        public Builder recoveryAzureResourceGroupId(@Nullable String recoveryAzureResourceGroupId) {
            this.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
            return this;
        }
        public Builder recoveryAzureStorageAccount(@Nullable String recoveryAzureStorageAccount) {
            this.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
            return this;
        }
        public Builder recoveryAzureVMName(@Nullable String recoveryAzureVMName) {
            this.recoveryAzureVMName = recoveryAzureVMName;
            return this;
        }
        public Builder recoveryAzureVMSize(@Nullable String recoveryAzureVMSize) {
            this.recoveryAzureVMSize = recoveryAzureVMSize;
            return this;
        }
        public Builder replicaId(@Nullable String replicaId) {
            this.replicaId = replicaId;
            return this;
        }
        public Builder resyncProgressPercentage(@Nullable Integer resyncProgressPercentage) {
            this.resyncProgressPercentage = resyncProgressPercentage;
            return this;
        }
        public Builder rpoInSeconds(@Nullable Double rpoInSeconds) {
            this.rpoInSeconds = rpoInSeconds;
            return this;
        }
        public Builder selectedRecoveryAzureNetworkId(@Nullable String selectedRecoveryAzureNetworkId) {
            this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
            return this;
        }
        public Builder selectedSourceNicId(@Nullable String selectedSourceNicId) {
            this.selectedSourceNicId = selectedSourceNicId;
            return this;
        }
        public Builder selectedTfoAzureNetworkId(@Nullable String selectedTfoAzureNetworkId) {
            this.selectedTfoAzureNetworkId = selectedTfoAzureNetworkId;
            return this;
        }
        public Builder sourceVmCpuCount(@Nullable Integer sourceVmCpuCount) {
            this.sourceVmCpuCount = sourceVmCpuCount;
            return this;
        }
        public Builder sourceVmRamSizeInMB(@Nullable Integer sourceVmRamSizeInMB) {
            this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
            return this;
        }
        public Builder targetAvailabilityZone(@Nullable String targetAvailabilityZone) {
            this.targetAvailabilityZone = targetAvailabilityZone;
            return this;
        }
        public Builder targetProximityPlacementGroupId(@Nullable String targetProximityPlacementGroupId) {
            this.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
            return this;
        }
        public Builder targetVmId(@Nullable String targetVmId) {
            this.targetVmId = targetVmId;
            return this;
        }
        public Builder uncompressedDataRateInMB(@Nullable Double uncompressedDataRateInMB) {
            this.uncompressedDataRateInMB = uncompressedDataRateInMB;
            return this;
        }
        public Builder useManagedDisks(@Nullable String useManagedDisks) {
            this.useManagedDisks = useManagedDisks;
            return this;
        }
        public Builder vCenterInfrastructureId(@Nullable String vCenterInfrastructureId) {
            this.vCenterInfrastructureId = vCenterInfrastructureId;
            return this;
        }
        public Builder validationErrors(@Nullable List<HealthErrorResponse> validationErrors) {
            this.validationErrors = validationErrors;
            return this;
        }
        public Builder validationErrors(HealthErrorResponse... validationErrors) {
            return validationErrors(List.of(validationErrors));
        }
        public Builder vhdName(@Nullable String vhdName) {
            this.vhdName = vhdName;
            return this;
        }
        public Builder vmId(@Nullable String vmId) {
            this.vmId = vmId;
            return this;
        }
        public Builder vmNics(@Nullable List<VMNicDetailsResponse> vmNics) {
            this.vmNics = vmNics;
            return this;
        }
        public Builder vmNics(VMNicDetailsResponse... vmNics) {
            return vmNics(List.of(vmNics));
        }
        public Builder vmProtectionState(@Nullable String vmProtectionState) {
            this.vmProtectionState = vmProtectionState;
            return this;
        }
        public Builder vmProtectionStateDescription(@Nullable String vmProtectionStateDescription) {
            this.vmProtectionStateDescription = vmProtectionStateDescription;
            return this;
        }        public InMageAzureV2ReplicationDetailsResponse build() {
            return new InMageAzureV2ReplicationDetailsResponse(agentExpiryDate, agentVersion, azureVMDiskDetails, compressedDataRateInMB, datastores, discoveryType, diskResized, enableRdpOnTargetOption, infrastructureVmId, instanceType, ipAddress, isAgentUpdateRequired, isRebootAfterUpdateRequired, lastHeartbeat, lastRpoCalculatedTime, lastUpdateReceivedTime, licenseType, masterTargetId, multiVmGroupId, multiVmGroupName, multiVmSyncStatus, osDiskId, osType, osVersion, processServerId, processServerName, protectedDisks, protectedManagedDisks, protectionStage, recoveryAvailabilitySetId, recoveryAzureLogStorageAccountId, recoveryAzureResourceGroupId, recoveryAzureStorageAccount, recoveryAzureVMName, recoveryAzureVMSize, replicaId, resyncProgressPercentage, rpoInSeconds, selectedRecoveryAzureNetworkId, selectedSourceNicId, selectedTfoAzureNetworkId, sourceVmCpuCount, sourceVmRamSizeInMB, targetAvailabilityZone, targetProximityPlacementGroupId, targetVmId, uncompressedDataRateInMB, useManagedDisks, vCenterInfrastructureId, validationErrors, vhdName, vmId, vmNics, vmProtectionState, vmProtectionStateDescription);
        }
    }
}
