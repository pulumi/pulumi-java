// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security.outputs;

import io.pulumi.azurenative.security.outputs.SystemDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetCustomAssessmentAutomationResult {
    private final @Nullable String assessmentKey;
    private final @Nullable String compressedQuery;
    private final @Nullable String description;
    private final @Nullable String displayName;
    private final String id;
    private final String name;
    private final @Nullable String remediationDescription;
    private final @Nullable String severity;
    private final @Nullable String supportedCloud;
    private final SystemDataResponse systemData;
    private final String type;

    @OutputCustomType.Constructor({"assessmentKey","compressedQuery","description","displayName","id","name","remediationDescription","severity","supportedCloud","systemData","type"})
    private GetCustomAssessmentAutomationResult(
        @Nullable String assessmentKey,
        @Nullable String compressedQuery,
        @Nullable String description,
        @Nullable String displayName,
        String id,
        String name,
        @Nullable String remediationDescription,
        @Nullable String severity,
        @Nullable String supportedCloud,
        SystemDataResponse systemData,
        String type) {
        this.assessmentKey = assessmentKey;
        this.compressedQuery = compressedQuery;
        this.description = description;
        this.displayName = displayName;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.remediationDescription = remediationDescription;
        this.severity = severity;
        this.supportedCloud = supportedCloud;
        this.systemData = Objects.requireNonNull(systemData);
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getAssessmentKey() {
        return Optional.ofNullable(this.assessmentKey);
    }
    public Optional<String> getCompressedQuery() {
        return Optional.ofNullable(this.compressedQuery);
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> getDisplayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getRemediationDescription() {
        return Optional.ofNullable(this.remediationDescription);
    }
    public Optional<String> getSeverity() {
        return Optional.ofNullable(this.severity);
    }
    public Optional<String> getSupportedCloud() {
        return Optional.ofNullable(this.supportedCloud);
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomAssessmentAutomationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String assessmentKey;
        private @Nullable String compressedQuery;
        private @Nullable String description;
        private @Nullable String displayName;
        private String id;
        private String name;
        private @Nullable String remediationDescription;
        private @Nullable String severity;
        private @Nullable String supportedCloud;
        private SystemDataResponse systemData;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCustomAssessmentAutomationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assessmentKey = defaults.assessmentKey;
    	      this.compressedQuery = defaults.compressedQuery;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.remediationDescription = defaults.remediationDescription;
    	      this.severity = defaults.severity;
    	      this.supportedCloud = defaults.supportedCloud;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        public Builder setAssessmentKey(@Nullable String assessmentKey) {
            this.assessmentKey = assessmentKey;
            return this;
        }

        public Builder setCompressedQuery(@Nullable String compressedQuery) {
            this.compressedQuery = compressedQuery;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRemediationDescription(@Nullable String remediationDescription) {
            this.remediationDescription = remediationDescription;
            return this;
        }

        public Builder setSeverity(@Nullable String severity) {
            this.severity = severity;
            return this;
        }

        public Builder setSupportedCloud(@Nullable String supportedCloud) {
            this.supportedCloud = supportedCloud;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetCustomAssessmentAutomationResult build() {
            return new GetCustomAssessmentAutomationResult(assessmentKey, compressedQuery, description, displayName, id, name, remediationDescription, severity, supportedCloud, systemData, type);
        }
    }
}
