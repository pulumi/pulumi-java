// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.inputs;

import io.pulumi.azurenative.customerinsights.inputs.ProfileEnumValidValuesFormatArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PropertyDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final PropertyDefinitionArgs Empty = new PropertyDefinitionArgs();

    @InputImport(name="arrayValueSeparator")
    private final @Nullable Input<String> arrayValueSeparator;

    public Input<String> getArrayValueSeparator() {
        return this.arrayValueSeparator == null ? Input.empty() : this.arrayValueSeparator;
    }

    @InputImport(name="enumValidValues")
    private final @Nullable Input<List<ProfileEnumValidValuesFormatArgs>> enumValidValues;

    public Input<List<ProfileEnumValidValuesFormatArgs>> getEnumValidValues() {
        return this.enumValidValues == null ? Input.empty() : this.enumValidValues;
    }

    @InputImport(name="fieldName", required=true)
    private final Input<String> fieldName;

    public Input<String> getFieldName() {
        return this.fieldName;
    }

    @InputImport(name="fieldType", required=true)
    private final Input<String> fieldType;

    public Input<String> getFieldType() {
        return this.fieldType;
    }

    @InputImport(name="isArray")
    private final @Nullable Input<Boolean> isArray;

    public Input<Boolean> getIsArray() {
        return this.isArray == null ? Input.empty() : this.isArray;
    }

    @InputImport(name="isAvailableInGraph")
    private final @Nullable Input<Boolean> isAvailableInGraph;

    public Input<Boolean> getIsAvailableInGraph() {
        return this.isAvailableInGraph == null ? Input.empty() : this.isAvailableInGraph;
    }

    @InputImport(name="isEnum")
    private final @Nullable Input<Boolean> isEnum;

    public Input<Boolean> getIsEnum() {
        return this.isEnum == null ? Input.empty() : this.isEnum;
    }

    @InputImport(name="isFlagEnum")
    private final @Nullable Input<Boolean> isFlagEnum;

    public Input<Boolean> getIsFlagEnum() {
        return this.isFlagEnum == null ? Input.empty() : this.isFlagEnum;
    }

    @InputImport(name="isImage")
    private final @Nullable Input<Boolean> isImage;

    public Input<Boolean> getIsImage() {
        return this.isImage == null ? Input.empty() : this.isImage;
    }

    @InputImport(name="isLocalizedString")
    private final @Nullable Input<Boolean> isLocalizedString;

    public Input<Boolean> getIsLocalizedString() {
        return this.isLocalizedString == null ? Input.empty() : this.isLocalizedString;
    }

    @InputImport(name="isName")
    private final @Nullable Input<Boolean> isName;

    public Input<Boolean> getIsName() {
        return this.isName == null ? Input.empty() : this.isName;
    }

    @InputImport(name="isRequired")
    private final @Nullable Input<Boolean> isRequired;

    public Input<Boolean> getIsRequired() {
        return this.isRequired == null ? Input.empty() : this.isRequired;
    }

    @InputImport(name="maxLength")
    private final @Nullable Input<Integer> maxLength;

    public Input<Integer> getMaxLength() {
        return this.maxLength == null ? Input.empty() : this.maxLength;
    }

    @InputImport(name="propertyId")
    private final @Nullable Input<String> propertyId;

    public Input<String> getPropertyId() {
        return this.propertyId == null ? Input.empty() : this.propertyId;
    }

    @InputImport(name="schemaItemPropLink")
    private final @Nullable Input<String> schemaItemPropLink;

    public Input<String> getSchemaItemPropLink() {
        return this.schemaItemPropLink == null ? Input.empty() : this.schemaItemPropLink;
    }

    public PropertyDefinitionArgs(
        @Nullable Input<String> arrayValueSeparator,
        @Nullable Input<List<ProfileEnumValidValuesFormatArgs>> enumValidValues,
        Input<String> fieldName,
        Input<String> fieldType,
        @Nullable Input<Boolean> isArray,
        @Nullable Input<Boolean> isAvailableInGraph,
        @Nullable Input<Boolean> isEnum,
        @Nullable Input<Boolean> isFlagEnum,
        @Nullable Input<Boolean> isImage,
        @Nullable Input<Boolean> isLocalizedString,
        @Nullable Input<Boolean> isName,
        @Nullable Input<Boolean> isRequired,
        @Nullable Input<Integer> maxLength,
        @Nullable Input<String> propertyId,
        @Nullable Input<String> schemaItemPropLink) {
        this.arrayValueSeparator = arrayValueSeparator;
        this.enumValidValues = enumValidValues;
        this.fieldName = Objects.requireNonNull(fieldName, "expected parameter 'fieldName' to be non-null");
        this.fieldType = Objects.requireNonNull(fieldType, "expected parameter 'fieldType' to be non-null");
        this.isArray = isArray;
        this.isAvailableInGraph = isAvailableInGraph;
        this.isEnum = isEnum;
        this.isFlagEnum = isFlagEnum;
        this.isImage = isImage;
        this.isLocalizedString = isLocalizedString;
        this.isName = isName;
        this.isRequired = isRequired;
        this.maxLength = maxLength;
        this.propertyId = propertyId;
        this.schemaItemPropLink = schemaItemPropLink;
    }

    private PropertyDefinitionArgs() {
        this.arrayValueSeparator = Input.empty();
        this.enumValidValues = Input.empty();
        this.fieldName = Input.empty();
        this.fieldType = Input.empty();
        this.isArray = Input.empty();
        this.isAvailableInGraph = Input.empty();
        this.isEnum = Input.empty();
        this.isFlagEnum = Input.empty();
        this.isImage = Input.empty();
        this.isLocalizedString = Input.empty();
        this.isName = Input.empty();
        this.isRequired = Input.empty();
        this.maxLength = Input.empty();
        this.propertyId = Input.empty();
        this.schemaItemPropLink = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PropertyDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arrayValueSeparator;
        private @Nullable Input<List<ProfileEnumValidValuesFormatArgs>> enumValidValues;
        private Input<String> fieldName;
        private Input<String> fieldType;
        private @Nullable Input<Boolean> isArray;
        private @Nullable Input<Boolean> isAvailableInGraph;
        private @Nullable Input<Boolean> isEnum;
        private @Nullable Input<Boolean> isFlagEnum;
        private @Nullable Input<Boolean> isImage;
        private @Nullable Input<Boolean> isLocalizedString;
        private @Nullable Input<Boolean> isName;
        private @Nullable Input<Boolean> isRequired;
        private @Nullable Input<Integer> maxLength;
        private @Nullable Input<String> propertyId;
        private @Nullable Input<String> schemaItemPropLink;

        public Builder() {
    	      // Empty
        }

        public Builder(PropertyDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arrayValueSeparator = defaults.arrayValueSeparator;
    	      this.enumValidValues = defaults.enumValidValues;
    	      this.fieldName = defaults.fieldName;
    	      this.fieldType = defaults.fieldType;
    	      this.isArray = defaults.isArray;
    	      this.isAvailableInGraph = defaults.isAvailableInGraph;
    	      this.isEnum = defaults.isEnum;
    	      this.isFlagEnum = defaults.isFlagEnum;
    	      this.isImage = defaults.isImage;
    	      this.isLocalizedString = defaults.isLocalizedString;
    	      this.isName = defaults.isName;
    	      this.isRequired = defaults.isRequired;
    	      this.maxLength = defaults.maxLength;
    	      this.propertyId = defaults.propertyId;
    	      this.schemaItemPropLink = defaults.schemaItemPropLink;
        }

        public Builder setArrayValueSeparator(@Nullable Input<String> arrayValueSeparator) {
            this.arrayValueSeparator = arrayValueSeparator;
            return this;
        }

        public Builder setArrayValueSeparator(@Nullable String arrayValueSeparator) {
            this.arrayValueSeparator = Input.ofNullable(arrayValueSeparator);
            return this;
        }

        public Builder setEnumValidValues(@Nullable Input<List<ProfileEnumValidValuesFormatArgs>> enumValidValues) {
            this.enumValidValues = enumValidValues;
            return this;
        }

        public Builder setEnumValidValues(@Nullable List<ProfileEnumValidValuesFormatArgs> enumValidValues) {
            this.enumValidValues = Input.ofNullable(enumValidValues);
            return this;
        }

        public Builder setFieldName(Input<String> fieldName) {
            this.fieldName = Objects.requireNonNull(fieldName);
            return this;
        }

        public Builder setFieldName(String fieldName) {
            this.fieldName = Input.of(Objects.requireNonNull(fieldName));
            return this;
        }

        public Builder setFieldType(Input<String> fieldType) {
            this.fieldType = Objects.requireNonNull(fieldType);
            return this;
        }

        public Builder setFieldType(String fieldType) {
            this.fieldType = Input.of(Objects.requireNonNull(fieldType));
            return this;
        }

        public Builder setIsArray(@Nullable Input<Boolean> isArray) {
            this.isArray = isArray;
            return this;
        }

        public Builder setIsArray(@Nullable Boolean isArray) {
            this.isArray = Input.ofNullable(isArray);
            return this;
        }

        public Builder setIsAvailableInGraph(@Nullable Input<Boolean> isAvailableInGraph) {
            this.isAvailableInGraph = isAvailableInGraph;
            return this;
        }

        public Builder setIsAvailableInGraph(@Nullable Boolean isAvailableInGraph) {
            this.isAvailableInGraph = Input.ofNullable(isAvailableInGraph);
            return this;
        }

        public Builder setIsEnum(@Nullable Input<Boolean> isEnum) {
            this.isEnum = isEnum;
            return this;
        }

        public Builder setIsEnum(@Nullable Boolean isEnum) {
            this.isEnum = Input.ofNullable(isEnum);
            return this;
        }

        public Builder setIsFlagEnum(@Nullable Input<Boolean> isFlagEnum) {
            this.isFlagEnum = isFlagEnum;
            return this;
        }

        public Builder setIsFlagEnum(@Nullable Boolean isFlagEnum) {
            this.isFlagEnum = Input.ofNullable(isFlagEnum);
            return this;
        }

        public Builder setIsImage(@Nullable Input<Boolean> isImage) {
            this.isImage = isImage;
            return this;
        }

        public Builder setIsImage(@Nullable Boolean isImage) {
            this.isImage = Input.ofNullable(isImage);
            return this;
        }

        public Builder setIsLocalizedString(@Nullable Input<Boolean> isLocalizedString) {
            this.isLocalizedString = isLocalizedString;
            return this;
        }

        public Builder setIsLocalizedString(@Nullable Boolean isLocalizedString) {
            this.isLocalizedString = Input.ofNullable(isLocalizedString);
            return this;
        }

        public Builder setIsName(@Nullable Input<Boolean> isName) {
            this.isName = isName;
            return this;
        }

        public Builder setIsName(@Nullable Boolean isName) {
            this.isName = Input.ofNullable(isName);
            return this;
        }

        public Builder setIsRequired(@Nullable Input<Boolean> isRequired) {
            this.isRequired = isRequired;
            return this;
        }

        public Builder setIsRequired(@Nullable Boolean isRequired) {
            this.isRequired = Input.ofNullable(isRequired);
            return this;
        }

        public Builder setMaxLength(@Nullable Input<Integer> maxLength) {
            this.maxLength = maxLength;
            return this;
        }

        public Builder setMaxLength(@Nullable Integer maxLength) {
            this.maxLength = Input.ofNullable(maxLength);
            return this;
        }

        public Builder setPropertyId(@Nullable Input<String> propertyId) {
            this.propertyId = propertyId;
            return this;
        }

        public Builder setPropertyId(@Nullable String propertyId) {
            this.propertyId = Input.ofNullable(propertyId);
            return this;
        }

        public Builder setSchemaItemPropLink(@Nullable Input<String> schemaItemPropLink) {
            this.schemaItemPropLink = schemaItemPropLink;
            return this;
        }

        public Builder setSchemaItemPropLink(@Nullable String schemaItemPropLink) {
            this.schemaItemPropLink = Input.ofNullable(schemaItemPropLink);
            return this;
        }

        public PropertyDefinitionArgs build() {
            return new PropertyDefinitionArgs(arrayValueSeparator, enumValidValues, fieldName, fieldType, isArray, isAvailableInGraph, isEnum, isFlagEnum, isImage, isLocalizedString, isName, isRequired, maxLength, propertyId, schemaItemPropLink);
        }
    }
}
