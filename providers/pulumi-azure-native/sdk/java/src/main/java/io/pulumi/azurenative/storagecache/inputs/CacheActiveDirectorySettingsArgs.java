// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagecache.inputs;

import io.pulumi.azurenative.storagecache.inputs.CacheActiveDirectorySettingsCredentialsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Active Directory settings used to join a cache to a domain.
 * 
 */
public final class CacheActiveDirectorySettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final CacheActiveDirectorySettingsArgs Empty = new CacheActiveDirectorySettingsArgs();

    /**
     * The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].
     * 
     */
    @Import(name="cacheNetBiosName", required=true)
      private final Output<String> cacheNetBiosName;

    public Output<String> getCacheNetBiosName() {
        return this.cacheNetBiosName;
    }

    /**
     * Active Directory admin credentials used to join the HPC Cache to a domain.
     * 
     */
    @Import(name="credentials")
      private final @Nullable Output<CacheActiveDirectorySettingsCredentialsArgs> credentials;

    public Output<CacheActiveDirectorySettingsCredentialsArgs> getCredentials() {
        return this.credentials == null ? Output.empty() : this.credentials;
    }

    /**
     * The fully qualified domain name of the Active Directory domain controller.
     * 
     */
    @Import(name="domainName", required=true)
      private final Output<String> domainName;

    public Output<String> getDomainName() {
        return this.domainName;
    }

    /**
     * The Active Directory domain's NetBIOS name.
     * 
     */
    @Import(name="domainNetBiosName", required=true)
      private final Output<String> domainNetBiosName;

    public Output<String> getDomainNetBiosName() {
        return this.domainNetBiosName;
    }

    /**
     * Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
     * 
     */
    @Import(name="primaryDnsIpAddress", required=true)
      private final Output<String> primaryDnsIpAddress;

    public Output<String> getPrimaryDnsIpAddress() {
        return this.primaryDnsIpAddress;
    }

    /**
     * Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
     * 
     */
    @Import(name="secondaryDnsIpAddress")
      private final @Nullable Output<String> secondaryDnsIpAddress;

    public Output<String> getSecondaryDnsIpAddress() {
        return this.secondaryDnsIpAddress == null ? Output.empty() : this.secondaryDnsIpAddress;
    }

    public CacheActiveDirectorySettingsArgs(
        Output<String> cacheNetBiosName,
        @Nullable Output<CacheActiveDirectorySettingsCredentialsArgs> credentials,
        Output<String> domainName,
        Output<String> domainNetBiosName,
        Output<String> primaryDnsIpAddress,
        @Nullable Output<String> secondaryDnsIpAddress) {
        this.cacheNetBiosName = Objects.requireNonNull(cacheNetBiosName, "expected parameter 'cacheNetBiosName' to be non-null");
        this.credentials = credentials;
        this.domainName = Objects.requireNonNull(domainName, "expected parameter 'domainName' to be non-null");
        this.domainNetBiosName = Objects.requireNonNull(domainNetBiosName, "expected parameter 'domainNetBiosName' to be non-null");
        this.primaryDnsIpAddress = Objects.requireNonNull(primaryDnsIpAddress, "expected parameter 'primaryDnsIpAddress' to be non-null");
        this.secondaryDnsIpAddress = secondaryDnsIpAddress;
    }

    private CacheActiveDirectorySettingsArgs() {
        this.cacheNetBiosName = Output.empty();
        this.credentials = Output.empty();
        this.domainName = Output.empty();
        this.domainNetBiosName = Output.empty();
        this.primaryDnsIpAddress = Output.empty();
        this.secondaryDnsIpAddress = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheActiveDirectorySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> cacheNetBiosName;
        private @Nullable Output<CacheActiveDirectorySettingsCredentialsArgs> credentials;
        private Output<String> domainName;
        private Output<String> domainNetBiosName;
        private Output<String> primaryDnsIpAddress;
        private @Nullable Output<String> secondaryDnsIpAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(CacheActiveDirectorySettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheNetBiosName = defaults.cacheNetBiosName;
    	      this.credentials = defaults.credentials;
    	      this.domainName = defaults.domainName;
    	      this.domainNetBiosName = defaults.domainNetBiosName;
    	      this.primaryDnsIpAddress = defaults.primaryDnsIpAddress;
    	      this.secondaryDnsIpAddress = defaults.secondaryDnsIpAddress;
        }

        public Builder cacheNetBiosName(Output<String> cacheNetBiosName) {
            this.cacheNetBiosName = Objects.requireNonNull(cacheNetBiosName);
            return this;
        }
        public Builder cacheNetBiosName(String cacheNetBiosName) {
            this.cacheNetBiosName = Output.of(Objects.requireNonNull(cacheNetBiosName));
            return this;
        }
        public Builder credentials(@Nullable Output<CacheActiveDirectorySettingsCredentialsArgs> credentials) {
            this.credentials = credentials;
            return this;
        }
        public Builder credentials(@Nullable CacheActiveDirectorySettingsCredentialsArgs credentials) {
            this.credentials = Output.ofNullable(credentials);
            return this;
        }
        public Builder domainName(Output<String> domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        public Builder domainName(String domainName) {
            this.domainName = Output.of(Objects.requireNonNull(domainName));
            return this;
        }
        public Builder domainNetBiosName(Output<String> domainNetBiosName) {
            this.domainNetBiosName = Objects.requireNonNull(domainNetBiosName);
            return this;
        }
        public Builder domainNetBiosName(String domainNetBiosName) {
            this.domainNetBiosName = Output.of(Objects.requireNonNull(domainNetBiosName));
            return this;
        }
        public Builder primaryDnsIpAddress(Output<String> primaryDnsIpAddress) {
            this.primaryDnsIpAddress = Objects.requireNonNull(primaryDnsIpAddress);
            return this;
        }
        public Builder primaryDnsIpAddress(String primaryDnsIpAddress) {
            this.primaryDnsIpAddress = Output.of(Objects.requireNonNull(primaryDnsIpAddress));
            return this;
        }
        public Builder secondaryDnsIpAddress(@Nullable Output<String> secondaryDnsIpAddress) {
            this.secondaryDnsIpAddress = secondaryDnsIpAddress;
            return this;
        }
        public Builder secondaryDnsIpAddress(@Nullable String secondaryDnsIpAddress) {
            this.secondaryDnsIpAddress = Output.ofNullable(secondaryDnsIpAddress);
            return this;
        }        public CacheActiveDirectorySettingsArgs build() {
            return new CacheActiveDirectorySettingsArgs(cacheNetBiosName, credentials, domainName, domainNetBiosName, primaryDnsIpAddress, secondaryDnsIpAddress);
        }
    }
}
