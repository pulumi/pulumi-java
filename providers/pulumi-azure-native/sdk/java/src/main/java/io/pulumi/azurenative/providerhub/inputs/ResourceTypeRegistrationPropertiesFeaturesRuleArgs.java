// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.providerhub.inputs;

import io.pulumi.azurenative.providerhub.enums.FeaturesPolicy;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class ResourceTypeRegistrationPropertiesFeaturesRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourceTypeRegistrationPropertiesFeaturesRuleArgs Empty = new ResourceTypeRegistrationPropertiesFeaturesRuleArgs();

    @Import(name="requiredFeaturesPolicy", required=true)
      private final Output<Either<String,FeaturesPolicy>> requiredFeaturesPolicy;

    public Output<Either<String,FeaturesPolicy>> getRequiredFeaturesPolicy() {
        return this.requiredFeaturesPolicy;
    }

    public ResourceTypeRegistrationPropertiesFeaturesRuleArgs(Output<Either<String,FeaturesPolicy>> requiredFeaturesPolicy) {
        this.requiredFeaturesPolicy = Objects.requireNonNull(requiredFeaturesPolicy, "expected parameter 'requiredFeaturesPolicy' to be non-null");
    }

    private ResourceTypeRegistrationPropertiesFeaturesRuleArgs() {
        this.requiredFeaturesPolicy = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceTypeRegistrationPropertiesFeaturesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Either<String,FeaturesPolicy>> requiredFeaturesPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceTypeRegistrationPropertiesFeaturesRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.requiredFeaturesPolicy = defaults.requiredFeaturesPolicy;
        }

        public Builder requiredFeaturesPolicy(Output<Either<String,FeaturesPolicy>> requiredFeaturesPolicy) {
            this.requiredFeaturesPolicy = Objects.requireNonNull(requiredFeaturesPolicy);
            return this;
        }
        public Builder requiredFeaturesPolicy(Either<String,FeaturesPolicy> requiredFeaturesPolicy) {
            this.requiredFeaturesPolicy = Output.of(Objects.requireNonNull(requiredFeaturesPolicy));
            return this;
        }        public ResourceTypeRegistrationPropertiesFeaturesRuleArgs build() {
            return new ResourceTypeRegistrationPropertiesFeaturesRuleArgs(requiredFeaturesPolicy);
        }
    }
}
