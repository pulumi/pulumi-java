// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse.outputs;

import io.pulumi.azurenative.synapse.outputs.SecureStringResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class LinkedIntegrationRuntimeKeyAuthorizationResponse {
    private final String authorizationType;
    private final SecureStringResponse key;

    @OutputCustomType.Constructor({"authorizationType","key"})
    private LinkedIntegrationRuntimeKeyAuthorizationResponse(
        String authorizationType,
        SecureStringResponse key) {
        this.authorizationType = Objects.requireNonNull(authorizationType);
        this.key = Objects.requireNonNull(key);
    }

    public String getAuthorizationType() {
        return this.authorizationType;
    }
    public SecureStringResponse getKey() {
        return this.key;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinkedIntegrationRuntimeKeyAuthorizationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authorizationType;
        private SecureStringResponse key;

        public Builder() {
    	      // Empty
        }

        public Builder(LinkedIntegrationRuntimeKeyAuthorizationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationType = defaults.authorizationType;
    	      this.key = defaults.key;
        }

        public Builder setAuthorizationType(String authorizationType) {
            this.authorizationType = Objects.requireNonNull(authorizationType);
            return this;
        }

        public Builder setKey(SecureStringResponse key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }

        public LinkedIntegrationRuntimeKeyAuthorizationResponse build() {
            return new LinkedIntegrationRuntimeKeyAuthorizationResponse(authorizationType, key);
        }
    }
}
