// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Authorization header information.
 * 
 */
public final class BackendAuthorizationHeaderCredentialsResponse extends io.pulumi.resources.InvokeArgs {

    public static final BackendAuthorizationHeaderCredentialsResponse Empty = new BackendAuthorizationHeaderCredentialsResponse();

    /**
     * Authentication Parameter value.
     * 
     */
    @InputImport(name="parameter", required=true)
    private final String parameter;

    public String getParameter() {
        return this.parameter;
    }

    /**
     * Authentication Scheme name.
     * 
     */
    @InputImport(name="scheme", required=true)
    private final String scheme;

    public String getScheme() {
        return this.scheme;
    }

    public BackendAuthorizationHeaderCredentialsResponse(
        String parameter,
        String scheme) {
        this.parameter = Objects.requireNonNull(parameter, "expected parameter 'parameter' to be non-null");
        this.scheme = Objects.requireNonNull(scheme, "expected parameter 'scheme' to be non-null");
    }

    private BackendAuthorizationHeaderCredentialsResponse() {
        this.parameter = null;
        this.scheme = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendAuthorizationHeaderCredentialsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String parameter;
        private String scheme;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendAuthorizationHeaderCredentialsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parameter = defaults.parameter;
    	      this.scheme = defaults.scheme;
        }

        public Builder setParameter(String parameter) {
            this.parameter = Objects.requireNonNull(parameter);
            return this;
        }

        public Builder setScheme(String scheme) {
            this.scheme = Objects.requireNonNull(scheme);
            return this;
        }

        public BackendAuthorizationHeaderCredentialsResponse build() {
            return new BackendAuthorizationHeaderCredentialsResponse(parameter, scheme);
        }
    }
}
