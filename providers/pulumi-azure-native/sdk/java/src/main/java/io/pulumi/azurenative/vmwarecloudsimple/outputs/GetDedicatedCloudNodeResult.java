// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.vmwarecloudsimple.outputs;

import io.pulumi.azurenative.vmwarecloudsimple.outputs.SkuResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetDedicatedCloudNodeResult {
    /**
     * Availability Zone id, e.g. "az1"
     * 
     */
    private final String availabilityZoneId;
    /**
     * Availability Zone name, e.g. "Availability Zone 1"
     * 
     */
    private final String availabilityZoneName;
    /**
     * VMWare Cloud Rack Name
     * 
     */
    private final String cloudRackName;
    /**
     * date time the resource was created
     * 
     */
    private final String created;
    /**
     * SKU's id
     * 
     */
    private final String id;
    /**
     * Azure region
     * 
     */
    private final String location;
    /**
     * SKU's name
     * 
     */
    private final String name;
    /**
     * count of nodes to create
     * 
     */
    private final Integer nodesCount;
    /**
     * Placement Group id, e.g. "n1"
     * 
     */
    private final String placementGroupId;
    /**
     * Placement Name, e.g. "Placement Group 1"
     * 
     */
    private final String placementGroupName;
    /**
     * Private Cloud Id
     * 
     */
    private final String privateCloudId;
    /**
     * Resource Pool Name
     * 
     */
    private final String privateCloudName;
    /**
     * The provisioning status of the resource
     * 
     */
    private final String provisioningState;
    /**
     * purchase id
     * 
     */
    private final String purchaseId;
    /**
     * Dedicated Cloud Nodes SKU
     * 
     */
    private final @Nullable SkuResponse sku;
    /**
     * Node status, indicates is private cloud set up on this node or not
     * 
     */
    private final String status;
    /**
     * Dedicated Cloud Nodes tags
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * {resourceProviderNamespace}/{resourceType}
     * 
     */
    private final String type;
    /**
     * VMWare Cluster Name
     * 
     */
    private final String vmwareClusterName;

    @OutputCustomType.Constructor({"availabilityZoneId","availabilityZoneName","cloudRackName","created","id","location","name","nodesCount","placementGroupId","placementGroupName","privateCloudId","privateCloudName","provisioningState","purchaseId","sku","status","tags","type","vmwareClusterName"})
    private GetDedicatedCloudNodeResult(
        String availabilityZoneId,
        String availabilityZoneName,
        String cloudRackName,
        String created,
        String id,
        String location,
        String name,
        Integer nodesCount,
        String placementGroupId,
        String placementGroupName,
        String privateCloudId,
        String privateCloudName,
        String provisioningState,
        String purchaseId,
        @Nullable SkuResponse sku,
        String status,
        @Nullable Map<String,String> tags,
        String type,
        String vmwareClusterName) {
        this.availabilityZoneId = Objects.requireNonNull(availabilityZoneId);
        this.availabilityZoneName = Objects.requireNonNull(availabilityZoneName);
        this.cloudRackName = Objects.requireNonNull(cloudRackName);
        this.created = Objects.requireNonNull(created);
        this.id = Objects.requireNonNull(id);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.nodesCount = Objects.requireNonNull(nodesCount);
        this.placementGroupId = Objects.requireNonNull(placementGroupId);
        this.placementGroupName = Objects.requireNonNull(placementGroupName);
        this.privateCloudId = Objects.requireNonNull(privateCloudId);
        this.privateCloudName = Objects.requireNonNull(privateCloudName);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.purchaseId = Objects.requireNonNull(purchaseId);
        this.sku = sku;
        this.status = Objects.requireNonNull(status);
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
        this.vmwareClusterName = Objects.requireNonNull(vmwareClusterName);
    }

    /**
     * Availability Zone id, e.g. "az1"
     * 
     */
    public String getAvailabilityZoneId() {
        return this.availabilityZoneId;
    }
    /**
     * Availability Zone name, e.g. "Availability Zone 1"
     * 
     */
    public String getAvailabilityZoneName() {
        return this.availabilityZoneName;
    }
    /**
     * VMWare Cloud Rack Name
     * 
     */
    public String getCloudRackName() {
        return this.cloudRackName;
    }
    /**
     * date time the resource was created
     * 
     */
    public String getCreated() {
        return this.created;
    }
    /**
     * SKU's id
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * Azure region
     * 
     */
    public String getLocation() {
        return this.location;
    }
    /**
     * SKU's name
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * count of nodes to create
     * 
     */
    public Integer getNodesCount() {
        return this.nodesCount;
    }
    /**
     * Placement Group id, e.g. "n1"
     * 
     */
    public String getPlacementGroupId() {
        return this.placementGroupId;
    }
    /**
     * Placement Name, e.g. "Placement Group 1"
     * 
     */
    public String getPlacementGroupName() {
        return this.placementGroupName;
    }
    /**
     * Private Cloud Id
     * 
     */
    public String getPrivateCloudId() {
        return this.privateCloudId;
    }
    /**
     * Resource Pool Name
     * 
     */
    public String getPrivateCloudName() {
        return this.privateCloudName;
    }
    /**
     * The provisioning status of the resource
     * 
     */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * purchase id
     * 
     */
    public String getPurchaseId() {
        return this.purchaseId;
    }
    /**
     * Dedicated Cloud Nodes SKU
     * 
     */
    public Optional<SkuResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * Node status, indicates is private cloud set up on this node or not
     * 
     */
    public String getStatus() {
        return this.status;
    }
    /**
     * Dedicated Cloud Nodes tags
     * 
     */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * {resourceProviderNamespace}/{resourceType}
     * 
     */
    public String getType() {
        return this.type;
    }
    /**
     * VMWare Cluster Name
     * 
     */
    public String getVmwareClusterName() {
        return this.vmwareClusterName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDedicatedCloudNodeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String availabilityZoneId;
        private String availabilityZoneName;
        private String cloudRackName;
        private String created;
        private String id;
        private String location;
        private String name;
        private Integer nodesCount;
        private String placementGroupId;
        private String placementGroupName;
        private String privateCloudId;
        private String privateCloudName;
        private String provisioningState;
        private String purchaseId;
        private @Nullable SkuResponse sku;
        private String status;
        private @Nullable Map<String,String> tags;
        private String type;
        private String vmwareClusterName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDedicatedCloudNodeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZoneId = defaults.availabilityZoneId;
    	      this.availabilityZoneName = defaults.availabilityZoneName;
    	      this.cloudRackName = defaults.cloudRackName;
    	      this.created = defaults.created;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.nodesCount = defaults.nodesCount;
    	      this.placementGroupId = defaults.placementGroupId;
    	      this.placementGroupName = defaults.placementGroupName;
    	      this.privateCloudId = defaults.privateCloudId;
    	      this.privateCloudName = defaults.privateCloudName;
    	      this.provisioningState = defaults.provisioningState;
    	      this.purchaseId = defaults.purchaseId;
    	      this.sku = defaults.sku;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vmwareClusterName = defaults.vmwareClusterName;
        }

        public Builder setAvailabilityZoneId(String availabilityZoneId) {
            this.availabilityZoneId = Objects.requireNonNull(availabilityZoneId);
            return this;
        }

        public Builder setAvailabilityZoneName(String availabilityZoneName) {
            this.availabilityZoneName = Objects.requireNonNull(availabilityZoneName);
            return this;
        }

        public Builder setCloudRackName(String cloudRackName) {
            this.cloudRackName = Objects.requireNonNull(cloudRackName);
            return this;
        }

        public Builder setCreated(String created) {
            this.created = Objects.requireNonNull(created);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNodesCount(Integer nodesCount) {
            this.nodesCount = Objects.requireNonNull(nodesCount);
            return this;
        }

        public Builder setPlacementGroupId(String placementGroupId) {
            this.placementGroupId = Objects.requireNonNull(placementGroupId);
            return this;
        }

        public Builder setPlacementGroupName(String placementGroupName) {
            this.placementGroupName = Objects.requireNonNull(placementGroupName);
            return this;
        }

        public Builder setPrivateCloudId(String privateCloudId) {
            this.privateCloudId = Objects.requireNonNull(privateCloudId);
            return this;
        }

        public Builder setPrivateCloudName(String privateCloudName) {
            this.privateCloudName = Objects.requireNonNull(privateCloudName);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setPurchaseId(String purchaseId) {
            this.purchaseId = Objects.requireNonNull(purchaseId);
            return this;
        }

        public Builder setSku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVmwareClusterName(String vmwareClusterName) {
            this.vmwareClusterName = Objects.requireNonNull(vmwareClusterName);
            return this;
        }
        public GetDedicatedCloudNodeResult build() {
            return new GetDedicatedCloudNodeResult(availabilityZoneId, availabilityZoneName, cloudRackName, created, id, location, name, nodesCount, placementGroupId, placementGroupName, privateCloudId, privateCloudName, provisioningState, purchaseId, sku, status, tags, type, vmwareClusterName);
        }
    }
}
