// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devtestlab.inputs;

import io.pulumi.azurenative.devtestlab.enums.StorageType;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Storage information about the data disks present in the custom image
 * 
 */
public final class DataDiskStorageTypeInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataDiskStorageTypeInfoArgs Empty = new DataDiskStorageTypeInfoArgs();

    /**
     * Disk Lun
     * 
     */
    @Import(name="lun")
      private final @Nullable Output<String> lun;

    public Output<String> getLun() {
        return this.lun == null ? Output.empty() : this.lun;
    }

    /**
     * Disk Storage Type
     * 
     */
    @Import(name="storageType")
      private final @Nullable Output<Either<String,StorageType>> storageType;

    public Output<Either<String,StorageType>> getStorageType() {
        return this.storageType == null ? Output.empty() : this.storageType;
    }

    public DataDiskStorageTypeInfoArgs(
        @Nullable Output<String> lun,
        @Nullable Output<Either<String,StorageType>> storageType) {
        this.lun = lun;
        this.storageType = storageType;
    }

    private DataDiskStorageTypeInfoArgs() {
        this.lun = Output.empty();
        this.storageType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataDiskStorageTypeInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> lun;
        private @Nullable Output<Either<String,StorageType>> storageType;

        public Builder() {
    	      // Empty
        }

        public Builder(DataDiskStorageTypeInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lun = defaults.lun;
    	      this.storageType = defaults.storageType;
        }

        public Builder lun(@Nullable Output<String> lun) {
            this.lun = lun;
            return this;
        }
        public Builder lun(@Nullable String lun) {
            this.lun = Output.ofNullable(lun);
            return this;
        }
        public Builder storageType(@Nullable Output<Either<String,StorageType>> storageType) {
            this.storageType = storageType;
            return this;
        }
        public Builder storageType(@Nullable Either<String,StorageType> storageType) {
            this.storageType = Output.ofNullable(storageType);
            return this;
        }        public DataDiskStorageTypeInfoArgs build() {
            return new DataDiskStorageTypeInfoArgs(lun, storageType);
        }
    }
}
