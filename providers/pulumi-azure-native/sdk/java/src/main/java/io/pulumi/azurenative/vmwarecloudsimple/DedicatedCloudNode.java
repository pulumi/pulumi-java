// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.vmwarecloudsimple;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.vmwarecloudsimple.DedicatedCloudNodeArgs;
import io.pulumi.azurenative.vmwarecloudsimple.outputs.SkuResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:vmwarecloudsimple:DedicatedCloudNode")
public class DedicatedCloudNode extends io.pulumi.resources.CustomResource {
    @OutputExport(name="availabilityZoneId", type=String.class, parameters={})
    private Output<String> availabilityZoneId;

    public Output<String> getAvailabilityZoneId() {
        return this.availabilityZoneId;
    }
    @OutputExport(name="availabilityZoneName", type=String.class, parameters={})
    private Output<String> availabilityZoneName;

    public Output<String> getAvailabilityZoneName() {
        return this.availabilityZoneName;
    }
    @OutputExport(name="cloudRackName", type=String.class, parameters={})
    private Output<String> cloudRackName;

    public Output<String> getCloudRackName() {
        return this.cloudRackName;
    }
    @OutputExport(name="created", type=String.class, parameters={})
    private Output<String> created;

    public Output<String> getCreated() {
        return this.created;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="nodesCount", type=Integer.class, parameters={})
    private Output<Integer> nodesCount;

    public Output<Integer> getNodesCount() {
        return this.nodesCount;
    }
    @OutputExport(name="placementGroupId", type=String.class, parameters={})
    private Output<String> placementGroupId;

    public Output<String> getPlacementGroupId() {
        return this.placementGroupId;
    }
    @OutputExport(name="placementGroupName", type=String.class, parameters={})
    private Output<String> placementGroupName;

    public Output<String> getPlacementGroupName() {
        return this.placementGroupName;
    }
    @OutputExport(name="privateCloudId", type=String.class, parameters={})
    private Output<String> privateCloudId;

    public Output<String> getPrivateCloudId() {
        return this.privateCloudId;
    }
    @OutputExport(name="privateCloudName", type=String.class, parameters={})
    private Output<String> privateCloudName;

    public Output<String> getPrivateCloudName() {
        return this.privateCloudName;
    }
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    @OutputExport(name="purchaseId", type=String.class, parameters={})
    private Output<String> purchaseId;

    public Output<String> getPurchaseId() {
        return this.purchaseId;
    }
    @OutputExport(name="sku", type=SkuResponse.class, parameters={})
    private Output</* @Nullable */ SkuResponse> sku;

    public Output</* @Nullable */ SkuResponse> getSku() {
        return this.sku;
    }
    @OutputExport(name="status", type=String.class, parameters={})
    private Output<String> status;

    public Output<String> getStatus() {
        return this.status;
    }
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="vmwareClusterName", type=String.class, parameters={})
    private Output<String> vmwareClusterName;

    public Output<String> getVmwareClusterName() {
        return this.vmwareClusterName;
    }

    public DedicatedCloudNode(String name, DedicatedCloudNodeArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:vmwarecloudsimple:DedicatedCloudNode", name, args == null ? DedicatedCloudNodeArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private DedicatedCloudNode(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:vmwarecloudsimple:DedicatedCloudNode", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:vmwarecloudsimple/v20190401:DedicatedCloudNode").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static DedicatedCloudNode get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DedicatedCloudNode(name, id, options);
    }
}
