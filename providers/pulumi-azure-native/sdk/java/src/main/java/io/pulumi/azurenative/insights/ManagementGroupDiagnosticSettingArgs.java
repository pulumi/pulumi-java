// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.insights.inputs.ManagementGroupLogSettingsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ManagementGroupDiagnosticSettingArgs extends io.pulumi.resources.ResourceArgs {

    public static final ManagementGroupDiagnosticSettingArgs Empty = new ManagementGroupDiagnosticSettingArgs();

    /**
     * The resource Id for the event hub authorization rule.
     * 
     */
    @InputImport(name="eventHubAuthorizationRuleId")
        private final @Nullable Input<String> eventHubAuthorizationRuleId;

    public Input<String> getEventHubAuthorizationRuleId() {
        return this.eventHubAuthorizationRuleId == null ? Input.empty() : this.eventHubAuthorizationRuleId;
    }

    /**
     * The name of the event hub. If none is specified, the default event hub will be selected.
     * 
     */
    @InputImport(name="eventHubName")
        private final @Nullable Input<String> eventHubName;

    public Input<String> getEventHubName() {
        return this.eventHubName == null ? Input.empty() : this.eventHubName;
    }

    /**
     * Location of the resource
     * 
     */
    @InputImport(name="location")
        private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The list of logs settings.
     * 
     */
    @InputImport(name="logs")
        private final @Nullable Input<List<ManagementGroupLogSettingsArgs>> logs;

    public Input<List<ManagementGroupLogSettingsArgs>> getLogs() {
        return this.logs == null ? Input.empty() : this.logs;
    }

    /**
     * The management group id.
     * 
     */
    @InputImport(name="managementGroupId", required=true)
        private final Input<String> managementGroupId;

    public Input<String> getManagementGroupId() {
        return this.managementGroupId;
    }

    /**
     * The name of the diagnostic setting.
     * 
     */
    @InputImport(name="name")
        private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
     * 
     */
    @InputImport(name="serviceBusRuleId")
        private final @Nullable Input<String> serviceBusRuleId;

    public Input<String> getServiceBusRuleId() {
        return this.serviceBusRuleId == null ? Input.empty() : this.serviceBusRuleId;
    }

    /**
     * The resource ID of the storage account to which you would like to send Diagnostic Logs.
     * 
     */
    @InputImport(name="storageAccountId")
        private final @Nullable Input<String> storageAccountId;

    public Input<String> getStorageAccountId() {
        return this.storageAccountId == null ? Input.empty() : this.storageAccountId;
    }

    /**
     * The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
     * 
     */
    @InputImport(name="workspaceId")
        private final @Nullable Input<String> workspaceId;

    public Input<String> getWorkspaceId() {
        return this.workspaceId == null ? Input.empty() : this.workspaceId;
    }

    public ManagementGroupDiagnosticSettingArgs(
        @Nullable Input<String> eventHubAuthorizationRuleId,
        @Nullable Input<String> eventHubName,
        @Nullable Input<String> location,
        @Nullable Input<List<ManagementGroupLogSettingsArgs>> logs,
        Input<String> managementGroupId,
        @Nullable Input<String> name,
        @Nullable Input<String> serviceBusRuleId,
        @Nullable Input<String> storageAccountId,
        @Nullable Input<String> workspaceId) {
        this.eventHubAuthorizationRuleId = eventHubAuthorizationRuleId;
        this.eventHubName = eventHubName;
        this.location = location;
        this.logs = logs;
        this.managementGroupId = Objects.requireNonNull(managementGroupId, "expected parameter 'managementGroupId' to be non-null");
        this.name = name;
        this.serviceBusRuleId = serviceBusRuleId;
        this.storageAccountId = storageAccountId;
        this.workspaceId = workspaceId;
    }

    private ManagementGroupDiagnosticSettingArgs() {
        this.eventHubAuthorizationRuleId = Input.empty();
        this.eventHubName = Input.empty();
        this.location = Input.empty();
        this.logs = Input.empty();
        this.managementGroupId = Input.empty();
        this.name = Input.empty();
        this.serviceBusRuleId = Input.empty();
        this.storageAccountId = Input.empty();
        this.workspaceId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementGroupDiagnosticSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> eventHubAuthorizationRuleId;
        private @Nullable Input<String> eventHubName;
        private @Nullable Input<String> location;
        private @Nullable Input<List<ManagementGroupLogSettingsArgs>> logs;
        private Input<String> managementGroupId;
        private @Nullable Input<String> name;
        private @Nullable Input<String> serviceBusRuleId;
        private @Nullable Input<String> storageAccountId;
        private @Nullable Input<String> workspaceId;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagementGroupDiagnosticSettingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventHubAuthorizationRuleId = defaults.eventHubAuthorizationRuleId;
    	      this.eventHubName = defaults.eventHubName;
    	      this.location = defaults.location;
    	      this.logs = defaults.logs;
    	      this.managementGroupId = defaults.managementGroupId;
    	      this.name = defaults.name;
    	      this.serviceBusRuleId = defaults.serviceBusRuleId;
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.workspaceId = defaults.workspaceId;
        }

        public Builder setEventHubAuthorizationRuleId(@Nullable Input<String> eventHubAuthorizationRuleId) {
            this.eventHubAuthorizationRuleId = eventHubAuthorizationRuleId;
            return this;
        }

        public Builder setEventHubAuthorizationRuleId(@Nullable String eventHubAuthorizationRuleId) {
            this.eventHubAuthorizationRuleId = Input.ofNullable(eventHubAuthorizationRuleId);
            return this;
        }

        public Builder setEventHubName(@Nullable Input<String> eventHubName) {
            this.eventHubName = eventHubName;
            return this;
        }

        public Builder setEventHubName(@Nullable String eventHubName) {
            this.eventHubName = Input.ofNullable(eventHubName);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setLogs(@Nullable Input<List<ManagementGroupLogSettingsArgs>> logs) {
            this.logs = logs;
            return this;
        }

        public Builder setLogs(@Nullable List<ManagementGroupLogSettingsArgs> logs) {
            this.logs = Input.ofNullable(logs);
            return this;
        }

        public Builder setManagementGroupId(Input<String> managementGroupId) {
            this.managementGroupId = Objects.requireNonNull(managementGroupId);
            return this;
        }

        public Builder setManagementGroupId(String managementGroupId) {
            this.managementGroupId = Input.of(Objects.requireNonNull(managementGroupId));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setServiceBusRuleId(@Nullable Input<String> serviceBusRuleId) {
            this.serviceBusRuleId = serviceBusRuleId;
            return this;
        }

        public Builder setServiceBusRuleId(@Nullable String serviceBusRuleId) {
            this.serviceBusRuleId = Input.ofNullable(serviceBusRuleId);
            return this;
        }

        public Builder setStorageAccountId(@Nullable Input<String> storageAccountId) {
            this.storageAccountId = storageAccountId;
            return this;
        }

        public Builder setStorageAccountId(@Nullable String storageAccountId) {
            this.storageAccountId = Input.ofNullable(storageAccountId);
            return this;
        }

        public Builder setWorkspaceId(@Nullable Input<String> workspaceId) {
            this.workspaceId = workspaceId;
            return this;
        }

        public Builder setWorkspaceId(@Nullable String workspaceId) {
            this.workspaceId = Input.ofNullable(workspaceId);
            return this;
        }
        public ManagementGroupDiagnosticSettingArgs build() {
            return new ManagementGroupDiagnosticSettingArgs(eventHubAuthorizationRuleId, eventHubName, location, logs, managementGroupId, name, serviceBusRuleId, storageAccountId, workspaceId);
        }
    }
}
