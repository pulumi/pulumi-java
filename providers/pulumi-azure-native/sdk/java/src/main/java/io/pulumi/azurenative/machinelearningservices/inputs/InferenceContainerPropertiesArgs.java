// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.inputs.RouteArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InferenceContainerPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final InferenceContainerPropertiesArgs Empty = new InferenceContainerPropertiesArgs();

    @InputImport(name="livenessRoute")
    private final @Nullable Input<RouteArgs> livenessRoute;

    public Input<RouteArgs> getLivenessRoute() {
        return this.livenessRoute == null ? Input.empty() : this.livenessRoute;
    }

    @InputImport(name="readinessRoute")
    private final @Nullable Input<RouteArgs> readinessRoute;

    public Input<RouteArgs> getReadinessRoute() {
        return this.readinessRoute == null ? Input.empty() : this.readinessRoute;
    }

    @InputImport(name="scoringRoute")
    private final @Nullable Input<RouteArgs> scoringRoute;

    public Input<RouteArgs> getScoringRoute() {
        return this.scoringRoute == null ? Input.empty() : this.scoringRoute;
    }

    public InferenceContainerPropertiesArgs(
        @Nullable Input<RouteArgs> livenessRoute,
        @Nullable Input<RouteArgs> readinessRoute,
        @Nullable Input<RouteArgs> scoringRoute) {
        this.livenessRoute = livenessRoute;
        this.readinessRoute = readinessRoute;
        this.scoringRoute = scoringRoute;
    }

    private InferenceContainerPropertiesArgs() {
        this.livenessRoute = Input.empty();
        this.readinessRoute = Input.empty();
        this.scoringRoute = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InferenceContainerPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<RouteArgs> livenessRoute;
        private @Nullable Input<RouteArgs> readinessRoute;
        private @Nullable Input<RouteArgs> scoringRoute;

        public Builder() {
    	      // Empty
        }

        public Builder(InferenceContainerPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.livenessRoute = defaults.livenessRoute;
    	      this.readinessRoute = defaults.readinessRoute;
    	      this.scoringRoute = defaults.scoringRoute;
        }

        public Builder setLivenessRoute(@Nullable Input<RouteArgs> livenessRoute) {
            this.livenessRoute = livenessRoute;
            return this;
        }

        public Builder setLivenessRoute(@Nullable RouteArgs livenessRoute) {
            this.livenessRoute = Input.ofNullable(livenessRoute);
            return this;
        }

        public Builder setReadinessRoute(@Nullable Input<RouteArgs> readinessRoute) {
            this.readinessRoute = readinessRoute;
            return this;
        }

        public Builder setReadinessRoute(@Nullable RouteArgs readinessRoute) {
            this.readinessRoute = Input.ofNullable(readinessRoute);
            return this;
        }

        public Builder setScoringRoute(@Nullable Input<RouteArgs> scoringRoute) {
            this.scoringRoute = scoringRoute;
            return this;
        }

        public Builder setScoringRoute(@Nullable RouteArgs scoringRoute) {
            this.scoringRoute = Input.ofNullable(scoringRoute);
            return this;
        }

        public InferenceContainerPropertiesArgs build() {
            return new InferenceContainerPropertiesArgs(livenessRoute, readinessRoute, scoringRoute);
        }
    }
}
