// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.inputs;

import io.pulumi.azurenative.servicefabricmesh.inputs.GatewayDestinationArgs;
import io.pulumi.azurenative.servicefabricmesh.inputs.HttpRouteMatchRuleArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Describes the hostname properties for http routing.
 * 
 */
public final class HttpRouteConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final HttpRouteConfigArgs Empty = new HttpRouteConfigArgs();

    /**
     * Describes destination endpoint for routing traffic.
     * 
     */
    @Import(name="destination", required=true)
      private final Output<GatewayDestinationArgs> destination;

    public Output<GatewayDestinationArgs> getDestination() {
        return this.destination;
    }

    /**
     * Describes a rule for http route matching.
     * 
     */
    @Import(name="match", required=true)
      private final Output<HttpRouteMatchRuleArgs> match;

    public Output<HttpRouteMatchRuleArgs> getMatch() {
        return this.match;
    }

    /**
     * http route name.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    public HttpRouteConfigArgs(
        Output<GatewayDestinationArgs> destination,
        Output<HttpRouteMatchRuleArgs> match,
        Output<String> name) {
        this.destination = Objects.requireNonNull(destination, "expected parameter 'destination' to be non-null");
        this.match = Objects.requireNonNull(match, "expected parameter 'match' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private HttpRouteConfigArgs() {
        this.destination = Codegen.empty();
        this.match = Codegen.empty();
        this.name = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpRouteConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<GatewayDestinationArgs> destination;
        private Output<HttpRouteMatchRuleArgs> match;
        private Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(HttpRouteConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.match = defaults.match;
    	      this.name = defaults.name;
        }

        public Builder destination(Output<GatewayDestinationArgs> destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }
        public Builder destination(GatewayDestinationArgs destination) {
            this.destination = Output.of(Objects.requireNonNull(destination));
            return this;
        }
        public Builder match(Output<HttpRouteMatchRuleArgs> match) {
            this.match = Objects.requireNonNull(match);
            return this;
        }
        public Builder match(HttpRouteMatchRuleArgs match) {
            this.match = Output.of(Objects.requireNonNull(match));
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }        public HttpRouteConfigArgs build() {
            return new HttpRouteConfigArgs(destination, match, name);
        }
    }
}
