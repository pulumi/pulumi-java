// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.netapp;

import io.pulumi.azurenative.netapp.enums.QosType;
import io.pulumi.azurenative.netapp.enums.ServiceLevel;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PoolArgs extends io.pulumi.resources.ResourceArgs {

    public static final PoolArgs Empty = new PoolArgs();

    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="poolName")
    private final @Nullable Input<String> poolName;

    public Input<String> getPoolName() {
        return this.poolName == null ? Input.empty() : this.poolName;
    }

    @InputImport(name="qosType")
    private final @Nullable Input<Either<String,QosType>> qosType;

    public Input<Either<String,QosType>> getQosType() {
        return this.qosType == null ? Input.empty() : this.qosType;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="serviceLevel", required=true)
    private final Input<Either<String,ServiceLevel>> serviceLevel;

    public Input<Either<String,ServiceLevel>> getServiceLevel() {
        return this.serviceLevel;
    }

    @InputImport(name="size", required=true)
    private final Input<Double> size;

    public Input<Double> getSize() {
        return this.size;
    }

    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public PoolArgs(
        Input<String> accountName,
        @Nullable Input<String> location,
        @Nullable Input<String> poolName,
        @Nullable Input<Either<String,QosType>> qosType,
        Input<String> resourceGroupName,
        Input<Either<String,ServiceLevel>> serviceLevel,
        Input<Double> size,
        @Nullable Input<Map<String,String>> tags) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.location = location;
        this.poolName = poolName;
        this.qosType = qosType == null ? Input.ofLeft("Auto") : qosType;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serviceLevel = serviceLevel == null ? Input.ofLeft("Premium") : Objects.requireNonNull(serviceLevel, "expected parameter 'serviceLevel' to be non-null");
        this.size = Objects.requireNonNull(size, "expected parameter 'size' to be non-null");
        this.tags = tags;
    }

    private PoolArgs() {
        this.accountName = Input.empty();
        this.location = Input.empty();
        this.poolName = Input.empty();
        this.qosType = Input.empty();
        this.resourceGroupName = Input.empty();
        this.serviceLevel = Input.empty();
        this.size = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<String> location;
        private @Nullable Input<String> poolName;
        private @Nullable Input<Either<String,QosType>> qosType;
        private Input<String> resourceGroupName;
        private Input<Either<String,ServiceLevel>> serviceLevel;
        private Input<Double> size;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(PoolArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.location = defaults.location;
    	      this.poolName = defaults.poolName;
    	      this.qosType = defaults.qosType;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceLevel = defaults.serviceLevel;
    	      this.size = defaults.size;
    	      this.tags = defaults.tags;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setPoolName(@Nullable Input<String> poolName) {
            this.poolName = poolName;
            return this;
        }

        public Builder setPoolName(@Nullable String poolName) {
            this.poolName = Input.ofNullable(poolName);
            return this;
        }

        public Builder setQosType(@Nullable Input<Either<String,QosType>> qosType) {
            this.qosType = qosType;
            return this;
        }

        public Builder setQosType(@Nullable Either<String,QosType> qosType) {
            this.qosType = Input.ofNullable(qosType);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setServiceLevel(Input<Either<String,ServiceLevel>> serviceLevel) {
            this.serviceLevel = Objects.requireNonNull(serviceLevel);
            return this;
        }

        public Builder setServiceLevel(Either<String,ServiceLevel> serviceLevel) {
            this.serviceLevel = Input.of(Objects.requireNonNull(serviceLevel));
            return this;
        }

        public Builder setSize(Input<Double> size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }

        public Builder setSize(Double size) {
            this.size = Input.of(Objects.requireNonNull(size));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public PoolArgs build() {
            return new PoolArgs(accountName, location, poolName, qosType, resourceGroupName, serviceLevel, size, tags);
        }
    }
}
