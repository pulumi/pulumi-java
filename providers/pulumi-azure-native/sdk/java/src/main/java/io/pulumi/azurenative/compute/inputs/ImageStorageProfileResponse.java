// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.azurenative.compute.inputs.ImageDataDiskResponse;
import io.pulumi.azurenative.compute.inputs.ImageOSDiskResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes a storage profile.
 * 
 */
public final class ImageStorageProfileResponse extends io.pulumi.resources.InvokeArgs {

    public static final ImageStorageProfileResponse Empty = new ImageStorageProfileResponse();

    /**
     * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
     * 
     */
    @InputImport(name="dataDisks")
      private final @Nullable List<ImageDataDiskResponse> dataDisks;

    public List<ImageDataDiskResponse> getDataDisks() {
        return this.dataDisks == null ? List.of() : this.dataDisks;
    }

    /**
     * Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
     * 
     */
    @InputImport(name="osDisk")
      private final @Nullable ImageOSDiskResponse osDisk;

    public Optional<ImageOSDiskResponse> getOsDisk() {
        return this.osDisk == null ? Optional.empty() : Optional.ofNullable(this.osDisk);
    }

    /**
     * Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).
     * 
     */
    @InputImport(name="zoneResilient")
      private final @Nullable Boolean zoneResilient;

    public Optional<Boolean> getZoneResilient() {
        return this.zoneResilient == null ? Optional.empty() : Optional.ofNullable(this.zoneResilient);
    }

    public ImageStorageProfileResponse(
        @Nullable List<ImageDataDiskResponse> dataDisks,
        @Nullable ImageOSDiskResponse osDisk,
        @Nullable Boolean zoneResilient) {
        this.dataDisks = dataDisks;
        this.osDisk = osDisk;
        this.zoneResilient = zoneResilient;
    }

    private ImageStorageProfileResponse() {
        this.dataDisks = List.of();
        this.osDisk = null;
        this.zoneResilient = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageStorageProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<ImageDataDiskResponse> dataDisks;
        private @Nullable ImageOSDiskResponse osDisk;
        private @Nullable Boolean zoneResilient;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageStorageProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataDisks = defaults.dataDisks;
    	      this.osDisk = defaults.osDisk;
    	      this.zoneResilient = defaults.zoneResilient;
        }

        public Builder dataDisks(@Nullable List<ImageDataDiskResponse> dataDisks) {
            this.dataDisks = dataDisks;
            return this;
        }

        public Builder osDisk(@Nullable ImageOSDiskResponse osDisk) {
            this.osDisk = osDisk;
            return this;
        }

        public Builder zoneResilient(@Nullable Boolean zoneResilient) {
            this.zoneResilient = zoneResilient;
            return this;
        }
        public ImageStorageProfileResponse build() {
            return new ImageStorageProfileResponse(dataDisks, osDisk, zoneResilient);
        }
    }
}
