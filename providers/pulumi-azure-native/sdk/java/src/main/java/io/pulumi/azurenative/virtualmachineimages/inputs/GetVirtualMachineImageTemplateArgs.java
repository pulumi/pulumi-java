// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.virtualmachineimages.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetVirtualMachineImageTemplateArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetVirtualMachineImageTemplateArgs Empty = new GetVirtualMachineImageTemplateArgs();

    /**
     * The name of the image Template
     * 
     */
    @Import(name="imageTemplateName", required=true)
      private final String imageTemplateName;

    public String getImageTemplateName() {
        return this.imageTemplateName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final String resourceGroupName;

    public String getResourceGroupName() {
        return this.resourceGroupName;
    }

    public GetVirtualMachineImageTemplateArgs(
        String imageTemplateName,
        String resourceGroupName) {
        this.imageTemplateName = Objects.requireNonNull(imageTemplateName, "expected parameter 'imageTemplateName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private GetVirtualMachineImageTemplateArgs() {
        this.imageTemplateName = null;
        this.resourceGroupName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualMachineImageTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String imageTemplateName;
        private String resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualMachineImageTemplateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageTemplateName = defaults.imageTemplateName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder imageTemplateName(String imageTemplateName) {
            this.imageTemplateName = Objects.requireNonNull(imageTemplateName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }        public GetVirtualMachineImageTemplateArgs build() {
            return new GetVirtualMachineImageTemplateArgs(imageTemplateName, resourceGroupName);
        }
    }
}
