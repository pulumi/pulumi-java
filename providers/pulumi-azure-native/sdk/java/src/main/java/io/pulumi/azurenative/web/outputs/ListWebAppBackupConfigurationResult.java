// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.BackupScheduleResponse;
import io.pulumi.azurenative.web.outputs.DatabaseBackupSettingResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ListWebAppBackupConfigurationResult {
    /**
     * Name of the backup.
     * 
     */
    private final @Nullable String backupName;
    /**
     * Schedule for the backup if it is executed periodically.
     * 
     */
    private final @Nullable BackupScheduleResponse backupSchedule;
    /**
     * Databases included in the backup.
     * 
     */
    private final @Nullable List<DatabaseBackupSettingResponse> databases;
    /**
     * True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * Resource Id.
     * 
     */
    private final String id;
    /**
     * Kind of resource.
     * 
     */
    private final @Nullable String kind;
    /**
     * Resource Name.
     * 
     */
    private final String name;
    /**
     * SAS URL to the container.
     * 
     */
    private final String storageAccountUrl;
    /**
     * Resource type.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"backupName","backupSchedule","databases","enabled","id","kind","name","storageAccountUrl","type"})
    private ListWebAppBackupConfigurationResult(
        @Nullable String backupName,
        @Nullable BackupScheduleResponse backupSchedule,
        @Nullable List<DatabaseBackupSettingResponse> databases,
        @Nullable Boolean enabled,
        String id,
        @Nullable String kind,
        String name,
        String storageAccountUrl,
        String type) {
        this.backupName = backupName;
        this.backupSchedule = backupSchedule;
        this.databases = databases;
        this.enabled = enabled;
        this.id = Objects.requireNonNull(id);
        this.kind = kind;
        this.name = Objects.requireNonNull(name);
        this.storageAccountUrl = Objects.requireNonNull(storageAccountUrl);
        this.type = Objects.requireNonNull(type);
    }

    /**
     * Name of the backup.
     * 
     */
    public Optional<String> getBackupName() {
        return Optional.ofNullable(this.backupName);
    }
    /**
     * Schedule for the backup if it is executed periodically.
     * 
     */
    public Optional<BackupScheduleResponse> getBackupSchedule() {
        return Optional.ofNullable(this.backupSchedule);
    }
    /**
     * Databases included in the backup.
     * 
     */
    public List<DatabaseBackupSettingResponse> getDatabases() {
        return this.databases == null ? List.of() : this.databases;
    }
    /**
     * True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.
     * 
     */
    public Optional<Boolean> getEnabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * Resource Id.
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * Kind of resource.
     * 
     */
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * Resource Name.
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * SAS URL to the container.
     * 
     */
    public String getStorageAccountUrl() {
        return this.storageAccountUrl;
    }
    /**
     * Resource type.
     * 
     */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListWebAppBackupConfigurationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String backupName;
        private @Nullable BackupScheduleResponse backupSchedule;
        private @Nullable List<DatabaseBackupSettingResponse> databases;
        private @Nullable Boolean enabled;
        private String id;
        private @Nullable String kind;
        private String name;
        private String storageAccountUrl;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ListWebAppBackupConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupName = defaults.backupName;
    	      this.backupSchedule = defaults.backupSchedule;
    	      this.databases = defaults.databases;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.storageAccountUrl = defaults.storageAccountUrl;
    	      this.type = defaults.type;
        }

        public Builder setBackupName(@Nullable String backupName) {
            this.backupName = backupName;
            return this;
        }

        public Builder setBackupSchedule(@Nullable BackupScheduleResponse backupSchedule) {
            this.backupSchedule = backupSchedule;
            return this;
        }

        public Builder setDatabases(@Nullable List<DatabaseBackupSettingResponse> databases) {
            this.databases = databases;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setStorageAccountUrl(String storageAccountUrl) {
            this.storageAccountUrl = Objects.requireNonNull(storageAccountUrl);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public ListWebAppBackupConfigurationResult build() {
            return new ListWebAppBackupConfigurationResult(backupName, backupSchedule, databases, enabled, id, kind, name, storageAccountUrl, type);
        }
    }
}
