// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.network.enums.IPVersion;
import io.pulumi.azurenative.network.inputs.ExtendedLocationArgs;
import io.pulumi.azurenative.network.inputs.IpTagArgs;
import io.pulumi.azurenative.network.inputs.NatGatewayArgs;
import io.pulumi.azurenative.network.inputs.PublicIPPrefixSkuArgs;
import io.pulumi.azurenative.network.inputs.SubResourceArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PublicIPPrefixArgs extends io.pulumi.resources.ResourceArgs {

    public static final PublicIPPrefixArgs Empty = new PublicIPPrefixArgs();

    /**
     * The customIpPrefix that this prefix is associated with.
     * 
     */
    @Import(name="customIPPrefix")
      private final @Nullable Output<SubResourceArgs> customIPPrefix;

    public Output<SubResourceArgs> customIPPrefix() {
        return this.customIPPrefix == null ? Codegen.empty() : this.customIPPrefix;
    }

    /**
     * The extended location of the public ip address.
     * 
     */
    @Import(name="extendedLocation")
      private final @Nullable Output<ExtendedLocationArgs> extendedLocation;

    public Output<ExtendedLocationArgs> extendedLocation() {
        return this.extendedLocation == null ? Codegen.empty() : this.extendedLocation;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> id() {
        return this.id == null ? Codegen.empty() : this.id;
    }

    /**
     * The list of tags associated with the public IP prefix.
     * 
     */
    @Import(name="ipTags")
      private final @Nullable Output<List<IpTagArgs>> ipTags;

    public Output<List<IpTagArgs>> ipTags() {
        return this.ipTags == null ? Codegen.empty() : this.ipTags;
    }

    /**
     * Resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * NatGateway of Public IP Prefix.
     * 
     */
    @Import(name="natGateway")
      private final @Nullable Output<NatGatewayArgs> natGateway;

    public Output<NatGatewayArgs> natGateway() {
        return this.natGateway == null ? Codegen.empty() : this.natGateway;
    }

    /**
     * The Length of the Public IP Prefix.
     * 
     */
    @Import(name="prefixLength")
      private final @Nullable Output<Integer> prefixLength;

    public Output<Integer> prefixLength() {
        return this.prefixLength == null ? Codegen.empty() : this.prefixLength;
    }

    /**
     * The public IP address version.
     * 
     */
    @Import(name="publicIPAddressVersion")
      private final @Nullable Output<Either<String,IPVersion>> publicIPAddressVersion;

    public Output<Either<String,IPVersion>> publicIPAddressVersion() {
        return this.publicIPAddressVersion == null ? Codegen.empty() : this.publicIPAddressVersion;
    }

    /**
     * The name of the public IP prefix.
     * 
     */
    @Import(name="publicIpPrefixName")
      private final @Nullable Output<String> publicIpPrefixName;

    public Output<String> publicIpPrefixName() {
        return this.publicIpPrefixName == null ? Codegen.empty() : this.publicIpPrefixName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The public IP prefix SKU.
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<PublicIPPrefixSkuArgs> sku;

    public Output<PublicIPPrefixSkuArgs> sku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    @Import(name="zones")
      private final @Nullable Output<List<String>> zones;

    public Output<List<String>> zones() {
        return this.zones == null ? Codegen.empty() : this.zones;
    }

    public PublicIPPrefixArgs(
        @Nullable Output<SubResourceArgs> customIPPrefix,
        @Nullable Output<ExtendedLocationArgs> extendedLocation,
        @Nullable Output<String> id,
        @Nullable Output<List<IpTagArgs>> ipTags,
        @Nullable Output<String> location,
        @Nullable Output<NatGatewayArgs> natGateway,
        @Nullable Output<Integer> prefixLength,
        @Nullable Output<Either<String,IPVersion>> publicIPAddressVersion,
        @Nullable Output<String> publicIpPrefixName,
        Output<String> resourceGroupName,
        @Nullable Output<PublicIPPrefixSkuArgs> sku,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<List<String>> zones) {
        this.customIPPrefix = customIPPrefix;
        this.extendedLocation = extendedLocation;
        this.id = id;
        this.ipTags = ipTags;
        this.location = location;
        this.natGateway = natGateway;
        this.prefixLength = prefixLength;
        this.publicIPAddressVersion = publicIPAddressVersion;
        this.publicIpPrefixName = publicIpPrefixName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sku = sku;
        this.tags = tags;
        this.zones = zones;
    }

    private PublicIPPrefixArgs() {
        this.customIPPrefix = Codegen.empty();
        this.extendedLocation = Codegen.empty();
        this.id = Codegen.empty();
        this.ipTags = Codegen.empty();
        this.location = Codegen.empty();
        this.natGateway = Codegen.empty();
        this.prefixLength = Codegen.empty();
        this.publicIPAddressVersion = Codegen.empty();
        this.publicIpPrefixName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
        this.zones = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicIPPrefixArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SubResourceArgs> customIPPrefix;
        private @Nullable Output<ExtendedLocationArgs> extendedLocation;
        private @Nullable Output<String> id;
        private @Nullable Output<List<IpTagArgs>> ipTags;
        private @Nullable Output<String> location;
        private @Nullable Output<NatGatewayArgs> natGateway;
        private @Nullable Output<Integer> prefixLength;
        private @Nullable Output<Either<String,IPVersion>> publicIPAddressVersion;
        private @Nullable Output<String> publicIpPrefixName;
        private Output<String> resourceGroupName;
        private @Nullable Output<PublicIPPrefixSkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<List<String>> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(PublicIPPrefixArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customIPPrefix = defaults.customIPPrefix;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.id = defaults.id;
    	      this.ipTags = defaults.ipTags;
    	      this.location = defaults.location;
    	      this.natGateway = defaults.natGateway;
    	      this.prefixLength = defaults.prefixLength;
    	      this.publicIPAddressVersion = defaults.publicIPAddressVersion;
    	      this.publicIpPrefixName = defaults.publicIpPrefixName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.zones = defaults.zones;
        }

        public Builder customIPPrefix(@Nullable Output<SubResourceArgs> customIPPrefix) {
            this.customIPPrefix = customIPPrefix;
            return this;
        }
        public Builder customIPPrefix(@Nullable SubResourceArgs customIPPrefix) {
            this.customIPPrefix = Codegen.ofNullable(customIPPrefix);
            return this;
        }
        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        public Builder extendedLocation(@Nullable ExtendedLocationArgs extendedLocation) {
            this.extendedLocation = Codegen.ofNullable(extendedLocation);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Codegen.ofNullable(id);
            return this;
        }
        public Builder ipTags(@Nullable Output<List<IpTagArgs>> ipTags) {
            this.ipTags = ipTags;
            return this;
        }
        public Builder ipTags(@Nullable List<IpTagArgs> ipTags) {
            this.ipTags = Codegen.ofNullable(ipTags);
            return this;
        }
        public Builder ipTags(IpTagArgs... ipTags) {
            return ipTags(List.of(ipTags));
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder natGateway(@Nullable Output<NatGatewayArgs> natGateway) {
            this.natGateway = natGateway;
            return this;
        }
        public Builder natGateway(@Nullable NatGatewayArgs natGateway) {
            this.natGateway = Codegen.ofNullable(natGateway);
            return this;
        }
        public Builder prefixLength(@Nullable Output<Integer> prefixLength) {
            this.prefixLength = prefixLength;
            return this;
        }
        public Builder prefixLength(@Nullable Integer prefixLength) {
            this.prefixLength = Codegen.ofNullable(prefixLength);
            return this;
        }
        public Builder publicIPAddressVersion(@Nullable Output<Either<String,IPVersion>> publicIPAddressVersion) {
            this.publicIPAddressVersion = publicIPAddressVersion;
            return this;
        }
        public Builder publicIPAddressVersion(@Nullable Either<String,IPVersion> publicIPAddressVersion) {
            this.publicIPAddressVersion = Codegen.ofNullable(publicIPAddressVersion);
            return this;
        }
        public Builder publicIpPrefixName(@Nullable Output<String> publicIpPrefixName) {
            this.publicIpPrefixName = publicIpPrefixName;
            return this;
        }
        public Builder publicIpPrefixName(@Nullable String publicIpPrefixName) {
            this.publicIpPrefixName = Codegen.ofNullable(publicIpPrefixName);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder sku(@Nullable Output<PublicIPPrefixSkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable PublicIPPrefixSkuArgs sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder zones(@Nullable Output<List<String>> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(@Nullable List<String> zones) {
            this.zones = Codegen.ofNullable(zones);
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }        public PublicIPPrefixArgs build() {
            return new PublicIPPrefixArgs(customIPPrefix, extendedLocation, id, ipTags, location, natGateway, prefixLength, publicIPAddressVersion, publicIpPrefixName, resourceGroupName, sku, tags, zones);
        }
    }
}
