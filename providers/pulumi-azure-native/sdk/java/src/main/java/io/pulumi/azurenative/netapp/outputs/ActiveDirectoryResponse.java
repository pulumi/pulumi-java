// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.netapp.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ActiveDirectoryResponse {
    private final @Nullable String activeDirectoryId;
    private final @Nullable String adName;
    private final @Nullable Boolean aesEncryption;
    private final @Nullable Boolean allowLocalNfsUsersWithLdap;
    private final @Nullable List<String> backupOperators;
    private final @Nullable String dns;
    private final @Nullable String domain;
    private final @Nullable String kdcIP;
    private final @Nullable Boolean ldapOverTLS;
    private final @Nullable Boolean ldapSigning;
    private final @Nullable String organizationalUnit;
    private final @Nullable String password;
    private final @Nullable List<String> securityOperators;
    private final @Nullable String serverRootCACertificate;
    private final @Nullable String site;
    private final @Nullable String smbServerName;
    private final String status;
    private final String statusDetails;
    private final @Nullable String username;

    @OutputCustomType.Constructor({"activeDirectoryId","adName","aesEncryption","allowLocalNfsUsersWithLdap","backupOperators","dns","domain","kdcIP","ldapOverTLS","ldapSigning","organizationalUnit","password","securityOperators","serverRootCACertificate","site","smbServerName","status","statusDetails","username"})
    private ActiveDirectoryResponse(
        @Nullable String activeDirectoryId,
        @Nullable String adName,
        @Nullable Boolean aesEncryption,
        @Nullable Boolean allowLocalNfsUsersWithLdap,
        @Nullable List<String> backupOperators,
        @Nullable String dns,
        @Nullable String domain,
        @Nullable String kdcIP,
        @Nullable Boolean ldapOverTLS,
        @Nullable Boolean ldapSigning,
        @Nullable String organizationalUnit,
        @Nullable String password,
        @Nullable List<String> securityOperators,
        @Nullable String serverRootCACertificate,
        @Nullable String site,
        @Nullable String smbServerName,
        String status,
        String statusDetails,
        @Nullable String username) {
        this.activeDirectoryId = activeDirectoryId;
        this.adName = adName;
        this.aesEncryption = aesEncryption;
        this.allowLocalNfsUsersWithLdap = allowLocalNfsUsersWithLdap;
        this.backupOperators = backupOperators;
        this.dns = dns;
        this.domain = domain;
        this.kdcIP = kdcIP;
        this.ldapOverTLS = ldapOverTLS;
        this.ldapSigning = ldapSigning;
        this.organizationalUnit = organizationalUnit;
        this.password = password;
        this.securityOperators = securityOperators;
        this.serverRootCACertificate = serverRootCACertificate;
        this.site = site;
        this.smbServerName = smbServerName;
        this.status = Objects.requireNonNull(status);
        this.statusDetails = Objects.requireNonNull(statusDetails);
        this.username = username;
    }

    public Optional<String> getActiveDirectoryId() {
        return Optional.ofNullable(this.activeDirectoryId);
    }
    public Optional<String> getAdName() {
        return Optional.ofNullable(this.adName);
    }
    public Optional<Boolean> getAesEncryption() {
        return Optional.ofNullable(this.aesEncryption);
    }
    public Optional<Boolean> getAllowLocalNfsUsersWithLdap() {
        return Optional.ofNullable(this.allowLocalNfsUsersWithLdap);
    }
    public List<String> getBackupOperators() {
        return this.backupOperators == null ? List.of() : this.backupOperators;
    }
    public Optional<String> getDns() {
        return Optional.ofNullable(this.dns);
    }
    public Optional<String> getDomain() {
        return Optional.ofNullable(this.domain);
    }
    public Optional<String> getKdcIP() {
        return Optional.ofNullable(this.kdcIP);
    }
    public Optional<Boolean> getLdapOverTLS() {
        return Optional.ofNullable(this.ldapOverTLS);
    }
    public Optional<Boolean> getLdapSigning() {
        return Optional.ofNullable(this.ldapSigning);
    }
    public Optional<String> getOrganizationalUnit() {
        return Optional.ofNullable(this.organizationalUnit);
    }
    public Optional<String> getPassword() {
        return Optional.ofNullable(this.password);
    }
    public List<String> getSecurityOperators() {
        return this.securityOperators == null ? List.of() : this.securityOperators;
    }
    public Optional<String> getServerRootCACertificate() {
        return Optional.ofNullable(this.serverRootCACertificate);
    }
    public Optional<String> getSite() {
        return Optional.ofNullable(this.site);
    }
    public Optional<String> getSmbServerName() {
        return Optional.ofNullable(this.smbServerName);
    }
    public String getStatus() {
        return this.status;
    }
    public String getStatusDetails() {
        return this.statusDetails;
    }
    public Optional<String> getUsername() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActiveDirectoryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String activeDirectoryId;
        private @Nullable String adName;
        private @Nullable Boolean aesEncryption;
        private @Nullable Boolean allowLocalNfsUsersWithLdap;
        private @Nullable List<String> backupOperators;
        private @Nullable String dns;
        private @Nullable String domain;
        private @Nullable String kdcIP;
        private @Nullable Boolean ldapOverTLS;
        private @Nullable Boolean ldapSigning;
        private @Nullable String organizationalUnit;
        private @Nullable String password;
        private @Nullable List<String> securityOperators;
        private @Nullable String serverRootCACertificate;
        private @Nullable String site;
        private @Nullable String smbServerName;
        private String status;
        private String statusDetails;
        private @Nullable String username;

        public Builder() {
    	      // Empty
        }

        public Builder(ActiveDirectoryResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryId = defaults.activeDirectoryId;
    	      this.adName = defaults.adName;
    	      this.aesEncryption = defaults.aesEncryption;
    	      this.allowLocalNfsUsersWithLdap = defaults.allowLocalNfsUsersWithLdap;
    	      this.backupOperators = defaults.backupOperators;
    	      this.dns = defaults.dns;
    	      this.domain = defaults.domain;
    	      this.kdcIP = defaults.kdcIP;
    	      this.ldapOverTLS = defaults.ldapOverTLS;
    	      this.ldapSigning = defaults.ldapSigning;
    	      this.organizationalUnit = defaults.organizationalUnit;
    	      this.password = defaults.password;
    	      this.securityOperators = defaults.securityOperators;
    	      this.serverRootCACertificate = defaults.serverRootCACertificate;
    	      this.site = defaults.site;
    	      this.smbServerName = defaults.smbServerName;
    	      this.status = defaults.status;
    	      this.statusDetails = defaults.statusDetails;
    	      this.username = defaults.username;
        }

        public Builder setActiveDirectoryId(@Nullable String activeDirectoryId) {
            this.activeDirectoryId = activeDirectoryId;
            return this;
        }

        public Builder setAdName(@Nullable String adName) {
            this.adName = adName;
            return this;
        }

        public Builder setAesEncryption(@Nullable Boolean aesEncryption) {
            this.aesEncryption = aesEncryption;
            return this;
        }

        public Builder setAllowLocalNfsUsersWithLdap(@Nullable Boolean allowLocalNfsUsersWithLdap) {
            this.allowLocalNfsUsersWithLdap = allowLocalNfsUsersWithLdap;
            return this;
        }

        public Builder setBackupOperators(@Nullable List<String> backupOperators) {
            this.backupOperators = backupOperators;
            return this;
        }

        public Builder setDns(@Nullable String dns) {
            this.dns = dns;
            return this;
        }

        public Builder setDomain(@Nullable String domain) {
            this.domain = domain;
            return this;
        }

        public Builder setKdcIP(@Nullable String kdcIP) {
            this.kdcIP = kdcIP;
            return this;
        }

        public Builder setLdapOverTLS(@Nullable Boolean ldapOverTLS) {
            this.ldapOverTLS = ldapOverTLS;
            return this;
        }

        public Builder setLdapSigning(@Nullable Boolean ldapSigning) {
            this.ldapSigning = ldapSigning;
            return this;
        }

        public Builder setOrganizationalUnit(@Nullable String organizationalUnit) {
            this.organizationalUnit = organizationalUnit;
            return this;
        }

        public Builder setPassword(@Nullable String password) {
            this.password = password;
            return this;
        }

        public Builder setSecurityOperators(@Nullable List<String> securityOperators) {
            this.securityOperators = securityOperators;
            return this;
        }

        public Builder setServerRootCACertificate(@Nullable String serverRootCACertificate) {
            this.serverRootCACertificate = serverRootCACertificate;
            return this;
        }

        public Builder setSite(@Nullable String site) {
            this.site = site;
            return this;
        }

        public Builder setSmbServerName(@Nullable String smbServerName) {
            this.smbServerName = smbServerName;
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setStatusDetails(String statusDetails) {
            this.statusDetails = Objects.requireNonNull(statusDetails);
            return this;
        }

        public Builder setUsername(@Nullable String username) {
            this.username = username;
            return this;
        }

        public ActiveDirectoryResponse build() {
            return new ActiveDirectoryResponse(activeDirectoryId, adName, aesEncryption, allowLocalNfsUsersWithLdap, backupOperators, dns, domain, kdcIP, ldapOverTLS, ldapSigning, organizationalUnit, password, securityOperators, serverRootCACertificate, site, smbServerName, status, statusDetails, username);
        }
    }
}
