// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.inputs;

import io.pulumi.azurenative.storage.inputs.ManagementPolicyActionArgs;
import io.pulumi.azurenative.storage.inputs.ManagementPolicyFilterArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
 * 
 */
public final class ManagementPolicyDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ManagementPolicyDefinitionArgs Empty = new ManagementPolicyDefinitionArgs();

    /**
     * An object that defines the action set.
     * 
     */
    @InputImport(name="actions", required=true)
        private final Input<ManagementPolicyActionArgs> actions;

    public Input<ManagementPolicyActionArgs> getActions() {
        return this.actions;
    }

    /**
     * An object that defines the filter set.
     * 
     */
    @InputImport(name="filters")
        private final @Nullable Input<ManagementPolicyFilterArgs> filters;

    public Input<ManagementPolicyFilterArgs> getFilters() {
        return this.filters == null ? Input.empty() : this.filters;
    }

    public ManagementPolicyDefinitionArgs(
        Input<ManagementPolicyActionArgs> actions,
        @Nullable Input<ManagementPolicyFilterArgs> filters) {
        this.actions = Objects.requireNonNull(actions, "expected parameter 'actions' to be non-null");
        this.filters = filters;
    }

    private ManagementPolicyDefinitionArgs() {
        this.actions = Input.empty();
        this.filters = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementPolicyDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<ManagementPolicyActionArgs> actions;
        private @Nullable Input<ManagementPolicyFilterArgs> filters;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagementPolicyDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.filters = defaults.filters;
        }

        public Builder setActions(Input<ManagementPolicyActionArgs> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }

        public Builder setActions(ManagementPolicyActionArgs actions) {
            this.actions = Input.of(Objects.requireNonNull(actions));
            return this;
        }

        public Builder setFilters(@Nullable Input<ManagementPolicyFilterArgs> filters) {
            this.filters = filters;
            return this;
        }

        public Builder setFilters(@Nullable ManagementPolicyFilterArgs filters) {
            this.filters = Input.ofNullable(filters);
            return this;
        }
        public ManagementPolicyDefinitionArgs build() {
            return new ManagementPolicyDefinitionArgs(actions, filters);
        }
    }
}
