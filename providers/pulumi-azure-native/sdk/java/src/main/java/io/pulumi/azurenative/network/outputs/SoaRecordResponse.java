// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class SoaRecordResponse {
    /**
     * The email contact for this SOA record.
     * 
     */
    private final @Nullable String email;
    /**
     * The expire time for this SOA record.
     * 
     */
    private final @Nullable Double expireTime;
    /**
     * The domain name of the authoritative name server for this SOA record.
     * 
     */
    private final @Nullable String host;
    /**
     * The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
     * 
     */
    private final @Nullable Double minimumTtl;
    /**
     * The refresh value for this SOA record.
     * 
     */
    private final @Nullable Double refreshTime;
    /**
     * The retry time for this SOA record.
     * 
     */
    private final @Nullable Double retryTime;
    /**
     * The serial number for this SOA record.
     * 
     */
    private final @Nullable Double serialNumber;

    @OutputCustomType.Constructor({"email","expireTime","host","minimumTtl","refreshTime","retryTime","serialNumber"})
    private SoaRecordResponse(
        @Nullable String email,
        @Nullable Double expireTime,
        @Nullable String host,
        @Nullable Double minimumTtl,
        @Nullable Double refreshTime,
        @Nullable Double retryTime,
        @Nullable Double serialNumber) {
        this.email = email;
        this.expireTime = expireTime;
        this.host = host;
        this.minimumTtl = minimumTtl;
        this.refreshTime = refreshTime;
        this.retryTime = retryTime;
        this.serialNumber = serialNumber;
    }

    /**
     * The email contact for this SOA record.
     * 
    */
    public Optional<String> getEmail() {
        return Optional.ofNullable(this.email);
    }
    /**
     * The expire time for this SOA record.
     * 
    */
    public Optional<Double> getExpireTime() {
        return Optional.ofNullable(this.expireTime);
    }
    /**
     * The domain name of the authoritative name server for this SOA record.
     * 
    */
    public Optional<String> getHost() {
        return Optional.ofNullable(this.host);
    }
    /**
     * The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
     * 
    */
    public Optional<Double> getMinimumTtl() {
        return Optional.ofNullable(this.minimumTtl);
    }
    /**
     * The refresh value for this SOA record.
     * 
    */
    public Optional<Double> getRefreshTime() {
        return Optional.ofNullable(this.refreshTime);
    }
    /**
     * The retry time for this SOA record.
     * 
    */
    public Optional<Double> getRetryTime() {
        return Optional.ofNullable(this.retryTime);
    }
    /**
     * The serial number for this SOA record.
     * 
    */
    public Optional<Double> getSerialNumber() {
        return Optional.ofNullable(this.serialNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SoaRecordResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String email;
        private @Nullable Double expireTime;
        private @Nullable String host;
        private @Nullable Double minimumTtl;
        private @Nullable Double refreshTime;
        private @Nullable Double retryTime;
        private @Nullable Double serialNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(SoaRecordResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.expireTime = defaults.expireTime;
    	      this.host = defaults.host;
    	      this.minimumTtl = defaults.minimumTtl;
    	      this.refreshTime = defaults.refreshTime;
    	      this.retryTime = defaults.retryTime;
    	      this.serialNumber = defaults.serialNumber;
        }

        public Builder setEmail(@Nullable String email) {
            this.email = email;
            return this;
        }

        public Builder setExpireTime(@Nullable Double expireTime) {
            this.expireTime = expireTime;
            return this;
        }

        public Builder setHost(@Nullable String host) {
            this.host = host;
            return this;
        }

        public Builder setMinimumTtl(@Nullable Double minimumTtl) {
            this.minimumTtl = minimumTtl;
            return this;
        }

        public Builder setRefreshTime(@Nullable Double refreshTime) {
            this.refreshTime = refreshTime;
            return this;
        }

        public Builder setRetryTime(@Nullable Double retryTime) {
            this.retryTime = retryTime;
            return this;
        }

        public Builder setSerialNumber(@Nullable Double serialNumber) {
            this.serialNumber = serialNumber;
            return this;
        }
        public SoaRecordResponse build() {
            return new SoaRecordResponse(email, expireTime, host, minimumTtl, refreshTime, retryTime, serialNumber);
        }
    }
}
