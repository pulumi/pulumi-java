// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.insights.enums.KnownDataCollectionRuleResourceKind;
import io.pulumi.azurenative.insights.inputs.DataCollectionRuleDataSourcesArgs;
import io.pulumi.azurenative.insights.inputs.DataCollectionRuleDestinationsArgs;
import io.pulumi.azurenative.insights.inputs.DataFlowArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DataCollectionRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataCollectionRuleArgs Empty = new DataCollectionRuleArgs();

    /**
     * The name of the data collection rule. The name is case insensitive.
     * 
     */
    @Import(name="dataCollectionRuleName")
      private final @Nullable Output<String> dataCollectionRuleName;

    public Output<String> dataCollectionRuleName() {
        return this.dataCollectionRuleName == null ? Codegen.empty() : this.dataCollectionRuleName;
    }

    /**
     * The specification of data flows.
     * 
     */
    @Import(name="dataFlows")
      private final @Nullable Output<List<DataFlowArgs>> dataFlows;

    public Output<List<DataFlowArgs>> dataFlows() {
        return this.dataFlows == null ? Codegen.empty() : this.dataFlows;
    }

    /**
     * The specification of data sources.
     * This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
     * 
     */
    @Import(name="dataSources")
      private final @Nullable Output<DataCollectionRuleDataSourcesArgs> dataSources;

    public Output<DataCollectionRuleDataSourcesArgs> dataSources() {
        return this.dataSources == null ? Codegen.empty() : this.dataSources;
    }

    /**
     * Description of the data collection rule.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The specification of destinations.
     * 
     */
    @Import(name="destinations")
      private final @Nullable Output<DataCollectionRuleDestinationsArgs> destinations;

    public Output<DataCollectionRuleDestinationsArgs> destinations() {
        return this.destinations == null ? Codegen.empty() : this.destinations;
    }

    /**
     * The kind of the resource.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<Either<String,KnownDataCollectionRuleResourceKind>> kind;

    public Output<Either<String,KnownDataCollectionRuleResourceKind>> kind() {
        return this.kind == null ? Codegen.empty() : this.kind;
    }

    /**
     * The geo-location where the resource lives.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public DataCollectionRuleArgs(
        @Nullable Output<String> dataCollectionRuleName,
        @Nullable Output<List<DataFlowArgs>> dataFlows,
        @Nullable Output<DataCollectionRuleDataSourcesArgs> dataSources,
        @Nullable Output<String> description,
        @Nullable Output<DataCollectionRuleDestinationsArgs> destinations,
        @Nullable Output<Either<String,KnownDataCollectionRuleResourceKind>> kind,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.dataCollectionRuleName = dataCollectionRuleName;
        this.dataFlows = dataFlows;
        this.dataSources = dataSources;
        this.description = description;
        this.destinations = destinations;
        this.kind = kind;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private DataCollectionRuleArgs() {
        this.dataCollectionRuleName = Codegen.empty();
        this.dataFlows = Codegen.empty();
        this.dataSources = Codegen.empty();
        this.description = Codegen.empty();
        this.destinations = Codegen.empty();
        this.kind = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataCollectionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> dataCollectionRuleName;
        private @Nullable Output<List<DataFlowArgs>> dataFlows;
        private @Nullable Output<DataCollectionRuleDataSourcesArgs> dataSources;
        private @Nullable Output<String> description;
        private @Nullable Output<DataCollectionRuleDestinationsArgs> destinations;
        private @Nullable Output<Either<String,KnownDataCollectionRuleResourceKind>> kind;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DataCollectionRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataCollectionRuleName = defaults.dataCollectionRuleName;
    	      this.dataFlows = defaults.dataFlows;
    	      this.dataSources = defaults.dataSources;
    	      this.description = defaults.description;
    	      this.destinations = defaults.destinations;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder dataCollectionRuleName(@Nullable Output<String> dataCollectionRuleName) {
            this.dataCollectionRuleName = dataCollectionRuleName;
            return this;
        }
        public Builder dataCollectionRuleName(@Nullable String dataCollectionRuleName) {
            this.dataCollectionRuleName = Codegen.ofNullable(dataCollectionRuleName);
            return this;
        }
        public Builder dataFlows(@Nullable Output<List<DataFlowArgs>> dataFlows) {
            this.dataFlows = dataFlows;
            return this;
        }
        public Builder dataFlows(@Nullable List<DataFlowArgs> dataFlows) {
            this.dataFlows = Codegen.ofNullable(dataFlows);
            return this;
        }
        public Builder dataFlows(DataFlowArgs... dataFlows) {
            return dataFlows(List.of(dataFlows));
        }
        public Builder dataSources(@Nullable Output<DataCollectionRuleDataSourcesArgs> dataSources) {
            this.dataSources = dataSources;
            return this;
        }
        public Builder dataSources(@Nullable DataCollectionRuleDataSourcesArgs dataSources) {
            this.dataSources = Codegen.ofNullable(dataSources);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder destinations(@Nullable Output<DataCollectionRuleDestinationsArgs> destinations) {
            this.destinations = destinations;
            return this;
        }
        public Builder destinations(@Nullable DataCollectionRuleDestinationsArgs destinations) {
            this.destinations = Codegen.ofNullable(destinations);
            return this;
        }
        public Builder kind(@Nullable Output<Either<String,KnownDataCollectionRuleResourceKind>> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable Either<String,KnownDataCollectionRuleResourceKind> kind) {
            this.kind = Codegen.ofNullable(kind);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public DataCollectionRuleArgs build() {
            return new DataCollectionRuleArgs(dataCollectionRuleName, dataFlows, dataSources, description, destinations, kind, location, resourceGroupName, tags);
        }
    }
}
