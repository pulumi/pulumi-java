// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn;

import io.pulumi.azurenative.cdn.inputs.AFDDomainHttpsParametersArgs;
import io.pulumi.azurenative.cdn.inputs.ResourceReferenceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AFDCustomDomainArgs extends io.pulumi.resources.ResourceArgs {

    public static final AFDCustomDomainArgs Empty = new AFDCustomDomainArgs();

    /**
     * Resource reference to the Azure DNS zone
     * 
     */
    @Import(name="azureDnsZone")
      private final @Nullable Output<ResourceReferenceArgs> azureDnsZone;

    public Output<ResourceReferenceArgs> getAzureDnsZone() {
        return this.azureDnsZone == null ? Output.empty() : this.azureDnsZone;
    }

    /**
     * Name of the domain under the profile which is unique globally
     * 
     */
    @Import(name="customDomainName")
      private final @Nullable Output<String> customDomainName;

    public Output<String> getCustomDomainName() {
        return this.customDomainName == null ? Output.empty() : this.customDomainName;
    }

    /**
     * The host name of the domain. Must be a domain name.
     * 
     */
    @Import(name="hostName", required=true)
      private final Output<String> hostName;

    public Output<String> getHostName() {
        return this.hostName;
    }

    /**
     * Name of the CDN profile which is unique within the resource group.
     * 
     */
    @Import(name="profileName", required=true)
      private final Output<String> profileName;

    public Output<String> getProfileName() {
        return this.profileName;
    }

    /**
     * Name of the Resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default.
     * 
     */
    @Import(name="tlsSettings")
      private final @Nullable Output<AFDDomainHttpsParametersArgs> tlsSettings;

    public Output<AFDDomainHttpsParametersArgs> getTlsSettings() {
        return this.tlsSettings == null ? Output.empty() : this.tlsSettings;
    }

    public AFDCustomDomainArgs(
        @Nullable Output<ResourceReferenceArgs> azureDnsZone,
        @Nullable Output<String> customDomainName,
        Output<String> hostName,
        Output<String> profileName,
        Output<String> resourceGroupName,
        @Nullable Output<AFDDomainHttpsParametersArgs> tlsSettings) {
        this.azureDnsZone = azureDnsZone;
        this.customDomainName = customDomainName;
        this.hostName = Objects.requireNonNull(hostName, "expected parameter 'hostName' to be non-null");
        this.profileName = Objects.requireNonNull(profileName, "expected parameter 'profileName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tlsSettings = tlsSettings;
    }

    private AFDCustomDomainArgs() {
        this.azureDnsZone = Output.empty();
        this.customDomainName = Output.empty();
        this.hostName = Output.empty();
        this.profileName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.tlsSettings = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AFDCustomDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ResourceReferenceArgs> azureDnsZone;
        private @Nullable Output<String> customDomainName;
        private Output<String> hostName;
        private Output<String> profileName;
        private Output<String> resourceGroupName;
        private @Nullable Output<AFDDomainHttpsParametersArgs> tlsSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(AFDCustomDomainArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureDnsZone = defaults.azureDnsZone;
    	      this.customDomainName = defaults.customDomainName;
    	      this.hostName = defaults.hostName;
    	      this.profileName = defaults.profileName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tlsSettings = defaults.tlsSettings;
        }

        public Builder azureDnsZone(@Nullable Output<ResourceReferenceArgs> azureDnsZone) {
            this.azureDnsZone = azureDnsZone;
            return this;
        }

        public Builder azureDnsZone(@Nullable ResourceReferenceArgs azureDnsZone) {
            this.azureDnsZone = Output.ofNullable(azureDnsZone);
            return this;
        }

        public Builder customDomainName(@Nullable Output<String> customDomainName) {
            this.customDomainName = customDomainName;
            return this;
        }

        public Builder customDomainName(@Nullable String customDomainName) {
            this.customDomainName = Output.ofNullable(customDomainName);
            return this;
        }

        public Builder hostName(Output<String> hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }

        public Builder hostName(String hostName) {
            this.hostName = Output.of(Objects.requireNonNull(hostName));
            return this;
        }

        public Builder profileName(Output<String> profileName) {
            this.profileName = Objects.requireNonNull(profileName);
            return this;
        }

        public Builder profileName(String profileName) {
            this.profileName = Output.of(Objects.requireNonNull(profileName));
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder tlsSettings(@Nullable Output<AFDDomainHttpsParametersArgs> tlsSettings) {
            this.tlsSettings = tlsSettings;
            return this;
        }

        public Builder tlsSettings(@Nullable AFDDomainHttpsParametersArgs tlsSettings) {
            this.tlsSettings = Output.ofNullable(tlsSettings);
            return this;
        }
        public AFDCustomDomainArgs build() {
            return new AFDCustomDomainArgs(azureDnsZone, customDomainName, hostName, profileName, resourceGroupName, tlsSettings);
        }
    }
}
