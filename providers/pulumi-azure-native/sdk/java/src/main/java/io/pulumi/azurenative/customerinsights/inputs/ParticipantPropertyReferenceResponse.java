// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The participant property reference.
 * 
 */
public final class ParticipantPropertyReferenceResponse extends io.pulumi.resources.InvokeArgs {

    public static final ParticipantPropertyReferenceResponse Empty = new ParticipantPropertyReferenceResponse();

    /**
     * The source property that maps to the target property.
     * 
     */
    @Import(name="sourcePropertyName", required=true)
      private final String sourcePropertyName;

    public String getSourcePropertyName() {
        return this.sourcePropertyName;
    }

    /**
     * The target property that maps to the source property.
     * 
     */
    @Import(name="targetPropertyName", required=true)
      private final String targetPropertyName;

    public String getTargetPropertyName() {
        return this.targetPropertyName;
    }

    public ParticipantPropertyReferenceResponse(
        String sourcePropertyName,
        String targetPropertyName) {
        this.sourcePropertyName = Objects.requireNonNull(sourcePropertyName, "expected parameter 'sourcePropertyName' to be non-null");
        this.targetPropertyName = Objects.requireNonNull(targetPropertyName, "expected parameter 'targetPropertyName' to be non-null");
    }

    private ParticipantPropertyReferenceResponse() {
        this.sourcePropertyName = null;
        this.targetPropertyName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParticipantPropertyReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String sourcePropertyName;
        private String targetPropertyName;

        public Builder() {
    	      // Empty
        }

        public Builder(ParticipantPropertyReferenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourcePropertyName = defaults.sourcePropertyName;
    	      this.targetPropertyName = defaults.targetPropertyName;
        }

        public Builder sourcePropertyName(String sourcePropertyName) {
            this.sourcePropertyName = Objects.requireNonNull(sourcePropertyName);
            return this;
        }

        public Builder targetPropertyName(String targetPropertyName) {
            this.targetPropertyName = Objects.requireNonNull(targetPropertyName);
            return this;
        }
        public ParticipantPropertyReferenceResponse build() {
            return new ParticipantPropertyReferenceResponse(sourcePropertyName, targetPropertyName);
        }
    }
}
