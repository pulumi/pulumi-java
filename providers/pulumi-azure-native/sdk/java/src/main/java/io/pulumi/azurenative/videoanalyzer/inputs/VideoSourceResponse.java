// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.videoanalyzer.inputs;

import io.pulumi.azurenative.videoanalyzer.inputs.VideoSequenceAbsoluteTimeMarkersResponse;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class VideoSourceResponse extends io.pulumi.resources.InvokeArgs {

    public static final VideoSourceResponse Empty = new VideoSourceResponse();

    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    @InputImport(name="timeSequences", required=true)
    private final VideoSequenceAbsoluteTimeMarkersResponse timeSequences;

    public VideoSequenceAbsoluteTimeMarkersResponse getTimeSequences() {
        return this.timeSequences;
    }

    @InputImport(name="type", required=true)
    private final String type;

    public String getType() {
        return this.type;
    }

    @InputImport(name="videoName", required=true)
    private final String videoName;

    public String getVideoName() {
        return this.videoName;
    }

    public VideoSourceResponse(
        String name,
        VideoSequenceAbsoluteTimeMarkersResponse timeSequences,
        String type,
        String videoName) {
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.timeSequences = Objects.requireNonNull(timeSequences, "expected parameter 'timeSequences' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.videoName = Objects.requireNonNull(videoName, "expected parameter 'videoName' to be non-null");
    }

    private VideoSourceResponse() {
        this.name = null;
        this.timeSequences = null;
        this.type = null;
        this.videoName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VideoSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private VideoSequenceAbsoluteTimeMarkersResponse timeSequences;
        private String type;
        private String videoName;

        public Builder() {
    	      // Empty
        }

        public Builder(VideoSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.timeSequences = defaults.timeSequences;
    	      this.type = defaults.type;
    	      this.videoName = defaults.videoName;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setTimeSequences(VideoSequenceAbsoluteTimeMarkersResponse timeSequences) {
            this.timeSequences = Objects.requireNonNull(timeSequences);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVideoName(String videoName) {
            this.videoName = Objects.requireNonNull(videoName);
            return this;
        }

        public VideoSourceResponse build() {
            return new VideoSourceResponse(name, timeSequences, type, videoName);
        }
    }
}
