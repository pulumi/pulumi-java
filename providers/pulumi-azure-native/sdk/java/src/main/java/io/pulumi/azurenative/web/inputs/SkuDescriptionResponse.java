// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.inputs;

import io.pulumi.azurenative.web.inputs.CapabilityResponse;
import io.pulumi.azurenative.web.inputs.SkuCapacityResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Description of a SKU for a scalable resource.
 * 
 */
public final class SkuDescriptionResponse extends io.pulumi.resources.InvokeArgs {

    public static final SkuDescriptionResponse Empty = new SkuDescriptionResponse();

    /**
     * Capabilities of the SKU, e.g., is traffic manager enabled?
     * 
     */
    @InputImport(name="capabilities")
        private final @Nullable List<CapabilityResponse> capabilities;

    public List<CapabilityResponse> getCapabilities() {
        return this.capabilities == null ? List.of() : this.capabilities;
    }

    /**
     * Current number of instances assigned to the resource.
     * 
     */
    @InputImport(name="capacity")
        private final @Nullable Integer capacity;

    public Optional<Integer> getCapacity() {
        return this.capacity == null ? Optional.empty() : Optional.ofNullable(this.capacity);
    }

    /**
     * Family code of the resource SKU.
     * 
     */
    @InputImport(name="family")
        private final @Nullable String family;

    public Optional<String> getFamily() {
        return this.family == null ? Optional.empty() : Optional.ofNullable(this.family);
    }

    /**
     * Locations of the SKU.
     * 
     */
    @InputImport(name="locations")
        private final @Nullable List<String> locations;

    public List<String> getLocations() {
        return this.locations == null ? List.of() : this.locations;
    }

    /**
     * Name of the resource SKU.
     * 
     */
    @InputImport(name="name")
        private final @Nullable String name;

    public Optional<String> getName() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    /**
     * Size specifier of the resource SKU.
     * 
     */
    @InputImport(name="size")
        private final @Nullable String size;

    public Optional<String> getSize() {
        return this.size == null ? Optional.empty() : Optional.ofNullable(this.size);
    }

    /**
     * Min, max, and default scale values of the SKU.
     * 
     */
    @InputImport(name="skuCapacity")
        private final @Nullable SkuCapacityResponse skuCapacity;

    public Optional<SkuCapacityResponse> getSkuCapacity() {
        return this.skuCapacity == null ? Optional.empty() : Optional.ofNullable(this.skuCapacity);
    }

    /**
     * Service tier of the resource SKU.
     * 
     */
    @InputImport(name="tier")
        private final @Nullable String tier;

    public Optional<String> getTier() {
        return this.tier == null ? Optional.empty() : Optional.ofNullable(this.tier);
    }

    public SkuDescriptionResponse(
        @Nullable List<CapabilityResponse> capabilities,
        @Nullable Integer capacity,
        @Nullable String family,
        @Nullable List<String> locations,
        @Nullable String name,
        @Nullable String size,
        @Nullable SkuCapacityResponse skuCapacity,
        @Nullable String tier) {
        this.capabilities = capabilities;
        this.capacity = capacity;
        this.family = family;
        this.locations = locations;
        this.name = name;
        this.size = size;
        this.skuCapacity = skuCapacity;
        this.tier = tier;
    }

    private SkuDescriptionResponse() {
        this.capabilities = List.of();
        this.capacity = null;
        this.family = null;
        this.locations = List.of();
        this.name = null;
        this.size = null;
        this.skuCapacity = null;
        this.tier = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SkuDescriptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<CapabilityResponse> capabilities;
        private @Nullable Integer capacity;
        private @Nullable String family;
        private @Nullable List<String> locations;
        private @Nullable String name;
        private @Nullable String size;
        private @Nullable SkuCapacityResponse skuCapacity;
        private @Nullable String tier;

        public Builder() {
    	      // Empty
        }

        public Builder(SkuDescriptionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capabilities = defaults.capabilities;
    	      this.capacity = defaults.capacity;
    	      this.family = defaults.family;
    	      this.locations = defaults.locations;
    	      this.name = defaults.name;
    	      this.size = defaults.size;
    	      this.skuCapacity = defaults.skuCapacity;
    	      this.tier = defaults.tier;
        }

        public Builder setCapabilities(@Nullable List<CapabilityResponse> capabilities) {
            this.capabilities = capabilities;
            return this;
        }

        public Builder setCapacity(@Nullable Integer capacity) {
            this.capacity = capacity;
            return this;
        }

        public Builder setFamily(@Nullable String family) {
            this.family = family;
            return this;
        }

        public Builder setLocations(@Nullable List<String> locations) {
            this.locations = locations;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setSize(@Nullable String size) {
            this.size = size;
            return this;
        }

        public Builder setSkuCapacity(@Nullable SkuCapacityResponse skuCapacity) {
            this.skuCapacity = skuCapacity;
            return this;
        }

        public Builder setTier(@Nullable String tier) {
            this.tier = tier;
            return this;
        }
        public SkuDescriptionResponse build() {
            return new SkuDescriptionResponse(capabilities, capacity, family, locations, name, size, skuCapacity, tier);
        }
    }
}
