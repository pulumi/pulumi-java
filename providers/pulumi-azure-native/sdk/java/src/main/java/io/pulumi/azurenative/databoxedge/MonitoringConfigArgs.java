// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge;

import io.pulumi.azurenative.databoxedge.inputs.MetricConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class MonitoringConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final MonitoringConfigArgs Empty = new MonitoringConfigArgs();

    /**
     * The device name.
     * 
     */
    @Import(name="deviceName", required=true)
      private final Output<String> deviceName;

    public Output<String> getDeviceName() {
        return this.deviceName;
    }

    /**
     * The metrics configuration details
     * 
     */
    @Import(name="metricConfigurations", required=true)
      private final Output<List<MetricConfigurationArgs>> metricConfigurations;

    public Output<List<MetricConfigurationArgs>> getMetricConfigurations() {
        return this.metricConfigurations;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The role name.
     * 
     */
    @Import(name="roleName", required=true)
      private final Output<String> roleName;

    public Output<String> getRoleName() {
        return this.roleName;
    }

    public MonitoringConfigArgs(
        Output<String> deviceName,
        Output<List<MetricConfigurationArgs>> metricConfigurations,
        Output<String> resourceGroupName,
        Output<String> roleName) {
        this.deviceName = Objects.requireNonNull(deviceName, "expected parameter 'deviceName' to be non-null");
        this.metricConfigurations = Objects.requireNonNull(metricConfigurations, "expected parameter 'metricConfigurations' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.roleName = Objects.requireNonNull(roleName, "expected parameter 'roleName' to be non-null");
    }

    private MonitoringConfigArgs() {
        this.deviceName = Output.empty();
        this.metricConfigurations = Output.empty();
        this.resourceGroupName = Output.empty();
        this.roleName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> deviceName;
        private Output<List<MetricConfigurationArgs>> metricConfigurations;
        private Output<String> resourceGroupName;
        private Output<String> roleName;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoringConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceName = defaults.deviceName;
    	      this.metricConfigurations = defaults.metricConfigurations;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.roleName = defaults.roleName;
        }

        public Builder deviceName(Output<String> deviceName) {
            this.deviceName = Objects.requireNonNull(deviceName);
            return this;
        }
        public Builder deviceName(String deviceName) {
            this.deviceName = Output.of(Objects.requireNonNull(deviceName));
            return this;
        }
        public Builder metricConfigurations(Output<List<MetricConfigurationArgs>> metricConfigurations) {
            this.metricConfigurations = Objects.requireNonNull(metricConfigurations);
            return this;
        }
        public Builder metricConfigurations(List<MetricConfigurationArgs> metricConfigurations) {
            this.metricConfigurations = Output.of(Objects.requireNonNull(metricConfigurations));
            return this;
        }
        public Builder metricConfigurations(MetricConfigurationArgs... metricConfigurations) {
            return metricConfigurations(List.of(metricConfigurations));
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder roleName(Output<String> roleName) {
            this.roleName = Objects.requireNonNull(roleName);
            return this;
        }
        public Builder roleName(String roleName) {
            this.roleName = Output.of(Objects.requireNonNull(roleName));
            return this;
        }        public MonitoringConfigArgs build() {
            return new MonitoringConfigArgs(deviceName, metricConfigurations, resourceGroupName, roleName);
        }
    }
}
