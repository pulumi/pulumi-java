// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.hybridnetwork;

import io.pulumi.azurenative.hybridnetwork.enums.SkuDeploymentMode;
import io.pulumi.azurenative.hybridnetwork.enums.SkuType;
import io.pulumi.azurenative.hybridnetwork.inputs.NetworkFunctionTemplateArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VendorSkusArgs extends io.pulumi.resources.ResourceArgs {

    public static final VendorSkusArgs Empty = new VendorSkusArgs();

    /**
     * The sku deployment mode.
     * 
     */
    @InputImport(name="deploymentMode")
      private final @Nullable Input<Either<String,SkuDeploymentMode>> deploymentMode;

    public Input<Either<String,SkuDeploymentMode>> getDeploymentMode() {
        return this.deploymentMode == null ? Input.empty() : this.deploymentMode;
    }

    /**
     * The parameters for the managed application to be supplied by the vendor.
     * 
     */
    @InputImport(name="managedApplicationParameters")
      private final @Nullable Input<Object> managedApplicationParameters;

    public Input<Object> getManagedApplicationParameters() {
        return this.managedApplicationParameters == null ? Input.empty() : this.managedApplicationParameters;
    }

    /**
     * The template for the managed application deployment.
     * 
     */
    @InputImport(name="managedApplicationTemplate")
      private final @Nullable Input<Object> managedApplicationTemplate;

    public Input<Object> getManagedApplicationTemplate() {
        return this.managedApplicationTemplate == null ? Input.empty() : this.managedApplicationTemplate;
    }

    /**
     * The template definition of the network function.
     * 
     */
    @InputImport(name="networkFunctionTemplate")
      private final @Nullable Input<NetworkFunctionTemplateArgs> networkFunctionTemplate;

    public Input<NetworkFunctionTemplateArgs> getNetworkFunctionTemplate() {
        return this.networkFunctionTemplate == null ? Input.empty() : this.networkFunctionTemplate;
    }

    /**
     * Indicates if the vendor sku is in preview mode.
     * 
     */
    @InputImport(name="preview")
      private final @Nullable Input<Boolean> preview;

    public Input<Boolean> getPreview() {
        return this.preview == null ? Input.empty() : this.preview;
    }

    /**
     * The name of the sku.
     * 
     */
    @InputImport(name="skuName")
      private final @Nullable Input<String> skuName;

    public Input<String> getSkuName() {
        return this.skuName == null ? Input.empty() : this.skuName;
    }

    /**
     * The sku type.
     * 
     */
    @InputImport(name="skuType")
      private final @Nullable Input<Either<String,SkuType>> skuType;

    public Input<Either<String,SkuType>> getSkuType() {
        return this.skuType == null ? Input.empty() : this.skuType;
    }

    /**
     * The name of the vendor.
     * 
     */
    @InputImport(name="vendorName", required=true)
      private final Input<String> vendorName;

    public Input<String> getVendorName() {
        return this.vendorName;
    }

    public VendorSkusArgs(
        @Nullable Input<Either<String,SkuDeploymentMode>> deploymentMode,
        @Nullable Input<Object> managedApplicationParameters,
        @Nullable Input<Object> managedApplicationTemplate,
        @Nullable Input<NetworkFunctionTemplateArgs> networkFunctionTemplate,
        @Nullable Input<Boolean> preview,
        @Nullable Input<String> skuName,
        @Nullable Input<Either<String,SkuType>> skuType,
        Input<String> vendorName) {
        this.deploymentMode = deploymentMode;
        this.managedApplicationParameters = managedApplicationParameters;
        this.managedApplicationTemplate = managedApplicationTemplate;
        this.networkFunctionTemplate = networkFunctionTemplate;
        this.preview = preview;
        this.skuName = skuName;
        this.skuType = skuType;
        this.vendorName = Objects.requireNonNull(vendorName, "expected parameter 'vendorName' to be non-null");
    }

    private VendorSkusArgs() {
        this.deploymentMode = Input.empty();
        this.managedApplicationParameters = Input.empty();
        this.managedApplicationTemplate = Input.empty();
        this.networkFunctionTemplate = Input.empty();
        this.preview = Input.empty();
        this.skuName = Input.empty();
        this.skuType = Input.empty();
        this.vendorName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VendorSkusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,SkuDeploymentMode>> deploymentMode;
        private @Nullable Input<Object> managedApplicationParameters;
        private @Nullable Input<Object> managedApplicationTemplate;
        private @Nullable Input<NetworkFunctionTemplateArgs> networkFunctionTemplate;
        private @Nullable Input<Boolean> preview;
        private @Nullable Input<String> skuName;
        private @Nullable Input<Either<String,SkuType>> skuType;
        private Input<String> vendorName;

        public Builder() {
    	      // Empty
        }

        public Builder(VendorSkusArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentMode = defaults.deploymentMode;
    	      this.managedApplicationParameters = defaults.managedApplicationParameters;
    	      this.managedApplicationTemplate = defaults.managedApplicationTemplate;
    	      this.networkFunctionTemplate = defaults.networkFunctionTemplate;
    	      this.preview = defaults.preview;
    	      this.skuName = defaults.skuName;
    	      this.skuType = defaults.skuType;
    	      this.vendorName = defaults.vendorName;
        }

        public Builder deploymentMode(@Nullable Input<Either<String,SkuDeploymentMode>> deploymentMode) {
            this.deploymentMode = deploymentMode;
            return this;
        }

        public Builder deploymentMode(@Nullable Either<String,SkuDeploymentMode> deploymentMode) {
            this.deploymentMode = Input.ofNullable(deploymentMode);
            return this;
        }

        public Builder managedApplicationParameters(@Nullable Input<Object> managedApplicationParameters) {
            this.managedApplicationParameters = managedApplicationParameters;
            return this;
        }

        public Builder managedApplicationParameters(@Nullable Object managedApplicationParameters) {
            this.managedApplicationParameters = Input.ofNullable(managedApplicationParameters);
            return this;
        }

        public Builder managedApplicationTemplate(@Nullable Input<Object> managedApplicationTemplate) {
            this.managedApplicationTemplate = managedApplicationTemplate;
            return this;
        }

        public Builder managedApplicationTemplate(@Nullable Object managedApplicationTemplate) {
            this.managedApplicationTemplate = Input.ofNullable(managedApplicationTemplate);
            return this;
        }

        public Builder networkFunctionTemplate(@Nullable Input<NetworkFunctionTemplateArgs> networkFunctionTemplate) {
            this.networkFunctionTemplate = networkFunctionTemplate;
            return this;
        }

        public Builder networkFunctionTemplate(@Nullable NetworkFunctionTemplateArgs networkFunctionTemplate) {
            this.networkFunctionTemplate = Input.ofNullable(networkFunctionTemplate);
            return this;
        }

        public Builder preview(@Nullable Input<Boolean> preview) {
            this.preview = preview;
            return this;
        }

        public Builder preview(@Nullable Boolean preview) {
            this.preview = Input.ofNullable(preview);
            return this;
        }

        public Builder skuName(@Nullable Input<String> skuName) {
            this.skuName = skuName;
            return this;
        }

        public Builder skuName(@Nullable String skuName) {
            this.skuName = Input.ofNullable(skuName);
            return this;
        }

        public Builder skuType(@Nullable Input<Either<String,SkuType>> skuType) {
            this.skuType = skuType;
            return this;
        }

        public Builder skuType(@Nullable Either<String,SkuType> skuType) {
            this.skuType = Input.ofNullable(skuType);
            return this;
        }

        public Builder vendorName(Input<String> vendorName) {
            this.vendorName = Objects.requireNonNull(vendorName);
            return this;
        }

        public Builder vendorName(String vendorName) {
            this.vendorName = Input.of(Objects.requireNonNull(vendorName));
            return this;
        }
        public VendorSkusArgs build() {
            return new VendorSkusArgs(deploymentMode, managedApplicationParameters, managedApplicationTemplate, networkFunctionTemplate, preview, skuName, skuType, vendorName);
        }
    }
}
