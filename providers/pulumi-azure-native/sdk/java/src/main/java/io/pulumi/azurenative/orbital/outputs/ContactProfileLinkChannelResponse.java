// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.orbital.outputs;

import io.pulumi.azurenative.orbital.outputs.EndPointResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ContactProfileLinkChannelResponse {
    /**
     * Bandwidth in MHz
     * 
     */
    private final Double bandwidthMHz;
    /**
     * Center Frequency in MHz
     * 
     */
    private final Double centerFrequencyMHz;
    /**
     * Configuration for decoding
     * 
     */
    private final @Nullable String decodingConfiguration;
    /**
     * Configuration for demodulation
     * 
     */
    private final @Nullable String demodulationConfiguration;
    /**
     * Configuration for encoding
     * 
     */
    private final @Nullable String encodingConfiguration;
    /**
     * Customer End point to store/retrieve data during a contact.
     * 
     */
    private final EndPointResponse endPoint;
    /**
     * Configuration for modulation
     * 
     */
    private final @Nullable String modulationConfiguration;

    @OutputCustomType.Constructor({"bandwidthMHz","centerFrequencyMHz","decodingConfiguration","demodulationConfiguration","encodingConfiguration","endPoint","modulationConfiguration"})
    private ContactProfileLinkChannelResponse(
        Double bandwidthMHz,
        Double centerFrequencyMHz,
        @Nullable String decodingConfiguration,
        @Nullable String demodulationConfiguration,
        @Nullable String encodingConfiguration,
        EndPointResponse endPoint,
        @Nullable String modulationConfiguration) {
        this.bandwidthMHz = bandwidthMHz;
        this.centerFrequencyMHz = centerFrequencyMHz;
        this.decodingConfiguration = decodingConfiguration;
        this.demodulationConfiguration = demodulationConfiguration;
        this.encodingConfiguration = encodingConfiguration;
        this.endPoint = endPoint;
        this.modulationConfiguration = modulationConfiguration;
    }

    /**
     * Bandwidth in MHz
     * 
    */
    public Double getBandwidthMHz() {
        return this.bandwidthMHz;
    }
    /**
     * Center Frequency in MHz
     * 
    */
    public Double getCenterFrequencyMHz() {
        return this.centerFrequencyMHz;
    }
    /**
     * Configuration for decoding
     * 
    */
    public Optional<String> getDecodingConfiguration() {
        return Optional.ofNullable(this.decodingConfiguration);
    }
    /**
     * Configuration for demodulation
     * 
    */
    public Optional<String> getDemodulationConfiguration() {
        return Optional.ofNullable(this.demodulationConfiguration);
    }
    /**
     * Configuration for encoding
     * 
    */
    public Optional<String> getEncodingConfiguration() {
        return Optional.ofNullable(this.encodingConfiguration);
    }
    /**
     * Customer End point to store/retrieve data during a contact.
     * 
    */
    public EndPointResponse getEndPoint() {
        return this.endPoint;
    }
    /**
     * Configuration for modulation
     * 
    */
    public Optional<String> getModulationConfiguration() {
        return Optional.ofNullable(this.modulationConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactProfileLinkChannelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double bandwidthMHz;
        private Double centerFrequencyMHz;
        private @Nullable String decodingConfiguration;
        private @Nullable String demodulationConfiguration;
        private @Nullable String encodingConfiguration;
        private EndPointResponse endPoint;
        private @Nullable String modulationConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(ContactProfileLinkChannelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthMHz = defaults.bandwidthMHz;
    	      this.centerFrequencyMHz = defaults.centerFrequencyMHz;
    	      this.decodingConfiguration = defaults.decodingConfiguration;
    	      this.demodulationConfiguration = defaults.demodulationConfiguration;
    	      this.encodingConfiguration = defaults.encodingConfiguration;
    	      this.endPoint = defaults.endPoint;
    	      this.modulationConfiguration = defaults.modulationConfiguration;
        }

        public Builder setBandwidthMHz(Double bandwidthMHz) {
            this.bandwidthMHz = Objects.requireNonNull(bandwidthMHz);
            return this;
        }

        public Builder setCenterFrequencyMHz(Double centerFrequencyMHz) {
            this.centerFrequencyMHz = Objects.requireNonNull(centerFrequencyMHz);
            return this;
        }

        public Builder setDecodingConfiguration(@Nullable String decodingConfiguration) {
            this.decodingConfiguration = decodingConfiguration;
            return this;
        }

        public Builder setDemodulationConfiguration(@Nullable String demodulationConfiguration) {
            this.demodulationConfiguration = demodulationConfiguration;
            return this;
        }

        public Builder setEncodingConfiguration(@Nullable String encodingConfiguration) {
            this.encodingConfiguration = encodingConfiguration;
            return this;
        }

        public Builder setEndPoint(EndPointResponse endPoint) {
            this.endPoint = Objects.requireNonNull(endPoint);
            return this;
        }

        public Builder setModulationConfiguration(@Nullable String modulationConfiguration) {
            this.modulationConfiguration = modulationConfiguration;
            return this;
        }
        public ContactProfileLinkChannelResponse build() {
            return new ContactProfileLinkChannelResponse(bandwidthMHz, centerFrequencyMHz, decodingConfiguration, demodulationConfiguration, encodingConfiguration, endPoint, modulationConfiguration);
        }
    }
}
