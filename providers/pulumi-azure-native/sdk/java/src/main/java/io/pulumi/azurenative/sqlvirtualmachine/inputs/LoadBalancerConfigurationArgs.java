// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sqlvirtualmachine.inputs;

import io.pulumi.azurenative.sqlvirtualmachine.inputs.PrivateIPAddressArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A load balancer configuration for an availability group listener.
 * 
 */
public final class LoadBalancerConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final LoadBalancerConfigurationArgs Empty = new LoadBalancerConfigurationArgs();

    /**
     * Resource id of the load balancer.
     * 
     */
    @Import(name="loadBalancerResourceId")
      private final @Nullable Output<String> loadBalancerResourceId;

    public Output<String> getLoadBalancerResourceId() {
        return this.loadBalancerResourceId == null ? Output.empty() : this.loadBalancerResourceId;
    }

    /**
     * Private IP address.
     * 
     */
    @Import(name="privateIpAddress")
      private final @Nullable Output<PrivateIPAddressArgs> privateIpAddress;

    public Output<PrivateIPAddressArgs> getPrivateIpAddress() {
        return this.privateIpAddress == null ? Output.empty() : this.privateIpAddress;
    }

    /**
     * Probe port.
     * 
     */
    @Import(name="probePort")
      private final @Nullable Output<Integer> probePort;

    public Output<Integer> getProbePort() {
        return this.probePort == null ? Output.empty() : this.probePort;
    }

    /**
     * Resource id of the public IP.
     * 
     */
    @Import(name="publicIpAddressResourceId")
      private final @Nullable Output<String> publicIpAddressResourceId;

    public Output<String> getPublicIpAddressResourceId() {
        return this.publicIpAddressResourceId == null ? Output.empty() : this.publicIpAddressResourceId;
    }

    /**
     * List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener.
     * 
     */
    @Import(name="sqlVirtualMachineInstances")
      private final @Nullable Output<List<String>> sqlVirtualMachineInstances;

    public Output<List<String>> getSqlVirtualMachineInstances() {
        return this.sqlVirtualMachineInstances == null ? Output.empty() : this.sqlVirtualMachineInstances;
    }

    public LoadBalancerConfigurationArgs(
        @Nullable Output<String> loadBalancerResourceId,
        @Nullable Output<PrivateIPAddressArgs> privateIpAddress,
        @Nullable Output<Integer> probePort,
        @Nullable Output<String> publicIpAddressResourceId,
        @Nullable Output<List<String>> sqlVirtualMachineInstances) {
        this.loadBalancerResourceId = loadBalancerResourceId;
        this.privateIpAddress = privateIpAddress;
        this.probePort = probePort;
        this.publicIpAddressResourceId = publicIpAddressResourceId;
        this.sqlVirtualMachineInstances = sqlVirtualMachineInstances;
    }

    private LoadBalancerConfigurationArgs() {
        this.loadBalancerResourceId = Output.empty();
        this.privateIpAddress = Output.empty();
        this.probePort = Output.empty();
        this.publicIpAddressResourceId = Output.empty();
        this.sqlVirtualMachineInstances = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> loadBalancerResourceId;
        private @Nullable Output<PrivateIPAddressArgs> privateIpAddress;
        private @Nullable Output<Integer> probePort;
        private @Nullable Output<String> publicIpAddressResourceId;
        private @Nullable Output<List<String>> sqlVirtualMachineInstances;

        public Builder() {
    	      // Empty
        }

        public Builder(LoadBalancerConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.loadBalancerResourceId = defaults.loadBalancerResourceId;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.probePort = defaults.probePort;
    	      this.publicIpAddressResourceId = defaults.publicIpAddressResourceId;
    	      this.sqlVirtualMachineInstances = defaults.sqlVirtualMachineInstances;
        }

        public Builder loadBalancerResourceId(@Nullable Output<String> loadBalancerResourceId) {
            this.loadBalancerResourceId = loadBalancerResourceId;
            return this;
        }

        public Builder loadBalancerResourceId(@Nullable String loadBalancerResourceId) {
            this.loadBalancerResourceId = Output.ofNullable(loadBalancerResourceId);
            return this;
        }

        public Builder privateIpAddress(@Nullable Output<PrivateIPAddressArgs> privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }

        public Builder privateIpAddress(@Nullable PrivateIPAddressArgs privateIpAddress) {
            this.privateIpAddress = Output.ofNullable(privateIpAddress);
            return this;
        }

        public Builder probePort(@Nullable Output<Integer> probePort) {
            this.probePort = probePort;
            return this;
        }

        public Builder probePort(@Nullable Integer probePort) {
            this.probePort = Output.ofNullable(probePort);
            return this;
        }

        public Builder publicIpAddressResourceId(@Nullable Output<String> publicIpAddressResourceId) {
            this.publicIpAddressResourceId = publicIpAddressResourceId;
            return this;
        }

        public Builder publicIpAddressResourceId(@Nullable String publicIpAddressResourceId) {
            this.publicIpAddressResourceId = Output.ofNullable(publicIpAddressResourceId);
            return this;
        }

        public Builder sqlVirtualMachineInstances(@Nullable Output<List<String>> sqlVirtualMachineInstances) {
            this.sqlVirtualMachineInstances = sqlVirtualMachineInstances;
            return this;
        }

        public Builder sqlVirtualMachineInstances(@Nullable List<String> sqlVirtualMachineInstances) {
            this.sqlVirtualMachineInstances = Output.ofNullable(sqlVirtualMachineInstances);
            return this;
        }
        public LoadBalancerConfigurationArgs build() {
            return new LoadBalancerConfigurationArgs(loadBalancerResourceId, privateIpAddress, probePort, publicIpAddressResourceId, sqlVirtualMachineInstances);
        }
    }
}
