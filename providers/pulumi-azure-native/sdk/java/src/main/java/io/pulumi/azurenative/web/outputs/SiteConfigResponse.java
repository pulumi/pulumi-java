// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.ApiDefinitionInfoResponse;
import io.pulumi.azurenative.web.outputs.ApiManagementConfigResponse;
import io.pulumi.azurenative.web.outputs.AutoHealRulesResponse;
import io.pulumi.azurenative.web.outputs.AzureStorageInfoValueResponse;
import io.pulumi.azurenative.web.outputs.ConnStringInfoResponse;
import io.pulumi.azurenative.web.outputs.CorsSettingsResponse;
import io.pulumi.azurenative.web.outputs.ExperimentsResponse;
import io.pulumi.azurenative.web.outputs.HandlerMappingResponse;
import io.pulumi.azurenative.web.outputs.IpSecurityRestrictionResponse;
import io.pulumi.azurenative.web.outputs.NameValuePairResponse;
import io.pulumi.azurenative.web.outputs.PushSettingsResponse;
import io.pulumi.azurenative.web.outputs.SiteLimitsResponse;
import io.pulumi.azurenative.web.outputs.SiteMachineKeyResponse;
import io.pulumi.azurenative.web.outputs.VirtualApplicationResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class SiteConfigResponse {
    private final @Nullable Boolean acrUseManagedIdentityCreds;
    private final @Nullable String acrUserManagedIdentityID;
    private final @Nullable Boolean alwaysOn;
    private final @Nullable ApiDefinitionInfoResponse apiDefinition;
    private final @Nullable ApiManagementConfigResponse apiManagementConfig;
    private final @Nullable String appCommandLine;
    private final @Nullable List<NameValuePairResponse> appSettings;
    private final @Nullable Boolean autoHealEnabled;
    private final @Nullable AutoHealRulesResponse autoHealRules;
    private final @Nullable String autoSwapSlotName;
    private final @Nullable Map<String,AzureStorageInfoValueResponse> azureStorageAccounts;
    private final @Nullable List<ConnStringInfoResponse> connectionStrings;
    private final @Nullable CorsSettingsResponse cors;
    private final @Nullable List<String> defaultDocuments;
    private final @Nullable Boolean detailedErrorLoggingEnabled;
    private final @Nullable String documentRoot;
    private final @Nullable ExperimentsResponse experiments;
    private final @Nullable String ftpsState;
    private final @Nullable Integer functionAppScaleLimit;
    private final @Nullable Boolean functionsRuntimeScaleMonitoringEnabled;
    private final @Nullable List<HandlerMappingResponse> handlerMappings;
    private final @Nullable String healthCheckPath;
    private final @Nullable Boolean http20Enabled;
    private final @Nullable Boolean httpLoggingEnabled;
    private final @Nullable List<IpSecurityRestrictionResponse> ipSecurityRestrictions;
    private final @Nullable String javaContainer;
    private final @Nullable String javaContainerVersion;
    private final @Nullable String javaVersion;
    private final @Nullable String keyVaultReferenceIdentity;
    private final @Nullable SiteLimitsResponse limits;
    private final @Nullable String linuxFxVersion;
    private final @Nullable String loadBalancing;
    private final @Nullable Boolean localMySqlEnabled;
    private final @Nullable Integer logsDirectorySizeLimit;
    private final SiteMachineKeyResponse machineKey;
    private final @Nullable String managedPipelineMode;
    private final @Nullable Integer managedServiceIdentityId;
    private final @Nullable String minTlsVersion;
    private final @Nullable Integer minimumElasticInstanceCount;
    private final @Nullable String netFrameworkVersion;
    private final @Nullable String nodeVersion;
    private final @Nullable Integer numberOfWorkers;
    private final @Nullable String phpVersion;
    private final @Nullable String powerShellVersion;
    private final @Nullable Integer preWarmedInstanceCount;
    private final @Nullable String publicNetworkAccess;
    private final @Nullable String publishingUsername;
    private final @Nullable PushSettingsResponse push;
    private final @Nullable String pythonVersion;
    private final @Nullable Boolean remoteDebuggingEnabled;
    private final @Nullable String remoteDebuggingVersion;
    private final @Nullable Boolean requestTracingEnabled;
    private final @Nullable String requestTracingExpirationTime;
    private final @Nullable List<IpSecurityRestrictionResponse> scmIpSecurityRestrictions;
    private final @Nullable Boolean scmIpSecurityRestrictionsUseMain;
    private final @Nullable String scmMinTlsVersion;
    private final @Nullable String scmType;
    private final @Nullable String tracingOptions;
    private final @Nullable Boolean use32BitWorkerProcess;
    private final @Nullable List<VirtualApplicationResponse> virtualApplications;
    private final @Nullable String vnetName;
    private final @Nullable Integer vnetPrivatePortsCount;
    private final @Nullable Boolean vnetRouteAllEnabled;
    private final @Nullable Boolean webSocketsEnabled;
    private final @Nullable String websiteTimeZone;
    private final @Nullable String windowsFxVersion;
    private final @Nullable Integer xManagedServiceIdentityId;

    @OutputCustomType.Constructor({"acrUseManagedIdentityCreds","acrUserManagedIdentityID","alwaysOn","apiDefinition","apiManagementConfig","appCommandLine","appSettings","autoHealEnabled","autoHealRules","autoSwapSlotName","azureStorageAccounts","connectionStrings","cors","defaultDocuments","detailedErrorLoggingEnabled","documentRoot","experiments","ftpsState","functionAppScaleLimit","functionsRuntimeScaleMonitoringEnabled","handlerMappings","healthCheckPath","http20Enabled","httpLoggingEnabled","ipSecurityRestrictions","javaContainer","javaContainerVersion","javaVersion","keyVaultReferenceIdentity","limits","linuxFxVersion","loadBalancing","localMySqlEnabled","logsDirectorySizeLimit","machineKey","managedPipelineMode","managedServiceIdentityId","minTlsVersion","minimumElasticInstanceCount","netFrameworkVersion","nodeVersion","numberOfWorkers","phpVersion","powerShellVersion","preWarmedInstanceCount","publicNetworkAccess","publishingUsername","push","pythonVersion","remoteDebuggingEnabled","remoteDebuggingVersion","requestTracingEnabled","requestTracingExpirationTime","scmIpSecurityRestrictions","scmIpSecurityRestrictionsUseMain","scmMinTlsVersion","scmType","tracingOptions","use32BitWorkerProcess","virtualApplications","vnetName","vnetPrivatePortsCount","vnetRouteAllEnabled","webSocketsEnabled","websiteTimeZone","windowsFxVersion","xManagedServiceIdentityId"})
    private SiteConfigResponse(
        @Nullable Boolean acrUseManagedIdentityCreds,
        @Nullable String acrUserManagedIdentityID,
        @Nullable Boolean alwaysOn,
        @Nullable ApiDefinitionInfoResponse apiDefinition,
        @Nullable ApiManagementConfigResponse apiManagementConfig,
        @Nullable String appCommandLine,
        @Nullable List<NameValuePairResponse> appSettings,
        @Nullable Boolean autoHealEnabled,
        @Nullable AutoHealRulesResponse autoHealRules,
        @Nullable String autoSwapSlotName,
        @Nullable Map<String,AzureStorageInfoValueResponse> azureStorageAccounts,
        @Nullable List<ConnStringInfoResponse> connectionStrings,
        @Nullable CorsSettingsResponse cors,
        @Nullable List<String> defaultDocuments,
        @Nullable Boolean detailedErrorLoggingEnabled,
        @Nullable String documentRoot,
        @Nullable ExperimentsResponse experiments,
        @Nullable String ftpsState,
        @Nullable Integer functionAppScaleLimit,
        @Nullable Boolean functionsRuntimeScaleMonitoringEnabled,
        @Nullable List<HandlerMappingResponse> handlerMappings,
        @Nullable String healthCheckPath,
        @Nullable Boolean http20Enabled,
        @Nullable Boolean httpLoggingEnabled,
        @Nullable List<IpSecurityRestrictionResponse> ipSecurityRestrictions,
        @Nullable String javaContainer,
        @Nullable String javaContainerVersion,
        @Nullable String javaVersion,
        @Nullable String keyVaultReferenceIdentity,
        @Nullable SiteLimitsResponse limits,
        @Nullable String linuxFxVersion,
        @Nullable String loadBalancing,
        @Nullable Boolean localMySqlEnabled,
        @Nullable Integer logsDirectorySizeLimit,
        SiteMachineKeyResponse machineKey,
        @Nullable String managedPipelineMode,
        @Nullable Integer managedServiceIdentityId,
        @Nullable String minTlsVersion,
        @Nullable Integer minimumElasticInstanceCount,
        @Nullable String netFrameworkVersion,
        @Nullable String nodeVersion,
        @Nullable Integer numberOfWorkers,
        @Nullable String phpVersion,
        @Nullable String powerShellVersion,
        @Nullable Integer preWarmedInstanceCount,
        @Nullable String publicNetworkAccess,
        @Nullable String publishingUsername,
        @Nullable PushSettingsResponse push,
        @Nullable String pythonVersion,
        @Nullable Boolean remoteDebuggingEnabled,
        @Nullable String remoteDebuggingVersion,
        @Nullable Boolean requestTracingEnabled,
        @Nullable String requestTracingExpirationTime,
        @Nullable List<IpSecurityRestrictionResponse> scmIpSecurityRestrictions,
        @Nullable Boolean scmIpSecurityRestrictionsUseMain,
        @Nullable String scmMinTlsVersion,
        @Nullable String scmType,
        @Nullable String tracingOptions,
        @Nullable Boolean use32BitWorkerProcess,
        @Nullable List<VirtualApplicationResponse> virtualApplications,
        @Nullable String vnetName,
        @Nullable Integer vnetPrivatePortsCount,
        @Nullable Boolean vnetRouteAllEnabled,
        @Nullable Boolean webSocketsEnabled,
        @Nullable String websiteTimeZone,
        @Nullable String windowsFxVersion,
        @Nullable Integer xManagedServiceIdentityId) {
        this.acrUseManagedIdentityCreds = acrUseManagedIdentityCreds;
        this.acrUserManagedIdentityID = acrUserManagedIdentityID;
        this.alwaysOn = alwaysOn;
        this.apiDefinition = apiDefinition;
        this.apiManagementConfig = apiManagementConfig;
        this.appCommandLine = appCommandLine;
        this.appSettings = appSettings;
        this.autoHealEnabled = autoHealEnabled;
        this.autoHealRules = autoHealRules;
        this.autoSwapSlotName = autoSwapSlotName;
        this.azureStorageAccounts = azureStorageAccounts;
        this.connectionStrings = connectionStrings;
        this.cors = cors;
        this.defaultDocuments = defaultDocuments;
        this.detailedErrorLoggingEnabled = detailedErrorLoggingEnabled;
        this.documentRoot = documentRoot;
        this.experiments = experiments;
        this.ftpsState = ftpsState;
        this.functionAppScaleLimit = functionAppScaleLimit;
        this.functionsRuntimeScaleMonitoringEnabled = functionsRuntimeScaleMonitoringEnabled;
        this.handlerMappings = handlerMappings;
        this.healthCheckPath = healthCheckPath;
        this.http20Enabled = http20Enabled;
        this.httpLoggingEnabled = httpLoggingEnabled;
        this.ipSecurityRestrictions = ipSecurityRestrictions;
        this.javaContainer = javaContainer;
        this.javaContainerVersion = javaContainerVersion;
        this.javaVersion = javaVersion;
        this.keyVaultReferenceIdentity = keyVaultReferenceIdentity;
        this.limits = limits;
        this.linuxFxVersion = linuxFxVersion;
        this.loadBalancing = loadBalancing;
        this.localMySqlEnabled = localMySqlEnabled;
        this.logsDirectorySizeLimit = logsDirectorySizeLimit;
        this.machineKey = Objects.requireNonNull(machineKey);
        this.managedPipelineMode = managedPipelineMode;
        this.managedServiceIdentityId = managedServiceIdentityId;
        this.minTlsVersion = minTlsVersion;
        this.minimumElasticInstanceCount = minimumElasticInstanceCount;
        this.netFrameworkVersion = netFrameworkVersion;
        this.nodeVersion = nodeVersion;
        this.numberOfWorkers = numberOfWorkers;
        this.phpVersion = phpVersion;
        this.powerShellVersion = powerShellVersion;
        this.preWarmedInstanceCount = preWarmedInstanceCount;
        this.publicNetworkAccess = publicNetworkAccess;
        this.publishingUsername = publishingUsername;
        this.push = push;
        this.pythonVersion = pythonVersion;
        this.remoteDebuggingEnabled = remoteDebuggingEnabled;
        this.remoteDebuggingVersion = remoteDebuggingVersion;
        this.requestTracingEnabled = requestTracingEnabled;
        this.requestTracingExpirationTime = requestTracingExpirationTime;
        this.scmIpSecurityRestrictions = scmIpSecurityRestrictions;
        this.scmIpSecurityRestrictionsUseMain = scmIpSecurityRestrictionsUseMain;
        this.scmMinTlsVersion = scmMinTlsVersion;
        this.scmType = scmType;
        this.tracingOptions = tracingOptions;
        this.use32BitWorkerProcess = use32BitWorkerProcess;
        this.virtualApplications = virtualApplications;
        this.vnetName = vnetName;
        this.vnetPrivatePortsCount = vnetPrivatePortsCount;
        this.vnetRouteAllEnabled = vnetRouteAllEnabled;
        this.webSocketsEnabled = webSocketsEnabled;
        this.websiteTimeZone = websiteTimeZone;
        this.windowsFxVersion = windowsFxVersion;
        this.xManagedServiceIdentityId = xManagedServiceIdentityId;
    }

    public Optional<Boolean> getAcrUseManagedIdentityCreds() {
        return Optional.ofNullable(this.acrUseManagedIdentityCreds);
    }
    public Optional<String> getAcrUserManagedIdentityID() {
        return Optional.ofNullable(this.acrUserManagedIdentityID);
    }
    public Optional<Boolean> getAlwaysOn() {
        return Optional.ofNullable(this.alwaysOn);
    }
    public Optional<ApiDefinitionInfoResponse> getApiDefinition() {
        return Optional.ofNullable(this.apiDefinition);
    }
    public Optional<ApiManagementConfigResponse> getApiManagementConfig() {
        return Optional.ofNullable(this.apiManagementConfig);
    }
    public Optional<String> getAppCommandLine() {
        return Optional.ofNullable(this.appCommandLine);
    }
    public List<NameValuePairResponse> getAppSettings() {
        return this.appSettings == null ? List.of() : this.appSettings;
    }
    public Optional<Boolean> getAutoHealEnabled() {
        return Optional.ofNullable(this.autoHealEnabled);
    }
    public Optional<AutoHealRulesResponse> getAutoHealRules() {
        return Optional.ofNullable(this.autoHealRules);
    }
    public Optional<String> getAutoSwapSlotName() {
        return Optional.ofNullable(this.autoSwapSlotName);
    }
    public Map<String,AzureStorageInfoValueResponse> getAzureStorageAccounts() {
        return this.azureStorageAccounts == null ? Map.of() : this.azureStorageAccounts;
    }
    public List<ConnStringInfoResponse> getConnectionStrings() {
        return this.connectionStrings == null ? List.of() : this.connectionStrings;
    }
    public Optional<CorsSettingsResponse> getCors() {
        return Optional.ofNullable(this.cors);
    }
    public List<String> getDefaultDocuments() {
        return this.defaultDocuments == null ? List.of() : this.defaultDocuments;
    }
    public Optional<Boolean> getDetailedErrorLoggingEnabled() {
        return Optional.ofNullable(this.detailedErrorLoggingEnabled);
    }
    public Optional<String> getDocumentRoot() {
        return Optional.ofNullable(this.documentRoot);
    }
    public Optional<ExperimentsResponse> getExperiments() {
        return Optional.ofNullable(this.experiments);
    }
    public Optional<String> getFtpsState() {
        return Optional.ofNullable(this.ftpsState);
    }
    public Optional<Integer> getFunctionAppScaleLimit() {
        return Optional.ofNullable(this.functionAppScaleLimit);
    }
    public Optional<Boolean> getFunctionsRuntimeScaleMonitoringEnabled() {
        return Optional.ofNullable(this.functionsRuntimeScaleMonitoringEnabled);
    }
    public List<HandlerMappingResponse> getHandlerMappings() {
        return this.handlerMappings == null ? List.of() : this.handlerMappings;
    }
    public Optional<String> getHealthCheckPath() {
        return Optional.ofNullable(this.healthCheckPath);
    }
    public Optional<Boolean> getHttp20Enabled() {
        return Optional.ofNullable(this.http20Enabled);
    }
    public Optional<Boolean> getHttpLoggingEnabled() {
        return Optional.ofNullable(this.httpLoggingEnabled);
    }
    public List<IpSecurityRestrictionResponse> getIpSecurityRestrictions() {
        return this.ipSecurityRestrictions == null ? List.of() : this.ipSecurityRestrictions;
    }
    public Optional<String> getJavaContainer() {
        return Optional.ofNullable(this.javaContainer);
    }
    public Optional<String> getJavaContainerVersion() {
        return Optional.ofNullable(this.javaContainerVersion);
    }
    public Optional<String> getJavaVersion() {
        return Optional.ofNullable(this.javaVersion);
    }
    public Optional<String> getKeyVaultReferenceIdentity() {
        return Optional.ofNullable(this.keyVaultReferenceIdentity);
    }
    public Optional<SiteLimitsResponse> getLimits() {
        return Optional.ofNullable(this.limits);
    }
    public Optional<String> getLinuxFxVersion() {
        return Optional.ofNullable(this.linuxFxVersion);
    }
    public Optional<String> getLoadBalancing() {
        return Optional.ofNullable(this.loadBalancing);
    }
    public Optional<Boolean> getLocalMySqlEnabled() {
        return Optional.ofNullable(this.localMySqlEnabled);
    }
    public Optional<Integer> getLogsDirectorySizeLimit() {
        return Optional.ofNullable(this.logsDirectorySizeLimit);
    }
    public SiteMachineKeyResponse getMachineKey() {
        return this.machineKey;
    }
    public Optional<String> getManagedPipelineMode() {
        return Optional.ofNullable(this.managedPipelineMode);
    }
    public Optional<Integer> getManagedServiceIdentityId() {
        return Optional.ofNullable(this.managedServiceIdentityId);
    }
    public Optional<String> getMinTlsVersion() {
        return Optional.ofNullable(this.minTlsVersion);
    }
    public Optional<Integer> getMinimumElasticInstanceCount() {
        return Optional.ofNullable(this.minimumElasticInstanceCount);
    }
    public Optional<String> getNetFrameworkVersion() {
        return Optional.ofNullable(this.netFrameworkVersion);
    }
    public Optional<String> getNodeVersion() {
        return Optional.ofNullable(this.nodeVersion);
    }
    public Optional<Integer> getNumberOfWorkers() {
        return Optional.ofNullable(this.numberOfWorkers);
    }
    public Optional<String> getPhpVersion() {
        return Optional.ofNullable(this.phpVersion);
    }
    public Optional<String> getPowerShellVersion() {
        return Optional.ofNullable(this.powerShellVersion);
    }
    public Optional<Integer> getPreWarmedInstanceCount() {
        return Optional.ofNullable(this.preWarmedInstanceCount);
    }
    public Optional<String> getPublicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    public Optional<String> getPublishingUsername() {
        return Optional.ofNullable(this.publishingUsername);
    }
    public Optional<PushSettingsResponse> getPush() {
        return Optional.ofNullable(this.push);
    }
    public Optional<String> getPythonVersion() {
        return Optional.ofNullable(this.pythonVersion);
    }
    public Optional<Boolean> getRemoteDebuggingEnabled() {
        return Optional.ofNullable(this.remoteDebuggingEnabled);
    }
    public Optional<String> getRemoteDebuggingVersion() {
        return Optional.ofNullable(this.remoteDebuggingVersion);
    }
    public Optional<Boolean> getRequestTracingEnabled() {
        return Optional.ofNullable(this.requestTracingEnabled);
    }
    public Optional<String> getRequestTracingExpirationTime() {
        return Optional.ofNullable(this.requestTracingExpirationTime);
    }
    public List<IpSecurityRestrictionResponse> getScmIpSecurityRestrictions() {
        return this.scmIpSecurityRestrictions == null ? List.of() : this.scmIpSecurityRestrictions;
    }
    public Optional<Boolean> getScmIpSecurityRestrictionsUseMain() {
        return Optional.ofNullable(this.scmIpSecurityRestrictionsUseMain);
    }
    public Optional<String> getScmMinTlsVersion() {
        return Optional.ofNullable(this.scmMinTlsVersion);
    }
    public Optional<String> getScmType() {
        return Optional.ofNullable(this.scmType);
    }
    public Optional<String> getTracingOptions() {
        return Optional.ofNullable(this.tracingOptions);
    }
    public Optional<Boolean> getUse32BitWorkerProcess() {
        return Optional.ofNullable(this.use32BitWorkerProcess);
    }
    public List<VirtualApplicationResponse> getVirtualApplications() {
        return this.virtualApplications == null ? List.of() : this.virtualApplications;
    }
    public Optional<String> getVnetName() {
        return Optional.ofNullable(this.vnetName);
    }
    public Optional<Integer> getVnetPrivatePortsCount() {
        return Optional.ofNullable(this.vnetPrivatePortsCount);
    }
    public Optional<Boolean> getVnetRouteAllEnabled() {
        return Optional.ofNullable(this.vnetRouteAllEnabled);
    }
    public Optional<Boolean> getWebSocketsEnabled() {
        return Optional.ofNullable(this.webSocketsEnabled);
    }
    public Optional<String> getWebsiteTimeZone() {
        return Optional.ofNullable(this.websiteTimeZone);
    }
    public Optional<String> getWindowsFxVersion() {
        return Optional.ofNullable(this.windowsFxVersion);
    }
    public Optional<Integer> getXManagedServiceIdentityId() {
        return Optional.ofNullable(this.xManagedServiceIdentityId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SiteConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean acrUseManagedIdentityCreds;
        private @Nullable String acrUserManagedIdentityID;
        private @Nullable Boolean alwaysOn;
        private @Nullable ApiDefinitionInfoResponse apiDefinition;
        private @Nullable ApiManagementConfigResponse apiManagementConfig;
        private @Nullable String appCommandLine;
        private @Nullable List<NameValuePairResponse> appSettings;
        private @Nullable Boolean autoHealEnabled;
        private @Nullable AutoHealRulesResponse autoHealRules;
        private @Nullable String autoSwapSlotName;
        private @Nullable Map<String,AzureStorageInfoValueResponse> azureStorageAccounts;
        private @Nullable List<ConnStringInfoResponse> connectionStrings;
        private @Nullable CorsSettingsResponse cors;
        private @Nullable List<String> defaultDocuments;
        private @Nullable Boolean detailedErrorLoggingEnabled;
        private @Nullable String documentRoot;
        private @Nullable ExperimentsResponse experiments;
        private @Nullable String ftpsState;
        private @Nullable Integer functionAppScaleLimit;
        private @Nullable Boolean functionsRuntimeScaleMonitoringEnabled;
        private @Nullable List<HandlerMappingResponse> handlerMappings;
        private @Nullable String healthCheckPath;
        private @Nullable Boolean http20Enabled;
        private @Nullable Boolean httpLoggingEnabled;
        private @Nullable List<IpSecurityRestrictionResponse> ipSecurityRestrictions;
        private @Nullable String javaContainer;
        private @Nullable String javaContainerVersion;
        private @Nullable String javaVersion;
        private @Nullable String keyVaultReferenceIdentity;
        private @Nullable SiteLimitsResponse limits;
        private @Nullable String linuxFxVersion;
        private @Nullable String loadBalancing;
        private @Nullable Boolean localMySqlEnabled;
        private @Nullable Integer logsDirectorySizeLimit;
        private SiteMachineKeyResponse machineKey;
        private @Nullable String managedPipelineMode;
        private @Nullable Integer managedServiceIdentityId;
        private @Nullable String minTlsVersion;
        private @Nullable Integer minimumElasticInstanceCount;
        private @Nullable String netFrameworkVersion;
        private @Nullable String nodeVersion;
        private @Nullable Integer numberOfWorkers;
        private @Nullable String phpVersion;
        private @Nullable String powerShellVersion;
        private @Nullable Integer preWarmedInstanceCount;
        private @Nullable String publicNetworkAccess;
        private @Nullable String publishingUsername;
        private @Nullable PushSettingsResponse push;
        private @Nullable String pythonVersion;
        private @Nullable Boolean remoteDebuggingEnabled;
        private @Nullable String remoteDebuggingVersion;
        private @Nullable Boolean requestTracingEnabled;
        private @Nullable String requestTracingExpirationTime;
        private @Nullable List<IpSecurityRestrictionResponse> scmIpSecurityRestrictions;
        private @Nullable Boolean scmIpSecurityRestrictionsUseMain;
        private @Nullable String scmMinTlsVersion;
        private @Nullable String scmType;
        private @Nullable String tracingOptions;
        private @Nullable Boolean use32BitWorkerProcess;
        private @Nullable List<VirtualApplicationResponse> virtualApplications;
        private @Nullable String vnetName;
        private @Nullable Integer vnetPrivatePortsCount;
        private @Nullable Boolean vnetRouteAllEnabled;
        private @Nullable Boolean webSocketsEnabled;
        private @Nullable String websiteTimeZone;
        private @Nullable String windowsFxVersion;
        private @Nullable Integer xManagedServiceIdentityId;

        public Builder() {
    	      // Empty
        }

        public Builder(SiteConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acrUseManagedIdentityCreds = defaults.acrUseManagedIdentityCreds;
    	      this.acrUserManagedIdentityID = defaults.acrUserManagedIdentityID;
    	      this.alwaysOn = defaults.alwaysOn;
    	      this.apiDefinition = defaults.apiDefinition;
    	      this.apiManagementConfig = defaults.apiManagementConfig;
    	      this.appCommandLine = defaults.appCommandLine;
    	      this.appSettings = defaults.appSettings;
    	      this.autoHealEnabled = defaults.autoHealEnabled;
    	      this.autoHealRules = defaults.autoHealRules;
    	      this.autoSwapSlotName = defaults.autoSwapSlotName;
    	      this.azureStorageAccounts = defaults.azureStorageAccounts;
    	      this.connectionStrings = defaults.connectionStrings;
    	      this.cors = defaults.cors;
    	      this.defaultDocuments = defaults.defaultDocuments;
    	      this.detailedErrorLoggingEnabled = defaults.detailedErrorLoggingEnabled;
    	      this.documentRoot = defaults.documentRoot;
    	      this.experiments = defaults.experiments;
    	      this.ftpsState = defaults.ftpsState;
    	      this.functionAppScaleLimit = defaults.functionAppScaleLimit;
    	      this.functionsRuntimeScaleMonitoringEnabled = defaults.functionsRuntimeScaleMonitoringEnabled;
    	      this.handlerMappings = defaults.handlerMappings;
    	      this.healthCheckPath = defaults.healthCheckPath;
    	      this.http20Enabled = defaults.http20Enabled;
    	      this.httpLoggingEnabled = defaults.httpLoggingEnabled;
    	      this.ipSecurityRestrictions = defaults.ipSecurityRestrictions;
    	      this.javaContainer = defaults.javaContainer;
    	      this.javaContainerVersion = defaults.javaContainerVersion;
    	      this.javaVersion = defaults.javaVersion;
    	      this.keyVaultReferenceIdentity = defaults.keyVaultReferenceIdentity;
    	      this.limits = defaults.limits;
    	      this.linuxFxVersion = defaults.linuxFxVersion;
    	      this.loadBalancing = defaults.loadBalancing;
    	      this.localMySqlEnabled = defaults.localMySqlEnabled;
    	      this.logsDirectorySizeLimit = defaults.logsDirectorySizeLimit;
    	      this.machineKey = defaults.machineKey;
    	      this.managedPipelineMode = defaults.managedPipelineMode;
    	      this.managedServiceIdentityId = defaults.managedServiceIdentityId;
    	      this.minTlsVersion = defaults.minTlsVersion;
    	      this.minimumElasticInstanceCount = defaults.minimumElasticInstanceCount;
    	      this.netFrameworkVersion = defaults.netFrameworkVersion;
    	      this.nodeVersion = defaults.nodeVersion;
    	      this.numberOfWorkers = defaults.numberOfWorkers;
    	      this.phpVersion = defaults.phpVersion;
    	      this.powerShellVersion = defaults.powerShellVersion;
    	      this.preWarmedInstanceCount = defaults.preWarmedInstanceCount;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.publishingUsername = defaults.publishingUsername;
    	      this.push = defaults.push;
    	      this.pythonVersion = defaults.pythonVersion;
    	      this.remoteDebuggingEnabled = defaults.remoteDebuggingEnabled;
    	      this.remoteDebuggingVersion = defaults.remoteDebuggingVersion;
    	      this.requestTracingEnabled = defaults.requestTracingEnabled;
    	      this.requestTracingExpirationTime = defaults.requestTracingExpirationTime;
    	      this.scmIpSecurityRestrictions = defaults.scmIpSecurityRestrictions;
    	      this.scmIpSecurityRestrictionsUseMain = defaults.scmIpSecurityRestrictionsUseMain;
    	      this.scmMinTlsVersion = defaults.scmMinTlsVersion;
    	      this.scmType = defaults.scmType;
    	      this.tracingOptions = defaults.tracingOptions;
    	      this.use32BitWorkerProcess = defaults.use32BitWorkerProcess;
    	      this.virtualApplications = defaults.virtualApplications;
    	      this.vnetName = defaults.vnetName;
    	      this.vnetPrivatePortsCount = defaults.vnetPrivatePortsCount;
    	      this.vnetRouteAllEnabled = defaults.vnetRouteAllEnabled;
    	      this.webSocketsEnabled = defaults.webSocketsEnabled;
    	      this.websiteTimeZone = defaults.websiteTimeZone;
    	      this.windowsFxVersion = defaults.windowsFxVersion;
    	      this.xManagedServiceIdentityId = defaults.xManagedServiceIdentityId;
        }

        public Builder setAcrUseManagedIdentityCreds(@Nullable Boolean acrUseManagedIdentityCreds) {
            this.acrUseManagedIdentityCreds = acrUseManagedIdentityCreds;
            return this;
        }

        public Builder setAcrUserManagedIdentityID(@Nullable String acrUserManagedIdentityID) {
            this.acrUserManagedIdentityID = acrUserManagedIdentityID;
            return this;
        }

        public Builder setAlwaysOn(@Nullable Boolean alwaysOn) {
            this.alwaysOn = alwaysOn;
            return this;
        }

        public Builder setApiDefinition(@Nullable ApiDefinitionInfoResponse apiDefinition) {
            this.apiDefinition = apiDefinition;
            return this;
        }

        public Builder setApiManagementConfig(@Nullable ApiManagementConfigResponse apiManagementConfig) {
            this.apiManagementConfig = apiManagementConfig;
            return this;
        }

        public Builder setAppCommandLine(@Nullable String appCommandLine) {
            this.appCommandLine = appCommandLine;
            return this;
        }

        public Builder setAppSettings(@Nullable List<NameValuePairResponse> appSettings) {
            this.appSettings = appSettings;
            return this;
        }

        public Builder setAutoHealEnabled(@Nullable Boolean autoHealEnabled) {
            this.autoHealEnabled = autoHealEnabled;
            return this;
        }

        public Builder setAutoHealRules(@Nullable AutoHealRulesResponse autoHealRules) {
            this.autoHealRules = autoHealRules;
            return this;
        }

        public Builder setAutoSwapSlotName(@Nullable String autoSwapSlotName) {
            this.autoSwapSlotName = autoSwapSlotName;
            return this;
        }

        public Builder setAzureStorageAccounts(@Nullable Map<String,AzureStorageInfoValueResponse> azureStorageAccounts) {
            this.azureStorageAccounts = azureStorageAccounts;
            return this;
        }

        public Builder setConnectionStrings(@Nullable List<ConnStringInfoResponse> connectionStrings) {
            this.connectionStrings = connectionStrings;
            return this;
        }

        public Builder setCors(@Nullable CorsSettingsResponse cors) {
            this.cors = cors;
            return this;
        }

        public Builder setDefaultDocuments(@Nullable List<String> defaultDocuments) {
            this.defaultDocuments = defaultDocuments;
            return this;
        }

        public Builder setDetailedErrorLoggingEnabled(@Nullable Boolean detailedErrorLoggingEnabled) {
            this.detailedErrorLoggingEnabled = detailedErrorLoggingEnabled;
            return this;
        }

        public Builder setDocumentRoot(@Nullable String documentRoot) {
            this.documentRoot = documentRoot;
            return this;
        }

        public Builder setExperiments(@Nullable ExperimentsResponse experiments) {
            this.experiments = experiments;
            return this;
        }

        public Builder setFtpsState(@Nullable String ftpsState) {
            this.ftpsState = ftpsState;
            return this;
        }

        public Builder setFunctionAppScaleLimit(@Nullable Integer functionAppScaleLimit) {
            this.functionAppScaleLimit = functionAppScaleLimit;
            return this;
        }

        public Builder setFunctionsRuntimeScaleMonitoringEnabled(@Nullable Boolean functionsRuntimeScaleMonitoringEnabled) {
            this.functionsRuntimeScaleMonitoringEnabled = functionsRuntimeScaleMonitoringEnabled;
            return this;
        }

        public Builder setHandlerMappings(@Nullable List<HandlerMappingResponse> handlerMappings) {
            this.handlerMappings = handlerMappings;
            return this;
        }

        public Builder setHealthCheckPath(@Nullable String healthCheckPath) {
            this.healthCheckPath = healthCheckPath;
            return this;
        }

        public Builder setHttp20Enabled(@Nullable Boolean http20Enabled) {
            this.http20Enabled = http20Enabled;
            return this;
        }

        public Builder setHttpLoggingEnabled(@Nullable Boolean httpLoggingEnabled) {
            this.httpLoggingEnabled = httpLoggingEnabled;
            return this;
        }

        public Builder setIpSecurityRestrictions(@Nullable List<IpSecurityRestrictionResponse> ipSecurityRestrictions) {
            this.ipSecurityRestrictions = ipSecurityRestrictions;
            return this;
        }

        public Builder setJavaContainer(@Nullable String javaContainer) {
            this.javaContainer = javaContainer;
            return this;
        }

        public Builder setJavaContainerVersion(@Nullable String javaContainerVersion) {
            this.javaContainerVersion = javaContainerVersion;
            return this;
        }

        public Builder setJavaVersion(@Nullable String javaVersion) {
            this.javaVersion = javaVersion;
            return this;
        }

        public Builder setKeyVaultReferenceIdentity(@Nullable String keyVaultReferenceIdentity) {
            this.keyVaultReferenceIdentity = keyVaultReferenceIdentity;
            return this;
        }

        public Builder setLimits(@Nullable SiteLimitsResponse limits) {
            this.limits = limits;
            return this;
        }

        public Builder setLinuxFxVersion(@Nullable String linuxFxVersion) {
            this.linuxFxVersion = linuxFxVersion;
            return this;
        }

        public Builder setLoadBalancing(@Nullable String loadBalancing) {
            this.loadBalancing = loadBalancing;
            return this;
        }

        public Builder setLocalMySqlEnabled(@Nullable Boolean localMySqlEnabled) {
            this.localMySqlEnabled = localMySqlEnabled;
            return this;
        }

        public Builder setLogsDirectorySizeLimit(@Nullable Integer logsDirectorySizeLimit) {
            this.logsDirectorySizeLimit = logsDirectorySizeLimit;
            return this;
        }

        public Builder setMachineKey(SiteMachineKeyResponse machineKey) {
            this.machineKey = Objects.requireNonNull(machineKey);
            return this;
        }

        public Builder setManagedPipelineMode(@Nullable String managedPipelineMode) {
            this.managedPipelineMode = managedPipelineMode;
            return this;
        }

        public Builder setManagedServiceIdentityId(@Nullable Integer managedServiceIdentityId) {
            this.managedServiceIdentityId = managedServiceIdentityId;
            return this;
        }

        public Builder setMinTlsVersion(@Nullable String minTlsVersion) {
            this.minTlsVersion = minTlsVersion;
            return this;
        }

        public Builder setMinimumElasticInstanceCount(@Nullable Integer minimumElasticInstanceCount) {
            this.minimumElasticInstanceCount = minimumElasticInstanceCount;
            return this;
        }

        public Builder setNetFrameworkVersion(@Nullable String netFrameworkVersion) {
            this.netFrameworkVersion = netFrameworkVersion;
            return this;
        }

        public Builder setNodeVersion(@Nullable String nodeVersion) {
            this.nodeVersion = nodeVersion;
            return this;
        }

        public Builder setNumberOfWorkers(@Nullable Integer numberOfWorkers) {
            this.numberOfWorkers = numberOfWorkers;
            return this;
        }

        public Builder setPhpVersion(@Nullable String phpVersion) {
            this.phpVersion = phpVersion;
            return this;
        }

        public Builder setPowerShellVersion(@Nullable String powerShellVersion) {
            this.powerShellVersion = powerShellVersion;
            return this;
        }

        public Builder setPreWarmedInstanceCount(@Nullable Integer preWarmedInstanceCount) {
            this.preWarmedInstanceCount = preWarmedInstanceCount;
            return this;
        }

        public Builder setPublicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        public Builder setPublishingUsername(@Nullable String publishingUsername) {
            this.publishingUsername = publishingUsername;
            return this;
        }

        public Builder setPush(@Nullable PushSettingsResponse push) {
            this.push = push;
            return this;
        }

        public Builder setPythonVersion(@Nullable String pythonVersion) {
            this.pythonVersion = pythonVersion;
            return this;
        }

        public Builder setRemoteDebuggingEnabled(@Nullable Boolean remoteDebuggingEnabled) {
            this.remoteDebuggingEnabled = remoteDebuggingEnabled;
            return this;
        }

        public Builder setRemoteDebuggingVersion(@Nullable String remoteDebuggingVersion) {
            this.remoteDebuggingVersion = remoteDebuggingVersion;
            return this;
        }

        public Builder setRequestTracingEnabled(@Nullable Boolean requestTracingEnabled) {
            this.requestTracingEnabled = requestTracingEnabled;
            return this;
        }

        public Builder setRequestTracingExpirationTime(@Nullable String requestTracingExpirationTime) {
            this.requestTracingExpirationTime = requestTracingExpirationTime;
            return this;
        }

        public Builder setScmIpSecurityRestrictions(@Nullable List<IpSecurityRestrictionResponse> scmIpSecurityRestrictions) {
            this.scmIpSecurityRestrictions = scmIpSecurityRestrictions;
            return this;
        }

        public Builder setScmIpSecurityRestrictionsUseMain(@Nullable Boolean scmIpSecurityRestrictionsUseMain) {
            this.scmIpSecurityRestrictionsUseMain = scmIpSecurityRestrictionsUseMain;
            return this;
        }

        public Builder setScmMinTlsVersion(@Nullable String scmMinTlsVersion) {
            this.scmMinTlsVersion = scmMinTlsVersion;
            return this;
        }

        public Builder setScmType(@Nullable String scmType) {
            this.scmType = scmType;
            return this;
        }

        public Builder setTracingOptions(@Nullable String tracingOptions) {
            this.tracingOptions = tracingOptions;
            return this;
        }

        public Builder setUse32BitWorkerProcess(@Nullable Boolean use32BitWorkerProcess) {
            this.use32BitWorkerProcess = use32BitWorkerProcess;
            return this;
        }

        public Builder setVirtualApplications(@Nullable List<VirtualApplicationResponse> virtualApplications) {
            this.virtualApplications = virtualApplications;
            return this;
        }

        public Builder setVnetName(@Nullable String vnetName) {
            this.vnetName = vnetName;
            return this;
        }

        public Builder setVnetPrivatePortsCount(@Nullable Integer vnetPrivatePortsCount) {
            this.vnetPrivatePortsCount = vnetPrivatePortsCount;
            return this;
        }

        public Builder setVnetRouteAllEnabled(@Nullable Boolean vnetRouteAllEnabled) {
            this.vnetRouteAllEnabled = vnetRouteAllEnabled;
            return this;
        }

        public Builder setWebSocketsEnabled(@Nullable Boolean webSocketsEnabled) {
            this.webSocketsEnabled = webSocketsEnabled;
            return this;
        }

        public Builder setWebsiteTimeZone(@Nullable String websiteTimeZone) {
            this.websiteTimeZone = websiteTimeZone;
            return this;
        }

        public Builder setWindowsFxVersion(@Nullable String windowsFxVersion) {
            this.windowsFxVersion = windowsFxVersion;
            return this;
        }

        public Builder setXManagedServiceIdentityId(@Nullable Integer xManagedServiceIdentityId) {
            this.xManagedServiceIdentityId = xManagedServiceIdentityId;
            return this;
        }

        public SiteConfigResponse build() {
            return new SiteConfigResponse(acrUseManagedIdentityCreds, acrUserManagedIdentityID, alwaysOn, apiDefinition, apiManagementConfig, appCommandLine, appSettings, autoHealEnabled, autoHealRules, autoSwapSlotName, azureStorageAccounts, connectionStrings, cors, defaultDocuments, detailedErrorLoggingEnabled, documentRoot, experiments, ftpsState, functionAppScaleLimit, functionsRuntimeScaleMonitoringEnabled, handlerMappings, healthCheckPath, http20Enabled, httpLoggingEnabled, ipSecurityRestrictions, javaContainer, javaContainerVersion, javaVersion, keyVaultReferenceIdentity, limits, linuxFxVersion, loadBalancing, localMySqlEnabled, logsDirectorySizeLimit, machineKey, managedPipelineMode, managedServiceIdentityId, minTlsVersion, minimumElasticInstanceCount, netFrameworkVersion, nodeVersion, numberOfWorkers, phpVersion, powerShellVersion, preWarmedInstanceCount, publicNetworkAccess, publishingUsername, push, pythonVersion, remoteDebuggingEnabled, remoteDebuggingVersion, requestTracingEnabled, requestTracingExpirationTime, scmIpSecurityRestrictions, scmIpSecurityRestrictionsUseMain, scmMinTlsVersion, scmType, tracingOptions, use32BitWorkerProcess, virtualApplications, vnetName, vnetPrivatePortsCount, vnetRouteAllEnabled, webSocketsEnabled, websiteTimeZone, windowsFxVersion, xManagedServiceIdentityId);
        }
    }
}
