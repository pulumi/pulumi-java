// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.peering;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.peering.PrefixArgs;
import io.pulumi.azurenative.peering.outputs.PeeringServicePrefixEventResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The peering service prefix class.
 * API Version: 2021-01-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:peering:Prefix peeringServicePrefixName /subscriptions/subId/resourceGroups/rgName/providers/Microsoft.Peering/peeringServices/peeringServiceName/prefixes/peeringServicePrefixName 
 * ```
 * 
 */
@ResourceType(type="azure-native:peering:Prefix")
public class Prefix extends io.pulumi.resources.CustomResource {
    /**
     * The error message for validation state
     * 
     */
    @OutputExport(name="errorMessage", type=String.class, parameters={})
    private Output<String> errorMessage;

    /**
     * @return The error message for validation state
     * 
     */
    public Output<String> getErrorMessage() {
        return this.errorMessage;
    }
    /**
     * The list of events for peering service prefix
     * 
     */
    @OutputExport(name="events", type=List.class, parameters={PeeringServicePrefixEventResponse.class})
    private Output<List<PeeringServicePrefixEventResponse>> events;

    /**
     * @return The list of events for peering service prefix
     * 
     */
    public Output<List<PeeringServicePrefixEventResponse>> getEvents() {
        return this.events;
    }
    /**
     * The prefix learned type
     * 
     */
    @OutputExport(name="learnedType", type=String.class, parameters={})
    private Output<String> learnedType;

    /**
     * @return The prefix learned type
     * 
     */
    public Output<String> getLearnedType() {
        return this.learnedType;
    }
    /**
     * The name of the resource.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The peering service prefix key
     * 
     */
    @OutputExport(name="peeringServicePrefixKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> peeringServicePrefixKey;

    /**
     * @return The peering service prefix key
     * 
     */
    public Output</* @Nullable */ String> getPeeringServicePrefixKey() {
        return this.peeringServicePrefixKey;
    }
    /**
     * The prefix from which your traffic originates.
     * 
     */
    @OutputExport(name="prefix", type=String.class, parameters={})
    private Output</* @Nullable */ String> prefix;

    /**
     * @return The prefix from which your traffic originates.
     * 
     */
    public Output</* @Nullable */ String> getPrefix() {
        return this.prefix;
    }
    /**
     * The prefix validation state
     * 
     */
    @OutputExport(name="prefixValidationState", type=String.class, parameters={})
    private Output<String> prefixValidationState;

    /**
     * @return The prefix validation state
     * 
     */
    public Output<String> getPrefixValidationState() {
        return this.prefixValidationState;
    }
    /**
     * The provisioning state of the resource.
     * 
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the resource.
     * 
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The type of the resource.
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Prefix(String name) {
        this(name, PrefixArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Prefix(String name, PrefixArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Prefix(String name, PrefixArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:peering:Prefix", name, args == null ? PrefixArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Prefix(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:peering:Prefix", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:peering/v20190801preview:Prefix").build()),
                Input.of(Alias.builder().setType("azure-native:peering/v20190901preview:Prefix").build()),
                Input.of(Alias.builder().setType("azure-native:peering/v20200101preview:Prefix").build()),
                Input.of(Alias.builder().setType("azure-native:peering/v20200401:Prefix").build()),
                Input.of(Alias.builder().setType("azure-native:peering/v20201001:Prefix").build()),
                Input.of(Alias.builder().setType("azure-native:peering/v20210101:Prefix").build()),
                Input.of(Alias.builder().setType("azure-native:peering/v20210601:Prefix").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Prefix get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Prefix(name, id, options);
    }
}
