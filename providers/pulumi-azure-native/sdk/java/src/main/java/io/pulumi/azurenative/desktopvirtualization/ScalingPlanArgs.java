// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.desktopvirtualization;

import io.pulumi.azurenative.desktopvirtualization.enums.HostPoolType;
import io.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetIdentityArgs;
import io.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetPlanArgs;
import io.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetSkuArgs;
import io.pulumi.azurenative.desktopvirtualization.inputs.ScalingHostPoolReferenceArgs;
import io.pulumi.azurenative.desktopvirtualization.inputs.ScalingScheduleArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ScalingPlanArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScalingPlanArgs Empty = new ScalingPlanArgs();

    /**
     * Description of scaling plan.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Exclusion tag for scaling plan.
     * 
     */
    @Import(name="exclusionTag")
      private final @Nullable Output<String> exclusionTag;

    public Output<String> getExclusionTag() {
        return this.exclusionTag == null ? Output.empty() : this.exclusionTag;
    }

    /**
     * User friendly name of scaling plan.
     * 
     */
    @Import(name="friendlyName")
      private final @Nullable Output<String> friendlyName;

    public Output<String> getFriendlyName() {
        return this.friendlyName == null ? Output.empty() : this.friendlyName;
    }

    /**
     * List of ScalingHostPoolReference definitions.
     * 
     */
    @Import(name="hostPoolReferences")
      private final @Nullable Output<List<ScalingHostPoolReferenceArgs>> hostPoolReferences;

    public Output<List<ScalingHostPoolReferenceArgs>> getHostPoolReferences() {
        return this.hostPoolReferences == null ? Output.empty() : this.hostPoolReferences;
    }

    /**
     * HostPool type for desktop.
     * 
     */
    @Import(name="hostPoolType")
      private final @Nullable Output<Either<String,HostPoolType>> hostPoolType;

    public Output<Either<String,HostPoolType>> getHostPoolType() {
        return this.hostPoolType == null ? Output.empty() : this.hostPoolType;
    }

    @Import(name="identity")
      private final @Nullable Output<ResourceModelWithAllowedPropertySetIdentityArgs> identity;

    public Output<ResourceModelWithAllowedPropertySetIdentityArgs> getIdentity() {
        return this.identity == null ? Output.empty() : this.identity;
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<String> kind;

    public Output<String> getKind() {
        return this.kind == null ? Output.empty() : this.kind;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    @Import(name="managedBy")
      private final @Nullable Output<String> managedBy;

    public Output<String> getManagedBy() {
        return this.managedBy == null ? Output.empty() : this.managedBy;
    }

    @Import(name="plan")
      private final @Nullable Output<ResourceModelWithAllowedPropertySetPlanArgs> plan;

    public Output<ResourceModelWithAllowedPropertySetPlanArgs> getPlan() {
        return this.plan == null ? Output.empty() : this.plan;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The ring number of scaling plan.
     * 
     */
    @Import(name="ring")
      private final @Nullable Output<Integer> ring;

    public Output<Integer> getRing() {
        return this.ring == null ? Output.empty() : this.ring;
    }

    /**
     * The name of the scaling plan.
     * 
     */
    @Import(name="scalingPlanName")
      private final @Nullable Output<String> scalingPlanName;

    public Output<String> getScalingPlanName() {
        return this.scalingPlanName == null ? Output.empty() : this.scalingPlanName;
    }

    /**
     * List of ScalingSchedule definitions.
     * 
     */
    @Import(name="schedules")
      private final @Nullable Output<List<ScalingScheduleArgs>> schedules;

    public Output<List<ScalingScheduleArgs>> getSchedules() {
        return this.schedules == null ? Output.empty() : this.schedules;
    }

    @Import(name="sku")
      private final @Nullable Output<ResourceModelWithAllowedPropertySetSkuArgs> sku;

    public Output<ResourceModelWithAllowedPropertySetSkuArgs> getSku() {
        return this.sku == null ? Output.empty() : this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * Timezone of the scaling plan.
     * 
     */
    @Import(name="timeZone")
      private final @Nullable Output<String> timeZone;

    public Output<String> getTimeZone() {
        return this.timeZone == null ? Output.empty() : this.timeZone;
    }

    public ScalingPlanArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> exclusionTag,
        @Nullable Output<String> friendlyName,
        @Nullable Output<List<ScalingHostPoolReferenceArgs>> hostPoolReferences,
        @Nullable Output<Either<String,HostPoolType>> hostPoolType,
        @Nullable Output<ResourceModelWithAllowedPropertySetIdentityArgs> identity,
        @Nullable Output<String> kind,
        @Nullable Output<String> location,
        @Nullable Output<String> managedBy,
        @Nullable Output<ResourceModelWithAllowedPropertySetPlanArgs> plan,
        Output<String> resourceGroupName,
        @Nullable Output<Integer> ring,
        @Nullable Output<String> scalingPlanName,
        @Nullable Output<List<ScalingScheduleArgs>> schedules,
        @Nullable Output<ResourceModelWithAllowedPropertySetSkuArgs> sku,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> timeZone) {
        this.description = description;
        this.exclusionTag = exclusionTag;
        this.friendlyName = friendlyName;
        this.hostPoolReferences = hostPoolReferences;
        this.hostPoolType = hostPoolType;
        this.identity = identity;
        this.kind = kind;
        this.location = location;
        this.managedBy = managedBy;
        this.plan = plan;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ring = ring;
        this.scalingPlanName = scalingPlanName;
        this.schedules = schedules;
        this.sku = sku;
        this.tags = tags;
        this.timeZone = timeZone;
    }

    private ScalingPlanArgs() {
        this.description = Output.empty();
        this.exclusionTag = Output.empty();
        this.friendlyName = Output.empty();
        this.hostPoolReferences = Output.empty();
        this.hostPoolType = Output.empty();
        this.identity = Output.empty();
        this.kind = Output.empty();
        this.location = Output.empty();
        this.managedBy = Output.empty();
        this.plan = Output.empty();
        this.resourceGroupName = Output.empty();
        this.ring = Output.empty();
        this.scalingPlanName = Output.empty();
        this.schedules = Output.empty();
        this.sku = Output.empty();
        this.tags = Output.empty();
        this.timeZone = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScalingPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> exclusionTag;
        private @Nullable Output<String> friendlyName;
        private @Nullable Output<List<ScalingHostPoolReferenceArgs>> hostPoolReferences;
        private @Nullable Output<Either<String,HostPoolType>> hostPoolType;
        private @Nullable Output<ResourceModelWithAllowedPropertySetIdentityArgs> identity;
        private @Nullable Output<String> kind;
        private @Nullable Output<String> location;
        private @Nullable Output<String> managedBy;
        private @Nullable Output<ResourceModelWithAllowedPropertySetPlanArgs> plan;
        private Output<String> resourceGroupName;
        private @Nullable Output<Integer> ring;
        private @Nullable Output<String> scalingPlanName;
        private @Nullable Output<List<ScalingScheduleArgs>> schedules;
        private @Nullable Output<ResourceModelWithAllowedPropertySetSkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> timeZone;

        public Builder() {
    	      // Empty
        }

        public Builder(ScalingPlanArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.exclusionTag = defaults.exclusionTag;
    	      this.friendlyName = defaults.friendlyName;
    	      this.hostPoolReferences = defaults.hostPoolReferences;
    	      this.hostPoolType = defaults.hostPoolType;
    	      this.identity = defaults.identity;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.managedBy = defaults.managedBy;
    	      this.plan = defaults.plan;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ring = defaults.ring;
    	      this.scalingPlanName = defaults.scalingPlanName;
    	      this.schedules = defaults.schedules;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.timeZone = defaults.timeZone;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder exclusionTag(@Nullable Output<String> exclusionTag) {
            this.exclusionTag = exclusionTag;
            return this;
        }
        public Builder exclusionTag(@Nullable String exclusionTag) {
            this.exclusionTag = Output.ofNullable(exclusionTag);
            return this;
        }
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }
        public Builder friendlyName(@Nullable String friendlyName) {
            this.friendlyName = Output.ofNullable(friendlyName);
            return this;
        }
        public Builder hostPoolReferences(@Nullable Output<List<ScalingHostPoolReferenceArgs>> hostPoolReferences) {
            this.hostPoolReferences = hostPoolReferences;
            return this;
        }
        public Builder hostPoolReferences(@Nullable List<ScalingHostPoolReferenceArgs> hostPoolReferences) {
            this.hostPoolReferences = Output.ofNullable(hostPoolReferences);
            return this;
        }
        public Builder hostPoolReferences(ScalingHostPoolReferenceArgs... hostPoolReferences) {
            return hostPoolReferences(List.of(hostPoolReferences));
        }
        public Builder hostPoolType(@Nullable Output<Either<String,HostPoolType>> hostPoolType) {
            this.hostPoolType = hostPoolType;
            return this;
        }
        public Builder hostPoolType(@Nullable Either<String,HostPoolType> hostPoolType) {
            this.hostPoolType = Output.ofNullable(hostPoolType);
            return this;
        }
        public Builder identity(@Nullable Output<ResourceModelWithAllowedPropertySetIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable ResourceModelWithAllowedPropertySetIdentityArgs identity) {
            this.identity = Output.ofNullable(identity);
            return this;
        }
        public Builder kind(@Nullable Output<String> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = Output.ofNullable(kind);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder managedBy(@Nullable Output<String> managedBy) {
            this.managedBy = managedBy;
            return this;
        }
        public Builder managedBy(@Nullable String managedBy) {
            this.managedBy = Output.ofNullable(managedBy);
            return this;
        }
        public Builder plan(@Nullable Output<ResourceModelWithAllowedPropertySetPlanArgs> plan) {
            this.plan = plan;
            return this;
        }
        public Builder plan(@Nullable ResourceModelWithAllowedPropertySetPlanArgs plan) {
            this.plan = Output.ofNullable(plan);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder ring(@Nullable Output<Integer> ring) {
            this.ring = ring;
            return this;
        }
        public Builder ring(@Nullable Integer ring) {
            this.ring = Output.ofNullable(ring);
            return this;
        }
        public Builder scalingPlanName(@Nullable Output<String> scalingPlanName) {
            this.scalingPlanName = scalingPlanName;
            return this;
        }
        public Builder scalingPlanName(@Nullable String scalingPlanName) {
            this.scalingPlanName = Output.ofNullable(scalingPlanName);
            return this;
        }
        public Builder schedules(@Nullable Output<List<ScalingScheduleArgs>> schedules) {
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(@Nullable List<ScalingScheduleArgs> schedules) {
            this.schedules = Output.ofNullable(schedules);
            return this;
        }
        public Builder schedules(ScalingScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }
        public Builder sku(@Nullable Output<ResourceModelWithAllowedPropertySetSkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable ResourceModelWithAllowedPropertySetSkuArgs sku) {
            this.sku = Output.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder timeZone(@Nullable Output<String> timeZone) {
            this.timeZone = timeZone;
            return this;
        }
        public Builder timeZone(@Nullable String timeZone) {
            this.timeZone = Output.ofNullable(timeZone);
            return this;
        }        public ScalingPlanArgs build() {
            return new ScalingPlanArgs(description, exclusionTag, friendlyName, hostPoolReferences, hostPoolType, identity, kind, location, managedBy, plan, resourceGroupName, ring, scalingPlanName, schedules, sku, tags, timeZone);
        }
    }
}
