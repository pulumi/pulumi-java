// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.desktopvirtualization;

import io.pulumi.azurenative.desktopvirtualization.enums.HostPoolType;
import io.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetIdentityArgs;
import io.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetPlanArgs;
import io.pulumi.azurenative.desktopvirtualization.inputs.ResourceModelWithAllowedPropertySetSkuArgs;
import io.pulumi.azurenative.desktopvirtualization.inputs.ScalingHostPoolReferenceArgs;
import io.pulumi.azurenative.desktopvirtualization.inputs.ScalingScheduleArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ScalingPlanArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScalingPlanArgs Empty = new ScalingPlanArgs();

    /**
     * Description of scaling plan.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Exclusion tag for scaling plan.
     * 
     */
    @InputImport(name="exclusionTag")
      private final @Nullable Input<String> exclusionTag;

    public Input<String> getExclusionTag() {
        return this.exclusionTag == null ? Input.empty() : this.exclusionTag;
    }

    /**
     * User friendly name of scaling plan.
     * 
     */
    @InputImport(name="friendlyName")
      private final @Nullable Input<String> friendlyName;

    public Input<String> getFriendlyName() {
        return this.friendlyName == null ? Input.empty() : this.friendlyName;
    }

    /**
     * List of ScalingHostPoolReference definitions.
     * 
     */
    @InputImport(name="hostPoolReferences")
      private final @Nullable Input<List<ScalingHostPoolReferenceArgs>> hostPoolReferences;

    public Input<List<ScalingHostPoolReferenceArgs>> getHostPoolReferences() {
        return this.hostPoolReferences == null ? Input.empty() : this.hostPoolReferences;
    }

    /**
     * HostPool type for desktop.
     * 
     */
    @InputImport(name="hostPoolType")
      private final @Nullable Input<Either<String,HostPoolType>> hostPoolType;

    public Input<Either<String,HostPoolType>> getHostPoolType() {
        return this.hostPoolType == null ? Input.empty() : this.hostPoolType;
    }

    @InputImport(name="identity")
      private final @Nullable Input<ResourceModelWithAllowedPropertySetIdentityArgs> identity;

    public Input<ResourceModelWithAllowedPropertySetIdentityArgs> getIdentity() {
        return this.identity == null ? Input.empty() : this.identity;
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    @InputImport(name="kind")
      private final @Nullable Input<String> kind;

    public Input<String> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    @InputImport(name="managedBy")
      private final @Nullable Input<String> managedBy;

    public Input<String> getManagedBy() {
        return this.managedBy == null ? Input.empty() : this.managedBy;
    }

    @InputImport(name="plan")
      private final @Nullable Input<ResourceModelWithAllowedPropertySetPlanArgs> plan;

    public Input<ResourceModelWithAllowedPropertySetPlanArgs> getPlan() {
        return this.plan == null ? Input.empty() : this.plan;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The ring number of scaling plan.
     * 
     */
    @InputImport(name="ring")
      private final @Nullable Input<Integer> ring;

    public Input<Integer> getRing() {
        return this.ring == null ? Input.empty() : this.ring;
    }

    /**
     * The name of the scaling plan.
     * 
     */
    @InputImport(name="scalingPlanName")
      private final @Nullable Input<String> scalingPlanName;

    public Input<String> getScalingPlanName() {
        return this.scalingPlanName == null ? Input.empty() : this.scalingPlanName;
    }

    /**
     * List of ScalingSchedule definitions.
     * 
     */
    @InputImport(name="schedules")
      private final @Nullable Input<List<ScalingScheduleArgs>> schedules;

    public Input<List<ScalingScheduleArgs>> getSchedules() {
        return this.schedules == null ? Input.empty() : this.schedules;
    }

    @InputImport(name="sku")
      private final @Nullable Input<ResourceModelWithAllowedPropertySetSkuArgs> sku;

    public Input<ResourceModelWithAllowedPropertySetSkuArgs> getSku() {
        return this.sku == null ? Input.empty() : this.sku;
    }

    /**
     * Resource tags.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Timezone of the scaling plan.
     * 
     */
    @InputImport(name="timeZone")
      private final @Nullable Input<String> timeZone;

    public Input<String> getTimeZone() {
        return this.timeZone == null ? Input.empty() : this.timeZone;
    }

    public ScalingPlanArgs(
        @Nullable Input<String> description,
        @Nullable Input<String> exclusionTag,
        @Nullable Input<String> friendlyName,
        @Nullable Input<List<ScalingHostPoolReferenceArgs>> hostPoolReferences,
        @Nullable Input<Either<String,HostPoolType>> hostPoolType,
        @Nullable Input<ResourceModelWithAllowedPropertySetIdentityArgs> identity,
        @Nullable Input<String> kind,
        @Nullable Input<String> location,
        @Nullable Input<String> managedBy,
        @Nullable Input<ResourceModelWithAllowedPropertySetPlanArgs> plan,
        Input<String> resourceGroupName,
        @Nullable Input<Integer> ring,
        @Nullable Input<String> scalingPlanName,
        @Nullable Input<List<ScalingScheduleArgs>> schedules,
        @Nullable Input<ResourceModelWithAllowedPropertySetSkuArgs> sku,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> timeZone) {
        this.description = description;
        this.exclusionTag = exclusionTag;
        this.friendlyName = friendlyName;
        this.hostPoolReferences = hostPoolReferences;
        this.hostPoolType = hostPoolType;
        this.identity = identity;
        this.kind = kind;
        this.location = location;
        this.managedBy = managedBy;
        this.plan = plan;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ring = ring;
        this.scalingPlanName = scalingPlanName;
        this.schedules = schedules;
        this.sku = sku;
        this.tags = tags;
        this.timeZone = timeZone;
    }

    private ScalingPlanArgs() {
        this.description = Input.empty();
        this.exclusionTag = Input.empty();
        this.friendlyName = Input.empty();
        this.hostPoolReferences = Input.empty();
        this.hostPoolType = Input.empty();
        this.identity = Input.empty();
        this.kind = Input.empty();
        this.location = Input.empty();
        this.managedBy = Input.empty();
        this.plan = Input.empty();
        this.resourceGroupName = Input.empty();
        this.ring = Input.empty();
        this.scalingPlanName = Input.empty();
        this.schedules = Input.empty();
        this.sku = Input.empty();
        this.tags = Input.empty();
        this.timeZone = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScalingPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> exclusionTag;
        private @Nullable Input<String> friendlyName;
        private @Nullable Input<List<ScalingHostPoolReferenceArgs>> hostPoolReferences;
        private @Nullable Input<Either<String,HostPoolType>> hostPoolType;
        private @Nullable Input<ResourceModelWithAllowedPropertySetIdentityArgs> identity;
        private @Nullable Input<String> kind;
        private @Nullable Input<String> location;
        private @Nullable Input<String> managedBy;
        private @Nullable Input<ResourceModelWithAllowedPropertySetPlanArgs> plan;
        private Input<String> resourceGroupName;
        private @Nullable Input<Integer> ring;
        private @Nullable Input<String> scalingPlanName;
        private @Nullable Input<List<ScalingScheduleArgs>> schedules;
        private @Nullable Input<ResourceModelWithAllowedPropertySetSkuArgs> sku;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> timeZone;

        public Builder() {
    	      // Empty
        }

        public Builder(ScalingPlanArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.exclusionTag = defaults.exclusionTag;
    	      this.friendlyName = defaults.friendlyName;
    	      this.hostPoolReferences = defaults.hostPoolReferences;
    	      this.hostPoolType = defaults.hostPoolType;
    	      this.identity = defaults.identity;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.managedBy = defaults.managedBy;
    	      this.plan = defaults.plan;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ring = defaults.ring;
    	      this.scalingPlanName = defaults.scalingPlanName;
    	      this.schedules = defaults.schedules;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.timeZone = defaults.timeZone;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setExclusionTag(@Nullable Input<String> exclusionTag) {
            this.exclusionTag = exclusionTag;
            return this;
        }

        public Builder setExclusionTag(@Nullable String exclusionTag) {
            this.exclusionTag = Input.ofNullable(exclusionTag);
            return this;
        }

        public Builder setFriendlyName(@Nullable Input<String> friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }

        public Builder setFriendlyName(@Nullable String friendlyName) {
            this.friendlyName = Input.ofNullable(friendlyName);
            return this;
        }

        public Builder setHostPoolReferences(@Nullable Input<List<ScalingHostPoolReferenceArgs>> hostPoolReferences) {
            this.hostPoolReferences = hostPoolReferences;
            return this;
        }

        public Builder setHostPoolReferences(@Nullable List<ScalingHostPoolReferenceArgs> hostPoolReferences) {
            this.hostPoolReferences = Input.ofNullable(hostPoolReferences);
            return this;
        }

        public Builder setHostPoolType(@Nullable Input<Either<String,HostPoolType>> hostPoolType) {
            this.hostPoolType = hostPoolType;
            return this;
        }

        public Builder setHostPoolType(@Nullable Either<String,HostPoolType> hostPoolType) {
            this.hostPoolType = Input.ofNullable(hostPoolType);
            return this;
        }

        public Builder setIdentity(@Nullable Input<ResourceModelWithAllowedPropertySetIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }

        public Builder setIdentity(@Nullable ResourceModelWithAllowedPropertySetIdentityArgs identity) {
            this.identity = Input.ofNullable(identity);
            return this;
        }

        public Builder setKind(@Nullable Input<String> kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setManagedBy(@Nullable Input<String> managedBy) {
            this.managedBy = managedBy;
            return this;
        }

        public Builder setManagedBy(@Nullable String managedBy) {
            this.managedBy = Input.ofNullable(managedBy);
            return this;
        }

        public Builder setPlan(@Nullable Input<ResourceModelWithAllowedPropertySetPlanArgs> plan) {
            this.plan = plan;
            return this;
        }

        public Builder setPlan(@Nullable ResourceModelWithAllowedPropertySetPlanArgs plan) {
            this.plan = Input.ofNullable(plan);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRing(@Nullable Input<Integer> ring) {
            this.ring = ring;
            return this;
        }

        public Builder setRing(@Nullable Integer ring) {
            this.ring = Input.ofNullable(ring);
            return this;
        }

        public Builder setScalingPlanName(@Nullable Input<String> scalingPlanName) {
            this.scalingPlanName = scalingPlanName;
            return this;
        }

        public Builder setScalingPlanName(@Nullable String scalingPlanName) {
            this.scalingPlanName = Input.ofNullable(scalingPlanName);
            return this;
        }

        public Builder setSchedules(@Nullable Input<List<ScalingScheduleArgs>> schedules) {
            this.schedules = schedules;
            return this;
        }

        public Builder setSchedules(@Nullable List<ScalingScheduleArgs> schedules) {
            this.schedules = Input.ofNullable(schedules);
            return this;
        }

        public Builder setSku(@Nullable Input<ResourceModelWithAllowedPropertySetSkuArgs> sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSku(@Nullable ResourceModelWithAllowedPropertySetSkuArgs sku) {
            this.sku = Input.ofNullable(sku);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTimeZone(@Nullable Input<String> timeZone) {
            this.timeZone = timeZone;
            return this;
        }

        public Builder setTimeZone(@Nullable String timeZone) {
            this.timeZone = Input.ofNullable(timeZone);
            return this;
        }
        public ScalingPlanArgs build() {
            return new ScalingPlanArgs(description, exclusionTag, friendlyName, hostPoolReferences, hostPoolType, identity, kind, location, managedBy, plan, resourceGroupName, ring, scalingPlanName, schedules, sku, tags, timeZone);
        }
    }
}
