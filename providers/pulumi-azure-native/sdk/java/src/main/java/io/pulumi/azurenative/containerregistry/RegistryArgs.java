// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry;

import io.pulumi.azurenative.containerregistry.inputs.NetworkRuleSetArgs;
import io.pulumi.azurenative.containerregistry.inputs.PoliciesArgs;
import io.pulumi.azurenative.containerregistry.inputs.SkuArgs;
import io.pulumi.azurenative.containerregistry.inputs.StorageAccountPropertiesArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RegistryArgs extends io.pulumi.resources.ResourceArgs {

    public static final RegistryArgs Empty = new RegistryArgs();

    /**
     * The value that indicates whether the admin user is enabled.
     * 
     */
    @Import(name="adminUserEnabled")
      private final @Nullable Output<Boolean> adminUserEnabled;

    public Output<Boolean> adminUserEnabled() {
        return this.adminUserEnabled == null ? Codegen.empty() : this.adminUserEnabled;
    }

    /**
     * The location of the resource. This cannot be changed after the resource is created.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The network rule set for a container registry.
     * 
     */
    @Import(name="networkRuleSet")
      private final @Nullable Output<NetworkRuleSetArgs> networkRuleSet;

    public Output<NetworkRuleSetArgs> networkRuleSet() {
        return this.networkRuleSet == null ? Codegen.empty() : this.networkRuleSet;
    }

    /**
     * The policies for a container registry.
     * 
     */
    @Import(name="policies")
      private final @Nullable Output<PoliciesArgs> policies;

    public Output<PoliciesArgs> policies() {
        return this.policies == null ? Codegen.empty() : this.policies;
    }

    /**
     * The name of the container registry.
     * 
     */
    @Import(name="registryName")
      private final @Nullable Output<String> registryName;

    public Output<String> registryName() {
        return this.registryName == null ? Codegen.empty() : this.registryName;
    }

    /**
     * The name of the resource group to which the container registry belongs.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The SKU of the container registry.
     * 
     */
    @Import(name="sku", required=true)
      private final Output<SkuArgs> sku;

    public Output<SkuArgs> sku() {
        return this.sku;
    }

    /**
     * The properties of the storage account for the container registry. Only applicable to Classic SKU.
     * 
     */
    @Import(name="storageAccount")
      private final @Nullable Output<StorageAccountPropertiesArgs> storageAccount;

    public Output<StorageAccountPropertiesArgs> storageAccount() {
        return this.storageAccount == null ? Codegen.empty() : this.storageAccount;
    }

    /**
     * The tags of the resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public RegistryArgs(
        @Nullable Output<Boolean> adminUserEnabled,
        @Nullable Output<String> location,
        @Nullable Output<NetworkRuleSetArgs> networkRuleSet,
        @Nullable Output<PoliciesArgs> policies,
        @Nullable Output<String> registryName,
        Output<String> resourceGroupName,
        Output<SkuArgs> sku,
        @Nullable Output<StorageAccountPropertiesArgs> storageAccount,
        @Nullable Output<Map<String,String>> tags) {
        this.adminUserEnabled = adminUserEnabled == null ? Codegen.ofNullable(false) : adminUserEnabled;
        this.location = location;
        this.networkRuleSet = networkRuleSet;
        this.policies = policies;
        this.registryName = registryName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sku = Objects.requireNonNull(sku, "expected parameter 'sku' to be non-null");
        this.storageAccount = storageAccount;
        this.tags = tags;
    }

    private RegistryArgs() {
        this.adminUserEnabled = Codegen.empty();
        this.location = Codegen.empty();
        this.networkRuleSet = Codegen.empty();
        this.policies = Codegen.empty();
        this.registryName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.sku = Codegen.empty();
        this.storageAccount = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> adminUserEnabled;
        private @Nullable Output<String> location;
        private @Nullable Output<NetworkRuleSetArgs> networkRuleSet;
        private @Nullable Output<PoliciesArgs> policies;
        private @Nullable Output<String> registryName;
        private Output<String> resourceGroupName;
        private Output<SkuArgs> sku;
        private @Nullable Output<StorageAccountPropertiesArgs> storageAccount;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminUserEnabled = defaults.adminUserEnabled;
    	      this.location = defaults.location;
    	      this.networkRuleSet = defaults.networkRuleSet;
    	      this.policies = defaults.policies;
    	      this.registryName = defaults.registryName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.storageAccount = defaults.storageAccount;
    	      this.tags = defaults.tags;
        }

        public Builder adminUserEnabled(@Nullable Output<Boolean> adminUserEnabled) {
            this.adminUserEnabled = adminUserEnabled;
            return this;
        }
        public Builder adminUserEnabled(@Nullable Boolean adminUserEnabled) {
            this.adminUserEnabled = Codegen.ofNullable(adminUserEnabled);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder networkRuleSet(@Nullable Output<NetworkRuleSetArgs> networkRuleSet) {
            this.networkRuleSet = networkRuleSet;
            return this;
        }
        public Builder networkRuleSet(@Nullable NetworkRuleSetArgs networkRuleSet) {
            this.networkRuleSet = Codegen.ofNullable(networkRuleSet);
            return this;
        }
        public Builder policies(@Nullable Output<PoliciesArgs> policies) {
            this.policies = policies;
            return this;
        }
        public Builder policies(@Nullable PoliciesArgs policies) {
            this.policies = Codegen.ofNullable(policies);
            return this;
        }
        public Builder registryName(@Nullable Output<String> registryName) {
            this.registryName = registryName;
            return this;
        }
        public Builder registryName(@Nullable String registryName) {
            this.registryName = Codegen.ofNullable(registryName);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder sku(Output<SkuArgs> sku) {
            this.sku = Objects.requireNonNull(sku);
            return this;
        }
        public Builder sku(SkuArgs sku) {
            this.sku = Output.of(Objects.requireNonNull(sku));
            return this;
        }
        public Builder storageAccount(@Nullable Output<StorageAccountPropertiesArgs> storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }
        public Builder storageAccount(@Nullable StorageAccountPropertiesArgs storageAccount) {
            this.storageAccount = Codegen.ofNullable(storageAccount);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public RegistryArgs build() {
            return new RegistryArgs(adminUserEnabled, location, networkRuleSet, policies, registryName, resourceGroupName, sku, storageAccount, tags);
        }
    }
}
