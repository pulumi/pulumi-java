// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.outputs;

import io.pulumi.azurenative.storage.outputs.EncryptionIdentityResponse;
import io.pulumi.azurenative.storage.outputs.EncryptionServicesResponse;
import io.pulumi.azurenative.storage.outputs.KeyVaultPropertiesResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class EncryptionResponse {
    private final @Nullable EncryptionIdentityResponse encryptionIdentity;
    private final String keySource;
    private final @Nullable KeyVaultPropertiesResponse keyVaultProperties;
    private final @Nullable Boolean requireInfrastructureEncryption;
    private final @Nullable EncryptionServicesResponse services;

    @OutputCustomType.Constructor({"encryptionIdentity","keySource","keyVaultProperties","requireInfrastructureEncryption","services"})
    private EncryptionResponse(
        @Nullable EncryptionIdentityResponse encryptionIdentity,
        String keySource,
        @Nullable KeyVaultPropertiesResponse keyVaultProperties,
        @Nullable Boolean requireInfrastructureEncryption,
        @Nullable EncryptionServicesResponse services) {
        this.encryptionIdentity = encryptionIdentity;
        this.keySource = Objects.requireNonNull(keySource);
        this.keyVaultProperties = keyVaultProperties;
        this.requireInfrastructureEncryption = requireInfrastructureEncryption;
        this.services = services;
    }

    public Optional<EncryptionIdentityResponse> getEncryptionIdentity() {
        return Optional.ofNullable(this.encryptionIdentity);
    }
    public String getKeySource() {
        return this.keySource;
    }
    public Optional<KeyVaultPropertiesResponse> getKeyVaultProperties() {
        return Optional.ofNullable(this.keyVaultProperties);
    }
    public Optional<Boolean> getRequireInfrastructureEncryption() {
        return Optional.ofNullable(this.requireInfrastructureEncryption);
    }
    public Optional<EncryptionServicesResponse> getServices() {
        return Optional.ofNullable(this.services);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable EncryptionIdentityResponse encryptionIdentity;
        private String keySource;
        private @Nullable KeyVaultPropertiesResponse keyVaultProperties;
        private @Nullable Boolean requireInfrastructureEncryption;
        private @Nullable EncryptionServicesResponse services;

        public Builder() {
    	      // Empty
        }

        public Builder(EncryptionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionIdentity = defaults.encryptionIdentity;
    	      this.keySource = defaults.keySource;
    	      this.keyVaultProperties = defaults.keyVaultProperties;
    	      this.requireInfrastructureEncryption = defaults.requireInfrastructureEncryption;
    	      this.services = defaults.services;
        }

        public Builder setEncryptionIdentity(@Nullable EncryptionIdentityResponse encryptionIdentity) {
            this.encryptionIdentity = encryptionIdentity;
            return this;
        }

        public Builder setKeySource(String keySource) {
            this.keySource = Objects.requireNonNull(keySource);
            return this;
        }

        public Builder setKeyVaultProperties(@Nullable KeyVaultPropertiesResponse keyVaultProperties) {
            this.keyVaultProperties = keyVaultProperties;
            return this;
        }

        public Builder setRequireInfrastructureEncryption(@Nullable Boolean requireInfrastructureEncryption) {
            this.requireInfrastructureEncryption = requireInfrastructureEncryption;
            return this;
        }

        public Builder setServices(@Nullable EncryptionServicesResponse services) {
            this.services = services;
            return this;
        }

        public EncryptionResponse build() {
            return new EncryptionResponse(encryptionIdentity, keySource, keyVaultProperties, requireInfrastructureEncryption, services);
        }
    }
}
