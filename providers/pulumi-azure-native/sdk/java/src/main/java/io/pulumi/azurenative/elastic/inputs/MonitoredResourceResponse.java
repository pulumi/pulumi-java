// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.elastic.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties of a resource currently being monitored by the Elastic monitor resource.
 * 
 */
public final class MonitoredResourceResponse extends io.pulumi.resources.InvokeArgs {

    public static final MonitoredResourceResponse Empty = new MonitoredResourceResponse();

    /**
     * The ARM id of the resource.
     * 
     */
    @Import(name="id")
      private final @Nullable String id;

    public Optional<String> getId() {
        return this.id == null ? Optional.empty() : Optional.ofNullable(this.id);
    }

    /**
     * Reason for why the resource is sending logs (or why it is not sending).
     * 
     */
    @Import(name="reasonForLogsStatus")
      private final @Nullable String reasonForLogsStatus;

    public Optional<String> getReasonForLogsStatus() {
        return this.reasonForLogsStatus == null ? Optional.empty() : Optional.ofNullable(this.reasonForLogsStatus);
    }

    /**
     * Flag indicating the status of the resource for sending logs operation to Elastic.
     * 
     */
    @Import(name="sendingLogs")
      private final @Nullable String sendingLogs;

    public Optional<String> getSendingLogs() {
        return this.sendingLogs == null ? Optional.empty() : Optional.ofNullable(this.sendingLogs);
    }

    public MonitoredResourceResponse(
        @Nullable String id,
        @Nullable String reasonForLogsStatus,
        @Nullable String sendingLogs) {
        this.id = id;
        this.reasonForLogsStatus = reasonForLogsStatus;
        this.sendingLogs = sendingLogs;
    }

    private MonitoredResourceResponse() {
        this.id = null;
        this.reasonForLogsStatus = null;
        this.sendingLogs = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String id;
        private @Nullable String reasonForLogsStatus;
        private @Nullable String sendingLogs;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoredResourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.reasonForLogsStatus = defaults.reasonForLogsStatus;
    	      this.sendingLogs = defaults.sendingLogs;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder reasonForLogsStatus(@Nullable String reasonForLogsStatus) {
            this.reasonForLogsStatus = reasonForLogsStatus;
            return this;
        }

        public Builder sendingLogs(@Nullable String sendingLogs) {
            this.sendingLogs = sendingLogs;
            return this;
        }
        public MonitoredResourceResponse build() {
            return new MonitoredResourceResponse(id, reasonForLogsStatus, sendingLogs);
        }
    }
}
