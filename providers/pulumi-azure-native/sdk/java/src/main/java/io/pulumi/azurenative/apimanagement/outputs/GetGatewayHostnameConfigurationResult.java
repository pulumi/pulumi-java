// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetGatewayHostnameConfigurationResult {
    /**
     * Identifier of Certificate entity that will be used for TLS connection establishment
     * 
     */
    private final @Nullable String certificateId;
    /**
     * Hostname value. Supports valid domain name, partial or full wildcard
     * 
     */
    private final @Nullable String hostname;
    /**
     * Specifies if HTTP/2.0 is supported
     * 
     */
    private final @Nullable Boolean http2Enabled;
    /**
     * Resource ID.
     * 
     */
    private final String id;
    /**
     * Resource name.
     * 
     */
    private final String name;
    /**
     * Determines whether gateway requests client certificate
     * 
     */
    private final @Nullable Boolean negotiateClientCertificate;
    /**
     * Specifies if TLS 1.0 is supported
     * 
     */
    private final @Nullable Boolean tls10Enabled;
    /**
     * Specifies if TLS 1.1 is supported
     * 
     */
    private final @Nullable Boolean tls11Enabled;
    /**
     * Resource type for API Management resource.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor
    private GetGatewayHostnameConfigurationResult(
        @OutputCustomType.Parameter("certificateId") @Nullable String certificateId,
        @OutputCustomType.Parameter("hostname") @Nullable String hostname,
        @OutputCustomType.Parameter("http2Enabled") @Nullable Boolean http2Enabled,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("negotiateClientCertificate") @Nullable Boolean negotiateClientCertificate,
        @OutputCustomType.Parameter("tls10Enabled") @Nullable Boolean tls10Enabled,
        @OutputCustomType.Parameter("tls11Enabled") @Nullable Boolean tls11Enabled,
        @OutputCustomType.Parameter("type") String type) {
        this.certificateId = certificateId;
        this.hostname = hostname;
        this.http2Enabled = http2Enabled;
        this.id = id;
        this.name = name;
        this.negotiateClientCertificate = negotiateClientCertificate;
        this.tls10Enabled = tls10Enabled;
        this.tls11Enabled = tls11Enabled;
        this.type = type;
    }

    /**
     * Identifier of Certificate entity that will be used for TLS connection establishment
     * 
    */
    public Optional<String> getCertificateId() {
        return Optional.ofNullable(this.certificateId);
    }
    /**
     * Hostname value. Supports valid domain name, partial or full wildcard
     * 
    */
    public Optional<String> getHostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * Specifies if HTTP/2.0 is supported
     * 
    */
    public Optional<Boolean> getHttp2Enabled() {
        return Optional.ofNullable(this.http2Enabled);
    }
    /**
     * Resource ID.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Resource name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Determines whether gateway requests client certificate
     * 
    */
    public Optional<Boolean> getNegotiateClientCertificate() {
        return Optional.ofNullable(this.negotiateClientCertificate);
    }
    /**
     * Specifies if TLS 1.0 is supported
     * 
    */
    public Optional<Boolean> getTls10Enabled() {
        return Optional.ofNullable(this.tls10Enabled);
    }
    /**
     * Specifies if TLS 1.1 is supported
     * 
    */
    public Optional<Boolean> getTls11Enabled() {
        return Optional.ofNullable(this.tls11Enabled);
    }
    /**
     * Resource type for API Management resource.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewayHostnameConfigurationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String certificateId;
        private @Nullable String hostname;
        private @Nullable Boolean http2Enabled;
        private String id;
        private String name;
        private @Nullable Boolean negotiateClientCertificate;
        private @Nullable Boolean tls10Enabled;
        private @Nullable Boolean tls11Enabled;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGatewayHostnameConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateId = defaults.certificateId;
    	      this.hostname = defaults.hostname;
    	      this.http2Enabled = defaults.http2Enabled;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.negotiateClientCertificate = defaults.negotiateClientCertificate;
    	      this.tls10Enabled = defaults.tls10Enabled;
    	      this.tls11Enabled = defaults.tls11Enabled;
    	      this.type = defaults.type;
        }

        public Builder certificateId(@Nullable String certificateId) {
            this.certificateId = certificateId;
            return this;
        }

        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }

        public Builder http2Enabled(@Nullable Boolean http2Enabled) {
            this.http2Enabled = http2Enabled;
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder negotiateClientCertificate(@Nullable Boolean negotiateClientCertificate) {
            this.negotiateClientCertificate = negotiateClientCertificate;
            return this;
        }

        public Builder tls10Enabled(@Nullable Boolean tls10Enabled) {
            this.tls10Enabled = tls10Enabled;
            return this;
        }

        public Builder tls11Enabled(@Nullable Boolean tls11Enabled) {
            this.tls11Enabled = tls11Enabled;
            return this;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetGatewayHostnameConfigurationResult build() {
            return new GetGatewayHostnameConfigurationResult(certificateId, hostname, http2Enabled, id, name, negotiateClientCertificate, tls10Enabled, tls11Enabled, type);
        }
    }
}
