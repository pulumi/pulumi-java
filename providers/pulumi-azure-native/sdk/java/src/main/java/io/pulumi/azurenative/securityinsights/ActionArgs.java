// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ActionArgs Empty = new ActionArgs();

    /**
     * Action ID
     * 
     */
    @InputImport(name="actionId")
      private final @Nullable Input<String> actionId;

    public Input<String> getActionId() {
        return this.actionId == null ? Input.empty() : this.actionId;
    }

    /**
     * Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.
     * 
     */
    @InputImport(name="logicAppResourceId", required=true)
      private final Input<String> logicAppResourceId;

    public Input<String> getLogicAppResourceId() {
        return this.logicAppResourceId;
    }

    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Alert rule ID
     * 
     */
    @InputImport(name="ruleId", required=true)
      private final Input<String> ruleId;

    public Input<String> getRuleId() {
        return this.ruleId;
    }

    /**
     * Logic App Callback URL for this specific workflow.
     * 
     */
    @InputImport(name="triggerUri", required=true)
      private final Input<String> triggerUri;

    public Input<String> getTriggerUri() {
        return this.triggerUri;
    }

    /**
     * The name of the workspace.
     * 
     */
    @InputImport(name="workspaceName", required=true)
      private final Input<String> workspaceName;

    public Input<String> getWorkspaceName() {
        return this.workspaceName;
    }

    public ActionArgs(
        @Nullable Input<String> actionId,
        Input<String> logicAppResourceId,
        Input<String> resourceGroupName,
        Input<String> ruleId,
        Input<String> triggerUri,
        Input<String> workspaceName) {
        this.actionId = actionId;
        this.logicAppResourceId = Objects.requireNonNull(logicAppResourceId, "expected parameter 'logicAppResourceId' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ruleId = Objects.requireNonNull(ruleId, "expected parameter 'ruleId' to be non-null");
        this.triggerUri = Objects.requireNonNull(triggerUri, "expected parameter 'triggerUri' to be non-null");
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private ActionArgs() {
        this.actionId = Input.empty();
        this.logicAppResourceId = Input.empty();
        this.resourceGroupName = Input.empty();
        this.ruleId = Input.empty();
        this.triggerUri = Input.empty();
        this.workspaceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> actionId;
        private Input<String> logicAppResourceId;
        private Input<String> resourceGroupName;
        private Input<String> ruleId;
        private Input<String> triggerUri;
        private Input<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(ActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionId = defaults.actionId;
    	      this.logicAppResourceId = defaults.logicAppResourceId;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ruleId = defaults.ruleId;
    	      this.triggerUri = defaults.triggerUri;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder setActionId(@Nullable Input<String> actionId) {
            this.actionId = actionId;
            return this;
        }

        public Builder setActionId(@Nullable String actionId) {
            this.actionId = Input.ofNullable(actionId);
            return this;
        }

        public Builder setLogicAppResourceId(Input<String> logicAppResourceId) {
            this.logicAppResourceId = Objects.requireNonNull(logicAppResourceId);
            return this;
        }

        public Builder setLogicAppResourceId(String logicAppResourceId) {
            this.logicAppResourceId = Input.of(Objects.requireNonNull(logicAppResourceId));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRuleId(Input<String> ruleId) {
            this.ruleId = Objects.requireNonNull(ruleId);
            return this;
        }

        public Builder setRuleId(String ruleId) {
            this.ruleId = Input.of(Objects.requireNonNull(ruleId));
            return this;
        }

        public Builder setTriggerUri(Input<String> triggerUri) {
            this.triggerUri = Objects.requireNonNull(triggerUri);
            return this;
        }

        public Builder setTriggerUri(String triggerUri) {
            this.triggerUri = Input.of(Objects.requireNonNull(triggerUri));
            return this;
        }

        public Builder setWorkspaceName(Input<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }

        public Builder setWorkspaceName(String workspaceName) {
            this.workspaceName = Input.of(Objects.requireNonNull(workspaceName));
            return this;
        }
        public ActionArgs build() {
            return new ActionArgs(actionId, logicAppResourceId, resourceGroupName, ruleId, triggerUri, workspaceName);
        }
    }
}
