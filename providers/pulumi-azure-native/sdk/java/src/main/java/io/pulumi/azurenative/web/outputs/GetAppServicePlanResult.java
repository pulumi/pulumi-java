// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.HostingEnvironmentProfileResponse;
import io.pulumi.azurenative.web.outputs.KubeEnvironmentProfileResponse;
import io.pulumi.azurenative.web.outputs.SkuDescriptionResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetAppServicePlanResult {
    private final @Nullable String freeOfferExpirationTime;
    private final String geoRegion;
    private final @Nullable HostingEnvironmentProfileResponse hostingEnvironmentProfile;
    private final @Nullable Boolean hyperV;
    private final String id;
    private final @Nullable Boolean isSpot;
    private final @Nullable Boolean isXenon;
    private final @Nullable String kind;
    private final @Nullable KubeEnvironmentProfileResponse kubeEnvironmentProfile;
    private final String location;
    private final @Nullable Integer maximumElasticWorkerCount;
    private final Integer maximumNumberOfWorkers;
    private final String name;
    private final Integer numberOfSites;
    private final @Nullable Boolean perSiteScaling;
    private final String provisioningState;
    private final @Nullable Boolean reserved;
    private final String resourceGroup;
    private final @Nullable SkuDescriptionResponse sku;
    private final @Nullable String spotExpirationTime;
    private final String status;
    private final String subscription;
    private final @Nullable Map<String,String> tags;
    private final @Nullable Integer targetWorkerCount;
    private final @Nullable Integer targetWorkerSizeId;
    private final String type;
    private final @Nullable String workerTierName;

    @OutputCustomType.Constructor({"freeOfferExpirationTime","geoRegion","hostingEnvironmentProfile","hyperV","id","isSpot","isXenon","kind","kubeEnvironmentProfile","location","maximumElasticWorkerCount","maximumNumberOfWorkers","name","numberOfSites","perSiteScaling","provisioningState","reserved","resourceGroup","sku","spotExpirationTime","status","subscription","tags","targetWorkerCount","targetWorkerSizeId","type","workerTierName"})
    private GetAppServicePlanResult(
        @Nullable String freeOfferExpirationTime,
        String geoRegion,
        @Nullable HostingEnvironmentProfileResponse hostingEnvironmentProfile,
        @Nullable Boolean hyperV,
        String id,
        @Nullable Boolean isSpot,
        @Nullable Boolean isXenon,
        @Nullable String kind,
        @Nullable KubeEnvironmentProfileResponse kubeEnvironmentProfile,
        String location,
        @Nullable Integer maximumElasticWorkerCount,
        Integer maximumNumberOfWorkers,
        String name,
        Integer numberOfSites,
        @Nullable Boolean perSiteScaling,
        String provisioningState,
        @Nullable Boolean reserved,
        String resourceGroup,
        @Nullable SkuDescriptionResponse sku,
        @Nullable String spotExpirationTime,
        String status,
        String subscription,
        @Nullable Map<String,String> tags,
        @Nullable Integer targetWorkerCount,
        @Nullable Integer targetWorkerSizeId,
        String type,
        @Nullable String workerTierName) {
        this.freeOfferExpirationTime = freeOfferExpirationTime;
        this.geoRegion = Objects.requireNonNull(geoRegion);
        this.hostingEnvironmentProfile = hostingEnvironmentProfile;
        this.hyperV = hyperV;
        this.id = Objects.requireNonNull(id);
        this.isSpot = isSpot;
        this.isXenon = isXenon;
        this.kind = kind;
        this.kubeEnvironmentProfile = kubeEnvironmentProfile;
        this.location = Objects.requireNonNull(location);
        this.maximumElasticWorkerCount = maximumElasticWorkerCount;
        this.maximumNumberOfWorkers = Objects.requireNonNull(maximumNumberOfWorkers);
        this.name = Objects.requireNonNull(name);
        this.numberOfSites = Objects.requireNonNull(numberOfSites);
        this.perSiteScaling = perSiteScaling;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.reserved = reserved;
        this.resourceGroup = Objects.requireNonNull(resourceGroup);
        this.sku = sku;
        this.spotExpirationTime = spotExpirationTime;
        this.status = Objects.requireNonNull(status);
        this.subscription = Objects.requireNonNull(subscription);
        this.tags = tags;
        this.targetWorkerCount = targetWorkerCount;
        this.targetWorkerSizeId = targetWorkerSizeId;
        this.type = Objects.requireNonNull(type);
        this.workerTierName = workerTierName;
    }

    public Optional<String> getFreeOfferExpirationTime() {
        return Optional.ofNullable(this.freeOfferExpirationTime);
    }
    public String getGeoRegion() {
        return this.geoRegion;
    }
    public Optional<HostingEnvironmentProfileResponse> getHostingEnvironmentProfile() {
        return Optional.ofNullable(this.hostingEnvironmentProfile);
    }
    public Optional<Boolean> getHyperV() {
        return Optional.ofNullable(this.hyperV);
    }
    public String getId() {
        return this.id;
    }
    public Optional<Boolean> getIsSpot() {
        return Optional.ofNullable(this.isSpot);
    }
    public Optional<Boolean> getIsXenon() {
        return Optional.ofNullable(this.isXenon);
    }
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    public Optional<KubeEnvironmentProfileResponse> getKubeEnvironmentProfile() {
        return Optional.ofNullable(this.kubeEnvironmentProfile);
    }
    public String getLocation() {
        return this.location;
    }
    public Optional<Integer> getMaximumElasticWorkerCount() {
        return Optional.ofNullable(this.maximumElasticWorkerCount);
    }
    public Integer getMaximumNumberOfWorkers() {
        return this.maximumNumberOfWorkers;
    }
    public String getName() {
        return this.name;
    }
    public Integer getNumberOfSites() {
        return this.numberOfSites;
    }
    public Optional<Boolean> getPerSiteScaling() {
        return Optional.ofNullable(this.perSiteScaling);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<Boolean> getReserved() {
        return Optional.ofNullable(this.reserved);
    }
    public String getResourceGroup() {
        return this.resourceGroup;
    }
    public Optional<SkuDescriptionResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public Optional<String> getSpotExpirationTime() {
        return Optional.ofNullable(this.spotExpirationTime);
    }
    public String getStatus() {
        return this.status;
    }
    public String getSubscription() {
        return this.subscription;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<Integer> getTargetWorkerCount() {
        return Optional.ofNullable(this.targetWorkerCount);
    }
    public Optional<Integer> getTargetWorkerSizeId() {
        return Optional.ofNullable(this.targetWorkerSizeId);
    }
    public String getType() {
        return this.type;
    }
    public Optional<String> getWorkerTierName() {
        return Optional.ofNullable(this.workerTierName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppServicePlanResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String freeOfferExpirationTime;
        private String geoRegion;
        private @Nullable HostingEnvironmentProfileResponse hostingEnvironmentProfile;
        private @Nullable Boolean hyperV;
        private String id;
        private @Nullable Boolean isSpot;
        private @Nullable Boolean isXenon;
        private @Nullable String kind;
        private @Nullable KubeEnvironmentProfileResponse kubeEnvironmentProfile;
        private String location;
        private @Nullable Integer maximumElasticWorkerCount;
        private Integer maximumNumberOfWorkers;
        private String name;
        private Integer numberOfSites;
        private @Nullable Boolean perSiteScaling;
        private String provisioningState;
        private @Nullable Boolean reserved;
        private String resourceGroup;
        private @Nullable SkuDescriptionResponse sku;
        private @Nullable String spotExpirationTime;
        private String status;
        private String subscription;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer targetWorkerCount;
        private @Nullable Integer targetWorkerSizeId;
        private String type;
        private @Nullable String workerTierName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAppServicePlanResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.freeOfferExpirationTime = defaults.freeOfferExpirationTime;
    	      this.geoRegion = defaults.geoRegion;
    	      this.hostingEnvironmentProfile = defaults.hostingEnvironmentProfile;
    	      this.hyperV = defaults.hyperV;
    	      this.id = defaults.id;
    	      this.isSpot = defaults.isSpot;
    	      this.isXenon = defaults.isXenon;
    	      this.kind = defaults.kind;
    	      this.kubeEnvironmentProfile = defaults.kubeEnvironmentProfile;
    	      this.location = defaults.location;
    	      this.maximumElasticWorkerCount = defaults.maximumElasticWorkerCount;
    	      this.maximumNumberOfWorkers = defaults.maximumNumberOfWorkers;
    	      this.name = defaults.name;
    	      this.numberOfSites = defaults.numberOfSites;
    	      this.perSiteScaling = defaults.perSiteScaling;
    	      this.provisioningState = defaults.provisioningState;
    	      this.reserved = defaults.reserved;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.sku = defaults.sku;
    	      this.spotExpirationTime = defaults.spotExpirationTime;
    	      this.status = defaults.status;
    	      this.subscription = defaults.subscription;
    	      this.tags = defaults.tags;
    	      this.targetWorkerCount = defaults.targetWorkerCount;
    	      this.targetWorkerSizeId = defaults.targetWorkerSizeId;
    	      this.type = defaults.type;
    	      this.workerTierName = defaults.workerTierName;
        }

        public Builder setFreeOfferExpirationTime(@Nullable String freeOfferExpirationTime) {
            this.freeOfferExpirationTime = freeOfferExpirationTime;
            return this;
        }

        public Builder setGeoRegion(String geoRegion) {
            this.geoRegion = Objects.requireNonNull(geoRegion);
            return this;
        }

        public Builder setHostingEnvironmentProfile(@Nullable HostingEnvironmentProfileResponse hostingEnvironmentProfile) {
            this.hostingEnvironmentProfile = hostingEnvironmentProfile;
            return this;
        }

        public Builder setHyperV(@Nullable Boolean hyperV) {
            this.hyperV = hyperV;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIsSpot(@Nullable Boolean isSpot) {
            this.isSpot = isSpot;
            return this;
        }

        public Builder setIsXenon(@Nullable Boolean isXenon) {
            this.isXenon = isXenon;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKubeEnvironmentProfile(@Nullable KubeEnvironmentProfileResponse kubeEnvironmentProfile) {
            this.kubeEnvironmentProfile = kubeEnvironmentProfile;
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setMaximumElasticWorkerCount(@Nullable Integer maximumElasticWorkerCount) {
            this.maximumElasticWorkerCount = maximumElasticWorkerCount;
            return this;
        }

        public Builder setMaximumNumberOfWorkers(Integer maximumNumberOfWorkers) {
            this.maximumNumberOfWorkers = Objects.requireNonNull(maximumNumberOfWorkers);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNumberOfSites(Integer numberOfSites) {
            this.numberOfSites = Objects.requireNonNull(numberOfSites);
            return this;
        }

        public Builder setPerSiteScaling(@Nullable Boolean perSiteScaling) {
            this.perSiteScaling = perSiteScaling;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setReserved(@Nullable Boolean reserved) {
            this.reserved = reserved;
            return this;
        }

        public Builder setResourceGroup(String resourceGroup) {
            this.resourceGroup = Objects.requireNonNull(resourceGroup);
            return this;
        }

        public Builder setSku(@Nullable SkuDescriptionResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSpotExpirationTime(@Nullable String spotExpirationTime) {
            this.spotExpirationTime = spotExpirationTime;
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setSubscription(String subscription) {
            this.subscription = Objects.requireNonNull(subscription);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTargetWorkerCount(@Nullable Integer targetWorkerCount) {
            this.targetWorkerCount = targetWorkerCount;
            return this;
        }

        public Builder setTargetWorkerSizeId(@Nullable Integer targetWorkerSizeId) {
            this.targetWorkerSizeId = targetWorkerSizeId;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setWorkerTierName(@Nullable String workerTierName) {
            this.workerTierName = workerTierName;
            return this;
        }

        public GetAppServicePlanResult build() {
            return new GetAppServicePlanResult(freeOfferExpirationTime, geoRegion, hostingEnvironmentProfile, hyperV, id, isSpot, isXenon, kind, kubeEnvironmentProfile, location, maximumElasticWorkerCount, maximumNumberOfWorkers, name, numberOfSites, perSiteScaling, provisioningState, reserved, resourceGroup, sku, spotExpirationTime, status, subscription, tags, targetWorkerCount, targetWorkerSizeId, type, workerTierName);
        }
    }
}
