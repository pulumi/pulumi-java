// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.labservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Support contact information and instructions.
 * 
 */
public final class SupportInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final SupportInfoArgs Empty = new SupportInfoArgs();

    /**
     * Support contact email address.
     * 
     */
    @Import(name="email")
      private final @Nullable Output<String> email;

    public Output<String> getEmail() {
        return this.email == null ? Codegen.empty() : this.email;
    }

    /**
     * Support instructions.
     * 
     */
    @Import(name="instructions")
      private final @Nullable Output<String> instructions;

    public Output<String> getInstructions() {
        return this.instructions == null ? Codegen.empty() : this.instructions;
    }

    /**
     * Support contact phone number.
     * 
     */
    @Import(name="phone")
      private final @Nullable Output<String> phone;

    public Output<String> getPhone() {
        return this.phone == null ? Codegen.empty() : this.phone;
    }

    /**
     * Support web address.
     * 
     */
    @Import(name="url")
      private final @Nullable Output<String> url;

    public Output<String> getUrl() {
        return this.url == null ? Codegen.empty() : this.url;
    }

    public SupportInfoArgs(
        @Nullable Output<String> email,
        @Nullable Output<String> instructions,
        @Nullable Output<String> phone,
        @Nullable Output<String> url) {
        this.email = email;
        this.instructions = instructions;
        this.phone = phone;
        this.url = url;
    }

    private SupportInfoArgs() {
        this.email = Codegen.empty();
        this.instructions = Codegen.empty();
        this.phone = Codegen.empty();
        this.url = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SupportInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> email;
        private @Nullable Output<String> instructions;
        private @Nullable Output<String> phone;
        private @Nullable Output<String> url;

        public Builder() {
    	      // Empty
        }

        public Builder(SupportInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.instructions = defaults.instructions;
    	      this.phone = defaults.phone;
    	      this.url = defaults.url;
        }

        public Builder email(@Nullable Output<String> email) {
            this.email = email;
            return this;
        }
        public Builder email(@Nullable String email) {
            this.email = Codegen.ofNullable(email);
            return this;
        }
        public Builder instructions(@Nullable Output<String> instructions) {
            this.instructions = instructions;
            return this;
        }
        public Builder instructions(@Nullable String instructions) {
            this.instructions = Codegen.ofNullable(instructions);
            return this;
        }
        public Builder phone(@Nullable Output<String> phone) {
            this.phone = phone;
            return this;
        }
        public Builder phone(@Nullable String phone) {
            this.phone = Codegen.ofNullable(phone);
            return this;
        }
        public Builder url(@Nullable Output<String> url) {
            this.url = url;
            return this;
        }
        public Builder url(@Nullable String url) {
            this.url = Codegen.ofNullable(url);
            return this;
        }        public SupportInfoArgs build() {
            return new SupportInfoArgs(email, instructions, phone, url);
        }
    }
}
