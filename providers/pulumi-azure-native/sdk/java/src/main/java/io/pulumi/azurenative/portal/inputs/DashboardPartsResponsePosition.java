// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.portal.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The dashboard's part position.
 * 
 */
public final class DashboardPartsResponsePosition extends io.pulumi.resources.InvokeArgs {

    public static final DashboardPartsResponsePosition Empty = new DashboardPartsResponsePosition();

    /**
     * The dashboard's part column span.
     * 
     */
    @Import(name="colSpan", required=true)
      private final Integer colSpan;

    public Integer getColSpan() {
        return this.colSpan;
    }

    /**
     * The dashboard part's metadata.
     * 
     */
    @Import(name="metadata")
      private final @Nullable Map<String,Object> metadata;

    public Map<String,Object> getMetadata() {
        return this.metadata == null ? Map.of() : this.metadata;
    }

    /**
     * The dashboard's part row span.
     * 
     */
    @Import(name="rowSpan", required=true)
      private final Integer rowSpan;

    public Integer getRowSpan() {
        return this.rowSpan;
    }

    /**
     * The dashboard's part x coordinate.
     * 
     */
    @Import(name="x", required=true)
      private final Integer x;

    public Integer getX() {
        return this.x;
    }

    /**
     * The dashboard's part y coordinate.
     * 
     */
    @Import(name="y", required=true)
      private final Integer y;

    public Integer getY() {
        return this.y;
    }

    public DashboardPartsResponsePosition(
        Integer colSpan,
        @Nullable Map<String,Object> metadata,
        Integer rowSpan,
        Integer x,
        Integer y) {
        this.colSpan = Objects.requireNonNull(colSpan, "expected parameter 'colSpan' to be non-null");
        this.metadata = metadata;
        this.rowSpan = Objects.requireNonNull(rowSpan, "expected parameter 'rowSpan' to be non-null");
        this.x = Objects.requireNonNull(x, "expected parameter 'x' to be non-null");
        this.y = Objects.requireNonNull(y, "expected parameter 'y' to be non-null");
    }

    private DashboardPartsResponsePosition() {
        this.colSpan = null;
        this.metadata = Map.of();
        this.rowSpan = null;
        this.x = null;
        this.y = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardPartsResponsePosition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer colSpan;
        private @Nullable Map<String,Object> metadata;
        private Integer rowSpan;
        private Integer x;
        private Integer y;

        public Builder() {
    	      // Empty
        }

        public Builder(DashboardPartsResponsePosition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.colSpan = defaults.colSpan;
    	      this.metadata = defaults.metadata;
    	      this.rowSpan = defaults.rowSpan;
    	      this.x = defaults.x;
    	      this.y = defaults.y;
        }

        public Builder colSpan(Integer colSpan) {
            this.colSpan = Objects.requireNonNull(colSpan);
            return this;
        }
        public Builder metadata(@Nullable Map<String,Object> metadata) {
            this.metadata = metadata;
            return this;
        }
        public Builder rowSpan(Integer rowSpan) {
            this.rowSpan = Objects.requireNonNull(rowSpan);
            return this;
        }
        public Builder x(Integer x) {
            this.x = Objects.requireNonNull(x);
            return this;
        }
        public Builder y(Integer y) {
            this.y = Objects.requireNonNull(y);
            return this;
        }        public DashboardPartsResponsePosition build() {
            return new DashboardPartsResponsePosition(colSpan, metadata, rowSpan, x, y);
        }
    }
}
