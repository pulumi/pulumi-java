// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.dbformysql;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.dbformysql.VirtualNetworkRuleArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A virtual network rule.
API Version: 2017-12-01.

{{% examples %}}
## Example Usage
{{% example %}}
### Create or update a virtual network rule
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var virtualNetworkRule = new AzureNative.DBforMySQL.VirtualNetworkRule("virtualNetworkRule", new AzureNative.DBforMySQL.VirtualNetworkRuleArgs
        {
            IgnoreMissingVnetServiceEndpoint = false,
            ResourceGroupName = "TestGroup",
            ServerName = "vnet-test-svr",
            VirtualNetworkRuleName = "vnet-firewall-rule",
            VirtualNetworkSubnetId = "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet",
        });
    }

}

```

```go
package main

import (
	dbformysql "github.com/pulumi/pulumi-azure-native/sdk/go/azure/dbformysql"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := dbformysql.NewVirtualNetworkRule(ctx, "virtualNetworkRule", &dbformysql.VirtualNetworkRuleArgs{
			IgnoreMissingVnetServiceEndpoint: pulumi.Bool(false),
			ResourceGroupName:                pulumi.String("TestGroup"),
			ServerName:                       pulumi.String("vnet-test-svr"),
			VirtualNetworkRuleName:           pulumi.String("vnet-firewall-rule"),
			VirtualNetworkSubnetId:           pulumi.String("/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const virtualNetworkRule = new azure_native.dbformysql.VirtualNetworkRule("virtualNetworkRule", {
    ignoreMissingVnetServiceEndpoint: false,
    resourceGroupName: "TestGroup",
    serverName: "vnet-test-svr",
    virtualNetworkRuleName: "vnet-firewall-rule",
    virtualNetworkSubnetId: "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

virtual_network_rule = azure_native.dbformysql.VirtualNetworkRule("virtualNetworkRule",
    ignore_missing_vnet_service_endpoint=False,
    resource_group_name="TestGroup",
    server_name="vnet-test-svr",
    virtual_network_rule_name="vnet-firewall-rule",
    virtual_network_subnet_id="/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:dbformysql:VirtualNetworkRule vnet-firewall-rule /subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/TestGroup/providers/Microsoft.DBforMySQL/servers/vnet-test-svr/virtualNetworkRules/vnet-firewall-rule 
```

 */
@ResourceType(type="azure-native:dbformysql:VirtualNetworkRule")
public class VirtualNetworkRule extends io.pulumi.resources.CustomResource {
    /**
     * Create firewall rule before the virtual network has vnet service endpoint enabled.
     */
    @OutputExport(name="ignoreMissingVnetServiceEndpoint", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> ignoreMissingVnetServiceEndpoint;

    /**
     * @return Create firewall rule before the virtual network has vnet service endpoint enabled.
     */
    public Output</* @Nullable */ Boolean> getIgnoreMissingVnetServiceEndpoint() {
        return this.ignoreMissingVnetServiceEndpoint;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Virtual Network Rule State
     */
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return Virtual Network Rule State
     */
    public Output<String> getState() {
        return this.state;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The ARM resource id of the virtual network subnet.
     */
    @OutputExport(name="virtualNetworkSubnetId", type=String.class, parameters={})
    private Output<String> virtualNetworkSubnetId;

    /**
     * @return The ARM resource id of the virtual network subnet.
     */
    public Output<String> getVirtualNetworkSubnetId() {
        return this.virtualNetworkSubnetId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualNetworkRule(String name, VirtualNetworkRuleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:dbformysql:VirtualNetworkRule", name, args == null ? VirtualNetworkRuleArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private VirtualNetworkRule(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:dbformysql:VirtualNetworkRule", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:dbformysql/v20171201:VirtualNetworkRule").build()),
                Input.of(Alias.builder().setType("azure-native:dbformysql/v20171201preview:VirtualNetworkRule").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualNetworkRule get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VirtualNetworkRule(name, id, options);
    }
}
