// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation;

import io.pulumi.azurenative.automation.inputs.ErrorResponseArgs;
import io.pulumi.azurenative.automation.inputs.SUCSchedulePropertiesArgs;
import io.pulumi.azurenative.automation.inputs.SoftwareUpdateConfigurationTasksArgs;
import io.pulumi.azurenative.automation.inputs.UpdateConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SoftwareUpdateConfigurationByNameArgs extends io.pulumi.resources.ResourceArgs {

    public static final SoftwareUpdateConfigurationByNameArgs Empty = new SoftwareUpdateConfigurationByNameArgs();

    /**
     * The name of the automation account.
     * 
     */
    @Import(name="automationAccountName", required=true)
      private final Output<String> automationAccountName;

    public Output<String> getAutomationAccountName() {
        return this.automationAccountName;
    }

    /**
     * Details of provisioning error
     * 
     */
    @Import(name="error")
      private final @Nullable Output<ErrorResponseArgs> error;

    public Output<ErrorResponseArgs> getError() {
        return this.error == null ? Output.empty() : this.error;
    }

    /**
     * Name of an Azure Resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Schedule information for the Software update configuration
     * 
     */
    @Import(name="scheduleInfo", required=true)
      private final Output<SUCSchedulePropertiesArgs> scheduleInfo;

    public Output<SUCSchedulePropertiesArgs> getScheduleInfo() {
        return this.scheduleInfo;
    }

    /**
     * The name of the software update configuration to be created.
     * 
     */
    @Import(name="softwareUpdateConfigurationName")
      private final @Nullable Output<String> softwareUpdateConfigurationName;

    public Output<String> getSoftwareUpdateConfigurationName() {
        return this.softwareUpdateConfigurationName == null ? Output.empty() : this.softwareUpdateConfigurationName;
    }

    /**
     * Tasks information for the Software update configuration.
     * 
     */
    @Import(name="tasks")
      private final @Nullable Output<SoftwareUpdateConfigurationTasksArgs> tasks;

    public Output<SoftwareUpdateConfigurationTasksArgs> getTasks() {
        return this.tasks == null ? Output.empty() : this.tasks;
    }

    /**
     * update specific properties for the Software update configuration
     * 
     */
    @Import(name="updateConfiguration", required=true)
      private final Output<UpdateConfigurationArgs> updateConfiguration;

    public Output<UpdateConfigurationArgs> getUpdateConfiguration() {
        return this.updateConfiguration;
    }

    public SoftwareUpdateConfigurationByNameArgs(
        Output<String> automationAccountName,
        @Nullable Output<ErrorResponseArgs> error,
        Output<String> resourceGroupName,
        Output<SUCSchedulePropertiesArgs> scheduleInfo,
        @Nullable Output<String> softwareUpdateConfigurationName,
        @Nullable Output<SoftwareUpdateConfigurationTasksArgs> tasks,
        Output<UpdateConfigurationArgs> updateConfiguration) {
        this.automationAccountName = Objects.requireNonNull(automationAccountName, "expected parameter 'automationAccountName' to be non-null");
        this.error = error;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.scheduleInfo = Objects.requireNonNull(scheduleInfo, "expected parameter 'scheduleInfo' to be non-null");
        this.softwareUpdateConfigurationName = softwareUpdateConfigurationName;
        this.tasks = tasks;
        this.updateConfiguration = Objects.requireNonNull(updateConfiguration, "expected parameter 'updateConfiguration' to be non-null");
    }

    private SoftwareUpdateConfigurationByNameArgs() {
        this.automationAccountName = Output.empty();
        this.error = Output.empty();
        this.resourceGroupName = Output.empty();
        this.scheduleInfo = Output.empty();
        this.softwareUpdateConfigurationName = Output.empty();
        this.tasks = Output.empty();
        this.updateConfiguration = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SoftwareUpdateConfigurationByNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> automationAccountName;
        private @Nullable Output<ErrorResponseArgs> error;
        private Output<String> resourceGroupName;
        private Output<SUCSchedulePropertiesArgs> scheduleInfo;
        private @Nullable Output<String> softwareUpdateConfigurationName;
        private @Nullable Output<SoftwareUpdateConfigurationTasksArgs> tasks;
        private Output<UpdateConfigurationArgs> updateConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(SoftwareUpdateConfigurationByNameArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automationAccountName = defaults.automationAccountName;
    	      this.error = defaults.error;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.scheduleInfo = defaults.scheduleInfo;
    	      this.softwareUpdateConfigurationName = defaults.softwareUpdateConfigurationName;
    	      this.tasks = defaults.tasks;
    	      this.updateConfiguration = defaults.updateConfiguration;
        }

        public Builder automationAccountName(Output<String> automationAccountName) {
            this.automationAccountName = Objects.requireNonNull(automationAccountName);
            return this;
        }
        public Builder automationAccountName(String automationAccountName) {
            this.automationAccountName = Output.of(Objects.requireNonNull(automationAccountName));
            return this;
        }
        public Builder error(@Nullable Output<ErrorResponseArgs> error) {
            this.error = error;
            return this;
        }
        public Builder error(@Nullable ErrorResponseArgs error) {
            this.error = Output.ofNullable(error);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder scheduleInfo(Output<SUCSchedulePropertiesArgs> scheduleInfo) {
            this.scheduleInfo = Objects.requireNonNull(scheduleInfo);
            return this;
        }
        public Builder scheduleInfo(SUCSchedulePropertiesArgs scheduleInfo) {
            this.scheduleInfo = Output.of(Objects.requireNonNull(scheduleInfo));
            return this;
        }
        public Builder softwareUpdateConfigurationName(@Nullable Output<String> softwareUpdateConfigurationName) {
            this.softwareUpdateConfigurationName = softwareUpdateConfigurationName;
            return this;
        }
        public Builder softwareUpdateConfigurationName(@Nullable String softwareUpdateConfigurationName) {
            this.softwareUpdateConfigurationName = Output.ofNullable(softwareUpdateConfigurationName);
            return this;
        }
        public Builder tasks(@Nullable Output<SoftwareUpdateConfigurationTasksArgs> tasks) {
            this.tasks = tasks;
            return this;
        }
        public Builder tasks(@Nullable SoftwareUpdateConfigurationTasksArgs tasks) {
            this.tasks = Output.ofNullable(tasks);
            return this;
        }
        public Builder updateConfiguration(Output<UpdateConfigurationArgs> updateConfiguration) {
            this.updateConfiguration = Objects.requireNonNull(updateConfiguration);
            return this;
        }
        public Builder updateConfiguration(UpdateConfigurationArgs updateConfiguration) {
            this.updateConfiguration = Output.of(Objects.requireNonNull(updateConfiguration));
            return this;
        }        public SoftwareUpdateConfigurationByNameArgs build() {
            return new SoftwareUpdateConfigurationByNameArgs(automationAccountName, error, resourceGroupName, scheduleInfo, softwareUpdateConfigurationName, tasks, updateConfiguration);
        }
    }
}
