// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GitHubActionCodeConfigurationResponse {
    private final @Nullable String runtimeStack;
    private final @Nullable String runtimeVersion;

    @OutputCustomType.Constructor({"runtimeStack","runtimeVersion"})
    private GitHubActionCodeConfigurationResponse(
        @Nullable String runtimeStack,
        @Nullable String runtimeVersion) {
        this.runtimeStack = runtimeStack;
        this.runtimeVersion = runtimeVersion;
    }

    public Optional<String> getRuntimeStack() {
        return Optional.ofNullable(this.runtimeStack);
    }
    public Optional<String> getRuntimeVersion() {
        return Optional.ofNullable(this.runtimeVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitHubActionCodeConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String runtimeStack;
        private @Nullable String runtimeVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(GitHubActionCodeConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.runtimeStack = defaults.runtimeStack;
    	      this.runtimeVersion = defaults.runtimeVersion;
        }

        public Builder setRuntimeStack(@Nullable String runtimeStack) {
            this.runtimeStack = runtimeStack;
            return this;
        }

        public Builder setRuntimeVersion(@Nullable String runtimeVersion) {
            this.runtimeVersion = runtimeVersion;
            return this;
        }

        public GitHubActionCodeConfigurationResponse build() {
            return new GitHubActionCodeConfigurationResponse(runtimeStack, runtimeVersion);
        }
    }
}
