// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.inputs;

import io.pulumi.azurenative.web.inputs.GitHubActionCodeConfigurationArgs;
import io.pulumi.azurenative.web.inputs.GitHubActionContainerConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GitHubActionConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final GitHubActionConfigurationArgs Empty = new GitHubActionConfigurationArgs();

    @InputImport(name="codeConfiguration")
    private final @Nullable Input<GitHubActionCodeConfigurationArgs> codeConfiguration;

    public Input<GitHubActionCodeConfigurationArgs> getCodeConfiguration() {
        return this.codeConfiguration == null ? Input.empty() : this.codeConfiguration;
    }

    @InputImport(name="containerConfiguration")
    private final @Nullable Input<GitHubActionContainerConfigurationArgs> containerConfiguration;

    public Input<GitHubActionContainerConfigurationArgs> getContainerConfiguration() {
        return this.containerConfiguration == null ? Input.empty() : this.containerConfiguration;
    }

    @InputImport(name="generateWorkflowFile")
    private final @Nullable Input<Boolean> generateWorkflowFile;

    public Input<Boolean> getGenerateWorkflowFile() {
        return this.generateWorkflowFile == null ? Input.empty() : this.generateWorkflowFile;
    }

    @InputImport(name="isLinux")
    private final @Nullable Input<Boolean> isLinux;

    public Input<Boolean> getIsLinux() {
        return this.isLinux == null ? Input.empty() : this.isLinux;
    }

    public GitHubActionConfigurationArgs(
        @Nullable Input<GitHubActionCodeConfigurationArgs> codeConfiguration,
        @Nullable Input<GitHubActionContainerConfigurationArgs> containerConfiguration,
        @Nullable Input<Boolean> generateWorkflowFile,
        @Nullable Input<Boolean> isLinux) {
        this.codeConfiguration = codeConfiguration;
        this.containerConfiguration = containerConfiguration;
        this.generateWorkflowFile = generateWorkflowFile;
        this.isLinux = isLinux;
    }

    private GitHubActionConfigurationArgs() {
        this.codeConfiguration = Input.empty();
        this.containerConfiguration = Input.empty();
        this.generateWorkflowFile = Input.empty();
        this.isLinux = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitHubActionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GitHubActionCodeConfigurationArgs> codeConfiguration;
        private @Nullable Input<GitHubActionContainerConfigurationArgs> containerConfiguration;
        private @Nullable Input<Boolean> generateWorkflowFile;
        private @Nullable Input<Boolean> isLinux;

        public Builder() {
    	      // Empty
        }

        public Builder(GitHubActionConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.codeConfiguration = defaults.codeConfiguration;
    	      this.containerConfiguration = defaults.containerConfiguration;
    	      this.generateWorkflowFile = defaults.generateWorkflowFile;
    	      this.isLinux = defaults.isLinux;
        }

        public Builder setCodeConfiguration(@Nullable Input<GitHubActionCodeConfigurationArgs> codeConfiguration) {
            this.codeConfiguration = codeConfiguration;
            return this;
        }

        public Builder setCodeConfiguration(@Nullable GitHubActionCodeConfigurationArgs codeConfiguration) {
            this.codeConfiguration = Input.ofNullable(codeConfiguration);
            return this;
        }

        public Builder setContainerConfiguration(@Nullable Input<GitHubActionContainerConfigurationArgs> containerConfiguration) {
            this.containerConfiguration = containerConfiguration;
            return this;
        }

        public Builder setContainerConfiguration(@Nullable GitHubActionContainerConfigurationArgs containerConfiguration) {
            this.containerConfiguration = Input.ofNullable(containerConfiguration);
            return this;
        }

        public Builder setGenerateWorkflowFile(@Nullable Input<Boolean> generateWorkflowFile) {
            this.generateWorkflowFile = generateWorkflowFile;
            return this;
        }

        public Builder setGenerateWorkflowFile(@Nullable Boolean generateWorkflowFile) {
            this.generateWorkflowFile = Input.ofNullable(generateWorkflowFile);
            return this;
        }

        public Builder setIsLinux(@Nullable Input<Boolean> isLinux) {
            this.isLinux = isLinux;
            return this;
        }

        public Builder setIsLinux(@Nullable Boolean isLinux) {
            this.isLinux = Input.ofNullable(isLinux);
            return this;
        }

        public GitHubActionConfigurationArgs build() {
            return new GitHubActionConfigurationArgs(codeConfiguration, containerConfiguration, generateWorkflowFile, isLinux);
        }
    }
}
