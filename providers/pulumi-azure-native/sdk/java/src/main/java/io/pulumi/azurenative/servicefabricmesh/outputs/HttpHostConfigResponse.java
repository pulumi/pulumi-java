// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.outputs;

import io.pulumi.azurenative.servicefabricmesh.outputs.HttpRouteConfigResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class HttpHostConfigResponse {
    /**
     * http hostname config name.
     * 
     */
    private final String name;
    /**
     * Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases.
     * 
     */
    private final List<HttpRouteConfigResponse> routes;

    @OutputCustomType.Constructor
    private HttpHostConfigResponse(
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("routes") List<HttpRouteConfigResponse> routes) {
        this.name = name;
        this.routes = routes;
    }

    /**
     * http hostname config name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases.
     * 
    */
    public List<HttpRouteConfigResponse> getRoutes() {
        return this.routes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpHostConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private List<HttpRouteConfigResponse> routes;

        public Builder() {
    	      // Empty
        }

        public Builder(HttpHostConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.routes = defaults.routes;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder routes(List<HttpRouteConfigResponse> routes) {
            this.routes = Objects.requireNonNull(routes);
            return this;
        }
        public HttpHostConfigResponse build() {
            return new HttpHostConfigResponse(name, routes);
        }
    }
}
