// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class KeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final KeyArgs Empty = new KeyArgs();

    /**
     * Used to activate the workspace after a customer managed key is provided.
     * 
     */
    @Import(name="isActiveCMK")
      private final @Nullable Output<Boolean> isActiveCMK;

    public Output<Boolean> getIsActiveCMK() {
        return this.isActiveCMK == null ? Output.empty() : this.isActiveCMK;
    }

    /**
     * The name of the workspace key
     * 
     */
    @Import(name="keyName")
      private final @Nullable Output<String> keyName;

    public Output<String> getKeyName() {
        return this.keyName == null ? Output.empty() : this.keyName;
    }

    /**
     * The Key Vault Url of the workspace key.
     * 
     */
    @Import(name="keyVaultUrl")
      private final @Nullable Output<String> keyVaultUrl;

    public Output<String> getKeyVaultUrl() {
        return this.keyVaultUrl == null ? Output.empty() : this.keyVaultUrl;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the workspace
     * 
     */
    @Import(name="workspaceName", required=true)
      private final Output<String> workspaceName;

    public Output<String> getWorkspaceName() {
        return this.workspaceName;
    }

    public KeyArgs(
        @Nullable Output<Boolean> isActiveCMK,
        @Nullable Output<String> keyName,
        @Nullable Output<String> keyVaultUrl,
        Output<String> resourceGroupName,
        Output<String> workspaceName) {
        this.isActiveCMK = isActiveCMK;
        this.keyName = keyName;
        this.keyVaultUrl = keyVaultUrl;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private KeyArgs() {
        this.isActiveCMK = Output.empty();
        this.keyName = Output.empty();
        this.keyVaultUrl = Output.empty();
        this.resourceGroupName = Output.empty();
        this.workspaceName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> isActiveCMK;
        private @Nullable Output<String> keyName;
        private @Nullable Output<String> keyVaultUrl;
        private Output<String> resourceGroupName;
        private Output<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(KeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isActiveCMK = defaults.isActiveCMK;
    	      this.keyName = defaults.keyName;
    	      this.keyVaultUrl = defaults.keyVaultUrl;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder isActiveCMK(@Nullable Output<Boolean> isActiveCMK) {
            this.isActiveCMK = isActiveCMK;
            return this;
        }
        public Builder isActiveCMK(@Nullable Boolean isActiveCMK) {
            this.isActiveCMK = Output.ofNullable(isActiveCMK);
            return this;
        }
        public Builder keyName(@Nullable Output<String> keyName) {
            this.keyName = keyName;
            return this;
        }
        public Builder keyName(@Nullable String keyName) {
            this.keyName = Output.ofNullable(keyName);
            return this;
        }
        public Builder keyVaultUrl(@Nullable Output<String> keyVaultUrl) {
            this.keyVaultUrl = keyVaultUrl;
            return this;
        }
        public Builder keyVaultUrl(@Nullable String keyVaultUrl) {
            this.keyVaultUrl = Output.ofNullable(keyVaultUrl);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder workspaceName(Output<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }
        public Builder workspaceName(String workspaceName) {
            this.workspaceName = Output.of(Objects.requireNonNull(workspaceName));
            return this;
        }        public KeyArgs build() {
            return new KeyArgs(isActiveCMK, keyName, keyVaultUrl, resourceGroupName, workspaceName);
        }
    }
}
