// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.azurenative.media.inputs.CencDrmConfigurationArgs;
import io.pulumi.azurenative.media.inputs.EnabledProtocolsArgs;
import io.pulumi.azurenative.media.inputs.StreamingPolicyContentKeysArgs;
import io.pulumi.azurenative.media.inputs.TrackSelectionArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Class for envelope encryption scheme
 * 
 */
public final class CommonEncryptionCencArgs extends io.pulumi.resources.ResourceArgs {

    public static final CommonEncryptionCencArgs Empty = new CommonEncryptionCencArgs();

    /**
     * Representing which tracks should not be encrypted
     * 
     */
    @InputImport(name="clearTracks")
      private final @Nullable Output<List<TrackSelectionArgs>> clearTracks;

    public Output<List<TrackSelectionArgs>> getClearTracks() {
        return this.clearTracks == null ? Output.empty() : this.clearTracks;
    }

    /**
     * Representing default content key for each encryption scheme and separate content keys for specific tracks
     * 
     */
    @InputImport(name="contentKeys")
      private final @Nullable Output<StreamingPolicyContentKeysArgs> contentKeys;

    public Output<StreamingPolicyContentKeysArgs> getContentKeys() {
        return this.contentKeys == null ? Output.empty() : this.contentKeys;
    }

    /**
     * Configuration of DRMs for CommonEncryptionCenc encryption scheme
     * 
     */
    @InputImport(name="drm")
      private final @Nullable Output<CencDrmConfigurationArgs> drm;

    public Output<CencDrmConfigurationArgs> getDrm() {
        return this.drm == null ? Output.empty() : this.drm;
    }

    /**
     * Representing supported protocols
     * 
     */
    @InputImport(name="enabledProtocols")
      private final @Nullable Output<EnabledProtocolsArgs> enabledProtocols;

    public Output<EnabledProtocolsArgs> getEnabledProtocols() {
        return this.enabledProtocols == null ? Output.empty() : this.enabledProtocols;
    }

    public CommonEncryptionCencArgs(
        @Nullable Output<List<TrackSelectionArgs>> clearTracks,
        @Nullable Output<StreamingPolicyContentKeysArgs> contentKeys,
        @Nullable Output<CencDrmConfigurationArgs> drm,
        @Nullable Output<EnabledProtocolsArgs> enabledProtocols) {
        this.clearTracks = clearTracks;
        this.contentKeys = contentKeys;
        this.drm = drm;
        this.enabledProtocols = enabledProtocols;
    }

    private CommonEncryptionCencArgs() {
        this.clearTracks = Output.empty();
        this.contentKeys = Output.empty();
        this.drm = Output.empty();
        this.enabledProtocols = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CommonEncryptionCencArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<TrackSelectionArgs>> clearTracks;
        private @Nullable Output<StreamingPolicyContentKeysArgs> contentKeys;
        private @Nullable Output<CencDrmConfigurationArgs> drm;
        private @Nullable Output<EnabledProtocolsArgs> enabledProtocols;

        public Builder() {
    	      // Empty
        }

        public Builder(CommonEncryptionCencArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clearTracks = defaults.clearTracks;
    	      this.contentKeys = defaults.contentKeys;
    	      this.drm = defaults.drm;
    	      this.enabledProtocols = defaults.enabledProtocols;
        }

        public Builder clearTracks(@Nullable Output<List<TrackSelectionArgs>> clearTracks) {
            this.clearTracks = clearTracks;
            return this;
        }

        public Builder clearTracks(@Nullable List<TrackSelectionArgs> clearTracks) {
            this.clearTracks = Output.ofNullable(clearTracks);
            return this;
        }

        public Builder contentKeys(@Nullable Output<StreamingPolicyContentKeysArgs> contentKeys) {
            this.contentKeys = contentKeys;
            return this;
        }

        public Builder contentKeys(@Nullable StreamingPolicyContentKeysArgs contentKeys) {
            this.contentKeys = Output.ofNullable(contentKeys);
            return this;
        }

        public Builder drm(@Nullable Output<CencDrmConfigurationArgs> drm) {
            this.drm = drm;
            return this;
        }

        public Builder drm(@Nullable CencDrmConfigurationArgs drm) {
            this.drm = Output.ofNullable(drm);
            return this;
        }

        public Builder enabledProtocols(@Nullable Output<EnabledProtocolsArgs> enabledProtocols) {
            this.enabledProtocols = enabledProtocols;
            return this;
        }

        public Builder enabledProtocols(@Nullable EnabledProtocolsArgs enabledProtocols) {
            this.enabledProtocols = Output.ofNullable(enabledProtocols);
            return this;
        }
        public CommonEncryptionCencArgs build() {
            return new CommonEncryptionCencArgs(clearTracks, contentKeys, drm, enabledProtocols);
        }
    }
}
