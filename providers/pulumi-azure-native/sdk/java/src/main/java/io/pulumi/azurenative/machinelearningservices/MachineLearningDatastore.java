// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.machinelearningservices.MachineLearningDatastoreArgs;
import io.pulumi.azurenative.machinelearningservices.outputs.DatastoreResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.IdentityResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.SkuResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Machine Learning datastore object wrapped into ARM resource envelope.
API Version: 2020-05-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create ADLS  Datastore
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var machineLearningDatastore = new AzureNative.MachineLearningServices.MachineLearningDatastore("machineLearningDatastore", new AzureNative.MachineLearningServices.MachineLearningDatastoreArgs
        {
            ClientId = "233d7008-b157-4354-88d1-ba191f06a900",
            ClientSecret = "vdvgdvdvdv",
            DataStoreType = "adls",
            DatastoreName = "adlsDatastore",
            ResourceGroupName = "acjain-mleastUS2",
            StoreName = "stanley",
            TenantId = "72f988bf-86f1-41af-91ab-2d7cd011db47",
            WorkspaceName = "acjain-mleastUS2",
        });
    }

}

```

```go
package main

import (
	machinelearningservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/machinelearningservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := machinelearningservices.NewMachineLearningDatastore(ctx, "machineLearningDatastore", &machinelearningservices.MachineLearningDatastoreArgs{
			ClientId:          pulumi.String("233d7008-b157-4354-88d1-ba191f06a900"),
			ClientSecret:      pulumi.String("vdvgdvdvdv"),
			DataStoreType:     pulumi.String("adls"),
			DatastoreName:     pulumi.String("adlsDatastore"),
			ResourceGroupName: pulumi.String("acjain-mleastUS2"),
			StoreName:         pulumi.String("stanley"),
			TenantId:          pulumi.String("72f988bf-86f1-41af-91ab-2d7cd011db47"),
			WorkspaceName:     pulumi.String("acjain-mleastUS2"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const machineLearningDatastore = new azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore", {
    clientId: "233d7008-b157-4354-88d1-ba191f06a900",
    clientSecret: "vdvgdvdvdv",
    dataStoreType: "adls",
    datastoreName: "adlsDatastore",
    resourceGroupName: "acjain-mleastUS2",
    storeName: "stanley",
    tenantId: "72f988bf-86f1-41af-91ab-2d7cd011db47",
    workspaceName: "acjain-mleastUS2",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

machine_learning_datastore = azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore",
    client_id="233d7008-b157-4354-88d1-ba191f06a900",
    client_secret="vdvgdvdvdv",
    data_store_type="adls",
    datastore_name="adlsDatastore",
    resource_group_name="acjain-mleastUS2",
    store_name="stanley",
    tenant_id="72f988bf-86f1-41af-91ab-2d7cd011db47",
    workspace_name="acjain-mleastUS2")

```

{{% /example %}}
{{% example %}}
### Create ADLS Gen2 Datastore
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var machineLearningDatastore = new AzureNative.MachineLearningServices.MachineLearningDatastore("machineLearningDatastore", new AzureNative.MachineLearningServices.MachineLearningDatastoreArgs
        {
            AccountName = "nicksadlsgen2storage",
            ClientId = "233d7008-b157-4354-88d1-ba191f06a900",
            ClientSecret = "vdegbvedgeg",
            DataStoreType = "adls-gen2",
            DatastoreName = "adlsgen2Datastore",
            FileSystem = "testfs1",
            ResourceGroupName = "acjain-mleastUS2",
            TenantId = "72f988bf-86f1-41af-91ab-2d7cd011db47",
            WorkspaceName = "acjain-mleastUS2",
        });
    }

}

```

```go
package main

import (
	machinelearningservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/machinelearningservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := machinelearningservices.NewMachineLearningDatastore(ctx, "machineLearningDatastore", &machinelearningservices.MachineLearningDatastoreArgs{
			AccountName:       pulumi.String("nicksadlsgen2storage"),
			ClientId:          pulumi.String("233d7008-b157-4354-88d1-ba191f06a900"),
			ClientSecret:      pulumi.String("vdegbvedgeg"),
			DataStoreType:     pulumi.String("adls-gen2"),
			DatastoreName:     pulumi.String("adlsgen2Datastore"),
			FileSystem:        pulumi.String("testfs1"),
			ResourceGroupName: pulumi.String("acjain-mleastUS2"),
			TenantId:          pulumi.String("72f988bf-86f1-41af-91ab-2d7cd011db47"),
			WorkspaceName:     pulumi.String("acjain-mleastUS2"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const machineLearningDatastore = new azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore", {
    accountName: "nicksadlsgen2storage",
    clientId: "233d7008-b157-4354-88d1-ba191f06a900",
    clientSecret: "vdegbvedgeg",
    dataStoreType: "adls-gen2",
    datastoreName: "adlsgen2Datastore",
    fileSystem: "testfs1",
    resourceGroupName: "acjain-mleastUS2",
    tenantId: "72f988bf-86f1-41af-91ab-2d7cd011db47",
    workspaceName: "acjain-mleastUS2",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

machine_learning_datastore = azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore",
    account_name="nicksadlsgen2storage",
    client_id="233d7008-b157-4354-88d1-ba191f06a900",
    client_secret="vdegbvedgeg",
    data_store_type="adls-gen2",
    datastore_name="adlsgen2Datastore",
    file_system="testfs1",
    resource_group_name="acjain-mleastUS2",
    tenant_id="72f988bf-86f1-41af-91ab-2d7cd011db47",
    workspace_name="acjain-mleastUS2")

```

{{% /example %}}
{{% example %}}
### Create Blob Datastore
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var machineLearningDatastore = new AzureNative.MachineLearningServices.MachineLearningDatastore("machineLearningDatastore", new AzureNative.MachineLearningServices.MachineLearningDatastoreArgs
        {
            AccountKey = "wddrfewfewsgewgrrwegwreg",
            AccountName = "acjainmleastus9484093746",
            ContainerName = "azureml-blobstore-5da947c5-53aa-41a5-bb2b-074074e73b7",
            DataStoreType = "blob",
            DatastoreName = "blobDatastore",
            ResourceGroupName = "acjain-mleastUS2",
            WorkspaceName = "acjain-mleastUS2",
        });
    }

}

```

```go
package main

import (
	machinelearningservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/machinelearningservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := machinelearningservices.NewMachineLearningDatastore(ctx, "machineLearningDatastore", &machinelearningservices.MachineLearningDatastoreArgs{
			AccountKey:        pulumi.String("wddrfewfewsgewgrrwegwreg"),
			AccountName:       pulumi.String("acjainmleastus9484093746"),
			ContainerName:     pulumi.String("azureml-blobstore-5da947c5-53aa-41a5-bb2b-074074e73b7"),
			DataStoreType:     pulumi.String("blob"),
			DatastoreName:     pulumi.String("blobDatastore"),
			ResourceGroupName: pulumi.String("acjain-mleastUS2"),
			WorkspaceName:     pulumi.String("acjain-mleastUS2"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const machineLearningDatastore = new azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore", {
    accountKey: "wddrfewfewsgewgrrwegwreg",
    accountName: "acjainmleastus9484093746",
    containerName: "azureml-blobstore-5da947c5-53aa-41a5-bb2b-074074e73b7",
    dataStoreType: "blob",
    datastoreName: "blobDatastore",
    resourceGroupName: "acjain-mleastUS2",
    workspaceName: "acjain-mleastUS2",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

machine_learning_datastore = azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore",
    account_key="wddrfewfewsgewgrrwegwreg",
    account_name="acjainmleastus9484093746",
    container_name="azureml-blobstore-5da947c5-53aa-41a5-bb2b-074074e73b7",
    data_store_type="blob",
    datastore_name="blobDatastore",
    resource_group_name="acjain-mleastUS2",
    workspace_name="acjain-mleastUS2")

```

{{% /example %}}
{{% example %}}
### Create Databricks File System Datastore
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var machineLearningDatastore = new AzureNative.MachineLearningServices.MachineLearningDatastore("machineLearningDatastore", new AzureNative.MachineLearningServices.MachineLearningDatastoreArgs
        {
            DataStoreType = "dbfs",
            DatastoreName = "blobDatastore",
            ResourceGroupName = "acjain-mleastUS2",
            WorkspaceName = "acjain-mleastUS2",
        });
    }

}

```

```go
package main

import (
	machinelearningservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/machinelearningservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := machinelearningservices.NewMachineLearningDatastore(ctx, "machineLearningDatastore", &machinelearningservices.MachineLearningDatastoreArgs{
			DataStoreType:     pulumi.String("dbfs"),
			DatastoreName:     pulumi.String("blobDatastore"),
			ResourceGroupName: pulumi.String("acjain-mleastUS2"),
			WorkspaceName:     pulumi.String("acjain-mleastUS2"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const machineLearningDatastore = new azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore", {
    dataStoreType: "dbfs",
    datastoreName: "blobDatastore",
    resourceGroupName: "acjain-mleastUS2",
    workspaceName: "acjain-mleastUS2",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

machine_learning_datastore = azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore",
    data_store_type="dbfs",
    datastore_name="blobDatastore",
    resource_group_name="acjain-mleastUS2",
    workspace_name="acjain-mleastUS2")

```

{{% /example %}}
{{% example %}}
### Create File Datastore
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var machineLearningDatastore = new AzureNative.MachineLearningServices.MachineLearningDatastore("machineLearningDatastore", new AzureNative.MachineLearningServices.MachineLearningDatastoreArgs
        {
            AccountKey = "wddrfewfewsgewgrrwegwreg",
            AccountName = "acjainmleastus9484093746",
            DataStoreType = "file",
            DatastoreName = "fileDatastore",
            ResourceGroupName = "acjain-mleastUS2",
            ShareName = "azureml-filestore-5da947c5-53aa-41a5-bb2b-074074e73b76",
            WorkspaceName = "acjain-mleastUS2",
        });
    }

}

```

```go
package main

import (
	machinelearningservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/machinelearningservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := machinelearningservices.NewMachineLearningDatastore(ctx, "machineLearningDatastore", &machinelearningservices.MachineLearningDatastoreArgs{
			AccountKey:        pulumi.String("wddrfewfewsgewgrrwegwreg"),
			AccountName:       pulumi.String("acjainmleastus9484093746"),
			DataStoreType:     pulumi.String("file"),
			DatastoreName:     pulumi.String("fileDatastore"),
			ResourceGroupName: pulumi.String("acjain-mleastUS2"),
			ShareName:         pulumi.String("azureml-filestore-5da947c5-53aa-41a5-bb2b-074074e73b76"),
			WorkspaceName:     pulumi.String("acjain-mleastUS2"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const machineLearningDatastore = new azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore", {
    accountKey: "wddrfewfewsgewgrrwegwreg",
    accountName: "acjainmleastus9484093746",
    dataStoreType: "file",
    datastoreName: "fileDatastore",
    resourceGroupName: "acjain-mleastUS2",
    shareName: "azureml-filestore-5da947c5-53aa-41a5-bb2b-074074e73b76",
    workspaceName: "acjain-mleastUS2",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

machine_learning_datastore = azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore",
    account_key="wddrfewfewsgewgrrwegwreg",
    account_name="acjainmleastus9484093746",
    data_store_type="file",
    datastore_name="fileDatastore",
    resource_group_name="acjain-mleastUS2",
    share_name="azureml-filestore-5da947c5-53aa-41a5-bb2b-074074e73b76",
    workspace_name="acjain-mleastUS2")

```

{{% /example %}}
{{% example %}}
### Create MySQL Datastore
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var machineLearningDatastore = new AzureNative.MachineLearningServices.MachineLearningDatastore("machineLearningDatastore", new AzureNative.MachineLearningServices.MachineLearningDatastoreArgs
        {
            DataStoreType = "mysqldb",
            DatabaseName = "dataset",
            DatastoreName = "mySqlDatastore",
            Password = "<password>",
            ResourceGroupName = "acjain-mleastUS2",
            ServerName = "dataset-mysql-srv",
            UserId = "demo_user@dataset-mysql-srv",
            WorkspaceName = "acjain-mleastUS2",
        });
    }

}

```

```go
package main

import (
	machinelearningservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/machinelearningservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := machinelearningservices.NewMachineLearningDatastore(ctx, "machineLearningDatastore", &machinelearningservices.MachineLearningDatastoreArgs{
			DataStoreType:     pulumi.String("mysqldb"),
			DatabaseName:      pulumi.String("dataset"),
			DatastoreName:     pulumi.String("mySqlDatastore"),
			Password:          pulumi.String("<password>"),
			ResourceGroupName: pulumi.String("acjain-mleastUS2"),
			ServerName:        pulumi.String("dataset-mysql-srv"),
			UserId:            pulumi.String("demo_user@dataset-mysql-srv"),
			WorkspaceName:     pulumi.String("acjain-mleastUS2"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const machineLearningDatastore = new azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore", {
    dataStoreType: "mysqldb",
    databaseName: "dataset",
    datastoreName: "mySqlDatastore",
    password: "<password>",
    resourceGroupName: "acjain-mleastUS2",
    serverName: "dataset-mysql-srv",
    userId: "demo_user@dataset-mysql-srv",
    workspaceName: "acjain-mleastUS2",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

machine_learning_datastore = azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore",
    data_store_type="mysqldb",
    database_name="dataset",
    datastore_name="mySqlDatastore",
    password="<password>",
    resource_group_name="acjain-mleastUS2",
    server_name="dataset-mysql-srv",
    user_id="demo_user@dataset-mysql-srv",
    workspace_name="acjain-mleastUS2")

```

{{% /example %}}
{{% example %}}
### Create PostgreSQL Datastore
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var machineLearningDatastore = new AzureNative.MachineLearningServices.MachineLearningDatastore("machineLearningDatastore", new AzureNative.MachineLearningServices.MachineLearningDatastoreArgs
        {
            DataStoreType = "psqldb",
            DatabaseName = "dataset",
            DatastoreName = "postgreSqlDatastore",
            Password = "<password>",
            ResourceGroupName = "acjain-mleastUS2",
            ServerName = "dataset-pgsql-srv",
            UserId = "demo_user@dataset-pgsql-srv",
            WorkspaceName = "acjain-mleastUS2",
        });
    }

}

```

```go
package main

import (
	machinelearningservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/machinelearningservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := machinelearningservices.NewMachineLearningDatastore(ctx, "machineLearningDatastore", &machinelearningservices.MachineLearningDatastoreArgs{
			DataStoreType:     pulumi.String("psqldb"),
			DatabaseName:      pulumi.String("dataset"),
			DatastoreName:     pulumi.String("postgreSqlDatastore"),
			Password:          pulumi.String("<password>"),
			ResourceGroupName: pulumi.String("acjain-mleastUS2"),
			ServerName:        pulumi.String("dataset-pgsql-srv"),
			UserId:            pulumi.String("demo_user@dataset-pgsql-srv"),
			WorkspaceName:     pulumi.String("acjain-mleastUS2"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const machineLearningDatastore = new azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore", {
    dataStoreType: "psqldb",
    databaseName: "dataset",
    datastoreName: "postgreSqlDatastore",
    password: "<password>",
    resourceGroupName: "acjain-mleastUS2",
    serverName: "dataset-pgsql-srv",
    userId: "demo_user@dataset-pgsql-srv",
    workspaceName: "acjain-mleastUS2",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

machine_learning_datastore = azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore",
    data_store_type="psqldb",
    database_name="dataset",
    datastore_name="postgreSqlDatastore",
    password="<password>",
    resource_group_name="acjain-mleastUS2",
    server_name="dataset-pgsql-srv",
    user_id="demo_user@dataset-pgsql-srv",
    workspace_name="acjain-mleastUS2")

```

{{% /example %}}
{{% example %}}
### Create SQL Datastore
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var machineLearningDatastore = new AzureNative.MachineLearningServices.MachineLearningDatastore("machineLearningDatastore", new AzureNative.MachineLearningServices.MachineLearningDatastoreArgs
        {
            DataStoreType = "sqldb",
            DatabaseName = "dataset",
            DatastoreName = "sqlDatastore",
            Password = "<password>",
            ResourceGroupName = "acjain-mleastUS2",
            ServerName = "dataset-azsql-srv",
            UserName = "demo_user",
            WorkspaceName = "acjain-mleastUS2",
        });
    }

}

```

```go
package main

import (
	machinelearningservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/machinelearningservices"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := machinelearningservices.NewMachineLearningDatastore(ctx, "machineLearningDatastore", &machinelearningservices.MachineLearningDatastoreArgs{
			DataStoreType:     pulumi.String("sqldb"),
			DatabaseName:      pulumi.String("dataset"),
			DatastoreName:     pulumi.String("sqlDatastore"),
			Password:          pulumi.String("<password>"),
			ResourceGroupName: pulumi.String("acjain-mleastUS2"),
			ServerName:        pulumi.String("dataset-azsql-srv"),
			UserName:          pulumi.String("demo_user"),
			WorkspaceName:     pulumi.String("acjain-mleastUS2"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const machineLearningDatastore = new azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore", {
    dataStoreType: "sqldb",
    databaseName: "dataset",
    datastoreName: "sqlDatastore",
    password: "<password>",
    resourceGroupName: "acjain-mleastUS2",
    serverName: "dataset-azsql-srv",
    userName: "demo_user",
    workspaceName: "acjain-mleastUS2",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

machine_learning_datastore = azure_native.machinelearningservices.MachineLearningDatastore("machineLearningDatastore",
    data_store_type="sqldb",
    database_name="dataset",
    datastore_name="sqlDatastore",
    password="<password>",
    resource_group_name="acjain-mleastUS2",
    server_name="dataset-azsql-srv",
    user_name="demo_user",
    workspace_name="acjain-mleastUS2")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:machinelearningservices:MachineLearningDatastore sqlDatastore /subscriptions/35f16a99-532a-4a47-9e93-00305f6c40f2/resourceGroups/acjain-mleastUS2/providers/Microsoft.MachineLearningServices/workspaces/acjain-mleastUS2/datastores/sqlDatastore 
```

 */
@ResourceType(type="azure-native:machinelearningservices:MachineLearningDatastore")
public class MachineLearningDatastore extends io.pulumi.resources.CustomResource {
    /**
     * The identity of the resource.
     */
    @OutputExport(name="identity", type=IdentityResponse.class, parameters={})
    private Output</* @Nullable */ IdentityResponse> identity;

    /**
     * @return The identity of the resource.
     */
    public Output</* @Nullable */ IdentityResponse> getIdentity() {
        return this.identity;
    }
    /**
     * Specifies the location of the resource.
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Specifies the location of the resource.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * Specifies the name of the resource.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the resource.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Datastore properties
     */
    @OutputExport(name="properties", type=DatastoreResponse.class, parameters={})
    private Output<DatastoreResponse> properties;

    /**
     * @return Datastore properties
     */
    public Output<DatastoreResponse> getProperties() {
        return this.properties;
    }
    /**
     * The sku of the workspace.
     */
    @OutputExport(name="sku", type=SkuResponse.class, parameters={})
    private Output</* @Nullable */ SkuResponse> sku;

    /**
     * @return The sku of the workspace.
     */
    public Output</* @Nullable */ SkuResponse> getSku() {
        return this.sku;
    }
    /**
     * Contains resource tags defined as key/value pairs.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Contains resource tags defined as key/value pairs.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Specifies the type of the resource.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Specifies the type of the resource.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MachineLearningDatastore(String name, MachineLearningDatastoreArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:machinelearningservices:MachineLearningDatastore", name, args == null ? MachineLearningDatastoreArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private MachineLearningDatastore(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:machinelearningservices:MachineLearningDatastore", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:machinelearningservices/v20200501preview:MachineLearningDatastore").build()),
                Input.of(Alias.builder().setType("azure-native:machinelearningservices/v20210301preview:MachineLearningDatastore").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MachineLearningDatastore get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new MachineLearningDatastore(name, id, options);
    }
}
