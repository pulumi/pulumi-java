// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerservice.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Kubelet configurations of agent nodes.
 * 
 */
public final class KubeletConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final KubeletConfigArgs Empty = new KubeletConfigArgs();

    /**
     * Allowlist of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
     * 
     */
    @Import(name="allowedUnsafeSysctls")
      private final @Nullable Output<List<String>> allowedUnsafeSysctls;

    public Output<List<String>> getAllowedUnsafeSysctls() {
        return this.allowedUnsafeSysctls == null ? Output.empty() : this.allowedUnsafeSysctls;
    }

    /**
     * The maximum number of container log files that can be present for a container. The number must be â‰¥ 2.
     * 
     */
    @Import(name="containerLogMaxFiles")
      private final @Nullable Output<Integer> containerLogMaxFiles;

    public Output<Integer> getContainerLogMaxFiles() {
        return this.containerLogMaxFiles == null ? Output.empty() : this.containerLogMaxFiles;
    }

    /**
     * The maximum size (e.g. 10Mi) of container log file before it is rotated.
     * 
     */
    @Import(name="containerLogMaxSizeMB")
      private final @Nullable Output<Integer> containerLogMaxSizeMB;

    public Output<Integer> getContainerLogMaxSizeMB() {
        return this.containerLogMaxSizeMB == null ? Output.empty() : this.containerLogMaxSizeMB;
    }

    /**
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     * 
     */
    @Import(name="cpuCfsQuota")
      private final @Nullable Output<Boolean> cpuCfsQuota;

    public Output<Boolean> getCpuCfsQuota() {
        return this.cpuCfsQuota == null ? Output.empty() : this.cpuCfsQuota;
    }

    /**
     * Sets CPU CFS quota period value.
     * 
     */
    @Import(name="cpuCfsQuotaPeriod")
      private final @Nullable Output<String> cpuCfsQuotaPeriod;

    public Output<String> getCpuCfsQuotaPeriod() {
        return this.cpuCfsQuotaPeriod == null ? Output.empty() : this.cpuCfsQuotaPeriod;
    }

    /**
     * CPU Manager policy to use.
     * 
     */
    @Import(name="cpuManagerPolicy")
      private final @Nullable Output<String> cpuManagerPolicy;

    public Output<String> getCpuManagerPolicy() {
        return this.cpuManagerPolicy == null ? Output.empty() : this.cpuManagerPolicy;
    }

    /**
     * If set to true it will make the Kubelet fail to start if swap is enabled on the node.
     * 
     */
    @Import(name="failSwapOn")
      private final @Nullable Output<Boolean> failSwapOn;

    public Output<Boolean> getFailSwapOn() {
        return this.failSwapOn == null ? Output.empty() : this.failSwapOn;
    }

    /**
     * The percent of disk usage after which image garbage collection is always run.
     * 
     */
    @Import(name="imageGcHighThreshold")
      private final @Nullable Output<Integer> imageGcHighThreshold;

    public Output<Integer> getImageGcHighThreshold() {
        return this.imageGcHighThreshold == null ? Output.empty() : this.imageGcHighThreshold;
    }

    /**
     * The percent of disk usage before which image garbage collection is never run.
     * 
     */
    @Import(name="imageGcLowThreshold")
      private final @Nullable Output<Integer> imageGcLowThreshold;

    public Output<Integer> getImageGcLowThreshold() {
        return this.imageGcLowThreshold == null ? Output.empty() : this.imageGcLowThreshold;
    }

    /**
     * The maximum number of processes per pod.
     * 
     */
    @Import(name="podMaxPids")
      private final @Nullable Output<Integer> podMaxPids;

    public Output<Integer> getPodMaxPids() {
        return this.podMaxPids == null ? Output.empty() : this.podMaxPids;
    }

    /**
     * Topology Manager policy to use.
     * 
     */
    @Import(name="topologyManagerPolicy")
      private final @Nullable Output<String> topologyManagerPolicy;

    public Output<String> getTopologyManagerPolicy() {
        return this.topologyManagerPolicy == null ? Output.empty() : this.topologyManagerPolicy;
    }

    public KubeletConfigArgs(
        @Nullable Output<List<String>> allowedUnsafeSysctls,
        @Nullable Output<Integer> containerLogMaxFiles,
        @Nullable Output<Integer> containerLogMaxSizeMB,
        @Nullable Output<Boolean> cpuCfsQuota,
        @Nullable Output<String> cpuCfsQuotaPeriod,
        @Nullable Output<String> cpuManagerPolicy,
        @Nullable Output<Boolean> failSwapOn,
        @Nullable Output<Integer> imageGcHighThreshold,
        @Nullable Output<Integer> imageGcLowThreshold,
        @Nullable Output<Integer> podMaxPids,
        @Nullable Output<String> topologyManagerPolicy) {
        this.allowedUnsafeSysctls = allowedUnsafeSysctls;
        this.containerLogMaxFiles = containerLogMaxFiles;
        this.containerLogMaxSizeMB = containerLogMaxSizeMB;
        this.cpuCfsQuota = cpuCfsQuota;
        this.cpuCfsQuotaPeriod = cpuCfsQuotaPeriod;
        this.cpuManagerPolicy = cpuManagerPolicy;
        this.failSwapOn = failSwapOn;
        this.imageGcHighThreshold = imageGcHighThreshold;
        this.imageGcLowThreshold = imageGcLowThreshold;
        this.podMaxPids = podMaxPids;
        this.topologyManagerPolicy = topologyManagerPolicy;
    }

    private KubeletConfigArgs() {
        this.allowedUnsafeSysctls = Output.empty();
        this.containerLogMaxFiles = Output.empty();
        this.containerLogMaxSizeMB = Output.empty();
        this.cpuCfsQuota = Output.empty();
        this.cpuCfsQuotaPeriod = Output.empty();
        this.cpuManagerPolicy = Output.empty();
        this.failSwapOn = Output.empty();
        this.imageGcHighThreshold = Output.empty();
        this.imageGcLowThreshold = Output.empty();
        this.podMaxPids = Output.empty();
        this.topologyManagerPolicy = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubeletConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> allowedUnsafeSysctls;
        private @Nullable Output<Integer> containerLogMaxFiles;
        private @Nullable Output<Integer> containerLogMaxSizeMB;
        private @Nullable Output<Boolean> cpuCfsQuota;
        private @Nullable Output<String> cpuCfsQuotaPeriod;
        private @Nullable Output<String> cpuManagerPolicy;
        private @Nullable Output<Boolean> failSwapOn;
        private @Nullable Output<Integer> imageGcHighThreshold;
        private @Nullable Output<Integer> imageGcLowThreshold;
        private @Nullable Output<Integer> podMaxPids;
        private @Nullable Output<String> topologyManagerPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(KubeletConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedUnsafeSysctls = defaults.allowedUnsafeSysctls;
    	      this.containerLogMaxFiles = defaults.containerLogMaxFiles;
    	      this.containerLogMaxSizeMB = defaults.containerLogMaxSizeMB;
    	      this.cpuCfsQuota = defaults.cpuCfsQuota;
    	      this.cpuCfsQuotaPeriod = defaults.cpuCfsQuotaPeriod;
    	      this.cpuManagerPolicy = defaults.cpuManagerPolicy;
    	      this.failSwapOn = defaults.failSwapOn;
    	      this.imageGcHighThreshold = defaults.imageGcHighThreshold;
    	      this.imageGcLowThreshold = defaults.imageGcLowThreshold;
    	      this.podMaxPids = defaults.podMaxPids;
    	      this.topologyManagerPolicy = defaults.topologyManagerPolicy;
        }

        public Builder allowedUnsafeSysctls(@Nullable Output<List<String>> allowedUnsafeSysctls) {
            this.allowedUnsafeSysctls = allowedUnsafeSysctls;
            return this;
        }

        public Builder allowedUnsafeSysctls(@Nullable List<String> allowedUnsafeSysctls) {
            this.allowedUnsafeSysctls = Output.ofNullable(allowedUnsafeSysctls);
            return this;
        }

        public Builder containerLogMaxFiles(@Nullable Output<Integer> containerLogMaxFiles) {
            this.containerLogMaxFiles = containerLogMaxFiles;
            return this;
        }

        public Builder containerLogMaxFiles(@Nullable Integer containerLogMaxFiles) {
            this.containerLogMaxFiles = Output.ofNullable(containerLogMaxFiles);
            return this;
        }

        public Builder containerLogMaxSizeMB(@Nullable Output<Integer> containerLogMaxSizeMB) {
            this.containerLogMaxSizeMB = containerLogMaxSizeMB;
            return this;
        }

        public Builder containerLogMaxSizeMB(@Nullable Integer containerLogMaxSizeMB) {
            this.containerLogMaxSizeMB = Output.ofNullable(containerLogMaxSizeMB);
            return this;
        }

        public Builder cpuCfsQuota(@Nullable Output<Boolean> cpuCfsQuota) {
            this.cpuCfsQuota = cpuCfsQuota;
            return this;
        }

        public Builder cpuCfsQuota(@Nullable Boolean cpuCfsQuota) {
            this.cpuCfsQuota = Output.ofNullable(cpuCfsQuota);
            return this;
        }

        public Builder cpuCfsQuotaPeriod(@Nullable Output<String> cpuCfsQuotaPeriod) {
            this.cpuCfsQuotaPeriod = cpuCfsQuotaPeriod;
            return this;
        }

        public Builder cpuCfsQuotaPeriod(@Nullable String cpuCfsQuotaPeriod) {
            this.cpuCfsQuotaPeriod = Output.ofNullable(cpuCfsQuotaPeriod);
            return this;
        }

        public Builder cpuManagerPolicy(@Nullable Output<String> cpuManagerPolicy) {
            this.cpuManagerPolicy = cpuManagerPolicy;
            return this;
        }

        public Builder cpuManagerPolicy(@Nullable String cpuManagerPolicy) {
            this.cpuManagerPolicy = Output.ofNullable(cpuManagerPolicy);
            return this;
        }

        public Builder failSwapOn(@Nullable Output<Boolean> failSwapOn) {
            this.failSwapOn = failSwapOn;
            return this;
        }

        public Builder failSwapOn(@Nullable Boolean failSwapOn) {
            this.failSwapOn = Output.ofNullable(failSwapOn);
            return this;
        }

        public Builder imageGcHighThreshold(@Nullable Output<Integer> imageGcHighThreshold) {
            this.imageGcHighThreshold = imageGcHighThreshold;
            return this;
        }

        public Builder imageGcHighThreshold(@Nullable Integer imageGcHighThreshold) {
            this.imageGcHighThreshold = Output.ofNullable(imageGcHighThreshold);
            return this;
        }

        public Builder imageGcLowThreshold(@Nullable Output<Integer> imageGcLowThreshold) {
            this.imageGcLowThreshold = imageGcLowThreshold;
            return this;
        }

        public Builder imageGcLowThreshold(@Nullable Integer imageGcLowThreshold) {
            this.imageGcLowThreshold = Output.ofNullable(imageGcLowThreshold);
            return this;
        }

        public Builder podMaxPids(@Nullable Output<Integer> podMaxPids) {
            this.podMaxPids = podMaxPids;
            return this;
        }

        public Builder podMaxPids(@Nullable Integer podMaxPids) {
            this.podMaxPids = Output.ofNullable(podMaxPids);
            return this;
        }

        public Builder topologyManagerPolicy(@Nullable Output<String> topologyManagerPolicy) {
            this.topologyManagerPolicy = topologyManagerPolicy;
            return this;
        }

        public Builder topologyManagerPolicy(@Nullable String topologyManagerPolicy) {
            this.topologyManagerPolicy = Output.ofNullable(topologyManagerPolicy);
            return this;
        }
        public KubeletConfigArgs build() {
            return new KubeletConfigArgs(allowedUnsafeSysctls, containerLogMaxFiles, containerLogMaxSizeMB, cpuCfsQuota, cpuCfsQuotaPeriod, cpuManagerPolicy, failSwapOn, imageGcHighThreshold, imageGcLowThreshold, podMaxPids, topologyManagerPolicy);
        }
    }
}
