// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerservice.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Kubelet configurations of agent nodes.
 * 
 */
public final class KubeletConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final KubeletConfigArgs Empty = new KubeletConfigArgs();

    /**
     * Allowlist of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
     * 
     */
    @InputImport(name="allowedUnsafeSysctls")
    private final @Nullable Input<List<String>> allowedUnsafeSysctls;

    public Input<List<String>> getAllowedUnsafeSysctls() {
        return this.allowedUnsafeSysctls == null ? Input.empty() : this.allowedUnsafeSysctls;
    }

    /**
     * The maximum number of container log files that can be present for a container. The number must be â‰¥ 2.
     * 
     */
    @InputImport(name="containerLogMaxFiles")
    private final @Nullable Input<Integer> containerLogMaxFiles;

    public Input<Integer> getContainerLogMaxFiles() {
        return this.containerLogMaxFiles == null ? Input.empty() : this.containerLogMaxFiles;
    }

    /**
     * The maximum size (e.g. 10Mi) of container log file before it is rotated.
     * 
     */
    @InputImport(name="containerLogMaxSizeMB")
    private final @Nullable Input<Integer> containerLogMaxSizeMB;

    public Input<Integer> getContainerLogMaxSizeMB() {
        return this.containerLogMaxSizeMB == null ? Input.empty() : this.containerLogMaxSizeMB;
    }

    /**
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     * 
     */
    @InputImport(name="cpuCfsQuota")
    private final @Nullable Input<Boolean> cpuCfsQuota;

    public Input<Boolean> getCpuCfsQuota() {
        return this.cpuCfsQuota == null ? Input.empty() : this.cpuCfsQuota;
    }

    /**
     * Sets CPU CFS quota period value.
     * 
     */
    @InputImport(name="cpuCfsQuotaPeriod")
    private final @Nullable Input<String> cpuCfsQuotaPeriod;

    public Input<String> getCpuCfsQuotaPeriod() {
        return this.cpuCfsQuotaPeriod == null ? Input.empty() : this.cpuCfsQuotaPeriod;
    }

    /**
     * CPU Manager policy to use.
     * 
     */
    @InputImport(name="cpuManagerPolicy")
    private final @Nullable Input<String> cpuManagerPolicy;

    public Input<String> getCpuManagerPolicy() {
        return this.cpuManagerPolicy == null ? Input.empty() : this.cpuManagerPolicy;
    }

    /**
     * If set to true it will make the Kubelet fail to start if swap is enabled on the node.
     * 
     */
    @InputImport(name="failSwapOn")
    private final @Nullable Input<Boolean> failSwapOn;

    public Input<Boolean> getFailSwapOn() {
        return this.failSwapOn == null ? Input.empty() : this.failSwapOn;
    }

    /**
     * The percent of disk usage after which image garbage collection is always run.
     * 
     */
    @InputImport(name="imageGcHighThreshold")
    private final @Nullable Input<Integer> imageGcHighThreshold;

    public Input<Integer> getImageGcHighThreshold() {
        return this.imageGcHighThreshold == null ? Input.empty() : this.imageGcHighThreshold;
    }

    /**
     * The percent of disk usage before which image garbage collection is never run.
     * 
     */
    @InputImport(name="imageGcLowThreshold")
    private final @Nullable Input<Integer> imageGcLowThreshold;

    public Input<Integer> getImageGcLowThreshold() {
        return this.imageGcLowThreshold == null ? Input.empty() : this.imageGcLowThreshold;
    }

    /**
     * The maximum number of processes per pod.
     * 
     */
    @InputImport(name="podMaxPids")
    private final @Nullable Input<Integer> podMaxPids;

    public Input<Integer> getPodMaxPids() {
        return this.podMaxPids == null ? Input.empty() : this.podMaxPids;
    }

    /**
     * Topology Manager policy to use.
     * 
     */
    @InputImport(name="topologyManagerPolicy")
    private final @Nullable Input<String> topologyManagerPolicy;

    public Input<String> getTopologyManagerPolicy() {
        return this.topologyManagerPolicy == null ? Input.empty() : this.topologyManagerPolicy;
    }

    public KubeletConfigArgs(
        @Nullable Input<List<String>> allowedUnsafeSysctls,
        @Nullable Input<Integer> containerLogMaxFiles,
        @Nullable Input<Integer> containerLogMaxSizeMB,
        @Nullable Input<Boolean> cpuCfsQuota,
        @Nullable Input<String> cpuCfsQuotaPeriod,
        @Nullable Input<String> cpuManagerPolicy,
        @Nullable Input<Boolean> failSwapOn,
        @Nullable Input<Integer> imageGcHighThreshold,
        @Nullable Input<Integer> imageGcLowThreshold,
        @Nullable Input<Integer> podMaxPids,
        @Nullable Input<String> topologyManagerPolicy) {
        this.allowedUnsafeSysctls = allowedUnsafeSysctls;
        this.containerLogMaxFiles = containerLogMaxFiles;
        this.containerLogMaxSizeMB = containerLogMaxSizeMB;
        this.cpuCfsQuota = cpuCfsQuota;
        this.cpuCfsQuotaPeriod = cpuCfsQuotaPeriod;
        this.cpuManagerPolicy = cpuManagerPolicy;
        this.failSwapOn = failSwapOn;
        this.imageGcHighThreshold = imageGcHighThreshold;
        this.imageGcLowThreshold = imageGcLowThreshold;
        this.podMaxPids = podMaxPids;
        this.topologyManagerPolicy = topologyManagerPolicy;
    }

    private KubeletConfigArgs() {
        this.allowedUnsafeSysctls = Input.empty();
        this.containerLogMaxFiles = Input.empty();
        this.containerLogMaxSizeMB = Input.empty();
        this.cpuCfsQuota = Input.empty();
        this.cpuCfsQuotaPeriod = Input.empty();
        this.cpuManagerPolicy = Input.empty();
        this.failSwapOn = Input.empty();
        this.imageGcHighThreshold = Input.empty();
        this.imageGcLowThreshold = Input.empty();
        this.podMaxPids = Input.empty();
        this.topologyManagerPolicy = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubeletConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> allowedUnsafeSysctls;
        private @Nullable Input<Integer> containerLogMaxFiles;
        private @Nullable Input<Integer> containerLogMaxSizeMB;
        private @Nullable Input<Boolean> cpuCfsQuota;
        private @Nullable Input<String> cpuCfsQuotaPeriod;
        private @Nullable Input<String> cpuManagerPolicy;
        private @Nullable Input<Boolean> failSwapOn;
        private @Nullable Input<Integer> imageGcHighThreshold;
        private @Nullable Input<Integer> imageGcLowThreshold;
        private @Nullable Input<Integer> podMaxPids;
        private @Nullable Input<String> topologyManagerPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(KubeletConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedUnsafeSysctls = defaults.allowedUnsafeSysctls;
    	      this.containerLogMaxFiles = defaults.containerLogMaxFiles;
    	      this.containerLogMaxSizeMB = defaults.containerLogMaxSizeMB;
    	      this.cpuCfsQuota = defaults.cpuCfsQuota;
    	      this.cpuCfsQuotaPeriod = defaults.cpuCfsQuotaPeriod;
    	      this.cpuManagerPolicy = defaults.cpuManagerPolicy;
    	      this.failSwapOn = defaults.failSwapOn;
    	      this.imageGcHighThreshold = defaults.imageGcHighThreshold;
    	      this.imageGcLowThreshold = defaults.imageGcLowThreshold;
    	      this.podMaxPids = defaults.podMaxPids;
    	      this.topologyManagerPolicy = defaults.topologyManagerPolicy;
        }

        public Builder setAllowedUnsafeSysctls(@Nullable Input<List<String>> allowedUnsafeSysctls) {
            this.allowedUnsafeSysctls = allowedUnsafeSysctls;
            return this;
        }

        public Builder setAllowedUnsafeSysctls(@Nullable List<String> allowedUnsafeSysctls) {
            this.allowedUnsafeSysctls = Input.ofNullable(allowedUnsafeSysctls);
            return this;
        }

        public Builder setContainerLogMaxFiles(@Nullable Input<Integer> containerLogMaxFiles) {
            this.containerLogMaxFiles = containerLogMaxFiles;
            return this;
        }

        public Builder setContainerLogMaxFiles(@Nullable Integer containerLogMaxFiles) {
            this.containerLogMaxFiles = Input.ofNullable(containerLogMaxFiles);
            return this;
        }

        public Builder setContainerLogMaxSizeMB(@Nullable Input<Integer> containerLogMaxSizeMB) {
            this.containerLogMaxSizeMB = containerLogMaxSizeMB;
            return this;
        }

        public Builder setContainerLogMaxSizeMB(@Nullable Integer containerLogMaxSizeMB) {
            this.containerLogMaxSizeMB = Input.ofNullable(containerLogMaxSizeMB);
            return this;
        }

        public Builder setCpuCfsQuota(@Nullable Input<Boolean> cpuCfsQuota) {
            this.cpuCfsQuota = cpuCfsQuota;
            return this;
        }

        public Builder setCpuCfsQuota(@Nullable Boolean cpuCfsQuota) {
            this.cpuCfsQuota = Input.ofNullable(cpuCfsQuota);
            return this;
        }

        public Builder setCpuCfsQuotaPeriod(@Nullable Input<String> cpuCfsQuotaPeriod) {
            this.cpuCfsQuotaPeriod = cpuCfsQuotaPeriod;
            return this;
        }

        public Builder setCpuCfsQuotaPeriod(@Nullable String cpuCfsQuotaPeriod) {
            this.cpuCfsQuotaPeriod = Input.ofNullable(cpuCfsQuotaPeriod);
            return this;
        }

        public Builder setCpuManagerPolicy(@Nullable Input<String> cpuManagerPolicy) {
            this.cpuManagerPolicy = cpuManagerPolicy;
            return this;
        }

        public Builder setCpuManagerPolicy(@Nullable String cpuManagerPolicy) {
            this.cpuManagerPolicy = Input.ofNullable(cpuManagerPolicy);
            return this;
        }

        public Builder setFailSwapOn(@Nullable Input<Boolean> failSwapOn) {
            this.failSwapOn = failSwapOn;
            return this;
        }

        public Builder setFailSwapOn(@Nullable Boolean failSwapOn) {
            this.failSwapOn = Input.ofNullable(failSwapOn);
            return this;
        }

        public Builder setImageGcHighThreshold(@Nullable Input<Integer> imageGcHighThreshold) {
            this.imageGcHighThreshold = imageGcHighThreshold;
            return this;
        }

        public Builder setImageGcHighThreshold(@Nullable Integer imageGcHighThreshold) {
            this.imageGcHighThreshold = Input.ofNullable(imageGcHighThreshold);
            return this;
        }

        public Builder setImageGcLowThreshold(@Nullable Input<Integer> imageGcLowThreshold) {
            this.imageGcLowThreshold = imageGcLowThreshold;
            return this;
        }

        public Builder setImageGcLowThreshold(@Nullable Integer imageGcLowThreshold) {
            this.imageGcLowThreshold = Input.ofNullable(imageGcLowThreshold);
            return this;
        }

        public Builder setPodMaxPids(@Nullable Input<Integer> podMaxPids) {
            this.podMaxPids = podMaxPids;
            return this;
        }

        public Builder setPodMaxPids(@Nullable Integer podMaxPids) {
            this.podMaxPids = Input.ofNullable(podMaxPids);
            return this;
        }

        public Builder setTopologyManagerPolicy(@Nullable Input<String> topologyManagerPolicy) {
            this.topologyManagerPolicy = topologyManagerPolicy;
            return this;
        }

        public Builder setTopologyManagerPolicy(@Nullable String topologyManagerPolicy) {
            this.topologyManagerPolicy = Input.ofNullable(topologyManagerPolicy);
            return this;
        }

        public KubeletConfigArgs build() {
            return new KubeletConfigArgs(allowedUnsafeSysctls, containerLogMaxFiles, containerLogMaxSizeMB, cpuCfsQuota, cpuCfsQuotaPeriod, cpuManagerPolicy, failSwapOn, imageGcHighThreshold, imageGcLowThreshold, podMaxPids, topologyManagerPolicy);
        }
    }
}
