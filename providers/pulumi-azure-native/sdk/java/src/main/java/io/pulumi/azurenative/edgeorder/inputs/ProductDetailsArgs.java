// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.edgeorder.inputs;

import io.pulumi.azurenative.edgeorder.inputs.HierarchyInformationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * Represents product details
 * 
 */
public final class ProductDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProductDetailsArgs Empty = new ProductDetailsArgs();

    /**
     * Hierarchy of the product which uniquely identifies the product
     * 
     */
    @Import(name="hierarchyInformation", required=true)
      private final Output<HierarchyInformationArgs> hierarchyInformation;

    public Output<HierarchyInformationArgs> getHierarchyInformation() {
        return this.hierarchyInformation;
    }

    public ProductDetailsArgs(Output<HierarchyInformationArgs> hierarchyInformation) {
        this.hierarchyInformation = Objects.requireNonNull(hierarchyInformation, "expected parameter 'hierarchyInformation' to be non-null");
    }

    private ProductDetailsArgs() {
        this.hierarchyInformation = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProductDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<HierarchyInformationArgs> hierarchyInformation;

        public Builder() {
    	      // Empty
        }

        public Builder(ProductDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hierarchyInformation = defaults.hierarchyInformation;
        }

        public Builder hierarchyInformation(Output<HierarchyInformationArgs> hierarchyInformation) {
            this.hierarchyInformation = Objects.requireNonNull(hierarchyInformation);
            return this;
        }

        public Builder hierarchyInformation(HierarchyInformationArgs hierarchyInformation) {
            this.hierarchyInformation = Output.of(Objects.requireNonNull(hierarchyInformation));
            return this;
        }
        public ProductDetailsArgs build() {
            return new ProductDetailsArgs(hierarchyInformation);
        }
    }
}
