// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.inputs.ManagedRuleSetArgs;
import io.pulumi.azurenative.network.inputs.OwaspCrsExclusionEntryArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Allow to exclude some variable satisfy the condition for the WAF check.
 * 
 */
public final class ManagedRulesDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ManagedRulesDefinitionArgs Empty = new ManagedRulesDefinitionArgs();

    /**
     * The Exclusions that are applied on the policy.
     * 
     */
    @InputImport(name="exclusions")
      private final @Nullable Input<List<OwaspCrsExclusionEntryArgs>> exclusions;

    public Input<List<OwaspCrsExclusionEntryArgs>> getExclusions() {
        return this.exclusions == null ? Input.empty() : this.exclusions;
    }

    /**
     * The managed rule sets that are associated with the policy.
     * 
     */
    @InputImport(name="managedRuleSets", required=true)
      private final Input<List<ManagedRuleSetArgs>> managedRuleSets;

    public Input<List<ManagedRuleSetArgs>> getManagedRuleSets() {
        return this.managedRuleSets;
    }

    public ManagedRulesDefinitionArgs(
        @Nullable Input<List<OwaspCrsExclusionEntryArgs>> exclusions,
        Input<List<ManagedRuleSetArgs>> managedRuleSets) {
        this.exclusions = exclusions;
        this.managedRuleSets = Objects.requireNonNull(managedRuleSets, "expected parameter 'managedRuleSets' to be non-null");
    }

    private ManagedRulesDefinitionArgs() {
        this.exclusions = Input.empty();
        this.managedRuleSets = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedRulesDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<OwaspCrsExclusionEntryArgs>> exclusions;
        private Input<List<ManagedRuleSetArgs>> managedRuleSets;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedRulesDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exclusions = defaults.exclusions;
    	      this.managedRuleSets = defaults.managedRuleSets;
        }

        public Builder exclusions(@Nullable Input<List<OwaspCrsExclusionEntryArgs>> exclusions) {
            this.exclusions = exclusions;
            return this;
        }

        public Builder exclusions(@Nullable List<OwaspCrsExclusionEntryArgs> exclusions) {
            this.exclusions = Input.ofNullable(exclusions);
            return this;
        }

        public Builder managedRuleSets(Input<List<ManagedRuleSetArgs>> managedRuleSets) {
            this.managedRuleSets = Objects.requireNonNull(managedRuleSets);
            return this;
        }

        public Builder managedRuleSets(List<ManagedRuleSetArgs> managedRuleSets) {
            this.managedRuleSets = Input.of(Objects.requireNonNull(managedRuleSets));
            return this;
        }
        public ManagedRulesDefinitionArgs build() {
            return new ManagedRulesDefinitionArgs(exclusions, managedRuleSets);
        }
    }
}
