// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The auto scaler properties.
 * 
 */
public final class AKSServiceCreateRequestAutoScalerArgs extends io.pulumi.resources.ResourceArgs {

    public static final AKSServiceCreateRequestAutoScalerArgs Empty = new AKSServiceCreateRequestAutoScalerArgs();

    /**
     * Option to enable/disable auto scaling.
     * 
     */
    @Import(name="autoscaleEnabled")
      private final @Nullable Output<Boolean> autoscaleEnabled;

    public Output<Boolean> autoscaleEnabled() {
        return this.autoscaleEnabled == null ? Codegen.empty() : this.autoscaleEnabled;
    }

    /**
     * The maximum number of replicas in the cluster.
     * 
     */
    @Import(name="maxReplicas")
      private final @Nullable Output<Integer> maxReplicas;

    public Output<Integer> maxReplicas() {
        return this.maxReplicas == null ? Codegen.empty() : this.maxReplicas;
    }

    /**
     * The minimum number of replicas to scale down to.
     * 
     */
    @Import(name="minReplicas")
      private final @Nullable Output<Integer> minReplicas;

    public Output<Integer> minReplicas() {
        return this.minReplicas == null ? Codegen.empty() : this.minReplicas;
    }

    /**
     * The amount of seconds to wait between auto scale updates.
     * 
     */
    @Import(name="refreshPeriodInSeconds")
      private final @Nullable Output<Integer> refreshPeriodInSeconds;

    public Output<Integer> refreshPeriodInSeconds() {
        return this.refreshPeriodInSeconds == null ? Codegen.empty() : this.refreshPeriodInSeconds;
    }

    /**
     * The target utilization percentage to use for determining whether to scale the cluster.
     * 
     */
    @Import(name="targetUtilization")
      private final @Nullable Output<Integer> targetUtilization;

    public Output<Integer> targetUtilization() {
        return this.targetUtilization == null ? Codegen.empty() : this.targetUtilization;
    }

    public AKSServiceCreateRequestAutoScalerArgs(
        @Nullable Output<Boolean> autoscaleEnabled,
        @Nullable Output<Integer> maxReplicas,
        @Nullable Output<Integer> minReplicas,
        @Nullable Output<Integer> refreshPeriodInSeconds,
        @Nullable Output<Integer> targetUtilization) {
        this.autoscaleEnabled = autoscaleEnabled;
        this.maxReplicas = maxReplicas;
        this.minReplicas = minReplicas;
        this.refreshPeriodInSeconds = refreshPeriodInSeconds;
        this.targetUtilization = targetUtilization;
    }

    private AKSServiceCreateRequestAutoScalerArgs() {
        this.autoscaleEnabled = Codegen.empty();
        this.maxReplicas = Codegen.empty();
        this.minReplicas = Codegen.empty();
        this.refreshPeriodInSeconds = Codegen.empty();
        this.targetUtilization = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AKSServiceCreateRequestAutoScalerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> autoscaleEnabled;
        private @Nullable Output<Integer> maxReplicas;
        private @Nullable Output<Integer> minReplicas;
        private @Nullable Output<Integer> refreshPeriodInSeconds;
        private @Nullable Output<Integer> targetUtilization;

        public Builder() {
    	      // Empty
        }

        public Builder(AKSServiceCreateRequestAutoScalerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscaleEnabled = defaults.autoscaleEnabled;
    	      this.maxReplicas = defaults.maxReplicas;
    	      this.minReplicas = defaults.minReplicas;
    	      this.refreshPeriodInSeconds = defaults.refreshPeriodInSeconds;
    	      this.targetUtilization = defaults.targetUtilization;
        }

        public Builder autoscaleEnabled(@Nullable Output<Boolean> autoscaleEnabled) {
            this.autoscaleEnabled = autoscaleEnabled;
            return this;
        }
        public Builder autoscaleEnabled(@Nullable Boolean autoscaleEnabled) {
            this.autoscaleEnabled = Codegen.ofNullable(autoscaleEnabled);
            return this;
        }
        public Builder maxReplicas(@Nullable Output<Integer> maxReplicas) {
            this.maxReplicas = maxReplicas;
            return this;
        }
        public Builder maxReplicas(@Nullable Integer maxReplicas) {
            this.maxReplicas = Codegen.ofNullable(maxReplicas);
            return this;
        }
        public Builder minReplicas(@Nullable Output<Integer> minReplicas) {
            this.minReplicas = minReplicas;
            return this;
        }
        public Builder minReplicas(@Nullable Integer minReplicas) {
            this.minReplicas = Codegen.ofNullable(minReplicas);
            return this;
        }
        public Builder refreshPeriodInSeconds(@Nullable Output<Integer> refreshPeriodInSeconds) {
            this.refreshPeriodInSeconds = refreshPeriodInSeconds;
            return this;
        }
        public Builder refreshPeriodInSeconds(@Nullable Integer refreshPeriodInSeconds) {
            this.refreshPeriodInSeconds = Codegen.ofNullable(refreshPeriodInSeconds);
            return this;
        }
        public Builder targetUtilization(@Nullable Output<Integer> targetUtilization) {
            this.targetUtilization = targetUtilization;
            return this;
        }
        public Builder targetUtilization(@Nullable Integer targetUtilization) {
            this.targetUtilization = Codegen.ofNullable(targetUtilization);
            return this;
        }        public AKSServiceCreateRequestAutoScalerArgs build() {
            return new AKSServiceCreateRequestAutoScalerArgs(autoscaleEnabled, maxReplicas, minReplicas, refreshPeriodInSeconds, targetUtilization);
        }
    }
}
