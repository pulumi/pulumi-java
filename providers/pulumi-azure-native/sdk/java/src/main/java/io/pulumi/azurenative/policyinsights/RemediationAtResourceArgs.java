// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.policyinsights;

import io.pulumi.azurenative.policyinsights.enums.ResourceDiscoveryMode;
import io.pulumi.azurenative.policyinsights.inputs.RemediationFiltersArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RemediationAtResourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final RemediationAtResourceArgs Empty = new RemediationAtResourceArgs();

    /**
     * The filters that will be applied to determine which resources to remediate.
     * 
     */
    @Import(name="filters")
      private final @Nullable Output<RemediationFiltersArgs> filters;

    public Output<RemediationFiltersArgs> getFilters() {
        return this.filters == null ? Codegen.empty() : this.filters;
    }

    /**
     * The resource ID of the policy assignment that should be remediated.
     * 
     */
    @Import(name="policyAssignmentId")
      private final @Nullable Output<String> policyAssignmentId;

    public Output<String> getPolicyAssignmentId() {
        return this.policyAssignmentId == null ? Codegen.empty() : this.policyAssignmentId;
    }

    /**
     * The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
     * 
     */
    @Import(name="policyDefinitionReferenceId")
      private final @Nullable Output<String> policyDefinitionReferenceId;

    public Output<String> getPolicyDefinitionReferenceId() {
        return this.policyDefinitionReferenceId == null ? Codegen.empty() : this.policyDefinitionReferenceId;
    }

    /**
     * The name of the remediation.
     * 
     */
    @Import(name="remediationName")
      private final @Nullable Output<String> remediationName;

    public Output<String> getRemediationName() {
        return this.remediationName == null ? Codegen.empty() : this.remediationName;
    }

    /**
     * The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
     * 
     */
    @Import(name="resourceDiscoveryMode")
      private final @Nullable Output<Either<String,ResourceDiscoveryMode>> resourceDiscoveryMode;

    public Output<Either<String,ResourceDiscoveryMode>> getResourceDiscoveryMode() {
        return this.resourceDiscoveryMode == null ? Codegen.empty() : this.resourceDiscoveryMode;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="resourceId", required=true)
      private final Output<String> resourceId;

    public Output<String> getResourceId() {
        return this.resourceId;
    }

    public RemediationAtResourceArgs(
        @Nullable Output<RemediationFiltersArgs> filters,
        @Nullable Output<String> policyAssignmentId,
        @Nullable Output<String> policyDefinitionReferenceId,
        @Nullable Output<String> remediationName,
        @Nullable Output<Either<String,ResourceDiscoveryMode>> resourceDiscoveryMode,
        Output<String> resourceId) {
        this.filters = filters;
        this.policyAssignmentId = policyAssignmentId;
        this.policyDefinitionReferenceId = policyDefinitionReferenceId;
        this.remediationName = remediationName;
        this.resourceDiscoveryMode = resourceDiscoveryMode;
        this.resourceId = Objects.requireNonNull(resourceId, "expected parameter 'resourceId' to be non-null");
    }

    private RemediationAtResourceArgs() {
        this.filters = Codegen.empty();
        this.policyAssignmentId = Codegen.empty();
        this.policyDefinitionReferenceId = Codegen.empty();
        this.remediationName = Codegen.empty();
        this.resourceDiscoveryMode = Codegen.empty();
        this.resourceId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RemediationAtResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<RemediationFiltersArgs> filters;
        private @Nullable Output<String> policyAssignmentId;
        private @Nullable Output<String> policyDefinitionReferenceId;
        private @Nullable Output<String> remediationName;
        private @Nullable Output<Either<String,ResourceDiscoveryMode>> resourceDiscoveryMode;
        private Output<String> resourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(RemediationAtResourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.policyAssignmentId = defaults.policyAssignmentId;
    	      this.policyDefinitionReferenceId = defaults.policyDefinitionReferenceId;
    	      this.remediationName = defaults.remediationName;
    	      this.resourceDiscoveryMode = defaults.resourceDiscoveryMode;
    	      this.resourceId = defaults.resourceId;
        }

        public Builder filters(@Nullable Output<RemediationFiltersArgs> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(@Nullable RemediationFiltersArgs filters) {
            this.filters = Codegen.ofNullable(filters);
            return this;
        }
        public Builder policyAssignmentId(@Nullable Output<String> policyAssignmentId) {
            this.policyAssignmentId = policyAssignmentId;
            return this;
        }
        public Builder policyAssignmentId(@Nullable String policyAssignmentId) {
            this.policyAssignmentId = Codegen.ofNullable(policyAssignmentId);
            return this;
        }
        public Builder policyDefinitionReferenceId(@Nullable Output<String> policyDefinitionReferenceId) {
            this.policyDefinitionReferenceId = policyDefinitionReferenceId;
            return this;
        }
        public Builder policyDefinitionReferenceId(@Nullable String policyDefinitionReferenceId) {
            this.policyDefinitionReferenceId = Codegen.ofNullable(policyDefinitionReferenceId);
            return this;
        }
        public Builder remediationName(@Nullable Output<String> remediationName) {
            this.remediationName = remediationName;
            return this;
        }
        public Builder remediationName(@Nullable String remediationName) {
            this.remediationName = Codegen.ofNullable(remediationName);
            return this;
        }
        public Builder resourceDiscoveryMode(@Nullable Output<Either<String,ResourceDiscoveryMode>> resourceDiscoveryMode) {
            this.resourceDiscoveryMode = resourceDiscoveryMode;
            return this;
        }
        public Builder resourceDiscoveryMode(@Nullable Either<String,ResourceDiscoveryMode> resourceDiscoveryMode) {
            this.resourceDiscoveryMode = Codegen.ofNullable(resourceDiscoveryMode);
            return this;
        }
        public Builder resourceId(Output<String> resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }
        public Builder resourceId(String resourceId) {
            this.resourceId = Output.of(Objects.requireNonNull(resourceId));
            return this;
        }        public RemediationAtResourceArgs build() {
            return new RemediationAtResourceArgs(filters, policyAssignmentId, policyDefinitionReferenceId, remediationName, resourceDiscoveryMode, resourceId);
        }
    }
}
