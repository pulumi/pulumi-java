// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Online endpoint configuration
 * 
 */
public final class OnlineEndpointResponse extends io.pulumi.resources.InvokeArgs {

    public static final OnlineEndpointResponse Empty = new OnlineEndpointResponse();

    /**
     * Inference endpoint authentication mode type
     * 
     */
    @Import(name="authMode", required=true)
      private final String authMode;

    public String authMode() {
        return this.authMode;
    }

    /**
     * Description of the inference endpoint.
     * 
     */
    @Import(name="description")
      private final @Nullable String description;

    public Optional<String> description() {
        return this.description == null ? Optional.empty() : Optional.ofNullable(this.description);
    }

    /**
     * Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    @Import(name="properties")
      private final @Nullable Map<String,String> properties;

    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }

    /**
     * State of endpoint provisioning.
     * 
     */
    @Import(name="provisioningState", required=true)
      private final String provisioningState;

    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Endpoint URI.
     * 
     */
    @Import(name="scoringUri", required=true)
      private final String scoringUri;

    public String scoringUri() {
        return this.scoringUri;
    }

    /**
     * Endpoint Swagger URI.
     * 
     */
    @Import(name="swaggerUri", required=true)
      private final String swaggerUri;

    public String swaggerUri() {
        return this.swaggerUri;
    }

    /**
     * ARM resource ID of the compute if it exists.
     * optional
     * 
     */
    @Import(name="target")
      private final @Nullable String target;

    public Optional<String> target() {
        return this.target == null ? Optional.empty() : Optional.ofNullable(this.target);
    }

    /**
     * Traffic rules on how the traffic will be routed across deployments.
     * 
     */
    @Import(name="traffic")
      private final @Nullable Map<String,Integer> traffic;

    public Map<String,Integer> traffic() {
        return this.traffic == null ? Map.of() : this.traffic;
    }

    public OnlineEndpointResponse(
        String authMode,
        @Nullable String description,
        @Nullable Map<String,String> properties,
        String provisioningState,
        String scoringUri,
        String swaggerUri,
        @Nullable String target,
        @Nullable Map<String,Integer> traffic) {
        this.authMode = Objects.requireNonNull(authMode, "expected parameter 'authMode' to be non-null");
        this.description = description;
        this.properties = properties;
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.scoringUri = Objects.requireNonNull(scoringUri, "expected parameter 'scoringUri' to be non-null");
        this.swaggerUri = Objects.requireNonNull(swaggerUri, "expected parameter 'swaggerUri' to be non-null");
        this.target = target;
        this.traffic = traffic;
    }

    private OnlineEndpointResponse() {
        this.authMode = null;
        this.description = null;
        this.properties = Map.of();
        this.provisioningState = null;
        this.scoringUri = null;
        this.swaggerUri = null;
        this.target = null;
        this.traffic = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OnlineEndpointResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authMode;
        private @Nullable String description;
        private @Nullable Map<String,String> properties;
        private String provisioningState;
        private String scoringUri;
        private String swaggerUri;
        private @Nullable String target;
        private @Nullable Map<String,Integer> traffic;

        public Builder() {
    	      // Empty
        }

        public Builder(OnlineEndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authMode = defaults.authMode;
    	      this.description = defaults.description;
    	      this.properties = defaults.properties;
    	      this.provisioningState = defaults.provisioningState;
    	      this.scoringUri = defaults.scoringUri;
    	      this.swaggerUri = defaults.swaggerUri;
    	      this.target = defaults.target;
    	      this.traffic = defaults.traffic;
        }

        public Builder authMode(String authMode) {
            this.authMode = Objects.requireNonNull(authMode);
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder scoringUri(String scoringUri) {
            this.scoringUri = Objects.requireNonNull(scoringUri);
            return this;
        }
        public Builder swaggerUri(String swaggerUri) {
            this.swaggerUri = Objects.requireNonNull(swaggerUri);
            return this;
        }
        public Builder target(@Nullable String target) {
            this.target = target;
            return this;
        }
        public Builder traffic(@Nullable Map<String,Integer> traffic) {
            this.traffic = traffic;
            return this;
        }        public OnlineEndpointResponse build() {
            return new OnlineEndpointResponse(authMode, description, properties, provisioningState, scoringUri, swaggerUri, target, traffic);
        }
    }
}
