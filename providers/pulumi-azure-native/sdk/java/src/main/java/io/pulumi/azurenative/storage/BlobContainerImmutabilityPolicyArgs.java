// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BlobContainerImmutabilityPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final BlobContainerImmutabilityPolicyArgs Empty = new BlobContainerImmutabilityPolicyArgs();

    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    @InputImport(name="allowProtectedAppendWrites")
    private final @Nullable Input<Boolean> allowProtectedAppendWrites;

    public Input<Boolean> getAllowProtectedAppendWrites() {
        return this.allowProtectedAppendWrites == null ? Input.empty() : this.allowProtectedAppendWrites;
    }

    @InputImport(name="containerName", required=true)
    private final Input<String> containerName;

    public Input<String> getContainerName() {
        return this.containerName;
    }

    @InputImport(name="immutabilityPeriodSinceCreationInDays")
    private final @Nullable Input<Integer> immutabilityPeriodSinceCreationInDays;

    public Input<Integer> getImmutabilityPeriodSinceCreationInDays() {
        return this.immutabilityPeriodSinceCreationInDays == null ? Input.empty() : this.immutabilityPeriodSinceCreationInDays;
    }

    @InputImport(name="immutabilityPolicyName")
    private final @Nullable Input<String> immutabilityPolicyName;

    public Input<String> getImmutabilityPolicyName() {
        return this.immutabilityPolicyName == null ? Input.empty() : this.immutabilityPolicyName;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public BlobContainerImmutabilityPolicyArgs(
        Input<String> accountName,
        @Nullable Input<Boolean> allowProtectedAppendWrites,
        Input<String> containerName,
        @Nullable Input<Integer> immutabilityPeriodSinceCreationInDays,
        @Nullable Input<String> immutabilityPolicyName,
        Input<String> resourceGroupName) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.allowProtectedAppendWrites = allowProtectedAppendWrites;
        this.containerName = Objects.requireNonNull(containerName, "expected parameter 'containerName' to be non-null");
        this.immutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
        this.immutabilityPolicyName = immutabilityPolicyName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private BlobContainerImmutabilityPolicyArgs() {
        this.accountName = Input.empty();
        this.allowProtectedAppendWrites = Input.empty();
        this.containerName = Input.empty();
        this.immutabilityPeriodSinceCreationInDays = Input.empty();
        this.immutabilityPolicyName = Input.empty();
        this.resourceGroupName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BlobContainerImmutabilityPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<Boolean> allowProtectedAppendWrites;
        private Input<String> containerName;
        private @Nullable Input<Integer> immutabilityPeriodSinceCreationInDays;
        private @Nullable Input<String> immutabilityPolicyName;
        private Input<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(BlobContainerImmutabilityPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.allowProtectedAppendWrites = defaults.allowProtectedAppendWrites;
    	      this.containerName = defaults.containerName;
    	      this.immutabilityPeriodSinceCreationInDays = defaults.immutabilityPeriodSinceCreationInDays;
    	      this.immutabilityPolicyName = defaults.immutabilityPolicyName;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setAllowProtectedAppendWrites(@Nullable Input<Boolean> allowProtectedAppendWrites) {
            this.allowProtectedAppendWrites = allowProtectedAppendWrites;
            return this;
        }

        public Builder setAllowProtectedAppendWrites(@Nullable Boolean allowProtectedAppendWrites) {
            this.allowProtectedAppendWrites = Input.ofNullable(allowProtectedAppendWrites);
            return this;
        }

        public Builder setContainerName(Input<String> containerName) {
            this.containerName = Objects.requireNonNull(containerName);
            return this;
        }

        public Builder setContainerName(String containerName) {
            this.containerName = Input.of(Objects.requireNonNull(containerName));
            return this;
        }

        public Builder setImmutabilityPeriodSinceCreationInDays(@Nullable Input<Integer> immutabilityPeriodSinceCreationInDays) {
            this.immutabilityPeriodSinceCreationInDays = immutabilityPeriodSinceCreationInDays;
            return this;
        }

        public Builder setImmutabilityPeriodSinceCreationInDays(@Nullable Integer immutabilityPeriodSinceCreationInDays) {
            this.immutabilityPeriodSinceCreationInDays = Input.ofNullable(immutabilityPeriodSinceCreationInDays);
            return this;
        }

        public Builder setImmutabilityPolicyName(@Nullable Input<String> immutabilityPolicyName) {
            this.immutabilityPolicyName = immutabilityPolicyName;
            return this;
        }

        public Builder setImmutabilityPolicyName(@Nullable String immutabilityPolicyName) {
            this.immutabilityPolicyName = Input.ofNullable(immutabilityPolicyName);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public BlobContainerImmutabilityPolicyArgs build() {
            return new BlobContainerImmutabilityPolicyArgs(accountName, allowProtectedAppendWrites, containerName, immutabilityPeriodSinceCreationInDays, immutabilityPolicyName, resourceGroupName);
        }
    }
}
