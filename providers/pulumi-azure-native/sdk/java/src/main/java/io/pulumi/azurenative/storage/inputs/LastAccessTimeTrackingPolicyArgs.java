// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.inputs;

import io.pulumi.azurenative.storage.enums.Name;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The blob service properties for Last access time based tracking policy.
 * 
 */
public final class LastAccessTimeTrackingPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final LastAccessTimeTrackingPolicyArgs Empty = new LastAccessTimeTrackingPolicyArgs();

    /**
     * An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
     * 
     */
    @Import(name="blobType")
      private final @Nullable Output<List<String>> blobType;

    public Output<List<String>> getBlobType() {
        return this.blobType == null ? Output.empty() : this.blobType;
    }

    /**
     * When set to true last access time based tracking is enabled.
     * 
     */
    @Import(name="enable", required=true)
      private final Output<Boolean> enable;

    public Output<Boolean> getEnable() {
        return this.enable;
    }

    /**
     * Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
     * 
     */
    @Import(name="name")
      private final @Nullable Output<Either<String,Name>> name;

    public Output<Either<String,Name>> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
     * 
     */
    @Import(name="trackingGranularityInDays")
      private final @Nullable Output<Integer> trackingGranularityInDays;

    public Output<Integer> getTrackingGranularityInDays() {
        return this.trackingGranularityInDays == null ? Output.empty() : this.trackingGranularityInDays;
    }

    public LastAccessTimeTrackingPolicyArgs(
        @Nullable Output<List<String>> blobType,
        Output<Boolean> enable,
        @Nullable Output<Either<String,Name>> name,
        @Nullable Output<Integer> trackingGranularityInDays) {
        this.blobType = blobType;
        this.enable = Objects.requireNonNull(enable, "expected parameter 'enable' to be non-null");
        this.name = name;
        this.trackingGranularityInDays = trackingGranularityInDays;
    }

    private LastAccessTimeTrackingPolicyArgs() {
        this.blobType = Output.empty();
        this.enable = Output.empty();
        this.name = Output.empty();
        this.trackingGranularityInDays = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LastAccessTimeTrackingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> blobType;
        private Output<Boolean> enable;
        private @Nullable Output<Either<String,Name>> name;
        private @Nullable Output<Integer> trackingGranularityInDays;

        public Builder() {
    	      // Empty
        }

        public Builder(LastAccessTimeTrackingPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blobType = defaults.blobType;
    	      this.enable = defaults.enable;
    	      this.name = defaults.name;
    	      this.trackingGranularityInDays = defaults.trackingGranularityInDays;
        }

        public Builder blobType(@Nullable Output<List<String>> blobType) {
            this.blobType = blobType;
            return this;
        }
        public Builder blobType(@Nullable List<String> blobType) {
            this.blobType = Output.ofNullable(blobType);
            return this;
        }
        public Builder blobType(String... blobType) {
            return blobType(List.of(blobType));
        }
        public Builder enable(Output<Boolean> enable) {
            this.enable = Objects.requireNonNull(enable);
            return this;
        }
        public Builder enable(Boolean enable) {
            this.enable = Output.of(Objects.requireNonNull(enable));
            return this;
        }
        public Builder name(@Nullable Output<Either<String,Name>> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable Either<String,Name> name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder trackingGranularityInDays(@Nullable Output<Integer> trackingGranularityInDays) {
            this.trackingGranularityInDays = trackingGranularityInDays;
            return this;
        }
        public Builder trackingGranularityInDays(@Nullable Integer trackingGranularityInDays) {
            this.trackingGranularityInDays = Output.ofNullable(trackingGranularityInDays);
            return this;
        }        public LastAccessTimeTrackingPolicyArgs build() {
            return new LastAccessTimeTrackingPolicyArgs(blobType, enable, name, trackingGranularityInDays);
        }
    }
}
