// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.IPConfigurationBgpPeeringAddressResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class BgpSettingsResponse {
    /**
     * The BGP speaker's ASN.
     * 
     */
    private final @Nullable Double asn;
    /**
     * The BGP peering address and BGP identifier of this BGP speaker.
     * 
     */
    private final @Nullable String bgpPeeringAddress;
    /**
     * BGP peering address with IP configuration ID for virtual network gateway.
     * 
     */
    private final @Nullable List<IPConfigurationBgpPeeringAddressResponse> bgpPeeringAddresses;
    /**
     * The weight added to routes learned from this BGP speaker.
     * 
     */
    private final @Nullable Integer peerWeight;

    @OutputCustomType.Constructor({"asn","bgpPeeringAddress","bgpPeeringAddresses","peerWeight"})
    private BgpSettingsResponse(
        @Nullable Double asn,
        @Nullable String bgpPeeringAddress,
        @Nullable List<IPConfigurationBgpPeeringAddressResponse> bgpPeeringAddresses,
        @Nullable Integer peerWeight) {
        this.asn = asn;
        this.bgpPeeringAddress = bgpPeeringAddress;
        this.bgpPeeringAddresses = bgpPeeringAddresses;
        this.peerWeight = peerWeight;
    }

    /**
     * The BGP speaker's ASN.
     * 
    */
    public Optional<Double> getAsn() {
        return Optional.ofNullable(this.asn);
    }
    /**
     * The BGP peering address and BGP identifier of this BGP speaker.
     * 
    */
    public Optional<String> getBgpPeeringAddress() {
        return Optional.ofNullable(this.bgpPeeringAddress);
    }
    /**
     * BGP peering address with IP configuration ID for virtual network gateway.
     * 
    */
    public List<IPConfigurationBgpPeeringAddressResponse> getBgpPeeringAddresses() {
        return this.bgpPeeringAddresses == null ? List.of() : this.bgpPeeringAddresses;
    }
    /**
     * The weight added to routes learned from this BGP speaker.
     * 
    */
    public Optional<Integer> getPeerWeight() {
        return Optional.ofNullable(this.peerWeight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BgpSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Double asn;
        private @Nullable String bgpPeeringAddress;
        private @Nullable List<IPConfigurationBgpPeeringAddressResponse> bgpPeeringAddresses;
        private @Nullable Integer peerWeight;

        public Builder() {
    	      // Empty
        }

        public Builder(BgpSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asn = defaults.asn;
    	      this.bgpPeeringAddress = defaults.bgpPeeringAddress;
    	      this.bgpPeeringAddresses = defaults.bgpPeeringAddresses;
    	      this.peerWeight = defaults.peerWeight;
        }

        public Builder setAsn(@Nullable Double asn) {
            this.asn = asn;
            return this;
        }

        public Builder setBgpPeeringAddress(@Nullable String bgpPeeringAddress) {
            this.bgpPeeringAddress = bgpPeeringAddress;
            return this;
        }

        public Builder setBgpPeeringAddresses(@Nullable List<IPConfigurationBgpPeeringAddressResponse> bgpPeeringAddresses) {
            this.bgpPeeringAddresses = bgpPeeringAddresses;
            return this;
        }

        public Builder setPeerWeight(@Nullable Integer peerWeight) {
            this.peerWeight = peerWeight;
            return this;
        }
        public BgpSettingsResponse build() {
            return new BgpSettingsResponse(asn, bgpPeeringAddress, bgpPeeringAddresses, peerWeight);
        }
    }
}
