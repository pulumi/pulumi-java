// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.inputs;

import io.pulumi.azurenative.storage.enums.Bypass;
import io.pulumi.azurenative.storage.enums.DefaultAction;
import io.pulumi.azurenative.storage.inputs.IPRuleArgs;
import io.pulumi.azurenative.storage.inputs.ResourceAccessRuleArgs;
import io.pulumi.azurenative.storage.inputs.VirtualNetworkRuleArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Network rule set
 * 
 */
public final class NetworkRuleSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkRuleSetArgs Empty = new NetworkRuleSetArgs();

    /**
     * Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
     * 
     */
    @InputImport(name="bypass")
      private final @Nullable Input<Either<String,Bypass>> bypass;

    public Input<Either<String,Bypass>> getBypass() {
        return this.bypass == null ? Input.empty() : this.bypass;
    }

    /**
     * Specifies the default action of allow or deny when no other rules match.
     * 
     */
    @InputImport(name="defaultAction", required=true)
      private final Input<DefaultAction> defaultAction;

    public Input<DefaultAction> getDefaultAction() {
        return this.defaultAction;
    }

    /**
     * Sets the IP ACL rules
     * 
     */
    @InputImport(name="ipRules")
      private final @Nullable Input<List<IPRuleArgs>> ipRules;

    public Input<List<IPRuleArgs>> getIpRules() {
        return this.ipRules == null ? Input.empty() : this.ipRules;
    }

    /**
     * Sets the resource access rules
     * 
     */
    @InputImport(name="resourceAccessRules")
      private final @Nullable Input<List<ResourceAccessRuleArgs>> resourceAccessRules;

    public Input<List<ResourceAccessRuleArgs>> getResourceAccessRules() {
        return this.resourceAccessRules == null ? Input.empty() : this.resourceAccessRules;
    }

    /**
     * Sets the virtual network rules
     * 
     */
    @InputImport(name="virtualNetworkRules")
      private final @Nullable Input<List<VirtualNetworkRuleArgs>> virtualNetworkRules;

    public Input<List<VirtualNetworkRuleArgs>> getVirtualNetworkRules() {
        return this.virtualNetworkRules == null ? Input.empty() : this.virtualNetworkRules;
    }

    public NetworkRuleSetArgs(
        @Nullable Input<Either<String,Bypass>> bypass,
        Input<DefaultAction> defaultAction,
        @Nullable Input<List<IPRuleArgs>> ipRules,
        @Nullable Input<List<ResourceAccessRuleArgs>> resourceAccessRules,
        @Nullable Input<List<VirtualNetworkRuleArgs>> virtualNetworkRules) {
        this.bypass = bypass == null ? Input.ofLeft("AzureServices") : bypass;
        this.defaultAction = defaultAction == null ? Input.ofNullable(io.pulumi.azurenative.storage.enums.DefaultAction.Allow) : Objects.requireNonNull(defaultAction, "expected parameter 'defaultAction' to be non-null");
        this.ipRules = ipRules;
        this.resourceAccessRules = resourceAccessRules;
        this.virtualNetworkRules = virtualNetworkRules;
    }

    private NetworkRuleSetArgs() {
        this.bypass = Input.empty();
        this.defaultAction = Input.empty();
        this.ipRules = Input.empty();
        this.resourceAccessRules = Input.empty();
        this.virtualNetworkRules = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkRuleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,Bypass>> bypass;
        private Input<DefaultAction> defaultAction;
        private @Nullable Input<List<IPRuleArgs>> ipRules;
        private @Nullable Input<List<ResourceAccessRuleArgs>> resourceAccessRules;
        private @Nullable Input<List<VirtualNetworkRuleArgs>> virtualNetworkRules;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkRuleSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bypass = defaults.bypass;
    	      this.defaultAction = defaults.defaultAction;
    	      this.ipRules = defaults.ipRules;
    	      this.resourceAccessRules = defaults.resourceAccessRules;
    	      this.virtualNetworkRules = defaults.virtualNetworkRules;
        }

        public Builder bypass(@Nullable Input<Either<String,Bypass>> bypass) {
            this.bypass = bypass;
            return this;
        }

        public Builder bypass(@Nullable Either<String,Bypass> bypass) {
            this.bypass = Input.ofNullable(bypass);
            return this;
        }

        public Builder defaultAction(Input<DefaultAction> defaultAction) {
            this.defaultAction = Objects.requireNonNull(defaultAction);
            return this;
        }

        public Builder defaultAction(DefaultAction defaultAction) {
            this.defaultAction = Input.of(Objects.requireNonNull(defaultAction));
            return this;
        }

        public Builder ipRules(@Nullable Input<List<IPRuleArgs>> ipRules) {
            this.ipRules = ipRules;
            return this;
        }

        public Builder ipRules(@Nullable List<IPRuleArgs> ipRules) {
            this.ipRules = Input.ofNullable(ipRules);
            return this;
        }

        public Builder resourceAccessRules(@Nullable Input<List<ResourceAccessRuleArgs>> resourceAccessRules) {
            this.resourceAccessRules = resourceAccessRules;
            return this;
        }

        public Builder resourceAccessRules(@Nullable List<ResourceAccessRuleArgs> resourceAccessRules) {
            this.resourceAccessRules = Input.ofNullable(resourceAccessRules);
            return this;
        }

        public Builder virtualNetworkRules(@Nullable Input<List<VirtualNetworkRuleArgs>> virtualNetworkRules) {
            this.virtualNetworkRules = virtualNetworkRules;
            return this;
        }

        public Builder virtualNetworkRules(@Nullable List<VirtualNetworkRuleArgs> virtualNetworkRules) {
            this.virtualNetworkRules = Input.ofNullable(virtualNetworkRules);
            return this;
        }
        public NetworkRuleSetArgs build() {
            return new NetworkRuleSetArgs(bypass, defaultAction, ipRules, resourceAccessRules, virtualNetworkRules);
        }
    }
}
