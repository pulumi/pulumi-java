// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.providerhub.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThrottlingMetricResponse extends io.pulumi.resources.InvokeArgs {

    public static final ThrottlingMetricResponse Empty = new ThrottlingMetricResponse();

    @Import(name="interval")
      private final @Nullable String interval;

    public Optional<String> getInterval() {
        return this.interval == null ? Optional.empty() : Optional.ofNullable(this.interval);
    }

    @Import(name="limit", required=true)
      private final Double limit;

    public Double getLimit() {
        return this.limit;
    }

    @Import(name="type", required=true)
      private final String type;

    public String getType() {
        return this.type;
    }

    public ThrottlingMetricResponse(
        @Nullable String interval,
        Double limit,
        String type) {
        this.interval = interval;
        this.limit = Objects.requireNonNull(limit, "expected parameter 'limit' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private ThrottlingMetricResponse() {
        this.interval = null;
        this.limit = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThrottlingMetricResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String interval;
        private Double limit;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ThrottlingMetricResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interval = defaults.interval;
    	      this.limit = defaults.limit;
    	      this.type = defaults.type;
        }

        public Builder interval(@Nullable String interval) {
            this.interval = interval;
            return this;
        }
        public Builder limit(Double limit) {
            this.limit = Objects.requireNonNull(limit);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public ThrottlingMetricResponse build() {
            return new ThrottlingMetricResponse(interval, limit, type);
        }
    }
}
