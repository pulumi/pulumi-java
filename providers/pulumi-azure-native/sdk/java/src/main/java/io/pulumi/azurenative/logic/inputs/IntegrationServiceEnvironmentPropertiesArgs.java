// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic.inputs;

import io.pulumi.azurenative.logic.enums.WorkflowProvisioningState;
import io.pulumi.azurenative.logic.enums.WorkflowState;
import io.pulumi.azurenative.logic.inputs.FlowEndpointsConfigurationArgs;
import io.pulumi.azurenative.logic.inputs.IntegrationServiceEnvironmenEncryptionConfigurationArgs;
import io.pulumi.azurenative.logic.inputs.NetworkConfigurationArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The integration service environment properties.
 * 
 */
public final class IntegrationServiceEnvironmentPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final IntegrationServiceEnvironmentPropertiesArgs Empty = new IntegrationServiceEnvironmentPropertiesArgs();

    /**
     * The encryption configuration.
     * 
     */
    @InputImport(name="encryptionConfiguration")
    private final @Nullable Input<IntegrationServiceEnvironmenEncryptionConfigurationArgs> encryptionConfiguration;

    public Input<IntegrationServiceEnvironmenEncryptionConfigurationArgs> getEncryptionConfiguration() {
        return this.encryptionConfiguration == null ? Input.empty() : this.encryptionConfiguration;
    }

    /**
     * The endpoints configuration.
     * 
     */
    @InputImport(name="endpointsConfiguration")
    private final @Nullable Input<FlowEndpointsConfigurationArgs> endpointsConfiguration;

    public Input<FlowEndpointsConfigurationArgs> getEndpointsConfiguration() {
        return this.endpointsConfiguration == null ? Input.empty() : this.endpointsConfiguration;
    }

    /**
     * Gets the tracking id.
     * 
     */
    @InputImport(name="integrationServiceEnvironmentId")
    private final @Nullable Input<String> integrationServiceEnvironmentId;

    public Input<String> getIntegrationServiceEnvironmentId() {
        return this.integrationServiceEnvironmentId == null ? Input.empty() : this.integrationServiceEnvironmentId;
    }

    /**
     * The network configuration.
     * 
     */
    @InputImport(name="networkConfiguration")
    private final @Nullable Input<NetworkConfigurationArgs> networkConfiguration;

    public Input<NetworkConfigurationArgs> getNetworkConfiguration() {
        return this.networkConfiguration == null ? Input.empty() : this.networkConfiguration;
    }

    /**
     * The provisioning state.
     * 
     */
    @InputImport(name="provisioningState")
    private final @Nullable Input<Either<String,WorkflowProvisioningState>> provisioningState;

    public Input<Either<String,WorkflowProvisioningState>> getProvisioningState() {
        return this.provisioningState == null ? Input.empty() : this.provisioningState;
    }

    /**
     * The integration service environment state.
     * 
     */
    @InputImport(name="state")
    private final @Nullable Input<Either<String,WorkflowState>> state;

    public Input<Either<String,WorkflowState>> getState() {
        return this.state == null ? Input.empty() : this.state;
    }

    public IntegrationServiceEnvironmentPropertiesArgs(
        @Nullable Input<IntegrationServiceEnvironmenEncryptionConfigurationArgs> encryptionConfiguration,
        @Nullable Input<FlowEndpointsConfigurationArgs> endpointsConfiguration,
        @Nullable Input<String> integrationServiceEnvironmentId,
        @Nullable Input<NetworkConfigurationArgs> networkConfiguration,
        @Nullable Input<Either<String,WorkflowProvisioningState>> provisioningState,
        @Nullable Input<Either<String,WorkflowState>> state) {
        this.encryptionConfiguration = encryptionConfiguration;
        this.endpointsConfiguration = endpointsConfiguration;
        this.integrationServiceEnvironmentId = integrationServiceEnvironmentId;
        this.networkConfiguration = networkConfiguration;
        this.provisioningState = provisioningState;
        this.state = state;
    }

    private IntegrationServiceEnvironmentPropertiesArgs() {
        this.encryptionConfiguration = Input.empty();
        this.endpointsConfiguration = Input.empty();
        this.integrationServiceEnvironmentId = Input.empty();
        this.networkConfiguration = Input.empty();
        this.provisioningState = Input.empty();
        this.state = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationServiceEnvironmentPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<IntegrationServiceEnvironmenEncryptionConfigurationArgs> encryptionConfiguration;
        private @Nullable Input<FlowEndpointsConfigurationArgs> endpointsConfiguration;
        private @Nullable Input<String> integrationServiceEnvironmentId;
        private @Nullable Input<NetworkConfigurationArgs> networkConfiguration;
        private @Nullable Input<Either<String,WorkflowProvisioningState>> provisioningState;
        private @Nullable Input<Either<String,WorkflowState>> state;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationServiceEnvironmentPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionConfiguration = defaults.encryptionConfiguration;
    	      this.endpointsConfiguration = defaults.endpointsConfiguration;
    	      this.integrationServiceEnvironmentId = defaults.integrationServiceEnvironmentId;
    	      this.networkConfiguration = defaults.networkConfiguration;
    	      this.provisioningState = defaults.provisioningState;
    	      this.state = defaults.state;
        }

        public Builder setEncryptionConfiguration(@Nullable Input<IntegrationServiceEnvironmenEncryptionConfigurationArgs> encryptionConfiguration) {
            this.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        public Builder setEncryptionConfiguration(@Nullable IntegrationServiceEnvironmenEncryptionConfigurationArgs encryptionConfiguration) {
            this.encryptionConfiguration = Input.ofNullable(encryptionConfiguration);
            return this;
        }

        public Builder setEndpointsConfiguration(@Nullable Input<FlowEndpointsConfigurationArgs> endpointsConfiguration) {
            this.endpointsConfiguration = endpointsConfiguration;
            return this;
        }

        public Builder setEndpointsConfiguration(@Nullable FlowEndpointsConfigurationArgs endpointsConfiguration) {
            this.endpointsConfiguration = Input.ofNullable(endpointsConfiguration);
            return this;
        }

        public Builder setIntegrationServiceEnvironmentId(@Nullable Input<String> integrationServiceEnvironmentId) {
            this.integrationServiceEnvironmentId = integrationServiceEnvironmentId;
            return this;
        }

        public Builder setIntegrationServiceEnvironmentId(@Nullable String integrationServiceEnvironmentId) {
            this.integrationServiceEnvironmentId = Input.ofNullable(integrationServiceEnvironmentId);
            return this;
        }

        public Builder setNetworkConfiguration(@Nullable Input<NetworkConfigurationArgs> networkConfiguration) {
            this.networkConfiguration = networkConfiguration;
            return this;
        }

        public Builder setNetworkConfiguration(@Nullable NetworkConfigurationArgs networkConfiguration) {
            this.networkConfiguration = Input.ofNullable(networkConfiguration);
            return this;
        }

        public Builder setProvisioningState(@Nullable Input<Either<String,WorkflowProvisioningState>> provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }

        public Builder setProvisioningState(@Nullable Either<String,WorkflowProvisioningState> provisioningState) {
            this.provisioningState = Input.ofNullable(provisioningState);
            return this;
        }

        public Builder setState(@Nullable Input<Either<String,WorkflowState>> state) {
            this.state = state;
            return this;
        }

        public Builder setState(@Nullable Either<String,WorkflowState> state) {
            this.state = Input.ofNullable(state);
            return this;
        }

        public IntegrationServiceEnvironmentPropertiesArgs build() {
            return new IntegrationServiceEnvironmentPropertiesArgs(encryptionConfiguration, endpointsConfiguration, integrationServiceEnvironmentId, networkConfiguration, provisioningState, state);
        }
    }
}
