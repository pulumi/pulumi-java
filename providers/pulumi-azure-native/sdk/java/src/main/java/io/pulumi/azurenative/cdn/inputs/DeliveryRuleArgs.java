// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn.inputs;

import io.pulumi.azurenative.cdn.inputs.DeliveryRuleCacheExpirationActionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleCacheKeyQueryStringActionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleCookiesConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleHttpVersionConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleIsDeviceConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRulePostArgsConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleQueryStringConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleRemoteAddressConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestBodyConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestHeaderActionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestHeaderConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestMethodConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestSchemeConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleRequestUriConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleResponseHeaderActionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleUrlFileExtensionConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleUrlFileNameConditionArgs;
import io.pulumi.azurenative.cdn.inputs.DeliveryRuleUrlPathConditionArgs;
import io.pulumi.azurenative.cdn.inputs.OriginGroupOverrideActionArgs;
import io.pulumi.azurenative.cdn.inputs.UrlRedirectActionArgs;
import io.pulumi.azurenative.cdn.inputs.UrlRewriteActionArgs;
import io.pulumi.azurenative.cdn.inputs.UrlSigningActionArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A rule that specifies a set of actions and conditions
 * 
 */
public final class DeliveryRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeliveryRuleArgs Empty = new DeliveryRuleArgs();

    /**
     * A list of actions that are executed when all the conditions of a rule are satisfied.
     * 
     */
    @Import(name="actions", required=true)
      private final Output<List<Object>> actions;

    public Output<List<Object>> getActions() {
        return this.actions;
    }

    /**
     * A list of conditions that must be matched for the actions to be executed
     * 
     */
    @Import(name="conditions")
      private final @Nullable Output<List<Object>> conditions;

    public Output<List<Object>> getConditions() {
        return this.conditions == null ? Output.empty() : this.conditions;
    }

    /**
     * Name of the rule
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
     * 
     */
    @Import(name="order", required=true)
      private final Output<Integer> order;

    public Output<Integer> getOrder() {
        return this.order;
    }

    public DeliveryRuleArgs(
        Output<List<Object>> actions,
        @Nullable Output<List<Object>> conditions,
        @Nullable Output<String> name,
        Output<Integer> order) {
        this.actions = Objects.requireNonNull(actions, "expected parameter 'actions' to be non-null");
        this.conditions = conditions;
        this.name = name;
        this.order = Objects.requireNonNull(order, "expected parameter 'order' to be non-null");
    }

    private DeliveryRuleArgs() {
        this.actions = Output.empty();
        this.conditions = Output.empty();
        this.name = Output.empty();
        this.order = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<Object>> actions;
        private @Nullable Output<List<Object>> conditions;
        private @Nullable Output<String> name;
        private Output<Integer> order;

        public Builder() {
    	      // Empty
        }

        public Builder(DeliveryRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.conditions = defaults.conditions;
    	      this.name = defaults.name;
    	      this.order = defaults.order;
        }

        public Builder actions(Output<List<Object>> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }

        public Builder actions(List<Object> actions) {
            this.actions = Output.of(Objects.requireNonNull(actions));
            return this;
        }

        public Builder conditions(@Nullable Output<List<Object>> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder conditions(@Nullable List<Object> conditions) {
            this.conditions = Output.ofNullable(conditions);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder order(Output<Integer> order) {
            this.order = Objects.requireNonNull(order);
            return this;
        }

        public Builder order(Integer order) {
            this.order = Output.of(Objects.requireNonNull(order));
            return this;
        }
        public DeliveryRuleArgs build() {
            return new DeliveryRuleArgs(actions, conditions, name, order);
        }
    }
}
