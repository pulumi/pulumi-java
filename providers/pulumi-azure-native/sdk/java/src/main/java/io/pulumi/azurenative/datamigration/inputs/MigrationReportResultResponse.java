// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Migration validation report result, contains the url for downloading the generated report.
 * 
 */
public final class MigrationReportResultResponse extends io.pulumi.resources.InvokeArgs {

    public static final MigrationReportResultResponse Empty = new MigrationReportResultResponse();

    /**
     * Migration validation result identifier
     * 
     */
    @InputImport(name="id", required=true)
      private final String id;

    public String getId() {
        return this.id;
    }

    /**
     * The url of the report.
     * 
     */
    @InputImport(name="reportUrl", required=true)
      private final String reportUrl;

    public String getReportUrl() {
        return this.reportUrl;
    }

    public MigrationReportResultResponse(
        String id,
        String reportUrl) {
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.reportUrl = Objects.requireNonNull(reportUrl, "expected parameter 'reportUrl' to be non-null");
    }

    private MigrationReportResultResponse() {
        this.id = null;
        this.reportUrl = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationReportResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private String reportUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrationReportResultResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.reportUrl = defaults.reportUrl;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setReportUrl(String reportUrl) {
            this.reportUrl = Objects.requireNonNull(reportUrl);
            return this;
        }
        public MigrationReportResultResponse build() {
            return new MigrationReportResultResponse(id, reportUrl);
        }
    }
}
