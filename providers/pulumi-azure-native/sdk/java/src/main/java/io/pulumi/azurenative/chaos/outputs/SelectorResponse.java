// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.chaos.outputs;

import io.pulumi.azurenative.chaos.outputs.TargetReferenceResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class SelectorResponse {
    /**
     * String of the selector ID.
     * 
     */
    private final String id;
    /**
     * List of Target references.
     * 
     */
    private final List<TargetReferenceResponse> targets;
    /**
     * Enum of the selector type.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private SelectorResponse(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("targets") List<TargetReferenceResponse> targets,
        @CustomType.Parameter("type") String type) {
        this.id = id;
        this.targets = targets;
        this.type = type;
    }

    /**
     * String of the selector ID.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * List of Target references.
     * 
    */
    public List<TargetReferenceResponse> getTargets() {
        return this.targets;
    }
    /**
     * Enum of the selector type.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SelectorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private List<TargetReferenceResponse> targets;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(SelectorResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.targets = defaults.targets;
    	      this.type = defaults.type;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder targets(List<TargetReferenceResponse> targets) {
            this.targets = Objects.requireNonNull(targets);
            return this;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public SelectorResponse build() {
            return new SelectorResponse(id, targets, type);
        }
    }
}
