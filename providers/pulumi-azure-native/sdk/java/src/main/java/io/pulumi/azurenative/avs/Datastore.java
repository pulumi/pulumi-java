// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.avs;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.avs.DatastoreArgs;
import io.pulumi.azurenative.avs.outputs.DiskPoolVolumeResponse;
import io.pulumi.azurenative.avs.outputs.NetAppVolumeResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A datastore resource
 * API Version: 2021-01-01-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:avs:Datastore datastore1 /subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/datastores/datastore1 
 * ```
 * 
 */
@ResourceType(type="azure-native:avs:Datastore")
public class Datastore extends io.pulumi.resources.CustomResource {
    /**
     * An iSCSI volume
     * 
     */
    @Export(name="diskPoolVolume", type=DiskPoolVolumeResponse.class, parameters={})
    private Output</* @Nullable */ DiskPoolVolumeResponse> diskPoolVolume;

    /**
     * @return An iSCSI volume
     * 
     */
    public Output</* @Nullable */ DiskPoolVolumeResponse> diskPoolVolume() {
        return this.diskPoolVolume;
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * An Azure NetApp Files volume
     * 
     */
    @Export(name="netAppVolume", type=NetAppVolumeResponse.class, parameters={})
    private Output</* @Nullable */ NetAppVolumeResponse> netAppVolume;

    /**
     * @return An Azure NetApp Files volume
     * 
     */
    public Output</* @Nullable */ NetAppVolumeResponse> netAppVolume() {
        return this.netAppVolume;
    }
    /**
     * The state of the datastore provisioning
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The state of the datastore provisioning
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Datastore(String name) {
        this(name, DatastoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Datastore(String name, DatastoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Datastore(String name, DatastoreArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:avs:Datastore", name, args == null ? DatastoreArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Datastore(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:avs:Datastore", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:avs/v20210101preview:Datastore").build()),
                Output.of(Alias.builder().type("azure-native:avs/v20210601:Datastore").build()),
                Output.of(Alias.builder().type("azure-native:avs/v20211201:Datastore").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Datastore get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Datastore(name, id, options);
    }
}
