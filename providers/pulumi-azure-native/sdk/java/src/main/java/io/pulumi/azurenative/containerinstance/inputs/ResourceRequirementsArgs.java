// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerinstance.inputs;

import io.pulumi.azurenative.containerinstance.inputs.ResourceLimitsArgs;
import io.pulumi.azurenative.containerinstance.inputs.ResourceRequestsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The resource requirements.
 * 
 */
public final class ResourceRequirementsArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourceRequirementsArgs Empty = new ResourceRequirementsArgs();

    /**
     * The resource limits of this container instance.
     * 
     */
    @InputImport(name="limits")
      private final @Nullable Output<ResourceLimitsArgs> limits;

    public Output<ResourceLimitsArgs> getLimits() {
        return this.limits == null ? Output.empty() : this.limits;
    }

    /**
     * The resource requests of this container instance.
     * 
     */
    @InputImport(name="requests", required=true)
      private final Output<ResourceRequestsArgs> requests;

    public Output<ResourceRequestsArgs> getRequests() {
        return this.requests;
    }

    public ResourceRequirementsArgs(
        @Nullable Output<ResourceLimitsArgs> limits,
        Output<ResourceRequestsArgs> requests) {
        this.limits = limits;
        this.requests = Objects.requireNonNull(requests, "expected parameter 'requests' to be non-null");
    }

    private ResourceRequirementsArgs() {
        this.limits = Output.empty();
        this.requests = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceRequirementsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ResourceLimitsArgs> limits;
        private Output<ResourceRequestsArgs> requests;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceRequirementsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.limits = defaults.limits;
    	      this.requests = defaults.requests;
        }

        public Builder limits(@Nullable Output<ResourceLimitsArgs> limits) {
            this.limits = limits;
            return this;
        }

        public Builder limits(@Nullable ResourceLimitsArgs limits) {
            this.limits = Output.ofNullable(limits);
            return this;
        }

        public Builder requests(Output<ResourceRequestsArgs> requests) {
            this.requests = Objects.requireNonNull(requests);
            return this;
        }

        public Builder requests(ResourceRequestsArgs requests) {
            this.requests = Output.of(Objects.requireNonNull(requests));
            return this;
        }
        public ResourceRequirementsArgs build() {
            return new ResourceRequirementsArgs(limits, requests);
        }
    }
}
