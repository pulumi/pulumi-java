// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.features;

import io.pulumi.azurenative.features.inputs.SubscriptionFeatureRegistrationPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SubscriptionFeatureRegistrationArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubscriptionFeatureRegistrationArgs Empty = new SubscriptionFeatureRegistrationArgs();

    /**
     * The feature name.
     * 
     */
    @InputImport(name="featureName")
    private final @Nullable Input<String> featureName;

    public Input<String> getFeatureName() {
        return this.featureName == null ? Input.empty() : this.featureName;
    }

    @InputImport(name="properties")
    private final @Nullable Input<SubscriptionFeatureRegistrationPropertiesArgs> properties;

    public Input<SubscriptionFeatureRegistrationPropertiesArgs> getProperties() {
        return this.properties == null ? Input.empty() : this.properties;
    }

    /**
     * The provider namespace.
     * 
     */
    @InputImport(name="providerNamespace", required=true)
    private final Input<String> providerNamespace;

    public Input<String> getProviderNamespace() {
        return this.providerNamespace;
    }

    public SubscriptionFeatureRegistrationArgs(
        @Nullable Input<String> featureName,
        @Nullable Input<SubscriptionFeatureRegistrationPropertiesArgs> properties,
        Input<String> providerNamespace) {
        this.featureName = featureName;
        this.properties = properties;
        this.providerNamespace = Objects.requireNonNull(providerNamespace, "expected parameter 'providerNamespace' to be non-null");
    }

    private SubscriptionFeatureRegistrationArgs() {
        this.featureName = Input.empty();
        this.properties = Input.empty();
        this.providerNamespace = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubscriptionFeatureRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> featureName;
        private @Nullable Input<SubscriptionFeatureRegistrationPropertiesArgs> properties;
        private Input<String> providerNamespace;

        public Builder() {
    	      // Empty
        }

        public Builder(SubscriptionFeatureRegistrationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.featureName = defaults.featureName;
    	      this.properties = defaults.properties;
    	      this.providerNamespace = defaults.providerNamespace;
        }

        public Builder setFeatureName(@Nullable Input<String> featureName) {
            this.featureName = featureName;
            return this;
        }

        public Builder setFeatureName(@Nullable String featureName) {
            this.featureName = Input.ofNullable(featureName);
            return this;
        }

        public Builder setProperties(@Nullable Input<SubscriptionFeatureRegistrationPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProperties(@Nullable SubscriptionFeatureRegistrationPropertiesArgs properties) {
            this.properties = Input.ofNullable(properties);
            return this;
        }

        public Builder setProviderNamespace(Input<String> providerNamespace) {
            this.providerNamespace = Objects.requireNonNull(providerNamespace);
            return this;
        }

        public Builder setProviderNamespace(String providerNamespace) {
            this.providerNamespace = Input.of(Objects.requireNonNull(providerNamespace));
            return this;
        }

        public SubscriptionFeatureRegistrationArgs build() {
            return new SubscriptionFeatureRegistrationArgs(featureName, properties, providerNamespace);
        }
    }
}
