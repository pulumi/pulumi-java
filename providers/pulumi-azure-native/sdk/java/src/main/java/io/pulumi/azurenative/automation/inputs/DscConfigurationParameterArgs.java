// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Definition of the configuration parameter type.
 * 
 */
public final class DscConfigurationParameterArgs extends io.pulumi.resources.ResourceArgs {

    public static final DscConfigurationParameterArgs Empty = new DscConfigurationParameterArgs();

    /**
     * Gets or sets the default value of parameter.
     * 
     */
    @InputImport(name="defaultValue")
      private final @Nullable Output<String> defaultValue;

    public Output<String> getDefaultValue() {
        return this.defaultValue == null ? Output.empty() : this.defaultValue;
    }

    /**
     * Gets or sets a Boolean value to indicate whether the parameter is mandatory or not.
     * 
     */
    @InputImport(name="isMandatory")
      private final @Nullable Output<Boolean> isMandatory;

    public Output<Boolean> getIsMandatory() {
        return this.isMandatory == null ? Output.empty() : this.isMandatory;
    }

    /**
     * Get or sets the position of the parameter.
     * 
     */
    @InputImport(name="position")
      private final @Nullable Output<Integer> position;

    public Output<Integer> getPosition() {
        return this.position == null ? Output.empty() : this.position;
    }

    /**
     * Gets or sets the type of the parameter.
     * 
     */
    @InputImport(name="type")
      private final @Nullable Output<String> type;

    public Output<String> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    public DscConfigurationParameterArgs(
        @Nullable Output<String> defaultValue,
        @Nullable Output<Boolean> isMandatory,
        @Nullable Output<Integer> position,
        @Nullable Output<String> type) {
        this.defaultValue = defaultValue;
        this.isMandatory = isMandatory;
        this.position = position;
        this.type = type;
    }

    private DscConfigurationParameterArgs() {
        this.defaultValue = Output.empty();
        this.isMandatory = Output.empty();
        this.position = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DscConfigurationParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> defaultValue;
        private @Nullable Output<Boolean> isMandatory;
        private @Nullable Output<Integer> position;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(DscConfigurationParameterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultValue = defaults.defaultValue;
    	      this.isMandatory = defaults.isMandatory;
    	      this.position = defaults.position;
    	      this.type = defaults.type;
        }

        public Builder defaultValue(@Nullable Output<String> defaultValue) {
            this.defaultValue = defaultValue;
            return this;
        }

        public Builder defaultValue(@Nullable String defaultValue) {
            this.defaultValue = Output.ofNullable(defaultValue);
            return this;
        }

        public Builder isMandatory(@Nullable Output<Boolean> isMandatory) {
            this.isMandatory = isMandatory;
            return this;
        }

        public Builder isMandatory(@Nullable Boolean isMandatory) {
            this.isMandatory = Output.ofNullable(isMandatory);
            return this;
        }

        public Builder position(@Nullable Output<Integer> position) {
            this.position = position;
            return this;
        }

        public Builder position(@Nullable Integer position) {
            this.position = Output.ofNullable(position);
            return this;
        }

        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable String type) {
            this.type = Output.ofNullable(type);
            return this;
        }
        public DscConfigurationParameterArgs build() {
            return new DscConfigurationParameterArgs(defaultValue, isMandatory, position, type);
        }
    }
}
