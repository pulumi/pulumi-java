// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.azurenative.datamigration.outputs.DatabaseTableResponse;
import io.pulumi.azurenative.datamigration.outputs.ReportableExceptionResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetUserTablesSqlSyncTaskOutputResponse {
    /**
     * Mapping from database name to list of source tables
     * 
     */
    private final Map<String,List<DatabaseTableResponse>> databasesToSourceTables;
    /**
     * Mapping from database name to list of target tables
     * 
     */
    private final Map<String,List<DatabaseTableResponse>> databasesToTargetTables;
    /**
     * Mapping from database name to list of validation errors
     * 
     */
    private final Map<String,List<String>> tableValidationErrors;
    /**
     * Validation errors
     * 
     */
    private final List<ReportableExceptionResponse> validationErrors;

    @CustomType.Constructor
    private GetUserTablesSqlSyncTaskOutputResponse(
        @CustomType.Parameter("databasesToSourceTables") Map<String,List<DatabaseTableResponse>> databasesToSourceTables,
        @CustomType.Parameter("databasesToTargetTables") Map<String,List<DatabaseTableResponse>> databasesToTargetTables,
        @CustomType.Parameter("tableValidationErrors") Map<String,List<String>> tableValidationErrors,
        @CustomType.Parameter("validationErrors") List<ReportableExceptionResponse> validationErrors) {
        this.databasesToSourceTables = databasesToSourceTables;
        this.databasesToTargetTables = databasesToTargetTables;
        this.tableValidationErrors = tableValidationErrors;
        this.validationErrors = validationErrors;
    }

    /**
     * Mapping from database name to list of source tables
     * 
    */
    public Map<String,List<DatabaseTableResponse>> databasesToSourceTables() {
        return this.databasesToSourceTables;
    }
    /**
     * Mapping from database name to list of target tables
     * 
    */
    public Map<String,List<DatabaseTableResponse>> databasesToTargetTables() {
        return this.databasesToTargetTables;
    }
    /**
     * Mapping from database name to list of validation errors
     * 
    */
    public Map<String,List<String>> tableValidationErrors() {
        return this.tableValidationErrors;
    }
    /**
     * Validation errors
     * 
    */
    public List<ReportableExceptionResponse> validationErrors() {
        return this.validationErrors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserTablesSqlSyncTaskOutputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,List<DatabaseTableResponse>> databasesToSourceTables;
        private Map<String,List<DatabaseTableResponse>> databasesToTargetTables;
        private Map<String,List<String>> tableValidationErrors;
        private List<ReportableExceptionResponse> validationErrors;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUserTablesSqlSyncTaskOutputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databasesToSourceTables = defaults.databasesToSourceTables;
    	      this.databasesToTargetTables = defaults.databasesToTargetTables;
    	      this.tableValidationErrors = defaults.tableValidationErrors;
    	      this.validationErrors = defaults.validationErrors;
        }

        public Builder databasesToSourceTables(Map<String,List<DatabaseTableResponse>> databasesToSourceTables) {
            this.databasesToSourceTables = Objects.requireNonNull(databasesToSourceTables);
            return this;
        }
        public Builder databasesToTargetTables(Map<String,List<DatabaseTableResponse>> databasesToTargetTables) {
            this.databasesToTargetTables = Objects.requireNonNull(databasesToTargetTables);
            return this;
        }
        public Builder tableValidationErrors(Map<String,List<String>> tableValidationErrors) {
            this.tableValidationErrors = Objects.requireNonNull(tableValidationErrors);
            return this;
        }
        public Builder validationErrors(List<ReportableExceptionResponse> validationErrors) {
            this.validationErrors = Objects.requireNonNull(validationErrors);
            return this;
        }
        public Builder validationErrors(ReportableExceptionResponse... validationErrors) {
            return validationErrors(List.of(validationErrors));
        }        public GetUserTablesSqlSyncTaskOutputResponse build() {
            return new GetUserTablesSqlSyncTaskOutputResponse(databasesToSourceTables, databasesToTargetTables, tableValidationErrors, validationErrors);
        }
    }
}
