// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.streamanalytics;

import io.pulumi.azurenative.streamanalytics.inputs.AvroSerializationArgs;
import io.pulumi.azurenative.streamanalytics.inputs.AzureDataLakeStoreOutputDataSourceArgs;
import io.pulumi.azurenative.streamanalytics.inputs.AzureSqlDatabaseOutputDataSourceArgs;
import io.pulumi.azurenative.streamanalytics.inputs.AzureTableOutputDataSourceArgs;
import io.pulumi.azurenative.streamanalytics.inputs.BlobOutputDataSourceArgs;
import io.pulumi.azurenative.streamanalytics.inputs.CsvSerializationArgs;
import io.pulumi.azurenative.streamanalytics.inputs.DocumentDbOutputDataSourceArgs;
import io.pulumi.azurenative.streamanalytics.inputs.EventHubOutputDataSourceArgs;
import io.pulumi.azurenative.streamanalytics.inputs.JsonSerializationArgs;
import io.pulumi.azurenative.streamanalytics.inputs.PowerBIOutputDataSourceArgs;
import io.pulumi.azurenative.streamanalytics.inputs.ServiceBusQueueOutputDataSourceArgs;
import io.pulumi.azurenative.streamanalytics.inputs.ServiceBusTopicOutputDataSourceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OutputArgs extends io.pulumi.resources.ResourceArgs {

    public static final OutputArgs Empty = new OutputArgs();

    /**
     * Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @InputImport(name="datasource")
      private final @Nullable Output<Object> datasource;

    public Output<Object> getDatasource() {
        return this.datasource == null ? Output.empty() : this.datasource;
    }

    /**
     * The name of the streaming job.
     * 
     */
    @InputImport(name="jobName", required=true)
      private final Output<String> jobName;

    public Output<String> getJobName() {
        return this.jobName;
    }

    /**
     * Resource name
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The name of the output.
     * 
     */
    @InputImport(name="outputName")
      private final @Nullable Output<String> outputName;

    public Output<String> getOutputName() {
        return this.outputName == null ? Output.empty() : this.outputName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
     * 
     */
    @InputImport(name="serialization")
      private final @Nullable Output<Object> serialization;

    public Output<Object> getSerialization() {
        return this.serialization == null ? Output.empty() : this.serialization;
    }

    public OutputArgs(
        @Nullable Output<Object> datasource,
        Output<String> jobName,
        @Nullable Output<String> name,
        @Nullable Output<String> outputName,
        Output<String> resourceGroupName,
        @Nullable Output<Object> serialization) {
        this.datasource = datasource;
        this.jobName = Objects.requireNonNull(jobName, "expected parameter 'jobName' to be non-null");
        this.name = name;
        this.outputName = outputName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serialization = serialization;
    }

    private OutputArgs() {
        this.datasource = Output.empty();
        this.jobName = Output.empty();
        this.name = Output.empty();
        this.outputName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.serialization = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> datasource;
        private Output<String> jobName;
        private @Nullable Output<String> name;
        private @Nullable Output<String> outputName;
        private Output<String> resourceGroupName;
        private @Nullable Output<Object> serialization;

        public Builder() {
    	      // Empty
        }

        public Builder(OutputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasource = defaults.datasource;
    	      this.jobName = defaults.jobName;
    	      this.name = defaults.name;
    	      this.outputName = defaults.outputName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serialization = defaults.serialization;
        }

        public Builder datasource(@Nullable Output<Object> datasource) {
            this.datasource = datasource;
            return this;
        }

        public Builder datasource(@Nullable Object datasource) {
            this.datasource = Output.ofNullable(datasource);
            return this;
        }

        public Builder jobName(Output<String> jobName) {
            this.jobName = Objects.requireNonNull(jobName);
            return this;
        }

        public Builder jobName(String jobName) {
            this.jobName = Output.of(Objects.requireNonNull(jobName));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder outputName(@Nullable Output<String> outputName) {
            this.outputName = outputName;
            return this;
        }

        public Builder outputName(@Nullable String outputName) {
            this.outputName = Output.ofNullable(outputName);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder serialization(@Nullable Output<Object> serialization) {
            this.serialization = serialization;
            return this;
        }

        public Builder serialization(@Nullable Object serialization) {
            this.serialization = Output.ofNullable(serialization);
            return this;
        }
        public OutputArgs build() {
            return new OutputArgs(datasource, jobName, name, outputName, resourceGroupName, serialization);
        }
    }
}
