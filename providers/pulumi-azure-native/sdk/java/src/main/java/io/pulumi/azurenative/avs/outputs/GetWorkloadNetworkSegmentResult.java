// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.avs.outputs;

import io.pulumi.azurenative.avs.outputs.WorkloadNetworkSegmentPortVifResponse;
import io.pulumi.azurenative.avs.outputs.WorkloadNetworkSegmentSubnetResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetWorkloadNetworkSegmentResult {
    private final @Nullable String connectedGateway;
    private final @Nullable String displayName;
    private final String id;
    private final String name;
    private final List<WorkloadNetworkSegmentPortVifResponse> portVif;
    private final String provisioningState;
    private final @Nullable Double revision;
    private final String status;
    private final @Nullable WorkloadNetworkSegmentSubnetResponse subnet;
    private final String type;

    @OutputCustomType.Constructor({"connectedGateway","displayName","id","name","portVif","provisioningState","revision","status","subnet","type"})
    private GetWorkloadNetworkSegmentResult(
        @Nullable String connectedGateway,
        @Nullable String displayName,
        String id,
        String name,
        List<WorkloadNetworkSegmentPortVifResponse> portVif,
        String provisioningState,
        @Nullable Double revision,
        String status,
        @Nullable WorkloadNetworkSegmentSubnetResponse subnet,
        String type) {
        this.connectedGateway = connectedGateway;
        this.displayName = displayName;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.portVif = Objects.requireNonNull(portVif);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.revision = revision;
        this.status = Objects.requireNonNull(status);
        this.subnet = subnet;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getConnectedGateway() {
        return Optional.ofNullable(this.connectedGateway);
    }
    public Optional<String> getDisplayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public List<WorkloadNetworkSegmentPortVifResponse> getPortVif() {
        return this.portVif;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<Double> getRevision() {
        return Optional.ofNullable(this.revision);
    }
    public String getStatus() {
        return this.status;
    }
    public Optional<WorkloadNetworkSegmentSubnetResponse> getSubnet() {
        return Optional.ofNullable(this.subnet);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkloadNetworkSegmentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String connectedGateway;
        private @Nullable String displayName;
        private String id;
        private String name;
        private List<WorkloadNetworkSegmentPortVifResponse> portVif;
        private String provisioningState;
        private @Nullable Double revision;
        private String status;
        private @Nullable WorkloadNetworkSegmentSubnetResponse subnet;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkloadNetworkSegmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectedGateway = defaults.connectedGateway;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.portVif = defaults.portVif;
    	      this.provisioningState = defaults.provisioningState;
    	      this.revision = defaults.revision;
    	      this.status = defaults.status;
    	      this.subnet = defaults.subnet;
    	      this.type = defaults.type;
        }

        public Builder setConnectedGateway(@Nullable String connectedGateway) {
            this.connectedGateway = connectedGateway;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPortVif(List<WorkloadNetworkSegmentPortVifResponse> portVif) {
            this.portVif = Objects.requireNonNull(portVif);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRevision(@Nullable Double revision) {
            this.revision = revision;
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setSubnet(@Nullable WorkloadNetworkSegmentSubnetResponse subnet) {
            this.subnet = subnet;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetWorkloadNetworkSegmentResult build() {
            return new GetWorkloadNetworkSegmentResult(connectedGateway, displayName, id, name, portVif, provisioningState, revision, status, subnet, type);
        }
    }
}
