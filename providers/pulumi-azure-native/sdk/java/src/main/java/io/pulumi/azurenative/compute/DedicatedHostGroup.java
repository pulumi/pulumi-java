// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.compute.DedicatedHostGroupArgs;
import io.pulumi.azurenative.compute.outputs.DedicatedHostGroupInstanceViewResponse;
import io.pulumi.azurenative.compute.outputs.SubResourceReadOnlyResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Specifies information about the dedicated host group that the dedicated hosts should be assigned to. <br><br> Currently, a dedicated host can only be added to a dedicated host group at creation time. An existing dedicated host cannot be added to another dedicated host group.
 * API Version: 2020-12-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:compute:DedicatedHostGroup myDedicatedHostGroup /subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/HostGroups/myDedicatedHostGroup 
 * ```
 * 
 */
@ResourceType(type="azure-native:compute:DedicatedHostGroup")
public class DedicatedHostGroup extends io.pulumi.resources.CustomResource {
    /**
     * A list of references to all dedicated hosts in the dedicated host group.
     * 
     */
    @OutputExport(name="hosts", type=List.class, parameters={SubResourceReadOnlyResponse.class})
    private Output<List<SubResourceReadOnlyResponse>> hosts;

    /**
     * @return A list of references to all dedicated hosts in the dedicated host group.
     * 
     */
    public Output<List<SubResourceReadOnlyResponse>> getHosts() {
        return this.hosts;
    }
    /**
     * The dedicated host group instance view, which has the list of instance view of the dedicated hosts under the dedicated host group.
     * 
     */
    @OutputExport(name="instanceView", type=DedicatedHostGroupInstanceViewResponse.class, parameters={})
    private Output<DedicatedHostGroupInstanceViewResponse> instanceView;

    /**
     * @return The dedicated host group instance view, which has the list of instance view of the dedicated hosts under the dedicated host group.
     * 
     */
    public Output<DedicatedHostGroupInstanceViewResponse> getInstanceView() {
        return this.instanceView;
    }
    /**
     * Resource location
     * 
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Resource location
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * Resource name
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Number of fault domains that the host group can span.
     * 
     */
    @OutputExport(name="platformFaultDomainCount", type=Integer.class, parameters={})
    private Output<Integer> platformFaultDomainCount;

    /**
     * @return Number of fault domains that the host group can span.
     * 
     */
    public Output<Integer> getPlatformFaultDomainCount() {
        return this.platformFaultDomainCount;
    }
    /**
     * Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to 'false' when not provided. <br><br>Minimum api-version: 2020-06-01.
     * 
     */
    @OutputExport(name="supportAutomaticPlacement", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> supportAutomaticPlacement;

    /**
     * @return Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to 'false' when not provided. <br><br>Minimum api-version: 2020-06-01.
     * 
     */
    public Output</* @Nullable */ Boolean> getSupportAutomaticPlacement() {
        return this.supportAutomaticPlacement;
    }
    /**
     * Resource tags
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Resource type
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
     * 
     */
    @OutputExport(name="zones", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> zones;

    /**
     * @return Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
     * 
     */
    public Output</* @Nullable */ List<String>> getZones() {
        return this.zones;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DedicatedHostGroup(String name) {
        this(name, DedicatedHostGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DedicatedHostGroup(String name, DedicatedHostGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DedicatedHostGroup(String name, DedicatedHostGroupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:compute:DedicatedHostGroup", name, args == null ? DedicatedHostGroupArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private DedicatedHostGroup(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:compute:DedicatedHostGroup", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:compute/v20190301:DedicatedHostGroup").build()),
                Input.of(Alias.builder().setType("azure-native:compute/v20190701:DedicatedHostGroup").build()),
                Input.of(Alias.builder().setType("azure-native:compute/v20191201:DedicatedHostGroup").build()),
                Input.of(Alias.builder().setType("azure-native:compute/v20200601:DedicatedHostGroup").build()),
                Input.of(Alias.builder().setType("azure-native:compute/v20201201:DedicatedHostGroup").build()),
                Input.of(Alias.builder().setType("azure-native:compute/v20210301:DedicatedHostGroup").build()),
                Input.of(Alias.builder().setType("azure-native:compute/v20210401:DedicatedHostGroup").build()),
                Input.of(Alias.builder().setType("azure-native:compute/v20210701:DedicatedHostGroup").build()),
                Input.of(Alias.builder().setType("azure-native:compute/v20211101:DedicatedHostGroup").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DedicatedHostGroup get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DedicatedHostGroup(name, id, options);
    }
}
