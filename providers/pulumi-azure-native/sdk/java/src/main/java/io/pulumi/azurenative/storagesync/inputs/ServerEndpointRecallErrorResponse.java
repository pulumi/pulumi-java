// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagesync.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


/**
 * Server endpoint recall error object
 * 
 */
public final class ServerEndpointRecallErrorResponse extends io.pulumi.resources.InvokeArgs {

    public static final ServerEndpointRecallErrorResponse Empty = new ServerEndpointRecallErrorResponse();

    /**
     * Count of occurences of the error
     * 
     */
    @Import(name="count", required=true)
      private final Double count;

    public Double getCount() {
        return this.count;
    }

    /**
     * Error code (HResult)
     * 
     */
    @Import(name="errorCode", required=true)
      private final Integer errorCode;

    public Integer getErrorCode() {
        return this.errorCode;
    }

    public ServerEndpointRecallErrorResponse(
        Double count,
        Integer errorCode) {
        this.count = Objects.requireNonNull(count, "expected parameter 'count' to be non-null");
        this.errorCode = Objects.requireNonNull(errorCode, "expected parameter 'errorCode' to be non-null");
    }

    private ServerEndpointRecallErrorResponse() {
        this.count = null;
        this.errorCode = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerEndpointRecallErrorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double count;
        private Integer errorCode;

        public Builder() {
    	      // Empty
        }

        public Builder(ServerEndpointRecallErrorResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.errorCode = defaults.errorCode;
        }

        public Builder count(Double count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }

        public Builder errorCode(Integer errorCode) {
            this.errorCode = Objects.requireNonNull(errorCode);
            return this;
        }
        public ServerEndpointRecallErrorResponse build() {
            return new ServerEndpointRecallErrorResponse(count, errorCode);
        }
    }
}
