// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.outputs;

import io.pulumi.azurenative.machinelearningservices.outputs.MachineLearningServiceErrorResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.NodeStateCountsResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.ResourceIdResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.ScaleSettingsResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.UserAccountCredentialsResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.VirtualMachineImageResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AmlComputeResponseProperties {
    private final String allocationState;
    private final String allocationStateTransitionTime;
    private final Integer currentNodeCount;
    private final @Nullable Boolean enableNodePublicIp;
    private final List<MachineLearningServiceErrorResponse> errors;
    private final @Nullable Boolean isolatedNetwork;
    private final NodeStateCountsResponse nodeStateCounts;
    private final @Nullable String osType;
    private final @Nullable String remoteLoginPortPublicAccess;
    private final @Nullable ScaleSettingsResponse scaleSettings;
    private final @Nullable ResourceIdResponse subnet;
    private final Integer targetNodeCount;
    private final @Nullable UserAccountCredentialsResponse userAccountCredentials;
    private final @Nullable VirtualMachineImageResponse virtualMachineImage;
    private final @Nullable String vmPriority;
    private final @Nullable String vmSize;

    @OutputCustomType.Constructor({"allocationState","allocationStateTransitionTime","currentNodeCount","enableNodePublicIp","errors","isolatedNetwork","nodeStateCounts","osType","remoteLoginPortPublicAccess","scaleSettings","subnet","targetNodeCount","userAccountCredentials","virtualMachineImage","vmPriority","vmSize"})
    private AmlComputeResponseProperties(
        String allocationState,
        String allocationStateTransitionTime,
        Integer currentNodeCount,
        @Nullable Boolean enableNodePublicIp,
        List<MachineLearningServiceErrorResponse> errors,
        @Nullable Boolean isolatedNetwork,
        NodeStateCountsResponse nodeStateCounts,
        @Nullable String osType,
        @Nullable String remoteLoginPortPublicAccess,
        @Nullable ScaleSettingsResponse scaleSettings,
        @Nullable ResourceIdResponse subnet,
        Integer targetNodeCount,
        @Nullable UserAccountCredentialsResponse userAccountCredentials,
        @Nullable VirtualMachineImageResponse virtualMachineImage,
        @Nullable String vmPriority,
        @Nullable String vmSize) {
        this.allocationState = Objects.requireNonNull(allocationState);
        this.allocationStateTransitionTime = Objects.requireNonNull(allocationStateTransitionTime);
        this.currentNodeCount = Objects.requireNonNull(currentNodeCount);
        this.enableNodePublicIp = enableNodePublicIp;
        this.errors = Objects.requireNonNull(errors);
        this.isolatedNetwork = isolatedNetwork;
        this.nodeStateCounts = Objects.requireNonNull(nodeStateCounts);
        this.osType = osType;
        this.remoteLoginPortPublicAccess = remoteLoginPortPublicAccess;
        this.scaleSettings = scaleSettings;
        this.subnet = subnet;
        this.targetNodeCount = Objects.requireNonNull(targetNodeCount);
        this.userAccountCredentials = userAccountCredentials;
        this.virtualMachineImage = virtualMachineImage;
        this.vmPriority = vmPriority;
        this.vmSize = vmSize;
    }

    public String getAllocationState() {
        return this.allocationState;
    }
    public String getAllocationStateTransitionTime() {
        return this.allocationStateTransitionTime;
    }
    public Integer getCurrentNodeCount() {
        return this.currentNodeCount;
    }
    public Optional<Boolean> getEnableNodePublicIp() {
        return Optional.ofNullable(this.enableNodePublicIp);
    }
    public List<MachineLearningServiceErrorResponse> getErrors() {
        return this.errors;
    }
    public Optional<Boolean> getIsolatedNetwork() {
        return Optional.ofNullable(this.isolatedNetwork);
    }
    public NodeStateCountsResponse getNodeStateCounts() {
        return this.nodeStateCounts;
    }
    public Optional<String> getOsType() {
        return Optional.ofNullable(this.osType);
    }
    public Optional<String> getRemoteLoginPortPublicAccess() {
        return Optional.ofNullable(this.remoteLoginPortPublicAccess);
    }
    public Optional<ScaleSettingsResponse> getScaleSettings() {
        return Optional.ofNullable(this.scaleSettings);
    }
    public Optional<ResourceIdResponse> getSubnet() {
        return Optional.ofNullable(this.subnet);
    }
    public Integer getTargetNodeCount() {
        return this.targetNodeCount;
    }
    public Optional<UserAccountCredentialsResponse> getUserAccountCredentials() {
        return Optional.ofNullable(this.userAccountCredentials);
    }
    public Optional<VirtualMachineImageResponse> getVirtualMachineImage() {
        return Optional.ofNullable(this.virtualMachineImage);
    }
    public Optional<String> getVmPriority() {
        return Optional.ofNullable(this.vmPriority);
    }
    public Optional<String> getVmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AmlComputeResponseProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String allocationState;
        private String allocationStateTransitionTime;
        private Integer currentNodeCount;
        private @Nullable Boolean enableNodePublicIp;
        private List<MachineLearningServiceErrorResponse> errors;
        private @Nullable Boolean isolatedNetwork;
        private NodeStateCountsResponse nodeStateCounts;
        private @Nullable String osType;
        private @Nullable String remoteLoginPortPublicAccess;
        private @Nullable ScaleSettingsResponse scaleSettings;
        private @Nullable ResourceIdResponse subnet;
        private Integer targetNodeCount;
        private @Nullable UserAccountCredentialsResponse userAccountCredentials;
        private @Nullable VirtualMachineImageResponse virtualMachineImage;
        private @Nullable String vmPriority;
        private @Nullable String vmSize;

        public Builder() {
    	      // Empty
        }

        public Builder(AmlComputeResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationState = defaults.allocationState;
    	      this.allocationStateTransitionTime = defaults.allocationStateTransitionTime;
    	      this.currentNodeCount = defaults.currentNodeCount;
    	      this.enableNodePublicIp = defaults.enableNodePublicIp;
    	      this.errors = defaults.errors;
    	      this.isolatedNetwork = defaults.isolatedNetwork;
    	      this.nodeStateCounts = defaults.nodeStateCounts;
    	      this.osType = defaults.osType;
    	      this.remoteLoginPortPublicAccess = defaults.remoteLoginPortPublicAccess;
    	      this.scaleSettings = defaults.scaleSettings;
    	      this.subnet = defaults.subnet;
    	      this.targetNodeCount = defaults.targetNodeCount;
    	      this.userAccountCredentials = defaults.userAccountCredentials;
    	      this.virtualMachineImage = defaults.virtualMachineImage;
    	      this.vmPriority = defaults.vmPriority;
    	      this.vmSize = defaults.vmSize;
        }

        public Builder setAllocationState(String allocationState) {
            this.allocationState = Objects.requireNonNull(allocationState);
            return this;
        }

        public Builder setAllocationStateTransitionTime(String allocationStateTransitionTime) {
            this.allocationStateTransitionTime = Objects.requireNonNull(allocationStateTransitionTime);
            return this;
        }

        public Builder setCurrentNodeCount(Integer currentNodeCount) {
            this.currentNodeCount = Objects.requireNonNull(currentNodeCount);
            return this;
        }

        public Builder setEnableNodePublicIp(@Nullable Boolean enableNodePublicIp) {
            this.enableNodePublicIp = enableNodePublicIp;
            return this;
        }

        public Builder setErrors(List<MachineLearningServiceErrorResponse> errors) {
            this.errors = Objects.requireNonNull(errors);
            return this;
        }

        public Builder setIsolatedNetwork(@Nullable Boolean isolatedNetwork) {
            this.isolatedNetwork = isolatedNetwork;
            return this;
        }

        public Builder setNodeStateCounts(NodeStateCountsResponse nodeStateCounts) {
            this.nodeStateCounts = Objects.requireNonNull(nodeStateCounts);
            return this;
        }

        public Builder setOsType(@Nullable String osType) {
            this.osType = osType;
            return this;
        }

        public Builder setRemoteLoginPortPublicAccess(@Nullable String remoteLoginPortPublicAccess) {
            this.remoteLoginPortPublicAccess = remoteLoginPortPublicAccess;
            return this;
        }

        public Builder setScaleSettings(@Nullable ScaleSettingsResponse scaleSettings) {
            this.scaleSettings = scaleSettings;
            return this;
        }

        public Builder setSubnet(@Nullable ResourceIdResponse subnet) {
            this.subnet = subnet;
            return this;
        }

        public Builder setTargetNodeCount(Integer targetNodeCount) {
            this.targetNodeCount = Objects.requireNonNull(targetNodeCount);
            return this;
        }

        public Builder setUserAccountCredentials(@Nullable UserAccountCredentialsResponse userAccountCredentials) {
            this.userAccountCredentials = userAccountCredentials;
            return this;
        }

        public Builder setVirtualMachineImage(@Nullable VirtualMachineImageResponse virtualMachineImage) {
            this.virtualMachineImage = virtualMachineImage;
            return this;
        }

        public Builder setVmPriority(@Nullable String vmPriority) {
            this.vmPriority = vmPriority;
            return this;
        }

        public Builder setVmSize(@Nullable String vmSize) {
            this.vmSize = vmSize;
            return this;
        }

        public AmlComputeResponseProperties build() {
            return new AmlComputeResponseProperties(allocationState, allocationStateTransitionTime, currentNodeCount, enableNodePublicIp, errors, isolatedNetwork, nodeStateCounts, osType, remoteLoginPortPublicAccess, scaleSettings, subnet, targetNodeCount, userAccountCredentials, virtualMachineImage, vmPriority, vmSize);
        }
    }
}
