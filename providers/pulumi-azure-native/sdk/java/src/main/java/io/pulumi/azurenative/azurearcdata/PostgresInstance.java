// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurearcdata;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.azurearcdata.outputs.ExtendedLocationResponse;
import io.pulumi.azurenative.azurearcdata.outputs.PostgresInstancePropertiesResponse;
import io.pulumi.azurenative.azurearcdata.outputs.PostgresInstanceSkuResponse;
import io.pulumi.azurenative.azurearcdata.outputs.SystemDataResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * A Postgres Instance.
API Version: 2021-06-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create or update a Postgres Instance.
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var postgresInstance = new AzureNative.AzureArcData.PostgresInstance("postgresInstance", new AzureNative.AzureArcData.PostgresInstanceArgs
        {
            ExtendedLocation = new AzureNative.AzureArcData.Inputs.ExtendedLocationArgs
            {
                Name = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
                Type = "CustomLocation",
            },
            Location = "eastus",
            PostgresInstanceName = "testpostgresInstance",
            Properties = new AzureNative.AzureArcData.Inputs.PostgresInstancePropertiesArgs
            {
                Admin = "admin",
                BasicLoginInformation = new AzureNative.AzureArcData.Inputs.BasicLoginInformationArgs
                {
                    Password = "********",
                    Username = "username",
                },
                DataControllerId = "dataControllerId",
                K8sRaw = 
                {
                    { "apiVersion", "apiVersion" },
                    { "kind", "postgresql-12" },
                    { "metadata", 
                    {
                        { "creationTimestamp", "2020-08-25T14:55:10Z" },
                        { "generation", 1 },
                        { "name", "pg1" },
                        { "namespace", "test" },
                        { "resourceVersion", "527780" },
                        { "selfLink", "/apis/arcdata.microsoft.com/v1alpha1/namespaces/test/postgresql-12s/pg1" },
                        { "uid", "1111aaaa-ffff-ffff-ffff-99999aaaaaaa" },
                    } },
                    { "spec", 
                    {
                        { "backups", 
                        {
                            { "deltaMinutes", 3 },
                            { "fullMinutes", 10 },
                            { "tiers", 
                            {
                                
                                {
                                    { "retention", 
                                    {
                                        { "maximums", 
                                        {
                                            "6",
                                            "512MB",
                                        } },
                                        { "minimums", 
                                        {
                                            "3",
                                        } },
                                    } },
                                    { "storage", 
                                    {
                                        { "volumeSize", "1Gi" },
                                    } },
                                },
                            } },
                        } },
                        { "engine", 
                        {
                            { "extensions", 
                            {
                                
                                {
                                    { "name", "citus" },
                                },
                            } },
                        } },
                        { "scale", 
                        {
                            { "shards", 3 },
                        } },
                        { "scheduling", 
                        {
                            { "default", 
                            {
                                { "resources", 
                                {
                                    { "requests", 
                                    {
                                        { "memory", "256Mi" },
                                    } },
                                } },
                            } },
                        } },
                        { "service", 
                        {
                            { "type", "NodePort" },
                        } },
                        { "storage", 
                        {
                            { "data", 
                            {
                                { "className", "local-storage" },
                                { "size", "5Gi" },
                            } },
                            { "logs", 
                            {
                                { "className", "local-storage" },
                                { "size", "5Gi" },
                            } },
                        } },
                    } },
                    { "status", 
                    {
                        { "externalEndpoint", null },
                        { "readyPods", "4/4" },
                        { "state", "Ready" },
                    } },
                },
            },
            ResourceGroupName = "testrg",
            Sku = new AzureNative.AzureArcData.Inputs.PostgresInstanceSkuArgs
            {
                Dev = true,
                Name = "default",
                Tier = "Hyperscale",
            },
        });
    }

}

```

```go
package main

import (
	azurearcdata "github.com/pulumi/pulumi-azure-native/sdk/go/azure/azurearcdata"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := azurearcdata.NewPostgresInstance(ctx, "postgresInstance", &azurearcdata.PostgresInstanceArgs{
			ExtendedLocation: &azurearcdata.ExtendedLocationArgs{
				Name: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation"),
				Type: pulumi.String("CustomLocation"),
			},
			Location:             pulumi.String("eastus"),
			PostgresInstanceName: pulumi.String("testpostgresInstance"),
			Properties: &azurearcdata.PostgresInstancePropertiesArgs{
				Admin: pulumi.String("admin"),
				BasicLoginInformation: &azurearcdata.BasicLoginInformationArgs{
					Password: pulumi.String("********"),
					Username: pulumi.String("username"),
				},
				DataControllerId: pulumi.String("dataControllerId"),
				K8sRaw: pulumi.Any{
					ApiVersion: "apiVersion",
					Kind:       "postgresql-12",
					Metadata: map[string]interface{}{
						"creationTimestamp": "2020-08-25T14:55:10Z",
						"generation":        1,
						"name":              "pg1",
						"namespace":         "test",
						"resourceVersion":   "527780",
						"selfLink":          "/apis/arcdata.microsoft.com/v1alpha1/namespaces/test/postgresql-12s/pg1",
						"uid":               "1111aaaa-ffff-ffff-ffff-99999aaaaaaa",
					},
					Spec: map[string]interface{}{
						"backups": map[string]interface{}{
							"deltaMinutes": 3,
							"fullMinutes":  10,
							"tiers": []map[string]interface{}{
								map[string]interface{}{
									"retention": map[string]interface{}{
										"maximums": []string{
											"6",
											"512MB",
										},
										"minimums": []string{
											"3",
										},
									},
									"storage": map[string]interface{}{
										"volumeSize": "1Gi",
									},
								},
							},
						},
						"engine": map[string]interface{}{
							"extensions": []map[string]interface{}{
								map[string]interface{}{
									"name": "citus",
								},
							},
						},
						"scale": map[string]interface{}{
							"shards": 3,
						},
						"scheduling": map[string]interface{}{
							"default": map[string]interface{}{
								"resources": map[string]interface{}{
									"requests": map[string]interface{}{
										"memory": "256Mi",
									},
								},
							},
						},
						"service": map[string]interface{}{
							"type": "NodePort",
						},
						"storage": map[string]interface{}{
							"data": map[string]interface{}{
								"className": "local-storage",
								"size":      "5Gi",
							},
							"logs": map[string]interface{}{
								"className": "local-storage",
								"size":      "5Gi",
							},
						},
					},
					Status: map[string]interface{}{
						"externalEndpoint": nil,
						"readyPods":        "4/4",
						"state":            "Ready",
					},
				},
			},
			ResourceGroupName: pulumi.String("testrg"),
			Sku: &azurearcdata.PostgresInstanceSkuArgs{
				Dev:  pulumi.Bool(true),
				Name: pulumi.String("default"),
				Tier: "Hyperscale",
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const postgresInstance = new azure_native.azurearcdata.PostgresInstance("postgresInstance", {
    extendedLocation: {
        name: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
        type: "CustomLocation",
    },
    location: "eastus",
    postgresInstanceName: "testpostgresInstance",
    properties: {
        admin: "admin",
        basicLoginInformation: {
            password: "********",
            username: "username",
        },
        dataControllerId: "dataControllerId",
        k8sRaw: {
            apiVersion: "apiVersion",
            kind: "postgresql-12",
            metadata: {
                creationTimestamp: "2020-08-25T14:55:10Z",
                generation: 1,
                name: "pg1",
                namespace: "test",
                resourceVersion: "527780",
                selfLink: "/apis/arcdata.microsoft.com/v1alpha1/namespaces/test/postgresql-12s/pg1",
                uid: "1111aaaa-ffff-ffff-ffff-99999aaaaaaa",
            },
            spec: {
                backups: {
                    deltaMinutes: 3,
                    fullMinutes: 10,
                    tiers: [{
                        retention: {
                            maximums: [
                                "6",
                                "512MB",
                            ],
                            minimums: ["3"],
                        },
                        storage: {
                            volumeSize: "1Gi",
                        },
                    }],
                },
                engine: {
                    extensions: [{
                        name: "citus",
                    }],
                },
                scale: {
                    shards: 3,
                },
                scheduling: {
                    "default": {
                        resources: {
                            requests: {
                                memory: "256Mi",
                            },
                        },
                    },
                },
                service: {
                    type: "NodePort",
                },
                storage: {
                    data: {
                        className: "local-storage",
                        size: "5Gi",
                    },
                    logs: {
                        className: "local-storage",
                        size: "5Gi",
                    },
                },
            },
            status: {
                externalEndpoint: undefined,
                readyPods: "4/4",
                state: "Ready",
            },
        },
    },
    resourceGroupName: "testrg",
    sku: {
        dev: true,
        name: "default",
        tier: "Hyperscale",
    },
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

postgres_instance = azure_native.azurearcdata.PostgresInstance("postgresInstance",
    extended_location=azure_native.azurearcdata.ExtendedLocationArgs(
        name="/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
        type="CustomLocation",
    ),
    location="eastus",
    postgres_instance_name="testpostgresInstance",
    properties=azure_native.azurearcdata.PostgresInstancePropertiesArgs(
        admin="admin",
        basic_login_information=azure_native.azurearcdata.BasicLoginInformationArgs(
            password="********",
            username="username",
        ),
        data_controller_id="dataControllerId",
        k8s_raw={
            "apiVersion": "apiVersion",
            "kind": "postgresql-12",
            "metadata": {
                "creationTimestamp": "2020-08-25T14:55:10Z",
                "generation": 1,
                "name": "pg1",
                "namespace": "test",
                "resourceVersion": "527780",
                "selfLink": "/apis/arcdata.microsoft.com/v1alpha1/namespaces/test/postgresql-12s/pg1",
                "uid": "1111aaaa-ffff-ffff-ffff-99999aaaaaaa",
            },
            "spec": {
                "backups": {
                    "deltaMinutes": 3,
                    "fullMinutes": 10,
                    "tiers": [{
                        "retention": {
                            "maximums": [
                                "6",
                                "512MB",
                            ],
                            "minimums": ["3"],
                        },
                        "storage": {
                            "volumeSize": "1Gi",
                        },
                    }],
                },
                "engine": {
                    "extensions": [{
                        "name": "citus",
                    }],
                },
                "scale": {
                    "shards": 3,
                },
                "scheduling": {
                    "default": {
                        "resources": {
                            "requests": {
                                "memory": "256Mi",
                            },
                        },
                    },
                },
                "service": {
                    "type": "NodePort",
                },
                "storage": {
                    "data": {
                        "className": "local-storage",
                        "size": "5Gi",
                    },
                    "logs": {
                        "className": "local-storage",
                        "size": "5Gi",
                    },
                },
            },
            "status": {
                "externalEndpoint": None,
                "readyPods": "4/4",
                "state": "Ready",
            },
        },
    ),
    resource_group_name="testrg",
    sku=azure_native.azurearcdata.PostgresInstanceSkuArgs(
        dev=True,
        name="default",
        tier="Hyperscale",
    ))

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:azurearcdata:PostgresInstance testsqlregistration /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureArcData/PostgresInstance/testpostgresInstance 
```

 */
@ResourceType(type="azure-native:azurearcdata:PostgresInstance")
public class PostgresInstance extends io.pulumi.resources.CustomResource {
    /**
     * The extendedLocation of the resource.
     */
    @OutputExport(name="extendedLocation", type=ExtendedLocationResponse.class, parameters={})
    private Output</* @Nullable */ ExtendedLocationResponse> extendedLocation;

    /**
     * @return The extendedLocation of the resource.
     */
    public Output</* @Nullable */ ExtendedLocationResponse> getExtendedLocation() {
        return this.extendedLocation;
    }
    /**
     * The geo-location where the resource lives
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * null
     */
    @OutputExport(name="properties", type=PostgresInstancePropertiesResponse.class, parameters={})
    private Output<PostgresInstancePropertiesResponse> properties;

    /**
     * @return null
     */
    public Output<PostgresInstancePropertiesResponse> getProperties() {
        return this.properties;
    }
    /**
     * Resource sku.
     */
    @OutputExport(name="sku", type=PostgresInstanceSkuResponse.class, parameters={})
    private Output</* @Nullable */ PostgresInstanceSkuResponse> sku;

    /**
     * @return Resource sku.
     */
    public Output</* @Nullable */ PostgresInstanceSkuResponse> getSku() {
        return this.sku;
    }
    /**
     * Read only system data
     */
    @OutputExport(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Read only system data
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PostgresInstance(String name, PostgresInstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:azurearcdata:PostgresInstance", name, args == null ? PostgresInstanceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private PostgresInstance(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:azurearcdata:PostgresInstance", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:azurearcdata/v20210601preview:PostgresInstance").build()),
                Input.of(Alias.builder().setType("azure-native:azurearcdata/v20210701preview:PostgresInstance").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PostgresInstance get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new PostgresInstance(name, id, options);
    }
}
