// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.scheduler.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ClientCertAuthenticationResponse {
    /**
     * Gets or sets the certificate expiration date.
     * 
     */
    private final @Nullable String certificateExpirationDate;
    /**
     * Gets or sets the certificate subject name.
     * 
     */
    private final @Nullable String certificateSubjectName;
    /**
     * Gets or sets the certificate thumbprint.
     * 
     */
    private final @Nullable String certificateThumbprint;
    /**
     * Gets or sets the certificate password, return value will always be empty.
     * 
     */
    private final @Nullable String password;
    /**
     * Gets or sets the pfx certificate. Accepts certification in base64 encoding, return value will always be empty.
     * 
     */
    private final @Nullable String pfx;
    /**
     * Gets or sets the HTTP authentication type.
     * Expected value is 'ClientCertificate'.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"certificateExpirationDate","certificateSubjectName","certificateThumbprint","password","pfx","type"})
    private ClientCertAuthenticationResponse(
        @Nullable String certificateExpirationDate,
        @Nullable String certificateSubjectName,
        @Nullable String certificateThumbprint,
        @Nullable String password,
        @Nullable String pfx,
        String type) {
        this.certificateExpirationDate = certificateExpirationDate;
        this.certificateSubjectName = certificateSubjectName;
        this.certificateThumbprint = certificateThumbprint;
        this.password = password;
        this.pfx = pfx;
        this.type = type;
    }

    /**
     * Gets or sets the certificate expiration date.
     * 
    */
    public Optional<String> getCertificateExpirationDate() {
        return Optional.ofNullable(this.certificateExpirationDate);
    }
    /**
     * Gets or sets the certificate subject name.
     * 
    */
    public Optional<String> getCertificateSubjectName() {
        return Optional.ofNullable(this.certificateSubjectName);
    }
    /**
     * Gets or sets the certificate thumbprint.
     * 
    */
    public Optional<String> getCertificateThumbprint() {
        return Optional.ofNullable(this.certificateThumbprint);
    }
    /**
     * Gets or sets the certificate password, return value will always be empty.
     * 
    */
    public Optional<String> getPassword() {
        return Optional.ofNullable(this.password);
    }
    /**
     * Gets or sets the pfx certificate. Accepts certification in base64 encoding, return value will always be empty.
     * 
    */
    public Optional<String> getPfx() {
        return Optional.ofNullable(this.pfx);
    }
    /**
     * Gets or sets the HTTP authentication type.
     * Expected value is 'ClientCertificate'.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClientCertAuthenticationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String certificateExpirationDate;
        private @Nullable String certificateSubjectName;
        private @Nullable String certificateThumbprint;
        private @Nullable String password;
        private @Nullable String pfx;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ClientCertAuthenticationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateExpirationDate = defaults.certificateExpirationDate;
    	      this.certificateSubjectName = defaults.certificateSubjectName;
    	      this.certificateThumbprint = defaults.certificateThumbprint;
    	      this.password = defaults.password;
    	      this.pfx = defaults.pfx;
    	      this.type = defaults.type;
        }

        public Builder setCertificateExpirationDate(@Nullable String certificateExpirationDate) {
            this.certificateExpirationDate = certificateExpirationDate;
            return this;
        }

        public Builder setCertificateSubjectName(@Nullable String certificateSubjectName) {
            this.certificateSubjectName = certificateSubjectName;
            return this;
        }

        public Builder setCertificateThumbprint(@Nullable String certificateThumbprint) {
            this.certificateThumbprint = certificateThumbprint;
            return this;
        }

        public Builder setPassword(@Nullable String password) {
            this.password = password;
            return this;
        }

        public Builder setPfx(@Nullable String pfx) {
            this.pfx = pfx;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ClientCertAuthenticationResponse build() {
            return new ClientCertAuthenticationResponse(certificateExpirationDate, certificateSubjectName, certificateThumbprint, password, pfx, type);
        }
    }
}
