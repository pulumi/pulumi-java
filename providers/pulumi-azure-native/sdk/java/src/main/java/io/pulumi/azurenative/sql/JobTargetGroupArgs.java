// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.sql.inputs.JobTargetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobTargetGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobTargetGroupArgs Empty = new JobTargetGroupArgs();

    /**
     * The name of the job agent.
     * 
     */
    @InputImport(name="jobAgentName", required=true)
      private final Output<String> jobAgentName;

    public Output<String> getJobAgentName() {
        return this.jobAgentName;
    }

    /**
     * Members of the target group.
     * 
     */
    @InputImport(name="members", required=true)
      private final Output<List<JobTargetArgs>> members;

    public Output<List<JobTargetArgs>> getMembers() {
        return this.members;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @InputImport(name="serverName", required=true)
      private final Output<String> serverName;

    public Output<String> getServerName() {
        return this.serverName;
    }

    /**
     * The name of the target group.
     * 
     */
    @InputImport(name="targetGroupName")
      private final @Nullable Output<String> targetGroupName;

    public Output<String> getTargetGroupName() {
        return this.targetGroupName == null ? Output.empty() : this.targetGroupName;
    }

    public JobTargetGroupArgs(
        Output<String> jobAgentName,
        Output<List<JobTargetArgs>> members,
        Output<String> resourceGroupName,
        Output<String> serverName,
        @Nullable Output<String> targetGroupName) {
        this.jobAgentName = Objects.requireNonNull(jobAgentName, "expected parameter 'jobAgentName' to be non-null");
        this.members = Objects.requireNonNull(members, "expected parameter 'members' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serverName = Objects.requireNonNull(serverName, "expected parameter 'serverName' to be non-null");
        this.targetGroupName = targetGroupName;
    }

    private JobTargetGroupArgs() {
        this.jobAgentName = Output.empty();
        this.members = Output.empty();
        this.resourceGroupName = Output.empty();
        this.serverName = Output.empty();
        this.targetGroupName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTargetGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> jobAgentName;
        private Output<List<JobTargetArgs>> members;
        private Output<String> resourceGroupName;
        private Output<String> serverName;
        private @Nullable Output<String> targetGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(JobTargetGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jobAgentName = defaults.jobAgentName;
    	      this.members = defaults.members;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serverName = defaults.serverName;
    	      this.targetGroupName = defaults.targetGroupName;
        }

        public Builder jobAgentName(Output<String> jobAgentName) {
            this.jobAgentName = Objects.requireNonNull(jobAgentName);
            return this;
        }

        public Builder jobAgentName(String jobAgentName) {
            this.jobAgentName = Output.of(Objects.requireNonNull(jobAgentName));
            return this;
        }

        public Builder members(Output<List<JobTargetArgs>> members) {
            this.members = Objects.requireNonNull(members);
            return this;
        }

        public Builder members(List<JobTargetArgs> members) {
            this.members = Output.of(Objects.requireNonNull(members));
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder serverName(Output<String> serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }

        public Builder serverName(String serverName) {
            this.serverName = Output.of(Objects.requireNonNull(serverName));
            return this;
        }

        public Builder targetGroupName(@Nullable Output<String> targetGroupName) {
            this.targetGroupName = targetGroupName;
            return this;
        }

        public Builder targetGroupName(@Nullable String targetGroupName) {
            this.targetGroupName = Output.ofNullable(targetGroupName);
            return this;
        }
        public JobTargetGroupArgs build() {
            return new JobTargetGroupArgs(jobAgentName, members, resourceGroupName, serverName, targetGroupName);
        }
    }
}
