// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.customerinsights.inputs;

import io.pulumi.azurenative.customerinsights.enums.CompletionOperationTypes;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The complete operation.
 * 
 */
public final class ConnectorMappingCompleteOperationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConnectorMappingCompleteOperationArgs Empty = new ConnectorMappingCompleteOperationArgs();

    /**
     * The type of completion operation.
     * 
     */
    @InputImport(name="completionOperationType")
        private final @Nullable Input<CompletionOperationTypes> completionOperationType;

    public Input<CompletionOperationTypes> getCompletionOperationType() {
        return this.completionOperationType == null ? Input.empty() : this.completionOperationType;
    }

    /**
     * The destination folder where files will be moved to once the import is done.
     * 
     */
    @InputImport(name="destinationFolder")
        private final @Nullable Input<String> destinationFolder;

    public Input<String> getDestinationFolder() {
        return this.destinationFolder == null ? Input.empty() : this.destinationFolder;
    }

    public ConnectorMappingCompleteOperationArgs(
        @Nullable Input<CompletionOperationTypes> completionOperationType,
        @Nullable Input<String> destinationFolder) {
        this.completionOperationType = completionOperationType;
        this.destinationFolder = destinationFolder;
    }

    private ConnectorMappingCompleteOperationArgs() {
        this.completionOperationType = Input.empty();
        this.destinationFolder = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorMappingCompleteOperationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<CompletionOperationTypes> completionOperationType;
        private @Nullable Input<String> destinationFolder;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectorMappingCompleteOperationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.completionOperationType = defaults.completionOperationType;
    	      this.destinationFolder = defaults.destinationFolder;
        }

        public Builder setCompletionOperationType(@Nullable Input<CompletionOperationTypes> completionOperationType) {
            this.completionOperationType = completionOperationType;
            return this;
        }

        public Builder setCompletionOperationType(@Nullable CompletionOperationTypes completionOperationType) {
            this.completionOperationType = Input.ofNullable(completionOperationType);
            return this;
        }

        public Builder setDestinationFolder(@Nullable Input<String> destinationFolder) {
            this.destinationFolder = destinationFolder;
            return this;
        }

        public Builder setDestinationFolder(@Nullable String destinationFolder) {
            this.destinationFolder = Input.ofNullable(destinationFolder);
            return this;
        }
        public ConnectorMappingCompleteOperationArgs build() {
            return new ConnectorMappingCompleteOperationArgs(completionOperationType, destinationFolder);
        }
    }
}
