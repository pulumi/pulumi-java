// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.portal;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.portal.UserSettingsWithLocationArgs;
import io.pulumi.azurenative.portal.outputs.UserPropertiesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Response to get user settings
API Version: 2018-10-01.

{{% examples %}}
## Example Usage
{{% example %}}
### PutUserSettings
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var userSettingsWithLocation = new AzureNative.Portal.UserSettingsWithLocation("userSettingsWithLocation", new AzureNative.Portal.UserSettingsWithLocationArgs
        {
            Location = "eastus",
            Properties = new AzureNative.Portal.Inputs.UserPropertiesArgs
            {
                PreferredLocation = "eastus",
                PreferredOsType = "Linux",
                PreferredShellType = "bash",
                StorageProfile = new AzureNative.Portal.Inputs.StorageProfileArgs
                {
                    DiskSizeInGB = 5,
                    FileShareName = "string",
                    StorageAccountResourceId = "string",
                },
                TerminalSettings = new AzureNative.Portal.Inputs.TerminalSettingsArgs
                {
                    FontSize = "Medium",
                    FontStyle = "Monospace",
                },
            },
            UserSettingsName = "cloudconsole",
        });
    }

}

```

```go
package main

import (
	portal "github.com/pulumi/pulumi-azure-native/sdk/go/azure/portal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := portal.NewUserSettingsWithLocation(ctx, "userSettingsWithLocation", &portal.UserSettingsWithLocationArgs{
			Location: pulumi.String("eastus"),
			Properties: &portal.UserPropertiesArgs{
				PreferredLocation:  pulumi.String("eastus"),
				PreferredOsType:    pulumi.String("Linux"),
				PreferredShellType: pulumi.String("bash"),
				StorageProfile: &portal.StorageProfileArgs{
					DiskSizeInGB:             pulumi.Int(5),
					FileShareName:            pulumi.String("string"),
					StorageAccountResourceId: pulumi.String("string"),
				},
				TerminalSettings: &portal.TerminalSettingsArgs{
					FontSize:  pulumi.String("Medium"),
					FontStyle: pulumi.String("Monospace"),
				},
			},
			UserSettingsName: pulumi.String("cloudconsole"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const userSettingsWithLocation = new azure_native.portal.UserSettingsWithLocation("userSettingsWithLocation", {
    location: "eastus",
    properties: {
        preferredLocation: "eastus",
        preferredOsType: "Linux",
        preferredShellType: "bash",
        storageProfile: {
            diskSizeInGB: 5,
            fileShareName: "string",
            storageAccountResourceId: "string",
        },
        terminalSettings: {
            fontSize: "Medium",
            fontStyle: "Monospace",
        },
    },
    userSettingsName: "cloudconsole",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

user_settings_with_location = azure_native.portal.UserSettingsWithLocation("userSettingsWithLocation",
    location="eastus",
    properties=azure_native.portal.UserPropertiesArgs(
        preferred_location="eastus",
        preferred_os_type="Linux",
        preferred_shell_type="bash",
        storage_profile=azure_native.portal.StorageProfileArgs(
            disk_size_in_gb=5,
            file_share_name="string",
            storage_account_resource_id="string",
        ),
        terminal_settings=azure_native.portal.TerminalSettingsArgs(
            font_size="Medium",
            font_style="Monospace",
        ),
    ),
    user_settings_name="cloudconsole")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:portal:UserSettingsWithLocation myresource1 /providers/Microsoft.Portal/locations/{location}/userSettings/{userSettingsName} 
```

 */
@ResourceType(type="azure-native:portal:UserSettingsWithLocation")
public class UserSettingsWithLocation extends io.pulumi.resources.CustomResource {
    /**
     * The cloud shell user settings properties.
     */
    @OutputExport(name="properties", type=UserPropertiesResponse.class, parameters={})
    private Output<UserPropertiesResponse> properties;

    /**
     * @return The cloud shell user settings properties.
     */
    public Output<UserPropertiesResponse> getProperties() {
        return this.properties;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserSettingsWithLocation(String name, UserSettingsWithLocationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:portal:UserSettingsWithLocation", name, args == null ? UserSettingsWithLocationArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private UserSettingsWithLocation(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:portal:UserSettingsWithLocation", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:portal/v20181001:UserSettingsWithLocation").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserSettingsWithLocation get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UserSettingsWithLocation(name, id, options);
    }
}
