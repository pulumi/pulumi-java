// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.management.outputs;

import io.pulumi.azurenative.management.outputs.EntityParentGroupInfoResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class EntityInfoResponse {
    private final @Nullable String displayName;
    private final String id;
    private final @Nullable String inheritedPermissions;
    private final String name;
    private final @Nullable Integer numberOfChildGroups;
    private final @Nullable Integer numberOfChildren;
    private final @Nullable Integer numberOfDescendants;
    private final @Nullable EntityParentGroupInfoResponse parent;
    private final @Nullable List<String> parentDisplayNameChain;
    private final @Nullable List<String> parentNameChain;
    private final @Nullable String permissions;
    private final @Nullable String tenantId;
    private final String type;

    @OutputCustomType.Constructor({"displayName","id","inheritedPermissions","name","numberOfChildGroups","numberOfChildren","numberOfDescendants","parent","parentDisplayNameChain","parentNameChain","permissions","tenantId","type"})
    private EntityInfoResponse(
        @Nullable String displayName,
        String id,
        @Nullable String inheritedPermissions,
        String name,
        @Nullable Integer numberOfChildGroups,
        @Nullable Integer numberOfChildren,
        @Nullable Integer numberOfDescendants,
        @Nullable EntityParentGroupInfoResponse parent,
        @Nullable List<String> parentDisplayNameChain,
        @Nullable List<String> parentNameChain,
        @Nullable String permissions,
        @Nullable String tenantId,
        String type) {
        this.displayName = displayName;
        this.id = Objects.requireNonNull(id);
        this.inheritedPermissions = inheritedPermissions;
        this.name = Objects.requireNonNull(name);
        this.numberOfChildGroups = numberOfChildGroups;
        this.numberOfChildren = numberOfChildren;
        this.numberOfDescendants = numberOfDescendants;
        this.parent = parent;
        this.parentDisplayNameChain = parentDisplayNameChain;
        this.parentNameChain = parentNameChain;
        this.permissions = permissions;
        this.tenantId = tenantId;
        this.type = Objects.requireNonNull(type);
    }

    public Optional<String> getDisplayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String getId() {
        return this.id;
    }
    public Optional<String> getInheritedPermissions() {
        return Optional.ofNullable(this.inheritedPermissions);
    }
    public String getName() {
        return this.name;
    }
    public Optional<Integer> getNumberOfChildGroups() {
        return Optional.ofNullable(this.numberOfChildGroups);
    }
    public Optional<Integer> getNumberOfChildren() {
        return Optional.ofNullable(this.numberOfChildren);
    }
    public Optional<Integer> getNumberOfDescendants() {
        return Optional.ofNullable(this.numberOfDescendants);
    }
    public Optional<EntityParentGroupInfoResponse> getParent() {
        return Optional.ofNullable(this.parent);
    }
    public List<String> getParentDisplayNameChain() {
        return this.parentDisplayNameChain == null ? List.of() : this.parentDisplayNameChain;
    }
    public List<String> getParentNameChain() {
        return this.parentNameChain == null ? List.of() : this.parentNameChain;
    }
    public Optional<String> getPermissions() {
        return Optional.ofNullable(this.permissions);
    }
    public Optional<String> getTenantId() {
        return Optional.ofNullable(this.tenantId);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EntityInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String displayName;
        private String id;
        private @Nullable String inheritedPermissions;
        private String name;
        private @Nullable Integer numberOfChildGroups;
        private @Nullable Integer numberOfChildren;
        private @Nullable Integer numberOfDescendants;
        private @Nullable EntityParentGroupInfoResponse parent;
        private @Nullable List<String> parentDisplayNameChain;
        private @Nullable List<String> parentNameChain;
        private @Nullable String permissions;
        private @Nullable String tenantId;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(EntityInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.inheritedPermissions = defaults.inheritedPermissions;
    	      this.name = defaults.name;
    	      this.numberOfChildGroups = defaults.numberOfChildGroups;
    	      this.numberOfChildren = defaults.numberOfChildren;
    	      this.numberOfDescendants = defaults.numberOfDescendants;
    	      this.parent = defaults.parent;
    	      this.parentDisplayNameChain = defaults.parentDisplayNameChain;
    	      this.parentNameChain = defaults.parentNameChain;
    	      this.permissions = defaults.permissions;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInheritedPermissions(@Nullable String inheritedPermissions) {
            this.inheritedPermissions = inheritedPermissions;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNumberOfChildGroups(@Nullable Integer numberOfChildGroups) {
            this.numberOfChildGroups = numberOfChildGroups;
            return this;
        }

        public Builder setNumberOfChildren(@Nullable Integer numberOfChildren) {
            this.numberOfChildren = numberOfChildren;
            return this;
        }

        public Builder setNumberOfDescendants(@Nullable Integer numberOfDescendants) {
            this.numberOfDescendants = numberOfDescendants;
            return this;
        }

        public Builder setParent(@Nullable EntityParentGroupInfoResponse parent) {
            this.parent = parent;
            return this;
        }

        public Builder setParentDisplayNameChain(@Nullable List<String> parentDisplayNameChain) {
            this.parentDisplayNameChain = parentDisplayNameChain;
            return this;
        }

        public Builder setParentNameChain(@Nullable List<String> parentNameChain) {
            this.parentNameChain = parentNameChain;
            return this;
        }

        public Builder setPermissions(@Nullable String permissions) {
            this.permissions = permissions;
            return this;
        }

        public Builder setTenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public EntityInfoResponse build() {
            return new EntityInfoResponse(displayName, id, inheritedPermissions, name, numberOfChildGroups, numberOfChildren, numberOfDescendants, parent, parentDisplayNameChain, parentNameChain, permissions, tenantId, type);
        }
    }
}
