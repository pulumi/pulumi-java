// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class AddRemoveReplicaScalingMechanismResponse {
    /**
     * Enumerates the mechanisms for auto scaling.
     * Expected value is 'AddRemoveReplica'.
     * 
     */
    private final String kind;
    /**
     * Maximum number of containers (scale up won't be performed above this number).
     * 
     */
    private final Integer maxCount;
    /**
     * Minimum number of containers (scale down won't be performed below this number).
     * 
     */
    private final Integer minCount;
    /**
     * Each time auto scaling is performed, this number of containers will be added or removed.
     * 
     */
    private final Integer scaleIncrement;

    @OutputCustomType.Constructor({"kind","maxCount","minCount","scaleIncrement"})
    private AddRemoveReplicaScalingMechanismResponse(
        String kind,
        Integer maxCount,
        Integer minCount,
        Integer scaleIncrement) {
        this.kind = Objects.requireNonNull(kind);
        this.maxCount = Objects.requireNonNull(maxCount);
        this.minCount = Objects.requireNonNull(minCount);
        this.scaleIncrement = Objects.requireNonNull(scaleIncrement);
    }

    /**
     * Enumerates the mechanisms for auto scaling.
     * Expected value is 'AddRemoveReplica'.
     * 
     */
    public String getKind() {
        return this.kind;
    }
    /**
     * Maximum number of containers (scale up won't be performed above this number).
     * 
     */
    public Integer getMaxCount() {
        return this.maxCount;
    }
    /**
     * Minimum number of containers (scale down won't be performed below this number).
     * 
     */
    public Integer getMinCount() {
        return this.minCount;
    }
    /**
     * Each time auto scaling is performed, this number of containers will be added or removed.
     * 
     */
    public Integer getScaleIncrement() {
        return this.scaleIncrement;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AddRemoveReplicaScalingMechanismResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String kind;
        private Integer maxCount;
        private Integer minCount;
        private Integer scaleIncrement;

        public Builder() {
    	      // Empty
        }

        public Builder(AddRemoveReplicaScalingMechanismResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kind = defaults.kind;
    	      this.maxCount = defaults.maxCount;
    	      this.minCount = defaults.minCount;
    	      this.scaleIncrement = defaults.scaleIncrement;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setMaxCount(Integer maxCount) {
            this.maxCount = Objects.requireNonNull(maxCount);
            return this;
        }

        public Builder setMinCount(Integer minCount) {
            this.minCount = Objects.requireNonNull(minCount);
            return this;
        }

        public Builder setScaleIncrement(Integer scaleIncrement) {
            this.scaleIncrement = Objects.requireNonNull(scaleIncrement);
            return this;
        }

        public AddRemoveReplicaScalingMechanismResponse build() {
            return new AddRemoveReplicaScalingMechanismResponse(kind, maxCount, minCount, scaleIncrement);
        }
    }
}
