// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.azurestack.outputs;

import io.pulumi.azurenative.azurestack.outputs.DataDiskImageResponse;
import io.pulumi.azurenative.azurestack.outputs.OsDiskImageResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ListProductDetailsResult {
    /**
     * Specifies kind of compute role included in the package.
     * 
     */
    private final String computeRole;
    /**
     * List of attached data disks.
     * 
     */
    private final List<DataDiskImageResponse> dataDiskImages;
    /**
     * The URI to the .azpkg file that provides information required for showing product in the gallery.
     * 
     */
    private final String galleryPackageBlobSasUri;
    /**
     * Specifies if product is a Virtual Machine Extension.
     * 
     */
    private final Boolean isSystemExtension;
    /**
     * OS disk image used by product.
     * 
     */
    private final OsDiskImageResponse osDiskImage;
    /**
     * Specifies the kind of the product (virtualMachine or virtualMachineExtension).
     * 
     */
    private final String productKind;
    /**
     * Indicates if specified product supports multiple extensions.
     * 
     */
    private final Boolean supportMultipleExtensions;
    /**
     * The URI.
     * 
     */
    private final String uri;
    /**
     * Specifies product version.
     * 
     */
    private final String version;
    /**
     * Specifies operating system used by the product.
     * 
     */
    private final String vmOsType;
    /**
     * Indicates if virtual machine Scale Set is enabled in the specified product.
     * 
     */
    private final Boolean vmScaleSetEnabled;

    @CustomType.Constructor
    private ListProductDetailsResult(
        @CustomType.Parameter("computeRole") String computeRole,
        @CustomType.Parameter("dataDiskImages") List<DataDiskImageResponse> dataDiskImages,
        @CustomType.Parameter("galleryPackageBlobSasUri") String galleryPackageBlobSasUri,
        @CustomType.Parameter("isSystemExtension") Boolean isSystemExtension,
        @CustomType.Parameter("osDiskImage") OsDiskImageResponse osDiskImage,
        @CustomType.Parameter("productKind") String productKind,
        @CustomType.Parameter("supportMultipleExtensions") Boolean supportMultipleExtensions,
        @CustomType.Parameter("uri") String uri,
        @CustomType.Parameter("version") String version,
        @CustomType.Parameter("vmOsType") String vmOsType,
        @CustomType.Parameter("vmScaleSetEnabled") Boolean vmScaleSetEnabled) {
        this.computeRole = computeRole;
        this.dataDiskImages = dataDiskImages;
        this.galleryPackageBlobSasUri = galleryPackageBlobSasUri;
        this.isSystemExtension = isSystemExtension;
        this.osDiskImage = osDiskImage;
        this.productKind = productKind;
        this.supportMultipleExtensions = supportMultipleExtensions;
        this.uri = uri;
        this.version = version;
        this.vmOsType = vmOsType;
        this.vmScaleSetEnabled = vmScaleSetEnabled;
    }

    /**
     * Specifies kind of compute role included in the package.
     * 
    */
    public String getComputeRole() {
        return this.computeRole;
    }
    /**
     * List of attached data disks.
     * 
    */
    public List<DataDiskImageResponse> getDataDiskImages() {
        return this.dataDiskImages;
    }
    /**
     * The URI to the .azpkg file that provides information required for showing product in the gallery.
     * 
    */
    public String getGalleryPackageBlobSasUri() {
        return this.galleryPackageBlobSasUri;
    }
    /**
     * Specifies if product is a Virtual Machine Extension.
     * 
    */
    public Boolean getIsSystemExtension() {
        return this.isSystemExtension;
    }
    /**
     * OS disk image used by product.
     * 
    */
    public OsDiskImageResponse getOsDiskImage() {
        return this.osDiskImage;
    }
    /**
     * Specifies the kind of the product (virtualMachine or virtualMachineExtension).
     * 
    */
    public String getProductKind() {
        return this.productKind;
    }
    /**
     * Indicates if specified product supports multiple extensions.
     * 
    */
    public Boolean getSupportMultipleExtensions() {
        return this.supportMultipleExtensions;
    }
    /**
     * The URI.
     * 
    */
    public String getUri() {
        return this.uri;
    }
    /**
     * Specifies product version.
     * 
    */
    public String getVersion() {
        return this.version;
    }
    /**
     * Specifies operating system used by the product.
     * 
    */
    public String getVmOsType() {
        return this.vmOsType;
    }
    /**
     * Indicates if virtual machine Scale Set is enabled in the specified product.
     * 
    */
    public Boolean getVmScaleSetEnabled() {
        return this.vmScaleSetEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListProductDetailsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String computeRole;
        private List<DataDiskImageResponse> dataDiskImages;
        private String galleryPackageBlobSasUri;
        private Boolean isSystemExtension;
        private OsDiskImageResponse osDiskImage;
        private String productKind;
        private Boolean supportMultipleExtensions;
        private String uri;
        private String version;
        private String vmOsType;
        private Boolean vmScaleSetEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(ListProductDetailsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeRole = defaults.computeRole;
    	      this.dataDiskImages = defaults.dataDiskImages;
    	      this.galleryPackageBlobSasUri = defaults.galleryPackageBlobSasUri;
    	      this.isSystemExtension = defaults.isSystemExtension;
    	      this.osDiskImage = defaults.osDiskImage;
    	      this.productKind = defaults.productKind;
    	      this.supportMultipleExtensions = defaults.supportMultipleExtensions;
    	      this.uri = defaults.uri;
    	      this.version = defaults.version;
    	      this.vmOsType = defaults.vmOsType;
    	      this.vmScaleSetEnabled = defaults.vmScaleSetEnabled;
        }

        public Builder computeRole(String computeRole) {
            this.computeRole = Objects.requireNonNull(computeRole);
            return this;
        }

        public Builder dataDiskImages(List<DataDiskImageResponse> dataDiskImages) {
            this.dataDiskImages = Objects.requireNonNull(dataDiskImages);
            return this;
        }

        public Builder galleryPackageBlobSasUri(String galleryPackageBlobSasUri) {
            this.galleryPackageBlobSasUri = Objects.requireNonNull(galleryPackageBlobSasUri);
            return this;
        }

        public Builder isSystemExtension(Boolean isSystemExtension) {
            this.isSystemExtension = Objects.requireNonNull(isSystemExtension);
            return this;
        }

        public Builder osDiskImage(OsDiskImageResponse osDiskImage) {
            this.osDiskImage = Objects.requireNonNull(osDiskImage);
            return this;
        }

        public Builder productKind(String productKind) {
            this.productKind = Objects.requireNonNull(productKind);
            return this;
        }

        public Builder supportMultipleExtensions(Boolean supportMultipleExtensions) {
            this.supportMultipleExtensions = Objects.requireNonNull(supportMultipleExtensions);
            return this;
        }

        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }

        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Builder vmOsType(String vmOsType) {
            this.vmOsType = Objects.requireNonNull(vmOsType);
            return this;
        }

        public Builder vmScaleSetEnabled(Boolean vmScaleSetEnabled) {
            this.vmScaleSetEnabled = Objects.requireNonNull(vmScaleSetEnabled);
            return this;
        }
        public ListProductDetailsResult build() {
            return new ListProductDetailsResult(computeRole, dataDiskImages, galleryPackageBlobSasUri, isSystemExtension, osDiskImage, productKind, supportMultipleExtensions, uri, version, vmOsType, vmScaleSetEnabled);
        }
    }
}
