// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automanage;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.automanage.outputs.ConfigurationProfileAssignmentPropertiesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Configuration profile assignment is an association between a VM and automanage profile configuration.
API Version: 2020-06-30-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create or update configuration profile assignment
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var configurationProfileAssignment = new AzureNative.Automanage.ConfigurationProfileAssignment("configurationProfileAssignment", new AzureNative.Automanage.ConfigurationProfileAssignmentArgs
        {
            ConfigurationProfileAssignmentName = "default",
            Properties = new AzureNative.Automanage.Inputs.ConfigurationProfileAssignmentPropertiesArgs
            {
                AccountId = "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automanage/accounts/AutomanageAccount",
                ConfigurationProfile = "Azure virtual machine best practices – Production",
                ConfigurationProfilePreferenceId = "/subscriptions/subscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.Automanage/configurationProfilePreferences/defaultProfilePreference",
            },
            ResourceGroupName = "myResourceGroupName",
            VmName = "myVMName",
        });
    }

}

```

```go
package main

import (
	automanage "github.com/pulumi/pulumi-azure-native/sdk/go/azure/automanage"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := automanage.NewConfigurationProfileAssignment(ctx, "configurationProfileAssignment", &automanage.ConfigurationProfileAssignmentArgs{
			ConfigurationProfileAssignmentName: pulumi.String("default"),
			Properties: &automanage.ConfigurationProfileAssignmentPropertiesArgs{
				AccountId:                        pulumi.String("/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automanage/accounts/AutomanageAccount"),
				ConfigurationProfile:             pulumi.String("Azure virtual machine best practices – Production"),
				ConfigurationProfilePreferenceId: pulumi.String("/subscriptions/subscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.Automanage/configurationProfilePreferences/defaultProfilePreference"),
			},
			ResourceGroupName: pulumi.String("myResourceGroupName"),
			VmName:            pulumi.String("myVMName"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const configurationProfileAssignment = new azure_native.automanage.ConfigurationProfileAssignment("configurationProfileAssignment", {
    configurationProfileAssignmentName: "default",
    properties: {
        accountId: "/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automanage/accounts/AutomanageAccount",
        configurationProfile: "Azure virtual machine best practices – Production",
        configurationProfilePreferenceId: "/subscriptions/subscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.Automanage/configurationProfilePreferences/defaultProfilePreference",
    },
    resourceGroupName: "myResourceGroupName",
    vmName: "myVMName",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

configuration_profile_assignment = azure_native.automanage.ConfigurationProfileAssignment("configurationProfileAssignment",
    configuration_profile_assignment_name="default",
    properties=azure_native.automanage.ConfigurationProfileAssignmentPropertiesArgs(
        account_id="/subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automanage/accounts/AutomanageAccount",
        configuration_profile="Azure virtual machine best practices – Production",
        configuration_profile_preference_id="/subscriptions/subscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.Automanage/configurationProfilePreferences/defaultProfilePreference",
    ),
    resource_group_name="myResourceGroupName",
    vm_name="myVMName")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:automanage:ConfigurationProfileAssignment default /subscriptions/subscriptionId/resourceGroups/myResourceGroupName/providers/Microsoft.Compute/virtualMachines/myvm/providers/Microsoft.Automanage/AutomanageAssignments/default 
```

 */
@ResourceType(type="azure-native:automanage:ConfigurationProfileAssignment")
public class ConfigurationProfileAssignment extends io.pulumi.resources.CustomResource {
    /**
     * The name of the resource
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Properties of the configuration profile assignment.
     */
    @OutputExport(name="properties", type=ConfigurationProfileAssignmentPropertiesResponse.class, parameters={})
    private Output<ConfigurationProfileAssignmentPropertiesResponse> properties;

    /**
     * @return Properties of the configuration profile assignment.
     */
    public Output<ConfigurationProfileAssignmentPropertiesResponse> getProperties() {
        return this.properties;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConfigurationProfileAssignment(String name, ConfigurationProfileAssignmentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:automanage:ConfigurationProfileAssignment", name, args == null ? ConfigurationProfileAssignmentArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ConfigurationProfileAssignment(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:automanage:ConfigurationProfileAssignment", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:automanage/v20200630preview:ConfigurationProfileAssignment").build()),
                Input.of(Alias.builder().setType("azure-native:automanage/v20210430preview:ConfigurationProfileAssignment").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConfigurationProfileAssignment get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ConfigurationProfileAssignment(name, id, options);
    }
}
