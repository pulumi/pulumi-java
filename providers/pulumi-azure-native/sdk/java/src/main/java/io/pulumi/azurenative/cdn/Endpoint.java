// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cdn;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.cdn.EndpointArgs;
import io.pulumi.azurenative.cdn.outputs.DeepCreatedOriginGroupResponse;
import io.pulumi.azurenative.cdn.outputs.DeepCreatedOriginResponse;
import io.pulumi.azurenative.cdn.outputs.EndpointPropertiesUpdateParametersResponseDeliveryPolicy;
import io.pulumi.azurenative.cdn.outputs.EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink;
import io.pulumi.azurenative.cdn.outputs.GeoFilterResponse;
import io.pulumi.azurenative.cdn.outputs.ResourceReferenceResponse;
import io.pulumi.azurenative.cdn.outputs.SystemDataResponse;
import io.pulumi.azurenative.cdn.outputs.UrlSigningKeyResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.
 * API Version: 2020-09-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:cdn:Endpoint endpoint4899 /subscriptions/subid/resourcegroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1 
 * ```
 * 
 */
@ResourceType(type="azure-native:cdn:Endpoint")
public class Endpoint extends io.pulumi.resources.CustomResource {
    /**
     * List of content types on which compression applies. The value should be a valid MIME type.
     * 
     */
    @Export(name="contentTypesToCompress", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> contentTypesToCompress;

    /**
     * @return List of content types on which compression applies. The value should be a valid MIME type.
     * 
     */
    public Output</* @Nullable */ List<String>> getContentTypesToCompress() {
        return this.contentTypesToCompress;
    }
    /**
     * A reference to the origin group.
     * 
     */
    @Export(name="defaultOriginGroup", type=ResourceReferenceResponse.class, parameters={})
    private Output</* @Nullable */ ResourceReferenceResponse> defaultOriginGroup;

    /**
     * @return A reference to the origin group.
     * 
     */
    public Output</* @Nullable */ ResourceReferenceResponse> getDefaultOriginGroup() {
        return this.defaultOriginGroup;
    }
    /**
     * A policy that specifies the delivery rules to be used for an endpoint.
     * 
     */
    @Export(name="deliveryPolicy", type=EndpointPropertiesUpdateParametersResponseDeliveryPolicy.class, parameters={})
    private Output</* @Nullable */ EndpointPropertiesUpdateParametersResponseDeliveryPolicy> deliveryPolicy;

    /**
     * @return A policy that specifies the delivery rules to be used for an endpoint.
     * 
     */
    public Output</* @Nullable */ EndpointPropertiesUpdateParametersResponseDeliveryPolicy> getDeliveryPolicy() {
        return this.deliveryPolicy;
    }
    /**
     * List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
     * 
     */
    @Export(name="geoFilters", type=List.class, parameters={GeoFilterResponse.class})
    private Output</* @Nullable */ List<GeoFilterResponse>> geoFilters;

    /**
     * @return List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
     * 
     */
    public Output</* @Nullable */ List<GeoFilterResponse>> getGeoFilters() {
        return this.geoFilters;
    }
    /**
     * The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
     * 
     */
    @Export(name="hostName", type=String.class, parameters={})
    private Output<String> hostName;

    /**
     * @return The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
     * 
     */
    public Output<String> getHostName() {
        return this.hostName;
    }
    /**
     * Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
     * 
     */
    @Export(name="isCompressionEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isCompressionEnabled;

    /**
     * @return Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
     * 
     */
    public Output</* @Nullable */ Boolean> getIsCompressionEnabled() {
        return this.isCompressionEnabled;
    }
    /**
     * Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
     * 
     */
    @Export(name="isHttpAllowed", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isHttpAllowed;

    /**
     * @return Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
     * 
     */
    public Output</* @Nullable */ Boolean> getIsHttpAllowed() {
        return this.isHttpAllowed;
    }
    /**
     * Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
     * 
     */
    @Export(name="isHttpsAllowed", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isHttpsAllowed;

    /**
     * @return Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
     * 
     */
    public Output</* @Nullable */ Boolean> getIsHttpsAllowed() {
        return this.isHttpsAllowed;
    }
    /**
     * Resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
     * 
     */
    @Export(name="optimizationType", type=String.class, parameters={})
    private Output</* @Nullable */ String> optimizationType;

    /**
     * @return Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
     * 
     */
    public Output</* @Nullable */ String> getOptimizationType() {
        return this.optimizationType;
    }
    /**
     * The origin groups comprising of origins that are used for load balancing the traffic based on availability.
     * 
     */
    @Export(name="originGroups", type=List.class, parameters={DeepCreatedOriginGroupResponse.class})
    private Output</* @Nullable */ List<DeepCreatedOriginGroupResponse>> originGroups;

    /**
     * @return The origin groups comprising of origins that are used for load balancing the traffic based on availability.
     * 
     */
    public Output</* @Nullable */ List<DeepCreatedOriginGroupResponse>> getOriginGroups() {
        return this.originGroups;
    }
    /**
     * The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
     * 
     */
    @Export(name="originHostHeader", type=String.class, parameters={})
    private Output</* @Nullable */ String> originHostHeader;

    /**
     * @return The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
     * 
     */
    public Output</* @Nullable */ String> getOriginHostHeader() {
        return this.originHostHeader;
    }
    /**
     * A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
     * 
     */
    @Export(name="originPath", type=String.class, parameters={})
    private Output</* @Nullable */ String> originPath;

    /**
     * @return A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
     * 
     */
    public Output</* @Nullable */ String> getOriginPath() {
        return this.originPath;
    }
    /**
     * The source of the content being delivered via CDN.
     * 
     */
    @Export(name="origins", type=List.class, parameters={DeepCreatedOriginResponse.class})
    private Output<List<DeepCreatedOriginResponse>> origins;

    /**
     * @return The source of the content being delivered via CDN.
     * 
     */
    public Output<List<DeepCreatedOriginResponse>> getOrigins() {
        return this.origins;
    }
    /**
     * Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
     * 
     */
    @Export(name="probePath", type=String.class, parameters={})
    private Output</* @Nullable */ String> probePath;

    /**
     * @return Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.
     * 
     */
    public Output</* @Nullable */ String> getProbePath() {
        return this.probePath;
    }
    /**
     * Provisioning status of the endpoint.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Provisioning status of the endpoint.
     * 
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
     * 
     */
    @Export(name="queryStringCachingBehavior", type=String.class, parameters={})
    private Output</* @Nullable */ String> queryStringCachingBehavior;

    /**
     * @return Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
     * 
     */
    public Output</* @Nullable */ String> getQueryStringCachingBehavior() {
        return this.queryStringCachingBehavior;
    }
    /**
     * Resource status of the endpoint.
     * 
     */
    @Export(name="resourceState", type=String.class, parameters={})
    private Output<String> resourceState;

    /**
     * @return Resource status of the endpoint.
     * 
     */
    public Output<String> getResourceState() {
        return this.resourceState;
    }
    /**
     * Read only system data
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Read only system data
     * 
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * List of keys used to validate the signed URL hashes.
     * 
     */
    @Export(name="urlSigningKeys", type=List.class, parameters={UrlSigningKeyResponse.class})
    private Output</* @Nullable */ List<UrlSigningKeyResponse>> urlSigningKeys;

    /**
     * @return List of keys used to validate the signed URL hashes.
     * 
     */
    public Output</* @Nullable */ List<UrlSigningKeyResponse>> getUrlSigningKeys() {
        return this.urlSigningKeys;
    }
    /**
     * Defines the Web Application Firewall policy for the endpoint (if applicable)
     * 
     */
    @Export(name="webApplicationFirewallPolicyLink", type=EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink.class, parameters={})
    private Output</* @Nullable */ EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink> webApplicationFirewallPolicyLink;

    /**
     * @return Defines the Web Application Firewall policy for the endpoint (if applicable)
     * 
     */
    public Output</* @Nullable */ EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink> getWebApplicationFirewallPolicyLink() {
        return this.webApplicationFirewallPolicyLink;
    }

    public interface BuilderApplicator {
        public void apply(EndpointArgs.Builder a);
    }
    private static io.pulumi.azurenative.cdn.EndpointArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.azurenative.cdn.EndpointArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public Endpoint(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Endpoint(String name) {
        this(name, EndpointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Endpoint(String name, EndpointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Endpoint(String name, EndpointArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:cdn:Endpoint", name, args == null ? EndpointArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Endpoint(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:cdn:Endpoint", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Output.of(Alias.builder().setType("azure-native:cdn/v20150601:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20160402:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20161002:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20170402:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20171012:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20190415:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20190615:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20190615preview:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20191231:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20200331:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20200415:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20200901:Endpoint").build()),
                Output.of(Alias.builder().setType("azure-native:cdn/v20210601:Endpoint").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Endpoint get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Endpoint(name, id, options);
    }
}
