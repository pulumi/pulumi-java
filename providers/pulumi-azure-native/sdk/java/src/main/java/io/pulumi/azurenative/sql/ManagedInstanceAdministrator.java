// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.sql.ManagedInstanceAdministratorArgs;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * An Azure SQL managed instance administrator.
API Version: 2020-11-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create administrator of managed instance
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var managedInstanceAdministrator = new AzureNative.Sql.ManagedInstanceAdministrator("managedInstanceAdministrator", new AzureNative.Sql.ManagedInstanceAdministratorArgs
        {
            AdministratorName = "ActiveDirectory",
            AdministratorType = "ActiveDirectory",
            Login = "bob@contoso.com",
            ManagedInstanceName = "managedInstance",
            ResourceGroupName = "Default-SQL-SouthEastAsia",
            Sid = "44444444-3333-2222-1111-000000000000",
            TenantId = "55555555-4444-3333-2222-111111111111",
        });
    }

}

```

```go
package main

import (
	sql "github.com/pulumi/pulumi-azure-native/sdk/go/azure/sql"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := sql.NewManagedInstanceAdministrator(ctx, "managedInstanceAdministrator", &sql.ManagedInstanceAdministratorArgs{
			AdministratorName:   pulumi.String("ActiveDirectory"),
			AdministratorType:   pulumi.String("ActiveDirectory"),
			Login:               pulumi.String("bob@contoso.com"),
			ManagedInstanceName: pulumi.String("managedInstance"),
			ResourceGroupName:   pulumi.String("Default-SQL-SouthEastAsia"),
			Sid:                 pulumi.String("44444444-3333-2222-1111-000000000000"),
			TenantId:            pulumi.String("55555555-4444-3333-2222-111111111111"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const managedInstanceAdministrator = new azure_native.sql.ManagedInstanceAdministrator("managedInstanceAdministrator", {
    administratorName: "ActiveDirectory",
    administratorType: "ActiveDirectory",
    login: "bob@contoso.com",
    managedInstanceName: "managedInstance",
    resourceGroupName: "Default-SQL-SouthEastAsia",
    sid: "44444444-3333-2222-1111-000000000000",
    tenantId: "55555555-4444-3333-2222-111111111111",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

managed_instance_administrator = azure_native.sql.ManagedInstanceAdministrator("managedInstanceAdministrator",
    administrator_name="ActiveDirectory",
    administrator_type="ActiveDirectory",
    login="bob@contoso.com",
    managed_instance_name="managedInstance",
    resource_group_name="Default-SQL-SouthEastAsia",
    sid="44444444-3333-2222-1111-000000000000",
    tenant_id="55555555-4444-3333-2222-111111111111")

```

{{% /example %}}
{{% example %}}
### Update administrator of managed instance
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var managedInstanceAdministrator = new AzureNative.Sql.ManagedInstanceAdministrator("managedInstanceAdministrator", new AzureNative.Sql.ManagedInstanceAdministratorArgs
        {
            AdministratorName = "ActiveDirectory",
            AdministratorType = "ActiveDirectory",
            Login = "bob@contoso.com",
            ManagedInstanceName = "managedInstance",
            ResourceGroupName = "Default-SQL-SouthEastAsia",
            Sid = "44444444-3333-2222-1111-000000000000",
            TenantId = "55555555-4444-3333-2222-111111111111",
        });
    }

}

```

```go
package main

import (
	sql "github.com/pulumi/pulumi-azure-native/sdk/go/azure/sql"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := sql.NewManagedInstanceAdministrator(ctx, "managedInstanceAdministrator", &sql.ManagedInstanceAdministratorArgs{
			AdministratorName:   pulumi.String("ActiveDirectory"),
			AdministratorType:   pulumi.String("ActiveDirectory"),
			Login:               pulumi.String("bob@contoso.com"),
			ManagedInstanceName: pulumi.String("managedInstance"),
			ResourceGroupName:   pulumi.String("Default-SQL-SouthEastAsia"),
			Sid:                 pulumi.String("44444444-3333-2222-1111-000000000000"),
			TenantId:            pulumi.String("55555555-4444-3333-2222-111111111111"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const managedInstanceAdministrator = new azure_native.sql.ManagedInstanceAdministrator("managedInstanceAdministrator", {
    administratorName: "ActiveDirectory",
    administratorType: "ActiveDirectory",
    login: "bob@contoso.com",
    managedInstanceName: "managedInstance",
    resourceGroupName: "Default-SQL-SouthEastAsia",
    sid: "44444444-3333-2222-1111-000000000000",
    tenantId: "55555555-4444-3333-2222-111111111111",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

managed_instance_administrator = azure_native.sql.ManagedInstanceAdministrator("managedInstanceAdministrator",
    administrator_name="ActiveDirectory",
    administrator_type="ActiveDirectory",
    login="bob@contoso.com",
    managed_instance_name="managedInstance",
    resource_group_name="Default-SQL-SouthEastAsia",
    sid="44444444-3333-2222-1111-000000000000",
    tenant_id="55555555-4444-3333-2222-111111111111")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:sql:ManagedInstanceAdministrator ActiveDirectory /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/managedInstances/managedInstance/administrators/ActiveDirectory 
```

 */
@ResourceType(type="azure-native:sql:ManagedInstanceAdministrator")
public class ManagedInstanceAdministrator extends io.pulumi.resources.CustomResource {
    /**
     * Type of the managed instance administrator.
     */
    @OutputExport(name="administratorType", type=String.class, parameters={})
    private Output<String> administratorType;

    /**
     * @return Type of the managed instance administrator.
     */
    public Output<String> getAdministratorType() {
        return this.administratorType;
    }
    /**
     * Login name of the managed instance administrator.
     */
    @OutputExport(name="login", type=String.class, parameters={})
    private Output<String> login;

    /**
     * @return Login name of the managed instance administrator.
     */
    public Output<String> getLogin() {
        return this.login;
    }
    /**
     * Resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * SID (object ID) of the managed instance administrator.
     */
    @OutputExport(name="sid", type=String.class, parameters={})
    private Output<String> sid;

    /**
     * @return SID (object ID) of the managed instance administrator.
     */
    public Output<String> getSid() {
        return this.sid;
    }
    /**
     * Tenant ID of the managed instance administrator.
     */
    @OutputExport(name="tenantId", type=String.class, parameters={})
    private Output</* @Nullable */ String> tenantId;

    /**
     * @return Tenant ID of the managed instance administrator.
     */
    public Output</* @Nullable */ String> getTenantId() {
        return this.tenantId;
    }
    /**
     * Resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedInstanceAdministrator(String name, ManagedInstanceAdministratorArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:ManagedInstanceAdministrator", name, args == null ? ManagedInstanceAdministratorArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ManagedInstanceAdministrator(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:ManagedInstanceAdministrator", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:sql/v20170301preview:ManagedInstanceAdministrator").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20200202preview:ManagedInstanceAdministrator").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20200801preview:ManagedInstanceAdministrator").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20201101preview:ManagedInstanceAdministrator").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20210201preview:ManagedInstanceAdministrator").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20210501preview:ManagedInstanceAdministrator").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20210801preview:ManagedInstanceAdministrator").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedInstanceAdministrator get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ManagedInstanceAdministrator(name, id, options);
    }
}
