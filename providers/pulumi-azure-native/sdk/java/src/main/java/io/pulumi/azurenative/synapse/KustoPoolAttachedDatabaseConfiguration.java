// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.synapse.KustoPoolAttachedDatabaseConfigurationArgs;
import io.pulumi.azurenative.synapse.outputs.SystemDataResponse;
import io.pulumi.azurenative.synapse.outputs.TableLevelSharingPropertiesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Class representing an attached database configuration.
 * API Version: 2021-06-01-preview.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:synapse:KustoPoolAttachedDatabaseConfiguration KustoClusterRPTest4/attachedDatabaseConfigurations1 /subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorptest/providers/Microsoft.Synapse/Workspaces/kustorptest/KustoPools/kustoclusterrptest4/attachedDatabaseConfigurations/attachedDatabaseConfigurations1 
 * ```
 * 
 */
@ResourceType(type="azure-native:synapse:KustoPoolAttachedDatabaseConfiguration")
public class KustoPoolAttachedDatabaseConfiguration extends io.pulumi.resources.CustomResource {
    /**
     * The list of databases from the clusterResourceId which are currently attached to the kusto pool.
     * 
     */
    @OutputExport(name="attachedDatabaseNames", type=List.class, parameters={String.class})
    private Output<List<String>> attachedDatabaseNames;

    /**
     * @return The list of databases from the clusterResourceId which are currently attached to the kusto pool.
     * 
     */
    public Output<List<String>> getAttachedDatabaseNames() {
        return this.attachedDatabaseNames;
    }
    /**
     * The name of the database which you would like to attach, use * if you want to follow all current and future databases.
     * 
     */
    @OutputExport(name="databaseName", type=String.class, parameters={})
    private Output<String> databaseName;

    /**
     * @return The name of the database which you would like to attach, use * if you want to follow all current and future databases.
     * 
     */
    public Output<String> getDatabaseName() {
        return this.databaseName;
    }
    /**
     * The default principals modification kind
     * 
     */
    @OutputExport(name="defaultPrincipalsModificationKind", type=String.class, parameters={})
    private Output<String> defaultPrincipalsModificationKind;

    /**
     * @return The default principals modification kind
     * 
     */
    public Output<String> getDefaultPrincipalsModificationKind() {
        return this.defaultPrincipalsModificationKind;
    }
    /**
     * The resource id of the kusto pool where the databases you would like to attach reside.
     * 
     */
    @OutputExport(name="kustoPoolResourceId", type=String.class, parameters={})
    private Output<String> kustoPoolResourceId;

    /**
     * @return The resource id of the kusto pool where the databases you would like to attach reside.
     * 
     */
    public Output<String> getKustoPoolResourceId() {
        return this.kustoPoolResourceId;
    }
    /**
     * Resource location.
     * 
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * The name of the resource
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The provisioned state of the resource.
     * 
     */
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioned state of the resource.
     * 
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    @OutputExport(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * Table level sharing specifications
     * 
     */
    @OutputExport(name="tableLevelSharingProperties", type=TableLevelSharingPropertiesResponse.class, parameters={})
    private Output</* @Nullable */ TableLevelSharingPropertiesResponse> tableLevelSharingProperties;

    /**
     * @return Table level sharing specifications
     * 
     */
    public Output</* @Nullable */ TableLevelSharingPropertiesResponse> getTableLevelSharingProperties() {
        return this.tableLevelSharingProperties;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KustoPoolAttachedDatabaseConfiguration(String name, KustoPoolAttachedDatabaseConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:synapse:KustoPoolAttachedDatabaseConfiguration", name, args == null ? KustoPoolAttachedDatabaseConfigurationArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private KustoPoolAttachedDatabaseConfiguration(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:synapse:KustoPoolAttachedDatabaseConfiguration", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:synapse/v20210601preview:KustoPoolAttachedDatabaseConfiguration").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KustoPoolAttachedDatabaseConfiguration get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new KustoPoolAttachedDatabaseConfiguration(name, id, options);
    }
}
