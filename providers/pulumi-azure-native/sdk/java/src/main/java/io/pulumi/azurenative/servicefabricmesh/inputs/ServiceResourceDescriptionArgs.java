// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.inputs;

import io.pulumi.azurenative.servicefabricmesh.enums.OperatingSystemType;
import io.pulumi.azurenative.servicefabricmesh.inputs.AutoScalingPolicyArgs;
import io.pulumi.azurenative.servicefabricmesh.inputs.ContainerCodePackagePropertiesArgs;
import io.pulumi.azurenative.servicefabricmesh.inputs.DiagnosticsRefArgs;
import io.pulumi.azurenative.servicefabricmesh.inputs.NetworkRefArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * This type describes a service resource.
 * 
 */
public final class ServiceResourceDescriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceResourceDescriptionArgs Empty = new ServiceResourceDescriptionArgs();

    /**
     * Auto scaling policies
     * 
     */
    @Import(name="autoScalingPolicies")
      private final @Nullable Output<List<AutoScalingPolicyArgs>> autoScalingPolicies;

    public Output<List<AutoScalingPolicyArgs>> getAutoScalingPolicies() {
        return this.autoScalingPolicies == null ? Output.empty() : this.autoScalingPolicies;
    }

    /**
     * Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).
     * 
     */
    @Import(name="codePackages", required=true)
      private final Output<List<ContainerCodePackagePropertiesArgs>> codePackages;

    public Output<List<ContainerCodePackagePropertiesArgs>> getCodePackages() {
        return this.codePackages;
    }

    /**
     * User readable description of the service.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Reference to sinks in DiagnosticsDescription.
     * 
     */
    @Import(name="diagnostics")
      private final @Nullable Output<DiagnosticsRefArgs> diagnostics;

    public Output<DiagnosticsRefArgs> getDiagnostics() {
        return this.diagnostics == null ? Output.empty() : this.diagnostics;
    }

    /**
     * The name of the resource
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The names of the private networks that this service needs to be part of.
     * 
     */
    @Import(name="networkRefs")
      private final @Nullable Output<List<NetworkRefArgs>> networkRefs;

    public Output<List<NetworkRefArgs>> getNetworkRefs() {
        return this.networkRefs == null ? Output.empty() : this.networkRefs;
    }

    /**
     * The operation system required by the code in service.
     * 
     */
    @Import(name="osType", required=true)
      private final Output<Either<String,OperatingSystemType>> osType;

    public Output<Either<String,OperatingSystemType>> getOsType() {
        return this.osType;
    }

    /**
     * The number of replicas of the service to create. Defaults to 1 if not specified.
     * 
     */
    @Import(name="replicaCount")
      private final @Nullable Output<Integer> replicaCount;

    public Output<Integer> getReplicaCount() {
        return this.replicaCount == null ? Output.empty() : this.replicaCount;
    }

    public ServiceResourceDescriptionArgs(
        @Nullable Output<List<AutoScalingPolicyArgs>> autoScalingPolicies,
        Output<List<ContainerCodePackagePropertiesArgs>> codePackages,
        @Nullable Output<String> description,
        @Nullable Output<DiagnosticsRefArgs> diagnostics,
        @Nullable Output<String> name,
        @Nullable Output<List<NetworkRefArgs>> networkRefs,
        Output<Either<String,OperatingSystemType>> osType,
        @Nullable Output<Integer> replicaCount) {
        this.autoScalingPolicies = autoScalingPolicies;
        this.codePackages = Objects.requireNonNull(codePackages, "expected parameter 'codePackages' to be non-null");
        this.description = description;
        this.diagnostics = diagnostics;
        this.name = name;
        this.networkRefs = networkRefs;
        this.osType = Objects.requireNonNull(osType, "expected parameter 'osType' to be non-null");
        this.replicaCount = replicaCount;
    }

    private ServiceResourceDescriptionArgs() {
        this.autoScalingPolicies = Output.empty();
        this.codePackages = Output.empty();
        this.description = Output.empty();
        this.diagnostics = Output.empty();
        this.name = Output.empty();
        this.networkRefs = Output.empty();
        this.osType = Output.empty();
        this.replicaCount = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceResourceDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<AutoScalingPolicyArgs>> autoScalingPolicies;
        private Output<List<ContainerCodePackagePropertiesArgs>> codePackages;
        private @Nullable Output<String> description;
        private @Nullable Output<DiagnosticsRefArgs> diagnostics;
        private @Nullable Output<String> name;
        private @Nullable Output<List<NetworkRefArgs>> networkRefs;
        private Output<Either<String,OperatingSystemType>> osType;
        private @Nullable Output<Integer> replicaCount;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceResourceDescriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoScalingPolicies = defaults.autoScalingPolicies;
    	      this.codePackages = defaults.codePackages;
    	      this.description = defaults.description;
    	      this.diagnostics = defaults.diagnostics;
    	      this.name = defaults.name;
    	      this.networkRefs = defaults.networkRefs;
    	      this.osType = defaults.osType;
    	      this.replicaCount = defaults.replicaCount;
        }

        public Builder autoScalingPolicies(@Nullable Output<List<AutoScalingPolicyArgs>> autoScalingPolicies) {
            this.autoScalingPolicies = autoScalingPolicies;
            return this;
        }

        public Builder autoScalingPolicies(@Nullable List<AutoScalingPolicyArgs> autoScalingPolicies) {
            this.autoScalingPolicies = Output.ofNullable(autoScalingPolicies);
            return this;
        }

        public Builder codePackages(Output<List<ContainerCodePackagePropertiesArgs>> codePackages) {
            this.codePackages = Objects.requireNonNull(codePackages);
            return this;
        }

        public Builder codePackages(List<ContainerCodePackagePropertiesArgs> codePackages) {
            this.codePackages = Output.of(Objects.requireNonNull(codePackages));
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder diagnostics(@Nullable Output<DiagnosticsRefArgs> diagnostics) {
            this.diagnostics = diagnostics;
            return this;
        }

        public Builder diagnostics(@Nullable DiagnosticsRefArgs diagnostics) {
            this.diagnostics = Output.ofNullable(diagnostics);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder networkRefs(@Nullable Output<List<NetworkRefArgs>> networkRefs) {
            this.networkRefs = networkRefs;
            return this;
        }

        public Builder networkRefs(@Nullable List<NetworkRefArgs> networkRefs) {
            this.networkRefs = Output.ofNullable(networkRefs);
            return this;
        }

        public Builder osType(Output<Either<String,OperatingSystemType>> osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }

        public Builder osType(Either<String,OperatingSystemType> osType) {
            this.osType = Output.of(Objects.requireNonNull(osType));
            return this;
        }

        public Builder replicaCount(@Nullable Output<Integer> replicaCount) {
            this.replicaCount = replicaCount;
            return this;
        }

        public Builder replicaCount(@Nullable Integer replicaCount) {
            this.replicaCount = Output.ofNullable(replicaCount);
            return this;
        }
        public ServiceResourceDescriptionArgs build() {
            return new ServiceResourceDescriptionArgs(autoScalingPolicies, codePackages, description, diagnostics, name, networkRefs, osType, replicaCount);
        }
    }
}
