// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.connectedvmwarevsphere.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class VirtualDiskResponse {
    /**
     * Gets or sets the controller id.
     * 
     */
    private final @Nullable Integer controllerKey;
    /**
     * Gets or sets the device key value.
     * 
     */
    private final @Nullable Integer deviceKey;
    /**
     * Gets or sets the device name.
     * 
     */
    private final @Nullable String deviceName;
    /**
     * Gets or sets the disk mode.
     * 
     */
    private final @Nullable String diskMode;
    /**
     * Gets or sets the disk object id.
     * 
     */
    private final String diskObjectId;
    /**
     * Gets or sets the disk total size.
     * 
     */
    private final @Nullable Integer diskSizeGB;
    /**
     * Gets or sets the disk backing type.
     * 
     */
    private final @Nullable String diskType;
    /**
     * Gets or sets the label of the virtual disk in vCenter.
     * 
     */
    private final String label;
    /**
     * Gets or sets the name of the virtual disk.
     * 
     */
    private final @Nullable String name;
    /**
     * Gets or sets the unit number of the disk on the controller.
     * 
     */
    private final @Nullable Integer unitNumber;

    @OutputCustomType.Constructor({"controllerKey","deviceKey","deviceName","diskMode","diskObjectId","diskSizeGB","diskType","label","name","unitNumber"})
    private VirtualDiskResponse(
        @Nullable Integer controllerKey,
        @Nullable Integer deviceKey,
        @Nullable String deviceName,
        @Nullable String diskMode,
        String diskObjectId,
        @Nullable Integer diskSizeGB,
        @Nullable String diskType,
        String label,
        @Nullable String name,
        @Nullable Integer unitNumber) {
        this.controllerKey = controllerKey;
        this.deviceKey = deviceKey;
        this.deviceName = deviceName;
        this.diskMode = diskMode;
        this.diskObjectId = Objects.requireNonNull(diskObjectId);
        this.diskSizeGB = diskSizeGB;
        this.diskType = diskType;
        this.label = Objects.requireNonNull(label);
        this.name = name;
        this.unitNumber = unitNumber;
    }

    /**
     * Gets or sets the controller id.
     * 
     */
    public Optional<Integer> getControllerKey() {
        return Optional.ofNullable(this.controllerKey);
    }
    /**
     * Gets or sets the device key value.
     * 
     */
    public Optional<Integer> getDeviceKey() {
        return Optional.ofNullable(this.deviceKey);
    }
    /**
     * Gets or sets the device name.
     * 
     */
    public Optional<String> getDeviceName() {
        return Optional.ofNullable(this.deviceName);
    }
    /**
     * Gets or sets the disk mode.
     * 
     */
    public Optional<String> getDiskMode() {
        return Optional.ofNullable(this.diskMode);
    }
    /**
     * Gets or sets the disk object id.
     * 
     */
    public String getDiskObjectId() {
        return this.diskObjectId;
    }
    /**
     * Gets or sets the disk total size.
     * 
     */
    public Optional<Integer> getDiskSizeGB() {
        return Optional.ofNullable(this.diskSizeGB);
    }
    /**
     * Gets or sets the disk backing type.
     * 
     */
    public Optional<String> getDiskType() {
        return Optional.ofNullable(this.diskType);
    }
    /**
     * Gets or sets the label of the virtual disk in vCenter.
     * 
     */
    public String getLabel() {
        return this.label;
    }
    /**
     * Gets or sets the name of the virtual disk.
     * 
     */
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    /**
     * Gets or sets the unit number of the disk on the controller.
     * 
     */
    public Optional<Integer> getUnitNumber() {
        return Optional.ofNullable(this.unitNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer controllerKey;
        private @Nullable Integer deviceKey;
        private @Nullable String deviceName;
        private @Nullable String diskMode;
        private String diskObjectId;
        private @Nullable Integer diskSizeGB;
        private @Nullable String diskType;
        private String label;
        private @Nullable String name;
        private @Nullable Integer unitNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualDiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controllerKey = defaults.controllerKey;
    	      this.deviceKey = defaults.deviceKey;
    	      this.deviceName = defaults.deviceName;
    	      this.diskMode = defaults.diskMode;
    	      this.diskObjectId = defaults.diskObjectId;
    	      this.diskSizeGB = defaults.diskSizeGB;
    	      this.diskType = defaults.diskType;
    	      this.label = defaults.label;
    	      this.name = defaults.name;
    	      this.unitNumber = defaults.unitNumber;
        }

        public Builder setControllerKey(@Nullable Integer controllerKey) {
            this.controllerKey = controllerKey;
            return this;
        }

        public Builder setDeviceKey(@Nullable Integer deviceKey) {
            this.deviceKey = deviceKey;
            return this;
        }

        public Builder setDeviceName(@Nullable String deviceName) {
            this.deviceName = deviceName;
            return this;
        }

        public Builder setDiskMode(@Nullable String diskMode) {
            this.diskMode = diskMode;
            return this;
        }

        public Builder setDiskObjectId(String diskObjectId) {
            this.diskObjectId = Objects.requireNonNull(diskObjectId);
            return this;
        }

        public Builder setDiskSizeGB(@Nullable Integer diskSizeGB) {
            this.diskSizeGB = diskSizeGB;
            return this;
        }

        public Builder setDiskType(@Nullable String diskType) {
            this.diskType = diskType;
            return this;
        }

        public Builder setLabel(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setUnitNumber(@Nullable Integer unitNumber) {
            this.unitNumber = unitNumber;
            return this;
        }
        public VirtualDiskResponse build() {
            return new VirtualDiskResponse(controllerKey, deviceKey, deviceName, diskMode, diskObjectId, diskSizeGB, diskType, label, name, unitNumber);
        }
    }
}
