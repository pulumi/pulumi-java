// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.compute.enums.OrchestrationMode;
import io.pulumi.azurenative.compute.inputs.AdditionalCapabilitiesArgs;
import io.pulumi.azurenative.compute.inputs.AutomaticRepairsPolicyArgs;
import io.pulumi.azurenative.compute.inputs.ExtendedLocationArgs;
import io.pulumi.azurenative.compute.inputs.PlanArgs;
import io.pulumi.azurenative.compute.inputs.ScaleInPolicyArgs;
import io.pulumi.azurenative.compute.inputs.SkuArgs;
import io.pulumi.azurenative.compute.inputs.SubResourceArgs;
import io.pulumi.azurenative.compute.inputs.UpgradePolicyArgs;
import io.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetIdentityArgs;
import io.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetVMProfileArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualMachineScaleSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualMachineScaleSetArgs Empty = new VirtualMachineScaleSetArgs();

    /**
     * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     * 
     */
    @Import(name="additionalCapabilities")
      private final @Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities;

    public Output<AdditionalCapabilitiesArgs> getAdditionalCapabilities() {
        return this.additionalCapabilities == null ? Codegen.empty() : this.additionalCapabilities;
    }

    /**
     * Policy for automatic repairs.
     * 
     */
    @Import(name="automaticRepairsPolicy")
      private final @Nullable Output<AutomaticRepairsPolicyArgs> automaticRepairsPolicy;

    public Output<AutomaticRepairsPolicyArgs> getAutomaticRepairsPolicy() {
        return this.automaticRepairsPolicy == null ? Codegen.empty() : this.automaticRepairsPolicy;
    }

    /**
     * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
     * 
     */
    @Import(name="doNotRunExtensionsOnOverprovisionedVMs")
      private final @Nullable Output<Boolean> doNotRunExtensionsOnOverprovisionedVMs;

    public Output<Boolean> getDoNotRunExtensionsOnOverprovisionedVMs() {
        return this.doNotRunExtensionsOnOverprovisionedVMs == null ? Codegen.empty() : this.doNotRunExtensionsOnOverprovisionedVMs;
    }

    /**
     * The extended location of the Virtual Machine Scale Set.
     * 
     */
    @Import(name="extendedLocation")
      private final @Nullable Output<ExtendedLocationArgs> extendedLocation;

    public Output<ExtendedLocationArgs> getExtendedLocation() {
        return this.extendedLocation == null ? Codegen.empty() : this.extendedLocation;
    }

    /**
     * Specifies information about the dedicated host group that the virtual machine scale set resides in. <br><br>Minimum api-version: 2020-06-01.
     * 
     */
    @Import(name="hostGroup")
      private final @Nullable Output<SubResourceArgs> hostGroup;

    public Output<SubResourceArgs> getHostGroup() {
        return this.hostGroup == null ? Codegen.empty() : this.hostGroup;
    }

    /**
     * The identity of the virtual machine scale set, if configured.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<VirtualMachineScaleSetIdentityArgs> identity;

    public Output<VirtualMachineScaleSetIdentityArgs> getIdentity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Specifies the orchestration mode for the virtual machine scale set.
     * 
     */
    @Import(name="orchestrationMode")
      private final @Nullable Output<Either<String,OrchestrationMode>> orchestrationMode;

    public Output<Either<String,OrchestrationMode>> getOrchestrationMode() {
        return this.orchestrationMode == null ? Codegen.empty() : this.orchestrationMode;
    }

    /**
     * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     * 
     */
    @Import(name="overprovision")
      private final @Nullable Output<Boolean> overprovision;

    public Output<Boolean> getOverprovision() {
        return this.overprovision == null ? Codegen.empty() : this.overprovision;
    }

    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     * 
     */
    @Import(name="plan")
      private final @Nullable Output<PlanArgs> plan;

    public Output<PlanArgs> getPlan() {
        return this.plan == null ? Codegen.empty() : this.plan;
    }

    /**
     * Fault Domain count for each placement group.
     * 
     */
    @Import(name="platformFaultDomainCount")
      private final @Nullable Output<Integer> platformFaultDomainCount;

    public Output<Integer> getPlatformFaultDomainCount() {
        return this.platformFaultDomainCount == null ? Codegen.empty() : this.platformFaultDomainCount;
    }

    /**
     * Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01.
     * 
     */
    @Import(name="proximityPlacementGroup")
      private final @Nullable Output<SubResourceArgs> proximityPlacementGroup;

    public Output<SubResourceArgs> getProximityPlacementGroup() {
        return this.proximityPlacementGroup == null ? Codegen.empty() : this.proximityPlacementGroup;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
     * 
     */
    @Import(name="scaleInPolicy")
      private final @Nullable Output<ScaleInPolicyArgs> scaleInPolicy;

    public Output<ScaleInPolicyArgs> getScaleInPolicy() {
        return this.scaleInPolicy == null ? Codegen.empty() : this.scaleInPolicy;
    }

    /**
     * When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
     * 
     */
    @Import(name="singlePlacementGroup")
      private final @Nullable Output<Boolean> singlePlacementGroup;

    public Output<Boolean> getSinglePlacementGroup() {
        return this.singlePlacementGroup == null ? Codegen.empty() : this.singlePlacementGroup;
    }

    /**
     * The virtual machine scale set sku.
     * 
     */
    @Import(name="sku")
      private final @Nullable Output<SkuArgs> sku;

    public Output<SkuArgs> getSku() {
        return this.sku == null ? Codegen.empty() : this.sku;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The upgrade policy.
     * 
     */
    @Import(name="upgradePolicy")
      private final @Nullable Output<UpgradePolicyArgs> upgradePolicy;

    public Output<UpgradePolicyArgs> getUpgradePolicy() {
        return this.upgradePolicy == null ? Codegen.empty() : this.upgradePolicy;
    }

    /**
     * The virtual machine profile.
     * 
     */
    @Import(name="virtualMachineProfile")
      private final @Nullable Output<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile;

    public Output<VirtualMachineScaleSetVMProfileArgs> getVirtualMachineProfile() {
        return this.virtualMachineProfile == null ? Codegen.empty() : this.virtualMachineProfile;
    }

    /**
     * The name of the VM scale set to create or update.
     * 
     */
    @Import(name="vmScaleSetName")
      private final @Nullable Output<String> vmScaleSetName;

    public Output<String> getVmScaleSetName() {
        return this.vmScaleSetName == null ? Codegen.empty() : this.vmScaleSetName;
    }

    /**
     * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
     * 
     */
    @Import(name="zoneBalance")
      private final @Nullable Output<Boolean> zoneBalance;

    public Output<Boolean> getZoneBalance() {
        return this.zoneBalance == null ? Codegen.empty() : this.zoneBalance;
    }

    /**
     * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
     * 
     */
    @Import(name="zones")
      private final @Nullable Output<List<String>> zones;

    public Output<List<String>> getZones() {
        return this.zones == null ? Codegen.empty() : this.zones;
    }

    public VirtualMachineScaleSetArgs(
        @Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities,
        @Nullable Output<AutomaticRepairsPolicyArgs> automaticRepairsPolicy,
        @Nullable Output<Boolean> doNotRunExtensionsOnOverprovisionedVMs,
        @Nullable Output<ExtendedLocationArgs> extendedLocation,
        @Nullable Output<SubResourceArgs> hostGroup,
        @Nullable Output<VirtualMachineScaleSetIdentityArgs> identity,
        @Nullable Output<String> location,
        @Nullable Output<Either<String,OrchestrationMode>> orchestrationMode,
        @Nullable Output<Boolean> overprovision,
        @Nullable Output<PlanArgs> plan,
        @Nullable Output<Integer> platformFaultDomainCount,
        @Nullable Output<SubResourceArgs> proximityPlacementGroup,
        Output<String> resourceGroupName,
        @Nullable Output<ScaleInPolicyArgs> scaleInPolicy,
        @Nullable Output<Boolean> singlePlacementGroup,
        @Nullable Output<SkuArgs> sku,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<UpgradePolicyArgs> upgradePolicy,
        @Nullable Output<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile,
        @Nullable Output<String> vmScaleSetName,
        @Nullable Output<Boolean> zoneBalance,
        @Nullable Output<List<String>> zones) {
        this.additionalCapabilities = additionalCapabilities;
        this.automaticRepairsPolicy = automaticRepairsPolicy;
        this.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
        this.extendedLocation = extendedLocation;
        this.hostGroup = hostGroup;
        this.identity = identity;
        this.location = location;
        this.orchestrationMode = orchestrationMode;
        this.overprovision = overprovision;
        this.plan = plan;
        this.platformFaultDomainCount = platformFaultDomainCount;
        this.proximityPlacementGroup = proximityPlacementGroup;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.scaleInPolicy = scaleInPolicy;
        this.singlePlacementGroup = singlePlacementGroup;
        this.sku = sku;
        this.tags = tags;
        this.upgradePolicy = upgradePolicy;
        this.virtualMachineProfile = virtualMachineProfile;
        this.vmScaleSetName = vmScaleSetName;
        this.zoneBalance = zoneBalance;
        this.zones = zones;
    }

    private VirtualMachineScaleSetArgs() {
        this.additionalCapabilities = Codegen.empty();
        this.automaticRepairsPolicy = Codegen.empty();
        this.doNotRunExtensionsOnOverprovisionedVMs = Codegen.empty();
        this.extendedLocation = Codegen.empty();
        this.hostGroup = Codegen.empty();
        this.identity = Codegen.empty();
        this.location = Codegen.empty();
        this.orchestrationMode = Codegen.empty();
        this.overprovision = Codegen.empty();
        this.plan = Codegen.empty();
        this.platformFaultDomainCount = Codegen.empty();
        this.proximityPlacementGroup = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.scaleInPolicy = Codegen.empty();
        this.singlePlacementGroup = Codegen.empty();
        this.sku = Codegen.empty();
        this.tags = Codegen.empty();
        this.upgradePolicy = Codegen.empty();
        this.virtualMachineProfile = Codegen.empty();
        this.vmScaleSetName = Codegen.empty();
        this.zoneBalance = Codegen.empty();
        this.zones = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineScaleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities;
        private @Nullable Output<AutomaticRepairsPolicyArgs> automaticRepairsPolicy;
        private @Nullable Output<Boolean> doNotRunExtensionsOnOverprovisionedVMs;
        private @Nullable Output<ExtendedLocationArgs> extendedLocation;
        private @Nullable Output<SubResourceArgs> hostGroup;
        private @Nullable Output<VirtualMachineScaleSetIdentityArgs> identity;
        private @Nullable Output<String> location;
        private @Nullable Output<Either<String,OrchestrationMode>> orchestrationMode;
        private @Nullable Output<Boolean> overprovision;
        private @Nullable Output<PlanArgs> plan;
        private @Nullable Output<Integer> platformFaultDomainCount;
        private @Nullable Output<SubResourceArgs> proximityPlacementGroup;
        private Output<String> resourceGroupName;
        private @Nullable Output<ScaleInPolicyArgs> scaleInPolicy;
        private @Nullable Output<Boolean> singlePlacementGroup;
        private @Nullable Output<SkuArgs> sku;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<UpgradePolicyArgs> upgradePolicy;
        private @Nullable Output<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile;
        private @Nullable Output<String> vmScaleSetName;
        private @Nullable Output<Boolean> zoneBalance;
        private @Nullable Output<List<String>> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineScaleSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalCapabilities = defaults.additionalCapabilities;
    	      this.automaticRepairsPolicy = defaults.automaticRepairsPolicy;
    	      this.doNotRunExtensionsOnOverprovisionedVMs = defaults.doNotRunExtensionsOnOverprovisionedVMs;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.hostGroup = defaults.hostGroup;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.orchestrationMode = defaults.orchestrationMode;
    	      this.overprovision = defaults.overprovision;
    	      this.plan = defaults.plan;
    	      this.platformFaultDomainCount = defaults.platformFaultDomainCount;
    	      this.proximityPlacementGroup = defaults.proximityPlacementGroup;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.scaleInPolicy = defaults.scaleInPolicy;
    	      this.singlePlacementGroup = defaults.singlePlacementGroup;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.upgradePolicy = defaults.upgradePolicy;
    	      this.virtualMachineProfile = defaults.virtualMachineProfile;
    	      this.vmScaleSetName = defaults.vmScaleSetName;
    	      this.zoneBalance = defaults.zoneBalance;
    	      this.zones = defaults.zones;
        }

        public Builder additionalCapabilities(@Nullable Output<AdditionalCapabilitiesArgs> additionalCapabilities) {
            this.additionalCapabilities = additionalCapabilities;
            return this;
        }
        public Builder additionalCapabilities(@Nullable AdditionalCapabilitiesArgs additionalCapabilities) {
            this.additionalCapabilities = Codegen.ofNullable(additionalCapabilities);
            return this;
        }
        public Builder automaticRepairsPolicy(@Nullable Output<AutomaticRepairsPolicyArgs> automaticRepairsPolicy) {
            this.automaticRepairsPolicy = automaticRepairsPolicy;
            return this;
        }
        public Builder automaticRepairsPolicy(@Nullable AutomaticRepairsPolicyArgs automaticRepairsPolicy) {
            this.automaticRepairsPolicy = Codegen.ofNullable(automaticRepairsPolicy);
            return this;
        }
        public Builder doNotRunExtensionsOnOverprovisionedVMs(@Nullable Output<Boolean> doNotRunExtensionsOnOverprovisionedVMs) {
            this.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
            return this;
        }
        public Builder doNotRunExtensionsOnOverprovisionedVMs(@Nullable Boolean doNotRunExtensionsOnOverprovisionedVMs) {
            this.doNotRunExtensionsOnOverprovisionedVMs = Codegen.ofNullable(doNotRunExtensionsOnOverprovisionedVMs);
            return this;
        }
        public Builder extendedLocation(@Nullable Output<ExtendedLocationArgs> extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        public Builder extendedLocation(@Nullable ExtendedLocationArgs extendedLocation) {
            this.extendedLocation = Codegen.ofNullable(extendedLocation);
            return this;
        }
        public Builder hostGroup(@Nullable Output<SubResourceArgs> hostGroup) {
            this.hostGroup = hostGroup;
            return this;
        }
        public Builder hostGroup(@Nullable SubResourceArgs hostGroup) {
            this.hostGroup = Codegen.ofNullable(hostGroup);
            return this;
        }
        public Builder identity(@Nullable Output<VirtualMachineScaleSetIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable VirtualMachineScaleSetIdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder orchestrationMode(@Nullable Output<Either<String,OrchestrationMode>> orchestrationMode) {
            this.orchestrationMode = orchestrationMode;
            return this;
        }
        public Builder orchestrationMode(@Nullable Either<String,OrchestrationMode> orchestrationMode) {
            this.orchestrationMode = Codegen.ofNullable(orchestrationMode);
            return this;
        }
        public Builder overprovision(@Nullable Output<Boolean> overprovision) {
            this.overprovision = overprovision;
            return this;
        }
        public Builder overprovision(@Nullable Boolean overprovision) {
            this.overprovision = Codegen.ofNullable(overprovision);
            return this;
        }
        public Builder plan(@Nullable Output<PlanArgs> plan) {
            this.plan = plan;
            return this;
        }
        public Builder plan(@Nullable PlanArgs plan) {
            this.plan = Codegen.ofNullable(plan);
            return this;
        }
        public Builder platformFaultDomainCount(@Nullable Output<Integer> platformFaultDomainCount) {
            this.platformFaultDomainCount = platformFaultDomainCount;
            return this;
        }
        public Builder platformFaultDomainCount(@Nullable Integer platformFaultDomainCount) {
            this.platformFaultDomainCount = Codegen.ofNullable(platformFaultDomainCount);
            return this;
        }
        public Builder proximityPlacementGroup(@Nullable Output<SubResourceArgs> proximityPlacementGroup) {
            this.proximityPlacementGroup = proximityPlacementGroup;
            return this;
        }
        public Builder proximityPlacementGroup(@Nullable SubResourceArgs proximityPlacementGroup) {
            this.proximityPlacementGroup = Codegen.ofNullable(proximityPlacementGroup);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder scaleInPolicy(@Nullable Output<ScaleInPolicyArgs> scaleInPolicy) {
            this.scaleInPolicy = scaleInPolicy;
            return this;
        }
        public Builder scaleInPolicy(@Nullable ScaleInPolicyArgs scaleInPolicy) {
            this.scaleInPolicy = Codegen.ofNullable(scaleInPolicy);
            return this;
        }
        public Builder singlePlacementGroup(@Nullable Output<Boolean> singlePlacementGroup) {
            this.singlePlacementGroup = singlePlacementGroup;
            return this;
        }
        public Builder singlePlacementGroup(@Nullable Boolean singlePlacementGroup) {
            this.singlePlacementGroup = Codegen.ofNullable(singlePlacementGroup);
            return this;
        }
        public Builder sku(@Nullable Output<SkuArgs> sku) {
            this.sku = sku;
            return this;
        }
        public Builder sku(@Nullable SkuArgs sku) {
            this.sku = Codegen.ofNullable(sku);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder upgradePolicy(@Nullable Output<UpgradePolicyArgs> upgradePolicy) {
            this.upgradePolicy = upgradePolicy;
            return this;
        }
        public Builder upgradePolicy(@Nullable UpgradePolicyArgs upgradePolicy) {
            this.upgradePolicy = Codegen.ofNullable(upgradePolicy);
            return this;
        }
        public Builder virtualMachineProfile(@Nullable Output<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile) {
            this.virtualMachineProfile = virtualMachineProfile;
            return this;
        }
        public Builder virtualMachineProfile(@Nullable VirtualMachineScaleSetVMProfileArgs virtualMachineProfile) {
            this.virtualMachineProfile = Codegen.ofNullable(virtualMachineProfile);
            return this;
        }
        public Builder vmScaleSetName(@Nullable Output<String> vmScaleSetName) {
            this.vmScaleSetName = vmScaleSetName;
            return this;
        }
        public Builder vmScaleSetName(@Nullable String vmScaleSetName) {
            this.vmScaleSetName = Codegen.ofNullable(vmScaleSetName);
            return this;
        }
        public Builder zoneBalance(@Nullable Output<Boolean> zoneBalance) {
            this.zoneBalance = zoneBalance;
            return this;
        }
        public Builder zoneBalance(@Nullable Boolean zoneBalance) {
            this.zoneBalance = Codegen.ofNullable(zoneBalance);
            return this;
        }
        public Builder zones(@Nullable Output<List<String>> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(@Nullable List<String> zones) {
            this.zones = Codegen.ofNullable(zones);
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }        public VirtualMachineScaleSetArgs build() {
            return new VirtualMachineScaleSetArgs(additionalCapabilities, automaticRepairsPolicy, doNotRunExtensionsOnOverprovisionedVMs, extendedLocation, hostGroup, identity, location, orchestrationMode, overprovision, plan, platformFaultDomainCount, proximityPlacementGroup, resourceGroupName, scaleInPolicy, singlePlacementGroup, sku, tags, upgradePolicy, virtualMachineProfile, vmScaleSetName, zoneBalance, zones);
        }
    }
}
