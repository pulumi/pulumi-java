// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.compute.enums.OrchestrationMode;
import io.pulumi.azurenative.compute.inputs.AdditionalCapabilitiesArgs;
import io.pulumi.azurenative.compute.inputs.AutomaticRepairsPolicyArgs;
import io.pulumi.azurenative.compute.inputs.ExtendedLocationArgs;
import io.pulumi.azurenative.compute.inputs.PlanArgs;
import io.pulumi.azurenative.compute.inputs.ScaleInPolicyArgs;
import io.pulumi.azurenative.compute.inputs.SkuArgs;
import io.pulumi.azurenative.compute.inputs.SubResourceArgs;
import io.pulumi.azurenative.compute.inputs.UpgradePolicyArgs;
import io.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetIdentityArgs;
import io.pulumi.azurenative.compute.inputs.VirtualMachineScaleSetVMProfileArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualMachineScaleSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualMachineScaleSetArgs Empty = new VirtualMachineScaleSetArgs();

    /**
     * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     * 
     */
    @InputImport(name="additionalCapabilities")
        private final @Nullable Input<AdditionalCapabilitiesArgs> additionalCapabilities;

    public Input<AdditionalCapabilitiesArgs> getAdditionalCapabilities() {
        return this.additionalCapabilities == null ? Input.empty() : this.additionalCapabilities;
    }

    /**
     * Policy for automatic repairs.
     * 
     */
    @InputImport(name="automaticRepairsPolicy")
        private final @Nullable Input<AutomaticRepairsPolicyArgs> automaticRepairsPolicy;

    public Input<AutomaticRepairsPolicyArgs> getAutomaticRepairsPolicy() {
        return this.automaticRepairsPolicy == null ? Input.empty() : this.automaticRepairsPolicy;
    }

    /**
     * When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
     * 
     */
    @InputImport(name="doNotRunExtensionsOnOverprovisionedVMs")
        private final @Nullable Input<Boolean> doNotRunExtensionsOnOverprovisionedVMs;

    public Input<Boolean> getDoNotRunExtensionsOnOverprovisionedVMs() {
        return this.doNotRunExtensionsOnOverprovisionedVMs == null ? Input.empty() : this.doNotRunExtensionsOnOverprovisionedVMs;
    }

    /**
     * The extended location of the Virtual Machine Scale Set.
     * 
     */
    @InputImport(name="extendedLocation")
        private final @Nullable Input<ExtendedLocationArgs> extendedLocation;

    public Input<ExtendedLocationArgs> getExtendedLocation() {
        return this.extendedLocation == null ? Input.empty() : this.extendedLocation;
    }

    /**
     * Specifies information about the dedicated host group that the virtual machine scale set resides in. <br><br>Minimum api-version: 2020-06-01.
     * 
     */
    @InputImport(name="hostGroup")
        private final @Nullable Input<SubResourceArgs> hostGroup;

    public Input<SubResourceArgs> getHostGroup() {
        return this.hostGroup == null ? Input.empty() : this.hostGroup;
    }

    /**
     * The identity of the virtual machine scale set, if configured.
     * 
     */
    @InputImport(name="identity")
        private final @Nullable Input<VirtualMachineScaleSetIdentityArgs> identity;

    public Input<VirtualMachineScaleSetIdentityArgs> getIdentity() {
        return this.identity == null ? Input.empty() : this.identity;
    }

    /**
     * Resource location
     * 
     */
    @InputImport(name="location")
        private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Specifies the orchestration mode for the virtual machine scale set.
     * 
     */
    @InputImport(name="orchestrationMode")
        private final @Nullable Input<Either<String,OrchestrationMode>> orchestrationMode;

    public Input<Either<String,OrchestrationMode>> getOrchestrationMode() {
        return this.orchestrationMode == null ? Input.empty() : this.orchestrationMode;
    }

    /**
     * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     * 
     */
    @InputImport(name="overprovision")
        private final @Nullable Input<Boolean> overprovision;

    public Input<Boolean> getOverprovision() {
        return this.overprovision == null ? Input.empty() : this.overprovision;
    }

    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     * 
     */
    @InputImport(name="plan")
        private final @Nullable Input<PlanArgs> plan;

    public Input<PlanArgs> getPlan() {
        return this.plan == null ? Input.empty() : this.plan;
    }

    /**
     * Fault Domain count for each placement group.
     * 
     */
    @InputImport(name="platformFaultDomainCount")
        private final @Nullable Input<Integer> platformFaultDomainCount;

    public Input<Integer> getPlatformFaultDomainCount() {
        return this.platformFaultDomainCount == null ? Input.empty() : this.platformFaultDomainCount;
    }

    /**
     * Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01.
     * 
     */
    @InputImport(name="proximityPlacementGroup")
        private final @Nullable Input<SubResourceArgs> proximityPlacementGroup;

    public Input<SubResourceArgs> getProximityPlacementGroup() {
        return this.proximityPlacementGroup == null ? Input.empty() : this.proximityPlacementGroup;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
        private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
     * 
     */
    @InputImport(name="scaleInPolicy")
        private final @Nullable Input<ScaleInPolicyArgs> scaleInPolicy;

    public Input<ScaleInPolicyArgs> getScaleInPolicy() {
        return this.scaleInPolicy == null ? Input.empty() : this.scaleInPolicy;
    }

    /**
     * When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
     * 
     */
    @InputImport(name="singlePlacementGroup")
        private final @Nullable Input<Boolean> singlePlacementGroup;

    public Input<Boolean> getSinglePlacementGroup() {
        return this.singlePlacementGroup == null ? Input.empty() : this.singlePlacementGroup;
    }

    /**
     * The virtual machine scale set sku.
     * 
     */
    @InputImport(name="sku")
        private final @Nullable Input<SkuArgs> sku;

    public Input<SkuArgs> getSku() {
        return this.sku == null ? Input.empty() : this.sku;
    }

    /**
     * Resource tags
     * 
     */
    @InputImport(name="tags")
        private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The upgrade policy.
     * 
     */
    @InputImport(name="upgradePolicy")
        private final @Nullable Input<UpgradePolicyArgs> upgradePolicy;

    public Input<UpgradePolicyArgs> getUpgradePolicy() {
        return this.upgradePolicy == null ? Input.empty() : this.upgradePolicy;
    }

    /**
     * The virtual machine profile.
     * 
     */
    @InputImport(name="virtualMachineProfile")
        private final @Nullable Input<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile;

    public Input<VirtualMachineScaleSetVMProfileArgs> getVirtualMachineProfile() {
        return this.virtualMachineProfile == null ? Input.empty() : this.virtualMachineProfile;
    }

    /**
     * The name of the VM scale set to create or update.
     * 
     */
    @InputImport(name="vmScaleSetName")
        private final @Nullable Input<String> vmScaleSetName;

    public Input<String> getVmScaleSetName() {
        return this.vmScaleSetName == null ? Input.empty() : this.vmScaleSetName;
    }

    /**
     * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
     * 
     */
    @InputImport(name="zoneBalance")
        private final @Nullable Input<Boolean> zoneBalance;

    public Input<Boolean> getZoneBalance() {
        return this.zoneBalance == null ? Input.empty() : this.zoneBalance;
    }

    /**
     * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
     * 
     */
    @InputImport(name="zones")
        private final @Nullable Input<List<String>> zones;

    public Input<List<String>> getZones() {
        return this.zones == null ? Input.empty() : this.zones;
    }

    public VirtualMachineScaleSetArgs(
        @Nullable Input<AdditionalCapabilitiesArgs> additionalCapabilities,
        @Nullable Input<AutomaticRepairsPolicyArgs> automaticRepairsPolicy,
        @Nullable Input<Boolean> doNotRunExtensionsOnOverprovisionedVMs,
        @Nullable Input<ExtendedLocationArgs> extendedLocation,
        @Nullable Input<SubResourceArgs> hostGroup,
        @Nullable Input<VirtualMachineScaleSetIdentityArgs> identity,
        @Nullable Input<String> location,
        @Nullable Input<Either<String,OrchestrationMode>> orchestrationMode,
        @Nullable Input<Boolean> overprovision,
        @Nullable Input<PlanArgs> plan,
        @Nullable Input<Integer> platformFaultDomainCount,
        @Nullable Input<SubResourceArgs> proximityPlacementGroup,
        Input<String> resourceGroupName,
        @Nullable Input<ScaleInPolicyArgs> scaleInPolicy,
        @Nullable Input<Boolean> singlePlacementGroup,
        @Nullable Input<SkuArgs> sku,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<UpgradePolicyArgs> upgradePolicy,
        @Nullable Input<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile,
        @Nullable Input<String> vmScaleSetName,
        @Nullable Input<Boolean> zoneBalance,
        @Nullable Input<List<String>> zones) {
        this.additionalCapabilities = additionalCapabilities;
        this.automaticRepairsPolicy = automaticRepairsPolicy;
        this.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
        this.extendedLocation = extendedLocation;
        this.hostGroup = hostGroup;
        this.identity = identity;
        this.location = location;
        this.orchestrationMode = orchestrationMode;
        this.overprovision = overprovision;
        this.plan = plan;
        this.platformFaultDomainCount = platformFaultDomainCount;
        this.proximityPlacementGroup = proximityPlacementGroup;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.scaleInPolicy = scaleInPolicy;
        this.singlePlacementGroup = singlePlacementGroup;
        this.sku = sku;
        this.tags = tags;
        this.upgradePolicy = upgradePolicy;
        this.virtualMachineProfile = virtualMachineProfile;
        this.vmScaleSetName = vmScaleSetName;
        this.zoneBalance = zoneBalance;
        this.zones = zones;
    }

    private VirtualMachineScaleSetArgs() {
        this.additionalCapabilities = Input.empty();
        this.automaticRepairsPolicy = Input.empty();
        this.doNotRunExtensionsOnOverprovisionedVMs = Input.empty();
        this.extendedLocation = Input.empty();
        this.hostGroup = Input.empty();
        this.identity = Input.empty();
        this.location = Input.empty();
        this.orchestrationMode = Input.empty();
        this.overprovision = Input.empty();
        this.plan = Input.empty();
        this.platformFaultDomainCount = Input.empty();
        this.proximityPlacementGroup = Input.empty();
        this.resourceGroupName = Input.empty();
        this.scaleInPolicy = Input.empty();
        this.singlePlacementGroup = Input.empty();
        this.sku = Input.empty();
        this.tags = Input.empty();
        this.upgradePolicy = Input.empty();
        this.virtualMachineProfile = Input.empty();
        this.vmScaleSetName = Input.empty();
        this.zoneBalance = Input.empty();
        this.zones = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineScaleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AdditionalCapabilitiesArgs> additionalCapabilities;
        private @Nullable Input<AutomaticRepairsPolicyArgs> automaticRepairsPolicy;
        private @Nullable Input<Boolean> doNotRunExtensionsOnOverprovisionedVMs;
        private @Nullable Input<ExtendedLocationArgs> extendedLocation;
        private @Nullable Input<SubResourceArgs> hostGroup;
        private @Nullable Input<VirtualMachineScaleSetIdentityArgs> identity;
        private @Nullable Input<String> location;
        private @Nullable Input<Either<String,OrchestrationMode>> orchestrationMode;
        private @Nullable Input<Boolean> overprovision;
        private @Nullable Input<PlanArgs> plan;
        private @Nullable Input<Integer> platformFaultDomainCount;
        private @Nullable Input<SubResourceArgs> proximityPlacementGroup;
        private Input<String> resourceGroupName;
        private @Nullable Input<ScaleInPolicyArgs> scaleInPolicy;
        private @Nullable Input<Boolean> singlePlacementGroup;
        private @Nullable Input<SkuArgs> sku;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<UpgradePolicyArgs> upgradePolicy;
        private @Nullable Input<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile;
        private @Nullable Input<String> vmScaleSetName;
        private @Nullable Input<Boolean> zoneBalance;
        private @Nullable Input<List<String>> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineScaleSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalCapabilities = defaults.additionalCapabilities;
    	      this.automaticRepairsPolicy = defaults.automaticRepairsPolicy;
    	      this.doNotRunExtensionsOnOverprovisionedVMs = defaults.doNotRunExtensionsOnOverprovisionedVMs;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.hostGroup = defaults.hostGroup;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.orchestrationMode = defaults.orchestrationMode;
    	      this.overprovision = defaults.overprovision;
    	      this.plan = defaults.plan;
    	      this.platformFaultDomainCount = defaults.platformFaultDomainCount;
    	      this.proximityPlacementGroup = defaults.proximityPlacementGroup;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.scaleInPolicy = defaults.scaleInPolicy;
    	      this.singlePlacementGroup = defaults.singlePlacementGroup;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.upgradePolicy = defaults.upgradePolicy;
    	      this.virtualMachineProfile = defaults.virtualMachineProfile;
    	      this.vmScaleSetName = defaults.vmScaleSetName;
    	      this.zoneBalance = defaults.zoneBalance;
    	      this.zones = defaults.zones;
        }

        public Builder setAdditionalCapabilities(@Nullable Input<AdditionalCapabilitiesArgs> additionalCapabilities) {
            this.additionalCapabilities = additionalCapabilities;
            return this;
        }

        public Builder setAdditionalCapabilities(@Nullable AdditionalCapabilitiesArgs additionalCapabilities) {
            this.additionalCapabilities = Input.ofNullable(additionalCapabilities);
            return this;
        }

        public Builder setAutomaticRepairsPolicy(@Nullable Input<AutomaticRepairsPolicyArgs> automaticRepairsPolicy) {
            this.automaticRepairsPolicy = automaticRepairsPolicy;
            return this;
        }

        public Builder setAutomaticRepairsPolicy(@Nullable AutomaticRepairsPolicyArgs automaticRepairsPolicy) {
            this.automaticRepairsPolicy = Input.ofNullable(automaticRepairsPolicy);
            return this;
        }

        public Builder setDoNotRunExtensionsOnOverprovisionedVMs(@Nullable Input<Boolean> doNotRunExtensionsOnOverprovisionedVMs) {
            this.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
            return this;
        }

        public Builder setDoNotRunExtensionsOnOverprovisionedVMs(@Nullable Boolean doNotRunExtensionsOnOverprovisionedVMs) {
            this.doNotRunExtensionsOnOverprovisionedVMs = Input.ofNullable(doNotRunExtensionsOnOverprovisionedVMs);
            return this;
        }

        public Builder setExtendedLocation(@Nullable Input<ExtendedLocationArgs> extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }

        public Builder setExtendedLocation(@Nullable ExtendedLocationArgs extendedLocation) {
            this.extendedLocation = Input.ofNullable(extendedLocation);
            return this;
        }

        public Builder setHostGroup(@Nullable Input<SubResourceArgs> hostGroup) {
            this.hostGroup = hostGroup;
            return this;
        }

        public Builder setHostGroup(@Nullable SubResourceArgs hostGroup) {
            this.hostGroup = Input.ofNullable(hostGroup);
            return this;
        }

        public Builder setIdentity(@Nullable Input<VirtualMachineScaleSetIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }

        public Builder setIdentity(@Nullable VirtualMachineScaleSetIdentityArgs identity) {
            this.identity = Input.ofNullable(identity);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setOrchestrationMode(@Nullable Input<Either<String,OrchestrationMode>> orchestrationMode) {
            this.orchestrationMode = orchestrationMode;
            return this;
        }

        public Builder setOrchestrationMode(@Nullable Either<String,OrchestrationMode> orchestrationMode) {
            this.orchestrationMode = Input.ofNullable(orchestrationMode);
            return this;
        }

        public Builder setOverprovision(@Nullable Input<Boolean> overprovision) {
            this.overprovision = overprovision;
            return this;
        }

        public Builder setOverprovision(@Nullable Boolean overprovision) {
            this.overprovision = Input.ofNullable(overprovision);
            return this;
        }

        public Builder setPlan(@Nullable Input<PlanArgs> plan) {
            this.plan = plan;
            return this;
        }

        public Builder setPlan(@Nullable PlanArgs plan) {
            this.plan = Input.ofNullable(plan);
            return this;
        }

        public Builder setPlatformFaultDomainCount(@Nullable Input<Integer> platformFaultDomainCount) {
            this.platformFaultDomainCount = platformFaultDomainCount;
            return this;
        }

        public Builder setPlatformFaultDomainCount(@Nullable Integer platformFaultDomainCount) {
            this.platformFaultDomainCount = Input.ofNullable(platformFaultDomainCount);
            return this;
        }

        public Builder setProximityPlacementGroup(@Nullable Input<SubResourceArgs> proximityPlacementGroup) {
            this.proximityPlacementGroup = proximityPlacementGroup;
            return this;
        }

        public Builder setProximityPlacementGroup(@Nullable SubResourceArgs proximityPlacementGroup) {
            this.proximityPlacementGroup = Input.ofNullable(proximityPlacementGroup);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setScaleInPolicy(@Nullable Input<ScaleInPolicyArgs> scaleInPolicy) {
            this.scaleInPolicy = scaleInPolicy;
            return this;
        }

        public Builder setScaleInPolicy(@Nullable ScaleInPolicyArgs scaleInPolicy) {
            this.scaleInPolicy = Input.ofNullable(scaleInPolicy);
            return this;
        }

        public Builder setSinglePlacementGroup(@Nullable Input<Boolean> singlePlacementGroup) {
            this.singlePlacementGroup = singlePlacementGroup;
            return this;
        }

        public Builder setSinglePlacementGroup(@Nullable Boolean singlePlacementGroup) {
            this.singlePlacementGroup = Input.ofNullable(singlePlacementGroup);
            return this;
        }

        public Builder setSku(@Nullable Input<SkuArgs> sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSku(@Nullable SkuArgs sku) {
            this.sku = Input.ofNullable(sku);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setUpgradePolicy(@Nullable Input<UpgradePolicyArgs> upgradePolicy) {
            this.upgradePolicy = upgradePolicy;
            return this;
        }

        public Builder setUpgradePolicy(@Nullable UpgradePolicyArgs upgradePolicy) {
            this.upgradePolicy = Input.ofNullable(upgradePolicy);
            return this;
        }

        public Builder setVirtualMachineProfile(@Nullable Input<VirtualMachineScaleSetVMProfileArgs> virtualMachineProfile) {
            this.virtualMachineProfile = virtualMachineProfile;
            return this;
        }

        public Builder setVirtualMachineProfile(@Nullable VirtualMachineScaleSetVMProfileArgs virtualMachineProfile) {
            this.virtualMachineProfile = Input.ofNullable(virtualMachineProfile);
            return this;
        }

        public Builder setVmScaleSetName(@Nullable Input<String> vmScaleSetName) {
            this.vmScaleSetName = vmScaleSetName;
            return this;
        }

        public Builder setVmScaleSetName(@Nullable String vmScaleSetName) {
            this.vmScaleSetName = Input.ofNullable(vmScaleSetName);
            return this;
        }

        public Builder setZoneBalance(@Nullable Input<Boolean> zoneBalance) {
            this.zoneBalance = zoneBalance;
            return this;
        }

        public Builder setZoneBalance(@Nullable Boolean zoneBalance) {
            this.zoneBalance = Input.ofNullable(zoneBalance);
            return this;
        }

        public Builder setZones(@Nullable Input<List<String>> zones) {
            this.zones = zones;
            return this;
        }

        public Builder setZones(@Nullable List<String> zones) {
            this.zones = Input.ofNullable(zones);
            return this;
        }
        public VirtualMachineScaleSetArgs build() {
            return new VirtualMachineScaleSetArgs(additionalCapabilities, automaticRepairsPolicy, doNotRunExtensionsOnOverprovisionedVMs, extendedLocation, hostGroup, identity, location, orchestrationMode, overprovision, plan, platformFaultDomainCount, proximityPlacementGroup, resourceGroupName, scaleInPolicy, singlePlacementGroup, sku, tags, upgradePolicy, virtualMachineProfile, vmScaleSetName, zoneBalance, zones);
        }
    }
}
