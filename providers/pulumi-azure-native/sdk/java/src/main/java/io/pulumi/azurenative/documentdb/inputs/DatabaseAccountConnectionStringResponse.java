// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Connection string for the Cosmos DB account
 * 
 */
public final class DatabaseAccountConnectionStringResponse extends io.pulumi.resources.InvokeArgs {

    public static final DatabaseAccountConnectionStringResponse Empty = new DatabaseAccountConnectionStringResponse();

    /**
     * Value of the connection string
     * 
     */
    @InputImport(name="connectionString", required=true)
      private final String connectionString;

    public String getConnectionString() {
        return this.connectionString;
    }

    /**
     * Description of the connection string
     * 
     */
    @InputImport(name="description", required=true)
      private final String description;

    public String getDescription() {
        return this.description;
    }

    public DatabaseAccountConnectionStringResponse(
        String connectionString,
        String description) {
        this.connectionString = Objects.requireNonNull(connectionString, "expected parameter 'connectionString' to be non-null");
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
    }

    private DatabaseAccountConnectionStringResponse() {
        this.connectionString = null;
        this.description = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseAccountConnectionStringResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String connectionString;
        private String description;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseAccountConnectionStringResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionString = defaults.connectionString;
    	      this.description = defaults.description;
        }

        public Builder setConnectionString(String connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public DatabaseAccountConnectionStringResponse build() {
            return new DatabaseAccountConnectionStringResponse(connectionString, description);
        }
    }
}
