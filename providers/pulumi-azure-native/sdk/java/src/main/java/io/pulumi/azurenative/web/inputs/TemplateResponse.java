// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.inputs;

import io.pulumi.azurenative.web.inputs.ContainerResponse;
import io.pulumi.azurenative.web.inputs.DaprResponse;
import io.pulumi.azurenative.web.inputs.ScaleResponse;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Container App versioned application definition.
 * Defines the desired state of an immutable revision.
 * Any changes to this section Will result in a new revision being created
 * 
 */
public final class TemplateResponse extends io.pulumi.resources.InvokeArgs {

    public static final TemplateResponse Empty = new TemplateResponse();

    /**
     * List of container definitions for the Container App.
     * 
     */
    @Import(name="containers")
      private final @Nullable List<ContainerResponse> containers;

    public List<ContainerResponse> containers() {
        return this.containers == null ? List.of() : this.containers;
    }

    /**
     * Dapr configuration for the Container App.
     * 
     */
    @Import(name="dapr")
      private final @Nullable DaprResponse dapr;

    public Optional<DaprResponse> dapr() {
        return this.dapr == null ? Optional.empty() : Optional.ofNullable(this.dapr);
    }

    /**
     * User friendly suffix that is appended to the revision name
     * 
     */
    @Import(name="revisionSuffix")
      private final @Nullable String revisionSuffix;

    public Optional<String> revisionSuffix() {
        return this.revisionSuffix == null ? Optional.empty() : Optional.ofNullable(this.revisionSuffix);
    }

    /**
     * Scaling properties for the Container App.
     * 
     */
    @Import(name="scale")
      private final @Nullable ScaleResponse scale;

    public Optional<ScaleResponse> scale() {
        return this.scale == null ? Optional.empty() : Optional.ofNullable(this.scale);
    }

    public TemplateResponse(
        @Nullable List<ContainerResponse> containers,
        @Nullable DaprResponse dapr,
        @Nullable String revisionSuffix,
        @Nullable ScaleResponse scale) {
        this.containers = containers;
        this.dapr = dapr;
        this.revisionSuffix = revisionSuffix;
        this.scale = scale;
    }

    private TemplateResponse() {
        this.containers = List.of();
        this.dapr = null;
        this.revisionSuffix = null;
        this.scale = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TemplateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<ContainerResponse> containers;
        private @Nullable DaprResponse dapr;
        private @Nullable String revisionSuffix;
        private @Nullable ScaleResponse scale;

        public Builder() {
    	      // Empty
        }

        public Builder(TemplateResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containers = defaults.containers;
    	      this.dapr = defaults.dapr;
    	      this.revisionSuffix = defaults.revisionSuffix;
    	      this.scale = defaults.scale;
        }

        public Builder containers(@Nullable List<ContainerResponse> containers) {
            this.containers = containers;
            return this;
        }
        public Builder containers(ContainerResponse... containers) {
            return containers(List.of(containers));
        }
        public Builder dapr(@Nullable DaprResponse dapr) {
            this.dapr = dapr;
            return this;
        }
        public Builder revisionSuffix(@Nullable String revisionSuffix) {
            this.revisionSuffix = revisionSuffix;
            return this;
        }
        public Builder scale(@Nullable ScaleResponse scale) {
            this.scale = scale;
            return this;
        }        public TemplateResponse build() {
            return new TemplateResponse(containers, dapr, revisionSuffix, scale);
        }
    }
}
