// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automanage.inputs;

import io.pulumi.azurenative.automanage.inputs.ConfigurationProfileAssignmentComplianceResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Automanage configuration profile assignment properties.
 * 
 */
public final class ConfigurationProfileAssignmentPropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final ConfigurationProfileAssignmentPropertiesResponse Empty = new ConfigurationProfileAssignmentPropertiesResponse();

    /**
     * The Automanage account ARM Resource URI
     * 
     */
    @InputImport(name="accountId")
        private final @Nullable String accountId;

    public Optional<String> getAccountId() {
        return this.accountId == null ? Optional.empty() : Optional.ofNullable(this.accountId);
    }

    /**
     * The configuration setting for the configuration profile.
     * 
     */
    @InputImport(name="compliance")
        private final @Nullable ConfigurationProfileAssignmentComplianceResponse compliance;

    public Optional<ConfigurationProfileAssignmentComplianceResponse> getCompliance() {
        return this.compliance == null ? Optional.empty() : Optional.ofNullable(this.compliance);
    }

    /**
     * A value indicating configuration profile.
     * 
     */
    @InputImport(name="configurationProfile")
        private final @Nullable String configurationProfile;

    public Optional<String> getConfigurationProfile() {
        return this.configurationProfile == null ? Optional.empty() : Optional.ofNullable(this.configurationProfile);
    }

    /**
     * The configuration profile custom preferences ARM resource URI
     * 
     */
    @InputImport(name="configurationProfilePreferenceId")
        private final @Nullable String configurationProfilePreferenceId;

    public Optional<String> getConfigurationProfilePreferenceId() {
        return this.configurationProfilePreferenceId == null ? Optional.empty() : Optional.ofNullable(this.configurationProfilePreferenceId);
    }

    /**
     * The state of onboarding, which only appears in the response.
     * 
     */
    @InputImport(name="provisioningState", required=true)
        private final String provisioningState;

    public String getProvisioningState() {
        return this.provisioningState;
    }

    /**
     * The target VM resource URI
     * 
     */
    @InputImport(name="targetId")
        private final @Nullable String targetId;

    public Optional<String> getTargetId() {
        return this.targetId == null ? Optional.empty() : Optional.ofNullable(this.targetId);
    }

    public ConfigurationProfileAssignmentPropertiesResponse(
        @Nullable String accountId,
        @Nullable ConfigurationProfileAssignmentComplianceResponse compliance,
        @Nullable String configurationProfile,
        @Nullable String configurationProfilePreferenceId,
        String provisioningState,
        @Nullable String targetId) {
        this.accountId = accountId;
        this.compliance = compliance;
        this.configurationProfile = configurationProfile;
        this.configurationProfilePreferenceId = configurationProfilePreferenceId;
        this.provisioningState = Objects.requireNonNull(provisioningState, "expected parameter 'provisioningState' to be non-null");
        this.targetId = targetId;
    }

    private ConfigurationProfileAssignmentPropertiesResponse() {
        this.accountId = null;
        this.compliance = null;
        this.configurationProfile = null;
        this.configurationProfilePreferenceId = null;
        this.provisioningState = null;
        this.targetId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigurationProfileAssignmentPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accountId;
        private @Nullable ConfigurationProfileAssignmentComplianceResponse compliance;
        private @Nullable String configurationProfile;
        private @Nullable String configurationProfilePreferenceId;
        private String provisioningState;
        private @Nullable String targetId;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigurationProfileAssignmentPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.compliance = defaults.compliance;
    	      this.configurationProfile = defaults.configurationProfile;
    	      this.configurationProfilePreferenceId = defaults.configurationProfilePreferenceId;
    	      this.provisioningState = defaults.provisioningState;
    	      this.targetId = defaults.targetId;
        }

        public Builder setAccountId(@Nullable String accountId) {
            this.accountId = accountId;
            return this;
        }

        public Builder setCompliance(@Nullable ConfigurationProfileAssignmentComplianceResponse compliance) {
            this.compliance = compliance;
            return this;
        }

        public Builder setConfigurationProfile(@Nullable String configurationProfile) {
            this.configurationProfile = configurationProfile;
            return this;
        }

        public Builder setConfigurationProfilePreferenceId(@Nullable String configurationProfilePreferenceId) {
            this.configurationProfilePreferenceId = configurationProfilePreferenceId;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setTargetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        public ConfigurationProfileAssignmentPropertiesResponse build() {
            return new ConfigurationProfileAssignmentPropertiesResponse(accountId, compliance, configurationProfile, configurationProfilePreferenceId, provisioningState, targetId);
        }
    }
}
