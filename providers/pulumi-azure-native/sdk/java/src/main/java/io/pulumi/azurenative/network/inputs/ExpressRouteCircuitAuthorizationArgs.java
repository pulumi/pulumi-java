// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.azurenative.network.enums.AuthorizationUseStatus;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Authorization in an ExpressRouteCircuit resource.
 * 
 */
public final class ExpressRouteCircuitAuthorizationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ExpressRouteCircuitAuthorizationArgs Empty = new ExpressRouteCircuitAuthorizationArgs();

    /**
     * The authorization key.
     * 
     */
    @InputImport(name="authorizationKey")
      private final @Nullable Output<String> authorizationKey;

    public Output<String> getAuthorizationKey() {
        return this.authorizationKey == null ? Output.empty() : this.authorizationKey;
    }

    /**
     * The authorization use status.
     * 
     */
    @InputImport(name="authorizationUseStatus")
      private final @Nullable Output<Either<String,AuthorizationUseStatus>> authorizationUseStatus;

    public Output<Either<String,AuthorizationUseStatus>> getAuthorizationUseStatus() {
        return this.authorizationUseStatus == null ? Output.empty() : this.authorizationUseStatus;
    }

    /**
     * Resource ID.
     * 
     */
    @InputImport(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Output.empty() : this.id;
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    public ExpressRouteCircuitAuthorizationArgs(
        @Nullable Output<String> authorizationKey,
        @Nullable Output<Either<String,AuthorizationUseStatus>> authorizationUseStatus,
        @Nullable Output<String> id,
        @Nullable Output<String> name) {
        this.authorizationKey = authorizationKey;
        this.authorizationUseStatus = authorizationUseStatus;
        this.id = id;
        this.name = name;
    }

    private ExpressRouteCircuitAuthorizationArgs() {
        this.authorizationKey = Output.empty();
        this.authorizationUseStatus = Output.empty();
        this.id = Output.empty();
        this.name = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExpressRouteCircuitAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> authorizationKey;
        private @Nullable Output<Either<String,AuthorizationUseStatus>> authorizationUseStatus;
        private @Nullable Output<String> id;
        private @Nullable Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(ExpressRouteCircuitAuthorizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationKey = defaults.authorizationKey;
    	      this.authorizationUseStatus = defaults.authorizationUseStatus;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        public Builder authorizationKey(@Nullable Output<String> authorizationKey) {
            this.authorizationKey = authorizationKey;
            return this;
        }

        public Builder authorizationKey(@Nullable String authorizationKey) {
            this.authorizationKey = Output.ofNullable(authorizationKey);
            return this;
        }

        public Builder authorizationUseStatus(@Nullable Output<Either<String,AuthorizationUseStatus>> authorizationUseStatus) {
            this.authorizationUseStatus = authorizationUseStatus;
            return this;
        }

        public Builder authorizationUseStatus(@Nullable Either<String,AuthorizationUseStatus> authorizationUseStatus) {
            this.authorizationUseStatus = Output.ofNullable(authorizationUseStatus);
            return this;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = Output.ofNullable(id);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public ExpressRouteCircuitAuthorizationArgs build() {
            return new ExpressRouteCircuitAuthorizationArgs(authorizationKey, authorizationUseStatus, id, name);
        }
    }
}
