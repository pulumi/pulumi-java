// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Describes destination endpoint for routing traffic.
 * 
 */
public final class GatewayDestinationArgs extends io.pulumi.resources.ResourceArgs {

    public static final GatewayDestinationArgs Empty = new GatewayDestinationArgs();

    /**
     * Name of the service fabric Mesh application.
     * 
     */
    @InputImport(name="applicationName", required=true)
      private final Input<String> applicationName;

    public Input<String> getApplicationName() {
        return this.applicationName;
    }

    /**
     * name of the endpoint in the service.
     * 
     */
    @InputImport(name="endpointName", required=true)
      private final Input<String> endpointName;

    public Input<String> getEndpointName() {
        return this.endpointName;
    }

    /**
     * service that contains the endpoint.
     * 
     */
    @InputImport(name="serviceName", required=true)
      private final Input<String> serviceName;

    public Input<String> getServiceName() {
        return this.serviceName;
    }

    public GatewayDestinationArgs(
        Input<String> applicationName,
        Input<String> endpointName,
        Input<String> serviceName) {
        this.applicationName = Objects.requireNonNull(applicationName, "expected parameter 'applicationName' to be non-null");
        this.endpointName = Objects.requireNonNull(endpointName, "expected parameter 'endpointName' to be non-null");
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
    }

    private GatewayDestinationArgs() {
        this.applicationName = Input.empty();
        this.endpointName = Input.empty();
        this.serviceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> applicationName;
        private Input<String> endpointName;
        private Input<String> serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayDestinationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationName = defaults.applicationName;
    	      this.endpointName = defaults.endpointName;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder applicationName(Input<String> applicationName) {
            this.applicationName = Objects.requireNonNull(applicationName);
            return this;
        }

        public Builder applicationName(String applicationName) {
            this.applicationName = Input.of(Objects.requireNonNull(applicationName));
            return this;
        }

        public Builder endpointName(Input<String> endpointName) {
            this.endpointName = Objects.requireNonNull(endpointName);
            return this;
        }

        public Builder endpointName(String endpointName) {
            this.endpointName = Input.of(Objects.requireNonNull(endpointName));
            return this;
        }

        public Builder serviceName(Input<String> serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }

        public Builder serviceName(String serviceName) {
            this.serviceName = Input.of(Objects.requireNonNull(serviceName));
            return this;
        }
        public GatewayDestinationArgs build() {
            return new GatewayDestinationArgs(applicationName, endpointName, serviceName);
        }
    }
}
