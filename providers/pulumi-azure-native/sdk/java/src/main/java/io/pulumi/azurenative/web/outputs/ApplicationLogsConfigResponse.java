// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.azurenative.web.outputs.AzureBlobStorageApplicationLogsConfigResponse;
import io.pulumi.azurenative.web.outputs.AzureTableStorageApplicationLogsConfigResponse;
import io.pulumi.azurenative.web.outputs.FileSystemApplicationLogsConfigResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ApplicationLogsConfigResponse {
    /**
     * Application logs to blob storage configuration.
     * 
     */
    private final @Nullable AzureBlobStorageApplicationLogsConfigResponse azureBlobStorage;
    /**
     * Application logs to azure table storage configuration.
     * 
     */
    private final @Nullable AzureTableStorageApplicationLogsConfigResponse azureTableStorage;
    /**
     * Application logs to file system configuration.
     * 
     */
    private final @Nullable FileSystemApplicationLogsConfigResponse fileSystem;

    @OutputCustomType.Constructor
    private ApplicationLogsConfigResponse(
        @OutputCustomType.Parameter("azureBlobStorage") @Nullable AzureBlobStorageApplicationLogsConfigResponse azureBlobStorage,
        @OutputCustomType.Parameter("azureTableStorage") @Nullable AzureTableStorageApplicationLogsConfigResponse azureTableStorage,
        @OutputCustomType.Parameter("fileSystem") @Nullable FileSystemApplicationLogsConfigResponse fileSystem) {
        this.azureBlobStorage = azureBlobStorage;
        this.azureTableStorage = azureTableStorage;
        this.fileSystem = fileSystem;
    }

    /**
     * Application logs to blob storage configuration.
     * 
    */
    public Optional<AzureBlobStorageApplicationLogsConfigResponse> getAzureBlobStorage() {
        return Optional.ofNullable(this.azureBlobStorage);
    }
    /**
     * Application logs to azure table storage configuration.
     * 
    */
    public Optional<AzureTableStorageApplicationLogsConfigResponse> getAzureTableStorage() {
        return Optional.ofNullable(this.azureTableStorage);
    }
    /**
     * Application logs to file system configuration.
     * 
    */
    public Optional<FileSystemApplicationLogsConfigResponse> getFileSystem() {
        return Optional.ofNullable(this.fileSystem);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationLogsConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AzureBlobStorageApplicationLogsConfigResponse azureBlobStorage;
        private @Nullable AzureTableStorageApplicationLogsConfigResponse azureTableStorage;
        private @Nullable FileSystemApplicationLogsConfigResponse fileSystem;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationLogsConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureBlobStorage = defaults.azureBlobStorage;
    	      this.azureTableStorage = defaults.azureTableStorage;
    	      this.fileSystem = defaults.fileSystem;
        }

        public Builder setAzureBlobStorage(@Nullable AzureBlobStorageApplicationLogsConfigResponse azureBlobStorage) {
            this.azureBlobStorage = azureBlobStorage;
            return this;
        }

        public Builder setAzureTableStorage(@Nullable AzureTableStorageApplicationLogsConfigResponse azureTableStorage) {
            this.azureTableStorage = azureTableStorage;
            return this;
        }

        public Builder setFileSystem(@Nullable FileSystemApplicationLogsConfigResponse fileSystem) {
            this.fileSystem = fileSystem;
            return this;
        }
        public ApplicationLogsConfigResponse build() {
            return new ApplicationLogsConfigResponse(azureBlobStorage, azureTableStorage, fileSystem);
        }
    }
}
