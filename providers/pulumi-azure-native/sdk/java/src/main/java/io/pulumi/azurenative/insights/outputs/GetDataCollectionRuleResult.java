// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.outputs;

import io.pulumi.azurenative.insights.outputs.DataCollectionRuleResponseDataSources;
import io.pulumi.azurenative.insights.outputs.DataCollectionRuleResponseDestinations;
import io.pulumi.azurenative.insights.outputs.DataFlowResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDataCollectionRuleResult {
    /**
     * The specification of data flows.
     * 
     */
    private final @Nullable List<DataFlowResponse> dataFlows;
    /**
     * The specification of data sources.
     * This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
     * 
     */
    private final @Nullable DataCollectionRuleResponseDataSources dataSources;
    /**
     * Description of the data collection rule.
     * 
     */
    private final @Nullable String description;
    /**
     * The specification of destinations.
     * 
     */
    private final @Nullable DataCollectionRuleResponseDestinations destinations;
    /**
     * Resource entity tag (ETag).
     * 
     */
    private final String etag;
    /**
     * Fully qualified ID of the resource.
     * 
     */
    private final String id;
    /**
     * The immutable ID of this data collection rule. This property is READ-ONLY.
     * 
     */
    private final String immutableId;
    /**
     * The kind of the resource.
     * 
     */
    private final @Nullable String kind;
    /**
     * The geo-location where the resource lives.
     * 
     */
    private final String location;
    /**
     * The name of the resource.
     * 
     */
    private final String name;
    /**
     * The resource provisioning state.
     * 
     */
    private final String provisioningState;
    /**
     * Resource tags.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * The type of the resource.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetDataCollectionRuleResult(
        @CustomType.Parameter("dataFlows") @Nullable List<DataFlowResponse> dataFlows,
        @CustomType.Parameter("dataSources") @Nullable DataCollectionRuleResponseDataSources dataSources,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("destinations") @Nullable DataCollectionRuleResponseDestinations destinations,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("immutableId") String immutableId,
        @CustomType.Parameter("kind") @Nullable String kind,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.dataFlows = dataFlows;
        this.dataSources = dataSources;
        this.description = description;
        this.destinations = destinations;
        this.etag = etag;
        this.id = id;
        this.immutableId = immutableId;
        this.kind = kind;
        this.location = location;
        this.name = name;
        this.provisioningState = provisioningState;
        this.tags = tags;
        this.type = type;
    }

    /**
     * The specification of data flows.
     * 
    */
    public List<DataFlowResponse> getDataFlows() {
        return this.dataFlows == null ? List.of() : this.dataFlows;
    }
    /**
     * The specification of data sources.
     * This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
     * 
    */
    public Optional<DataCollectionRuleResponseDataSources> getDataSources() {
        return Optional.ofNullable(this.dataSources);
    }
    /**
     * Description of the data collection rule.
     * 
    */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * The specification of destinations.
     * 
    */
    public Optional<DataCollectionRuleResponseDestinations> getDestinations() {
        return Optional.ofNullable(this.destinations);
    }
    /**
     * Resource entity tag (ETag).
     * 
    */
    public String getEtag() {
        return this.etag;
    }
    /**
     * Fully qualified ID of the resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * The immutable ID of this data collection rule. This property is READ-ONLY.
     * 
    */
    public String getImmutableId() {
        return this.immutableId;
    }
    /**
     * The kind of the resource.
     * 
    */
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * The geo-location where the resource lives.
     * 
    */
    public String getLocation() {
        return this.location;
    }
    /**
     * The name of the resource.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The resource provisioning state.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource tags.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * The type of the resource.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataCollectionRuleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<DataFlowResponse> dataFlows;
        private @Nullable DataCollectionRuleResponseDataSources dataSources;
        private @Nullable String description;
        private @Nullable DataCollectionRuleResponseDestinations destinations;
        private String etag;
        private String id;
        private String immutableId;
        private @Nullable String kind;
        private String location;
        private String name;
        private String provisioningState;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDataCollectionRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataFlows = defaults.dataFlows;
    	      this.dataSources = defaults.dataSources;
    	      this.description = defaults.description;
    	      this.destinations = defaults.destinations;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.immutableId = defaults.immutableId;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder dataFlows(@Nullable List<DataFlowResponse> dataFlows) {
            this.dataFlows = dataFlows;
            return this;
        }
        public Builder dataFlows(DataFlowResponse... dataFlows) {
            return dataFlows(List.of(dataFlows));
        }
        public Builder dataSources(@Nullable DataCollectionRuleResponseDataSources dataSources) {
            this.dataSources = dataSources;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder destinations(@Nullable DataCollectionRuleResponseDestinations destinations) {
            this.destinations = destinations;
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder immutableId(String immutableId) {
            this.immutableId = Objects.requireNonNull(immutableId);
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetDataCollectionRuleResult build() {
            return new GetDataCollectionRuleResult(dataFlows, dataSources, description, destinations, etag, id, immutableId, kind, location, name, provisioningState, tags, type);
        }
    }
}
