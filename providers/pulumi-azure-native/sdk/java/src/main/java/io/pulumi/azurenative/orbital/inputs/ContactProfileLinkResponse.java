// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.orbital.inputs;

import io.pulumi.azurenative.orbital.inputs.ContactProfileLinkChannelResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Contact Profile link
 * 
 */
public final class ContactProfileLinkResponse extends io.pulumi.resources.InvokeArgs {

    public static final ContactProfileLinkResponse Empty = new ContactProfileLinkResponse();

    /**
     * Contact Profile Link Channel
     * 
     */
    @InputImport(name="channels", required=true)
      private final List<ContactProfileLinkChannelResponse> channels;

    public List<ContactProfileLinkChannelResponse> getChannels() {
        return this.channels;
    }

    /**
     * Direction (uplink or downlink)
     * 
     */
    @InputImport(name="direction", required=true)
      private final String direction;

    public String getDirection() {
        return this.direction;
    }

    /**
     * Effective Isotropic Radiated Power (EIRP) in dBW.
     * 
     */
    @InputImport(name="eirpdBW")
      private final @Nullable Double eirpdBW;

    public Optional<Double> getEirpdBW() {
        return this.eirpdBW == null ? Optional.empty() : Optional.ofNullable(this.eirpdBW);
    }

    /**
     * Gain To Noise Temperature in db/K.
     * 
     */
    @InputImport(name="gainOverTemperature")
      private final @Nullable Double gainOverTemperature;

    public Optional<Double> getGainOverTemperature() {
        return this.gainOverTemperature == null ? Optional.empty() : Optional.ofNullable(this.gainOverTemperature);
    }

    /**
     * polarization. eg (RHCP, LHCP)
     * 
     */
    @InputImport(name="polarization", required=true)
      private final String polarization;

    public String getPolarization() {
        return this.polarization;
    }

    public ContactProfileLinkResponse(
        List<ContactProfileLinkChannelResponse> channels,
        String direction,
        @Nullable Double eirpdBW,
        @Nullable Double gainOverTemperature,
        String polarization) {
        this.channels = Objects.requireNonNull(channels, "expected parameter 'channels' to be non-null");
        this.direction = Objects.requireNonNull(direction, "expected parameter 'direction' to be non-null");
        this.eirpdBW = eirpdBW;
        this.gainOverTemperature = gainOverTemperature;
        this.polarization = Objects.requireNonNull(polarization, "expected parameter 'polarization' to be non-null");
    }

    private ContactProfileLinkResponse() {
        this.channels = List.of();
        this.direction = null;
        this.eirpdBW = null;
        this.gainOverTemperature = null;
        this.polarization = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactProfileLinkResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ContactProfileLinkChannelResponse> channels;
        private String direction;
        private @Nullable Double eirpdBW;
        private @Nullable Double gainOverTemperature;
        private String polarization;

        public Builder() {
    	      // Empty
        }

        public Builder(ContactProfileLinkResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channels = defaults.channels;
    	      this.direction = defaults.direction;
    	      this.eirpdBW = defaults.eirpdBW;
    	      this.gainOverTemperature = defaults.gainOverTemperature;
    	      this.polarization = defaults.polarization;
        }

        public Builder channels(List<ContactProfileLinkChannelResponse> channels) {
            this.channels = Objects.requireNonNull(channels);
            return this;
        }

        public Builder direction(String direction) {
            this.direction = Objects.requireNonNull(direction);
            return this;
        }

        public Builder eirpdBW(@Nullable Double eirpdBW) {
            this.eirpdBW = eirpdBW;
            return this;
        }

        public Builder gainOverTemperature(@Nullable Double gainOverTemperature) {
            this.gainOverTemperature = gainOverTemperature;
            return this;
        }

        public Builder polarization(String polarization) {
            this.polarization = Objects.requireNonNull(polarization);
            return this;
        }
        public ContactProfileLinkResponse build() {
            return new ContactProfileLinkResponse(channels, direction, eirpdBW, gainOverTemperature, polarization);
        }
    }
}
