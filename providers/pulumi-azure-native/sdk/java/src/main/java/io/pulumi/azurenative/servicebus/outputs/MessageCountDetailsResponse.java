// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicebus.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.util.Objects;

@OutputCustomType
public final class MessageCountDetailsResponse {
    private final Double activeMessageCount;
    private final Double deadLetterMessageCount;
    private final Double scheduledMessageCount;
    private final Double transferDeadLetterMessageCount;
    private final Double transferMessageCount;

    @OutputCustomType.Constructor({"activeMessageCount","deadLetterMessageCount","scheduledMessageCount","transferDeadLetterMessageCount","transferMessageCount"})
    private MessageCountDetailsResponse(
        Double activeMessageCount,
        Double deadLetterMessageCount,
        Double scheduledMessageCount,
        Double transferDeadLetterMessageCount,
        Double transferMessageCount) {
        this.activeMessageCount = Objects.requireNonNull(activeMessageCount);
        this.deadLetterMessageCount = Objects.requireNonNull(deadLetterMessageCount);
        this.scheduledMessageCount = Objects.requireNonNull(scheduledMessageCount);
        this.transferDeadLetterMessageCount = Objects.requireNonNull(transferDeadLetterMessageCount);
        this.transferMessageCount = Objects.requireNonNull(transferMessageCount);
    }

    public Double getActiveMessageCount() {
        return this.activeMessageCount;
    }
    public Double getDeadLetterMessageCount() {
        return this.deadLetterMessageCount;
    }
    public Double getScheduledMessageCount() {
        return this.scheduledMessageCount;
    }
    public Double getTransferDeadLetterMessageCount() {
        return this.transferDeadLetterMessageCount;
    }
    public Double getTransferMessageCount() {
        return this.transferMessageCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MessageCountDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double activeMessageCount;
        private Double deadLetterMessageCount;
        private Double scheduledMessageCount;
        private Double transferDeadLetterMessageCount;
        private Double transferMessageCount;

        public Builder() {
    	      // Empty
        }

        public Builder(MessageCountDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeMessageCount = defaults.activeMessageCount;
    	      this.deadLetterMessageCount = defaults.deadLetterMessageCount;
    	      this.scheduledMessageCount = defaults.scheduledMessageCount;
    	      this.transferDeadLetterMessageCount = defaults.transferDeadLetterMessageCount;
    	      this.transferMessageCount = defaults.transferMessageCount;
        }

        public Builder setActiveMessageCount(Double activeMessageCount) {
            this.activeMessageCount = Objects.requireNonNull(activeMessageCount);
            return this;
        }

        public Builder setDeadLetterMessageCount(Double deadLetterMessageCount) {
            this.deadLetterMessageCount = Objects.requireNonNull(deadLetterMessageCount);
            return this;
        }

        public Builder setScheduledMessageCount(Double scheduledMessageCount) {
            this.scheduledMessageCount = Objects.requireNonNull(scheduledMessageCount);
            return this;
        }

        public Builder setTransferDeadLetterMessageCount(Double transferDeadLetterMessageCount) {
            this.transferDeadLetterMessageCount = Objects.requireNonNull(transferDeadLetterMessageCount);
            return this;
        }

        public Builder setTransferMessageCount(Double transferMessageCount) {
            this.transferMessageCount = Objects.requireNonNull(transferMessageCount);
            return this;
        }

        public MessageCountDetailsResponse build() {
            return new MessageCountDetailsResponse(activeMessageCount, deadLetterMessageCount, scheduledMessageCount, transferDeadLetterMessageCount, transferMessageCount);
        }
    }
}
