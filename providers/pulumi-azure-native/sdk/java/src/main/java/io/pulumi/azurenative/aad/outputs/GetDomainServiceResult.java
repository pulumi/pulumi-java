// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.aad.outputs;

import io.pulumi.azurenative.aad.outputs.DomainSecuritySettingsResponse;
import io.pulumi.azurenative.aad.outputs.LdapsSettingsResponse;
import io.pulumi.azurenative.aad.outputs.MigrationPropertiesResponse;
import io.pulumi.azurenative.aad.outputs.NotificationSettingsResponse;
import io.pulumi.azurenative.aad.outputs.ReplicaSetResponse;
import io.pulumi.azurenative.aad.outputs.ResourceForestSettingsResponse;
import io.pulumi.azurenative.aad.outputs.SystemDataResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetDomainServiceResult {
    private final String deploymentId;
    private final @Nullable String domainConfigurationType;
    private final @Nullable String domainName;
    private final @Nullable DomainSecuritySettingsResponse domainSecuritySettings;
    private final @Nullable String etag;
    private final @Nullable String filteredSync;
    private final String id;
    private final @Nullable LdapsSettingsResponse ldapsSettings;
    private final @Nullable String location;
    private final MigrationPropertiesResponse migrationProperties;
    private final String name;
    private final @Nullable NotificationSettingsResponse notificationSettings;
    private final String provisioningState;
    private final @Nullable List<ReplicaSetResponse> replicaSets;
    private final @Nullable ResourceForestSettingsResponse resourceForestSettings;
    private final @Nullable String sku;
    private final String syncOwner;
    private final SystemDataResponse systemData;
    private final @Nullable Map<String,String> tags;
    private final String tenantId;
    private final String type;
    private final Integer version;

    @OutputCustomType.Constructor({"deploymentId","domainConfigurationType","domainName","domainSecuritySettings","etag","filteredSync","id","ldapsSettings","location","migrationProperties","name","notificationSettings","provisioningState","replicaSets","resourceForestSettings","sku","syncOwner","systemData","tags","tenantId","type","version"})
    private GetDomainServiceResult(
        String deploymentId,
        @Nullable String domainConfigurationType,
        @Nullable String domainName,
        @Nullable DomainSecuritySettingsResponse domainSecuritySettings,
        @Nullable String etag,
        @Nullable String filteredSync,
        String id,
        @Nullable LdapsSettingsResponse ldapsSettings,
        @Nullable String location,
        MigrationPropertiesResponse migrationProperties,
        String name,
        @Nullable NotificationSettingsResponse notificationSettings,
        String provisioningState,
        @Nullable List<ReplicaSetResponse> replicaSets,
        @Nullable ResourceForestSettingsResponse resourceForestSettings,
        @Nullable String sku,
        String syncOwner,
        SystemDataResponse systemData,
        @Nullable Map<String,String> tags,
        String tenantId,
        String type,
        Integer version) {
        this.deploymentId = Objects.requireNonNull(deploymentId);
        this.domainConfigurationType = domainConfigurationType;
        this.domainName = domainName;
        this.domainSecuritySettings = domainSecuritySettings;
        this.etag = etag;
        this.filteredSync = filteredSync;
        this.id = Objects.requireNonNull(id);
        this.ldapsSettings = ldapsSettings;
        this.location = location;
        this.migrationProperties = Objects.requireNonNull(migrationProperties);
        this.name = Objects.requireNonNull(name);
        this.notificationSettings = notificationSettings;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.replicaSets = replicaSets;
        this.resourceForestSettings = resourceForestSettings;
        this.sku = sku;
        this.syncOwner = Objects.requireNonNull(syncOwner);
        this.systemData = Objects.requireNonNull(systemData);
        this.tags = tags;
        this.tenantId = Objects.requireNonNull(tenantId);
        this.type = Objects.requireNonNull(type);
        this.version = Objects.requireNonNull(version);
    }

    public String getDeploymentId() {
        return this.deploymentId;
    }
    public Optional<String> getDomainConfigurationType() {
        return Optional.ofNullable(this.domainConfigurationType);
    }
    public Optional<String> getDomainName() {
        return Optional.ofNullable(this.domainName);
    }
    public Optional<DomainSecuritySettingsResponse> getDomainSecuritySettings() {
        return Optional.ofNullable(this.domainSecuritySettings);
    }
    public Optional<String> getEtag() {
        return Optional.ofNullable(this.etag);
    }
    public Optional<String> getFilteredSync() {
        return Optional.ofNullable(this.filteredSync);
    }
    public String getId() {
        return this.id;
    }
    public Optional<LdapsSettingsResponse> getLdapsSettings() {
        return Optional.ofNullable(this.ldapsSettings);
    }
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public MigrationPropertiesResponse getMigrationProperties() {
        return this.migrationProperties;
    }
    public String getName() {
        return this.name;
    }
    public Optional<NotificationSettingsResponse> getNotificationSettings() {
        return Optional.ofNullable(this.notificationSettings);
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public List<ReplicaSetResponse> getReplicaSets() {
        return this.replicaSets == null ? List.of() : this.replicaSets;
    }
    public Optional<ResourceForestSettingsResponse> getResourceForestSettings() {
        return Optional.ofNullable(this.resourceForestSettings);
    }
    public Optional<String> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public String getSyncOwner() {
        return this.syncOwner;
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getTenantId() {
        return this.tenantId;
    }
    public String getType() {
        return this.type;
    }
    public Integer getVersion() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainServiceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String deploymentId;
        private @Nullable String domainConfigurationType;
        private @Nullable String domainName;
        private @Nullable DomainSecuritySettingsResponse domainSecuritySettings;
        private @Nullable String etag;
        private @Nullable String filteredSync;
        private String id;
        private @Nullable LdapsSettingsResponse ldapsSettings;
        private @Nullable String location;
        private MigrationPropertiesResponse migrationProperties;
        private String name;
        private @Nullable NotificationSettingsResponse notificationSettings;
        private String provisioningState;
        private @Nullable List<ReplicaSetResponse> replicaSets;
        private @Nullable ResourceForestSettingsResponse resourceForestSettings;
        private @Nullable String sku;
        private String syncOwner;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String tenantId;
        private String type;
        private Integer version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDomainServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentId = defaults.deploymentId;
    	      this.domainConfigurationType = defaults.domainConfigurationType;
    	      this.domainName = defaults.domainName;
    	      this.domainSecuritySettings = defaults.domainSecuritySettings;
    	      this.etag = defaults.etag;
    	      this.filteredSync = defaults.filteredSync;
    	      this.id = defaults.id;
    	      this.ldapsSettings = defaults.ldapsSettings;
    	      this.location = defaults.location;
    	      this.migrationProperties = defaults.migrationProperties;
    	      this.name = defaults.name;
    	      this.notificationSettings = defaults.notificationSettings;
    	      this.provisioningState = defaults.provisioningState;
    	      this.replicaSets = defaults.replicaSets;
    	      this.resourceForestSettings = defaults.resourceForestSettings;
    	      this.sku = defaults.sku;
    	      this.syncOwner = defaults.syncOwner;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        public Builder setDeploymentId(String deploymentId) {
            this.deploymentId = Objects.requireNonNull(deploymentId);
            return this;
        }

        public Builder setDomainConfigurationType(@Nullable String domainConfigurationType) {
            this.domainConfigurationType = domainConfigurationType;
            return this;
        }

        public Builder setDomainName(@Nullable String domainName) {
            this.domainName = domainName;
            return this;
        }

        public Builder setDomainSecuritySettings(@Nullable DomainSecuritySettingsResponse domainSecuritySettings) {
            this.domainSecuritySettings = domainSecuritySettings;
            return this;
        }

        public Builder setEtag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }

        public Builder setFilteredSync(@Nullable String filteredSync) {
            this.filteredSync = filteredSync;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLdapsSettings(@Nullable LdapsSettingsResponse ldapsSettings) {
            this.ldapsSettings = ldapsSettings;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setMigrationProperties(MigrationPropertiesResponse migrationProperties) {
            this.migrationProperties = Objects.requireNonNull(migrationProperties);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNotificationSettings(@Nullable NotificationSettingsResponse notificationSettings) {
            this.notificationSettings = notificationSettings;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setReplicaSets(@Nullable List<ReplicaSetResponse> replicaSets) {
            this.replicaSets = replicaSets;
            return this;
        }

        public Builder setResourceForestSettings(@Nullable ResourceForestSettingsResponse resourceForestSettings) {
            this.resourceForestSettings = resourceForestSettings;
            return this;
        }

        public Builder setSku(@Nullable String sku) {
            this.sku = sku;
            return this;
        }

        public Builder setSyncOwner(String syncOwner) {
            this.syncOwner = Objects.requireNonNull(syncOwner);
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVersion(Integer version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public GetDomainServiceResult build() {
            return new GetDomainServiceResult(deploymentId, domainConfigurationType, domainName, domainSecuritySettings, etag, filteredSync, id, ldapsSettings, location, migrationProperties, name, notificationSettings, provisioningState, replicaSets, resourceForestSettings, sku, syncOwner, systemData, tags, tenantId, type, version);
        }
    }
}
