// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Periodic timer event source.
 * 
 */
public final class PeriodicTimerSourceInfoResponse extends io.pulumi.resources.InvokeArgs {

    public static final PeriodicTimerSourceInfoResponse Empty = new PeriodicTimerSourceInfoResponse();

    /**
     * Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
     * 
     */
    @InputImport(name="schedule", required=true)
      private final String schedule;

    public String getSchedule() {
        return this.schedule;
    }

    /**
     * The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.
     * 
     */
    @InputImport(name="startTime", required=true)
      private final String startTime;

    public String getStartTime() {
        return this.startTime;
    }

    /**
     * Topic where periodic events are published to IoT device.
     * 
     */
    @InputImport(name="topic")
      private final @Nullable String topic;

    public Optional<String> getTopic() {
        return this.topic == null ? Optional.empty() : Optional.ofNullable(this.topic);
    }

    public PeriodicTimerSourceInfoResponse(
        String schedule,
        String startTime,
        @Nullable String topic) {
        this.schedule = Objects.requireNonNull(schedule, "expected parameter 'schedule' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
        this.topic = topic;
    }

    private PeriodicTimerSourceInfoResponse() {
        this.schedule = null;
        this.startTime = null;
        this.topic = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PeriodicTimerSourceInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String schedule;
        private String startTime;
        private @Nullable String topic;

        public Builder() {
    	      // Empty
        }

        public Builder(PeriodicTimerSourceInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.schedule = defaults.schedule;
    	      this.startTime = defaults.startTime;
    	      this.topic = defaults.topic;
        }

        public Builder setSchedule(String schedule) {
            this.schedule = Objects.requireNonNull(schedule);
            return this;
        }

        public Builder setStartTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public Builder setTopic(@Nullable String topic) {
            this.topic = topic;
            return this;
        }
        public PeriodicTimerSourceInfoResponse build() {
            return new PeriodicTimerSourceInfoResponse(schedule, startTime, topic);
        }
    }
}
