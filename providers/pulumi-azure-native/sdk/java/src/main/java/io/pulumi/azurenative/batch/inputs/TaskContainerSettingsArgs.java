// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.inputs;

import io.pulumi.azurenative.batch.enums.ContainerWorkingDirectory;
import io.pulumi.azurenative.batch.inputs.ContainerRegistryArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskContainerSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final TaskContainerSettingsArgs Empty = new TaskContainerSettingsArgs();

    @InputImport(name="containerRunOptions")
    private final @Nullable Input<String> containerRunOptions;

    public Input<String> getContainerRunOptions() {
        return this.containerRunOptions == null ? Input.empty() : this.containerRunOptions;
    }

    @InputImport(name="imageName", required=true)
    private final Input<String> imageName;

    public Input<String> getImageName() {
        return this.imageName;
    }

    @InputImport(name="registry")
    private final @Nullable Input<ContainerRegistryArgs> registry;

    public Input<ContainerRegistryArgs> getRegistry() {
        return this.registry == null ? Input.empty() : this.registry;
    }

    @InputImport(name="workingDirectory")
    private final @Nullable Input<ContainerWorkingDirectory> workingDirectory;

    public Input<ContainerWorkingDirectory> getWorkingDirectory() {
        return this.workingDirectory == null ? Input.empty() : this.workingDirectory;
    }

    public TaskContainerSettingsArgs(
        @Nullable Input<String> containerRunOptions,
        Input<String> imageName,
        @Nullable Input<ContainerRegistryArgs> registry,
        @Nullable Input<ContainerWorkingDirectory> workingDirectory) {
        this.containerRunOptions = containerRunOptions;
        this.imageName = Objects.requireNonNull(imageName, "expected parameter 'imageName' to be non-null");
        this.registry = registry;
        this.workingDirectory = workingDirectory;
    }

    private TaskContainerSettingsArgs() {
        this.containerRunOptions = Input.empty();
        this.imageName = Input.empty();
        this.registry = Input.empty();
        this.workingDirectory = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskContainerSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> containerRunOptions;
        private Input<String> imageName;
        private @Nullable Input<ContainerRegistryArgs> registry;
        private @Nullable Input<ContainerWorkingDirectory> workingDirectory;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskContainerSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerRunOptions = defaults.containerRunOptions;
    	      this.imageName = defaults.imageName;
    	      this.registry = defaults.registry;
    	      this.workingDirectory = defaults.workingDirectory;
        }

        public Builder setContainerRunOptions(@Nullable Input<String> containerRunOptions) {
            this.containerRunOptions = containerRunOptions;
            return this;
        }

        public Builder setContainerRunOptions(@Nullable String containerRunOptions) {
            this.containerRunOptions = Input.ofNullable(containerRunOptions);
            return this;
        }

        public Builder setImageName(Input<String> imageName) {
            this.imageName = Objects.requireNonNull(imageName);
            return this;
        }

        public Builder setImageName(String imageName) {
            this.imageName = Input.of(Objects.requireNonNull(imageName));
            return this;
        }

        public Builder setRegistry(@Nullable Input<ContainerRegistryArgs> registry) {
            this.registry = registry;
            return this;
        }

        public Builder setRegistry(@Nullable ContainerRegistryArgs registry) {
            this.registry = Input.ofNullable(registry);
            return this;
        }

        public Builder setWorkingDirectory(@Nullable Input<ContainerWorkingDirectory> workingDirectory) {
            this.workingDirectory = workingDirectory;
            return this;
        }

        public Builder setWorkingDirectory(@Nullable ContainerWorkingDirectory workingDirectory) {
            this.workingDirectory = Input.ofNullable(workingDirectory);
            return this;
        }

        public TaskContainerSettingsArgs build() {
            return new TaskContainerSettingsArgs(containerRunOptions, imageName, registry, workingDirectory);
        }
    }
}
