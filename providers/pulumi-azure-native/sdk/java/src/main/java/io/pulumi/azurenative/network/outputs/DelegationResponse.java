// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class DelegationResponse {
    /**
     * The actions permitted to the service upon delegation.
     * 
     */
    private final List<String> actions;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private final String etag;
    /**
     * Resource ID.
     * 
     */
    private final @Nullable String id;
    /**
     * The name of the resource that is unique within a subnet. This name can be used to access the resource.
     * 
     */
    private final @Nullable String name;
    /**
     * The provisioning state of the service delegation resource.
     * 
     */
    private final String provisioningState;
    /**
     * The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
     * 
     */
    private final @Nullable String serviceName;
    /**
     * Resource type.
     * 
     */
    private final @Nullable String type;

    @OutputCustomType.Constructor({"actions","etag","id","name","provisioningState","serviceName","type"})
    private DelegationResponse(
        List<String> actions,
        String etag,
        @Nullable String id,
        @Nullable String name,
        String provisioningState,
        @Nullable String serviceName,
        @Nullable String type) {
        this.actions = Objects.requireNonNull(actions);
        this.etag = Objects.requireNonNull(etag);
        this.id = id;
        this.name = name;
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.serviceName = serviceName;
        this.type = type;
    }

    /**
     * The actions permitted to the service upon delegation.
     * 
    */
    public List<String> getActions() {
        return this.actions;
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
    */
    public String getEtag() {
        return this.etag;
    }
    /**
     * Resource ID.
     * 
    */
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    /**
     * The name of the resource that is unique within a subnet. This name can be used to access the resource.
     * 
    */
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    /**
     * The provisioning state of the service delegation resource.
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
     * 
    */
    public Optional<String> getServiceName() {
        return Optional.ofNullable(this.serviceName);
    }
    /**
     * Resource type.
     * 
    */
    public Optional<String> getType() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DelegationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> actions;
        private String etag;
        private @Nullable String id;
        private @Nullable String name;
        private String provisioningState;
        private @Nullable String serviceName;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(DelegationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.serviceName = defaults.serviceName;
    	      this.type = defaults.type;
        }

        public Builder setActions(List<String> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setServiceName(@Nullable String serviceName) {
            this.serviceName = serviceName;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = type;
            return this;
        }
        public DelegationResponse build() {
            return new DelegationResponse(actions, etag, id, name, provisioningState, serviceName, type);
        }
    }
}
