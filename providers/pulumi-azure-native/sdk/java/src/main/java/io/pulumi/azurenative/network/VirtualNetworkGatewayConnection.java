// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.network.VirtualNetworkGatewayConnectionArgs;
import io.pulumi.azurenative.network.outputs.IpsecPolicyResponse;
import io.pulumi.azurenative.network.outputs.LocalNetworkGatewayResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.azurenative.network.outputs.TrafficSelectorPolicyResponse;
import io.pulumi.azurenative.network.outputs.TunnelConnectionHealthResponse;
import io.pulumi.azurenative.network.outputs.VirtualNetworkGatewayResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:network:VirtualNetworkGatewayConnection")
public class VirtualNetworkGatewayConnection extends io.pulumi.resources.CustomResource {
    @OutputExport(name="authorizationKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> authorizationKey;

    public Output</* @Nullable */ String> getAuthorizationKey() {
        return this.authorizationKey;
    }
    @OutputExport(name="connectionMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> connectionMode;

    public Output</* @Nullable */ String> getConnectionMode() {
        return this.connectionMode;
    }
    @OutputExport(name="connectionProtocol", type=String.class, parameters={})
    private Output</* @Nullable */ String> connectionProtocol;

    public Output</* @Nullable */ String> getConnectionProtocol() {
        return this.connectionProtocol;
    }
    @OutputExport(name="connectionStatus", type=String.class, parameters={})
    private Output<String> connectionStatus;

    public Output<String> getConnectionStatus() {
        return this.connectionStatus;
    }
    @OutputExport(name="connectionType", type=String.class, parameters={})
    private Output<String> connectionType;

    public Output<String> getConnectionType() {
        return this.connectionType;
    }
    @OutputExport(name="dpdTimeoutSeconds", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> dpdTimeoutSeconds;

    public Output</* @Nullable */ Integer> getDpdTimeoutSeconds() {
        return this.dpdTimeoutSeconds;
    }
    @OutputExport(name="egressBytesTransferred", type=Double.class, parameters={})
    private Output<Double> egressBytesTransferred;

    public Output<Double> getEgressBytesTransferred() {
        return this.egressBytesTransferred;
    }
    @OutputExport(name="enableBgp", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableBgp;

    public Output</* @Nullable */ Boolean> getEnableBgp() {
        return this.enableBgp;
    }
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    public Output<String> getEtag() {
        return this.etag;
    }
    @OutputExport(name="expressRouteGatewayBypass", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> expressRouteGatewayBypass;

    public Output</* @Nullable */ Boolean> getExpressRouteGatewayBypass() {
        return this.expressRouteGatewayBypass;
    }
    @OutputExport(name="ingressBytesTransferred", type=Double.class, parameters={})
    private Output<Double> ingressBytesTransferred;

    public Output<Double> getIngressBytesTransferred() {
        return this.ingressBytesTransferred;
    }
    @OutputExport(name="ipsecPolicies", type=List.class, parameters={IpsecPolicyResponse.class})
    private Output</* @Nullable */ List<IpsecPolicyResponse>> ipsecPolicies;

    public Output</* @Nullable */ List<IpsecPolicyResponse>> getIpsecPolicies() {
        return this.ipsecPolicies;
    }
    @OutputExport(name="localNetworkGateway2", type=LocalNetworkGatewayResponse.class, parameters={})
    private Output</* @Nullable */ LocalNetworkGatewayResponse> localNetworkGateway2;

    public Output</* @Nullable */ LocalNetworkGatewayResponse> getLocalNetworkGateway2() {
        return this.localNetworkGateway2;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="peer", type=SubResourceResponse.class, parameters={})
    private Output</* @Nullable */ SubResourceResponse> peer;

    public Output</* @Nullable */ SubResourceResponse> getPeer() {
        return this.peer;
    }
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    @OutputExport(name="resourceGuid", type=String.class, parameters={})
    private Output<String> resourceGuid;

    public Output<String> getResourceGuid() {
        return this.resourceGuid;
    }
    @OutputExport(name="routingWeight", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> routingWeight;

    public Output</* @Nullable */ Integer> getRoutingWeight() {
        return this.routingWeight;
    }
    @OutputExport(name="sharedKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> sharedKey;

    public Output</* @Nullable */ String> getSharedKey() {
        return this.sharedKey;
    }
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="trafficSelectorPolicies", type=List.class, parameters={TrafficSelectorPolicyResponse.class})
    private Output</* @Nullable */ List<TrafficSelectorPolicyResponse>> trafficSelectorPolicies;

    public Output</* @Nullable */ List<TrafficSelectorPolicyResponse>> getTrafficSelectorPolicies() {
        return this.trafficSelectorPolicies;
    }
    @OutputExport(name="tunnelConnectionStatus", type=List.class, parameters={TunnelConnectionHealthResponse.class})
    private Output<List<TunnelConnectionHealthResponse>> tunnelConnectionStatus;

    public Output<List<TunnelConnectionHealthResponse>> getTunnelConnectionStatus() {
        return this.tunnelConnectionStatus;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="useLocalAzureIpAddress", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> useLocalAzureIpAddress;

    public Output</* @Nullable */ Boolean> getUseLocalAzureIpAddress() {
        return this.useLocalAzureIpAddress;
    }
    @OutputExport(name="usePolicyBasedTrafficSelectors", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> usePolicyBasedTrafficSelectors;

    public Output</* @Nullable */ Boolean> getUsePolicyBasedTrafficSelectors() {
        return this.usePolicyBasedTrafficSelectors;
    }
    @OutputExport(name="virtualNetworkGateway1", type=VirtualNetworkGatewayResponse.class, parameters={})
    private Output<VirtualNetworkGatewayResponse> virtualNetworkGateway1;

    public Output<VirtualNetworkGatewayResponse> getVirtualNetworkGateway1() {
        return this.virtualNetworkGateway1;
    }
    @OutputExport(name="virtualNetworkGateway2", type=VirtualNetworkGatewayResponse.class, parameters={})
    private Output</* @Nullable */ VirtualNetworkGatewayResponse> virtualNetworkGateway2;

    public Output</* @Nullable */ VirtualNetworkGatewayResponse> getVirtualNetworkGateway2() {
        return this.virtualNetworkGateway2;
    }

    public VirtualNetworkGatewayConnection(String name, VirtualNetworkGatewayConnectionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:VirtualNetworkGatewayConnection", name, args == null ? VirtualNetworkGatewayConnectionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private VirtualNetworkGatewayConnection(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:VirtualNetworkGatewayConnection", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:network/v20150615:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20160330:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20160601:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20160901:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20161201:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20170301:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20170601:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20170801:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20170901:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20171001:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20171101:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180101:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180201:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180401:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180601:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180701:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180801:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181001:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181101:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181201:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190201:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190401:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190601:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190701:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190801:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190901:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191101:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191201:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200301:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200401:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200501:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200601:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200701:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200801:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20201101:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210201:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210301:VirtualNetworkGatewayConnection").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210501:VirtualNetworkGatewayConnection").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static VirtualNetworkGatewayConnection get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VirtualNetworkGatewayConnection(name, id, options);
    }
}
