// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The configuration settings of the Azure Active Directory app registration.
 * 
 */
public final class AzureActiveDirectoryRegistrationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AzureActiveDirectoryRegistrationArgs Empty = new AzureActiveDirectoryRegistrationArgs();

    /**
     * The Client ID of this relying party application, known as the client_id.
     * This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
     * other 3rd party OpenID Connect providers.
     * More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
     * 
     */
    @InputImport(name="clientId")
    private final @Nullable Input<String> clientId;

    public Input<String> getClientId() {
        return this.clientId == null ? Input.empty() : this.clientId;
    }

    /**
     * An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
     * a replacement for the Client Secret Certificate Thumbprint. It is also optional.
     * 
     */
    @InputImport(name="clientSecretCertificateIssuer")
    private final @Nullable Input<String> clientSecretCertificateIssuer;

    public Input<String> getClientSecretCertificateIssuer() {
        return this.clientSecretCertificateIssuer == null ? Input.empty() : this.clientSecretCertificateIssuer;
    }

    /**
     * An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
     * a replacement for the Client Secret Certificate Thumbprint. It is also optional.
     * 
     */
    @InputImport(name="clientSecretCertificateSubjectAlternativeName")
    private final @Nullable Input<String> clientSecretCertificateSubjectAlternativeName;

    public Input<String> getClientSecretCertificateSubjectAlternativeName() {
        return this.clientSecretCertificateSubjectAlternativeName == null ? Input.empty() : this.clientSecretCertificateSubjectAlternativeName;
    }

    /**
     * An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
     * a replacement for the Client Secret. It is also optional.
     * 
     */
    @InputImport(name="clientSecretCertificateThumbprint")
    private final @Nullable Input<String> clientSecretCertificateThumbprint;

    public Input<String> getClientSecretCertificateThumbprint() {
        return this.clientSecretCertificateThumbprint == null ? Input.empty() : this.clientSecretCertificateThumbprint;
    }

    /**
     * The app setting name that contains the client secret of the relying party application.
     * 
     */
    @InputImport(name="clientSecretSettingName")
    private final @Nullable Input<String> clientSecretSettingName;

    public Input<String> getClientSecretSettingName() {
        return this.clientSecretSettingName == null ? Input.empty() : this.clientSecretSettingName;
    }

    /**
     * The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
     * When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
     * This URI is a case-sensitive identifier for the token issuer.
     * More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
     * 
     */
    @InputImport(name="openIdIssuer")
    private final @Nullable Input<String> openIdIssuer;

    public Input<String> getOpenIdIssuer() {
        return this.openIdIssuer == null ? Input.empty() : this.openIdIssuer;
    }

    public AzureActiveDirectoryRegistrationArgs(
        @Nullable Input<String> clientId,
        @Nullable Input<String> clientSecretCertificateIssuer,
        @Nullable Input<String> clientSecretCertificateSubjectAlternativeName,
        @Nullable Input<String> clientSecretCertificateThumbprint,
        @Nullable Input<String> clientSecretSettingName,
        @Nullable Input<String> openIdIssuer) {
        this.clientId = clientId;
        this.clientSecretCertificateIssuer = clientSecretCertificateIssuer;
        this.clientSecretCertificateSubjectAlternativeName = clientSecretCertificateSubjectAlternativeName;
        this.clientSecretCertificateThumbprint = clientSecretCertificateThumbprint;
        this.clientSecretSettingName = clientSecretSettingName;
        this.openIdIssuer = openIdIssuer;
    }

    private AzureActiveDirectoryRegistrationArgs() {
        this.clientId = Input.empty();
        this.clientSecretCertificateIssuer = Input.empty();
        this.clientSecretCertificateSubjectAlternativeName = Input.empty();
        this.clientSecretCertificateThumbprint = Input.empty();
        this.clientSecretSettingName = Input.empty();
        this.openIdIssuer = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureActiveDirectoryRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> clientId;
        private @Nullable Input<String> clientSecretCertificateIssuer;
        private @Nullable Input<String> clientSecretCertificateSubjectAlternativeName;
        private @Nullable Input<String> clientSecretCertificateThumbprint;
        private @Nullable Input<String> clientSecretSettingName;
        private @Nullable Input<String> openIdIssuer;

        public Builder() {
    	      // Empty
        }

        public Builder(AzureActiveDirectoryRegistrationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecretCertificateIssuer = defaults.clientSecretCertificateIssuer;
    	      this.clientSecretCertificateSubjectAlternativeName = defaults.clientSecretCertificateSubjectAlternativeName;
    	      this.clientSecretCertificateThumbprint = defaults.clientSecretCertificateThumbprint;
    	      this.clientSecretSettingName = defaults.clientSecretSettingName;
    	      this.openIdIssuer = defaults.openIdIssuer;
        }

        public Builder setClientId(@Nullable Input<String> clientId) {
            this.clientId = clientId;
            return this;
        }

        public Builder setClientId(@Nullable String clientId) {
            this.clientId = Input.ofNullable(clientId);
            return this;
        }

        public Builder setClientSecretCertificateIssuer(@Nullable Input<String> clientSecretCertificateIssuer) {
            this.clientSecretCertificateIssuer = clientSecretCertificateIssuer;
            return this;
        }

        public Builder setClientSecretCertificateIssuer(@Nullable String clientSecretCertificateIssuer) {
            this.clientSecretCertificateIssuer = Input.ofNullable(clientSecretCertificateIssuer);
            return this;
        }

        public Builder setClientSecretCertificateSubjectAlternativeName(@Nullable Input<String> clientSecretCertificateSubjectAlternativeName) {
            this.clientSecretCertificateSubjectAlternativeName = clientSecretCertificateSubjectAlternativeName;
            return this;
        }

        public Builder setClientSecretCertificateSubjectAlternativeName(@Nullable String clientSecretCertificateSubjectAlternativeName) {
            this.clientSecretCertificateSubjectAlternativeName = Input.ofNullable(clientSecretCertificateSubjectAlternativeName);
            return this;
        }

        public Builder setClientSecretCertificateThumbprint(@Nullable Input<String> clientSecretCertificateThumbprint) {
            this.clientSecretCertificateThumbprint = clientSecretCertificateThumbprint;
            return this;
        }

        public Builder setClientSecretCertificateThumbprint(@Nullable String clientSecretCertificateThumbprint) {
            this.clientSecretCertificateThumbprint = Input.ofNullable(clientSecretCertificateThumbprint);
            return this;
        }

        public Builder setClientSecretSettingName(@Nullable Input<String> clientSecretSettingName) {
            this.clientSecretSettingName = clientSecretSettingName;
            return this;
        }

        public Builder setClientSecretSettingName(@Nullable String clientSecretSettingName) {
            this.clientSecretSettingName = Input.ofNullable(clientSecretSettingName);
            return this;
        }

        public Builder setOpenIdIssuer(@Nullable Input<String> openIdIssuer) {
            this.openIdIssuer = openIdIssuer;
            return this;
        }

        public Builder setOpenIdIssuer(@Nullable String openIdIssuer) {
            this.openIdIssuer = Input.ofNullable(openIdIssuer);
            return this;
        }

        public AzureActiveDirectoryRegistrationArgs build() {
            return new AzureActiveDirectoryRegistrationArgs(clientId, clientSecretCertificateIssuer, clientSecretCertificateSubjectAlternativeName, clientSecretCertificateThumbprint, clientSecretSettingName, openIdIssuer);
        }
    }
}
