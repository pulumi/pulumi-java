// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.enums.ImageAnnotationType;
import io.pulumi.azurenative.machinelearningservices.enums.MediaType;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LabelingJobImagePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final LabelingJobImagePropertiesArgs Empty = new LabelingJobImagePropertiesArgs();

    /**
     * Annotation type of image labeling tasks.
     * 
     */
    @Import(name="annotationType")
      private final @Nullable Output<Either<String,ImageAnnotationType>> annotationType;

    public Output<Either<String,ImageAnnotationType>> getAnnotationType() {
        return this.annotationType == null ? Output.empty() : this.annotationType;
    }

    /**
     * Media type of data asset.
     * 
     */
    @Import(name="mediaType", required=true)
      private final Output<Either<String,MediaType>> mediaType;

    public Output<Either<String,MediaType>> getMediaType() {
        return this.mediaType;
    }

    public LabelingJobImagePropertiesArgs(
        @Nullable Output<Either<String,ImageAnnotationType>> annotationType,
        Output<Either<String,MediaType>> mediaType) {
        this.annotationType = annotationType;
        this.mediaType = Objects.requireNonNull(mediaType, "expected parameter 'mediaType' to be non-null");
    }

    private LabelingJobImagePropertiesArgs() {
        this.annotationType = Output.empty();
        this.mediaType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LabelingJobImagePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,ImageAnnotationType>> annotationType;
        private Output<Either<String,MediaType>> mediaType;

        public Builder() {
    	      // Empty
        }

        public Builder(LabelingJobImagePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotationType = defaults.annotationType;
    	      this.mediaType = defaults.mediaType;
        }

        public Builder annotationType(@Nullable Output<Either<String,ImageAnnotationType>> annotationType) {
            this.annotationType = annotationType;
            return this;
        }
        public Builder annotationType(@Nullable Either<String,ImageAnnotationType> annotationType) {
            this.annotationType = Output.ofNullable(annotationType);
            return this;
        }
        public Builder mediaType(Output<Either<String,MediaType>> mediaType) {
            this.mediaType = Objects.requireNonNull(mediaType);
            return this;
        }
        public Builder mediaType(Either<String,MediaType> mediaType) {
            this.mediaType = Output.of(Objects.requireNonNull(mediaType));
            return this;
        }        public LabelingJobImagePropertiesArgs build() {
            return new LabelingJobImagePropertiesArgs(annotationType, mediaType);
        }
    }
}
