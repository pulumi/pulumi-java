// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.eventgrid;

import io.pulumi.azurenative.eventgrid.enums.EventDeliverySchema;
import io.pulumi.azurenative.eventgrid.inputs.AzureFunctionEventSubscriptionDestinationArgs;
import io.pulumi.azurenative.eventgrid.inputs.DeadLetterWithResourceIdentityArgs;
import io.pulumi.azurenative.eventgrid.inputs.DeliveryWithResourceIdentityArgs;
import io.pulumi.azurenative.eventgrid.inputs.EventHubEventSubscriptionDestinationArgs;
import io.pulumi.azurenative.eventgrid.inputs.EventSubscriptionFilterArgs;
import io.pulumi.azurenative.eventgrid.inputs.HybridConnectionEventSubscriptionDestinationArgs;
import io.pulumi.azurenative.eventgrid.inputs.RetryPolicyArgs;
import io.pulumi.azurenative.eventgrid.inputs.ServiceBusQueueEventSubscriptionDestinationArgs;
import io.pulumi.azurenative.eventgrid.inputs.ServiceBusTopicEventSubscriptionDestinationArgs;
import io.pulumi.azurenative.eventgrid.inputs.StorageBlobDeadLetterDestinationArgs;
import io.pulumi.azurenative.eventgrid.inputs.StorageQueueEventSubscriptionDestinationArgs;
import io.pulumi.azurenative.eventgrid.inputs.WebHookEventSubscriptionDestinationArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PartnerTopicEventSubscriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final PartnerTopicEventSubscriptionArgs Empty = new PartnerTopicEventSubscriptionArgs();

    @InputImport(name="deadLetterDestination")
    private final @Nullable Input<StorageBlobDeadLetterDestinationArgs> deadLetterDestination;

    public Input<StorageBlobDeadLetterDestinationArgs> getDeadLetterDestination() {
        return this.deadLetterDestination == null ? Input.empty() : this.deadLetterDestination;
    }

    @InputImport(name="deadLetterWithResourceIdentity")
    private final @Nullable Input<DeadLetterWithResourceIdentityArgs> deadLetterWithResourceIdentity;

    public Input<DeadLetterWithResourceIdentityArgs> getDeadLetterWithResourceIdentity() {
        return this.deadLetterWithResourceIdentity == null ? Input.empty() : this.deadLetterWithResourceIdentity;
    }

    @InputImport(name="deliveryWithResourceIdentity")
    private final @Nullable Input<DeliveryWithResourceIdentityArgs> deliveryWithResourceIdentity;

    public Input<DeliveryWithResourceIdentityArgs> getDeliveryWithResourceIdentity() {
        return this.deliveryWithResourceIdentity == null ? Input.empty() : this.deliveryWithResourceIdentity;
    }

    @InputImport(name="destination")
    private final @Nullable Input<Object> destination;

    public Input<Object> getDestination() {
        return this.destination == null ? Input.empty() : this.destination;
    }

    @InputImport(name="eventDeliverySchema")
    private final @Nullable Input<Either<String,EventDeliverySchema>> eventDeliverySchema;

    public Input<Either<String,EventDeliverySchema>> getEventDeliverySchema() {
        return this.eventDeliverySchema == null ? Input.empty() : this.eventDeliverySchema;
    }

    @InputImport(name="eventSubscriptionName")
    private final @Nullable Input<String> eventSubscriptionName;

    public Input<String> getEventSubscriptionName() {
        return this.eventSubscriptionName == null ? Input.empty() : this.eventSubscriptionName;
    }

    @InputImport(name="expirationTimeUtc")
    private final @Nullable Input<String> expirationTimeUtc;

    public Input<String> getExpirationTimeUtc() {
        return this.expirationTimeUtc == null ? Input.empty() : this.expirationTimeUtc;
    }

    @InputImport(name="filter")
    private final @Nullable Input<EventSubscriptionFilterArgs> filter;

    public Input<EventSubscriptionFilterArgs> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    @InputImport(name="labels")
    private final @Nullable Input<List<String>> labels;

    public Input<List<String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="partnerTopicName", required=true)
    private final Input<String> partnerTopicName;

    public Input<String> getPartnerTopicName() {
        return this.partnerTopicName;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="retryPolicy")
    private final @Nullable Input<RetryPolicyArgs> retryPolicy;

    public Input<RetryPolicyArgs> getRetryPolicy() {
        return this.retryPolicy == null ? Input.empty() : this.retryPolicy;
    }

    public PartnerTopicEventSubscriptionArgs(
        @Nullable Input<StorageBlobDeadLetterDestinationArgs> deadLetterDestination,
        @Nullable Input<DeadLetterWithResourceIdentityArgs> deadLetterWithResourceIdentity,
        @Nullable Input<DeliveryWithResourceIdentityArgs> deliveryWithResourceIdentity,
        @Nullable Input<Object> destination,
        @Nullable Input<Either<String,EventDeliverySchema>> eventDeliverySchema,
        @Nullable Input<String> eventSubscriptionName,
        @Nullable Input<String> expirationTimeUtc,
        @Nullable Input<EventSubscriptionFilterArgs> filter,
        @Nullable Input<List<String>> labels,
        Input<String> partnerTopicName,
        Input<String> resourceGroupName,
        @Nullable Input<RetryPolicyArgs> retryPolicy) {
        this.deadLetterDestination = deadLetterDestination;
        this.deadLetterWithResourceIdentity = deadLetterWithResourceIdentity;
        this.deliveryWithResourceIdentity = deliveryWithResourceIdentity;
        this.destination = destination;
        this.eventDeliverySchema = eventDeliverySchema == null ? Input.ofLeft("EventGridSchema") : eventDeliverySchema;
        this.eventSubscriptionName = eventSubscriptionName;
        this.expirationTimeUtc = expirationTimeUtc;
        this.filter = filter;
        this.labels = labels;
        this.partnerTopicName = Objects.requireNonNull(partnerTopicName, "expected parameter 'partnerTopicName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.retryPolicy = retryPolicy;
    }

    private PartnerTopicEventSubscriptionArgs() {
        this.deadLetterDestination = Input.empty();
        this.deadLetterWithResourceIdentity = Input.empty();
        this.deliveryWithResourceIdentity = Input.empty();
        this.destination = Input.empty();
        this.eventDeliverySchema = Input.empty();
        this.eventSubscriptionName = Input.empty();
        this.expirationTimeUtc = Input.empty();
        this.filter = Input.empty();
        this.labels = Input.empty();
        this.partnerTopicName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.retryPolicy = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PartnerTopicEventSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<StorageBlobDeadLetterDestinationArgs> deadLetterDestination;
        private @Nullable Input<DeadLetterWithResourceIdentityArgs> deadLetterWithResourceIdentity;
        private @Nullable Input<DeliveryWithResourceIdentityArgs> deliveryWithResourceIdentity;
        private @Nullable Input<Object> destination;
        private @Nullable Input<Either<String,EventDeliverySchema>> eventDeliverySchema;
        private @Nullable Input<String> eventSubscriptionName;
        private @Nullable Input<String> expirationTimeUtc;
        private @Nullable Input<EventSubscriptionFilterArgs> filter;
        private @Nullable Input<List<String>> labels;
        private Input<String> partnerTopicName;
        private Input<String> resourceGroupName;
        private @Nullable Input<RetryPolicyArgs> retryPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(PartnerTopicEventSubscriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deadLetterDestination = defaults.deadLetterDestination;
    	      this.deadLetterWithResourceIdentity = defaults.deadLetterWithResourceIdentity;
    	      this.deliveryWithResourceIdentity = defaults.deliveryWithResourceIdentity;
    	      this.destination = defaults.destination;
    	      this.eventDeliverySchema = defaults.eventDeliverySchema;
    	      this.eventSubscriptionName = defaults.eventSubscriptionName;
    	      this.expirationTimeUtc = defaults.expirationTimeUtc;
    	      this.filter = defaults.filter;
    	      this.labels = defaults.labels;
    	      this.partnerTopicName = defaults.partnerTopicName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.retryPolicy = defaults.retryPolicy;
        }

        public Builder setDeadLetterDestination(@Nullable Input<StorageBlobDeadLetterDestinationArgs> deadLetterDestination) {
            this.deadLetterDestination = deadLetterDestination;
            return this;
        }

        public Builder setDeadLetterDestination(@Nullable StorageBlobDeadLetterDestinationArgs deadLetterDestination) {
            this.deadLetterDestination = Input.ofNullable(deadLetterDestination);
            return this;
        }

        public Builder setDeadLetterWithResourceIdentity(@Nullable Input<DeadLetterWithResourceIdentityArgs> deadLetterWithResourceIdentity) {
            this.deadLetterWithResourceIdentity = deadLetterWithResourceIdentity;
            return this;
        }

        public Builder setDeadLetterWithResourceIdentity(@Nullable DeadLetterWithResourceIdentityArgs deadLetterWithResourceIdentity) {
            this.deadLetterWithResourceIdentity = Input.ofNullable(deadLetterWithResourceIdentity);
            return this;
        }

        public Builder setDeliveryWithResourceIdentity(@Nullable Input<DeliveryWithResourceIdentityArgs> deliveryWithResourceIdentity) {
            this.deliveryWithResourceIdentity = deliveryWithResourceIdentity;
            return this;
        }

        public Builder setDeliveryWithResourceIdentity(@Nullable DeliveryWithResourceIdentityArgs deliveryWithResourceIdentity) {
            this.deliveryWithResourceIdentity = Input.ofNullable(deliveryWithResourceIdentity);
            return this;
        }

        public Builder setDestination(@Nullable Input<Object> destination) {
            this.destination = destination;
            return this;
        }

        public Builder setDestination(@Nullable Object destination) {
            this.destination = Input.ofNullable(destination);
            return this;
        }

        public Builder setEventDeliverySchema(@Nullable Input<Either<String,EventDeliverySchema>> eventDeliverySchema) {
            this.eventDeliverySchema = eventDeliverySchema;
            return this;
        }

        public Builder setEventDeliverySchema(@Nullable Either<String,EventDeliverySchema> eventDeliverySchema) {
            this.eventDeliverySchema = Input.ofNullable(eventDeliverySchema);
            return this;
        }

        public Builder setEventSubscriptionName(@Nullable Input<String> eventSubscriptionName) {
            this.eventSubscriptionName = eventSubscriptionName;
            return this;
        }

        public Builder setEventSubscriptionName(@Nullable String eventSubscriptionName) {
            this.eventSubscriptionName = Input.ofNullable(eventSubscriptionName);
            return this;
        }

        public Builder setExpirationTimeUtc(@Nullable Input<String> expirationTimeUtc) {
            this.expirationTimeUtc = expirationTimeUtc;
            return this;
        }

        public Builder setExpirationTimeUtc(@Nullable String expirationTimeUtc) {
            this.expirationTimeUtc = Input.ofNullable(expirationTimeUtc);
            return this;
        }

        public Builder setFilter(@Nullable Input<EventSubscriptionFilterArgs> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable EventSubscriptionFilterArgs filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setLabels(@Nullable Input<List<String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable List<String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setPartnerTopicName(Input<String> partnerTopicName) {
            this.partnerTopicName = Objects.requireNonNull(partnerTopicName);
            return this;
        }

        public Builder setPartnerTopicName(String partnerTopicName) {
            this.partnerTopicName = Input.of(Objects.requireNonNull(partnerTopicName));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRetryPolicy(@Nullable Input<RetryPolicyArgs> retryPolicy) {
            this.retryPolicy = retryPolicy;
            return this;
        }

        public Builder setRetryPolicy(@Nullable RetryPolicyArgs retryPolicy) {
            this.retryPolicy = Input.ofNullable(retryPolicy);
            return this;
        }

        public PartnerTopicEventSubscriptionArgs build() {
            return new PartnerTopicEventSubscriptionArgs(deadLetterDestination, deadLetterWithResourceIdentity, deliveryWithResourceIdentity, destination, eventDeliverySchema, eventSubscriptionName, expirationTimeUtc, filter, labels, partnerTopicName, resourceGroupName, retryPolicy);
        }
    }
}
