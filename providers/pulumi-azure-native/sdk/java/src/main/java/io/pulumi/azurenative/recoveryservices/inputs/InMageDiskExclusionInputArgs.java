// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.azurenative.recoveryservices.inputs.InMageDiskSignatureExclusionOptionsArgs;
import io.pulumi.azurenative.recoveryservices.inputs.InMageVolumeExclusionOptionsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
 * 
 */
public final class InMageDiskExclusionInputArgs extends io.pulumi.resources.ResourceArgs {

    public static final InMageDiskExclusionInputArgs Empty = new InMageDiskExclusionInputArgs();

    /**
     * The guest disk signature based option for disk exclusion.
     * 
     */
    @InputImport(name="diskSignatureOptions")
      private final @Nullable Input<List<InMageDiskSignatureExclusionOptionsArgs>> diskSignatureOptions;

    public Input<List<InMageDiskSignatureExclusionOptionsArgs>> getDiskSignatureOptions() {
        return this.diskSignatureOptions == null ? Input.empty() : this.diskSignatureOptions;
    }

    /**
     * The volume label based option for disk exclusion.
     * 
     */
    @InputImport(name="volumeOptions")
      private final @Nullable Input<List<InMageVolumeExclusionOptionsArgs>> volumeOptions;

    public Input<List<InMageVolumeExclusionOptionsArgs>> getVolumeOptions() {
        return this.volumeOptions == null ? Input.empty() : this.volumeOptions;
    }

    public InMageDiskExclusionInputArgs(
        @Nullable Input<List<InMageDiskSignatureExclusionOptionsArgs>> diskSignatureOptions,
        @Nullable Input<List<InMageVolumeExclusionOptionsArgs>> volumeOptions) {
        this.diskSignatureOptions = diskSignatureOptions;
        this.volumeOptions = volumeOptions;
    }

    private InMageDiskExclusionInputArgs() {
        this.diskSignatureOptions = Input.empty();
        this.volumeOptions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InMageDiskExclusionInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<InMageDiskSignatureExclusionOptionsArgs>> diskSignatureOptions;
        private @Nullable Input<List<InMageVolumeExclusionOptionsArgs>> volumeOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(InMageDiskExclusionInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskSignatureOptions = defaults.diskSignatureOptions;
    	      this.volumeOptions = defaults.volumeOptions;
        }

        public Builder diskSignatureOptions(@Nullable Input<List<InMageDiskSignatureExclusionOptionsArgs>> diskSignatureOptions) {
            this.diskSignatureOptions = diskSignatureOptions;
            return this;
        }

        public Builder diskSignatureOptions(@Nullable List<InMageDiskSignatureExclusionOptionsArgs> diskSignatureOptions) {
            this.diskSignatureOptions = Input.ofNullable(diskSignatureOptions);
            return this;
        }

        public Builder volumeOptions(@Nullable Input<List<InMageVolumeExclusionOptionsArgs>> volumeOptions) {
            this.volumeOptions = volumeOptions;
            return this;
        }

        public Builder volumeOptions(@Nullable List<InMageVolumeExclusionOptionsArgs> volumeOptions) {
            this.volumeOptions = Input.ofNullable(volumeOptions);
            return this;
        }
        public InMageDiskExclusionInputArgs build() {
            return new InMageDiskExclusionInputArgs(diskSignatureOptions, volumeOptions);
        }
    }
}
