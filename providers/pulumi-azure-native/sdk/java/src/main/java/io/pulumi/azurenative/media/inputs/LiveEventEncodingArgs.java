// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.azurenative.media.enums.LiveEventEncodingType;
import io.pulumi.azurenative.media.enums.StretchMode;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LiveEventEncodingArgs extends io.pulumi.resources.ResourceArgs {

    public static final LiveEventEncodingArgs Empty = new LiveEventEncodingArgs();

    @InputImport(name="encodingType")
    private final @Nullable Input<Either<String,LiveEventEncodingType>> encodingType;

    public Input<Either<String,LiveEventEncodingType>> getEncodingType() {
        return this.encodingType == null ? Input.empty() : this.encodingType;
    }

    @InputImport(name="keyFrameInterval")
    private final @Nullable Input<String> keyFrameInterval;

    public Input<String> getKeyFrameInterval() {
        return this.keyFrameInterval == null ? Input.empty() : this.keyFrameInterval;
    }

    @InputImport(name="presetName")
    private final @Nullable Input<String> presetName;

    public Input<String> getPresetName() {
        return this.presetName == null ? Input.empty() : this.presetName;
    }

    @InputImport(name="stretchMode")
    private final @Nullable Input<Either<String,StretchMode>> stretchMode;

    public Input<Either<String,StretchMode>> getStretchMode() {
        return this.stretchMode == null ? Input.empty() : this.stretchMode;
    }

    public LiveEventEncodingArgs(
        @Nullable Input<Either<String,LiveEventEncodingType>> encodingType,
        @Nullable Input<String> keyFrameInterval,
        @Nullable Input<String> presetName,
        @Nullable Input<Either<String,StretchMode>> stretchMode) {
        this.encodingType = encodingType;
        this.keyFrameInterval = keyFrameInterval;
        this.presetName = presetName;
        this.stretchMode = stretchMode;
    }

    private LiveEventEncodingArgs() {
        this.encodingType = Input.empty();
        this.keyFrameInterval = Input.empty();
        this.presetName = Input.empty();
        this.stretchMode = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LiveEventEncodingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Either<String,LiveEventEncodingType>> encodingType;
        private @Nullable Input<String> keyFrameInterval;
        private @Nullable Input<String> presetName;
        private @Nullable Input<Either<String,StretchMode>> stretchMode;

        public Builder() {
    	      // Empty
        }

        public Builder(LiveEventEncodingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encodingType = defaults.encodingType;
    	      this.keyFrameInterval = defaults.keyFrameInterval;
    	      this.presetName = defaults.presetName;
    	      this.stretchMode = defaults.stretchMode;
        }

        public Builder setEncodingType(@Nullable Input<Either<String,LiveEventEncodingType>> encodingType) {
            this.encodingType = encodingType;
            return this;
        }

        public Builder setEncodingType(@Nullable Either<String,LiveEventEncodingType> encodingType) {
            this.encodingType = Input.ofNullable(encodingType);
            return this;
        }

        public Builder setKeyFrameInterval(@Nullable Input<String> keyFrameInterval) {
            this.keyFrameInterval = keyFrameInterval;
            return this;
        }

        public Builder setKeyFrameInterval(@Nullable String keyFrameInterval) {
            this.keyFrameInterval = Input.ofNullable(keyFrameInterval);
            return this;
        }

        public Builder setPresetName(@Nullable Input<String> presetName) {
            this.presetName = presetName;
            return this;
        }

        public Builder setPresetName(@Nullable String presetName) {
            this.presetName = Input.ofNullable(presetName);
            return this;
        }

        public Builder setStretchMode(@Nullable Input<Either<String,StretchMode>> stretchMode) {
            this.stretchMode = stretchMode;
            return this;
        }

        public Builder setStretchMode(@Nullable Either<String,StretchMode> stretchMode) {
            this.stretchMode = Input.ofNullable(stretchMode);
            return this;
        }

        public LiveEventEncodingArgs build() {
            return new LiveEventEncodingArgs(encodingType, keyFrameInterval, presetName, stretchMode);
        }
    }
}
