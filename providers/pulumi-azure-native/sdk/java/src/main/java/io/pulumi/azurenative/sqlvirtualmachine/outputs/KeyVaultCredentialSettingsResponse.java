// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sqlvirtualmachine.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class KeyVaultCredentialSettingsResponse {
    /**
     * Azure Key Vault url.
     * 
     */
    private final @Nullable String azureKeyVaultUrl;
    /**
     * Credential name.
     * 
     */
    private final @Nullable String credentialName;
    /**
     * Enable or disable key vault credential setting.
     * 
     */
    private final @Nullable Boolean enable;
    /**
     * Service principal name to access key vault.
     * 
     */
    private final @Nullable String servicePrincipalName;

    @OutputCustomType.Constructor
    private KeyVaultCredentialSettingsResponse(
        @OutputCustomType.Parameter("azureKeyVaultUrl") @Nullable String azureKeyVaultUrl,
        @OutputCustomType.Parameter("credentialName") @Nullable String credentialName,
        @OutputCustomType.Parameter("enable") @Nullable Boolean enable,
        @OutputCustomType.Parameter("servicePrincipalName") @Nullable String servicePrincipalName) {
        this.azureKeyVaultUrl = azureKeyVaultUrl;
        this.credentialName = credentialName;
        this.enable = enable;
        this.servicePrincipalName = servicePrincipalName;
    }

    /**
     * Azure Key Vault url.
     * 
    */
    public Optional<String> getAzureKeyVaultUrl() {
        return Optional.ofNullable(this.azureKeyVaultUrl);
    }
    /**
     * Credential name.
     * 
    */
    public Optional<String> getCredentialName() {
        return Optional.ofNullable(this.credentialName);
    }
    /**
     * Enable or disable key vault credential setting.
     * 
    */
    public Optional<Boolean> getEnable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * Service principal name to access key vault.
     * 
    */
    public Optional<String> getServicePrincipalName() {
        return Optional.ofNullable(this.servicePrincipalName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyVaultCredentialSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String azureKeyVaultUrl;
        private @Nullable String credentialName;
        private @Nullable Boolean enable;
        private @Nullable String servicePrincipalName;

        public Builder() {
    	      // Empty
        }

        public Builder(KeyVaultCredentialSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureKeyVaultUrl = defaults.azureKeyVaultUrl;
    	      this.credentialName = defaults.credentialName;
    	      this.enable = defaults.enable;
    	      this.servicePrincipalName = defaults.servicePrincipalName;
        }

        public Builder setAzureKeyVaultUrl(@Nullable String azureKeyVaultUrl) {
            this.azureKeyVaultUrl = azureKeyVaultUrl;
            return this;
        }

        public Builder setCredentialName(@Nullable String credentialName) {
            this.credentialName = credentialName;
            return this;
        }

        public Builder setEnable(@Nullable Boolean enable) {
            this.enable = enable;
            return this;
        }

        public Builder setServicePrincipalName(@Nullable String servicePrincipalName) {
            this.servicePrincipalName = servicePrincipalName;
            return this;
        }
        public KeyVaultCredentialSettingsResponse build() {
            return new KeyVaultCredentialSettingsResponse(azureKeyVaultUrl, credentialName, enable, servicePrincipalName);
        }
    }
}
