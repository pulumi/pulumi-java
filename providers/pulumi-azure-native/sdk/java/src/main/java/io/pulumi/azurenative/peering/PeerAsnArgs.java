// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.peering;

import io.pulumi.azurenative.peering.enums.ValidationState;
import io.pulumi.azurenative.peering.inputs.ContactDetailArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PeerAsnArgs extends io.pulumi.resources.ResourceArgs {

    public static final PeerAsnArgs Empty = new PeerAsnArgs();

    /**
     * The Autonomous System Number (ASN) of the peer.
     * 
     */
    @Import(name="peerAsn")
      private final @Nullable Output<Integer> peerAsn;

    public Output<Integer> getPeerAsn() {
        return this.peerAsn == null ? Codegen.empty() : this.peerAsn;
    }

    /**
     * The peer ASN name.
     * 
     */
    @Import(name="peerAsnName")
      private final @Nullable Output<String> peerAsnName;

    public Output<String> getPeerAsnName() {
        return this.peerAsnName == null ? Codegen.empty() : this.peerAsnName;
    }

    /**
     * The contact details of the peer.
     * 
     */
    @Import(name="peerContactDetail")
      private final @Nullable Output<List<ContactDetailArgs>> peerContactDetail;

    public Output<List<ContactDetailArgs>> getPeerContactDetail() {
        return this.peerContactDetail == null ? Codegen.empty() : this.peerContactDetail;
    }

    /**
     * The name of the peer.
     * 
     */
    @Import(name="peerName")
      private final @Nullable Output<String> peerName;

    public Output<String> getPeerName() {
        return this.peerName == null ? Codegen.empty() : this.peerName;
    }

    /**
     * The validation state of the ASN associated with the peer.
     * 
     */
    @Import(name="validationState")
      private final @Nullable Output<Either<String,ValidationState>> validationState;

    public Output<Either<String,ValidationState>> getValidationState() {
        return this.validationState == null ? Codegen.empty() : this.validationState;
    }

    public PeerAsnArgs(
        @Nullable Output<Integer> peerAsn,
        @Nullable Output<String> peerAsnName,
        @Nullable Output<List<ContactDetailArgs>> peerContactDetail,
        @Nullable Output<String> peerName,
        @Nullable Output<Either<String,ValidationState>> validationState) {
        this.peerAsn = peerAsn;
        this.peerAsnName = peerAsnName;
        this.peerContactDetail = peerContactDetail;
        this.peerName = peerName;
        this.validationState = validationState;
    }

    private PeerAsnArgs() {
        this.peerAsn = Codegen.empty();
        this.peerAsnName = Codegen.empty();
        this.peerContactDetail = Codegen.empty();
        this.peerName = Codegen.empty();
        this.validationState = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PeerAsnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> peerAsn;
        private @Nullable Output<String> peerAsnName;
        private @Nullable Output<List<ContactDetailArgs>> peerContactDetail;
        private @Nullable Output<String> peerName;
        private @Nullable Output<Either<String,ValidationState>> validationState;

        public Builder() {
    	      // Empty
        }

        public Builder(PeerAsnArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.peerAsn = defaults.peerAsn;
    	      this.peerAsnName = defaults.peerAsnName;
    	      this.peerContactDetail = defaults.peerContactDetail;
    	      this.peerName = defaults.peerName;
    	      this.validationState = defaults.validationState;
        }

        public Builder peerAsn(@Nullable Output<Integer> peerAsn) {
            this.peerAsn = peerAsn;
            return this;
        }
        public Builder peerAsn(@Nullable Integer peerAsn) {
            this.peerAsn = Codegen.ofNullable(peerAsn);
            return this;
        }
        public Builder peerAsnName(@Nullable Output<String> peerAsnName) {
            this.peerAsnName = peerAsnName;
            return this;
        }
        public Builder peerAsnName(@Nullable String peerAsnName) {
            this.peerAsnName = Codegen.ofNullable(peerAsnName);
            return this;
        }
        public Builder peerContactDetail(@Nullable Output<List<ContactDetailArgs>> peerContactDetail) {
            this.peerContactDetail = peerContactDetail;
            return this;
        }
        public Builder peerContactDetail(@Nullable List<ContactDetailArgs> peerContactDetail) {
            this.peerContactDetail = Codegen.ofNullable(peerContactDetail);
            return this;
        }
        public Builder peerContactDetail(ContactDetailArgs... peerContactDetail) {
            return peerContactDetail(List.of(peerContactDetail));
        }
        public Builder peerName(@Nullable Output<String> peerName) {
            this.peerName = peerName;
            return this;
        }
        public Builder peerName(@Nullable String peerName) {
            this.peerName = Codegen.ofNullable(peerName);
            return this;
        }
        public Builder validationState(@Nullable Output<Either<String,ValidationState>> validationState) {
            this.validationState = validationState;
            return this;
        }
        public Builder validationState(@Nullable Either<String,ValidationState> validationState) {
            this.validationState = Codegen.ofNullable(validationState);
            return this;
        }        public PeerAsnArgs build() {
            return new PeerAsnArgs(peerAsn, peerAsnName, peerContactDetail, peerName, validationState);
        }
    }
}
