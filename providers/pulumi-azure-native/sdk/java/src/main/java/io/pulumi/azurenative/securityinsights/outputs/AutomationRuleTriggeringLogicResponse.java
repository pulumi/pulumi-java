// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights.outputs;

import io.pulumi.azurenative.securityinsights.outputs.AutomationRulePropertyValuesConditionResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AutomationRuleTriggeringLogicResponse {
    private final @Nullable List<AutomationRulePropertyValuesConditionResponse> conditions;
    private final @Nullable String expirationTimeUtc;
    private final Boolean isEnabled;
    private final String triggersOn;
    private final String triggersWhen;

    @OutputCustomType.Constructor({"conditions","expirationTimeUtc","isEnabled","triggersOn","triggersWhen"})
    private AutomationRuleTriggeringLogicResponse(
        @Nullable List<AutomationRulePropertyValuesConditionResponse> conditions,
        @Nullable String expirationTimeUtc,
        Boolean isEnabled,
        String triggersOn,
        String triggersWhen) {
        this.conditions = conditions;
        this.expirationTimeUtc = expirationTimeUtc;
        this.isEnabled = Objects.requireNonNull(isEnabled);
        this.triggersOn = Objects.requireNonNull(triggersOn);
        this.triggersWhen = Objects.requireNonNull(triggersWhen);
    }

    public List<AutomationRulePropertyValuesConditionResponse> getConditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    public Optional<String> getExpirationTimeUtc() {
        return Optional.ofNullable(this.expirationTimeUtc);
    }
    public Boolean getIsEnabled() {
        return this.isEnabled;
    }
    public String getTriggersOn() {
        return this.triggersOn;
    }
    public String getTriggersWhen() {
        return this.triggersWhen;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomationRuleTriggeringLogicResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<AutomationRulePropertyValuesConditionResponse> conditions;
        private @Nullable String expirationTimeUtc;
        private Boolean isEnabled;
        private String triggersOn;
        private String triggersWhen;

        public Builder() {
    	      // Empty
        }

        public Builder(AutomationRuleTriggeringLogicResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.expirationTimeUtc = defaults.expirationTimeUtc;
    	      this.isEnabled = defaults.isEnabled;
    	      this.triggersOn = defaults.triggersOn;
    	      this.triggersWhen = defaults.triggersWhen;
        }

        public Builder setConditions(@Nullable List<AutomationRulePropertyValuesConditionResponse> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setExpirationTimeUtc(@Nullable String expirationTimeUtc) {
            this.expirationTimeUtc = expirationTimeUtc;
            return this;
        }

        public Builder setIsEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }

        public Builder setTriggersOn(String triggersOn) {
            this.triggersOn = Objects.requireNonNull(triggersOn);
            return this;
        }

        public Builder setTriggersWhen(String triggersWhen) {
            this.triggersWhen = Objects.requireNonNull(triggersWhen);
            return this;
        }

        public AutomationRuleTriggeringLogicResponse build() {
            return new AutomationRuleTriggeringLogicResponse(conditions, expirationTimeUtc, isEnabled, triggersOn, triggersWhen);
        }
    }
}
