// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SqlResourceSqlRoleAssignmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final SqlResourceSqlRoleAssignmentArgs Empty = new SqlResourceSqlRoleAssignmentArgs();

    /**
     * Cosmos DB database account name.
     * 
     */
    @Import(name="accountName", required=true)
      private final Output<String> accountName;

    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
     * 
     */
    @Import(name="principalId")
      private final @Nullable Output<String> principalId;

    public Output<String> principalId() {
        return this.principalId == null ? Codegen.empty() : this.principalId;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The GUID for the Role Assignment.
     * 
     */
    @Import(name="roleAssignmentId")
      private final @Nullable Output<String> roleAssignmentId;

    public Output<String> roleAssignmentId() {
        return this.roleAssignmentId == null ? Codegen.empty() : this.roleAssignmentId;
    }

    /**
     * The unique identifier for the associated Role Definition.
     * 
     */
    @Import(name="roleDefinitionId")
      private final @Nullable Output<String> roleDefinitionId;

    public Output<String> roleDefinitionId() {
        return this.roleDefinitionId == null ? Codegen.empty() : this.roleDefinitionId;
    }

    /**
     * The data plane resource path for which access is being granted through this Role Assignment.
     * 
     */
    @Import(name="scope")
      private final @Nullable Output<String> scope;

    public Output<String> scope() {
        return this.scope == null ? Codegen.empty() : this.scope;
    }

    public SqlResourceSqlRoleAssignmentArgs(
        Output<String> accountName,
        @Nullable Output<String> principalId,
        Output<String> resourceGroupName,
        @Nullable Output<String> roleAssignmentId,
        @Nullable Output<String> roleDefinitionId,
        @Nullable Output<String> scope) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.principalId = principalId;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.roleAssignmentId = roleAssignmentId;
        this.roleDefinitionId = roleDefinitionId;
        this.scope = scope;
    }

    private SqlResourceSqlRoleAssignmentArgs() {
        this.accountName = Codegen.empty();
        this.principalId = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.roleAssignmentId = Codegen.empty();
        this.roleDefinitionId = Codegen.empty();
        this.scope = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlResourceSqlRoleAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountName;
        private @Nullable Output<String> principalId;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> roleAssignmentId;
        private @Nullable Output<String> roleDefinitionId;
        private @Nullable Output<String> scope;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlResourceSqlRoleAssignmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.principalId = defaults.principalId;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.roleAssignmentId = defaults.roleAssignmentId;
    	      this.roleDefinitionId = defaults.roleDefinitionId;
    	      this.scope = defaults.scope;
        }

        public Builder accountName(Output<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        public Builder accountName(String accountName) {
            this.accountName = Output.of(Objects.requireNonNull(accountName));
            return this;
        }
        public Builder principalId(@Nullable Output<String> principalId) {
            this.principalId = principalId;
            return this;
        }
        public Builder principalId(@Nullable String principalId) {
            this.principalId = Codegen.ofNullable(principalId);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder roleAssignmentId(@Nullable Output<String> roleAssignmentId) {
            this.roleAssignmentId = roleAssignmentId;
            return this;
        }
        public Builder roleAssignmentId(@Nullable String roleAssignmentId) {
            this.roleAssignmentId = Codegen.ofNullable(roleAssignmentId);
            return this;
        }
        public Builder roleDefinitionId(@Nullable Output<String> roleDefinitionId) {
            this.roleDefinitionId = roleDefinitionId;
            return this;
        }
        public Builder roleDefinitionId(@Nullable String roleDefinitionId) {
            this.roleDefinitionId = Codegen.ofNullable(roleDefinitionId);
            return this;
        }
        public Builder scope(@Nullable Output<String> scope) {
            this.scope = scope;
            return this;
        }
        public Builder scope(@Nullable String scope) {
            this.scope = Codegen.ofNullable(scope);
            return this;
        }        public SqlResourceSqlRoleAssignmentArgs build() {
            return new SqlResourceSqlRoleAssignmentArgs(accountName, principalId, resourceGroupName, roleAssignmentId, roleDefinitionId, scope);
        }
    }
}
