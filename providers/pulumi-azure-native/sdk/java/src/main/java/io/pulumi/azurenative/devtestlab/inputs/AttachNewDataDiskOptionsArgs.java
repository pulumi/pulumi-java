// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devtestlab.inputs;

import io.pulumi.azurenative.devtestlab.enums.StorageType;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AttachNewDataDiskOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final AttachNewDataDiskOptionsArgs Empty = new AttachNewDataDiskOptionsArgs();

    @InputImport(name="diskName")
    private final @Nullable Input<String> diskName;

    public Input<String> getDiskName() {
        return this.diskName == null ? Input.empty() : this.diskName;
    }

    @InputImport(name="diskSizeGiB")
    private final @Nullable Input<Integer> diskSizeGiB;

    public Input<Integer> getDiskSizeGiB() {
        return this.diskSizeGiB == null ? Input.empty() : this.diskSizeGiB;
    }

    @InputImport(name="diskType")
    private final @Nullable Input<Either<String,StorageType>> diskType;

    public Input<Either<String,StorageType>> getDiskType() {
        return this.diskType == null ? Input.empty() : this.diskType;
    }

    public AttachNewDataDiskOptionsArgs(
        @Nullable Input<String> diskName,
        @Nullable Input<Integer> diskSizeGiB,
        @Nullable Input<Either<String,StorageType>> diskType) {
        this.diskName = diskName;
        this.diskSizeGiB = diskSizeGiB;
        this.diskType = diskType;
    }

    private AttachNewDataDiskOptionsArgs() {
        this.diskName = Input.empty();
        this.diskSizeGiB = Input.empty();
        this.diskType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttachNewDataDiskOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> diskName;
        private @Nullable Input<Integer> diskSizeGiB;
        private @Nullable Input<Either<String,StorageType>> diskType;

        public Builder() {
    	      // Empty
        }

        public Builder(AttachNewDataDiskOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskName = defaults.diskName;
    	      this.diskSizeGiB = defaults.diskSizeGiB;
    	      this.diskType = defaults.diskType;
        }

        public Builder setDiskName(@Nullable Input<String> diskName) {
            this.diskName = diskName;
            return this;
        }

        public Builder setDiskName(@Nullable String diskName) {
            this.diskName = Input.ofNullable(diskName);
            return this;
        }

        public Builder setDiskSizeGiB(@Nullable Input<Integer> diskSizeGiB) {
            this.diskSizeGiB = diskSizeGiB;
            return this;
        }

        public Builder setDiskSizeGiB(@Nullable Integer diskSizeGiB) {
            this.diskSizeGiB = Input.ofNullable(diskSizeGiB);
            return this;
        }

        public Builder setDiskType(@Nullable Input<Either<String,StorageType>> diskType) {
            this.diskType = diskType;
            return this;
        }

        public Builder setDiskType(@Nullable Either<String,StorageType> diskType) {
            this.diskType = Input.ofNullable(diskType);
            return this;
        }

        public AttachNewDataDiskOptionsArgs build() {
            return new AttachNewDataDiskOptionsArgs(diskName, diskSizeGiB, diskType);
        }
    }
}
