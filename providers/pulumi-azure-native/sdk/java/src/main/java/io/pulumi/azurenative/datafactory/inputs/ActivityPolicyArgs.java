// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datafactory.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Execution policy for an activity.
 * 
 */
public final class ActivityPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ActivityPolicyArgs Empty = new ActivityPolicyArgs();

    /**
     * Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
     * 
     */
    @Import(name="retry")
      private final @Nullable Output<Object> retry;

    public Output<Object> getRetry() {
        return this.retry == null ? Output.empty() : this.retry;
    }

    /**
     * Interval between each retry attempt (in seconds). The default is 30 sec.
     * 
     */
    @Import(name="retryIntervalInSeconds")
      private final @Nullable Output<Integer> retryIntervalInSeconds;

    public Output<Integer> getRetryIntervalInSeconds() {
        return this.retryIntervalInSeconds == null ? Output.empty() : this.retryIntervalInSeconds;
    }

    /**
     * When set to true, Input from activity is considered as secure and will not be logged to monitoring.
     * 
     */
    @Import(name="secureInput")
      private final @Nullable Output<Boolean> secureInput;

    public Output<Boolean> getSecureInput() {
        return this.secureInput == null ? Output.empty() : this.secureInput;
    }

    /**
     * When set to true, Output from activity is considered as secure and will not be logged to monitoring.
     * 
     */
    @Import(name="secureOutput")
      private final @Nullable Output<Boolean> secureOutput;

    public Output<Boolean> getSecureOutput() {
        return this.secureOutput == null ? Output.empty() : this.secureOutput;
    }

    /**
     * Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    @Import(name="timeout")
      private final @Nullable Output<Object> timeout;

    public Output<Object> getTimeout() {
        return this.timeout == null ? Output.empty() : this.timeout;
    }

    public ActivityPolicyArgs(
        @Nullable Output<Object> retry,
        @Nullable Output<Integer> retryIntervalInSeconds,
        @Nullable Output<Boolean> secureInput,
        @Nullable Output<Boolean> secureOutput,
        @Nullable Output<Object> timeout) {
        this.retry = retry;
        this.retryIntervalInSeconds = retryIntervalInSeconds;
        this.secureInput = secureInput;
        this.secureOutput = secureOutput;
        this.timeout = timeout;
    }

    private ActivityPolicyArgs() {
        this.retry = Output.empty();
        this.retryIntervalInSeconds = Output.empty();
        this.secureInput = Output.empty();
        this.secureOutput = Output.empty();
        this.timeout = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActivityPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> retry;
        private @Nullable Output<Integer> retryIntervalInSeconds;
        private @Nullable Output<Boolean> secureInput;
        private @Nullable Output<Boolean> secureOutput;
        private @Nullable Output<Object> timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(ActivityPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retry = defaults.retry;
    	      this.retryIntervalInSeconds = defaults.retryIntervalInSeconds;
    	      this.secureInput = defaults.secureInput;
    	      this.secureOutput = defaults.secureOutput;
    	      this.timeout = defaults.timeout;
        }

        public Builder retry(@Nullable Output<Object> retry) {
            this.retry = retry;
            return this;
        }

        public Builder retry(@Nullable Object retry) {
            this.retry = Output.ofNullable(retry);
            return this;
        }

        public Builder retryIntervalInSeconds(@Nullable Output<Integer> retryIntervalInSeconds) {
            this.retryIntervalInSeconds = retryIntervalInSeconds;
            return this;
        }

        public Builder retryIntervalInSeconds(@Nullable Integer retryIntervalInSeconds) {
            this.retryIntervalInSeconds = Output.ofNullable(retryIntervalInSeconds);
            return this;
        }

        public Builder secureInput(@Nullable Output<Boolean> secureInput) {
            this.secureInput = secureInput;
            return this;
        }

        public Builder secureInput(@Nullable Boolean secureInput) {
            this.secureInput = Output.ofNullable(secureInput);
            return this;
        }

        public Builder secureOutput(@Nullable Output<Boolean> secureOutput) {
            this.secureOutput = secureOutput;
            return this;
        }

        public Builder secureOutput(@Nullable Boolean secureOutput) {
            this.secureOutput = Output.ofNullable(secureOutput);
            return this;
        }

        public Builder timeout(@Nullable Output<Object> timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder timeout(@Nullable Object timeout) {
            this.timeout = Output.ofNullable(timeout);
            return this;
        }
        public ActivityPolicyArgs build() {
            return new ActivityPolicyArgs(retry, retryIntervalInSeconds, secureInput, secureOutput, timeout);
        }
    }
}
