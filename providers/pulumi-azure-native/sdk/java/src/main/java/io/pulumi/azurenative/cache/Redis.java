// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.cache;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.cache.RedisArgs;
import io.pulumi.azurenative.cache.outputs.PrivateEndpointConnectionResponse;
import io.pulumi.azurenative.cache.outputs.RedisAccessKeysResponse;
import io.pulumi.azurenative.cache.outputs.RedisCommonPropertiesResponseRedisConfiguration;
import io.pulumi.azurenative.cache.outputs.RedisInstanceDetailsResponse;
import io.pulumi.azurenative.cache.outputs.RedisLinkedServerResponse;
import io.pulumi.azurenative.cache.outputs.SkuResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:cache:Redis")
public class Redis extends io.pulumi.resources.CustomResource {
    @OutputExport(name="accessKeys", type=RedisAccessKeysResponse.class, parameters={})
    private Output<RedisAccessKeysResponse> accessKeys;

    public Output<RedisAccessKeysResponse> getAccessKeys() {
        return this.accessKeys;
    }
    @OutputExport(name="enableNonSslPort", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableNonSslPort;

    public Output</* @Nullable */ Boolean> getEnableNonSslPort() {
        return this.enableNonSslPort;
    }
    @OutputExport(name="hostName", type=String.class, parameters={})
    private Output<String> hostName;

    public Output<String> getHostName() {
        return this.hostName;
    }
    @OutputExport(name="instances", type=List.class, parameters={RedisInstanceDetailsResponse.class})
    private Output<List<RedisInstanceDetailsResponse>> instances;

    public Output<List<RedisInstanceDetailsResponse>> getInstances() {
        return this.instances;
    }
    @OutputExport(name="linkedServers", type=List.class, parameters={RedisLinkedServerResponse.class})
    private Output<List<RedisLinkedServerResponse>> linkedServers;

    public Output<List<RedisLinkedServerResponse>> getLinkedServers() {
        return this.linkedServers;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }
    @OutputExport(name="minimumTlsVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> minimumTlsVersion;

    public Output</* @Nullable */ String> getMinimumTlsVersion() {
        return this.minimumTlsVersion;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="port", type=Integer.class, parameters={})
    private Output<Integer> port;

    public Output<Integer> getPort() {
        return this.port;
    }
    @OutputExport(name="privateEndpointConnections", type=List.class, parameters={PrivateEndpointConnectionResponse.class})
    private Output<List<PrivateEndpointConnectionResponse>> privateEndpointConnections;

    public Output<List<PrivateEndpointConnectionResponse>> getPrivateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    @OutputExport(name="publicNetworkAccess", type=String.class, parameters={})
    private Output</* @Nullable */ String> publicNetworkAccess;

    public Output</* @Nullable */ String> getPublicNetworkAccess() {
        return this.publicNetworkAccess;
    }
    @OutputExport(name="redisConfiguration", type=RedisCommonPropertiesResponseRedisConfiguration.class, parameters={})
    private Output</* @Nullable */ RedisCommonPropertiesResponseRedisConfiguration> redisConfiguration;

    public Output</* @Nullable */ RedisCommonPropertiesResponseRedisConfiguration> getRedisConfiguration() {
        return this.redisConfiguration;
    }
    @OutputExport(name="redisVersion", type=String.class, parameters={})
    private Output<String> redisVersion;

    public Output<String> getRedisVersion() {
        return this.redisVersion;
    }
    @OutputExport(name="replicasPerMaster", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> replicasPerMaster;

    public Output</* @Nullable */ Integer> getReplicasPerMaster() {
        return this.replicasPerMaster;
    }
    @OutputExport(name="shardCount", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> shardCount;

    public Output</* @Nullable */ Integer> getShardCount() {
        return this.shardCount;
    }
    @OutputExport(name="sku", type=SkuResponse.class, parameters={})
    private Output<SkuResponse> sku;

    public Output<SkuResponse> getSku() {
        return this.sku;
    }
    @OutputExport(name="sslPort", type=Integer.class, parameters={})
    private Output<Integer> sslPort;

    public Output<Integer> getSslPort() {
        return this.sslPort;
    }
    @OutputExport(name="staticIP", type=String.class, parameters={})
    private Output</* @Nullable */ String> staticIP;

    public Output</* @Nullable */ String> getStaticIP() {
        return this.staticIP;
    }
    @OutputExport(name="subnetId", type=String.class, parameters={})
    private Output</* @Nullable */ String> subnetId;

    public Output</* @Nullable */ String> getSubnetId() {
        return this.subnetId;
    }
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="tenantSettings", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tenantSettings;

    public Output</* @Nullable */ Map<String,String>> getTenantSettings() {
        return this.tenantSettings;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="zones", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> zones;

    public Output</* @Nullable */ List<String>> getZones() {
        return this.zones;
    }

    public Redis(String name, RedisArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:cache:Redis", name, args == null ? RedisArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Redis(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:cache:Redis", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:cache/v20150801:Redis").build()),
                Input.of(Alias.builder().setType("azure-native:cache/v20160401:Redis").build()),
                Input.of(Alias.builder().setType("azure-native:cache/v20170201:Redis").build()),
                Input.of(Alias.builder().setType("azure-native:cache/v20171001:Redis").build()),
                Input.of(Alias.builder().setType("azure-native:cache/v20180301:Redis").build()),
                Input.of(Alias.builder().setType("azure-native:cache/v20190701:Redis").build()),
                Input.of(Alias.builder().setType("azure-native:cache/v20200601:Redis").build()),
                Input.of(Alias.builder().setType("azure-native:cache/v20201201:Redis").build()),
                Input.of(Alias.builder().setType("azure-native:cache/v20210601:Redis").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Redis get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Redis(name, id, options);
    }
}
