// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logz;

import io.pulumi.azurenative.logz.inputs.MetricsTagRulesPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MetricsSourceTagRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final MetricsSourceTagRuleArgs Empty = new MetricsSourceTagRuleArgs();

    /**
     * Metrics Account resource name
     * 
     */
    @InputImport(name="metricsSourceName", required=true)
    private final Input<String> metricsSourceName;

    public Input<String> getMetricsSourceName() {
        return this.metricsSourceName;
    }

    /**
     * Monitor resource name
     * 
     */
    @InputImport(name="monitorName", required=true)
    private final Input<String> monitorName;

    public Input<String> getMonitorName() {
        return this.monitorName;
    }

    /**
     * Definition of the properties for a TagRules resource.
     * 
     */
    @InputImport(name="properties")
    private final @Nullable Input<MetricsTagRulesPropertiesArgs> properties;

    public Input<MetricsTagRulesPropertiesArgs> getProperties() {
        return this.properties == null ? Input.empty() : this.properties;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="ruleSetName")
    private final @Nullable Input<String> ruleSetName;

    public Input<String> getRuleSetName() {
        return this.ruleSetName == null ? Input.empty() : this.ruleSetName;
    }

    public MetricsSourceTagRuleArgs(
        Input<String> metricsSourceName,
        Input<String> monitorName,
        @Nullable Input<MetricsTagRulesPropertiesArgs> properties,
        Input<String> resourceGroupName,
        @Nullable Input<String> ruleSetName) {
        this.metricsSourceName = Objects.requireNonNull(metricsSourceName, "expected parameter 'metricsSourceName' to be non-null");
        this.monitorName = Objects.requireNonNull(monitorName, "expected parameter 'monitorName' to be non-null");
        this.properties = properties;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ruleSetName = ruleSetName;
    }

    private MetricsSourceTagRuleArgs() {
        this.metricsSourceName = Input.empty();
        this.monitorName = Input.empty();
        this.properties = Input.empty();
        this.resourceGroupName = Input.empty();
        this.ruleSetName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricsSourceTagRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> metricsSourceName;
        private Input<String> monitorName;
        private @Nullable Input<MetricsTagRulesPropertiesArgs> properties;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> ruleSetName;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricsSourceTagRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricsSourceName = defaults.metricsSourceName;
    	      this.monitorName = defaults.monitorName;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ruleSetName = defaults.ruleSetName;
        }

        public Builder setMetricsSourceName(Input<String> metricsSourceName) {
            this.metricsSourceName = Objects.requireNonNull(metricsSourceName);
            return this;
        }

        public Builder setMetricsSourceName(String metricsSourceName) {
            this.metricsSourceName = Input.of(Objects.requireNonNull(metricsSourceName));
            return this;
        }

        public Builder setMonitorName(Input<String> monitorName) {
            this.monitorName = Objects.requireNonNull(monitorName);
            return this;
        }

        public Builder setMonitorName(String monitorName) {
            this.monitorName = Input.of(Objects.requireNonNull(monitorName));
            return this;
        }

        public Builder setProperties(@Nullable Input<MetricsTagRulesPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProperties(@Nullable MetricsTagRulesPropertiesArgs properties) {
            this.properties = Input.ofNullable(properties);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setRuleSetName(@Nullable Input<String> ruleSetName) {
            this.ruleSetName = ruleSetName;
            return this;
        }

        public Builder setRuleSetName(@Nullable String ruleSetName) {
            this.ruleSetName = Input.ofNullable(ruleSetName);
            return this;
        }

        public MetricsSourceTagRuleArgs build() {
            return new MetricsSourceTagRuleArgs(metricsSourceName, monitorName, properties, resourceGroupName, ruleSetName);
        }
    }
}
