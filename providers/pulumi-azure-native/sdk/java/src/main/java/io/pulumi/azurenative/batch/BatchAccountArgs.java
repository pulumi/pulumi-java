// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch;

import io.pulumi.azurenative.batch.enums.PoolAllocationMode;
import io.pulumi.azurenative.batch.enums.PublicNetworkAccessType;
import io.pulumi.azurenative.batch.inputs.AutoStorageBasePropertiesArgs;
import io.pulumi.azurenative.batch.inputs.BatchAccountIdentityArgs;
import io.pulumi.azurenative.batch.inputs.EncryptionPropertiesArgs;
import io.pulumi.azurenative.batch.inputs.KeyVaultReferenceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BatchAccountArgs extends io.pulumi.resources.ResourceArgs {

    public static final BatchAccountArgs Empty = new BatchAccountArgs();

    /**
     * A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.
     * 
     */
    @Import(name="accountName")
      private final @Nullable Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName == null ? Codegen.empty() : this.accountName;
    }

    /**
     * The properties related to the auto-storage account.
     * 
     */
    @Import(name="autoStorage")
      private final @Nullable Output<AutoStorageBasePropertiesArgs> autoStorage;

    public Output<AutoStorageBasePropertiesArgs> getAutoStorage() {
        return this.autoStorage == null ? Codegen.empty() : this.autoStorage;
    }

    /**
     * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
     * 
     */
    @Import(name="encryption")
      private final @Nullable Output<EncryptionPropertiesArgs> encryption;

    public Output<EncryptionPropertiesArgs> getEncryption() {
        return this.encryption == null ? Codegen.empty() : this.encryption;
    }

    /**
     * The identity of the Batch account.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<BatchAccountIdentityArgs> identity;

    public Output<BatchAccountIdentityArgs> getIdentity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * A reference to the Azure key vault associated with the Batch account.
     * 
     */
    @Import(name="keyVaultReference")
      private final @Nullable Output<KeyVaultReferenceArgs> keyVaultReference;

    public Output<KeyVaultReferenceArgs> getKeyVaultReference() {
        return this.keyVaultReference == null ? Codegen.empty() : this.keyVaultReference;
    }

    /**
     * The region in which to create the account.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
     * 
     */
    @Import(name="poolAllocationMode")
      private final @Nullable Output<PoolAllocationMode> poolAllocationMode;

    public Output<PoolAllocationMode> getPoolAllocationMode() {
        return this.poolAllocationMode == null ? Codegen.empty() : this.poolAllocationMode;
    }

    /**
     * If not specified, the default value is 'enabled'.
     * 
     */
    @Import(name="publicNetworkAccess")
      private final @Nullable Output<PublicNetworkAccessType> publicNetworkAccess;

    public Output<PublicNetworkAccessType> getPublicNetworkAccess() {
        return this.publicNetworkAccess == null ? Codegen.empty() : this.publicNetworkAccess;
    }

    /**
     * The name of the resource group that contains the Batch account.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The user-specified tags associated with the account.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public BatchAccountArgs(
        @Nullable Output<String> accountName,
        @Nullable Output<AutoStorageBasePropertiesArgs> autoStorage,
        @Nullable Output<EncryptionPropertiesArgs> encryption,
        @Nullable Output<BatchAccountIdentityArgs> identity,
        @Nullable Output<KeyVaultReferenceArgs> keyVaultReference,
        @Nullable Output<String> location,
        @Nullable Output<PoolAllocationMode> poolAllocationMode,
        @Nullable Output<PublicNetworkAccessType> publicNetworkAccess,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags) {
        this.accountName = accountName;
        this.autoStorage = autoStorage;
        this.encryption = encryption;
        this.identity = identity;
        this.keyVaultReference = keyVaultReference;
        this.location = location;
        this.poolAllocationMode = poolAllocationMode;
        this.publicNetworkAccess = publicNetworkAccess;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private BatchAccountArgs() {
        this.accountName = Codegen.empty();
        this.autoStorage = Codegen.empty();
        this.encryption = Codegen.empty();
        this.identity = Codegen.empty();
        this.keyVaultReference = Codegen.empty();
        this.location = Codegen.empty();
        this.poolAllocationMode = Codegen.empty();
        this.publicNetworkAccess = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BatchAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountName;
        private @Nullable Output<AutoStorageBasePropertiesArgs> autoStorage;
        private @Nullable Output<EncryptionPropertiesArgs> encryption;
        private @Nullable Output<BatchAccountIdentityArgs> identity;
        private @Nullable Output<KeyVaultReferenceArgs> keyVaultReference;
        private @Nullable Output<String> location;
        private @Nullable Output<PoolAllocationMode> poolAllocationMode;
        private @Nullable Output<PublicNetworkAccessType> publicNetworkAccess;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(BatchAccountArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.autoStorage = defaults.autoStorage;
    	      this.encryption = defaults.encryption;
    	      this.identity = defaults.identity;
    	      this.keyVaultReference = defaults.keyVaultReference;
    	      this.location = defaults.location;
    	      this.poolAllocationMode = defaults.poolAllocationMode;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder accountName(@Nullable Output<String> accountName) {
            this.accountName = accountName;
            return this;
        }
        public Builder accountName(@Nullable String accountName) {
            this.accountName = Codegen.ofNullable(accountName);
            return this;
        }
        public Builder autoStorage(@Nullable Output<AutoStorageBasePropertiesArgs> autoStorage) {
            this.autoStorage = autoStorage;
            return this;
        }
        public Builder autoStorage(@Nullable AutoStorageBasePropertiesArgs autoStorage) {
            this.autoStorage = Codegen.ofNullable(autoStorage);
            return this;
        }
        public Builder encryption(@Nullable Output<EncryptionPropertiesArgs> encryption) {
            this.encryption = encryption;
            return this;
        }
        public Builder encryption(@Nullable EncryptionPropertiesArgs encryption) {
            this.encryption = Codegen.ofNullable(encryption);
            return this;
        }
        public Builder identity(@Nullable Output<BatchAccountIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable BatchAccountIdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder keyVaultReference(@Nullable Output<KeyVaultReferenceArgs> keyVaultReference) {
            this.keyVaultReference = keyVaultReference;
            return this;
        }
        public Builder keyVaultReference(@Nullable KeyVaultReferenceArgs keyVaultReference) {
            this.keyVaultReference = Codegen.ofNullable(keyVaultReference);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder poolAllocationMode(@Nullable Output<PoolAllocationMode> poolAllocationMode) {
            this.poolAllocationMode = poolAllocationMode;
            return this;
        }
        public Builder poolAllocationMode(@Nullable PoolAllocationMode poolAllocationMode) {
            this.poolAllocationMode = Codegen.ofNullable(poolAllocationMode);
            return this;
        }
        public Builder publicNetworkAccess(@Nullable Output<PublicNetworkAccessType> publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        public Builder publicNetworkAccess(@Nullable PublicNetworkAccessType publicNetworkAccess) {
            this.publicNetworkAccess = Codegen.ofNullable(publicNetworkAccess);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public BatchAccountArgs build() {
            return new BatchAccountArgs(accountName, autoStorage, encryption, identity, keyVaultReference, location, poolAllocationMode, publicNetworkAccess, resourceGroupName, tags);
        }
    }
}
