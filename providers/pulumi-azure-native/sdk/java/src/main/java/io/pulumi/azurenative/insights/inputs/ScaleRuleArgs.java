// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.azurenative.insights.inputs.MetricTriggerArgs;
import io.pulumi.azurenative.insights.inputs.ScaleActionArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;


/**
 * A rule that provide the triggers and parameters for the scaling action.
 * 
 */
public final class ScaleRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScaleRuleArgs Empty = new ScaleRuleArgs();

    /**
     * the trigger that results in a scaling action.
     * 
     */
    @InputImport(name="metricTrigger", required=true)
      private final Input<MetricTriggerArgs> metricTrigger;

    public Input<MetricTriggerArgs> getMetricTrigger() {
        return this.metricTrigger;
    }

    /**
     * the parameters for the scaling action.
     * 
     */
    @InputImport(name="scaleAction", required=true)
      private final Input<ScaleActionArgs> scaleAction;

    public Input<ScaleActionArgs> getScaleAction() {
        return this.scaleAction;
    }

    public ScaleRuleArgs(
        Input<MetricTriggerArgs> metricTrigger,
        Input<ScaleActionArgs> scaleAction) {
        this.metricTrigger = Objects.requireNonNull(metricTrigger, "expected parameter 'metricTrigger' to be non-null");
        this.scaleAction = Objects.requireNonNull(scaleAction, "expected parameter 'scaleAction' to be non-null");
    }

    private ScaleRuleArgs() {
        this.metricTrigger = Input.empty();
        this.scaleAction = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScaleRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<MetricTriggerArgs> metricTrigger;
        private Input<ScaleActionArgs> scaleAction;

        public Builder() {
    	      // Empty
        }

        public Builder(ScaleRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricTrigger = defaults.metricTrigger;
    	      this.scaleAction = defaults.scaleAction;
        }

        public Builder setMetricTrigger(Input<MetricTriggerArgs> metricTrigger) {
            this.metricTrigger = Objects.requireNonNull(metricTrigger);
            return this;
        }

        public Builder setMetricTrigger(MetricTriggerArgs metricTrigger) {
            this.metricTrigger = Input.of(Objects.requireNonNull(metricTrigger));
            return this;
        }

        public Builder setScaleAction(Input<ScaleActionArgs> scaleAction) {
            this.scaleAction = Objects.requireNonNull(scaleAction);
            return this;
        }

        public Builder setScaleAction(ScaleActionArgs scaleAction) {
            this.scaleAction = Input.of(Objects.requireNonNull(scaleAction));
            return this;
        }
        public ScaleRuleArgs build() {
            return new ScaleRuleArgs(metricTrigger, scaleAction);
        }
    }
}
