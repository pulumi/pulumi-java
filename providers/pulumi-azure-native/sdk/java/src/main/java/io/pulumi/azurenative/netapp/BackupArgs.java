// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.netapp;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BackupArgs extends io.pulumi.resources.ResourceArgs {

    public static final BackupArgs Empty = new BackupArgs();

    /**
     * The name of the NetApp account
     * 
     */
    @Import(name="accountName", required=true)
      private final Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName;
    }

    /**
     * The name of the backup
     * 
     */
    @Import(name="backupName")
      private final @Nullable Output<String> backupName;

    public Output<String> getBackupName() {
        return this.backupName == null ? Output.empty() : this.backupName;
    }

    /**
     * Label for backup
     * 
     */
    @Import(name="label")
      private final @Nullable Output<String> label;

    public Output<String> getLabel() {
        return this.label == null ? Output.empty() : this.label;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The name of the capacity pool
     * 
     */
    @Import(name="poolName", required=true)
      private final Output<String> poolName;

    public Output<String> getPoolName() {
        return this.poolName;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the volume
     * 
     */
    @Import(name="volumeName", required=true)
      private final Output<String> volumeName;

    public Output<String> getVolumeName() {
        return this.volumeName;
    }

    public BackupArgs(
        Output<String> accountName,
        @Nullable Output<String> backupName,
        @Nullable Output<String> label,
        @Nullable Output<String> location,
        Output<String> poolName,
        Output<String> resourceGroupName,
        Output<String> volumeName) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.backupName = backupName;
        this.label = label;
        this.location = location;
        this.poolName = Objects.requireNonNull(poolName, "expected parameter 'poolName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.volumeName = Objects.requireNonNull(volumeName, "expected parameter 'volumeName' to be non-null");
    }

    private BackupArgs() {
        this.accountName = Output.empty();
        this.backupName = Output.empty();
        this.label = Output.empty();
        this.location = Output.empty();
        this.poolName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.volumeName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountName;
        private @Nullable Output<String> backupName;
        private @Nullable Output<String> label;
        private @Nullable Output<String> location;
        private Output<String> poolName;
        private Output<String> resourceGroupName;
        private Output<String> volumeName;

        public Builder() {
    	      // Empty
        }

        public Builder(BackupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.backupName = defaults.backupName;
    	      this.label = defaults.label;
    	      this.location = defaults.location;
    	      this.poolName = defaults.poolName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.volumeName = defaults.volumeName;
        }

        public Builder accountName(Output<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder accountName(String accountName) {
            this.accountName = Output.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder backupName(@Nullable Output<String> backupName) {
            this.backupName = backupName;
            return this;
        }

        public Builder backupName(@Nullable String backupName) {
            this.backupName = Output.ofNullable(backupName);
            return this;
        }

        public Builder label(@Nullable Output<String> label) {
            this.label = label;
            return this;
        }

        public Builder label(@Nullable String label) {
            this.label = Output.ofNullable(label);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder poolName(Output<String> poolName) {
            this.poolName = Objects.requireNonNull(poolName);
            return this;
        }

        public Builder poolName(String poolName) {
            this.poolName = Output.of(Objects.requireNonNull(poolName));
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder volumeName(Output<String> volumeName) {
            this.volumeName = Objects.requireNonNull(volumeName);
            return this;
        }

        public Builder volumeName(String volumeName) {
            this.volumeName = Output.of(Objects.requireNonNull(volumeName));
            return this;
        }
        public BackupArgs build() {
            return new BackupArgs(accountName, backupName, label, location, poolName, resourceGroupName, volumeName);
        }
    }
}
