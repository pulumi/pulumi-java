// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The source image used for creating the disk.
 * 
 */
public final class ImageDiskReferenceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ImageDiskReferenceArgs Empty = new ImageDiskReferenceArgs();

    /**
     * A relative uri containing either a Platform Image Repository or user image reference.
     * 
     */
    @InputImport(name="id", required=true)
    private final Input<String> id;

    public Input<String> getId() {
        return this.id;
    }

    /**
     * If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.
     * 
     */
    @InputImport(name="lun")
    private final @Nullable Input<Integer> lun;

    public Input<Integer> getLun() {
        return this.lun == null ? Input.empty() : this.lun;
    }

    public ImageDiskReferenceArgs(
        Input<String> id,
        @Nullable Input<Integer> lun) {
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.lun = lun;
    }

    private ImageDiskReferenceArgs() {
        this.id = Input.empty();
        this.lun = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageDiskReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> id;
        private @Nullable Input<Integer> lun;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageDiskReferenceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.lun = defaults.lun;
        }

        public Builder setId(Input<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setId(String id) {
            this.id = Input.of(Objects.requireNonNull(id));
            return this;
        }

        public Builder setLun(@Nullable Input<Integer> lun) {
            this.lun = lun;
            return this;
        }

        public Builder setLun(@Nullable Integer lun) {
            this.lun = Input.ofNullable(lun);
            return this;
        }

        public ImageDiskReferenceArgs build() {
            return new ImageDiskReferenceArgs(id, lun);
        }
    }
}
