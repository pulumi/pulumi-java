// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.enums.DataBindingMode;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OutputDataBindingArgs extends io.pulumi.resources.ResourceArgs {

    public static final OutputDataBindingArgs Empty = new OutputDataBindingArgs();

    /**
     * ARM resource ID of the datastore where the data output will be stored.
     * 
     */
    @InputImport(name="datastoreId")
      private final @Nullable Input<String> datastoreId;

    public Input<String> getDatastoreId() {
        return this.datastoreId == null ? Input.empty() : this.datastoreId;
    }

    /**
     * Mechanism for data movement to datastore.
     * 
     */
    @InputImport(name="mode")
      private final @Nullable Input<Either<String,DataBindingMode>> mode;

    public Input<Either<String,DataBindingMode>> getMode() {
        return this.mode == null ? Input.empty() : this.mode;
    }

    /**
     * Location of data inside the container process.
     * 
     */
    @InputImport(name="pathOnCompute")
      private final @Nullable Input<String> pathOnCompute;

    public Input<String> getPathOnCompute() {
        return this.pathOnCompute == null ? Input.empty() : this.pathOnCompute;
    }

    /**
     * Path within the datastore to the data.
     * 
     */
    @InputImport(name="pathOnDatastore")
      private final @Nullable Input<String> pathOnDatastore;

    public Input<String> getPathOnDatastore() {
        return this.pathOnDatastore == null ? Input.empty() : this.pathOnDatastore;
    }

    public OutputDataBindingArgs(
        @Nullable Input<String> datastoreId,
        @Nullable Input<Either<String,DataBindingMode>> mode,
        @Nullable Input<String> pathOnCompute,
        @Nullable Input<String> pathOnDatastore) {
        this.datastoreId = datastoreId;
        this.mode = mode;
        this.pathOnCompute = pathOnCompute;
        this.pathOnDatastore = pathOnDatastore;
    }

    private OutputDataBindingArgs() {
        this.datastoreId = Input.empty();
        this.mode = Input.empty();
        this.pathOnCompute = Input.empty();
        this.pathOnDatastore = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OutputDataBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> datastoreId;
        private @Nullable Input<Either<String,DataBindingMode>> mode;
        private @Nullable Input<String> pathOnCompute;
        private @Nullable Input<String> pathOnDatastore;

        public Builder() {
    	      // Empty
        }

        public Builder(OutputDataBindingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datastoreId = defaults.datastoreId;
    	      this.mode = defaults.mode;
    	      this.pathOnCompute = defaults.pathOnCompute;
    	      this.pathOnDatastore = defaults.pathOnDatastore;
        }

        public Builder datastoreId(@Nullable Input<String> datastoreId) {
            this.datastoreId = datastoreId;
            return this;
        }

        public Builder datastoreId(@Nullable String datastoreId) {
            this.datastoreId = Input.ofNullable(datastoreId);
            return this;
        }

        public Builder mode(@Nullable Input<Either<String,DataBindingMode>> mode) {
            this.mode = mode;
            return this;
        }

        public Builder mode(@Nullable Either<String,DataBindingMode> mode) {
            this.mode = Input.ofNullable(mode);
            return this;
        }

        public Builder pathOnCompute(@Nullable Input<String> pathOnCompute) {
            this.pathOnCompute = pathOnCompute;
            return this;
        }

        public Builder pathOnCompute(@Nullable String pathOnCompute) {
            this.pathOnCompute = Input.ofNullable(pathOnCompute);
            return this;
        }

        public Builder pathOnDatastore(@Nullable Input<String> pathOnDatastore) {
            this.pathOnDatastore = pathOnDatastore;
            return this;
        }

        public Builder pathOnDatastore(@Nullable String pathOnDatastore) {
            this.pathOnDatastore = Input.ofNullable(pathOnDatastore);
            return this;
        }
        public OutputDataBindingArgs build() {
            return new OutputDataBindingArgs(datastoreId, mode, pathOnCompute, pathOnDatastore);
        }
    }
}
