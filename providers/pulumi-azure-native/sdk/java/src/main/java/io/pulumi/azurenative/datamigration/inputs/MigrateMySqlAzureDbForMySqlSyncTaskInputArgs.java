// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.inputs;

import io.pulumi.azurenative.datamigration.inputs.MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs;
import io.pulumi.azurenative.datamigration.inputs.MySqlConnectionInfoArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;


/**
 * Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
 * 
 */
public final class MigrateMySqlAzureDbForMySqlSyncTaskInputArgs extends io.pulumi.resources.ResourceArgs {

    public static final MigrateMySqlAzureDbForMySqlSyncTaskInputArgs Empty = new MigrateMySqlAzureDbForMySqlSyncTaskInputArgs();

    /**
     * Databases to migrate
     * 
     */
    @InputImport(name="selectedDatabases", required=true)
        private final Input<List<MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs>> selectedDatabases;

    public Input<List<MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs>> getSelectedDatabases() {
        return this.selectedDatabases;
    }

    /**
     * Connection information for source MySQL
     * 
     */
    @InputImport(name="sourceConnectionInfo", required=true)
        private final Input<MySqlConnectionInfoArgs> sourceConnectionInfo;

    public Input<MySqlConnectionInfoArgs> getSourceConnectionInfo() {
        return this.sourceConnectionInfo;
    }

    /**
     * Connection information for target Azure Database for MySQL
     * 
     */
    @InputImport(name="targetConnectionInfo", required=true)
        private final Input<MySqlConnectionInfoArgs> targetConnectionInfo;

    public Input<MySqlConnectionInfoArgs> getTargetConnectionInfo() {
        return this.targetConnectionInfo;
    }

    public MigrateMySqlAzureDbForMySqlSyncTaskInputArgs(
        Input<List<MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs>> selectedDatabases,
        Input<MySqlConnectionInfoArgs> sourceConnectionInfo,
        Input<MySqlConnectionInfoArgs> targetConnectionInfo) {
        this.selectedDatabases = Objects.requireNonNull(selectedDatabases, "expected parameter 'selectedDatabases' to be non-null");
        this.sourceConnectionInfo = Objects.requireNonNull(sourceConnectionInfo, "expected parameter 'sourceConnectionInfo' to be non-null");
        this.targetConnectionInfo = Objects.requireNonNull(targetConnectionInfo, "expected parameter 'targetConnectionInfo' to be non-null");
    }

    private MigrateMySqlAzureDbForMySqlSyncTaskInputArgs() {
        this.selectedDatabases = Input.empty();
        this.sourceConnectionInfo = Input.empty();
        this.targetConnectionInfo = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateMySqlAzureDbForMySqlSyncTaskInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs>> selectedDatabases;
        private Input<MySqlConnectionInfoArgs> sourceConnectionInfo;
        private Input<MySqlConnectionInfoArgs> targetConnectionInfo;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrateMySqlAzureDbForMySqlSyncTaskInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.selectedDatabases = defaults.selectedDatabases;
    	      this.sourceConnectionInfo = defaults.sourceConnectionInfo;
    	      this.targetConnectionInfo = defaults.targetConnectionInfo;
        }

        public Builder setSelectedDatabases(Input<List<MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs>> selectedDatabases) {
            this.selectedDatabases = Objects.requireNonNull(selectedDatabases);
            return this;
        }

        public Builder setSelectedDatabases(List<MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs> selectedDatabases) {
            this.selectedDatabases = Input.of(Objects.requireNonNull(selectedDatabases));
            return this;
        }

        public Builder setSourceConnectionInfo(Input<MySqlConnectionInfoArgs> sourceConnectionInfo) {
            this.sourceConnectionInfo = Objects.requireNonNull(sourceConnectionInfo);
            return this;
        }

        public Builder setSourceConnectionInfo(MySqlConnectionInfoArgs sourceConnectionInfo) {
            this.sourceConnectionInfo = Input.of(Objects.requireNonNull(sourceConnectionInfo));
            return this;
        }

        public Builder setTargetConnectionInfo(Input<MySqlConnectionInfoArgs> targetConnectionInfo) {
            this.targetConnectionInfo = Objects.requireNonNull(targetConnectionInfo);
            return this;
        }

        public Builder setTargetConnectionInfo(MySqlConnectionInfoArgs targetConnectionInfo) {
            this.targetConnectionInfo = Input.of(Objects.requireNonNull(targetConnectionInfo));
            return this;
        }
        public MigrateMySqlAzureDbForMySqlSyncTaskInputArgs build() {
            return new MigrateMySqlAzureDbForMySqlSyncTaskInputArgs(selectedDatabases, sourceConnectionInfo, targetConnectionInfo);
        }
    }
}
