// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class FileShareResponse {
    /**
     * Password credential used to connect to the share location.
     * 
     */
    private final @Nullable String password;
    /**
     * The folder path for this share.
     * 
     */
    private final String path;
    /**
     * User name credential to connect to the share location
     * 
     */
    private final @Nullable String userName;

    @OutputCustomType.Constructor({"password","path","userName"})
    private FileShareResponse(
        @Nullable String password,
        String path,
        @Nullable String userName) {
        this.password = password;
        this.path = Objects.requireNonNull(path);
        this.userName = userName;
    }

    /**
     * Password credential used to connect to the share location.
     * 
     */
    public Optional<String> getPassword() {
        return Optional.ofNullable(this.password);
    }
    /**
     * The folder path for this share.
     * 
     */
    public String getPath() {
        return this.path;
    }
    /**
     * User name credential to connect to the share location
     * 
     */
    public Optional<String> getUserName() {
        return Optional.ofNullable(this.userName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileShareResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String password;
        private String path;
        private @Nullable String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(FileShareResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.path = defaults.path;
    	      this.userName = defaults.userName;
        }

        public Builder setPassword(@Nullable String password) {
            this.password = password;
            return this;
        }

        public Builder setPath(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }

        public Builder setUserName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }
        public FileShareResponse build() {
            return new FileShareResponse(password, path, userName);
        }
    }
}
