// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.Utilities;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * An Azure SQL Database sync member.
API Version: 2020-11-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create a new sync member
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var syncMember = new AzureNative.Sql.SyncMember("syncMember", new AzureNative.Sql.SyncMemberArgs
        {
            DatabaseName = "syncgroupcrud-4328",
            DatabaseType = "AzureSqlDatabase",
            ResourceGroupName = "syncgroupcrud-65440",
            ServerName = "syncgroupcrud-8475",
            SyncDirection = "Bidirectional",
            SyncGroupName = "syncgroupcrud-3187",
            SyncMemberAzureDatabaseResourceId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-65440/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328",
            SyncMemberName = "syncmembercrud-4879",
            UsePrivateLinkConnection = true,
            UserName = "myUser",
        });
    }

}

```

```go
package main

import (
	sql "github.com/pulumi/pulumi-azure-native/sdk/go/azure/sql"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := sql.NewSyncMember(ctx, "syncMember", &sql.SyncMemberArgs{
			DatabaseName:                      pulumi.String("syncgroupcrud-4328"),
			DatabaseType:                      pulumi.String("AzureSqlDatabase"),
			ResourceGroupName:                 pulumi.String("syncgroupcrud-65440"),
			ServerName:                        pulumi.String("syncgroupcrud-8475"),
			SyncDirection:                     pulumi.String("Bidirectional"),
			SyncGroupName:                     pulumi.String("syncgroupcrud-3187"),
			SyncMemberAzureDatabaseResourceId: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-65440/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328"),
			SyncMemberName:                    pulumi.String("syncmembercrud-4879"),
			UsePrivateLinkConnection:          pulumi.Bool(true),
			UserName:                          pulumi.String("myUser"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const syncMember = new azure_native.sql.SyncMember("syncMember", {
    databaseName: "syncgroupcrud-4328",
    databaseType: "AzureSqlDatabase",
    resourceGroupName: "syncgroupcrud-65440",
    serverName: "syncgroupcrud-8475",
    syncDirection: "Bidirectional",
    syncGroupName: "syncgroupcrud-3187",
    syncMemberAzureDatabaseResourceId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-65440/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328",
    syncMemberName: "syncmembercrud-4879",
    usePrivateLinkConnection: true,
    userName: "myUser",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

sync_member = azure_native.sql.SyncMember("syncMember",
    database_name="syncgroupcrud-4328",
    database_type="AzureSqlDatabase",
    resource_group_name="syncgroupcrud-65440",
    server_name="syncgroupcrud-8475",
    sync_direction="Bidirectional",
    sync_group_name="syncgroupcrud-3187",
    sync_member_azure_database_resource_id="/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-65440/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328",
    sync_member_name="syncmembercrud-4879",
    use_private_link_connection=True,
    user_name="myUser")

```

{{% /example %}}
{{% example %}}
### Update a sync member
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var syncMember = new AzureNative.Sql.SyncMember("syncMember", new AzureNative.Sql.SyncMemberArgs
        {
            DatabaseName = "syncgroupcrud-4328",
            DatabaseType = "AzureSqlDatabase",
            ResourceGroupName = "syncgroupcrud-65440",
            ServerName = "syncgroupcrud-8475",
            SyncDirection = "Bidirectional",
            SyncGroupName = "syncgroupcrud-3187",
            SyncMemberAzureDatabaseResourceId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-65440/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328",
            SyncMemberName = "syncmembercrud-4879",
            UsePrivateLinkConnection = true,
            UserName = "myUser",
        });
    }

}

```

```go
package main

import (
	sql "github.com/pulumi/pulumi-azure-native/sdk/go/azure/sql"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := sql.NewSyncMember(ctx, "syncMember", &sql.SyncMemberArgs{
			DatabaseName:                      pulumi.String("syncgroupcrud-4328"),
			DatabaseType:                      pulumi.String("AzureSqlDatabase"),
			ResourceGroupName:                 pulumi.String("syncgroupcrud-65440"),
			ServerName:                        pulumi.String("syncgroupcrud-8475"),
			SyncDirection:                     pulumi.String("Bidirectional"),
			SyncGroupName:                     pulumi.String("syncgroupcrud-3187"),
			SyncMemberAzureDatabaseResourceId: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-65440/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328"),
			SyncMemberName:                    pulumi.String("syncmembercrud-4879"),
			UsePrivateLinkConnection:          pulumi.Bool(true),
			UserName:                          pulumi.String("myUser"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const syncMember = new azure_native.sql.SyncMember("syncMember", {
    databaseName: "syncgroupcrud-4328",
    databaseType: "AzureSqlDatabase",
    resourceGroupName: "syncgroupcrud-65440",
    serverName: "syncgroupcrud-8475",
    syncDirection: "Bidirectional",
    syncGroupName: "syncgroupcrud-3187",
    syncMemberAzureDatabaseResourceId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-65440/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328",
    syncMemberName: "syncmembercrud-4879",
    usePrivateLinkConnection: true,
    userName: "myUser",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

sync_member = azure_native.sql.SyncMember("syncMember",
    database_name="syncgroupcrud-4328",
    database_type="AzureSqlDatabase",
    resource_group_name="syncgroupcrud-65440",
    server_name="syncgroupcrud-8475",
    sync_direction="Bidirectional",
    sync_group_name="syncgroupcrud-3187",
    sync_member_azure_database_resource_id="/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-65440/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328",
    sync_member_name="syncmembercrud-4879",
    use_private_link_connection=True,
    user_name="myUser")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:sql:SyncMember syncmembercrud-4879 /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/syncgroupcrud-65440/providers/Microsoft.Sql/servers/syncgroupcrud-8475/databases/syncgroupcrud-4328/syncGroups/syncgroupcrud-3187/syncMembers/syncmembercrud-4879 
```

 */
@ResourceType(type="azure-native:sql:SyncMember")
public class SyncMember extends io.pulumi.resources.CustomResource {
    /**
     * Database name of the member database in the sync member.
     */
    @OutputExport(name="databaseName", type=String.class, parameters={})
    private Output</* @Nullable */ String> databaseName;

    /**
     * @return Database name of the member database in the sync member.
     */
    public Output</* @Nullable */ String> getDatabaseName() {
        return this.databaseName;
    }
    /**
     * Database type of the sync member.
     */
    @OutputExport(name="databaseType", type=String.class, parameters={})
    private Output</* @Nullable */ String> databaseType;

    /**
     * @return Database type of the sync member.
     */
    public Output</* @Nullable */ String> getDatabaseType() {
        return this.databaseType;
    }
    /**
     * Resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Private endpoint name of the sync member if use private link connection is enabled, for sync members in Azure.
     */
    @OutputExport(name="privateEndpointName", type=String.class, parameters={})
    private Output<String> privateEndpointName;

    /**
     * @return Private endpoint name of the sync member if use private link connection is enabled, for sync members in Azure.
     */
    public Output<String> getPrivateEndpointName() {
        return this.privateEndpointName;
    }
    /**
     * Server name of the member database in the sync member
     */
    @OutputExport(name="serverName", type=String.class, parameters={})
    private Output</* @Nullable */ String> serverName;

    /**
     * @return Server name of the member database in the sync member
     */
    public Output</* @Nullable */ String> getServerName() {
        return this.serverName;
    }
    /**
     * SQL Server database id of the sync member.
     */
    @OutputExport(name="sqlServerDatabaseId", type=String.class, parameters={})
    private Output</* @Nullable */ String> sqlServerDatabaseId;

    /**
     * @return SQL Server database id of the sync member.
     */
    public Output</* @Nullable */ String> getSqlServerDatabaseId() {
        return this.sqlServerDatabaseId;
    }
    /**
     * ARM resource id of the sync agent in the sync member.
     */
    @OutputExport(name="syncAgentId", type=String.class, parameters={})
    private Output</* @Nullable */ String> syncAgentId;

    /**
     * @return ARM resource id of the sync agent in the sync member.
     */
    public Output</* @Nullable */ String> getSyncAgentId() {
        return this.syncAgentId;
    }
    /**
     * Sync direction of the sync member.
     */
    @OutputExport(name="syncDirection", type=String.class, parameters={})
    private Output</* @Nullable */ String> syncDirection;

    /**
     * @return Sync direction of the sync member.
     */
    public Output</* @Nullable */ String> getSyncDirection() {
        return this.syncDirection;
    }
    /**
     * ARM resource id of the sync member logical database, for sync members in Azure.
     */
    @OutputExport(name="syncMemberAzureDatabaseResourceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> syncMemberAzureDatabaseResourceId;

    /**
     * @return ARM resource id of the sync member logical database, for sync members in Azure.
     */
    public Output</* @Nullable */ String> getSyncMemberAzureDatabaseResourceId() {
        return this.syncMemberAzureDatabaseResourceId;
    }
    /**
     * Sync state of the sync member.
     */
    @OutputExport(name="syncState", type=String.class, parameters={})
    private Output<String> syncState;

    /**
     * @return Sync state of the sync member.
     */
    public Output<String> getSyncState() {
        return this.syncState;
    }
    /**
     * Resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * Whether to use private link connection.
     */
    @OutputExport(name="usePrivateLinkConnection", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> usePrivateLinkConnection;

    /**
     * @return Whether to use private link connection.
     */
    public Output</* @Nullable */ Boolean> getUsePrivateLinkConnection() {
        return this.usePrivateLinkConnection;
    }
    /**
     * User name of the member database in the sync member.
     */
    @OutputExport(name="userName", type=String.class, parameters={})
    private Output</* @Nullable */ String> userName;

    /**
     * @return User name of the member database in the sync member.
     */
    public Output</* @Nullable */ String> getUserName() {
        return this.userName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SyncMember(String name, SyncMemberArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:SyncMember", name, args == null ? SyncMemberArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private SyncMember(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:SyncMember", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:sql/v20150501preview:SyncMember").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20190601preview:SyncMember").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20200202preview:SyncMember").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20200801preview:SyncMember").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20201101preview:SyncMember").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20210201preview:SyncMember").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20210501preview:SyncMember").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20210801preview:SyncMember").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SyncMember get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SyncMember(name, id, options);
    }
}
