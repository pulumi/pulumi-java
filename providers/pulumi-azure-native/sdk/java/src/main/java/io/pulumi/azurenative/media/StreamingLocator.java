// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.media.StreamingLocatorArgs;
import io.pulumi.azurenative.media.outputs.StreamingLocatorContentKeyResponse;
import io.pulumi.azurenative.media.outputs.SystemDataResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A Streaming Locator resource
 * API Version: 2020-05-01.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:media:StreamingLocator UserCreatedSecureStreamingLocatorWithUserDefinedContentKeys /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/streamingLocators/UserCreatedSecureStreamingLocatorWithUserDefinedContentKeys 
 * ```
 * 
 */
@ResourceType(type="azure-native:media:StreamingLocator")
public class StreamingLocator extends io.pulumi.resources.CustomResource {
    /**
     * Alternative Media ID of this Streaming Locator
     * 
     */
    @Export(name="alternativeMediaId", type=String.class, parameters={})
    private Output</* @Nullable */ String> alternativeMediaId;

    /**
     * @return Alternative Media ID of this Streaming Locator
     * 
     */
    public Output</* @Nullable */ String> getAlternativeMediaId() {
        return this.alternativeMediaId;
    }
    /**
     * Asset Name
     * 
     */
    @Export(name="assetName", type=String.class, parameters={})
    private Output<String> assetName;

    /**
     * @return Asset Name
     * 
     */
    public Output<String> getAssetName() {
        return this.assetName;
    }
    /**
     * The ContentKeys used by this Streaming Locator.
     * 
     */
    @Export(name="contentKeys", type=List.class, parameters={StreamingLocatorContentKeyResponse.class})
    private Output</* @Nullable */ List<StreamingLocatorContentKeyResponse>> contentKeys;

    /**
     * @return The ContentKeys used by this Streaming Locator.
     * 
     */
    public Output</* @Nullable */ List<StreamingLocatorContentKeyResponse>> getContentKeys() {
        return this.contentKeys;
    }
    /**
     * The creation time of the Streaming Locator.
     * 
     */
    @Export(name="created", type=String.class, parameters={})
    private Output<String> created;

    /**
     * @return The creation time of the Streaming Locator.
     * 
     */
    public Output<String> getCreated() {
        return this.created;
    }
    /**
     * Name of the default ContentKeyPolicy used by this Streaming Locator.
     * 
     */
    @Export(name="defaultContentKeyPolicyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultContentKeyPolicyName;

    /**
     * @return Name of the default ContentKeyPolicy used by this Streaming Locator.
     * 
     */
    public Output</* @Nullable */ String> getDefaultContentKeyPolicyName() {
        return this.defaultContentKeyPolicyName;
    }
    /**
     * The end time of the Streaming Locator.
     * 
     */
    @Export(name="endTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> endTime;

    /**
     * @return The end time of the Streaming Locator.
     * 
     */
    public Output</* @Nullable */ String> getEndTime() {
        return this.endTime;
    }
    /**
     * A list of asset or account filters which apply to this streaming locator
     * 
     */
    @Export(name="filters", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> filters;

    /**
     * @return A list of asset or account filters which apply to this streaming locator
     * 
     */
    public Output</* @Nullable */ List<String>> getFilters() {
        return this.filters;
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The start time of the Streaming Locator.
     * 
     */
    @Export(name="startTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> startTime;

    /**
     * @return The start time of the Streaming Locator.
     * 
     */
    public Output</* @Nullable */ String> getStartTime() {
        return this.startTime;
    }
    /**
     * The StreamingLocatorId of the Streaming Locator.
     * 
     */
    @Export(name="streamingLocatorId", type=String.class, parameters={})
    private Output</* @Nullable */ String> streamingLocatorId;

    /**
     * @return The StreamingLocatorId of the Streaming Locator.
     * 
     */
    public Output</* @Nullable */ String> getStreamingLocatorId() {
        return this.streamingLocatorId;
    }
    /**
     * Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'
     * 
     */
    @Export(name="streamingPolicyName", type=String.class, parameters={})
    private Output<String> streamingPolicyName;

    /**
     * @return Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'
     * 
     */
    public Output<String> getStreamingPolicyName() {
        return this.streamingPolicyName;
    }
    /**
     * The system metadata relating to this resource.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return The system metadata relating to this resource.
     * 
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StreamingLocator(String name) {
        this(name, StreamingLocatorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StreamingLocator(String name, StreamingLocatorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StreamingLocator(String name, StreamingLocatorArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:StreamingLocator", name, args == null ? StreamingLocatorArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private StreamingLocator(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:StreamingLocator", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:media/v20180330preview:StreamingLocator").build()),
                Output.of(Alias.builder().type("azure-native:media/v20180601preview:StreamingLocator").build()),
                Output.of(Alias.builder().type("azure-native:media/v20180701:StreamingLocator").build()),
                Output.of(Alias.builder().type("azure-native:media/v20200501:StreamingLocator").build()),
                Output.of(Alias.builder().type("azure-native:media/v20210601:StreamingLocator").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StreamingLocator get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new StreamingLocator(name, id, options);
    }
}
