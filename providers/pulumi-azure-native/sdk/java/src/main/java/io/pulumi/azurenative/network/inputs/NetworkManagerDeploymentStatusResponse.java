// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Network Manager Deployment Status.
 * 
 */
public final class NetworkManagerDeploymentStatusResponse extends io.pulumi.resources.InvokeArgs {

    public static final NetworkManagerDeploymentStatusResponse Empty = new NetworkManagerDeploymentStatusResponse();

    /**
     * Commit Time.
     * 
     */
    @InputImport(name="commitTime")
    private final @Nullable String commitTime;

    public Optional<String> getCommitTime() {
        return this.commitTime == null ? Optional.empty() : Optional.ofNullable(this.commitTime);
    }

    /**
     * List of configuration ids.
     * 
     */
    @InputImport(name="configurationIds")
    private final @Nullable List<String> configurationIds;

    public List<String> getConfigurationIds() {
        return this.configurationIds == null ? List.of() : this.configurationIds;
    }

    /**
     * Deployment Status.
     * 
     */
    @InputImport(name="deploymentStatus")
    private final @Nullable String deploymentStatus;

    public Optional<String> getDeploymentStatus() {
        return this.deploymentStatus == null ? Optional.empty() : Optional.ofNullable(this.deploymentStatus);
    }

    /**
     * Configuration Deployment Type.
     * 
     */
    @InputImport(name="deploymentType")
    private final @Nullable String deploymentType;

    public Optional<String> getDeploymentType() {
        return this.deploymentType == null ? Optional.empty() : Optional.ofNullable(this.deploymentType);
    }

    /**
     * Error Message.
     * 
     */
    @InputImport(name="errorMessage")
    private final @Nullable String errorMessage;

    public Optional<String> getErrorMessage() {
        return this.errorMessage == null ? Optional.empty() : Optional.ofNullable(this.errorMessage);
    }

    /**
     * Region Name.
     * 
     */
    @InputImport(name="region")
    private final @Nullable String region;

    public Optional<String> getRegion() {
        return this.region == null ? Optional.empty() : Optional.ofNullable(this.region);
    }

    public NetworkManagerDeploymentStatusResponse(
        @Nullable String commitTime,
        @Nullable List<String> configurationIds,
        @Nullable String deploymentStatus,
        @Nullable String deploymentType,
        @Nullable String errorMessage,
        @Nullable String region) {
        this.commitTime = commitTime;
        this.configurationIds = configurationIds;
        this.deploymentStatus = deploymentStatus;
        this.deploymentType = deploymentType;
        this.errorMessage = errorMessage;
        this.region = region;
    }

    private NetworkManagerDeploymentStatusResponse() {
        this.commitTime = null;
        this.configurationIds = List.of();
        this.deploymentStatus = null;
        this.deploymentType = null;
        this.errorMessage = null;
        this.region = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkManagerDeploymentStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String commitTime;
        private @Nullable List<String> configurationIds;
        private @Nullable String deploymentStatus;
        private @Nullable String deploymentType;
        private @Nullable String errorMessage;
        private @Nullable String region;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkManagerDeploymentStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commitTime = defaults.commitTime;
    	      this.configurationIds = defaults.configurationIds;
    	      this.deploymentStatus = defaults.deploymentStatus;
    	      this.deploymentType = defaults.deploymentType;
    	      this.errorMessage = defaults.errorMessage;
    	      this.region = defaults.region;
        }

        public Builder setCommitTime(@Nullable String commitTime) {
            this.commitTime = commitTime;
            return this;
        }

        public Builder setConfigurationIds(@Nullable List<String> configurationIds) {
            this.configurationIds = configurationIds;
            return this;
        }

        public Builder setDeploymentStatus(@Nullable String deploymentStatus) {
            this.deploymentStatus = deploymentStatus;
            return this;
        }

        public Builder setDeploymentType(@Nullable String deploymentType) {
            this.deploymentType = deploymentType;
            return this;
        }

        public Builder setErrorMessage(@Nullable String errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }

        public Builder setRegion(@Nullable String region) {
            this.region = region;
            return this;
        }

        public NetworkManagerDeploymentStatusResponse build() {
            return new NetworkManagerDeploymentStatusResponse(commitTime, configurationIds, deploymentStatus, deploymentType, errorMessage, region);
        }
    }
}
