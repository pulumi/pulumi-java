// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The Azure Automation Runbook notification receiver.
 * 
 */
public final class AutomationRunbookReceiverArgs extends io.pulumi.resources.ResourceArgs {

    public static final AutomationRunbookReceiverArgs Empty = new AutomationRunbookReceiverArgs();

    /**
     * The Azure automation account Id which holds this runbook and authenticate to Azure resource.
     * 
     */
    @InputImport(name="automationAccountId", required=true)
      private final Output<String> automationAccountId;

    public Output<String> getAutomationAccountId() {
        return this.automationAccountId;
    }

    /**
     * Indicates whether this instance is global runbook.
     * 
     */
    @InputImport(name="isGlobalRunbook", required=true)
      private final Output<Boolean> isGlobalRunbook;

    public Output<Boolean> getIsGlobalRunbook() {
        return this.isGlobalRunbook;
    }

    /**
     * Indicates name of the webhook.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The name for this runbook.
     * 
     */
    @InputImport(name="runbookName", required=true)
      private final Output<String> runbookName;

    public Output<String> getRunbookName() {
        return this.runbookName;
    }

    /**
     * The URI where webhooks should be sent.
     * 
     */
    @InputImport(name="serviceUri")
      private final @Nullable Output<String> serviceUri;

    public Output<String> getServiceUri() {
        return this.serviceUri == null ? Output.empty() : this.serviceUri;
    }

    /**
     * Indicates whether to use common alert schema.
     * 
     */
    @InputImport(name="useCommonAlertSchema")
      private final @Nullable Output<Boolean> useCommonAlertSchema;

    public Output<Boolean> getUseCommonAlertSchema() {
        return this.useCommonAlertSchema == null ? Output.empty() : this.useCommonAlertSchema;
    }

    /**
     * The resource id for webhook linked to this runbook.
     * 
     */
    @InputImport(name="webhookResourceId", required=true)
      private final Output<String> webhookResourceId;

    public Output<String> getWebhookResourceId() {
        return this.webhookResourceId;
    }

    public AutomationRunbookReceiverArgs(
        Output<String> automationAccountId,
        Output<Boolean> isGlobalRunbook,
        @Nullable Output<String> name,
        Output<String> runbookName,
        @Nullable Output<String> serviceUri,
        @Nullable Output<Boolean> useCommonAlertSchema,
        Output<String> webhookResourceId) {
        this.automationAccountId = Objects.requireNonNull(automationAccountId, "expected parameter 'automationAccountId' to be non-null");
        this.isGlobalRunbook = Objects.requireNonNull(isGlobalRunbook, "expected parameter 'isGlobalRunbook' to be non-null");
        this.name = name;
        this.runbookName = Objects.requireNonNull(runbookName, "expected parameter 'runbookName' to be non-null");
        this.serviceUri = serviceUri;
        this.useCommonAlertSchema = useCommonAlertSchema == null ? Output.ofNullable(false) : useCommonAlertSchema;
        this.webhookResourceId = Objects.requireNonNull(webhookResourceId, "expected parameter 'webhookResourceId' to be non-null");
    }

    private AutomationRunbookReceiverArgs() {
        this.automationAccountId = Output.empty();
        this.isGlobalRunbook = Output.empty();
        this.name = Output.empty();
        this.runbookName = Output.empty();
        this.serviceUri = Output.empty();
        this.useCommonAlertSchema = Output.empty();
        this.webhookResourceId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomationRunbookReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> automationAccountId;
        private Output<Boolean> isGlobalRunbook;
        private @Nullable Output<String> name;
        private Output<String> runbookName;
        private @Nullable Output<String> serviceUri;
        private @Nullable Output<Boolean> useCommonAlertSchema;
        private Output<String> webhookResourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(AutomationRunbookReceiverArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automationAccountId = defaults.automationAccountId;
    	      this.isGlobalRunbook = defaults.isGlobalRunbook;
    	      this.name = defaults.name;
    	      this.runbookName = defaults.runbookName;
    	      this.serviceUri = defaults.serviceUri;
    	      this.useCommonAlertSchema = defaults.useCommonAlertSchema;
    	      this.webhookResourceId = defaults.webhookResourceId;
        }

        public Builder automationAccountId(Output<String> automationAccountId) {
            this.automationAccountId = Objects.requireNonNull(automationAccountId);
            return this;
        }

        public Builder automationAccountId(String automationAccountId) {
            this.automationAccountId = Output.of(Objects.requireNonNull(automationAccountId));
            return this;
        }

        public Builder isGlobalRunbook(Output<Boolean> isGlobalRunbook) {
            this.isGlobalRunbook = Objects.requireNonNull(isGlobalRunbook);
            return this;
        }

        public Builder isGlobalRunbook(Boolean isGlobalRunbook) {
            this.isGlobalRunbook = Output.of(Objects.requireNonNull(isGlobalRunbook));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder runbookName(Output<String> runbookName) {
            this.runbookName = Objects.requireNonNull(runbookName);
            return this;
        }

        public Builder runbookName(String runbookName) {
            this.runbookName = Output.of(Objects.requireNonNull(runbookName));
            return this;
        }

        public Builder serviceUri(@Nullable Output<String> serviceUri) {
            this.serviceUri = serviceUri;
            return this;
        }

        public Builder serviceUri(@Nullable String serviceUri) {
            this.serviceUri = Output.ofNullable(serviceUri);
            return this;
        }

        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            this.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }

        public Builder useCommonAlertSchema(@Nullable Boolean useCommonAlertSchema) {
            this.useCommonAlertSchema = Output.ofNullable(useCommonAlertSchema);
            return this;
        }

        public Builder webhookResourceId(Output<String> webhookResourceId) {
            this.webhookResourceId = Objects.requireNonNull(webhookResourceId);
            return this;
        }

        public Builder webhookResourceId(String webhookResourceId) {
            this.webhookResourceId = Output.of(Objects.requireNonNull(webhookResourceId));
            return this;
        }
        public AutomationRunbookReceiverArgs build() {
            return new AutomationRunbookReceiverArgs(automationAccountId, isGlobalRunbook, name, runbookName, serviceUri, useCommonAlertSchema, webhookResourceId);
        }
    }
}
