// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CacheConfigurationResponse {
    /**
     * The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
     * 
     */
    private final @Nullable String cacheDuration;
    /**
     * Whether to use dynamic compression for cached content
     * 
     */
    private final @Nullable String dynamicCompression;
    /**
     * Treatment of URL query terms when forming the cache key.
     * 
     */
    private final @Nullable String queryParameterStripDirective;
    /**
     * query parameters to include or exclude (comma separated).
     * 
     */
    private final @Nullable String queryParameters;

    @CustomType.Constructor
    private CacheConfigurationResponse(
        @CustomType.Parameter("cacheDuration") @Nullable String cacheDuration,
        @CustomType.Parameter("dynamicCompression") @Nullable String dynamicCompression,
        @CustomType.Parameter("queryParameterStripDirective") @Nullable String queryParameterStripDirective,
        @CustomType.Parameter("queryParameters") @Nullable String queryParameters) {
        this.cacheDuration = cacheDuration;
        this.dynamicCompression = dynamicCompression;
        this.queryParameterStripDirective = queryParameterStripDirective;
        this.queryParameters = queryParameters;
    }

    /**
     * The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
     * 
    */
    public Optional<String> getCacheDuration() {
        return Optional.ofNullable(this.cacheDuration);
    }
    /**
     * Whether to use dynamic compression for cached content
     * 
    */
    public Optional<String> getDynamicCompression() {
        return Optional.ofNullable(this.dynamicCompression);
    }
    /**
     * Treatment of URL query terms when forming the cache key.
     * 
    */
    public Optional<String> getQueryParameterStripDirective() {
        return Optional.ofNullable(this.queryParameterStripDirective);
    }
    /**
     * query parameters to include or exclude (comma separated).
     * 
    */
    public Optional<String> getQueryParameters() {
        return Optional.ofNullable(this.queryParameters);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cacheDuration;
        private @Nullable String dynamicCompression;
        private @Nullable String queryParameterStripDirective;
        private @Nullable String queryParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(CacheConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheDuration = defaults.cacheDuration;
    	      this.dynamicCompression = defaults.dynamicCompression;
    	      this.queryParameterStripDirective = defaults.queryParameterStripDirective;
    	      this.queryParameters = defaults.queryParameters;
        }

        public Builder cacheDuration(@Nullable String cacheDuration) {
            this.cacheDuration = cacheDuration;
            return this;
        }

        public Builder dynamicCompression(@Nullable String dynamicCompression) {
            this.dynamicCompression = dynamicCompression;
            return this;
        }

        public Builder queryParameterStripDirective(@Nullable String queryParameterStripDirective) {
            this.queryParameterStripDirective = queryParameterStripDirective;
            return this;
        }

        public Builder queryParameters(@Nullable String queryParameters) {
            this.queryParameters = queryParameters;
            return this;
        }
        public CacheConfigurationResponse build() {
            return new CacheConfigurationResponse(cacheDuration, dynamicCompression, queryParameterStripDirective, queryParameters);
        }
    }
}
