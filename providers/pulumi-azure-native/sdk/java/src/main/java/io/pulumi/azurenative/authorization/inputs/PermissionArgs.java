// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.authorization.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Role definition permissions.
 * 
 */
public final class PermissionArgs extends io.pulumi.resources.ResourceArgs {

    public static final PermissionArgs Empty = new PermissionArgs();

    /**
     * Allowed actions.
     * 
     */
    @Import(name="actions")
      private final @Nullable Output<List<String>> actions;

    public Output<List<String>> getActions() {
        return this.actions == null ? Output.empty() : this.actions;
    }

    /**
     * Allowed Data actions.
     * 
     */
    @Import(name="dataActions")
      private final @Nullable Output<List<String>> dataActions;

    public Output<List<String>> getDataActions() {
        return this.dataActions == null ? Output.empty() : this.dataActions;
    }

    /**
     * Denied actions.
     * 
     */
    @Import(name="notActions")
      private final @Nullable Output<List<String>> notActions;

    public Output<List<String>> getNotActions() {
        return this.notActions == null ? Output.empty() : this.notActions;
    }

    /**
     * Denied Data actions.
     * 
     */
    @Import(name="notDataActions")
      private final @Nullable Output<List<String>> notDataActions;

    public Output<List<String>> getNotDataActions() {
        return this.notDataActions == null ? Output.empty() : this.notDataActions;
    }

    public PermissionArgs(
        @Nullable Output<List<String>> actions,
        @Nullable Output<List<String>> dataActions,
        @Nullable Output<List<String>> notActions,
        @Nullable Output<List<String>> notDataActions) {
        this.actions = actions;
        this.dataActions = dataActions;
        this.notActions = notActions;
        this.notDataActions = notDataActions;
    }

    private PermissionArgs() {
        this.actions = Output.empty();
        this.dataActions = Output.empty();
        this.notActions = Output.empty();
        this.notDataActions = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> actions;
        private @Nullable Output<List<String>> dataActions;
        private @Nullable Output<List<String>> notActions;
        private @Nullable Output<List<String>> notDataActions;

        public Builder() {
    	      // Empty
        }

        public Builder(PermissionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.dataActions = defaults.dataActions;
    	      this.notActions = defaults.notActions;
    	      this.notDataActions = defaults.notDataActions;
        }

        public Builder actions(@Nullable Output<List<String>> actions) {
            this.actions = actions;
            return this;
        }

        public Builder actions(@Nullable List<String> actions) {
            this.actions = Output.ofNullable(actions);
            return this;
        }

        public Builder dataActions(@Nullable Output<List<String>> dataActions) {
            this.dataActions = dataActions;
            return this;
        }

        public Builder dataActions(@Nullable List<String> dataActions) {
            this.dataActions = Output.ofNullable(dataActions);
            return this;
        }

        public Builder notActions(@Nullable Output<List<String>> notActions) {
            this.notActions = notActions;
            return this;
        }

        public Builder notActions(@Nullable List<String> notActions) {
            this.notActions = Output.ofNullable(notActions);
            return this;
        }

        public Builder notDataActions(@Nullable Output<List<String>> notDataActions) {
            this.notDataActions = notDataActions;
            return this;
        }

        public Builder notDataActions(@Nullable List<String> notDataActions) {
            this.notDataActions = Output.ofNullable(notDataActions);
            return this;
        }
        public PermissionArgs build() {
            return new PermissionArgs(actions, dataActions, notActions, notDataActions);
        }
    }
}
