// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.operationalinsights.outputs;

import io.pulumi.azurenative.operationalinsights.outputs.ColumnResponse;
import io.pulumi.azurenative.operationalinsights.outputs.RestoredLogsResponse;
import io.pulumi.azurenative.operationalinsights.outputs.SearchResultsResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class SchemaResponse {
    private final List<String> categories;
    private final @Nullable List<ColumnResponse> columns;
    private final @Nullable String description;
    private final @Nullable String displayName;
    private final List<String> labels;
    private final @Nullable String name;
    private final RestoredLogsResponse restoredLogs;
    private final SearchResultsResponse searchResults;
    private final List<String> solutions;
    private final String source;
    private final List<ColumnResponse> standardColumns;
    private final String tableSubType;
    private final String tableType;

    @OutputCustomType.Constructor({"categories","columns","description","displayName","labels","name","restoredLogs","searchResults","solutions","source","standardColumns","tableSubType","tableType"})
    private SchemaResponse(
        List<String> categories,
        @Nullable List<ColumnResponse> columns,
        @Nullable String description,
        @Nullable String displayName,
        List<String> labels,
        @Nullable String name,
        RestoredLogsResponse restoredLogs,
        SearchResultsResponse searchResults,
        List<String> solutions,
        String source,
        List<ColumnResponse> standardColumns,
        String tableSubType,
        String tableType) {
        this.categories = Objects.requireNonNull(categories);
        this.columns = columns;
        this.description = description;
        this.displayName = displayName;
        this.labels = Objects.requireNonNull(labels);
        this.name = name;
        this.restoredLogs = Objects.requireNonNull(restoredLogs);
        this.searchResults = Objects.requireNonNull(searchResults);
        this.solutions = Objects.requireNonNull(solutions);
        this.source = Objects.requireNonNull(source);
        this.standardColumns = Objects.requireNonNull(standardColumns);
        this.tableSubType = Objects.requireNonNull(tableSubType);
        this.tableType = Objects.requireNonNull(tableType);
    }

    public List<String> getCategories() {
        return this.categories;
    }
    public List<ColumnResponse> getColumns() {
        return this.columns == null ? List.of() : this.columns;
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> getDisplayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<String> getLabels() {
        return this.labels;
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public RestoredLogsResponse getRestoredLogs() {
        return this.restoredLogs;
    }
    public SearchResultsResponse getSearchResults() {
        return this.searchResults;
    }
    public List<String> getSolutions() {
        return this.solutions;
    }
    public String getSource() {
        return this.source;
    }
    public List<ColumnResponse> getStandardColumns() {
        return this.standardColumns;
    }
    public String getTableSubType() {
        return this.tableSubType;
    }
    public String getTableType() {
        return this.tableType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchemaResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> categories;
        private @Nullable List<ColumnResponse> columns;
        private @Nullable String description;
        private @Nullable String displayName;
        private List<String> labels;
        private @Nullable String name;
        private RestoredLogsResponse restoredLogs;
        private SearchResultsResponse searchResults;
        private List<String> solutions;
        private String source;
        private List<ColumnResponse> standardColumns;
        private String tableSubType;
        private String tableType;

        public Builder() {
    	      // Empty
        }

        public Builder(SchemaResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categories = defaults.categories;
    	      this.columns = defaults.columns;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.restoredLogs = defaults.restoredLogs;
    	      this.searchResults = defaults.searchResults;
    	      this.solutions = defaults.solutions;
    	      this.source = defaults.source;
    	      this.standardColumns = defaults.standardColumns;
    	      this.tableSubType = defaults.tableSubType;
    	      this.tableType = defaults.tableType;
        }

        public Builder setCategories(List<String> categories) {
            this.categories = Objects.requireNonNull(categories);
            return this;
        }

        public Builder setColumns(@Nullable List<ColumnResponse> columns) {
            this.columns = columns;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setLabels(List<String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setRestoredLogs(RestoredLogsResponse restoredLogs) {
            this.restoredLogs = Objects.requireNonNull(restoredLogs);
            return this;
        }

        public Builder setSearchResults(SearchResultsResponse searchResults) {
            this.searchResults = Objects.requireNonNull(searchResults);
            return this;
        }

        public Builder setSolutions(List<String> solutions) {
            this.solutions = Objects.requireNonNull(solutions);
            return this;
        }

        public Builder setSource(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder setStandardColumns(List<ColumnResponse> standardColumns) {
            this.standardColumns = Objects.requireNonNull(standardColumns);
            return this;
        }

        public Builder setTableSubType(String tableSubType) {
            this.tableSubType = Objects.requireNonNull(tableSubType);
            return this;
        }

        public Builder setTableType(String tableType) {
            this.tableType = Objects.requireNonNull(tableType);
            return this;
        }

        public SchemaResponse build() {
            return new SchemaResponse(categories, columns, description, displayName, labels, name, restoredLogs, searchResults, solutions, source, standardColumns, tableSubType, tableType);
        }
    }
}
