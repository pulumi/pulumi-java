// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.connectedvmwarevsphere;

import io.pulumi.azurenative.connectedvmwarevsphere.inputs.ExtendedLocationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualMachineTemplateArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualMachineTemplateArgs Empty = new VirtualMachineTemplateArgs();

    /**
     * Gets or sets the extended location.
     * 
     */
    @InputImport(name="extendedLocation")
        private final @Nullable Input<ExtendedLocationArgs> extendedLocation;

    public Input<ExtendedLocationArgs> getExtendedLocation() {
        return this.extendedLocation == null ? Input.empty() : this.extendedLocation;
    }

    /**
     * Gets or sets the inventory Item ID for the virtual machine template.
     * 
     */
    @InputImport(name="inventoryItemId")
        private final @Nullable Input<String> inventoryItemId;

    public Input<String> getInventoryItemId() {
        return this.inventoryItemId == null ? Input.empty() : this.inventoryItemId;
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    @InputImport(name="kind")
        private final @Nullable Input<String> kind;

    public Input<String> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    /**
     * Gets or sets the location.
     * 
     */
    @InputImport(name="location")
        private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine
     * template.
     * 
     */
    @InputImport(name="moRefId")
        private final @Nullable Input<String> moRefId;

    public Input<String> getMoRefId() {
        return this.moRefId == null ? Input.empty() : this.moRefId;
    }

    /**
     * The Resource Group Name.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
        private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Gets or sets the Resource tags.
     * 
     */
    @InputImport(name="tags")
        private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Gets or sets the ARM Id of the vCenter resource in which this template resides.
     * 
     */
    @InputImport(name="vCenterId")
        private final @Nullable Input<String> vCenterId;

    public Input<String> getVCenterId() {
        return this.vCenterId == null ? Input.empty() : this.vCenterId;
    }

    /**
     * Name of the virtual machine template resource.
     * 
     */
    @InputImport(name="virtualMachineTemplateName")
        private final @Nullable Input<String> virtualMachineTemplateName;

    public Input<String> getVirtualMachineTemplateName() {
        return this.virtualMachineTemplateName == null ? Input.empty() : this.virtualMachineTemplateName;
    }

    public VirtualMachineTemplateArgs(
        @Nullable Input<ExtendedLocationArgs> extendedLocation,
        @Nullable Input<String> inventoryItemId,
        @Nullable Input<String> kind,
        @Nullable Input<String> location,
        @Nullable Input<String> moRefId,
        Input<String> resourceGroupName,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> vCenterId,
        @Nullable Input<String> virtualMachineTemplateName) {
        this.extendedLocation = extendedLocation;
        this.inventoryItemId = inventoryItemId;
        this.kind = kind;
        this.location = location;
        this.moRefId = moRefId;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.vCenterId = vCenterId;
        this.virtualMachineTemplateName = virtualMachineTemplateName;
    }

    private VirtualMachineTemplateArgs() {
        this.extendedLocation = Input.empty();
        this.inventoryItemId = Input.empty();
        this.kind = Input.empty();
        this.location = Input.empty();
        this.moRefId = Input.empty();
        this.resourceGroupName = Input.empty();
        this.tags = Input.empty();
        this.vCenterId = Input.empty();
        this.virtualMachineTemplateName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ExtendedLocationArgs> extendedLocation;
        private @Nullable Input<String> inventoryItemId;
        private @Nullable Input<String> kind;
        private @Nullable Input<String> location;
        private @Nullable Input<String> moRefId;
        private Input<String> resourceGroupName;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> vCenterId;
        private @Nullable Input<String> virtualMachineTemplateName;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineTemplateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.inventoryItemId = defaults.inventoryItemId;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.moRefId = defaults.moRefId;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.vCenterId = defaults.vCenterId;
    	      this.virtualMachineTemplateName = defaults.virtualMachineTemplateName;
        }

        public Builder setExtendedLocation(@Nullable Input<ExtendedLocationArgs> extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }

        public Builder setExtendedLocation(@Nullable ExtendedLocationArgs extendedLocation) {
            this.extendedLocation = Input.ofNullable(extendedLocation);
            return this;
        }

        public Builder setInventoryItemId(@Nullable Input<String> inventoryItemId) {
            this.inventoryItemId = inventoryItemId;
            return this;
        }

        public Builder setInventoryItemId(@Nullable String inventoryItemId) {
            this.inventoryItemId = Input.ofNullable(inventoryItemId);
            return this;
        }

        public Builder setKind(@Nullable Input<String> kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setMoRefId(@Nullable Input<String> moRefId) {
            this.moRefId = moRefId;
            return this;
        }

        public Builder setMoRefId(@Nullable String moRefId) {
            this.moRefId = Input.ofNullable(moRefId);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVCenterId(@Nullable Input<String> vCenterId) {
            this.vCenterId = vCenterId;
            return this;
        }

        public Builder setVCenterId(@Nullable String vCenterId) {
            this.vCenterId = Input.ofNullable(vCenterId);
            return this;
        }

        public Builder setVirtualMachineTemplateName(@Nullable Input<String> virtualMachineTemplateName) {
            this.virtualMachineTemplateName = virtualMachineTemplateName;
            return this;
        }

        public Builder setVirtualMachineTemplateName(@Nullable String virtualMachineTemplateName) {
            this.virtualMachineTemplateName = Input.ofNullable(virtualMachineTemplateName);
            return this;
        }
        public VirtualMachineTemplateArgs build() {
            return new VirtualMachineTemplateArgs(extendedLocation, inventoryItemId, kind, location, moRefId, resourceGroupName, tags, vCenterId, virtualMachineTemplateName);
        }
    }
}
