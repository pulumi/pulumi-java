// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement.inputs;

import io.pulumi.azurenative.apimanagement.inputs.ParameterContractResponse;
import io.pulumi.azurenative.apimanagement.inputs.RepresentationContractResponse;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Operation response details.
 * 
 */
public final class ResponseContractResponse extends io.pulumi.resources.InvokeArgs {

    public static final ResponseContractResponse Empty = new ResponseContractResponse();

    /**
     * Operation response description.
     * 
     */
    @InputImport(name="description")
        private final @Nullable String description;

    public Optional<String> getDescription() {
        return this.description == null ? Optional.empty() : Optional.ofNullable(this.description);
    }

    /**
     * Collection of operation response headers.
     * 
     */
    @InputImport(name="headers")
        private final @Nullable List<ParameterContractResponse> headers;

    public List<ParameterContractResponse> getHeaders() {
        return this.headers == null ? List.of() : this.headers;
    }

    /**
     * Collection of operation response representations.
     * 
     */
    @InputImport(name="representations")
        private final @Nullable List<RepresentationContractResponse> representations;

    public List<RepresentationContractResponse> getRepresentations() {
        return this.representations == null ? List.of() : this.representations;
    }

    /**
     * Operation response HTTP status code.
     * 
     */
    @InputImport(name="statusCode", required=true)
        private final Integer statusCode;

    public Integer getStatusCode() {
        return this.statusCode;
    }

    public ResponseContractResponse(
        @Nullable String description,
        @Nullable List<ParameterContractResponse> headers,
        @Nullable List<RepresentationContractResponse> representations,
        Integer statusCode) {
        this.description = description;
        this.headers = headers;
        this.representations = representations;
        this.statusCode = Objects.requireNonNull(statusCode, "expected parameter 'statusCode' to be non-null");
    }

    private ResponseContractResponse() {
        this.description = null;
        this.headers = List.of();
        this.representations = List.of();
        this.statusCode = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResponseContractResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private @Nullable List<ParameterContractResponse> headers;
        private @Nullable List<RepresentationContractResponse> representations;
        private Integer statusCode;

        public Builder() {
    	      // Empty
        }

        public Builder(ResponseContractResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.headers = defaults.headers;
    	      this.representations = defaults.representations;
    	      this.statusCode = defaults.statusCode;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setHeaders(@Nullable List<ParameterContractResponse> headers) {
            this.headers = headers;
            return this;
        }

        public Builder setRepresentations(@Nullable List<RepresentationContractResponse> representations) {
            this.representations = representations;
            return this;
        }

        public Builder setStatusCode(Integer statusCode) {
            this.statusCode = Objects.requireNonNull(statusCode);
            return this;
        }
        public ResponseContractResponse build() {
            return new ResponseContractResponse(description, headers, representations, statusCode);
        }
    }
}
