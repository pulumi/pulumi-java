// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.solutions.outputs;

import io.pulumi.azurenative.solutions.outputs.ApplicationAuthorizationResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationDefinitionArtifactResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationDeploymentPolicyResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationManagementPolicyResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationNotificationPolicyResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationPackageLockingPolicyDefinitionResponse;
import io.pulumi.azurenative.solutions.outputs.ApplicationPolicyResponse;
import io.pulumi.azurenative.solutions.outputs.SkuResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetApplicationDefinitionResult {
    private final @Nullable List<ApplicationDefinitionArtifactResponse> artifacts;
    private final @Nullable List<ApplicationAuthorizationResponse> authorizations;
    private final @Nullable Object createUiDefinition;
    private final @Nullable ApplicationDeploymentPolicyResponse deploymentPolicy;
    private final @Nullable String description;
    private final @Nullable String displayName;
    private final String id;
    private final @Nullable Boolean isEnabled;
    private final @Nullable String location;
    private final String lockLevel;
    private final @Nullable ApplicationPackageLockingPolicyDefinitionResponse lockingPolicy;
    private final @Nullable Object mainTemplate;
    private final @Nullable String managedBy;
    private final @Nullable ApplicationManagementPolicyResponse managementPolicy;
    private final String name;
    private final @Nullable ApplicationNotificationPolicyResponse notificationPolicy;
    private final @Nullable String packageFileUri;
    private final @Nullable List<ApplicationPolicyResponse> policies;
    private final @Nullable SkuResponse sku;
    private final @Nullable Map<String,String> tags;
    private final String type;

    @OutputCustomType.Constructor({"artifacts","authorizations","createUiDefinition","deploymentPolicy","description","displayName","id","isEnabled","location","lockLevel","lockingPolicy","mainTemplate","managedBy","managementPolicy","name","notificationPolicy","packageFileUri","policies","sku","tags","type"})
    private GetApplicationDefinitionResult(
        @Nullable List<ApplicationDefinitionArtifactResponse> artifacts,
        @Nullable List<ApplicationAuthorizationResponse> authorizations,
        @Nullable Object createUiDefinition,
        @Nullable ApplicationDeploymentPolicyResponse deploymentPolicy,
        @Nullable String description,
        @Nullable String displayName,
        String id,
        @Nullable Boolean isEnabled,
        @Nullable String location,
        String lockLevel,
        @Nullable ApplicationPackageLockingPolicyDefinitionResponse lockingPolicy,
        @Nullable Object mainTemplate,
        @Nullable String managedBy,
        @Nullable ApplicationManagementPolicyResponse managementPolicy,
        String name,
        @Nullable ApplicationNotificationPolicyResponse notificationPolicy,
        @Nullable String packageFileUri,
        @Nullable List<ApplicationPolicyResponse> policies,
        @Nullable SkuResponse sku,
        @Nullable Map<String,String> tags,
        String type) {
        this.artifacts = artifacts;
        this.authorizations = authorizations;
        this.createUiDefinition = createUiDefinition;
        this.deploymentPolicy = deploymentPolicy;
        this.description = description;
        this.displayName = displayName;
        this.id = Objects.requireNonNull(id);
        this.isEnabled = isEnabled;
        this.location = location;
        this.lockLevel = Objects.requireNonNull(lockLevel);
        this.lockingPolicy = lockingPolicy;
        this.mainTemplate = mainTemplate;
        this.managedBy = managedBy;
        this.managementPolicy = managementPolicy;
        this.name = Objects.requireNonNull(name);
        this.notificationPolicy = notificationPolicy;
        this.packageFileUri = packageFileUri;
        this.policies = policies;
        this.sku = sku;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    public List<ApplicationDefinitionArtifactResponse> getArtifacts() {
        return this.artifacts == null ? List.of() : this.artifacts;
    }
    public List<ApplicationAuthorizationResponse> getAuthorizations() {
        return this.authorizations == null ? List.of() : this.authorizations;
    }
    public Optional<Object> getCreateUiDefinition() {
        return Optional.ofNullable(this.createUiDefinition);
    }
    public Optional<ApplicationDeploymentPolicyResponse> getDeploymentPolicy() {
        return Optional.ofNullable(this.deploymentPolicy);
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> getDisplayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String getId() {
        return this.id;
    }
    public Optional<Boolean> getIsEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    public Optional<String> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public String getLockLevel() {
        return this.lockLevel;
    }
    public Optional<ApplicationPackageLockingPolicyDefinitionResponse> getLockingPolicy() {
        return Optional.ofNullable(this.lockingPolicy);
    }
    public Optional<Object> getMainTemplate() {
        return Optional.ofNullable(this.mainTemplate);
    }
    public Optional<String> getManagedBy() {
        return Optional.ofNullable(this.managedBy);
    }
    public Optional<ApplicationManagementPolicyResponse> getManagementPolicy() {
        return Optional.ofNullable(this.managementPolicy);
    }
    public String getName() {
        return this.name;
    }
    public Optional<ApplicationNotificationPolicyResponse> getNotificationPolicy() {
        return Optional.ofNullable(this.notificationPolicy);
    }
    public Optional<String> getPackageFileUri() {
        return Optional.ofNullable(this.packageFileUri);
    }
    public List<ApplicationPolicyResponse> getPolicies() {
        return this.policies == null ? List.of() : this.policies;
    }
    public Optional<SkuResponse> getSku() {
        return Optional.ofNullable(this.sku);
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationDefinitionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<ApplicationDefinitionArtifactResponse> artifacts;
        private @Nullable List<ApplicationAuthorizationResponse> authorizations;
        private @Nullable Object createUiDefinition;
        private @Nullable ApplicationDeploymentPolicyResponse deploymentPolicy;
        private @Nullable String description;
        private @Nullable String displayName;
        private String id;
        private @Nullable Boolean isEnabled;
        private @Nullable String location;
        private String lockLevel;
        private @Nullable ApplicationPackageLockingPolicyDefinitionResponse lockingPolicy;
        private @Nullable Object mainTemplate;
        private @Nullable String managedBy;
        private @Nullable ApplicationManagementPolicyResponse managementPolicy;
        private String name;
        private @Nullable ApplicationNotificationPolicyResponse notificationPolicy;
        private @Nullable String packageFileUri;
        private @Nullable List<ApplicationPolicyResponse> policies;
        private @Nullable SkuResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifacts = defaults.artifacts;
    	      this.authorizations = defaults.authorizations;
    	      this.createUiDefinition = defaults.createUiDefinition;
    	      this.deploymentPolicy = defaults.deploymentPolicy;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.location = defaults.location;
    	      this.lockLevel = defaults.lockLevel;
    	      this.lockingPolicy = defaults.lockingPolicy;
    	      this.mainTemplate = defaults.mainTemplate;
    	      this.managedBy = defaults.managedBy;
    	      this.managementPolicy = defaults.managementPolicy;
    	      this.name = defaults.name;
    	      this.notificationPolicy = defaults.notificationPolicy;
    	      this.packageFileUri = defaults.packageFileUri;
    	      this.policies = defaults.policies;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setArtifacts(@Nullable List<ApplicationDefinitionArtifactResponse> artifacts) {
            this.artifacts = artifacts;
            return this;
        }

        public Builder setAuthorizations(@Nullable List<ApplicationAuthorizationResponse> authorizations) {
            this.authorizations = authorizations;
            return this;
        }

        public Builder setCreateUiDefinition(@Nullable Object createUiDefinition) {
            this.createUiDefinition = createUiDefinition;
            return this;
        }

        public Builder setDeploymentPolicy(@Nullable ApplicationDeploymentPolicyResponse deploymentPolicy) {
            this.deploymentPolicy = deploymentPolicy;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIsEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setLockLevel(String lockLevel) {
            this.lockLevel = Objects.requireNonNull(lockLevel);
            return this;
        }

        public Builder setLockingPolicy(@Nullable ApplicationPackageLockingPolicyDefinitionResponse lockingPolicy) {
            this.lockingPolicy = lockingPolicy;
            return this;
        }

        public Builder setMainTemplate(@Nullable Object mainTemplate) {
            this.mainTemplate = mainTemplate;
            return this;
        }

        public Builder setManagedBy(@Nullable String managedBy) {
            this.managedBy = managedBy;
            return this;
        }

        public Builder setManagementPolicy(@Nullable ApplicationManagementPolicyResponse managementPolicy) {
            this.managementPolicy = managementPolicy;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNotificationPolicy(@Nullable ApplicationNotificationPolicyResponse notificationPolicy) {
            this.notificationPolicy = notificationPolicy;
            return this;
        }

        public Builder setPackageFileUri(@Nullable String packageFileUri) {
            this.packageFileUri = packageFileUri;
            return this;
        }

        public Builder setPolicies(@Nullable List<ApplicationPolicyResponse> policies) {
            this.policies = policies;
            return this;
        }

        public Builder setSku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetApplicationDefinitionResult build() {
            return new GetApplicationDefinitionResult(artifacts, authorizations, createUiDefinition, deploymentPolicy, description, displayName, id, isEnabled, location, lockLevel, lockingPolicy, mainTemplate, managedBy, managementPolicy, name, notificationPolicy, packageFileUri, policies, sku, tags, type);
        }
    }
}
