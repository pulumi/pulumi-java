// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class EdifactSchemaReferenceResponse {
    /**
     * The association assigned code.
     * 
     */
    private final @Nullable String associationAssignedCode;
    /**
     * The message id.
     * 
     */
    private final String messageId;
    /**
     * The message release version.
     * 
     */
    private final String messageRelease;
    /**
     * The message version.
     * 
     */
    private final String messageVersion;
    /**
     * The schema name.
     * 
     */
    private final String schemaName;
    /**
     * The sender application id.
     * 
     */
    private final @Nullable String senderApplicationId;
    /**
     * The sender application qualifier.
     * 
     */
    private final @Nullable String senderApplicationQualifier;

    @OutputCustomType.Constructor({"associationAssignedCode","messageId","messageRelease","messageVersion","schemaName","senderApplicationId","senderApplicationQualifier"})
    private EdifactSchemaReferenceResponse(
        @Nullable String associationAssignedCode,
        String messageId,
        String messageRelease,
        String messageVersion,
        String schemaName,
        @Nullable String senderApplicationId,
        @Nullable String senderApplicationQualifier) {
        this.associationAssignedCode = associationAssignedCode;
        this.messageId = Objects.requireNonNull(messageId);
        this.messageRelease = Objects.requireNonNull(messageRelease);
        this.messageVersion = Objects.requireNonNull(messageVersion);
        this.schemaName = Objects.requireNonNull(schemaName);
        this.senderApplicationId = senderApplicationId;
        this.senderApplicationQualifier = senderApplicationQualifier;
    }

    /**
     * The association assigned code.
     * 
     */
    public Optional<String> getAssociationAssignedCode() {
        return Optional.ofNullable(this.associationAssignedCode);
    }
    /**
     * The message id.
     * 
     */
    public String getMessageId() {
        return this.messageId;
    }
    /**
     * The message release version.
     * 
     */
    public String getMessageRelease() {
        return this.messageRelease;
    }
    /**
     * The message version.
     * 
     */
    public String getMessageVersion() {
        return this.messageVersion;
    }
    /**
     * The schema name.
     * 
     */
    public String getSchemaName() {
        return this.schemaName;
    }
    /**
     * The sender application id.
     * 
     */
    public Optional<String> getSenderApplicationId() {
        return Optional.ofNullable(this.senderApplicationId);
    }
    /**
     * The sender application qualifier.
     * 
     */
    public Optional<String> getSenderApplicationQualifier() {
        return Optional.ofNullable(this.senderApplicationQualifier);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdifactSchemaReferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String associationAssignedCode;
        private String messageId;
        private String messageRelease;
        private String messageVersion;
        private String schemaName;
        private @Nullable String senderApplicationId;
        private @Nullable String senderApplicationQualifier;

        public Builder() {
    	      // Empty
        }

        public Builder(EdifactSchemaReferenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associationAssignedCode = defaults.associationAssignedCode;
    	      this.messageId = defaults.messageId;
    	      this.messageRelease = defaults.messageRelease;
    	      this.messageVersion = defaults.messageVersion;
    	      this.schemaName = defaults.schemaName;
    	      this.senderApplicationId = defaults.senderApplicationId;
    	      this.senderApplicationQualifier = defaults.senderApplicationQualifier;
        }

        public Builder setAssociationAssignedCode(@Nullable String associationAssignedCode) {
            this.associationAssignedCode = associationAssignedCode;
            return this;
        }

        public Builder setMessageId(String messageId) {
            this.messageId = Objects.requireNonNull(messageId);
            return this;
        }

        public Builder setMessageRelease(String messageRelease) {
            this.messageRelease = Objects.requireNonNull(messageRelease);
            return this;
        }

        public Builder setMessageVersion(String messageVersion) {
            this.messageVersion = Objects.requireNonNull(messageVersion);
            return this;
        }

        public Builder setSchemaName(String schemaName) {
            this.schemaName = Objects.requireNonNull(schemaName);
            return this;
        }

        public Builder setSenderApplicationId(@Nullable String senderApplicationId) {
            this.senderApplicationId = senderApplicationId;
            return this;
        }

        public Builder setSenderApplicationQualifier(@Nullable String senderApplicationQualifier) {
            this.senderApplicationQualifier = senderApplicationQualifier;
            return this;
        }

        public EdifactSchemaReferenceResponse build() {
            return new EdifactSchemaReferenceResponse(associationAssignedCode, messageId, messageRelease, messageVersion, schemaName, senderApplicationId, senderApplicationQualifier);
        }
    }
}
