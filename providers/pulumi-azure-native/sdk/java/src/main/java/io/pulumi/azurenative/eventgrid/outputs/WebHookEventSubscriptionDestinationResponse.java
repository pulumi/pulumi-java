// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.eventgrid.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebHookEventSubscriptionDestinationResponse {
    /**
     * The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    private final @Nullable String azureActiveDirectoryApplicationIdOrUri;
    /**
     * The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    private final @Nullable String azureActiveDirectoryTenantId;
    /**
     * The base URL that represents the endpoint of the destination of an event subscription.
     * 
     */
    private final String endpointBaseUrl;
    /**
     * Type of the endpoint for the event subscription destination.
     * Expected value is 'WebHook'.
     * 
     */
    private final String endpointType;
    /**
     * The URL that represents the endpoint of the destination of an event subscription.
     * 
     */
    private final @Nullable String endpointUrl;
    /**
     * Maximum number of events per batch.
     * 
     */
    private final @Nullable Integer maxEventsPerBatch;
    /**
     * Preferred batch size in Kilobytes.
     * 
     */
    private final @Nullable Integer preferredBatchSizeInKilobytes;

    @CustomType.Constructor
    private WebHookEventSubscriptionDestinationResponse(
        @CustomType.Parameter("azureActiveDirectoryApplicationIdOrUri") @Nullable String azureActiveDirectoryApplicationIdOrUri,
        @CustomType.Parameter("azureActiveDirectoryTenantId") @Nullable String azureActiveDirectoryTenantId,
        @CustomType.Parameter("endpointBaseUrl") String endpointBaseUrl,
        @CustomType.Parameter("endpointType") String endpointType,
        @CustomType.Parameter("endpointUrl") @Nullable String endpointUrl,
        @CustomType.Parameter("maxEventsPerBatch") @Nullable Integer maxEventsPerBatch,
        @CustomType.Parameter("preferredBatchSizeInKilobytes") @Nullable Integer preferredBatchSizeInKilobytes) {
        this.azureActiveDirectoryApplicationIdOrUri = azureActiveDirectoryApplicationIdOrUri;
        this.azureActiveDirectoryTenantId = azureActiveDirectoryTenantId;
        this.endpointBaseUrl = endpointBaseUrl;
        this.endpointType = endpointType;
        this.endpointUrl = endpointUrl;
        this.maxEventsPerBatch = maxEventsPerBatch;
        this.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
    }

    /**
     * The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
     * 
    */
    public Optional<String> azureActiveDirectoryApplicationIdOrUri() {
        return Optional.ofNullable(this.azureActiveDirectoryApplicationIdOrUri);
    }
    /**
     * The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
     * 
    */
    public Optional<String> azureActiveDirectoryTenantId() {
        return Optional.ofNullable(this.azureActiveDirectoryTenantId);
    }
    /**
     * The base URL that represents the endpoint of the destination of an event subscription.
     * 
    */
    public String endpointBaseUrl() {
        return this.endpointBaseUrl;
    }
    /**
     * Type of the endpoint for the event subscription destination.
     * Expected value is 'WebHook'.
     * 
    */
    public String endpointType() {
        return this.endpointType;
    }
    /**
     * The URL that represents the endpoint of the destination of an event subscription.
     * 
    */
    public Optional<String> endpointUrl() {
        return Optional.ofNullable(this.endpointUrl);
    }
    /**
     * Maximum number of events per batch.
     * 
    */
    public Optional<Integer> maxEventsPerBatch() {
        return Optional.ofNullable(this.maxEventsPerBatch);
    }
    /**
     * Preferred batch size in Kilobytes.
     * 
    */
    public Optional<Integer> preferredBatchSizeInKilobytes() {
        return Optional.ofNullable(this.preferredBatchSizeInKilobytes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebHookEventSubscriptionDestinationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String azureActiveDirectoryApplicationIdOrUri;
        private @Nullable String azureActiveDirectoryTenantId;
        private String endpointBaseUrl;
        private String endpointType;
        private @Nullable String endpointUrl;
        private @Nullable Integer maxEventsPerBatch;
        private @Nullable Integer preferredBatchSizeInKilobytes;

        public Builder() {
    	      // Empty
        }

        public Builder(WebHookEventSubscriptionDestinationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureActiveDirectoryApplicationIdOrUri = defaults.azureActiveDirectoryApplicationIdOrUri;
    	      this.azureActiveDirectoryTenantId = defaults.azureActiveDirectoryTenantId;
    	      this.endpointBaseUrl = defaults.endpointBaseUrl;
    	      this.endpointType = defaults.endpointType;
    	      this.endpointUrl = defaults.endpointUrl;
    	      this.maxEventsPerBatch = defaults.maxEventsPerBatch;
    	      this.preferredBatchSizeInKilobytes = defaults.preferredBatchSizeInKilobytes;
        }

        public Builder azureActiveDirectoryApplicationIdOrUri(@Nullable String azureActiveDirectoryApplicationIdOrUri) {
            this.azureActiveDirectoryApplicationIdOrUri = azureActiveDirectoryApplicationIdOrUri;
            return this;
        }
        public Builder azureActiveDirectoryTenantId(@Nullable String azureActiveDirectoryTenantId) {
            this.azureActiveDirectoryTenantId = azureActiveDirectoryTenantId;
            return this;
        }
        public Builder endpointBaseUrl(String endpointBaseUrl) {
            this.endpointBaseUrl = Objects.requireNonNull(endpointBaseUrl);
            return this;
        }
        public Builder endpointType(String endpointType) {
            this.endpointType = Objects.requireNonNull(endpointType);
            return this;
        }
        public Builder endpointUrl(@Nullable String endpointUrl) {
            this.endpointUrl = endpointUrl;
            return this;
        }
        public Builder maxEventsPerBatch(@Nullable Integer maxEventsPerBatch) {
            this.maxEventsPerBatch = maxEventsPerBatch;
            return this;
        }
        public Builder preferredBatchSizeInKilobytes(@Nullable Integer preferredBatchSizeInKilobytes) {
            this.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
            return this;
        }        public WebHookEventSubscriptionDestinationResponse build() {
            return new WebHookEventSubscriptionDestinationResponse(azureActiveDirectoryApplicationIdOrUri, azureActiveDirectoryTenantId, endpointBaseUrl, endpointType, endpointUrl, maxEventsPerBatch, preferredBatchSizeInKilobytes);
        }
    }
}
