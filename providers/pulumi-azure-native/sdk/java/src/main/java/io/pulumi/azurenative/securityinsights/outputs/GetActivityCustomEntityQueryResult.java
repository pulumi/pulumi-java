// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights.outputs;

import io.pulumi.azurenative.securityinsights.outputs.ActivityEntityQueriesPropertiesResponseQueryDefinitions;
import io.pulumi.azurenative.securityinsights.outputs.SystemDataResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetActivityCustomEntityQueryResult {
    /**
     * The entity query content to display in timeline
     * 
     */
    private final @Nullable String content;
    /**
     * The time the activity was created
     * 
     */
    private final String createdTimeUtc;
    /**
     * The entity query description
     * 
     */
    private final @Nullable String description;
    /**
     * Determines whether this activity is enabled or disabled.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * The query applied only to entities matching to all filters
     * 
     */
    private final @Nullable Map<String,List<String>> entitiesFilter;
    /**
     * Etag of the azure resource
     * 
     */
    private final @Nullable String etag;
    /**
     * Azure resource Id
     * 
     */
    private final String id;
    /**
     * The type of the query's source entity
     * 
     */
    private final @Nullable String inputEntityType;
    /**
     * The kind of the entity query
     * Expected value is 'Activity'.
     * 
     */
    private final String kind;
    /**
     * The last time the activity was updated
     * 
     */
    private final String lastModifiedTimeUtc;
    /**
     * Azure resource name
     * 
     */
    private final String name;
    /**
     * The Activity query definitions
     * 
     */
    private final @Nullable ActivityEntityQueriesPropertiesResponseQueryDefinitions queryDefinitions;
    /**
     * List of the fields of the source entity that are required to run the query
     * 
     */
    private final @Nullable List<List<String>> requiredInputFieldsSets;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private final SystemDataResponse systemData;
    /**
     * The template id this activity was created from
     * 
     */
    private final @Nullable String templateName;
    /**
     * The entity query title
     * 
     */
    private final @Nullable String title;
    /**
     * Azure resource type
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"content","createdTimeUtc","description","enabled","entitiesFilter","etag","id","inputEntityType","kind","lastModifiedTimeUtc","name","queryDefinitions","requiredInputFieldsSets","systemData","templateName","title","type"})
    private GetActivityCustomEntityQueryResult(
        @Nullable String content,
        String createdTimeUtc,
        @Nullable String description,
        @Nullable Boolean enabled,
        @Nullable Map<String,List<String>> entitiesFilter,
        @Nullable String etag,
        String id,
        @Nullable String inputEntityType,
        String kind,
        String lastModifiedTimeUtc,
        String name,
        @Nullable ActivityEntityQueriesPropertiesResponseQueryDefinitions queryDefinitions,
        @Nullable List<List<String>> requiredInputFieldsSets,
        SystemDataResponse systemData,
        @Nullable String templateName,
        @Nullable String title,
        String type) {
        this.content = content;
        this.createdTimeUtc = Objects.requireNonNull(createdTimeUtc);
        this.description = description;
        this.enabled = enabled;
        this.entitiesFilter = entitiesFilter;
        this.etag = etag;
        this.id = Objects.requireNonNull(id);
        this.inputEntityType = inputEntityType;
        this.kind = Objects.requireNonNull(kind);
        this.lastModifiedTimeUtc = Objects.requireNonNull(lastModifiedTimeUtc);
        this.name = Objects.requireNonNull(name);
        this.queryDefinitions = queryDefinitions;
        this.requiredInputFieldsSets = requiredInputFieldsSets;
        this.systemData = Objects.requireNonNull(systemData);
        this.templateName = templateName;
        this.title = title;
        this.type = Objects.requireNonNull(type);
    }

    /**
     * The entity query content to display in timeline
     * 
    */
    public Optional<String> getContent() {
        return Optional.ofNullable(this.content);
    }
    /**
     * The time the activity was created
     * 
    */
    public String getCreatedTimeUtc() {
        return this.createdTimeUtc;
    }
    /**
     * The entity query description
     * 
    */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * Determines whether this activity is enabled or disabled.
     * 
    */
    public Optional<Boolean> getEnabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * The query applied only to entities matching to all filters
     * 
    */
    public Map<String,List<String>> getEntitiesFilter() {
        return this.entitiesFilter == null ? Map.of() : this.entitiesFilter;
    }
    /**
     * Etag of the azure resource
     * 
    */
    public Optional<String> getEtag() {
        return Optional.ofNullable(this.etag);
    }
    /**
     * Azure resource Id
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * The type of the query's source entity
     * 
    */
    public Optional<String> getInputEntityType() {
        return Optional.ofNullable(this.inputEntityType);
    }
    /**
     * The kind of the entity query
     * Expected value is 'Activity'.
     * 
    */
    public String getKind() {
        return this.kind;
    }
    /**
     * The last time the activity was updated
     * 
    */
    public String getLastModifiedTimeUtc() {
        return this.lastModifiedTimeUtc;
    }
    /**
     * Azure resource name
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The Activity query definitions
     * 
    */
    public Optional<ActivityEntityQueriesPropertiesResponseQueryDefinitions> getQueryDefinitions() {
        return Optional.ofNullable(this.queryDefinitions);
    }
    /**
     * List of the fields of the source entity that are required to run the query
     * 
    */
    public List<List<String>> getRequiredInputFieldsSets() {
        return this.requiredInputFieldsSets == null ? List.of() : this.requiredInputFieldsSets;
    }
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
    */
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    /**
     * The template id this activity was created from
     * 
    */
    public Optional<String> getTemplateName() {
        return Optional.ofNullable(this.templateName);
    }
    /**
     * The entity query title
     * 
    */
    public Optional<String> getTitle() {
        return Optional.ofNullable(this.title);
    }
    /**
     * Azure resource type
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetActivityCustomEntityQueryResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String content;
        private String createdTimeUtc;
        private @Nullable String description;
        private @Nullable Boolean enabled;
        private @Nullable Map<String,List<String>> entitiesFilter;
        private @Nullable String etag;
        private String id;
        private @Nullable String inputEntityType;
        private String kind;
        private String lastModifiedTimeUtc;
        private String name;
        private @Nullable ActivityEntityQueriesPropertiesResponseQueryDefinitions queryDefinitions;
        private @Nullable List<List<String>> requiredInputFieldsSets;
        private SystemDataResponse systemData;
        private @Nullable String templateName;
        private @Nullable String title;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetActivityCustomEntityQueryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.createdTimeUtc = defaults.createdTimeUtc;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.entitiesFilter = defaults.entitiesFilter;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.inputEntityType = defaults.inputEntityType;
    	      this.kind = defaults.kind;
    	      this.lastModifiedTimeUtc = defaults.lastModifiedTimeUtc;
    	      this.name = defaults.name;
    	      this.queryDefinitions = defaults.queryDefinitions;
    	      this.requiredInputFieldsSets = defaults.requiredInputFieldsSets;
    	      this.systemData = defaults.systemData;
    	      this.templateName = defaults.templateName;
    	      this.title = defaults.title;
    	      this.type = defaults.type;
        }

        public Builder setContent(@Nullable String content) {
            this.content = content;
            return this;
        }

        public Builder setCreatedTimeUtc(String createdTimeUtc) {
            this.createdTimeUtc = Objects.requireNonNull(createdTimeUtc);
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setEntitiesFilter(@Nullable Map<String,List<String>> entitiesFilter) {
            this.entitiesFilter = entitiesFilter;
            return this;
        }

        public Builder setEtag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInputEntityType(@Nullable String inputEntityType) {
            this.inputEntityType = inputEntityType;
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setLastModifiedTimeUtc(String lastModifiedTimeUtc) {
            this.lastModifiedTimeUtc = Objects.requireNonNull(lastModifiedTimeUtc);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setQueryDefinitions(@Nullable ActivityEntityQueriesPropertiesResponseQueryDefinitions queryDefinitions) {
            this.queryDefinitions = queryDefinitions;
            return this;
        }

        public Builder setRequiredInputFieldsSets(@Nullable List<List<String>> requiredInputFieldsSets) {
            this.requiredInputFieldsSets = requiredInputFieldsSets;
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTemplateName(@Nullable String templateName) {
            this.templateName = templateName;
            return this;
        }

        public Builder setTitle(@Nullable String title) {
            this.title = title;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetActivityCustomEntityQueryResult build() {
            return new GetActivityCustomEntityQueryResult(content, createdTimeUtc, description, enabled, entitiesFilter, etag, id, inputEntityType, kind, lastModifiedTimeUtc, name, queryDefinitions, requiredInputFieldsSets, systemData, templateName, title, type);
        }
    }
}
