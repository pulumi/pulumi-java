// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.alertsmanagement.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Optional throttling information for the alert rule.
 * 
 */
public final class ThrottlingInformationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ThrottlingInformationArgs Empty = new ThrottlingInformationArgs();

    /**
     * The required duration (in ISO8601 format) to wait before notifying on the alert rule again. The time granularity must be in minutes and minimum value is 0 minutes
     * 
     */
    @InputImport(name="duration")
    private final @Nullable Input<String> duration;

    public Input<String> getDuration() {
        return this.duration == null ? Input.empty() : this.duration;
    }

    public ThrottlingInformationArgs(@Nullable Input<String> duration) {
        this.duration = duration;
    }

    private ThrottlingInformationArgs() {
        this.duration = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThrottlingInformationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> duration;

        public Builder() {
    	      // Empty
        }

        public Builder(ThrottlingInformationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
        }

        public Builder setDuration(@Nullable Input<String> duration) {
            this.duration = duration;
            return this;
        }

        public Builder setDuration(@Nullable String duration) {
            this.duration = Input.ofNullable(duration);
            return this;
        }

        public ThrottlingInformationArgs build() {
            return new ThrottlingInformationArgs(duration);
        }
    }
}
