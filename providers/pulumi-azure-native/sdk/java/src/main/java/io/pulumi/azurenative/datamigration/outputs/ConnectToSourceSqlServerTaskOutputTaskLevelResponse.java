// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.azurenative.datamigration.outputs.ReportableExceptionResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class ConnectToSourceSqlServerTaskOutputTaskLevelResponse {
    private final Map<String,String> agentJobs;
    private final Map<String,String> databases;
    private final String id;
    private final Map<String,String> logins;
    private final String resultType;
    private final String sourceServerBrandVersion;
    private final String sourceServerVersion;
    private final List<ReportableExceptionResponse> validationErrors;

    @OutputCustomType.Constructor({"agentJobs","databases","id","logins","resultType","sourceServerBrandVersion","sourceServerVersion","validationErrors"})
    private ConnectToSourceSqlServerTaskOutputTaskLevelResponse(
        Map<String,String> agentJobs,
        Map<String,String> databases,
        String id,
        Map<String,String> logins,
        String resultType,
        String sourceServerBrandVersion,
        String sourceServerVersion,
        List<ReportableExceptionResponse> validationErrors) {
        this.agentJobs = Objects.requireNonNull(agentJobs);
        this.databases = Objects.requireNonNull(databases);
        this.id = Objects.requireNonNull(id);
        this.logins = Objects.requireNonNull(logins);
        this.resultType = Objects.requireNonNull(resultType);
        this.sourceServerBrandVersion = Objects.requireNonNull(sourceServerBrandVersion);
        this.sourceServerVersion = Objects.requireNonNull(sourceServerVersion);
        this.validationErrors = Objects.requireNonNull(validationErrors);
    }

    public Map<String,String> getAgentJobs() {
        return this.agentJobs;
    }
    public Map<String,String> getDatabases() {
        return this.databases;
    }
    public String getId() {
        return this.id;
    }
    public Map<String,String> getLogins() {
        return this.logins;
    }
    public String getResultType() {
        return this.resultType;
    }
    public String getSourceServerBrandVersion() {
        return this.sourceServerBrandVersion;
    }
    public String getSourceServerVersion() {
        return this.sourceServerVersion;
    }
    public List<ReportableExceptionResponse> getValidationErrors() {
        return this.validationErrors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectToSourceSqlServerTaskOutputTaskLevelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> agentJobs;
        private Map<String,String> databases;
        private String id;
        private Map<String,String> logins;
        private String resultType;
        private String sourceServerBrandVersion;
        private String sourceServerVersion;
        private List<ReportableExceptionResponse> validationErrors;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectToSourceSqlServerTaskOutputTaskLevelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentJobs = defaults.agentJobs;
    	      this.databases = defaults.databases;
    	      this.id = defaults.id;
    	      this.logins = defaults.logins;
    	      this.resultType = defaults.resultType;
    	      this.sourceServerBrandVersion = defaults.sourceServerBrandVersion;
    	      this.sourceServerVersion = defaults.sourceServerVersion;
    	      this.validationErrors = defaults.validationErrors;
        }

        public Builder setAgentJobs(Map<String,String> agentJobs) {
            this.agentJobs = Objects.requireNonNull(agentJobs);
            return this;
        }

        public Builder setDatabases(Map<String,String> databases) {
            this.databases = Objects.requireNonNull(databases);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLogins(Map<String,String> logins) {
            this.logins = Objects.requireNonNull(logins);
            return this;
        }

        public Builder setResultType(String resultType) {
            this.resultType = Objects.requireNonNull(resultType);
            return this;
        }

        public Builder setSourceServerBrandVersion(String sourceServerBrandVersion) {
            this.sourceServerBrandVersion = Objects.requireNonNull(sourceServerBrandVersion);
            return this;
        }

        public Builder setSourceServerVersion(String sourceServerVersion) {
            this.sourceServerVersion = Objects.requireNonNull(sourceServerVersion);
            return this;
        }

        public Builder setValidationErrors(List<ReportableExceptionResponse> validationErrors) {
            this.validationErrors = Objects.requireNonNull(validationErrors);
            return this;
        }

        public ConnectToSourceSqlServerTaskOutputTaskLevelResponse build() {
            return new ConnectToSourceSqlServerTaskOutputTaskLevelResponse(agentJobs, databases, id, logins, resultType, sourceServerBrandVersion, sourceServerVersion, validationErrors);
        }
    }
}
