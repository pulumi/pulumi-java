// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights.outputs;

import io.pulumi.azurenative.securityinsights.outputs.SystemDataResponse;
import io.pulumi.azurenative.securityinsights.outputs.WatchlistUserInfoResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetWatchlistResult {
    private final @Nullable String contentType;
    private final @Nullable String created;
    private final @Nullable WatchlistUserInfoResponse createdBy;
    private final @Nullable String defaultDuration;
    private final @Nullable String description;
    private final String displayName;
    private final @Nullable String etag;
    private final String id;
    private final @Nullable Boolean isDeleted;
    private final String itemsSearchKey;
    private final @Nullable List<String> labels;
    private final String name;
    private final @Nullable Integer numberOfLinesToSkip;
    private final String provider;
    private final @Nullable String rawContent;
    private final String source;
    private final SystemDataResponse systemData;
    private final @Nullable String tenantId;
    private final String type;
    private final @Nullable String updated;
    private final @Nullable WatchlistUserInfoResponse updatedBy;
    private final @Nullable String uploadStatus;
    private final @Nullable String watchlistAlias;
    private final @Nullable String watchlistId;
    private final @Nullable Integer watchlistItemsCount;
    private final @Nullable String watchlistType;

    @OutputCustomType.Constructor({"contentType","created","createdBy","defaultDuration","description","displayName","etag","id","isDeleted","itemsSearchKey","labels","name","numberOfLinesToSkip","provider","rawContent","source","systemData","tenantId","type","updated","updatedBy","uploadStatus","watchlistAlias","watchlistId","watchlistItemsCount","watchlistType"})
    private GetWatchlistResult(
        @Nullable String contentType,
        @Nullable String created,
        @Nullable WatchlistUserInfoResponse createdBy,
        @Nullable String defaultDuration,
        @Nullable String description,
        String displayName,
        @Nullable String etag,
        String id,
        @Nullable Boolean isDeleted,
        String itemsSearchKey,
        @Nullable List<String> labels,
        String name,
        @Nullable Integer numberOfLinesToSkip,
        String provider,
        @Nullable String rawContent,
        String source,
        SystemDataResponse systemData,
        @Nullable String tenantId,
        String type,
        @Nullable String updated,
        @Nullable WatchlistUserInfoResponse updatedBy,
        @Nullable String uploadStatus,
        @Nullable String watchlistAlias,
        @Nullable String watchlistId,
        @Nullable Integer watchlistItemsCount,
        @Nullable String watchlistType) {
        this.contentType = contentType;
        this.created = created;
        this.createdBy = createdBy;
        this.defaultDuration = defaultDuration;
        this.description = description;
        this.displayName = Objects.requireNonNull(displayName);
        this.etag = etag;
        this.id = Objects.requireNonNull(id);
        this.isDeleted = isDeleted;
        this.itemsSearchKey = Objects.requireNonNull(itemsSearchKey);
        this.labels = labels;
        this.name = Objects.requireNonNull(name);
        this.numberOfLinesToSkip = numberOfLinesToSkip;
        this.provider = Objects.requireNonNull(provider);
        this.rawContent = rawContent;
        this.source = Objects.requireNonNull(source);
        this.systemData = Objects.requireNonNull(systemData);
        this.tenantId = tenantId;
        this.type = Objects.requireNonNull(type);
        this.updated = updated;
        this.updatedBy = updatedBy;
        this.uploadStatus = uploadStatus;
        this.watchlistAlias = watchlistAlias;
        this.watchlistId = watchlistId;
        this.watchlistItemsCount = watchlistItemsCount;
        this.watchlistType = watchlistType;
    }

    public Optional<String> getContentType() {
        return Optional.ofNullable(this.contentType);
    }
    public Optional<String> getCreated() {
        return Optional.ofNullable(this.created);
    }
    public Optional<WatchlistUserInfoResponse> getCreatedBy() {
        return Optional.ofNullable(this.createdBy);
    }
    public Optional<String> getDefaultDuration() {
        return Optional.ofNullable(this.defaultDuration);
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    public String getDisplayName() {
        return this.displayName;
    }
    public Optional<String> getEtag() {
        return Optional.ofNullable(this.etag);
    }
    public String getId() {
        return this.id;
    }
    public Optional<Boolean> getIsDeleted() {
        return Optional.ofNullable(this.isDeleted);
    }
    public String getItemsSearchKey() {
        return this.itemsSearchKey;
    }
    public List<String> getLabels() {
        return this.labels == null ? List.of() : this.labels;
    }
    public String getName() {
        return this.name;
    }
    public Optional<Integer> getNumberOfLinesToSkip() {
        return Optional.ofNullable(this.numberOfLinesToSkip);
    }
    public String getProvider() {
        return this.provider;
    }
    public Optional<String> getRawContent() {
        return Optional.ofNullable(this.rawContent);
    }
    public String getSource() {
        return this.source;
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public Optional<String> getTenantId() {
        return Optional.ofNullable(this.tenantId);
    }
    public String getType() {
        return this.type;
    }
    public Optional<String> getUpdated() {
        return Optional.ofNullable(this.updated);
    }
    public Optional<WatchlistUserInfoResponse> getUpdatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }
    public Optional<String> getUploadStatus() {
        return Optional.ofNullable(this.uploadStatus);
    }
    public Optional<String> getWatchlistAlias() {
        return Optional.ofNullable(this.watchlistAlias);
    }
    public Optional<String> getWatchlistId() {
        return Optional.ofNullable(this.watchlistId);
    }
    public Optional<Integer> getWatchlistItemsCount() {
        return Optional.ofNullable(this.watchlistItemsCount);
    }
    public Optional<String> getWatchlistType() {
        return Optional.ofNullable(this.watchlistType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWatchlistResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String contentType;
        private @Nullable String created;
        private @Nullable WatchlistUserInfoResponse createdBy;
        private @Nullable String defaultDuration;
        private @Nullable String description;
        private String displayName;
        private @Nullable String etag;
        private String id;
        private @Nullable Boolean isDeleted;
        private String itemsSearchKey;
        private @Nullable List<String> labels;
        private String name;
        private @Nullable Integer numberOfLinesToSkip;
        private String provider;
        private @Nullable String rawContent;
        private String source;
        private SystemDataResponse systemData;
        private @Nullable String tenantId;
        private String type;
        private @Nullable String updated;
        private @Nullable WatchlistUserInfoResponse updatedBy;
        private @Nullable String uploadStatus;
        private @Nullable String watchlistAlias;
        private @Nullable String watchlistId;
        private @Nullable Integer watchlistItemsCount;
        private @Nullable String watchlistType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWatchlistResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.created = defaults.created;
    	      this.createdBy = defaults.createdBy;
    	      this.defaultDuration = defaults.defaultDuration;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.isDeleted = defaults.isDeleted;
    	      this.itemsSearchKey = defaults.itemsSearchKey;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.numberOfLinesToSkip = defaults.numberOfLinesToSkip;
    	      this.provider = defaults.provider;
    	      this.rawContent = defaults.rawContent;
    	      this.source = defaults.source;
    	      this.systemData = defaults.systemData;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
    	      this.updated = defaults.updated;
    	      this.updatedBy = defaults.updatedBy;
    	      this.uploadStatus = defaults.uploadStatus;
    	      this.watchlistAlias = defaults.watchlistAlias;
    	      this.watchlistId = defaults.watchlistId;
    	      this.watchlistItemsCount = defaults.watchlistItemsCount;
    	      this.watchlistType = defaults.watchlistType;
        }

        public Builder setContentType(@Nullable String contentType) {
            this.contentType = contentType;
            return this;
        }

        public Builder setCreated(@Nullable String created) {
            this.created = created;
            return this;
        }

        public Builder setCreatedBy(@Nullable WatchlistUserInfoResponse createdBy) {
            this.createdBy = createdBy;
            return this;
        }

        public Builder setDefaultDuration(@Nullable String defaultDuration) {
            this.defaultDuration = defaultDuration;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setEtag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIsDeleted(@Nullable Boolean isDeleted) {
            this.isDeleted = isDeleted;
            return this;
        }

        public Builder setItemsSearchKey(String itemsSearchKey) {
            this.itemsSearchKey = Objects.requireNonNull(itemsSearchKey);
            return this;
        }

        public Builder setLabels(@Nullable List<String> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNumberOfLinesToSkip(@Nullable Integer numberOfLinesToSkip) {
            this.numberOfLinesToSkip = numberOfLinesToSkip;
            return this;
        }

        public Builder setProvider(String provider) {
            this.provider = Objects.requireNonNull(provider);
            return this;
        }

        public Builder setRawContent(@Nullable String rawContent) {
            this.rawContent = rawContent;
            return this;
        }

        public Builder setSource(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUpdated(@Nullable String updated) {
            this.updated = updated;
            return this;
        }

        public Builder setUpdatedBy(@Nullable WatchlistUserInfoResponse updatedBy) {
            this.updatedBy = updatedBy;
            return this;
        }

        public Builder setUploadStatus(@Nullable String uploadStatus) {
            this.uploadStatus = uploadStatus;
            return this;
        }

        public Builder setWatchlistAlias(@Nullable String watchlistAlias) {
            this.watchlistAlias = watchlistAlias;
            return this;
        }

        public Builder setWatchlistId(@Nullable String watchlistId) {
            this.watchlistId = watchlistId;
            return this;
        }

        public Builder setWatchlistItemsCount(@Nullable Integer watchlistItemsCount) {
            this.watchlistItemsCount = watchlistItemsCount;
            return this;
        }

        public Builder setWatchlistType(@Nullable String watchlistType) {
            this.watchlistType = watchlistType;
            return this;
        }

        public GetWatchlistResult build() {
            return new GetWatchlistResult(contentType, created, createdBy, defaultDuration, description, displayName, etag, id, isDeleted, itemsSearchKey, labels, name, numberOfLinesToSkip, provider, rawContent, source, systemData, tenantId, type, updated, updatedBy, uploadStatus, watchlistAlias, watchlistId, watchlistItemsCount, watchlistType);
        }
    }
}
