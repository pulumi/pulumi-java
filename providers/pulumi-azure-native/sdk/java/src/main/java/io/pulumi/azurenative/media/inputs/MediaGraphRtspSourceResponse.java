// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.azurenative.media.inputs.MediaGraphClearEndpointResponse;
import io.pulumi.azurenative.media.inputs.MediaGraphTlsEndpointResponse;
import io.pulumi.core.Either;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * RTSP source.
 * 
 */
public final class MediaGraphRtspSourceResponse extends io.pulumi.resources.InvokeArgs {

    public static final MediaGraphRtspSourceResponse Empty = new MediaGraphRtspSourceResponse();

    /**
     * RTSP endpoint of the stream being connected to.
     * 
     */
    @InputImport(name="endpoint", required=true)
      private final Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> endpoint;

    public Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> getEndpoint() {
        return this.endpoint;
    }

    /**
     * Source name.
     * 
     */
    @InputImport(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * The discriminator for derived types.
     * Expected value is '#Microsoft.Media.MediaGraphRtspSource'.
     * 
     */
    @InputImport(name="odataType", required=true)
      private final String odataType;

    public String getOdataType() {
        return this.odataType;
    }

    /**
     * Underlying RTSP transport. This can be used to enable or disable HTTP tunneling.
     * 
     */
    @InputImport(name="transport", required=true)
      private final String transport;

    public String getTransport() {
        return this.transport;
    }

    public MediaGraphRtspSourceResponse(
        Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> endpoint,
        String name,
        String odataType,
        String transport) {
        this.endpoint = Objects.requireNonNull(endpoint, "expected parameter 'endpoint' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.odataType = Objects.requireNonNull(odataType, "expected parameter 'odataType' to be non-null");
        this.transport = Objects.requireNonNull(transport, "expected parameter 'transport' to be non-null");
    }

    private MediaGraphRtspSourceResponse() {
        this.endpoint = null;
        this.name = null;
        this.odataType = null;
        this.transport = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MediaGraphRtspSourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> endpoint;
        private String name;
        private String odataType;
        private String transport;

        public Builder() {
    	      // Empty
        }

        public Builder(MediaGraphRtspSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpoint = defaults.endpoint;
    	      this.name = defaults.name;
    	      this.odataType = defaults.odataType;
    	      this.transport = defaults.transport;
        }

        public Builder setEndpoint(Either<MediaGraphClearEndpointResponse,MediaGraphTlsEndpointResponse> endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOdataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder setTransport(String transport) {
            this.transport = Objects.requireNonNull(transport);
            return this;
        }
        public MediaGraphRtspSourceResponse build() {
            return new MediaGraphRtspSourceResponse(endpoint, name, odataType, transport);
        }
    }
}
