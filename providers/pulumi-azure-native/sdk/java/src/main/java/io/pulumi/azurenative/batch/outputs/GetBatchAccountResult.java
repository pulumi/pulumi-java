// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.outputs;

import io.pulumi.azurenative.batch.outputs.AutoStoragePropertiesResponse;
import io.pulumi.azurenative.batch.outputs.BatchAccountIdentityResponse;
import io.pulumi.azurenative.batch.outputs.EncryptionPropertiesResponse;
import io.pulumi.azurenative.batch.outputs.KeyVaultReferenceResponse;
import io.pulumi.azurenative.batch.outputs.PrivateEndpointConnectionResponse;
import io.pulumi.azurenative.batch.outputs.VirtualMachineFamilyCoreQuotaResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBatchAccountResult {
    /**
     * The account endpoint used to interact with the Batch service.
     * 
     */
    private final String accountEndpoint;
    private final Integer activeJobAndJobScheduleQuota;
    /**
     * Contains information about the auto-storage account associated with a Batch account.
     * 
     */
    private final AutoStoragePropertiesResponse autoStorage;
    /**
     * For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
     * 
     */
    private final Integer dedicatedCoreQuota;
    /**
     * A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
     * 
     */
    private final List<VirtualMachineFamilyCoreQuotaResponse> dedicatedCoreQuotaPerVMFamily;
    /**
     * Batch is transitioning its core quota system for dedicated cores to be enforced per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply.
     * 
     */
    private final Boolean dedicatedCoreQuotaPerVMFamilyEnforced;
    /**
     * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
     * 
     */
    private final EncryptionPropertiesResponse encryption;
    /**
     * The ID of the resource.
     * 
     */
    private final String id;
    /**
     * The identity of the Batch account.
     * 
     */
    private final @Nullable BatchAccountIdentityResponse identity;
    /**
     * Identifies the Azure key vault associated with a Batch account.
     * 
     */
    private final KeyVaultReferenceResponse keyVaultReference;
    /**
     * The location of the resource.
     * 
     */
    private final String location;
    /**
     * For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
     * 
     */
    private final Integer lowPriorityCoreQuota;
    /**
     * The name of the resource.
     * 
     */
    private final String name;
    /**
     * The allocation mode for creating pools in the Batch account.
     * 
     */
    private final String poolAllocationMode;
    private final Integer poolQuota;
    /**
     * List of private endpoint connections associated with the Batch account
     * 
     */
    private final List<PrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * The provisioned state of the resource
     * 
     */
    private final String provisioningState;
    /**
     * If not specified, the default value is 'enabled'.
     * 
     */
    private final String publicNetworkAccess;
    /**
     * The tags of the resource.
     * 
     */
    private final Map<String,String> tags;
    /**
     * The type of the resource.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetBatchAccountResult(
        @CustomType.Parameter("accountEndpoint") String accountEndpoint,
        @CustomType.Parameter("activeJobAndJobScheduleQuota") Integer activeJobAndJobScheduleQuota,
        @CustomType.Parameter("autoStorage") AutoStoragePropertiesResponse autoStorage,
        @CustomType.Parameter("dedicatedCoreQuota") Integer dedicatedCoreQuota,
        @CustomType.Parameter("dedicatedCoreQuotaPerVMFamily") List<VirtualMachineFamilyCoreQuotaResponse> dedicatedCoreQuotaPerVMFamily,
        @CustomType.Parameter("dedicatedCoreQuotaPerVMFamilyEnforced") Boolean dedicatedCoreQuotaPerVMFamilyEnforced,
        @CustomType.Parameter("encryption") EncryptionPropertiesResponse encryption,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identity") @Nullable BatchAccountIdentityResponse identity,
        @CustomType.Parameter("keyVaultReference") KeyVaultReferenceResponse keyVaultReference,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("lowPriorityCoreQuota") Integer lowPriorityCoreQuota,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("poolAllocationMode") String poolAllocationMode,
        @CustomType.Parameter("poolQuota") Integer poolQuota,
        @CustomType.Parameter("privateEndpointConnections") List<PrivateEndpointConnectionResponse> privateEndpointConnections,
        @CustomType.Parameter("provisioningState") String provisioningState,
        @CustomType.Parameter("publicNetworkAccess") String publicNetworkAccess,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.accountEndpoint = accountEndpoint;
        this.activeJobAndJobScheduleQuota = activeJobAndJobScheduleQuota;
        this.autoStorage = autoStorage;
        this.dedicatedCoreQuota = dedicatedCoreQuota;
        this.dedicatedCoreQuotaPerVMFamily = dedicatedCoreQuotaPerVMFamily;
        this.dedicatedCoreQuotaPerVMFamilyEnforced = dedicatedCoreQuotaPerVMFamilyEnforced;
        this.encryption = encryption;
        this.id = id;
        this.identity = identity;
        this.keyVaultReference = keyVaultReference;
        this.location = location;
        this.lowPriorityCoreQuota = lowPriorityCoreQuota;
        this.name = name;
        this.poolAllocationMode = poolAllocationMode;
        this.poolQuota = poolQuota;
        this.privateEndpointConnections = privateEndpointConnections;
        this.provisioningState = provisioningState;
        this.publicNetworkAccess = publicNetworkAccess;
        this.tags = tags;
        this.type = type;
    }

    /**
     * The account endpoint used to interact with the Batch service.
     * 
    */
    public String getAccountEndpoint() {
        return this.accountEndpoint;
    }
    public Integer getActiveJobAndJobScheduleQuota() {
        return this.activeJobAndJobScheduleQuota;
    }
    /**
     * Contains information about the auto-storage account associated with a Batch account.
     * 
    */
    public AutoStoragePropertiesResponse getAutoStorage() {
        return this.autoStorage;
    }
    /**
     * For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
     * 
    */
    public Integer getDedicatedCoreQuota() {
        return this.dedicatedCoreQuota;
    }
    /**
     * A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
     * 
    */
    public List<VirtualMachineFamilyCoreQuotaResponse> getDedicatedCoreQuotaPerVMFamily() {
        return this.dedicatedCoreQuotaPerVMFamily;
    }
    /**
     * Batch is transitioning its core quota system for dedicated cores to be enforced per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply.
     * 
    */
    public Boolean getDedicatedCoreQuotaPerVMFamilyEnforced() {
        return this.dedicatedCoreQuotaPerVMFamilyEnforced;
    }
    /**
     * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
     * 
    */
    public EncryptionPropertiesResponse getEncryption() {
        return this.encryption;
    }
    /**
     * The ID of the resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * The identity of the Batch account.
     * 
    */
    public Optional<BatchAccountIdentityResponse> getIdentity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * Identifies the Azure key vault associated with a Batch account.
     * 
    */
    public KeyVaultReferenceResponse getKeyVaultReference() {
        return this.keyVaultReference;
    }
    /**
     * The location of the resource.
     * 
    */
    public String getLocation() {
        return this.location;
    }
    /**
     * For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.
     * 
    */
    public Integer getLowPriorityCoreQuota() {
        return this.lowPriorityCoreQuota;
    }
    /**
     * The name of the resource.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The allocation mode for creating pools in the Batch account.
     * 
    */
    public String getPoolAllocationMode() {
        return this.poolAllocationMode;
    }
    public Integer getPoolQuota() {
        return this.poolQuota;
    }
    /**
     * List of private endpoint connections associated with the Batch account
     * 
    */
    public List<PrivateEndpointConnectionResponse> getPrivateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * The provisioned state of the resource
     * 
    */
    public String getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * If not specified, the default value is 'enabled'.
     * 
    */
    public String getPublicNetworkAccess() {
        return this.publicNetworkAccess;
    }
    /**
     * The tags of the resource.
     * 
    */
    public Map<String,String> getTags() {
        return this.tags;
    }
    /**
     * The type of the resource.
     * 
    */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBatchAccountResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accountEndpoint;
        private Integer activeJobAndJobScheduleQuota;
        private AutoStoragePropertiesResponse autoStorage;
        private Integer dedicatedCoreQuota;
        private List<VirtualMachineFamilyCoreQuotaResponse> dedicatedCoreQuotaPerVMFamily;
        private Boolean dedicatedCoreQuotaPerVMFamilyEnforced;
        private EncryptionPropertiesResponse encryption;
        private String id;
        private @Nullable BatchAccountIdentityResponse identity;
        private KeyVaultReferenceResponse keyVaultReference;
        private String location;
        private Integer lowPriorityCoreQuota;
        private String name;
        private String poolAllocationMode;
        private Integer poolQuota;
        private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private String provisioningState;
        private String publicNetworkAccess;
        private Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBatchAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountEndpoint = defaults.accountEndpoint;
    	      this.activeJobAndJobScheduleQuota = defaults.activeJobAndJobScheduleQuota;
    	      this.autoStorage = defaults.autoStorage;
    	      this.dedicatedCoreQuota = defaults.dedicatedCoreQuota;
    	      this.dedicatedCoreQuotaPerVMFamily = defaults.dedicatedCoreQuotaPerVMFamily;
    	      this.dedicatedCoreQuotaPerVMFamilyEnforced = defaults.dedicatedCoreQuotaPerVMFamilyEnforced;
    	      this.encryption = defaults.encryption;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.keyVaultReference = defaults.keyVaultReference;
    	      this.location = defaults.location;
    	      this.lowPriorityCoreQuota = defaults.lowPriorityCoreQuota;
    	      this.name = defaults.name;
    	      this.poolAllocationMode = defaults.poolAllocationMode;
    	      this.poolQuota = defaults.poolQuota;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder accountEndpoint(String accountEndpoint) {
            this.accountEndpoint = Objects.requireNonNull(accountEndpoint);
            return this;
        }

        public Builder activeJobAndJobScheduleQuota(Integer activeJobAndJobScheduleQuota) {
            this.activeJobAndJobScheduleQuota = Objects.requireNonNull(activeJobAndJobScheduleQuota);
            return this;
        }

        public Builder autoStorage(AutoStoragePropertiesResponse autoStorage) {
            this.autoStorage = Objects.requireNonNull(autoStorage);
            return this;
        }

        public Builder dedicatedCoreQuota(Integer dedicatedCoreQuota) {
            this.dedicatedCoreQuota = Objects.requireNonNull(dedicatedCoreQuota);
            return this;
        }

        public Builder dedicatedCoreQuotaPerVMFamily(List<VirtualMachineFamilyCoreQuotaResponse> dedicatedCoreQuotaPerVMFamily) {
            this.dedicatedCoreQuotaPerVMFamily = Objects.requireNonNull(dedicatedCoreQuotaPerVMFamily);
            return this;
        }

        public Builder dedicatedCoreQuotaPerVMFamilyEnforced(Boolean dedicatedCoreQuotaPerVMFamilyEnforced) {
            this.dedicatedCoreQuotaPerVMFamilyEnforced = Objects.requireNonNull(dedicatedCoreQuotaPerVMFamilyEnforced);
            return this;
        }

        public Builder encryption(EncryptionPropertiesResponse encryption) {
            this.encryption = Objects.requireNonNull(encryption);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder identity(@Nullable BatchAccountIdentityResponse identity) {
            this.identity = identity;
            return this;
        }

        public Builder keyVaultReference(KeyVaultReferenceResponse keyVaultReference) {
            this.keyVaultReference = Objects.requireNonNull(keyVaultReference);
            return this;
        }

        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder lowPriorityCoreQuota(Integer lowPriorityCoreQuota) {
            this.lowPriorityCoreQuota = Objects.requireNonNull(lowPriorityCoreQuota);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder poolAllocationMode(String poolAllocationMode) {
            this.poolAllocationMode = Objects.requireNonNull(poolAllocationMode);
            return this;
        }

        public Builder poolQuota(Integer poolQuota) {
            this.poolQuota = Objects.requireNonNull(poolQuota);
            return this;
        }

        public Builder privateEndpointConnections(List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }

        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder publicNetworkAccess(String publicNetworkAccess) {
            this.publicNetworkAccess = Objects.requireNonNull(publicNetworkAccess);
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetBatchAccountResult build() {
            return new GetBatchAccountResult(accountEndpoint, activeJobAndJobScheduleQuota, autoStorage, dedicatedCoreQuota, dedicatedCoreQuotaPerVMFamily, dedicatedCoreQuotaPerVMFamilyEnforced, encryption, id, identity, keyVaultReference, location, lowPriorityCoreQuota, name, poolAllocationMode, poolQuota, privateEndpointConnections, provisioningState, publicNetworkAccess, tags, type);
        }
    }
}
