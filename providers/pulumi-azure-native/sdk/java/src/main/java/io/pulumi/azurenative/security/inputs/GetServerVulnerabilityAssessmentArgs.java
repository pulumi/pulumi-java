// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class GetServerVulnerabilityAssessmentArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetServerVulnerabilityAssessmentArgs Empty = new GetServerVulnerabilityAssessmentArgs();

    @InputImport(name="resourceGroupName", required=true)
    private final String resourceGroupName;

    public String getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="resourceName", required=true)
    private final String resourceName;

    public String getPropResourceName() {
        return this.resourceName;
    }

    @InputImport(name="resourceNamespace", required=true)
    private final String resourceNamespace;

    public String getResourceNamespace() {
        return this.resourceNamespace;
    }

    @InputImport(name="resourceType", required=true)
    private final String resourceType;

    public String getPropResourceType() {
        return this.resourceType;
    }

    @InputImport(name="serverVulnerabilityAssessment", required=true)
    private final String serverVulnerabilityAssessment;

    public String getServerVulnerabilityAssessment() {
        return this.serverVulnerabilityAssessment;
    }

    public GetServerVulnerabilityAssessmentArgs(
        String resourceGroupName,
        String resourceName,
        String resourceNamespace,
        String resourceType,
        String serverVulnerabilityAssessment) {
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = Objects.requireNonNull(resourceName, "expected parameter 'resourceName' to be non-null");
        this.resourceNamespace = Objects.requireNonNull(resourceNamespace, "expected parameter 'resourceNamespace' to be non-null");
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
        this.serverVulnerabilityAssessment = Objects.requireNonNull(serverVulnerabilityAssessment, "expected parameter 'serverVulnerabilityAssessment' to be non-null");
    }

    private GetServerVulnerabilityAssessmentArgs() {
        this.resourceGroupName = null;
        this.resourceName = null;
        this.resourceNamespace = null;
        this.resourceType = null;
        this.serverVulnerabilityAssessment = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerVulnerabilityAssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String resourceGroupName;
        private String resourceName;
        private String resourceNamespace;
        private String resourceType;
        private String serverVulnerabilityAssessment;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServerVulnerabilityAssessmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceNamespace = defaults.resourceNamespace;
    	      this.resourceType = defaults.resourceType;
    	      this.serverVulnerabilityAssessment = defaults.serverVulnerabilityAssessment;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceName(String resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }

        public Builder setResourceNamespace(String resourceNamespace) {
            this.resourceNamespace = Objects.requireNonNull(resourceNamespace);
            return this;
        }

        public Builder setResourceType(String resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }

        public Builder setServerVulnerabilityAssessment(String serverVulnerabilityAssessment) {
            this.serverVulnerabilityAssessment = Objects.requireNonNull(serverVulnerabilityAssessment);
            return this;
        }

        public GetServerVulnerabilityAssessmentArgs build() {
            return new GetServerVulnerabilityAssessmentArgs(resourceGroupName, resourceName, resourceNamespace, resourceType, serverVulnerabilityAssessment);
        }
    }
}
