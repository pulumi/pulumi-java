// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.logic.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;


public final class AS2ErrorSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final AS2ErrorSettingsArgs Empty = new AS2ErrorSettingsArgs();

    @InputImport(name="resendIfMDNNotReceived", required=true)
    private final Input<Boolean> resendIfMDNNotReceived;

    public Input<Boolean> getResendIfMDNNotReceived() {
        return this.resendIfMDNNotReceived;
    }

    @InputImport(name="suspendDuplicateMessage", required=true)
    private final Input<Boolean> suspendDuplicateMessage;

    public Input<Boolean> getSuspendDuplicateMessage() {
        return this.suspendDuplicateMessage;
    }

    public AS2ErrorSettingsArgs(
        Input<Boolean> resendIfMDNNotReceived,
        Input<Boolean> suspendDuplicateMessage) {
        this.resendIfMDNNotReceived = Objects.requireNonNull(resendIfMDNNotReceived, "expected parameter 'resendIfMDNNotReceived' to be non-null");
        this.suspendDuplicateMessage = Objects.requireNonNull(suspendDuplicateMessage, "expected parameter 'suspendDuplicateMessage' to be non-null");
    }

    private AS2ErrorSettingsArgs() {
        this.resendIfMDNNotReceived = Input.empty();
        this.suspendDuplicateMessage = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AS2ErrorSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Boolean> resendIfMDNNotReceived;
        private Input<Boolean> suspendDuplicateMessage;

        public Builder() {
    	      // Empty
        }

        public Builder(AS2ErrorSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resendIfMDNNotReceived = defaults.resendIfMDNNotReceived;
    	      this.suspendDuplicateMessage = defaults.suspendDuplicateMessage;
        }

        public Builder setResendIfMDNNotReceived(Input<Boolean> resendIfMDNNotReceived) {
            this.resendIfMDNNotReceived = Objects.requireNonNull(resendIfMDNNotReceived);
            return this;
        }

        public Builder setResendIfMDNNotReceived(Boolean resendIfMDNNotReceived) {
            this.resendIfMDNNotReceived = Input.of(Objects.requireNonNull(resendIfMDNNotReceived));
            return this;
        }

        public Builder setSuspendDuplicateMessage(Input<Boolean> suspendDuplicateMessage) {
            this.suspendDuplicateMessage = Objects.requireNonNull(suspendDuplicateMessage);
            return this;
        }

        public Builder setSuspendDuplicateMessage(Boolean suspendDuplicateMessage) {
            this.suspendDuplicateMessage = Input.of(Objects.requireNonNull(suspendDuplicateMessage));
            return this;
        }

        public AS2ErrorSettingsArgs build() {
            return new AS2ErrorSettingsArgs(resendIfMDNNotReceived, suspendDuplicateMessage);
        }
    }
}
