// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media;

import io.pulumi.azurenative.media.inputs.StreamingLocatorContentKeyArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StreamingLocatorArgs extends io.pulumi.resources.ResourceArgs {

    public static final StreamingLocatorArgs Empty = new StreamingLocatorArgs();

    /**
     * The Media Services account name.
     * 
     */
    @InputImport(name="accountName", required=true)
    private final Input<String> accountName;

    public Input<String> getAccountName() {
        return this.accountName;
    }

    /**
     * Alternative Media ID of this Streaming Locator
     * 
     */
    @InputImport(name="alternativeMediaId")
    private final @Nullable Input<String> alternativeMediaId;

    public Input<String> getAlternativeMediaId() {
        return this.alternativeMediaId == null ? Input.empty() : this.alternativeMediaId;
    }

    /**
     * Asset Name
     * 
     */
    @InputImport(name="assetName", required=true)
    private final Input<String> assetName;

    public Input<String> getAssetName() {
        return this.assetName;
    }

    /**
     * The ContentKeys used by this Streaming Locator.
     * 
     */
    @InputImport(name="contentKeys")
    private final @Nullable Input<List<StreamingLocatorContentKeyArgs>> contentKeys;

    public Input<List<StreamingLocatorContentKeyArgs>> getContentKeys() {
        return this.contentKeys == null ? Input.empty() : this.contentKeys;
    }

    /**
     * Name of the default ContentKeyPolicy used by this Streaming Locator.
     * 
     */
    @InputImport(name="defaultContentKeyPolicyName")
    private final @Nullable Input<String> defaultContentKeyPolicyName;

    public Input<String> getDefaultContentKeyPolicyName() {
        return this.defaultContentKeyPolicyName == null ? Input.empty() : this.defaultContentKeyPolicyName;
    }

    /**
     * The end time of the Streaming Locator.
     * 
     */
    @InputImport(name="endTime")
    private final @Nullable Input<String> endTime;

    public Input<String> getEndTime() {
        return this.endTime == null ? Input.empty() : this.endTime;
    }

    /**
     * A list of asset or account filters which apply to this streaming locator
     * 
     */
    @InputImport(name="filters")
    private final @Nullable Input<List<String>> filters;

    public Input<List<String>> getFilters() {
        return this.filters == null ? Input.empty() : this.filters;
    }

    /**
     * The name of the resource group within the Azure subscription.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The start time of the Streaming Locator.
     * 
     */
    @InputImport(name="startTime")
    private final @Nullable Input<String> startTime;

    public Input<String> getStartTime() {
        return this.startTime == null ? Input.empty() : this.startTime;
    }

    /**
     * The StreamingLocatorId of the Streaming Locator.
     * 
     */
    @InputImport(name="streamingLocatorId")
    private final @Nullable Input<String> streamingLocatorId;

    public Input<String> getStreamingLocatorId() {
        return this.streamingLocatorId == null ? Input.empty() : this.streamingLocatorId;
    }

    /**
     * The Streaming Locator name.
     * 
     */
    @InputImport(name="streamingLocatorName")
    private final @Nullable Input<String> streamingLocatorName;

    public Input<String> getStreamingLocatorName() {
        return this.streamingLocatorName == null ? Input.empty() : this.streamingLocatorName;
    }

    /**
     * Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'
     * 
     */
    @InputImport(name="streamingPolicyName", required=true)
    private final Input<String> streamingPolicyName;

    public Input<String> getStreamingPolicyName() {
        return this.streamingPolicyName;
    }

    public StreamingLocatorArgs(
        Input<String> accountName,
        @Nullable Input<String> alternativeMediaId,
        Input<String> assetName,
        @Nullable Input<List<StreamingLocatorContentKeyArgs>> contentKeys,
        @Nullable Input<String> defaultContentKeyPolicyName,
        @Nullable Input<String> endTime,
        @Nullable Input<List<String>> filters,
        Input<String> resourceGroupName,
        @Nullable Input<String> startTime,
        @Nullable Input<String> streamingLocatorId,
        @Nullable Input<String> streamingLocatorName,
        Input<String> streamingPolicyName) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.alternativeMediaId = alternativeMediaId;
        this.assetName = Objects.requireNonNull(assetName, "expected parameter 'assetName' to be non-null");
        this.contentKeys = contentKeys;
        this.defaultContentKeyPolicyName = defaultContentKeyPolicyName;
        this.endTime = endTime;
        this.filters = filters;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.startTime = startTime;
        this.streamingLocatorId = streamingLocatorId;
        this.streamingLocatorName = streamingLocatorName;
        this.streamingPolicyName = Objects.requireNonNull(streamingPolicyName, "expected parameter 'streamingPolicyName' to be non-null");
    }

    private StreamingLocatorArgs() {
        this.accountName = Input.empty();
        this.alternativeMediaId = Input.empty();
        this.assetName = Input.empty();
        this.contentKeys = Input.empty();
        this.defaultContentKeyPolicyName = Input.empty();
        this.endTime = Input.empty();
        this.filters = Input.empty();
        this.resourceGroupName = Input.empty();
        this.startTime = Input.empty();
        this.streamingLocatorId = Input.empty();
        this.streamingLocatorName = Input.empty();
        this.streamingPolicyName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingLocatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountName;
        private @Nullable Input<String> alternativeMediaId;
        private Input<String> assetName;
        private @Nullable Input<List<StreamingLocatorContentKeyArgs>> contentKeys;
        private @Nullable Input<String> defaultContentKeyPolicyName;
        private @Nullable Input<String> endTime;
        private @Nullable Input<List<String>> filters;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> startTime;
        private @Nullable Input<String> streamingLocatorId;
        private @Nullable Input<String> streamingLocatorName;
        private Input<String> streamingPolicyName;

        public Builder() {
    	      // Empty
        }

        public Builder(StreamingLocatorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.alternativeMediaId = defaults.alternativeMediaId;
    	      this.assetName = defaults.assetName;
    	      this.contentKeys = defaults.contentKeys;
    	      this.defaultContentKeyPolicyName = defaults.defaultContentKeyPolicyName;
    	      this.endTime = defaults.endTime;
    	      this.filters = defaults.filters;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.startTime = defaults.startTime;
    	      this.streamingLocatorId = defaults.streamingLocatorId;
    	      this.streamingLocatorName = defaults.streamingLocatorName;
    	      this.streamingPolicyName = defaults.streamingPolicyName;
        }

        public Builder setAccountName(Input<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder setAccountName(String accountName) {
            this.accountName = Input.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder setAlternativeMediaId(@Nullable Input<String> alternativeMediaId) {
            this.alternativeMediaId = alternativeMediaId;
            return this;
        }

        public Builder setAlternativeMediaId(@Nullable String alternativeMediaId) {
            this.alternativeMediaId = Input.ofNullable(alternativeMediaId);
            return this;
        }

        public Builder setAssetName(Input<String> assetName) {
            this.assetName = Objects.requireNonNull(assetName);
            return this;
        }

        public Builder setAssetName(String assetName) {
            this.assetName = Input.of(Objects.requireNonNull(assetName));
            return this;
        }

        public Builder setContentKeys(@Nullable Input<List<StreamingLocatorContentKeyArgs>> contentKeys) {
            this.contentKeys = contentKeys;
            return this;
        }

        public Builder setContentKeys(@Nullable List<StreamingLocatorContentKeyArgs> contentKeys) {
            this.contentKeys = Input.ofNullable(contentKeys);
            return this;
        }

        public Builder setDefaultContentKeyPolicyName(@Nullable Input<String> defaultContentKeyPolicyName) {
            this.defaultContentKeyPolicyName = defaultContentKeyPolicyName;
            return this;
        }

        public Builder setDefaultContentKeyPolicyName(@Nullable String defaultContentKeyPolicyName) {
            this.defaultContentKeyPolicyName = Input.ofNullable(defaultContentKeyPolicyName);
            return this;
        }

        public Builder setEndTime(@Nullable Input<String> endTime) {
            this.endTime = endTime;
            return this;
        }

        public Builder setEndTime(@Nullable String endTime) {
            this.endTime = Input.ofNullable(endTime);
            return this;
        }

        public Builder setFilters(@Nullable Input<List<String>> filters) {
            this.filters = filters;
            return this;
        }

        public Builder setFilters(@Nullable List<String> filters) {
            this.filters = Input.ofNullable(filters);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setStartTime(@Nullable Input<String> startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = Input.ofNullable(startTime);
            return this;
        }

        public Builder setStreamingLocatorId(@Nullable Input<String> streamingLocatorId) {
            this.streamingLocatorId = streamingLocatorId;
            return this;
        }

        public Builder setStreamingLocatorId(@Nullable String streamingLocatorId) {
            this.streamingLocatorId = Input.ofNullable(streamingLocatorId);
            return this;
        }

        public Builder setStreamingLocatorName(@Nullable Input<String> streamingLocatorName) {
            this.streamingLocatorName = streamingLocatorName;
            return this;
        }

        public Builder setStreamingLocatorName(@Nullable String streamingLocatorName) {
            this.streamingLocatorName = Input.ofNullable(streamingLocatorName);
            return this;
        }

        public Builder setStreamingPolicyName(Input<String> streamingPolicyName) {
            this.streamingPolicyName = Objects.requireNonNull(streamingPolicyName);
            return this;
        }

        public Builder setStreamingPolicyName(String streamingPolicyName) {
            this.streamingPolicyName = Input.of(Objects.requireNonNull(streamingPolicyName));
            return this;
        }

        public StreamingLocatorArgs build() {
            return new StreamingLocatorArgs(accountName, alternativeMediaId, assetName, contentKeys, defaultContentKeyPolicyName, endTime, filters, resourceGroupName, startTime, streamingLocatorId, streamingLocatorName, streamingPolicyName);
        }
    }
}
