// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.outputs;

import io.pulumi.azurenative.batch.outputs.DeleteCertificateErrorResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetCertificateResult {
    private final DeleteCertificateErrorResponse deleteCertificateError;
    private final String etag;
    private final @Nullable String format;
    private final String id;
    private final String name;
    private final String previousProvisioningState;
    private final String previousProvisioningStateTransitionTime;
    private final String provisioningState;
    private final String provisioningStateTransitionTime;
    private final String publicData;
    private final @Nullable String thumbprint;
    private final @Nullable String thumbprintAlgorithm;
    private final String type;

    @OutputCustomType.Constructor({"deleteCertificateError","etag","format","id","name","previousProvisioningState","previousProvisioningStateTransitionTime","provisioningState","provisioningStateTransitionTime","publicData","thumbprint","thumbprintAlgorithm","type"})
    private GetCertificateResult(
        DeleteCertificateErrorResponse deleteCertificateError,
        String etag,
        @Nullable String format,
        String id,
        String name,
        String previousProvisioningState,
        String previousProvisioningStateTransitionTime,
        String provisioningState,
        String provisioningStateTransitionTime,
        String publicData,
        @Nullable String thumbprint,
        @Nullable String thumbprintAlgorithm,
        String type) {
        this.deleteCertificateError = Objects.requireNonNull(deleteCertificateError);
        this.etag = Objects.requireNonNull(etag);
        this.format = format;
        this.id = Objects.requireNonNull(id);
        this.name = Objects.requireNonNull(name);
        this.previousProvisioningState = Objects.requireNonNull(previousProvisioningState);
        this.previousProvisioningStateTransitionTime = Objects.requireNonNull(previousProvisioningStateTransitionTime);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.provisioningStateTransitionTime = Objects.requireNonNull(provisioningStateTransitionTime);
        this.publicData = Objects.requireNonNull(publicData);
        this.thumbprint = thumbprint;
        this.thumbprintAlgorithm = thumbprintAlgorithm;
        this.type = Objects.requireNonNull(type);
    }

    public DeleteCertificateErrorResponse getDeleteCertificateError() {
        return this.deleteCertificateError;
    }
    public String getEtag() {
        return this.etag;
    }
    public Optional<String> getFormat() {
        return Optional.ofNullable(this.format);
    }
    public String getId() {
        return this.id;
    }
    public String getName() {
        return this.name;
    }
    public String getPreviousProvisioningState() {
        return this.previousProvisioningState;
    }
    public String getPreviousProvisioningStateTransitionTime() {
        return this.previousProvisioningStateTransitionTime;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public String getProvisioningStateTransitionTime() {
        return this.provisioningStateTransitionTime;
    }
    public String getPublicData() {
        return this.publicData;
    }
    public Optional<String> getThumbprint() {
        return Optional.ofNullable(this.thumbprint);
    }
    public Optional<String> getThumbprintAlgorithm() {
        return Optional.ofNullable(this.thumbprintAlgorithm);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeleteCertificateErrorResponse deleteCertificateError;
        private String etag;
        private @Nullable String format;
        private String id;
        private String name;
        private String previousProvisioningState;
        private String previousProvisioningStateTransitionTime;
        private String provisioningState;
        private String provisioningStateTransitionTime;
        private String publicData;
        private @Nullable String thumbprint;
        private @Nullable String thumbprintAlgorithm;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteCertificateError = defaults.deleteCertificateError;
    	      this.etag = defaults.etag;
    	      this.format = defaults.format;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.previousProvisioningState = defaults.previousProvisioningState;
    	      this.previousProvisioningStateTransitionTime = defaults.previousProvisioningStateTransitionTime;
    	      this.provisioningState = defaults.provisioningState;
    	      this.provisioningStateTransitionTime = defaults.provisioningStateTransitionTime;
    	      this.publicData = defaults.publicData;
    	      this.thumbprint = defaults.thumbprint;
    	      this.thumbprintAlgorithm = defaults.thumbprintAlgorithm;
    	      this.type = defaults.type;
        }

        public Builder setDeleteCertificateError(DeleteCertificateErrorResponse deleteCertificateError) {
            this.deleteCertificateError = Objects.requireNonNull(deleteCertificateError);
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setFormat(@Nullable String format) {
            this.format = format;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPreviousProvisioningState(String previousProvisioningState) {
            this.previousProvisioningState = Objects.requireNonNull(previousProvisioningState);
            return this;
        }

        public Builder setPreviousProvisioningStateTransitionTime(String previousProvisioningStateTransitionTime) {
            this.previousProvisioningStateTransitionTime = Objects.requireNonNull(previousProvisioningStateTransitionTime);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setProvisioningStateTransitionTime(String provisioningStateTransitionTime) {
            this.provisioningStateTransitionTime = Objects.requireNonNull(provisioningStateTransitionTime);
            return this;
        }

        public Builder setPublicData(String publicData) {
            this.publicData = Objects.requireNonNull(publicData);
            return this;
        }

        public Builder setThumbprint(@Nullable String thumbprint) {
            this.thumbprint = thumbprint;
            return this;
        }

        public Builder setThumbprintAlgorithm(@Nullable String thumbprintAlgorithm) {
            this.thumbprintAlgorithm = thumbprintAlgorithm;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetCertificateResult build() {
            return new GetCertificateResult(deleteCertificateError, etag, format, id, name, previousProvisioningState, previousProvisioningStateTransitionTime, provisioningState, provisioningStateTransitionTime, publicData, thumbprint, thumbprintAlgorithm, type);
        }
    }
}
