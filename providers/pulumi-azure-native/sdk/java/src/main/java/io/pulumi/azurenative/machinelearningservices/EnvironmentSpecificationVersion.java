// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.machinelearningservices.EnvironmentSpecificationVersionArgs;
import io.pulumi.azurenative.machinelearningservices.outputs.EnvironmentSpecificationVersionResponse;
import io.pulumi.azurenative.machinelearningservices.outputs.SystemDataResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Azure Resource Manager resource envelope.
 * API Version: 2021-03-01-preview.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### CreateOrUpdate Environment Specification Version.
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var environmentSpecificationVersion = new AzureNative.MachineLearningServices.EnvironmentSpecificationVersion("environmentSpecificationVersion", new AzureNative.MachineLearningServices.EnvironmentSpecificationVersionArgs
 *         {
 *             Name = "testEnvironment",
 *             Properties = new AzureNative.MachineLearningServices.Inputs.EnvironmentSpecificationVersionArgs
 *             {
 *                 CondaFile = @"channels:
 * - defaults
 * dependencies:
 * - python=3.7.7
 * name: my-env",
 *                 Description = "string",
 *                 Docker = new AzureNative.MachineLearningServices.Inputs.DockerBuildArgs
 *                 {
 *                     DockerSpecificationType = "Build",
 *                     Dockerfile = "FROM myimage",
 *                 },
 *                 Properties = 
 *                 {
 *                     { "additionalProp1", "string" },
 *                     { "additionalProp2", "string" },
 *                     { "additionalProp3", "string" },
 *                 },
 *                 Tags = 
 *                 {
 *                     { "additionalProp1", "string" },
 *                     { "additionalProp2", "string" },
 *                     { "additionalProp3", "string" },
 *                 },
 *             },
 *             ResourceGroupName = "testrg123",
 *             Version = "1",
 *             WorkspaceName = "testworkspace",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	machinelearningservices "github.com/pulumi/pulumi-azure-native/sdk/go/azure/machinelearningservices"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := machinelearningservices.NewEnvironmentSpecificationVersion(ctx, "environmentSpecificationVersion", &machinelearningservices.EnvironmentSpecificationVersionArgs{
 * 			Name: pulumi.String("testEnvironment"),
 * 			Properties: &machinelearningservices.EnvironmentSpecificationVersionArgs{
 * 				CondaFile:   pulumi.String("channels:\n- defaults\ndependencies:\n- python=3.7.7\nname: my-env"),
 * 				Description: pulumi.String("string"),
 * 				Docker: machinelearningservices.DockerBuild{
 * 					DockerSpecificationType: "Build",
 * 					Dockerfile:              "FROM myimage",
 * 				},
 * 				Properties: pulumi.StringMap{
 * 					"additionalProp1": pulumi.String("string"),
 * 					"additionalProp2": pulumi.String("string"),
 * 					"additionalProp3": pulumi.String("string"),
 * 				},
 * 				Tags: pulumi.StringMap{
 * 					"additionalProp1": pulumi.String("string"),
 * 					"additionalProp2": pulumi.String("string"),
 * 					"additionalProp3": pulumi.String("string"),
 * 				},
 * 			},
 * 			ResourceGroupName: pulumi.String("testrg123"),
 * 			Version:           pulumi.String("1"),
 * 			WorkspaceName:     pulumi.String("testworkspace"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const environmentSpecificationVersion = new azure_native.machinelearningservices.EnvironmentSpecificationVersion("environmentSpecificationVersion", {
 *     name: "testEnvironment",
 *     properties: {
 *         condaFile: `channels:
 * - defaults
 * dependencies:
 * - python=3.7.7
 * name: my-env`,
 *         description: "string",
 *         docker: {
 *             dockerSpecificationType: "Build",
 *             dockerfile: "FROM myimage",
 *         },
 *         properties: {
 *             additionalProp1: "string",
 *             additionalProp2: "string",
 *             additionalProp3: "string",
 *         },
 *         tags: {
 *             additionalProp1: "string",
 *             additionalProp2: "string",
 *             additionalProp3: "string",
 *         },
 *     },
 *     resourceGroupName: "testrg123",
 *     version: "1",
 *     workspaceName: "testworkspace",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * environment_specification_version = azure_native.machinelearningservices.EnvironmentSpecificationVersion("environmentSpecificationVersion",
 *     name="testEnvironment",
 *     properties=azure_native.machinelearningservices.EnvironmentSpecificationVersionArgs(
 *         conda_file="""channels:
 * - defaults
 * dependencies:
 * - python=3.7.7
 * name: my-env""",
 *         description="string",
 *         docker=azure_native.machinelearningservices.DockerBuildArgs(
 *             docker_specification_type="Build",
 *             dockerfile="FROM myimage",
 *         ),
 *         properties={
 *             "additionalProp1": "string",
 *             "additionalProp2": "string",
 *             "additionalProp3": "string",
 *         },
 *         tags={
 *             "additionalProp1": "string",
 *             "additionalProp2": "string",
 *             "additionalProp3": "string",
 *         },
 *     ),
 *     resource_group_name="testrg123",
 *     version="1",
 *     workspace_name="testworkspace")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:machinelearningservices:EnvironmentSpecificationVersion 1 /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/testEnvironment/versions/1 
 * ```
 * 
 */
@ResourceType(type="azure-native:machinelearningservices:EnvironmentSpecificationVersion")
public class EnvironmentSpecificationVersion extends io.pulumi.resources.CustomResource {
    /**
     * The name of the resource
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Additional attributes of the entity.
     */
    @Export(name="properties", type=EnvironmentSpecificationVersionResponse.class, parameters={})
    private Output<EnvironmentSpecificationVersionResponse> properties;

    /**
     * @return Additional attributes of the entity.
     */
    public Output<EnvironmentSpecificationVersionResponse> getProperties() {
        return this.properties;
    }
    /**
     * System data associated with resource provider
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return System data associated with resource provider
     */
    public Output<SystemDataResponse> getSystemData() {
        return this.systemData;
    }
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EnvironmentSpecificationVersion(String name) {
        this(name, EnvironmentSpecificationVersionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EnvironmentSpecificationVersion(String name, EnvironmentSpecificationVersionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EnvironmentSpecificationVersion(String name, EnvironmentSpecificationVersionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:machinelearningservices:EnvironmentSpecificationVersion", name, args == null ? EnvironmentSpecificationVersionArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private EnvironmentSpecificationVersion(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:machinelearningservices:EnvironmentSpecificationVersion", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20210301preview:EnvironmentSpecificationVersion").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EnvironmentSpecificationVersion get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new EnvironmentSpecificationVersion(name, id, options);
    }
}
