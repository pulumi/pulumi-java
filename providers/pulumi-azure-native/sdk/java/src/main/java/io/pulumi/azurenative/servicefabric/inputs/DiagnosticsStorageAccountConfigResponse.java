// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiagnosticsStorageAccountConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final DiagnosticsStorageAccountConfigResponse Empty = new DiagnosticsStorageAccountConfigResponse();

    @InputImport(name="blobEndpoint", required=true)
    private final String blobEndpoint;

    public String getBlobEndpoint() {
        return this.blobEndpoint;
    }

    @InputImport(name="protectedAccountKeyName", required=true)
    private final String protectedAccountKeyName;

    public String getProtectedAccountKeyName() {
        return this.protectedAccountKeyName;
    }

    @InputImport(name="protectedAccountKeyName2")
    private final @Nullable String protectedAccountKeyName2;

    public Optional<String> getProtectedAccountKeyName2() {
        return this.protectedAccountKeyName2 == null ? Optional.empty() : Optional.ofNullable(this.protectedAccountKeyName2);
    }

    @InputImport(name="queueEndpoint", required=true)
    private final String queueEndpoint;

    public String getQueueEndpoint() {
        return this.queueEndpoint;
    }

    @InputImport(name="storageAccountName", required=true)
    private final String storageAccountName;

    public String getStorageAccountName() {
        return this.storageAccountName;
    }

    @InputImport(name="tableEndpoint", required=true)
    private final String tableEndpoint;

    public String getTableEndpoint() {
        return this.tableEndpoint;
    }

    public DiagnosticsStorageAccountConfigResponse(
        String blobEndpoint,
        String protectedAccountKeyName,
        @Nullable String protectedAccountKeyName2,
        String queueEndpoint,
        String storageAccountName,
        String tableEndpoint) {
        this.blobEndpoint = Objects.requireNonNull(blobEndpoint, "expected parameter 'blobEndpoint' to be non-null");
        this.protectedAccountKeyName = Objects.requireNonNull(protectedAccountKeyName, "expected parameter 'protectedAccountKeyName' to be non-null");
        this.protectedAccountKeyName2 = protectedAccountKeyName2;
        this.queueEndpoint = Objects.requireNonNull(queueEndpoint, "expected parameter 'queueEndpoint' to be non-null");
        this.storageAccountName = Objects.requireNonNull(storageAccountName, "expected parameter 'storageAccountName' to be non-null");
        this.tableEndpoint = Objects.requireNonNull(tableEndpoint, "expected parameter 'tableEndpoint' to be non-null");
    }

    private DiagnosticsStorageAccountConfigResponse() {
        this.blobEndpoint = null;
        this.protectedAccountKeyName = null;
        this.protectedAccountKeyName2 = null;
        this.queueEndpoint = null;
        this.storageAccountName = null;
        this.tableEndpoint = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiagnosticsStorageAccountConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String blobEndpoint;
        private String protectedAccountKeyName;
        private @Nullable String protectedAccountKeyName2;
        private String queueEndpoint;
        private String storageAccountName;
        private String tableEndpoint;

        public Builder() {
    	      // Empty
        }

        public Builder(DiagnosticsStorageAccountConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blobEndpoint = defaults.blobEndpoint;
    	      this.protectedAccountKeyName = defaults.protectedAccountKeyName;
    	      this.protectedAccountKeyName2 = defaults.protectedAccountKeyName2;
    	      this.queueEndpoint = defaults.queueEndpoint;
    	      this.storageAccountName = defaults.storageAccountName;
    	      this.tableEndpoint = defaults.tableEndpoint;
        }

        public Builder setBlobEndpoint(String blobEndpoint) {
            this.blobEndpoint = Objects.requireNonNull(blobEndpoint);
            return this;
        }

        public Builder setProtectedAccountKeyName(String protectedAccountKeyName) {
            this.protectedAccountKeyName = Objects.requireNonNull(protectedAccountKeyName);
            return this;
        }

        public Builder setProtectedAccountKeyName2(@Nullable String protectedAccountKeyName2) {
            this.protectedAccountKeyName2 = protectedAccountKeyName2;
            return this;
        }

        public Builder setQueueEndpoint(String queueEndpoint) {
            this.queueEndpoint = Objects.requireNonNull(queueEndpoint);
            return this;
        }

        public Builder setStorageAccountName(String storageAccountName) {
            this.storageAccountName = Objects.requireNonNull(storageAccountName);
            return this;
        }

        public Builder setTableEndpoint(String tableEndpoint) {
            this.tableEndpoint = Objects.requireNonNull(tableEndpoint);
            return this;
        }

        public DiagnosticsStorageAccountConfigResponse build() {
            return new DiagnosticsStorageAccountConfigResponse(blobEndpoint, protectedAccountKeyName, protectedAccountKeyName2, queueEndpoint, storageAccountName, tableEndpoint);
        }
    }
}
