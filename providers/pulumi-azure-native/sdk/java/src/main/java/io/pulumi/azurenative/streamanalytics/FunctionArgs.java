// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.streamanalytics;

import io.pulumi.azurenative.streamanalytics.inputs.ScalarFunctionPropertiesArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FunctionArgs extends io.pulumi.resources.ResourceArgs {

    public static final FunctionArgs Empty = new FunctionArgs();

    /**
     * The name of the function.
     * 
     */
    @Import(name="functionName")
      private final @Nullable Output<String> functionName;

    public Output<String> getFunctionName() {
        return this.functionName == null ? Output.empty() : this.functionName;
    }

    /**
     * The name of the streaming job.
     * 
     */
    @Import(name="jobName", required=true)
      private final Output<String> jobName;

    public Output<String> getJobName() {
        return this.jobName;
    }

    /**
     * Resource name
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The properties that are associated with a function.
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<ScalarFunctionPropertiesArgs> properties;

    public Output<ScalarFunctionPropertiesArgs> getProperties() {
        return this.properties == null ? Output.empty() : this.properties;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    public FunctionArgs(
        @Nullable Output<String> functionName,
        Output<String> jobName,
        @Nullable Output<String> name,
        @Nullable Output<ScalarFunctionPropertiesArgs> properties,
        Output<String> resourceGroupName) {
        this.functionName = functionName;
        this.jobName = Objects.requireNonNull(jobName, "expected parameter 'jobName' to be non-null");
        this.name = name;
        this.properties = properties;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
    }

    private FunctionArgs() {
        this.functionName = Output.empty();
        this.jobName = Output.empty();
        this.name = Output.empty();
        this.properties = Output.empty();
        this.resourceGroupName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FunctionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> functionName;
        private Output<String> jobName;
        private @Nullable Output<String> name;
        private @Nullable Output<ScalarFunctionPropertiesArgs> properties;
        private Output<String> resourceGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(FunctionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.functionName = defaults.functionName;
    	      this.jobName = defaults.jobName;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        public Builder functionName(@Nullable Output<String> functionName) {
            this.functionName = functionName;
            return this;
        }

        public Builder functionName(@Nullable String functionName) {
            this.functionName = Output.ofNullable(functionName);
            return this;
        }

        public Builder jobName(Output<String> jobName) {
            this.jobName = Objects.requireNonNull(jobName);
            return this;
        }

        public Builder jobName(String jobName) {
            this.jobName = Output.of(Objects.requireNonNull(jobName));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder properties(@Nullable Output<ScalarFunctionPropertiesArgs> properties) {
            this.properties = properties;
            return this;
        }

        public Builder properties(@Nullable ScalarFunctionPropertiesArgs properties) {
            this.properties = Output.ofNullable(properties);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public FunctionArgs build() {
            return new FunctionArgs(functionName, jobName, name, properties, resourceGroupName);
        }
    }
}
