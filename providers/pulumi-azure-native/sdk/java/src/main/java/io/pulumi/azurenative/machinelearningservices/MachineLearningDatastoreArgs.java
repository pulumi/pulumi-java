// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices;

import io.pulumi.azurenative.machinelearningservices.enums.DatastoreTypeArm;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MachineLearningDatastoreArgs extends io.pulumi.resources.ResourceArgs {

    public static final MachineLearningDatastoreArgs Empty = new MachineLearningDatastoreArgs();

    /**
     * Account Key of storage account.
     * 
     */
    @Import(name="accountKey")
      private final @Nullable Output<String> accountKey;

    public Output<String> getAccountKey() {
        return this.accountKey == null ? Output.empty() : this.accountKey;
    }

    /**
     * The name of the storage account.
     * 
     */
    @Import(name="accountName")
      private final @Nullable Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName == null ? Output.empty() : this.accountName;
    }

    /**
     * The resource group the ADLS store belongs to. Defaults to selected resource group.
     * 
     */
    @Import(name="adlsResourceGroup")
      private final @Nullable Output<String> adlsResourceGroup;

    public Output<String> getAdlsResourceGroup() {
        return this.adlsResourceGroup == null ? Output.empty() : this.adlsResourceGroup;
    }

    /**
     * The ID of the subscription the ADLS store belongs to. Defaults to selected subscription.
     * 
     */
    @Import(name="adlsSubscriptionId")
      private final @Nullable Output<String> adlsSubscriptionId;

    public Output<String> getAdlsSubscriptionId() {
        return this.adlsSubscriptionId == null ? Output.empty() : this.adlsSubscriptionId;
    }

    /**
     * Authority url used to authenticate the user.
     * 
     */
    @Import(name="authorityUrl")
      private final @Nullable Output<String> authorityUrl;

    public Output<String> getAuthorityUrl() {
        return this.authorityUrl == null ? Output.empty() : this.authorityUrl;
    }

    /**
     * The service principal's client/application ID.
     * 
     */
    @Import(name="clientId")
      private final @Nullable Output<String> clientId;

    public Output<String> getClientId() {
        return this.clientId == null ? Output.empty() : this.clientId;
    }

    /**
     * The service principal's secret.
     * 
     */
    @Import(name="clientSecret")
      private final @Nullable Output<String> clientSecret;

    public Output<String> getClientSecret() {
        return this.clientSecret == null ? Output.empty() : this.clientSecret;
    }

    /**
     * The name of the azure blob container.
     * 
     */
    @Import(name="containerName")
      private final @Nullable Output<String> containerName;

    public Output<String> getContainerName() {
        return this.containerName == null ? Output.empty() : this.containerName;
    }

    /**
     * Specifies datastore type.
     * 
     */
    @Import(name="dataStoreType", required=true)
      private final Output<Either<String,DatastoreTypeArm>> dataStoreType;

    public Output<Either<String,DatastoreTypeArm>> getDataStoreType() {
        return this.dataStoreType;
    }

    /**
     * The database name.
     * 
     */
    @Import(name="databaseName")
      private final @Nullable Output<String> databaseName;

    public Output<String> getDatabaseName() {
        return this.databaseName == null ? Output.empty() : this.databaseName;
    }

    /**
     * The Datastore name.
     * 
     */
    @Import(name="datastoreName")
      private final @Nullable Output<String> datastoreName;

    public Output<String> getDatastoreName() {
        return this.datastoreName == null ? Output.empty() : this.datastoreName;
    }

    /**
     * The description of the datastore.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The endpoint of the server.
     * 
     */
    @Import(name="endpoint")
      private final @Nullable Output<String> endpoint;

    public Output<String> getEndpoint() {
        return this.endpoint == null ? Output.empty() : this.endpoint;
    }

    /**
     * This sets the ssl value of the server. Defaults to true if not set.
     * 
     */
    @Import(name="enforceSSL")
      private final @Nullable Output<Boolean> enforceSSL;

    public Output<Boolean> getEnforceSSL() {
        return this.enforceSSL == null ? Output.empty() : this.enforceSSL;
    }

    /**
     * The file system name of the ADLS Gen2.
     * 
     */
    @Import(name="fileSystem")
      private final @Nullable Output<String> fileSystem;

    public Output<String> getFileSystem() {
        return this.fileSystem == null ? Output.empty() : this.fileSystem;
    }

    /**
     * Include datastore secret in response.
     * 
     */
    @Import(name="includeSecret")
      private final @Nullable Output<Boolean> includeSecret;

    public Output<Boolean> getIncludeSecret() {
        return this.includeSecret == null ? Output.empty() : this.includeSecret;
    }

    /**
     * The name of the datastore.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The password.
     * 
     */
    @Import(name="password")
      private final @Nullable Output<String> password;

    public Output<String> getPassword() {
        return this.password == null ? Output.empty() : this.password;
    }

    /**
     * The port number.
     * 
     */
    @Import(name="port")
      private final @Nullable Output<String> port;

    public Output<String> getPort() {
        return this.port == null ? Output.empty() : this.port;
    }

    /**
     * The protocol to be used
     * 
     */
    @Import(name="protocol")
      private final @Nullable Output<String> protocol;

    public Output<String> getProtocol() {
        return this.protocol == null ? Output.empty() : this.protocol;
    }

    /**
     * Name of the resource group in which workspace is located.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Determines what operations will be performed.
     * 
     */
    @Import(name="resourceUrl")
      private final @Nullable Output<String> resourceUrl;

    public Output<String> getResourceUrl() {
        return this.resourceUrl == null ? Output.empty() : this.resourceUrl;
    }

    /**
     * Sas Token of storage account.
     * 
     */
    @Import(name="sasToken")
      private final @Nullable Output<String> sasToken;

    public Output<String> getSasToken() {
        return this.sasToken == null ? Output.empty() : this.sasToken;
    }

    /**
     * The SQL/MySQL/PostgreSQL server name
     * 
     */
    @Import(name="serverName")
      private final @Nullable Output<String> serverName;

    public Output<String> getServerName() {
        return this.serverName == null ? Output.empty() : this.serverName;
    }

    /**
     * The name of the file share.
     * 
     */
    @Import(name="shareName")
      private final @Nullable Output<String> shareName;

    public Output<String> getShareName() {
        return this.shareName == null ? Output.empty() : this.shareName;
    }

    /**
     * Skip validation that ensures data can be loaded from the dataset before registration.
     * 
     */
    @Import(name="skipValidation")
      private final @Nullable Output<Boolean> skipValidation;

    public Output<Boolean> getSkipValidation() {
        return this.skipValidation == null ? Output.empty() : this.skipValidation;
    }

    /**
     * The resource group of the storage account. Defaults to selected resource group
     * 
     */
    @Import(name="storageAccountResourceGroup")
      private final @Nullable Output<String> storageAccountResourceGroup;

    public Output<String> getStorageAccountResourceGroup() {
        return this.storageAccountResourceGroup == null ? Output.empty() : this.storageAccountResourceGroup;
    }

    /**
     * The subscription ID of the storage account. Defaults to selected subscription
     * 
     */
    @Import(name="storageAccountSubscriptionId")
      private final @Nullable Output<String> storageAccountSubscriptionId;

    public Output<String> getStorageAccountSubscriptionId() {
        return this.storageAccountSubscriptionId == null ? Output.empty() : this.storageAccountSubscriptionId;
    }

    /**
     * The ADLS store name.
     * 
     */
    @Import(name="storeName")
      private final @Nullable Output<String> storeName;

    public Output<String> getStoreName() {
        return this.storeName == null ? Output.empty() : this.storeName;
    }

    /**
     * The service principal Tenant ID.
     * 
     */
    @Import(name="tenantId")
      private final @Nullable Output<String> tenantId;

    public Output<String> getTenantId() {
        return this.tenantId == null ? Output.empty() : this.tenantId;
    }

    /**
     * The user ID.
     * 
     */
    @Import(name="userId")
      private final @Nullable Output<String> userId;

    public Output<String> getUserId() {
        return this.userId == null ? Output.empty() : this.userId;
    }

    /**
     * The username of the database user.
     * 
     */
    @Import(name="userName")
      private final @Nullable Output<String> userName;

    public Output<String> getUserName() {
        return this.userName == null ? Output.empty() : this.userName;
    }

    /**
     * Name of Azure Machine Learning workspace.
     * 
     */
    @Import(name="workspaceName", required=true)
      private final Output<String> workspaceName;

    public Output<String> getWorkspaceName() {
        return this.workspaceName;
    }

    /**
     * If set to true, datastore support data access authenticated with Workspace MSI.
     * 
     */
    @Import(name="workspaceSystemAssignedIdentity")
      private final @Nullable Output<Boolean> workspaceSystemAssignedIdentity;

    public Output<Boolean> getWorkspaceSystemAssignedIdentity() {
        return this.workspaceSystemAssignedIdentity == null ? Output.empty() : this.workspaceSystemAssignedIdentity;
    }

    public MachineLearningDatastoreArgs(
        @Nullable Output<String> accountKey,
        @Nullable Output<String> accountName,
        @Nullable Output<String> adlsResourceGroup,
        @Nullable Output<String> adlsSubscriptionId,
        @Nullable Output<String> authorityUrl,
        @Nullable Output<String> clientId,
        @Nullable Output<String> clientSecret,
        @Nullable Output<String> containerName,
        Output<Either<String,DatastoreTypeArm>> dataStoreType,
        @Nullable Output<String> databaseName,
        @Nullable Output<String> datastoreName,
        @Nullable Output<String> description,
        @Nullable Output<String> endpoint,
        @Nullable Output<Boolean> enforceSSL,
        @Nullable Output<String> fileSystem,
        @Nullable Output<Boolean> includeSecret,
        @Nullable Output<String> name,
        @Nullable Output<String> password,
        @Nullable Output<String> port,
        @Nullable Output<String> protocol,
        Output<String> resourceGroupName,
        @Nullable Output<String> resourceUrl,
        @Nullable Output<String> sasToken,
        @Nullable Output<String> serverName,
        @Nullable Output<String> shareName,
        @Nullable Output<Boolean> skipValidation,
        @Nullable Output<String> storageAccountResourceGroup,
        @Nullable Output<String> storageAccountSubscriptionId,
        @Nullable Output<String> storeName,
        @Nullable Output<String> tenantId,
        @Nullable Output<String> userId,
        @Nullable Output<String> userName,
        Output<String> workspaceName,
        @Nullable Output<Boolean> workspaceSystemAssignedIdentity) {
        this.accountKey = accountKey;
        this.accountName = accountName;
        this.adlsResourceGroup = adlsResourceGroup;
        this.adlsSubscriptionId = adlsSubscriptionId;
        this.authorityUrl = authorityUrl;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.containerName = containerName;
        this.dataStoreType = Objects.requireNonNull(dataStoreType, "expected parameter 'dataStoreType' to be non-null");
        this.databaseName = databaseName;
        this.datastoreName = datastoreName;
        this.description = description;
        this.endpoint = endpoint;
        this.enforceSSL = enforceSSL == null ? Output.ofNullable(true) : enforceSSL;
        this.fileSystem = fileSystem;
        this.includeSecret = includeSecret == null ? Output.ofNullable(true) : includeSecret;
        this.name = name;
        this.password = password;
        this.port = port;
        this.protocol = protocol;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceUrl = resourceUrl;
        this.sasToken = sasToken;
        this.serverName = serverName;
        this.shareName = shareName;
        this.skipValidation = skipValidation;
        this.storageAccountResourceGroup = storageAccountResourceGroup;
        this.storageAccountSubscriptionId = storageAccountSubscriptionId;
        this.storeName = storeName;
        this.tenantId = tenantId;
        this.userId = userId;
        this.userName = userName;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
        this.workspaceSystemAssignedIdentity = workspaceSystemAssignedIdentity;
    }

    private MachineLearningDatastoreArgs() {
        this.accountKey = Output.empty();
        this.accountName = Output.empty();
        this.adlsResourceGroup = Output.empty();
        this.adlsSubscriptionId = Output.empty();
        this.authorityUrl = Output.empty();
        this.clientId = Output.empty();
        this.clientSecret = Output.empty();
        this.containerName = Output.empty();
        this.dataStoreType = Output.empty();
        this.databaseName = Output.empty();
        this.datastoreName = Output.empty();
        this.description = Output.empty();
        this.endpoint = Output.empty();
        this.enforceSSL = Output.empty();
        this.fileSystem = Output.empty();
        this.includeSecret = Output.empty();
        this.name = Output.empty();
        this.password = Output.empty();
        this.port = Output.empty();
        this.protocol = Output.empty();
        this.resourceGroupName = Output.empty();
        this.resourceUrl = Output.empty();
        this.sasToken = Output.empty();
        this.serverName = Output.empty();
        this.shareName = Output.empty();
        this.skipValidation = Output.empty();
        this.storageAccountResourceGroup = Output.empty();
        this.storageAccountSubscriptionId = Output.empty();
        this.storeName = Output.empty();
        this.tenantId = Output.empty();
        this.userId = Output.empty();
        this.userName = Output.empty();
        this.workspaceName = Output.empty();
        this.workspaceSystemAssignedIdentity = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MachineLearningDatastoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountKey;
        private @Nullable Output<String> accountName;
        private @Nullable Output<String> adlsResourceGroup;
        private @Nullable Output<String> adlsSubscriptionId;
        private @Nullable Output<String> authorityUrl;
        private @Nullable Output<String> clientId;
        private @Nullable Output<String> clientSecret;
        private @Nullable Output<String> containerName;
        private Output<Either<String,DatastoreTypeArm>> dataStoreType;
        private @Nullable Output<String> databaseName;
        private @Nullable Output<String> datastoreName;
        private @Nullable Output<String> description;
        private @Nullable Output<String> endpoint;
        private @Nullable Output<Boolean> enforceSSL;
        private @Nullable Output<String> fileSystem;
        private @Nullable Output<Boolean> includeSecret;
        private @Nullable Output<String> name;
        private @Nullable Output<String> password;
        private @Nullable Output<String> port;
        private @Nullable Output<String> protocol;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> resourceUrl;
        private @Nullable Output<String> sasToken;
        private @Nullable Output<String> serverName;
        private @Nullable Output<String> shareName;
        private @Nullable Output<Boolean> skipValidation;
        private @Nullable Output<String> storageAccountResourceGroup;
        private @Nullable Output<String> storageAccountSubscriptionId;
        private @Nullable Output<String> storeName;
        private @Nullable Output<String> tenantId;
        private @Nullable Output<String> userId;
        private @Nullable Output<String> userName;
        private Output<String> workspaceName;
        private @Nullable Output<Boolean> workspaceSystemAssignedIdentity;

        public Builder() {
    	      // Empty
        }

        public Builder(MachineLearningDatastoreArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountKey = defaults.accountKey;
    	      this.accountName = defaults.accountName;
    	      this.adlsResourceGroup = defaults.adlsResourceGroup;
    	      this.adlsSubscriptionId = defaults.adlsSubscriptionId;
    	      this.authorityUrl = defaults.authorityUrl;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.containerName = defaults.containerName;
    	      this.dataStoreType = defaults.dataStoreType;
    	      this.databaseName = defaults.databaseName;
    	      this.datastoreName = defaults.datastoreName;
    	      this.description = defaults.description;
    	      this.endpoint = defaults.endpoint;
    	      this.enforceSSL = defaults.enforceSSL;
    	      this.fileSystem = defaults.fileSystem;
    	      this.includeSecret = defaults.includeSecret;
    	      this.name = defaults.name;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceUrl = defaults.resourceUrl;
    	      this.sasToken = defaults.sasToken;
    	      this.serverName = defaults.serverName;
    	      this.shareName = defaults.shareName;
    	      this.skipValidation = defaults.skipValidation;
    	      this.storageAccountResourceGroup = defaults.storageAccountResourceGroup;
    	      this.storageAccountSubscriptionId = defaults.storageAccountSubscriptionId;
    	      this.storeName = defaults.storeName;
    	      this.tenantId = defaults.tenantId;
    	      this.userId = defaults.userId;
    	      this.userName = defaults.userName;
    	      this.workspaceName = defaults.workspaceName;
    	      this.workspaceSystemAssignedIdentity = defaults.workspaceSystemAssignedIdentity;
        }

        public Builder accountKey(@Nullable Output<String> accountKey) {
            this.accountKey = accountKey;
            return this;
        }
        public Builder accountKey(@Nullable String accountKey) {
            this.accountKey = Output.ofNullable(accountKey);
            return this;
        }
        public Builder accountName(@Nullable Output<String> accountName) {
            this.accountName = accountName;
            return this;
        }
        public Builder accountName(@Nullable String accountName) {
            this.accountName = Output.ofNullable(accountName);
            return this;
        }
        public Builder adlsResourceGroup(@Nullable Output<String> adlsResourceGroup) {
            this.adlsResourceGroup = adlsResourceGroup;
            return this;
        }
        public Builder adlsResourceGroup(@Nullable String adlsResourceGroup) {
            this.adlsResourceGroup = Output.ofNullable(adlsResourceGroup);
            return this;
        }
        public Builder adlsSubscriptionId(@Nullable Output<String> adlsSubscriptionId) {
            this.adlsSubscriptionId = adlsSubscriptionId;
            return this;
        }
        public Builder adlsSubscriptionId(@Nullable String adlsSubscriptionId) {
            this.adlsSubscriptionId = Output.ofNullable(adlsSubscriptionId);
            return this;
        }
        public Builder authorityUrl(@Nullable Output<String> authorityUrl) {
            this.authorityUrl = authorityUrl;
            return this;
        }
        public Builder authorityUrl(@Nullable String authorityUrl) {
            this.authorityUrl = Output.ofNullable(authorityUrl);
            return this;
        }
        public Builder clientId(@Nullable Output<String> clientId) {
            this.clientId = clientId;
            return this;
        }
        public Builder clientId(@Nullable String clientId) {
            this.clientId = Output.ofNullable(clientId);
            return this;
        }
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }
        public Builder clientSecret(@Nullable String clientSecret) {
            this.clientSecret = Output.ofNullable(clientSecret);
            return this;
        }
        public Builder containerName(@Nullable Output<String> containerName) {
            this.containerName = containerName;
            return this;
        }
        public Builder containerName(@Nullable String containerName) {
            this.containerName = Output.ofNullable(containerName);
            return this;
        }
        public Builder dataStoreType(Output<Either<String,DatastoreTypeArm>> dataStoreType) {
            this.dataStoreType = Objects.requireNonNull(dataStoreType);
            return this;
        }
        public Builder dataStoreType(Either<String,DatastoreTypeArm> dataStoreType) {
            this.dataStoreType = Output.of(Objects.requireNonNull(dataStoreType));
            return this;
        }
        public Builder databaseName(@Nullable Output<String> databaseName) {
            this.databaseName = databaseName;
            return this;
        }
        public Builder databaseName(@Nullable String databaseName) {
            this.databaseName = Output.ofNullable(databaseName);
            return this;
        }
        public Builder datastoreName(@Nullable Output<String> datastoreName) {
            this.datastoreName = datastoreName;
            return this;
        }
        public Builder datastoreName(@Nullable String datastoreName) {
            this.datastoreName = Output.ofNullable(datastoreName);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder endpoint(@Nullable Output<String> endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = Output.ofNullable(endpoint);
            return this;
        }
        public Builder enforceSSL(@Nullable Output<Boolean> enforceSSL) {
            this.enforceSSL = enforceSSL;
            return this;
        }
        public Builder enforceSSL(@Nullable Boolean enforceSSL) {
            this.enforceSSL = Output.ofNullable(enforceSSL);
            return this;
        }
        public Builder fileSystem(@Nullable Output<String> fileSystem) {
            this.fileSystem = fileSystem;
            return this;
        }
        public Builder fileSystem(@Nullable String fileSystem) {
            this.fileSystem = Output.ofNullable(fileSystem);
            return this;
        }
        public Builder includeSecret(@Nullable Output<Boolean> includeSecret) {
            this.includeSecret = includeSecret;
            return this;
        }
        public Builder includeSecret(@Nullable Boolean includeSecret) {
            this.includeSecret = Output.ofNullable(includeSecret);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder password(@Nullable Output<String> password) {
            this.password = password;
            return this;
        }
        public Builder password(@Nullable String password) {
            this.password = Output.ofNullable(password);
            return this;
        }
        public Builder port(@Nullable Output<String> port) {
            this.port = port;
            return this;
        }
        public Builder port(@Nullable String port) {
            this.port = Output.ofNullable(port);
            return this;
        }
        public Builder protocol(@Nullable Output<String> protocol) {
            this.protocol = protocol;
            return this;
        }
        public Builder protocol(@Nullable String protocol) {
            this.protocol = Output.ofNullable(protocol);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder resourceUrl(@Nullable Output<String> resourceUrl) {
            this.resourceUrl = resourceUrl;
            return this;
        }
        public Builder resourceUrl(@Nullable String resourceUrl) {
            this.resourceUrl = Output.ofNullable(resourceUrl);
            return this;
        }
        public Builder sasToken(@Nullable Output<String> sasToken) {
            this.sasToken = sasToken;
            return this;
        }
        public Builder sasToken(@Nullable String sasToken) {
            this.sasToken = Output.ofNullable(sasToken);
            return this;
        }
        public Builder serverName(@Nullable Output<String> serverName) {
            this.serverName = serverName;
            return this;
        }
        public Builder serverName(@Nullable String serverName) {
            this.serverName = Output.ofNullable(serverName);
            return this;
        }
        public Builder shareName(@Nullable Output<String> shareName) {
            this.shareName = shareName;
            return this;
        }
        public Builder shareName(@Nullable String shareName) {
            this.shareName = Output.ofNullable(shareName);
            return this;
        }
        public Builder skipValidation(@Nullable Output<Boolean> skipValidation) {
            this.skipValidation = skipValidation;
            return this;
        }
        public Builder skipValidation(@Nullable Boolean skipValidation) {
            this.skipValidation = Output.ofNullable(skipValidation);
            return this;
        }
        public Builder storageAccountResourceGroup(@Nullable Output<String> storageAccountResourceGroup) {
            this.storageAccountResourceGroup = storageAccountResourceGroup;
            return this;
        }
        public Builder storageAccountResourceGroup(@Nullable String storageAccountResourceGroup) {
            this.storageAccountResourceGroup = Output.ofNullable(storageAccountResourceGroup);
            return this;
        }
        public Builder storageAccountSubscriptionId(@Nullable Output<String> storageAccountSubscriptionId) {
            this.storageAccountSubscriptionId = storageAccountSubscriptionId;
            return this;
        }
        public Builder storageAccountSubscriptionId(@Nullable String storageAccountSubscriptionId) {
            this.storageAccountSubscriptionId = Output.ofNullable(storageAccountSubscriptionId);
            return this;
        }
        public Builder storeName(@Nullable Output<String> storeName) {
            this.storeName = storeName;
            return this;
        }
        public Builder storeName(@Nullable String storeName) {
            this.storeName = Output.ofNullable(storeName);
            return this;
        }
        public Builder tenantId(@Nullable Output<String> tenantId) {
            this.tenantId = tenantId;
            return this;
        }
        public Builder tenantId(@Nullable String tenantId) {
            this.tenantId = Output.ofNullable(tenantId);
            return this;
        }
        public Builder userId(@Nullable Output<String> userId) {
            this.userId = userId;
            return this;
        }
        public Builder userId(@Nullable String userId) {
            this.userId = Output.ofNullable(userId);
            return this;
        }
        public Builder userName(@Nullable Output<String> userName) {
            this.userName = userName;
            return this;
        }
        public Builder userName(@Nullable String userName) {
            this.userName = Output.ofNullable(userName);
            return this;
        }
        public Builder workspaceName(Output<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }
        public Builder workspaceName(String workspaceName) {
            this.workspaceName = Output.of(Objects.requireNonNull(workspaceName));
            return this;
        }
        public Builder workspaceSystemAssignedIdentity(@Nullable Output<Boolean> workspaceSystemAssignedIdentity) {
            this.workspaceSystemAssignedIdentity = workspaceSystemAssignedIdentity;
            return this;
        }
        public Builder workspaceSystemAssignedIdentity(@Nullable Boolean workspaceSystemAssignedIdentity) {
            this.workspaceSystemAssignedIdentity = Output.ofNullable(workspaceSystemAssignedIdentity);
            return this;
        }        public MachineLearningDatastoreArgs build() {
            return new MachineLearningDatastoreArgs(accountKey, accountName, adlsResourceGroup, adlsSubscriptionId, authorityUrl, clientId, clientSecret, containerName, dataStoreType, databaseName, datastoreName, description, endpoint, enforceSSL, fileSystem, includeSecret, name, password, port, protocol, resourceGroupName, resourceUrl, sasToken, serverName, shareName, skipValidation, storageAccountResourceGroup, storageAccountSubscriptionId, storeName, tenantId, userId, userName, workspaceName, workspaceSystemAssignedIdentity);
        }
    }
}
