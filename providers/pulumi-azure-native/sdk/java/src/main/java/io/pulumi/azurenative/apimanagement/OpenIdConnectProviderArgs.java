// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.apimanagement;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OpenIdConnectProviderArgs extends io.pulumi.resources.ResourceArgs {

    public static final OpenIdConnectProviderArgs Empty = new OpenIdConnectProviderArgs();

    /**
     * Client ID of developer console which is the client application.
     * 
     */
    @InputImport(name="clientId", required=true)
      private final Output<String> clientId;

    public Output<String> getClientId() {
        return this.clientId;
    }

    /**
     * Client Secret of developer console which is the client application.
     * 
     */
    @InputImport(name="clientSecret")
      private final @Nullable Output<String> clientSecret;

    public Output<String> getClientSecret() {
        return this.clientSecret == null ? Output.empty() : this.clientSecret;
    }

    /**
     * User-friendly description of OpenID Connect Provider.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * User-friendly OpenID Connect Provider name.
     * 
     */
    @InputImport(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName;
    }

    /**
     * Metadata endpoint URI.
     * 
     */
    @InputImport(name="metadataEndpoint", required=true)
      private final Output<String> metadataEndpoint;

    public Output<String> getMetadataEndpoint() {
        return this.metadataEndpoint;
    }

    /**
     * Identifier of the OpenID Connect Provider.
     * 
     */
    @InputImport(name="opid")
      private final @Nullable Output<String> opid;

    public Output<String> getOpid() {
        return this.opid == null ? Output.empty() : this.opid;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the API Management service.
     * 
     */
    @InputImport(name="serviceName", required=true)
      private final Output<String> serviceName;

    public Output<String> getServiceName() {
        return this.serviceName;
    }

    public OpenIdConnectProviderArgs(
        Output<String> clientId,
        @Nullable Output<String> clientSecret,
        @Nullable Output<String> description,
        Output<String> displayName,
        Output<String> metadataEndpoint,
        @Nullable Output<String> opid,
        Output<String> resourceGroupName,
        Output<String> serviceName) {
        this.clientId = Objects.requireNonNull(clientId, "expected parameter 'clientId' to be non-null");
        this.clientSecret = clientSecret;
        this.description = description;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.metadataEndpoint = Objects.requireNonNull(metadataEndpoint, "expected parameter 'metadataEndpoint' to be non-null");
        this.opid = opid;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
    }

    private OpenIdConnectProviderArgs() {
        this.clientId = Output.empty();
        this.clientSecret = Output.empty();
        this.description = Output.empty();
        this.displayName = Output.empty();
        this.metadataEndpoint = Output.empty();
        this.opid = Output.empty();
        this.resourceGroupName = Output.empty();
        this.serviceName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OpenIdConnectProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> clientId;
        private @Nullable Output<String> clientSecret;
        private @Nullable Output<String> description;
        private Output<String> displayName;
        private Output<String> metadataEndpoint;
        private @Nullable Output<String> opid;
        private Output<String> resourceGroupName;
        private Output<String> serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(OpenIdConnectProviderArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.metadataEndpoint = defaults.metadataEndpoint;
    	      this.opid = defaults.opid;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder clientId(Output<String> clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }

        public Builder clientId(String clientId) {
            this.clientId = Output.of(Objects.requireNonNull(clientId));
            return this;
        }

        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(@Nullable String clientSecret) {
            this.clientSecret = Output.ofNullable(clientSecret);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder metadataEndpoint(Output<String> metadataEndpoint) {
            this.metadataEndpoint = Objects.requireNonNull(metadataEndpoint);
            return this;
        }

        public Builder metadataEndpoint(String metadataEndpoint) {
            this.metadataEndpoint = Output.of(Objects.requireNonNull(metadataEndpoint));
            return this;
        }

        public Builder opid(@Nullable Output<String> opid) {
            this.opid = opid;
            return this;
        }

        public Builder opid(@Nullable String opid) {
            this.opid = Output.ofNullable(opid);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder serviceName(Output<String> serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }

        public Builder serviceName(String serviceName) {
            this.serviceName = Output.of(Objects.requireNonNull(serviceName));
            return this;
        }
        public OpenIdConnectProviderArgs build() {
            return new OpenIdConnectProviderArgs(clientId, clientSecret, description, displayName, metadataEndpoint, opid, resourceGroupName, serviceName);
        }
    }
}
