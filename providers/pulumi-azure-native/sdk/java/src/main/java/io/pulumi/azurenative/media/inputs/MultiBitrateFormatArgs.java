// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media.inputs;

import io.pulumi.azurenative.media.inputs.OutputFileArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MultiBitrateFormatArgs extends io.pulumi.resources.ResourceArgs {

    public static final MultiBitrateFormatArgs Empty = new MultiBitrateFormatArgs();

    @InputImport(name="filenamePattern", required=true)
    private final Input<String> filenamePattern;

    public Input<String> getFilenamePattern() {
        return this.filenamePattern;
    }

    @InputImport(name="odataType", required=true)
    private final Input<String> odataType;

    public Input<String> getOdataType() {
        return this.odataType;
    }

    @InputImport(name="outputFiles")
    private final @Nullable Input<List<OutputFileArgs>> outputFiles;

    public Input<List<OutputFileArgs>> getOutputFiles() {
        return this.outputFiles == null ? Input.empty() : this.outputFiles;
    }

    public MultiBitrateFormatArgs(
        Input<String> filenamePattern,
        Input<String> odataType,
        @Nullable Input<List<OutputFileArgs>> outputFiles) {
        this.filenamePattern = Objects.requireNonNull(filenamePattern, "expected parameter 'filenamePattern' to be non-null");
        this.odataType = Objects.requireNonNull(odataType, "expected parameter 'odataType' to be non-null");
        this.outputFiles = outputFiles;
    }

    private MultiBitrateFormatArgs() {
        this.filenamePattern = Input.empty();
        this.odataType = Input.empty();
        this.outputFiles = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MultiBitrateFormatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> filenamePattern;
        private Input<String> odataType;
        private @Nullable Input<List<OutputFileArgs>> outputFiles;

        public Builder() {
    	      // Empty
        }

        public Builder(MultiBitrateFormatArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filenamePattern = defaults.filenamePattern;
    	      this.odataType = defaults.odataType;
    	      this.outputFiles = defaults.outputFiles;
        }

        public Builder setFilenamePattern(Input<String> filenamePattern) {
            this.filenamePattern = Objects.requireNonNull(filenamePattern);
            return this;
        }

        public Builder setFilenamePattern(String filenamePattern) {
            this.filenamePattern = Input.of(Objects.requireNonNull(filenamePattern));
            return this;
        }

        public Builder setOdataType(Input<String> odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }

        public Builder setOdataType(String odataType) {
            this.odataType = Input.of(Objects.requireNonNull(odataType));
            return this;
        }

        public Builder setOutputFiles(@Nullable Input<List<OutputFileArgs>> outputFiles) {
            this.outputFiles = outputFiles;
            return this;
        }

        public Builder setOutputFiles(@Nullable List<OutputFileArgs> outputFiles) {
            this.outputFiles = Input.ofNullable(outputFiles);
            return this;
        }

        public MultiBitrateFormatArgs build() {
            return new MultiBitrateFormatArgs(filenamePattern, odataType, outputFiles);
        }
    }
}
