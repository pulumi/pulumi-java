// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.providerhub.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SkuCostResponse extends io.pulumi.resources.InvokeArgs {

    public static final SkuCostResponse Empty = new SkuCostResponse();

    @Import(name="extendedUnit")
      private final @Nullable String extendedUnit;

    public Optional<String> getExtendedUnit() {
        return this.extendedUnit == null ? Optional.empty() : Optional.ofNullable(this.extendedUnit);
    }

    @Import(name="meterId", required=true)
      private final String meterId;

    public String getMeterId() {
        return this.meterId;
    }

    @Import(name="quantity")
      private final @Nullable Integer quantity;

    public Optional<Integer> getQuantity() {
        return this.quantity == null ? Optional.empty() : Optional.ofNullable(this.quantity);
    }

    public SkuCostResponse(
        @Nullable String extendedUnit,
        String meterId,
        @Nullable Integer quantity) {
        this.extendedUnit = extendedUnit;
        this.meterId = Objects.requireNonNull(meterId, "expected parameter 'meterId' to be non-null");
        this.quantity = quantity;
    }

    private SkuCostResponse() {
        this.extendedUnit = null;
        this.meterId = null;
        this.quantity = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SkuCostResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String extendedUnit;
        private String meterId;
        private @Nullable Integer quantity;

        public Builder() {
    	      // Empty
        }

        public Builder(SkuCostResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extendedUnit = defaults.extendedUnit;
    	      this.meterId = defaults.meterId;
    	      this.quantity = defaults.quantity;
        }

        public Builder extendedUnit(@Nullable String extendedUnit) {
            this.extendedUnit = extendedUnit;
            return this;
        }

        public Builder meterId(String meterId) {
            this.meterId = Objects.requireNonNull(meterId);
            return this;
        }

        public Builder quantity(@Nullable Integer quantity) {
            this.quantity = quantity;
            return this;
        }
        public SkuCostResponse build() {
            return new SkuCostResponse(extendedUnit, meterId, quantity);
        }
    }
}
