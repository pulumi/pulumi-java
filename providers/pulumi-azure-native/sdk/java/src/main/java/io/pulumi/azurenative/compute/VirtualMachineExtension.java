// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.compute.VirtualMachineExtensionArgs;
import io.pulumi.azurenative.compute.outputs.VirtualMachineExtensionInstanceViewResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Describes a Virtual Machine Extension.
 * API Version: 2021-03-01.
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:compute:VirtualMachineExtension myresource1 /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName} 
 * ```
 * 
 */
@ResourceType(type="azure-native:compute:VirtualMachineExtension")
public class VirtualMachineExtension extends io.pulumi.resources.CustomResource {
    /**
     * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
     * 
     */
    @Export(name="autoUpgradeMinorVersion", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autoUpgradeMinorVersion;

    /**
     * @return Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
     * 
     */
    public Output</* @Nullable */ Boolean> getAutoUpgradeMinorVersion() {
        return this.autoUpgradeMinorVersion;
    }
    /**
     * Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
     * 
     */
    @Export(name="enableAutomaticUpgrade", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableAutomaticUpgrade;

    /**
     * @return Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnableAutomaticUpgrade() {
        return this.enableAutomaticUpgrade;
    }
    /**
     * How the extension handler should be forced to update even if the extension configuration has not changed.
     * 
     */
    @Export(name="forceUpdateTag", type=String.class, parameters={})
    private Output</* @Nullable */ String> forceUpdateTag;

    /**
     * @return How the extension handler should be forced to update even if the extension configuration has not changed.
     * 
     */
    public Output</* @Nullable */ String> getForceUpdateTag() {
        return this.forceUpdateTag;
    }
    /**
     * The virtual machine extension instance view.
     * 
     */
    @Export(name="instanceView", type=VirtualMachineExtensionInstanceViewResponse.class, parameters={})
    private Output</* @Nullable */ VirtualMachineExtensionInstanceViewResponse> instanceView;

    /**
     * @return The virtual machine extension instance view.
     * 
     */
    public Output</* @Nullable */ VirtualMachineExtensionInstanceViewResponse> getInstanceView() {
        return this.instanceView;
    }
    /**
     * Resource location
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Resource location
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * Resource name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
     * 
     */
    @Export(name="protectedSettings", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> protectedSettings;

    /**
     * @return The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
     * 
     */
    public Output</* @Nullable */ Object> getProtectedSettings() {
        return this.protectedSettings;
    }
    /**
     * The provisioning state, which only appears in the response.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state, which only appears in the response.
     * 
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * The name of the extension handler publisher.
     * 
     */
    @Export(name="publisher", type=String.class, parameters={})
    private Output</* @Nullable */ String> publisher;

    /**
     * @return The name of the extension handler publisher.
     * 
     */
    public Output</* @Nullable */ String> getPublisher() {
        return this.publisher;
    }
    /**
     * Json formatted public settings for the extension.
     * 
     */
    @Export(name="settings", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> settings;

    /**
     * @return Json formatted public settings for the extension.
     * 
     */
    public Output</* @Nullable */ Object> getSettings() {
        return this.settings;
    }
    /**
     * Resource tags
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Resource type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * Specifies the version of the script handler.
     * 
     */
    @Export(name="typeHandlerVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> typeHandlerVersion;

    /**
     * @return Specifies the version of the script handler.
     * 
     */
    public Output</* @Nullable */ String> getTypeHandlerVersion() {
        return this.typeHandlerVersion;
    }

    public interface BuilderApplicator {
        public void apply(VirtualMachineExtensionArgs.Builder a);
    }
    private static io.pulumi.azurenative.compute.VirtualMachineExtensionArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.azurenative.compute.VirtualMachineExtensionArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public VirtualMachineExtension(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VirtualMachineExtension(String name) {
        this(name, VirtualMachineExtensionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VirtualMachineExtension(String name, VirtualMachineExtensionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualMachineExtension(String name, VirtualMachineExtensionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:compute:VirtualMachineExtension", name, args == null ? VirtualMachineExtensionArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private VirtualMachineExtension(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:compute:VirtualMachineExtension", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:compute/v20150615:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20160330:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20160430preview:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20170330:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20171201:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20180401:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20180601:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20181001:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20190301:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20190701:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20191201:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20200601:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20201201:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20210301:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20210401:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20210701:VirtualMachineExtension").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20211101:VirtualMachineExtension").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualMachineExtension get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VirtualMachineExtension(name, id, options);
    }
}
