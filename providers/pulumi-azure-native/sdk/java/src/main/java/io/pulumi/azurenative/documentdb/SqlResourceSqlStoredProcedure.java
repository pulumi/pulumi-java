// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.documentdb;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.documentdb.outputs.SqlStoredProcedureGetPropertiesResponseResource;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * An Azure Cosmos DB storedProcedure.
API Version: 2021-03-15.

{{% examples %}}
## Example Usage
{{% example %}}
### CosmosDBSqlStoredProcedureCreateUpdate
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var sqlResourceSqlStoredProcedure = new AzureNative.DocumentDB.SqlResourceSqlStoredProcedure("sqlResourceSqlStoredProcedure", new AzureNative.DocumentDB.SqlResourceSqlStoredProcedureArgs
        {
            AccountName = "ddb1",
            ContainerName = "containerName",
            DatabaseName = "databaseName",
            Options = ,
            Resource = new AzureNative.DocumentDB.Inputs.SqlStoredProcedureResourceArgs
            {
                Body = "body",
                Id = "storedProcedureName",
            },
            ResourceGroupName = "rg1",
            StoredProcedureName = "storedProcedureName",
        });
    }

}

```

```go
package main

import (
	documentdb "github.com/pulumi/pulumi-azure-native/sdk/go/azure/documentdb"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := documentdb.NewSqlResourceSqlStoredProcedure(ctx, "sqlResourceSqlStoredProcedure", &documentdb.SqlResourceSqlStoredProcedureArgs{
			AccountName:   pulumi.String("ddb1"),
			ContainerName: pulumi.String("containerName"),
			DatabaseName:  pulumi.String("databaseName"),
			Options:       nil,
			Resource: &documentdb.SqlStoredProcedureResourceArgs{
				Body: pulumi.String("body"),
				Id:   pulumi.String("storedProcedureName"),
			},
			ResourceGroupName:   pulumi.String("rg1"),
			StoredProcedureName: pulumi.String("storedProcedureName"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const sqlResourceSqlStoredProcedure = new azure_native.documentdb.SqlResourceSqlStoredProcedure("sqlResourceSqlStoredProcedure", {
    accountName: "ddb1",
    containerName: "containerName",
    databaseName: "databaseName",
    options: {},
    resource: {
        body: "body",
        id: "storedProcedureName",
    },
    resourceGroupName: "rg1",
    storedProcedureName: "storedProcedureName",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

sql_resource_sql_stored_procedure = azure_native.documentdb.SqlResourceSqlStoredProcedure("sqlResourceSqlStoredProcedure",
    account_name="ddb1",
    container_name="containerName",
    database_name="databaseName",
    options=azure_native.documentdb.CreateUpdateOptionsArgs(),
    resource=azure_native.documentdb.SqlStoredProcedureResourceArgs(
        body="body",
        id="storedProcedureName",
    ),
    resource_group_name="rg1",
    stored_procedure_name="storedProcedureName")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:documentdb:SqlResourceSqlStoredProcedure storedProcedureName /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/ddb1/sqlDatabases/databaseName/sqlContainers/containerName/sqlStoredProcedures/storedProcedureName 
```

 */
@ResourceType(type="azure-native:documentdb:SqlResourceSqlStoredProcedure")
public class SqlResourceSqlStoredProcedure extends io.pulumi.resources.CustomResource {
    /**
     * The location of the resource group to which the resource belongs.
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The location of the resource group to which the resource belongs.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * The name of the ARM resource.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the ARM resource.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * 
     */
    @OutputExport(name="resource", type=SqlStoredProcedureGetPropertiesResponseResource.class, parameters={})
    private Output</* @Nullable */ SqlStoredProcedureGetPropertiesResponseResource> resource;

    public Output</* @Nullable */ SqlStoredProcedureGetPropertiesResponseResource> getResource() {
        return this.resource;
    }
    /**
     * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The type of Azure resource.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of Azure resource.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SqlResourceSqlStoredProcedure(String name, SqlResourceSqlStoredProcedureArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:documentdb:SqlResourceSqlStoredProcedure", name, args == null ? SqlResourceSqlStoredProcedureArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private SqlResourceSqlStoredProcedure(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:documentdb:SqlResourceSqlStoredProcedure", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:documentdb/v20190801:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20191212:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20200301:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20200401:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20200601preview:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20200901:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20210115:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20210301preview:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20210315:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20210401preview:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20210415:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20210515:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20210615:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20210701preview:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20211015:SqlResourceSqlStoredProcedure").build()),
                Input.of(Alias.builder().setType("azure-native:documentdb/v20211015preview:SqlResourceSqlStoredProcedure").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SqlResourceSqlStoredProcedure get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SqlResourceSqlStoredProcedure(name, id, options);
    }
}
