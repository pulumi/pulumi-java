// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.netapp.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Volume details using the backup policy
 * 
 */
public final class VolumeBackupsArgs extends io.pulumi.resources.ResourceArgs {

    public static final VolumeBackupsArgs Empty = new VolumeBackupsArgs();

    /**
     * Total count of backups for volume
     * 
     */
    @InputImport(name="backupsCount")
      private final @Nullable Output<Integer> backupsCount;

    public Output<Integer> getBackupsCount() {
        return this.backupsCount == null ? Output.empty() : this.backupsCount;
    }

    /**
     * Policy enabled
     * 
     */
    @InputImport(name="policyEnabled")
      private final @Nullable Output<Boolean> policyEnabled;

    public Output<Boolean> getPolicyEnabled() {
        return this.policyEnabled == null ? Output.empty() : this.policyEnabled;
    }

    /**
     * Volume name
     * 
     */
    @InputImport(name="volumeName")
      private final @Nullable Output<String> volumeName;

    public Output<String> getVolumeName() {
        return this.volumeName == null ? Output.empty() : this.volumeName;
    }

    public VolumeBackupsArgs(
        @Nullable Output<Integer> backupsCount,
        @Nullable Output<Boolean> policyEnabled,
        @Nullable Output<String> volumeName) {
        this.backupsCount = backupsCount;
        this.policyEnabled = policyEnabled;
        this.volumeName = volumeName;
    }

    private VolumeBackupsArgs() {
        this.backupsCount = Output.empty();
        this.policyEnabled = Output.empty();
        this.volumeName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeBackupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> backupsCount;
        private @Nullable Output<Boolean> policyEnabled;
        private @Nullable Output<String> volumeName;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeBackupsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupsCount = defaults.backupsCount;
    	      this.policyEnabled = defaults.policyEnabled;
    	      this.volumeName = defaults.volumeName;
        }

        public Builder backupsCount(@Nullable Output<Integer> backupsCount) {
            this.backupsCount = backupsCount;
            return this;
        }

        public Builder backupsCount(@Nullable Integer backupsCount) {
            this.backupsCount = Output.ofNullable(backupsCount);
            return this;
        }

        public Builder policyEnabled(@Nullable Output<Boolean> policyEnabled) {
            this.policyEnabled = policyEnabled;
            return this;
        }

        public Builder policyEnabled(@Nullable Boolean policyEnabled) {
            this.policyEnabled = Output.ofNullable(policyEnabled);
            return this;
        }

        public Builder volumeName(@Nullable Output<String> volumeName) {
            this.volumeName = volumeName;
            return this;
        }

        public Builder volumeName(@Nullable String volumeName) {
            this.volumeName = Output.ofNullable(volumeName);
            return this;
        }
        public VolumeBackupsArgs build() {
            return new VolumeBackupsArgs(backupsCount, policyEnabled, volumeName);
        }
    }
}
