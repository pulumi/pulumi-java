// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.compute.GalleryImageArgs;
import io.pulumi.azurenative.compute.outputs.DisallowedResponse;
import io.pulumi.azurenative.compute.outputs.GalleryImageFeatureResponse;
import io.pulumi.azurenative.compute.outputs.GalleryImageIdentifierResponse;
import io.pulumi.azurenative.compute.outputs.ImagePurchasePlanResponse;
import io.pulumi.azurenative.compute.outputs.RecommendedMachineConfigurationResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Specifies information about the gallery image definition that you want to create or update.
 * API Version: 2020-09-30.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:compute:GalleryImage myGalleryImageName /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName} 
 * ```
 * 
 */
@ResourceType(type="azure-native:compute:GalleryImage")
public class GalleryImage extends io.pulumi.resources.CustomResource {
    /**
     * The description of this gallery image definition resource. This property is updatable.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of this gallery image definition resource. This property is updatable.
     * 
     */
    public Output</* @Nullable */ String> description() {
        return this.description;
    }
    /**
     * Describes the disallowed disk types.
     * 
     */
    @Export(name="disallowed", type=DisallowedResponse.class, parameters={})
    private Output</* @Nullable */ DisallowedResponse> disallowed;

    /**
     * @return Describes the disallowed disk types.
     * 
     */
    public Output</* @Nullable */ DisallowedResponse> disallowed() {
        return this.disallowed;
    }
    /**
     * The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    @Export(name="endOfLifeDate", type=String.class, parameters={})
    private Output</* @Nullable */ String> endOfLifeDate;

    /**
     * @return The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    public Output</* @Nullable */ String> endOfLifeDate() {
        return this.endOfLifeDate;
    }
    /**
     * The Eula agreement for the gallery image definition.
     * 
     */
    @Export(name="eula", type=String.class, parameters={})
    private Output</* @Nullable */ String> eula;

    /**
     * @return The Eula agreement for the gallery image definition.
     * 
     */
    public Output</* @Nullable */ String> eula() {
        return this.eula;
    }
    /**
     * A list of gallery image features.
     * 
     */
    @Export(name="features", type=List.class, parameters={GalleryImageFeatureResponse.class})
    private Output</* @Nullable */ List<GalleryImageFeatureResponse>> features;

    /**
     * @return A list of gallery image features.
     * 
     */
    public Output</* @Nullable */ List<GalleryImageFeatureResponse>> features() {
        return this.features;
    }
    /**
     * The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
     * 
     */
    @Export(name="hyperVGeneration", type=String.class, parameters={})
    private Output</* @Nullable */ String> hyperVGeneration;

    /**
     * @return The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
     * 
     */
    public Output</* @Nullable */ String> hyperVGeneration() {
        return this.hyperVGeneration;
    }
    /**
     * This is the gallery image definition identifier.
     * 
     */
    @Export(name="identifier", type=GalleryImageIdentifierResponse.class, parameters={})
    private Output<GalleryImageIdentifierResponse> identifier;

    /**
     * @return This is the gallery image definition identifier.
     * 
     */
    public Output<GalleryImageIdentifierResponse> identifier() {
        return this.identifier;
    }
    /**
     * Resource location
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Resource location
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Resource name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
     * 
     */
    @Export(name="osState", type=String.class, parameters={})
    private Output<String> osState;

    /**
     * @return This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
     * 
     */
    public Output<String> osState() {
        return this.osState;
    }
    /**
     * This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
     * 
     */
    @Export(name="osType", type=String.class, parameters={})
    private Output<String> osType;

    /**
     * @return This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
     * 
     */
    public Output<String> osType() {
        return this.osType;
    }
    /**
     * The privacy statement uri.
     * 
     */
    @Export(name="privacyStatementUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> privacyStatementUri;

    /**
     * @return The privacy statement uri.
     * 
     */
    public Output</* @Nullable */ String> privacyStatementUri() {
        return this.privacyStatementUri;
    }
    /**
     * The provisioning state, which only appears in the response.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state, which only appears in the response.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Describes the gallery image definition purchase plan. This is used by marketplace images.
     * 
     */
    @Export(name="purchasePlan", type=ImagePurchasePlanResponse.class, parameters={})
    private Output</* @Nullable */ ImagePurchasePlanResponse> purchasePlan;

    /**
     * @return Describes the gallery image definition purchase plan. This is used by marketplace images.
     * 
     */
    public Output</* @Nullable */ ImagePurchasePlanResponse> purchasePlan() {
        return this.purchasePlan;
    }
    /**
     * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     * 
     */
    @Export(name="recommended", type=RecommendedMachineConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ RecommendedMachineConfigurationResponse> recommended;

    /**
     * @return The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     * 
     */
    public Output</* @Nullable */ RecommendedMachineConfigurationResponse> recommended() {
        return this.recommended;
    }
    /**
     * The release note uri.
     * 
     */
    @Export(name="releaseNoteUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> releaseNoteUri;

    /**
     * @return The release note uri.
     * 
     */
    public Output</* @Nullable */ String> releaseNoteUri() {
        return this.releaseNoteUri;
    }
    /**
     * Resource tags
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }
    /**
     * Resource type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GalleryImage(String name) {
        this(name, GalleryImageArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GalleryImage(String name, GalleryImageArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GalleryImage(String name, GalleryImageArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:compute:GalleryImage", name, args == null ? GalleryImageArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private GalleryImage(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:compute:GalleryImage", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:compute/v20180601:GalleryImage").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20190301:GalleryImage").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20190701:GalleryImage").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20191201:GalleryImage").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20200930:GalleryImage").build()),
                Output.of(Alias.builder().type("azure-native:compute/v20210701:GalleryImage").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GalleryImage get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new GalleryImage(name, id, options);
    }
}
