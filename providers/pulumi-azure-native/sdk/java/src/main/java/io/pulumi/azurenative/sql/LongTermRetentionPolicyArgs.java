// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LongTermRetentionPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final LongTermRetentionPolicyArgs Empty = new LongTermRetentionPolicyArgs();

    /**
     * The name of the database.
     * 
     */
    @InputImport(name="databaseName", required=true)
      private final Output<String> databaseName;

    public Output<String> getDatabaseName() {
        return this.databaseName;
    }

    /**
     * The monthly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    @InputImport(name="monthlyRetention")
      private final @Nullable Output<String> monthlyRetention;

    public Output<String> getMonthlyRetention() {
        return this.monthlyRetention == null ? Output.empty() : this.monthlyRetention;
    }

    /**
     * The policy name. Should always be Default.
     * 
     */
    @InputImport(name="policyName")
      private final @Nullable Output<String> policyName;

    public Output<String> getPolicyName() {
        return this.policyName == null ? Output.empty() : this.policyName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @InputImport(name="serverName", required=true)
      private final Output<String> serverName;

    public Output<String> getServerName() {
        return this.serverName;
    }

    /**
     * The week of year to take the yearly backup in an ISO 8601 format.
     * 
     */
    @InputImport(name="weekOfYear")
      private final @Nullable Output<Integer> weekOfYear;

    public Output<Integer> getWeekOfYear() {
        return this.weekOfYear == null ? Output.empty() : this.weekOfYear;
    }

    /**
     * The weekly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    @InputImport(name="weeklyRetention")
      private final @Nullable Output<String> weeklyRetention;

    public Output<String> getWeeklyRetention() {
        return this.weeklyRetention == null ? Output.empty() : this.weeklyRetention;
    }

    /**
     * The yearly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    @InputImport(name="yearlyRetention")
      private final @Nullable Output<String> yearlyRetention;

    public Output<String> getYearlyRetention() {
        return this.yearlyRetention == null ? Output.empty() : this.yearlyRetention;
    }

    public LongTermRetentionPolicyArgs(
        Output<String> databaseName,
        @Nullable Output<String> monthlyRetention,
        @Nullable Output<String> policyName,
        Output<String> resourceGroupName,
        Output<String> serverName,
        @Nullable Output<Integer> weekOfYear,
        @Nullable Output<String> weeklyRetention,
        @Nullable Output<String> yearlyRetention) {
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.monthlyRetention = monthlyRetention;
        this.policyName = policyName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serverName = Objects.requireNonNull(serverName, "expected parameter 'serverName' to be non-null");
        this.weekOfYear = weekOfYear;
        this.weeklyRetention = weeklyRetention;
        this.yearlyRetention = yearlyRetention;
    }

    private LongTermRetentionPolicyArgs() {
        this.databaseName = Output.empty();
        this.monthlyRetention = Output.empty();
        this.policyName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.serverName = Output.empty();
        this.weekOfYear = Output.empty();
        this.weeklyRetention = Output.empty();
        this.yearlyRetention = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LongTermRetentionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> databaseName;
        private @Nullable Output<String> monthlyRetention;
        private @Nullable Output<String> policyName;
        private Output<String> resourceGroupName;
        private Output<String> serverName;
        private @Nullable Output<Integer> weekOfYear;
        private @Nullable Output<String> weeklyRetention;
        private @Nullable Output<String> yearlyRetention;

        public Builder() {
    	      // Empty
        }

        public Builder(LongTermRetentionPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.monthlyRetention = defaults.monthlyRetention;
    	      this.policyName = defaults.policyName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serverName = defaults.serverName;
    	      this.weekOfYear = defaults.weekOfYear;
    	      this.weeklyRetention = defaults.weeklyRetention;
    	      this.yearlyRetention = defaults.yearlyRetention;
        }

        public Builder databaseName(Output<String> databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }

        public Builder databaseName(String databaseName) {
            this.databaseName = Output.of(Objects.requireNonNull(databaseName));
            return this;
        }

        public Builder monthlyRetention(@Nullable Output<String> monthlyRetention) {
            this.monthlyRetention = monthlyRetention;
            return this;
        }

        public Builder monthlyRetention(@Nullable String monthlyRetention) {
            this.monthlyRetention = Output.ofNullable(monthlyRetention);
            return this;
        }

        public Builder policyName(@Nullable Output<String> policyName) {
            this.policyName = policyName;
            return this;
        }

        public Builder policyName(@Nullable String policyName) {
            this.policyName = Output.ofNullable(policyName);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder serverName(Output<String> serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }

        public Builder serverName(String serverName) {
            this.serverName = Output.of(Objects.requireNonNull(serverName));
            return this;
        }

        public Builder weekOfYear(@Nullable Output<Integer> weekOfYear) {
            this.weekOfYear = weekOfYear;
            return this;
        }

        public Builder weekOfYear(@Nullable Integer weekOfYear) {
            this.weekOfYear = Output.ofNullable(weekOfYear);
            return this;
        }

        public Builder weeklyRetention(@Nullable Output<String> weeklyRetention) {
            this.weeklyRetention = weeklyRetention;
            return this;
        }

        public Builder weeklyRetention(@Nullable String weeklyRetention) {
            this.weeklyRetention = Output.ofNullable(weeklyRetention);
            return this;
        }

        public Builder yearlyRetention(@Nullable Output<String> yearlyRetention) {
            this.yearlyRetention = yearlyRetention;
            return this;
        }

        public Builder yearlyRetention(@Nullable String yearlyRetention) {
            this.yearlyRetention = Output.ofNullable(yearlyRetention);
            return this;
        }
        public LongTermRetentionPolicyArgs build() {
            return new LongTermRetentionPolicyArgs(databaseName, monthlyRetention, policyName, resourceGroupName, serverName, weekOfYear, weeklyRetention, yearlyRetention);
        }
    }
}
