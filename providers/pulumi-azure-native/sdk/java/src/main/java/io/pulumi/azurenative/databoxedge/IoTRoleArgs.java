// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.databoxedge;

import io.pulumi.azurenative.databoxedge.enums.PlatformType;
import io.pulumi.azurenative.databoxedge.enums.RoleStatus;
import io.pulumi.azurenative.databoxedge.inputs.ComputeResourceArgs;
import io.pulumi.azurenative.databoxedge.inputs.IoTDeviceInfoArgs;
import io.pulumi.azurenative.databoxedge.inputs.IoTEdgeAgentInfoArgs;
import io.pulumi.azurenative.databoxedge.inputs.MountPointMapArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IoTRoleArgs extends io.pulumi.resources.ResourceArgs {

    public static final IoTRoleArgs Empty = new IoTRoleArgs();

    /**
     * Resource allocation
     * 
     */
    @InputImport(name="computeResource")
      private final @Nullable Output<ComputeResourceArgs> computeResource;

    public Output<ComputeResourceArgs> getComputeResource() {
        return this.computeResource == null ? Output.empty() : this.computeResource;
    }

    /**
     * The device name.
     * 
     */
    @InputImport(name="deviceName", required=true)
      private final Output<String> deviceName;

    public Output<String> getDeviceName() {
        return this.deviceName;
    }

    /**
     * Host OS supported by the IoT role.
     * 
     */
    @InputImport(name="hostPlatform", required=true)
      private final Output<Either<String,PlatformType>> hostPlatform;

    public Output<Either<String,PlatformType>> getHostPlatform() {
        return this.hostPlatform;
    }

    /**
     * IoT device metadata to which data box edge device needs to be connected.
     * 
     */
    @InputImport(name="ioTDeviceDetails", required=true)
      private final Output<IoTDeviceInfoArgs> ioTDeviceDetails;

    public Output<IoTDeviceInfoArgs> getIoTDeviceDetails() {
        return this.ioTDeviceDetails;
    }

    /**
     * Iot edge agent details to download the agent and bootstrap iot runtime.
     * 
     */
    @InputImport(name="ioTEdgeAgentInfo")
      private final @Nullable Output<IoTEdgeAgentInfoArgs> ioTEdgeAgentInfo;

    public Output<IoTEdgeAgentInfoArgs> getIoTEdgeAgentInfo() {
        return this.ioTEdgeAgentInfo == null ? Output.empty() : this.ioTEdgeAgentInfo;
    }

    /**
     * IoT edge device to which the IoT role needs to be configured.
     * 
     */
    @InputImport(name="ioTEdgeDeviceDetails", required=true)
      private final Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails;

    public Output<IoTDeviceInfoArgs> getIoTEdgeDeviceDetails() {
        return this.ioTEdgeDeviceDetails;
    }

    /**
     * Role type.
     * Expected value is 'IOT'.
     * 
     */
    @InputImport(name="kind", required=true)
      private final Output<String> kind;

    public Output<String> getKind() {
        return this.kind;
    }

    /**
     * The role name.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The resource group name.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Role status.
     * 
     */
    @InputImport(name="roleStatus", required=true)
      private final Output<Either<String,RoleStatus>> roleStatus;

    public Output<Either<String,RoleStatus>> getRoleStatus() {
        return this.roleStatus;
    }

    /**
     * Mount points of shares in role(s).
     * 
     */
    @InputImport(name="shareMappings")
      private final @Nullable Output<List<MountPointMapArgs>> shareMappings;

    public Output<List<MountPointMapArgs>> getShareMappings() {
        return this.shareMappings == null ? Output.empty() : this.shareMappings;
    }

    public IoTRoleArgs(
        @Nullable Output<ComputeResourceArgs> computeResource,
        Output<String> deviceName,
        Output<Either<String,PlatformType>> hostPlatform,
        Output<IoTDeviceInfoArgs> ioTDeviceDetails,
        @Nullable Output<IoTEdgeAgentInfoArgs> ioTEdgeAgentInfo,
        Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails,
        Output<String> kind,
        @Nullable Output<String> name,
        Output<String> resourceGroupName,
        Output<Either<String,RoleStatus>> roleStatus,
        @Nullable Output<List<MountPointMapArgs>> shareMappings) {
        this.computeResource = computeResource;
        this.deviceName = Objects.requireNonNull(deviceName, "expected parameter 'deviceName' to be non-null");
        this.hostPlatform = Objects.requireNonNull(hostPlatform, "expected parameter 'hostPlatform' to be non-null");
        this.ioTDeviceDetails = Objects.requireNonNull(ioTDeviceDetails, "expected parameter 'ioTDeviceDetails' to be non-null");
        this.ioTEdgeAgentInfo = ioTEdgeAgentInfo;
        this.ioTEdgeDeviceDetails = Objects.requireNonNull(ioTEdgeDeviceDetails, "expected parameter 'ioTEdgeDeviceDetails' to be non-null");
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.name = name;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.roleStatus = Objects.requireNonNull(roleStatus, "expected parameter 'roleStatus' to be non-null");
        this.shareMappings = shareMappings;
    }

    private IoTRoleArgs() {
        this.computeResource = Output.empty();
        this.deviceName = Output.empty();
        this.hostPlatform = Output.empty();
        this.ioTDeviceDetails = Output.empty();
        this.ioTEdgeAgentInfo = Output.empty();
        this.ioTEdgeDeviceDetails = Output.empty();
        this.kind = Output.empty();
        this.name = Output.empty();
        this.resourceGroupName = Output.empty();
        this.roleStatus = Output.empty();
        this.shareMappings = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IoTRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ComputeResourceArgs> computeResource;
        private Output<String> deviceName;
        private Output<Either<String,PlatformType>> hostPlatform;
        private Output<IoTDeviceInfoArgs> ioTDeviceDetails;
        private @Nullable Output<IoTEdgeAgentInfoArgs> ioTEdgeAgentInfo;
        private Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails;
        private Output<String> kind;
        private @Nullable Output<String> name;
        private Output<String> resourceGroupName;
        private Output<Either<String,RoleStatus>> roleStatus;
        private @Nullable Output<List<MountPointMapArgs>> shareMappings;

        public Builder() {
    	      // Empty
        }

        public Builder(IoTRoleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeResource = defaults.computeResource;
    	      this.deviceName = defaults.deviceName;
    	      this.hostPlatform = defaults.hostPlatform;
    	      this.ioTDeviceDetails = defaults.ioTDeviceDetails;
    	      this.ioTEdgeAgentInfo = defaults.ioTEdgeAgentInfo;
    	      this.ioTEdgeDeviceDetails = defaults.ioTEdgeDeviceDetails;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.roleStatus = defaults.roleStatus;
    	      this.shareMappings = defaults.shareMappings;
        }

        public Builder computeResource(@Nullable Output<ComputeResourceArgs> computeResource) {
            this.computeResource = computeResource;
            return this;
        }

        public Builder computeResource(@Nullable ComputeResourceArgs computeResource) {
            this.computeResource = Output.ofNullable(computeResource);
            return this;
        }

        public Builder deviceName(Output<String> deviceName) {
            this.deviceName = Objects.requireNonNull(deviceName);
            return this;
        }

        public Builder deviceName(String deviceName) {
            this.deviceName = Output.of(Objects.requireNonNull(deviceName));
            return this;
        }

        public Builder hostPlatform(Output<Either<String,PlatformType>> hostPlatform) {
            this.hostPlatform = Objects.requireNonNull(hostPlatform);
            return this;
        }

        public Builder hostPlatform(Either<String,PlatformType> hostPlatform) {
            this.hostPlatform = Output.of(Objects.requireNonNull(hostPlatform));
            return this;
        }

        public Builder ioTDeviceDetails(Output<IoTDeviceInfoArgs> ioTDeviceDetails) {
            this.ioTDeviceDetails = Objects.requireNonNull(ioTDeviceDetails);
            return this;
        }

        public Builder ioTDeviceDetails(IoTDeviceInfoArgs ioTDeviceDetails) {
            this.ioTDeviceDetails = Output.of(Objects.requireNonNull(ioTDeviceDetails));
            return this;
        }

        public Builder ioTEdgeAgentInfo(@Nullable Output<IoTEdgeAgentInfoArgs> ioTEdgeAgentInfo) {
            this.ioTEdgeAgentInfo = ioTEdgeAgentInfo;
            return this;
        }

        public Builder ioTEdgeAgentInfo(@Nullable IoTEdgeAgentInfoArgs ioTEdgeAgentInfo) {
            this.ioTEdgeAgentInfo = Output.ofNullable(ioTEdgeAgentInfo);
            return this;
        }

        public Builder ioTEdgeDeviceDetails(Output<IoTDeviceInfoArgs> ioTEdgeDeviceDetails) {
            this.ioTEdgeDeviceDetails = Objects.requireNonNull(ioTEdgeDeviceDetails);
            return this;
        }

        public Builder ioTEdgeDeviceDetails(IoTDeviceInfoArgs ioTEdgeDeviceDetails) {
            this.ioTEdgeDeviceDetails = Output.of(Objects.requireNonNull(ioTEdgeDeviceDetails));
            return this;
        }

        public Builder kind(Output<String> kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder kind(String kind) {
            this.kind = Output.of(Objects.requireNonNull(kind));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder roleStatus(Output<Either<String,RoleStatus>> roleStatus) {
            this.roleStatus = Objects.requireNonNull(roleStatus);
            return this;
        }

        public Builder roleStatus(Either<String,RoleStatus> roleStatus) {
            this.roleStatus = Output.of(Objects.requireNonNull(roleStatus));
            return this;
        }

        public Builder shareMappings(@Nullable Output<List<MountPointMapArgs>> shareMappings) {
            this.shareMappings = shareMappings;
            return this;
        }

        public Builder shareMappings(@Nullable List<MountPointMapArgs> shareMappings) {
            this.shareMappings = Output.ofNullable(shareMappings);
            return this;
        }
        public IoTRoleArgs build() {
            return new IoTRoleArgs(computeResource, deviceName, hostPlatform, ioTDeviceDetails, ioTEdgeAgentInfo, ioTEdgeDeviceDetails, kind, name, resourceGroupName, roleStatus, shareMappings);
        }
    }
}
