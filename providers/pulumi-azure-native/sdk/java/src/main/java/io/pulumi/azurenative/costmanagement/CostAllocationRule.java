// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.costmanagement;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.costmanagement.CostAllocationRuleArgs;
import io.pulumi.azurenative.costmanagement.outputs.CostAllocationRulePropertiesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The cost allocation rule model definition
API Version: 2020-03-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### CostAllocationRulesCreateResourceGroup
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var costAllocationRule = new AzureNative.CostManagement.CostAllocationRule("costAllocationRule", new AzureNative.CostManagement.CostAllocationRuleArgs
        {
            BillingAccountId = "100",
            Properties = new AzureNative.CostManagement.Inputs.CostAllocationRulePropertiesArgs
            {
                Description = "This is a testRule",
                Details = new AzureNative.CostManagement.Inputs.CostAllocationRuleDetailsArgs
                {
                    SourceResources = 
                    {
                        new AzureNative.CostManagement.Inputs.SourceCostAllocationResourceArgs
                        {
                            Name = "ResourceGroupName",
                            ResourceType = "Dimension",
                            Values = 
                            {
                                "sampleRG",
                                "secondRG",
                            },
                        },
                    },
                    TargetResources = 
                    {
                        new AzureNative.CostManagement.Inputs.TargetCostAllocationResourceArgs
                        {
                            Name = "ResourceGroupName",
                            PolicyType = "FixedProportion",
                            ResourceType = "Dimension",
                            Values = 
                            {
                                new AzureNative.CostManagement.Inputs.CostAllocationProportionArgs
                                {
                                    Name = "destinationRG",
                                    Percentage = 45,
                                },
                                new AzureNative.CostManagement.Inputs.CostAllocationProportionArgs
                                {
                                    Name = "destinationRG2",
                                    Percentage = 54,
                                },
                            },
                        },
                    },
                },
                Status = "Active",
            },
            RuleName = "testRule",
        });
    }

}

```

```go
package main

import (
	costmanagement "github.com/pulumi/pulumi-azure-native/sdk/go/azure/costmanagement"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := costmanagement.NewCostAllocationRule(ctx, "costAllocationRule", &costmanagement.CostAllocationRuleArgs{
			BillingAccountId: pulumi.String("100"),
			Properties: &costmanagement.CostAllocationRulePropertiesArgs{
				Description: pulumi.String("This is a testRule"),
				Details: &costmanagement.CostAllocationRuleDetailsArgs{
					SourceResources: costmanagement.SourceCostAllocationResourceArray{
						&costmanagement.SourceCostAllocationResourceArgs{
							Name:         pulumi.String("ResourceGroupName"),
							ResourceType: pulumi.String("Dimension"),
							Values: pulumi.StringArray{
								pulumi.String("sampleRG"),
								pulumi.String("secondRG"),
							},
						},
					},
					TargetResources: costmanagement.TargetCostAllocationResourceArray{
						&costmanagement.TargetCostAllocationResourceArgs{
							Name:         pulumi.String("ResourceGroupName"),
							PolicyType:   pulumi.String("FixedProportion"),
							ResourceType: pulumi.String("Dimension"),
							Values: costmanagement.CostAllocationProportionArray{
								&costmanagement.CostAllocationProportionArgs{
									Name:       pulumi.String("destinationRG"),
									Percentage: pulumi.Float64(45),
								},
								&costmanagement.CostAllocationProportionArgs{
									Name:       pulumi.String("destinationRG2"),
									Percentage: pulumi.Float64(54),
								},
							},
						},
					},
				},
				Status: pulumi.String("Active"),
			},
			RuleName: pulumi.String("testRule"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const costAllocationRule = new azure_native.costmanagement.CostAllocationRule("costAllocationRule", {
    billingAccountId: "100",
    properties: {
        description: "This is a testRule",
        details: {
            sourceResources: [{
                name: "ResourceGroupName",
                resourceType: "Dimension",
                values: [
                    "sampleRG",
                    "secondRG",
                ],
            }],
            targetResources: [{
                name: "ResourceGroupName",
                policyType: "FixedProportion",
                resourceType: "Dimension",
                values: [
                    {
                        name: "destinationRG",
                        percentage: 45,
                    },
                    {
                        name: "destinationRG2",
                        percentage: 54,
                    },
                ],
            }],
        },
        status: "Active",
    },
    ruleName: "testRule",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

cost_allocation_rule = azure_native.costmanagement.CostAllocationRule("costAllocationRule",
    billing_account_id="100",
    properties=azure_native.costmanagement.CostAllocationRulePropertiesArgs(
        description="This is a testRule",
        details=azure_native.costmanagement.CostAllocationRuleDetailsArgs(
            source_resources=[azure_native.costmanagement.SourceCostAllocationResourceArgs(
                name="ResourceGroupName",
                resource_type="Dimension",
                values=[
                    "sampleRG",
                    "secondRG",
                ],
            )],
            target_resources=[azure_native.costmanagement.TargetCostAllocationResourceArgs(
                name="ResourceGroupName",
                policy_type="FixedProportion",
                resource_type="Dimension",
                values=[
                    azure_native.costmanagement.CostAllocationProportionArgs(
                        name="destinationRG",
                        percentage=45,
                    ),
                    azure_native.costmanagement.CostAllocationProportionArgs(
                        name="destinationRG2",
                        percentage=54,
                    ),
                ],
            )],
        ),
        status="Active",
    ),
    rule_name="testRule")

```

{{% /example %}}
{{% example %}}
### CostAllocationRulesCreateTag
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var costAllocationRule = new AzureNative.CostManagement.CostAllocationRule("costAllocationRule", new AzureNative.CostManagement.CostAllocationRuleArgs
        {
            BillingAccountId = "100",
            Properties = new AzureNative.CostManagement.Inputs.CostAllocationRulePropertiesArgs
            {
                Description = "This is a testRule",
                Details = new AzureNative.CostManagement.Inputs.CostAllocationRuleDetailsArgs
                {
                    SourceResources = 
                    {
                        new AzureNative.CostManagement.Inputs.SourceCostAllocationResourceArgs
                        {
                            Name = "category",
                            ResourceType = "Tag",
                            Values = 
                            {
                                "devops",
                            },
                        },
                    },
                    TargetResources = 
                    {
                        new AzureNative.CostManagement.Inputs.TargetCostAllocationResourceArgs
                        {
                            Name = "ResourceGroupName",
                            PolicyType = "FixedProportion",
                            ResourceType = "Dimension",
                            Values = 
                            {
                                new AzureNative.CostManagement.Inputs.CostAllocationProportionArgs
                                {
                                    Name = "destinationRG",
                                    Percentage = 33.33,
                                },
                                new AzureNative.CostManagement.Inputs.CostAllocationProportionArgs
                                {
                                    Name = "destinationRG2",
                                    Percentage = 33.33,
                                },
                                new AzureNative.CostManagement.Inputs.CostAllocationProportionArgs
                                {
                                    Name = "destinationRG3",
                                    Percentage = 33.34,
                                },
                            },
                        },
                    },
                },
                Status = "Active",
            },
            RuleName = "testRule",
        });
    }

}

```

```go
package main

import (
	costmanagement "github.com/pulumi/pulumi-azure-native/sdk/go/azure/costmanagement"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := costmanagement.NewCostAllocationRule(ctx, "costAllocationRule", &costmanagement.CostAllocationRuleArgs{
			BillingAccountId: pulumi.String("100"),
			Properties: &costmanagement.CostAllocationRulePropertiesArgs{
				Description: pulumi.String("This is a testRule"),
				Details: &costmanagement.CostAllocationRuleDetailsArgs{
					SourceResources: costmanagement.SourceCostAllocationResourceArray{
						&costmanagement.SourceCostAllocationResourceArgs{
							Name:         pulumi.String("category"),
							ResourceType: pulumi.String("Tag"),
							Values: pulumi.StringArray{
								pulumi.String("devops"),
							},
						},
					},
					TargetResources: costmanagement.TargetCostAllocationResourceArray{
						&costmanagement.TargetCostAllocationResourceArgs{
							Name:         pulumi.String("ResourceGroupName"),
							PolicyType:   pulumi.String("FixedProportion"),
							ResourceType: pulumi.String("Dimension"),
							Values: costmanagement.CostAllocationProportionArray{
								&costmanagement.CostAllocationProportionArgs{
									Name:       pulumi.String("destinationRG"),
									Percentage: pulumi.Float64(33.33),
								},
								&costmanagement.CostAllocationProportionArgs{
									Name:       pulumi.String("destinationRG2"),
									Percentage: pulumi.Float64(33.33),
								},
								&costmanagement.CostAllocationProportionArgs{
									Name:       pulumi.String("destinationRG3"),
									Percentage: pulumi.Float64(33.34),
								},
							},
						},
					},
				},
				Status: pulumi.String("Active"),
			},
			RuleName: pulumi.String("testRule"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const costAllocationRule = new azure_native.costmanagement.CostAllocationRule("costAllocationRule", {
    billingAccountId: "100",
    properties: {
        description: "This is a testRule",
        details: {
            sourceResources: [{
                name: "category",
                resourceType: "Tag",
                values: ["devops"],
            }],
            targetResources: [{
                name: "ResourceGroupName",
                policyType: "FixedProportion",
                resourceType: "Dimension",
                values: [
                    {
                        name: "destinationRG",
                        percentage: 33.33,
                    },
                    {
                        name: "destinationRG2",
                        percentage: 33.33,
                    },
                    {
                        name: "destinationRG3",
                        percentage: 33.34,
                    },
                ],
            }],
        },
        status: "Active",
    },
    ruleName: "testRule",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

cost_allocation_rule = azure_native.costmanagement.CostAllocationRule("costAllocationRule",
    billing_account_id="100",
    properties=azure_native.costmanagement.CostAllocationRulePropertiesArgs(
        description="This is a testRule",
        details=azure_native.costmanagement.CostAllocationRuleDetailsArgs(
            source_resources=[azure_native.costmanagement.SourceCostAllocationResourceArgs(
                name="category",
                resource_type="Tag",
                values=["devops"],
            )],
            target_resources=[azure_native.costmanagement.TargetCostAllocationResourceArgs(
                name="ResourceGroupName",
                policy_type="FixedProportion",
                resource_type="Dimension",
                values=[
                    azure_native.costmanagement.CostAllocationProportionArgs(
                        name="destinationRG",
                        percentage=33.33,
                    ),
                    azure_native.costmanagement.CostAllocationProportionArgs(
                        name="destinationRG2",
                        percentage=33.33,
                    ),
                    azure_native.costmanagement.CostAllocationProportionArgs(
                        name="destinationRG3",
                        percentage=33.34,
                    ),
                ],
            )],
        ),
        status="Active",
    ),
    rule_name="testRule")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:costmanagement:CostAllocationRule testRule providers/Microsoft.Billing/billingAccounts/100/providers/Microsoft.CostManagement/costAllocationRules/testRule 
```

 */
@ResourceType(type="azure-native:costmanagement:CostAllocationRule")
public class CostAllocationRule extends io.pulumi.resources.CustomResource {
    /**
     * Name of the rule. This is a read only value.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the rule. This is a read only value.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Cost allocation rule properties
     */
    @OutputExport(name="properties", type=CostAllocationRulePropertiesResponse.class, parameters={})
    private Output<CostAllocationRulePropertiesResponse> properties;

    /**
     * @return Cost allocation rule properties
     */
    public Output<CostAllocationRulePropertiesResponse> getProperties() {
        return this.properties;
    }
    /**
     * Resource type of the rule. This is a read only value of Microsoft.CostManagement/CostAllocationRule.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type of the rule. This is a read only value of Microsoft.CostManagement/CostAllocationRule.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CostAllocationRule(String name, CostAllocationRuleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:costmanagement:CostAllocationRule", name, args == null ? CostAllocationRuleArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private CostAllocationRule(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:costmanagement:CostAllocationRule", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:costmanagement/v20200301preview:CostAllocationRule").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CostAllocationRule get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new CostAllocationRule(name, id, options);
    }
}
