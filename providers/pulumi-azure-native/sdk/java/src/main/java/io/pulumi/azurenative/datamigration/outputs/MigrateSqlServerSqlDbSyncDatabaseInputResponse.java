// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class MigrateSqlServerSqlDbSyncDatabaseInputResponse {
    private final @Nullable String id;
    private final @Nullable Map<String,String> migrationSetting;
    private final @Nullable String name;
    private final @Nullable String schemaName;
    private final @Nullable Map<String,String> sourceSetting;
    private final @Nullable Map<String,String> tableMap;
    private final @Nullable String targetDatabaseName;
    private final @Nullable Map<String,String> targetSetting;

    @OutputCustomType.Constructor({"id","migrationSetting","name","schemaName","sourceSetting","tableMap","targetDatabaseName","targetSetting"})
    private MigrateSqlServerSqlDbSyncDatabaseInputResponse(
        @Nullable String id,
        @Nullable Map<String,String> migrationSetting,
        @Nullable String name,
        @Nullable String schemaName,
        @Nullable Map<String,String> sourceSetting,
        @Nullable Map<String,String> tableMap,
        @Nullable String targetDatabaseName,
        @Nullable Map<String,String> targetSetting) {
        this.id = id;
        this.migrationSetting = migrationSetting;
        this.name = name;
        this.schemaName = schemaName;
        this.sourceSetting = sourceSetting;
        this.tableMap = tableMap;
        this.targetDatabaseName = targetDatabaseName;
        this.targetSetting = targetSetting;
    }

    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public Map<String,String> getMigrationSetting() {
        return this.migrationSetting == null ? Map.of() : this.migrationSetting;
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> getSchemaName() {
        return Optional.ofNullable(this.schemaName);
    }
    public Map<String,String> getSourceSetting() {
        return this.sourceSetting == null ? Map.of() : this.sourceSetting;
    }
    public Map<String,String> getTableMap() {
        return this.tableMap == null ? Map.of() : this.tableMap;
    }
    public Optional<String> getTargetDatabaseName() {
        return Optional.ofNullable(this.targetDatabaseName);
    }
    public Map<String,String> getTargetSetting() {
        return this.targetSetting == null ? Map.of() : this.targetSetting;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateSqlServerSqlDbSyncDatabaseInputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String id;
        private @Nullable Map<String,String> migrationSetting;
        private @Nullable String name;
        private @Nullable String schemaName;
        private @Nullable Map<String,String> sourceSetting;
        private @Nullable Map<String,String> tableMap;
        private @Nullable String targetDatabaseName;
        private @Nullable Map<String,String> targetSetting;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrateSqlServerSqlDbSyncDatabaseInputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.migrationSetting = defaults.migrationSetting;
    	      this.name = defaults.name;
    	      this.schemaName = defaults.schemaName;
    	      this.sourceSetting = defaults.sourceSetting;
    	      this.tableMap = defaults.tableMap;
    	      this.targetDatabaseName = defaults.targetDatabaseName;
    	      this.targetSetting = defaults.targetSetting;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setMigrationSetting(@Nullable Map<String,String> migrationSetting) {
            this.migrationSetting = migrationSetting;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setSchemaName(@Nullable String schemaName) {
            this.schemaName = schemaName;
            return this;
        }

        public Builder setSourceSetting(@Nullable Map<String,String> sourceSetting) {
            this.sourceSetting = sourceSetting;
            return this;
        }

        public Builder setTableMap(@Nullable Map<String,String> tableMap) {
            this.tableMap = tableMap;
            return this;
        }

        public Builder setTargetDatabaseName(@Nullable String targetDatabaseName) {
            this.targetDatabaseName = targetDatabaseName;
            return this;
        }

        public Builder setTargetSetting(@Nullable Map<String,String> targetSetting) {
            this.targetSetting = targetSetting;
            return this;
        }

        public MigrateSqlServerSqlDbSyncDatabaseInputResponse build() {
            return new MigrateSqlServerSqlDbSyncDatabaseInputResponse(id, migrationSetting, name, schemaName, sourceSetting, tableMap, targetDatabaseName, targetSetting);
        }
    }
}
