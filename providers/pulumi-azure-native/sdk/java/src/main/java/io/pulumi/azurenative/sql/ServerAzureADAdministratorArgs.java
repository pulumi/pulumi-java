// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.sql.enums.AdministratorType;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServerAzureADAdministratorArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServerAzureADAdministratorArgs Empty = new ServerAzureADAdministratorArgs();

    /**
     * The name of server active directory administrator.
     * 
     */
    @InputImport(name="administratorName")
      private final @Nullable Input<String> administratorName;

    public Input<String> getAdministratorName() {
        return this.administratorName == null ? Input.empty() : this.administratorName;
    }

    /**
     * Type of the sever administrator.
     * 
     */
    @InputImport(name="administratorType", required=true)
      private final Input<Either<String,AdministratorType>> administratorType;

    public Input<Either<String,AdministratorType>> getAdministratorType() {
        return this.administratorType;
    }

    /**
     * Login name of the server administrator.
     * 
     */
    @InputImport(name="login", required=true)
      private final Input<String> login;

    public Input<String> getLogin() {
        return this.login;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @InputImport(name="serverName", required=true)
      private final Input<String> serverName;

    public Input<String> getServerName() {
        return this.serverName;
    }

    /**
     * SID (object ID) of the server administrator.
     * 
     */
    @InputImport(name="sid", required=true)
      private final Input<String> sid;

    public Input<String> getSid() {
        return this.sid;
    }

    /**
     * Tenant ID of the administrator.
     * 
     */
    @InputImport(name="tenantId")
      private final @Nullable Input<String> tenantId;

    public Input<String> getTenantId() {
        return this.tenantId == null ? Input.empty() : this.tenantId;
    }

    public ServerAzureADAdministratorArgs(
        @Nullable Input<String> administratorName,
        Input<Either<String,AdministratorType>> administratorType,
        Input<String> login,
        Input<String> resourceGroupName,
        Input<String> serverName,
        Input<String> sid,
        @Nullable Input<String> tenantId) {
        this.administratorName = administratorName;
        this.administratorType = Objects.requireNonNull(administratorType, "expected parameter 'administratorType' to be non-null");
        this.login = Objects.requireNonNull(login, "expected parameter 'login' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serverName = Objects.requireNonNull(serverName, "expected parameter 'serverName' to be non-null");
        this.sid = Objects.requireNonNull(sid, "expected parameter 'sid' to be non-null");
        this.tenantId = tenantId;
    }

    private ServerAzureADAdministratorArgs() {
        this.administratorName = Input.empty();
        this.administratorType = Input.empty();
        this.login = Input.empty();
        this.resourceGroupName = Input.empty();
        this.serverName = Input.empty();
        this.sid = Input.empty();
        this.tenantId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerAzureADAdministratorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> administratorName;
        private Input<Either<String,AdministratorType>> administratorType;
        private Input<String> login;
        private Input<String> resourceGroupName;
        private Input<String> serverName;
        private Input<String> sid;
        private @Nullable Input<String> tenantId;

        public Builder() {
    	      // Empty
        }

        public Builder(ServerAzureADAdministratorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administratorName = defaults.administratorName;
    	      this.administratorType = defaults.administratorType;
    	      this.login = defaults.login;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serverName = defaults.serverName;
    	      this.sid = defaults.sid;
    	      this.tenantId = defaults.tenantId;
        }

        public Builder administratorName(@Nullable Input<String> administratorName) {
            this.administratorName = administratorName;
            return this;
        }

        public Builder administratorName(@Nullable String administratorName) {
            this.administratorName = Input.ofNullable(administratorName);
            return this;
        }

        public Builder administratorType(Input<Either<String,AdministratorType>> administratorType) {
            this.administratorType = Objects.requireNonNull(administratorType);
            return this;
        }

        public Builder administratorType(Either<String,AdministratorType> administratorType) {
            this.administratorType = Input.of(Objects.requireNonNull(administratorType));
            return this;
        }

        public Builder login(Input<String> login) {
            this.login = Objects.requireNonNull(login);
            return this;
        }

        public Builder login(String login) {
            this.login = Input.of(Objects.requireNonNull(login));
            return this;
        }

        public Builder resourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder serverName(Input<String> serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }

        public Builder serverName(String serverName) {
            this.serverName = Input.of(Objects.requireNonNull(serverName));
            return this;
        }

        public Builder sid(Input<String> sid) {
            this.sid = Objects.requireNonNull(sid);
            return this;
        }

        public Builder sid(String sid) {
            this.sid = Input.of(Objects.requireNonNull(sid));
            return this;
        }

        public Builder tenantId(@Nullable Input<String> tenantId) {
            this.tenantId = tenantId;
            return this;
        }

        public Builder tenantId(@Nullable String tenantId) {
            this.tenantId = Input.ofNullable(tenantId);
            return this;
        }
        public ServerAzureADAdministratorArgs build() {
            return new ServerAzureADAdministratorArgs(administratorName, administratorType, login, resourceGroupName, serverName, sid, tenantId);
        }
    }
}
