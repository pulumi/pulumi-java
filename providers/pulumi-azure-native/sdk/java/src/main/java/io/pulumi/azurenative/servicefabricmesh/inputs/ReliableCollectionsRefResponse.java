// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabricmesh.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifying this parameter adds support for reliable collections
 * 
 */
public final class ReliableCollectionsRefResponse extends io.pulumi.resources.InvokeArgs {

    public static final ReliableCollectionsRefResponse Empty = new ReliableCollectionsRefResponse();

    /**
     * False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache.
     * 
     */
    @Import(name="doNotPersistState")
      private final @Nullable Boolean doNotPersistState;

    public Optional<Boolean> getDoNotPersistState() {
        return this.doNotPersistState == null ? Optional.empty() : Optional.ofNullable(this.doNotPersistState);
    }

    /**
     * Name of ReliableCollection resource. Right now it's not used and you can use any string.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    public ReliableCollectionsRefResponse(
        @Nullable Boolean doNotPersistState,
        String name) {
        this.doNotPersistState = doNotPersistState;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private ReliableCollectionsRefResponse() {
        this.doNotPersistState = null;
        this.name = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReliableCollectionsRefResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean doNotPersistState;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(ReliableCollectionsRefResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.doNotPersistState = defaults.doNotPersistState;
    	      this.name = defaults.name;
        }

        public Builder doNotPersistState(@Nullable Boolean doNotPersistState) {
            this.doNotPersistState = doNotPersistState;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public ReliableCollectionsRefResponse build() {
            return new ReliableCollectionsRefResponse(doNotPersistState, name);
        }
    }
}
