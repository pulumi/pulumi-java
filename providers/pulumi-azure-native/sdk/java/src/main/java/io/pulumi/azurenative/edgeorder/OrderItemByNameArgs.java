// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.edgeorder;

import io.pulumi.azurenative.edgeorder.inputs.AddressDetailsArgs;
import io.pulumi.azurenative.edgeorder.inputs.OrderItemDetailsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrderItemByNameArgs extends io.pulumi.resources.ResourceArgs {

    public static final OrderItemByNameArgs Empty = new OrderItemByNameArgs();

    @InputImport(name="addressDetails", required=true)
    private final Input<AddressDetailsArgs> addressDetails;

    public Input<AddressDetailsArgs> getAddressDetails() {
        return this.addressDetails;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="orderId", required=true)
    private final Input<String> orderId;

    public Input<String> getOrderId() {
        return this.orderId;
    }

    @InputImport(name="orderItemDetails", required=true)
    private final Input<OrderItemDetailsArgs> orderItemDetails;

    public Input<OrderItemDetailsArgs> getOrderItemDetails() {
        return this.orderItemDetails;
    }

    @InputImport(name="orderItemName")
    private final @Nullable Input<String> orderItemName;

    public Input<String> getOrderItemName() {
        return this.orderItemName == null ? Input.empty() : this.orderItemName;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public OrderItemByNameArgs(
        Input<AddressDetailsArgs> addressDetails,
        @Nullable Input<String> location,
        Input<String> orderId,
        Input<OrderItemDetailsArgs> orderItemDetails,
        @Nullable Input<String> orderItemName,
        Input<String> resourceGroupName,
        @Nullable Input<Map<String,String>> tags) {
        this.addressDetails = Objects.requireNonNull(addressDetails, "expected parameter 'addressDetails' to be non-null");
        this.location = location;
        this.orderId = Objects.requireNonNull(orderId, "expected parameter 'orderId' to be non-null");
        this.orderItemDetails = Objects.requireNonNull(orderItemDetails, "expected parameter 'orderItemDetails' to be non-null");
        this.orderItemName = orderItemName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private OrderItemByNameArgs() {
        this.addressDetails = Input.empty();
        this.location = Input.empty();
        this.orderId = Input.empty();
        this.orderItemDetails = Input.empty();
        this.orderItemName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrderItemByNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<AddressDetailsArgs> addressDetails;
        private @Nullable Input<String> location;
        private Input<String> orderId;
        private Input<OrderItemDetailsArgs> orderItemDetails;
        private @Nullable Input<String> orderItemName;
        private Input<String> resourceGroupName;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(OrderItemByNameArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressDetails = defaults.addressDetails;
    	      this.location = defaults.location;
    	      this.orderId = defaults.orderId;
    	      this.orderItemDetails = defaults.orderItemDetails;
    	      this.orderItemName = defaults.orderItemName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder setAddressDetails(Input<AddressDetailsArgs> addressDetails) {
            this.addressDetails = Objects.requireNonNull(addressDetails);
            return this;
        }

        public Builder setAddressDetails(AddressDetailsArgs addressDetails) {
            this.addressDetails = Input.of(Objects.requireNonNull(addressDetails));
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setOrderId(Input<String> orderId) {
            this.orderId = Objects.requireNonNull(orderId);
            return this;
        }

        public Builder setOrderId(String orderId) {
            this.orderId = Input.of(Objects.requireNonNull(orderId));
            return this;
        }

        public Builder setOrderItemDetails(Input<OrderItemDetailsArgs> orderItemDetails) {
            this.orderItemDetails = Objects.requireNonNull(orderItemDetails);
            return this;
        }

        public Builder setOrderItemDetails(OrderItemDetailsArgs orderItemDetails) {
            this.orderItemDetails = Input.of(Objects.requireNonNull(orderItemDetails));
            return this;
        }

        public Builder setOrderItemName(@Nullable Input<String> orderItemName) {
            this.orderItemName = orderItemName;
            return this;
        }

        public Builder setOrderItemName(@Nullable String orderItemName) {
            this.orderItemName = Input.ofNullable(orderItemName);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public OrderItemByNameArgs build() {
            return new OrderItemByNameArgs(addressDetails, location, orderId, orderItemDetails, orderItemName, resourceGroupName, tags);
        }
    }
}
