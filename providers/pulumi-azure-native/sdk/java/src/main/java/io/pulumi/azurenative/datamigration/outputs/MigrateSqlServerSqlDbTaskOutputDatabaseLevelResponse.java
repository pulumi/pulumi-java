// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.azurenative.datamigration.outputs.DataItemMigrationSummaryResultResponse;
import io.pulumi.azurenative.datamigration.outputs.ReportableExceptionResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse {
    /**
     * Name of the item
     * 
     */
    private final String databaseName;
    /**
     * Migration end time
     * 
     */
    private final String endedOn;
    /**
     * Number of database/object errors.
     * 
     */
    private final Double errorCount;
    /**
     * Wildcard string prefix to use for querying all errors of the item
     * 
     */
    private final String errorPrefix;
    /**
     * Migration exceptions and warnings.
     * 
     */
    private final List<ReportableExceptionResponse> exceptionsAndWarnings;
    /**
     * Result identifier
     * 
     */
    private final String id;
    /**
     * Migration progress message
     * 
     */
    private final String message;
    /**
     * Number of objects
     * 
     */
    private final Double numberOfObjects;
    /**
     * Number of successfully completed objects
     * 
     */
    private final Double numberOfObjectsCompleted;
    /**
     * Summary of object results in the migration
     * 
     */
    private final Map<String,DataItemMigrationSummaryResultResponse> objectSummary;
    /**
     * Wildcard string prefix to use for querying all sub-tem results of the item
     * 
     */
    private final String resultPrefix;
    /**
     * Result type
     * Expected value is 'DatabaseLevelOutput'.
     * 
     */
    private final String resultType;
    /**
     * Migration stage that this database is in
     * 
     */
    private final String stage;
    /**
     * Migration start time
     * 
     */
    private final String startedOn;
    /**
     * Current state of migration
     * 
     */
    private final String state;
    /**
     * Status message
     * 
     */
    private final String statusMessage;

    @OutputCustomType.Constructor
    private MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse(
        @OutputCustomType.Parameter("databaseName") String databaseName,
        @OutputCustomType.Parameter("endedOn") String endedOn,
        @OutputCustomType.Parameter("errorCount") Double errorCount,
        @OutputCustomType.Parameter("errorPrefix") String errorPrefix,
        @OutputCustomType.Parameter("exceptionsAndWarnings") List<ReportableExceptionResponse> exceptionsAndWarnings,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("message") String message,
        @OutputCustomType.Parameter("numberOfObjects") Double numberOfObjects,
        @OutputCustomType.Parameter("numberOfObjectsCompleted") Double numberOfObjectsCompleted,
        @OutputCustomType.Parameter("objectSummary") Map<String,DataItemMigrationSummaryResultResponse> objectSummary,
        @OutputCustomType.Parameter("resultPrefix") String resultPrefix,
        @OutputCustomType.Parameter("resultType") String resultType,
        @OutputCustomType.Parameter("stage") String stage,
        @OutputCustomType.Parameter("startedOn") String startedOn,
        @OutputCustomType.Parameter("state") String state,
        @OutputCustomType.Parameter("statusMessage") String statusMessage) {
        this.databaseName = databaseName;
        this.endedOn = endedOn;
        this.errorCount = errorCount;
        this.errorPrefix = errorPrefix;
        this.exceptionsAndWarnings = exceptionsAndWarnings;
        this.id = id;
        this.message = message;
        this.numberOfObjects = numberOfObjects;
        this.numberOfObjectsCompleted = numberOfObjectsCompleted;
        this.objectSummary = objectSummary;
        this.resultPrefix = resultPrefix;
        this.resultType = resultType;
        this.stage = stage;
        this.startedOn = startedOn;
        this.state = state;
        this.statusMessage = statusMessage;
    }

    /**
     * Name of the item
     * 
    */
    public String getDatabaseName() {
        return this.databaseName;
    }
    /**
     * Migration end time
     * 
    */
    public String getEndedOn() {
        return this.endedOn;
    }
    /**
     * Number of database/object errors.
     * 
    */
    public Double getErrorCount() {
        return this.errorCount;
    }
    /**
     * Wildcard string prefix to use for querying all errors of the item
     * 
    */
    public String getErrorPrefix() {
        return this.errorPrefix;
    }
    /**
     * Migration exceptions and warnings.
     * 
    */
    public List<ReportableExceptionResponse> getExceptionsAndWarnings() {
        return this.exceptionsAndWarnings;
    }
    /**
     * Result identifier
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Migration progress message
     * 
    */
    public String getMessage() {
        return this.message;
    }
    /**
     * Number of objects
     * 
    */
    public Double getNumberOfObjects() {
        return this.numberOfObjects;
    }
    /**
     * Number of successfully completed objects
     * 
    */
    public Double getNumberOfObjectsCompleted() {
        return this.numberOfObjectsCompleted;
    }
    /**
     * Summary of object results in the migration
     * 
    */
    public Map<String,DataItemMigrationSummaryResultResponse> getObjectSummary() {
        return this.objectSummary;
    }
    /**
     * Wildcard string prefix to use for querying all sub-tem results of the item
     * 
    */
    public String getResultPrefix() {
        return this.resultPrefix;
    }
    /**
     * Result type
     * Expected value is 'DatabaseLevelOutput'.
     * 
    */
    public String getResultType() {
        return this.resultType;
    }
    /**
     * Migration stage that this database is in
     * 
    */
    public String getStage() {
        return this.stage;
    }
    /**
     * Migration start time
     * 
    */
    public String getStartedOn() {
        return this.startedOn;
    }
    /**
     * Current state of migration
     * 
    */
    public String getState() {
        return this.state;
    }
    /**
     * Status message
     * 
    */
    public String getStatusMessage() {
        return this.statusMessage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String databaseName;
        private String endedOn;
        private Double errorCount;
        private String errorPrefix;
        private List<ReportableExceptionResponse> exceptionsAndWarnings;
        private String id;
        private String message;
        private Double numberOfObjects;
        private Double numberOfObjectsCompleted;
        private Map<String,DataItemMigrationSummaryResultResponse> objectSummary;
        private String resultPrefix;
        private String resultType;
        private String stage;
        private String startedOn;
        private String state;
        private String statusMessage;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.endedOn = defaults.endedOn;
    	      this.errorCount = defaults.errorCount;
    	      this.errorPrefix = defaults.errorPrefix;
    	      this.exceptionsAndWarnings = defaults.exceptionsAndWarnings;
    	      this.id = defaults.id;
    	      this.message = defaults.message;
    	      this.numberOfObjects = defaults.numberOfObjects;
    	      this.numberOfObjectsCompleted = defaults.numberOfObjectsCompleted;
    	      this.objectSummary = defaults.objectSummary;
    	      this.resultPrefix = defaults.resultPrefix;
    	      this.resultType = defaults.resultType;
    	      this.stage = defaults.stage;
    	      this.startedOn = defaults.startedOn;
    	      this.state = defaults.state;
    	      this.statusMessage = defaults.statusMessage;
        }

        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }

        public Builder endedOn(String endedOn) {
            this.endedOn = Objects.requireNonNull(endedOn);
            return this;
        }

        public Builder errorCount(Double errorCount) {
            this.errorCount = Objects.requireNonNull(errorCount);
            return this;
        }

        public Builder errorPrefix(String errorPrefix) {
            this.errorPrefix = Objects.requireNonNull(errorPrefix);
            return this;
        }

        public Builder exceptionsAndWarnings(List<ReportableExceptionResponse> exceptionsAndWarnings) {
            this.exceptionsAndWarnings = Objects.requireNonNull(exceptionsAndWarnings);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder message(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }

        public Builder numberOfObjects(Double numberOfObjects) {
            this.numberOfObjects = Objects.requireNonNull(numberOfObjects);
            return this;
        }

        public Builder numberOfObjectsCompleted(Double numberOfObjectsCompleted) {
            this.numberOfObjectsCompleted = Objects.requireNonNull(numberOfObjectsCompleted);
            return this;
        }

        public Builder objectSummary(Map<String,DataItemMigrationSummaryResultResponse> objectSummary) {
            this.objectSummary = Objects.requireNonNull(objectSummary);
            return this;
        }

        public Builder resultPrefix(String resultPrefix) {
            this.resultPrefix = Objects.requireNonNull(resultPrefix);
            return this;
        }

        public Builder resultType(String resultType) {
            this.resultType = Objects.requireNonNull(resultType);
            return this;
        }

        public Builder stage(String stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }

        public Builder startedOn(String startedOn) {
            this.startedOn = Objects.requireNonNull(startedOn);
            return this;
        }

        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder statusMessage(String statusMessage) {
            this.statusMessage = Objects.requireNonNull(statusMessage);
            return this;
        }
        public MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse build() {
            return new MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse(databaseName, endedOn, errorCount, errorPrefix, exceptionsAndWarnings, id, message, numberOfObjects, numberOfObjectsCompleted, objectSummary, resultPrefix, resultType, stage, startedOn, state, statusMessage);
        }
    }
}
