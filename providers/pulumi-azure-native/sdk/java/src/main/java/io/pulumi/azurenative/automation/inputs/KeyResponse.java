// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.automation.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Automation key which is used to register a DSC Node
 * 
 */
public final class KeyResponse extends io.pulumi.resources.InvokeArgs {

    public static final KeyResponse Empty = new KeyResponse();

    /**
     * Automation key name.
     * 
     */
    @InputImport(name="keyName", required=true)
        private final String keyName;

    public String getKeyName() {
        return this.keyName;
    }

    /**
     * Automation key permissions.
     * 
     */
    @InputImport(name="permissions", required=true)
        private final String permissions;

    public String getPermissions() {
        return this.permissions;
    }

    /**
     * Value of the Automation Key used for registration.
     * 
     */
    @InputImport(name="value", required=true)
        private final String value;

    public String getValue() {
        return this.value;
    }

    public KeyResponse(
        String keyName,
        String permissions,
        String value) {
        this.keyName = Objects.requireNonNull(keyName, "expected parameter 'keyName' to be non-null");
        this.permissions = Objects.requireNonNull(permissions, "expected parameter 'permissions' to be non-null");
        this.value = Objects.requireNonNull(value, "expected parameter 'value' to be non-null");
    }

    private KeyResponse() {
        this.keyName = null;
        this.permissions = null;
        this.value = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String keyName;
        private String permissions;
        private String value;

        public Builder() {
    	      // Empty
        }

        public Builder(KeyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyName = defaults.keyName;
    	      this.permissions = defaults.permissions;
    	      this.value = defaults.value;
        }

        public Builder setKeyName(String keyName) {
            this.keyName = Objects.requireNonNull(keyName);
            return this;
        }

        public Builder setPermissions(String permissions) {
            this.permissions = Objects.requireNonNull(permissions);
            return this;
        }

        public Builder setValue(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public KeyResponse build() {
            return new KeyResponse(keyName, permissions, value);
        }
    }
}
