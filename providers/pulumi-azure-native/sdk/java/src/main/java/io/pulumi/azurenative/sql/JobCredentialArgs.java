// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobCredentialArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobCredentialArgs Empty = new JobCredentialArgs();

    /**
     * The name of the credential.
     * 
     */
    @Import(name="credentialName")
      private final @Nullable Output<String> credentialName;

    public Output<String> getCredentialName() {
        return this.credentialName == null ? Output.empty() : this.credentialName;
    }

    /**
     * The name of the job agent.
     * 
     */
    @Import(name="jobAgentName", required=true)
      private final Output<String> jobAgentName;

    public Output<String> getJobAgentName() {
        return this.jobAgentName;
    }

    /**
     * The credential password.
     * 
     */
    @Import(name="password", required=true)
      private final Output<String> password;

    public Output<String> getPassword() {
        return this.password;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @Import(name="serverName", required=true)
      private final Output<String> serverName;

    public Output<String> getServerName() {
        return this.serverName;
    }

    /**
     * The credential user name.
     * 
     */
    @Import(name="username", required=true)
      private final Output<String> username;

    public Output<String> getUsername() {
        return this.username;
    }

    public JobCredentialArgs(
        @Nullable Output<String> credentialName,
        Output<String> jobAgentName,
        Output<String> password,
        Output<String> resourceGroupName,
        Output<String> serverName,
        Output<String> username) {
        this.credentialName = credentialName;
        this.jobAgentName = Objects.requireNonNull(jobAgentName, "expected parameter 'jobAgentName' to be non-null");
        this.password = Objects.requireNonNull(password, "expected parameter 'password' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serverName = Objects.requireNonNull(serverName, "expected parameter 'serverName' to be non-null");
        this.username = Objects.requireNonNull(username, "expected parameter 'username' to be non-null");
    }

    private JobCredentialArgs() {
        this.credentialName = Output.empty();
        this.jobAgentName = Output.empty();
        this.password = Output.empty();
        this.resourceGroupName = Output.empty();
        this.serverName = Output.empty();
        this.username = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> credentialName;
        private Output<String> jobAgentName;
        private Output<String> password;
        private Output<String> resourceGroupName;
        private Output<String> serverName;
        private Output<String> username;

        public Builder() {
    	      // Empty
        }

        public Builder(JobCredentialArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentialName = defaults.credentialName;
    	      this.jobAgentName = defaults.jobAgentName;
    	      this.password = defaults.password;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serverName = defaults.serverName;
    	      this.username = defaults.username;
        }

        public Builder credentialName(@Nullable Output<String> credentialName) {
            this.credentialName = credentialName;
            return this;
        }

        public Builder credentialName(@Nullable String credentialName) {
            this.credentialName = Output.ofNullable(credentialName);
            return this;
        }

        public Builder jobAgentName(Output<String> jobAgentName) {
            this.jobAgentName = Objects.requireNonNull(jobAgentName);
            return this;
        }

        public Builder jobAgentName(String jobAgentName) {
            this.jobAgentName = Output.of(Objects.requireNonNull(jobAgentName));
            return this;
        }

        public Builder password(Output<String> password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }

        public Builder password(String password) {
            this.password = Output.of(Objects.requireNonNull(password));
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder serverName(Output<String> serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }

        public Builder serverName(String serverName) {
            this.serverName = Output.of(Objects.requireNonNull(serverName));
            return this;
        }

        public Builder username(Output<String> username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }

        public Builder username(String username) {
            this.username = Output.of(Objects.requireNonNull(username));
            return this;
        }
        public JobCredentialArgs build() {
            return new JobCredentialArgs(credentialName, jobAgentName, password, resourceGroupName, serverName, username);
        }
    }
}
