// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devtestlab.inputs;

import io.pulumi.azurenative.devtestlab.inputs.SharedPublicIpAddressConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Properties of a network interface.
 * 
 */
public final class NetworkInterfacePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkInterfacePropertiesArgs Empty = new NetworkInterfacePropertiesArgs();

    /**
     * The DNS name.
     * 
     */
    @Import(name="dnsName")
      private final @Nullable Output<String> dnsName;

    public Output<String> getDnsName() {
        return this.dnsName == null ? Output.empty() : this.dnsName;
    }

    /**
     * The private IP address.
     * 
     */
    @Import(name="privateIpAddress")
      private final @Nullable Output<String> privateIpAddress;

    public Output<String> getPrivateIpAddress() {
        return this.privateIpAddress == null ? Output.empty() : this.privateIpAddress;
    }

    /**
     * The public IP address.
     * 
     */
    @Import(name="publicIpAddress")
      private final @Nullable Output<String> publicIpAddress;

    public Output<String> getPublicIpAddress() {
        return this.publicIpAddress == null ? Output.empty() : this.publicIpAddress;
    }

    /**
     * The resource ID of the public IP address.
     * 
     */
    @Import(name="publicIpAddressId")
      private final @Nullable Output<String> publicIpAddressId;

    public Output<String> getPublicIpAddressId() {
        return this.publicIpAddressId == null ? Output.empty() : this.publicIpAddressId;
    }

    /**
     * The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
     * 
     */
    @Import(name="rdpAuthority")
      private final @Nullable Output<String> rdpAuthority;

    public Output<String> getRdpAuthority() {
        return this.rdpAuthority == null ? Output.empty() : this.rdpAuthority;
    }

    /**
     * The configuration for sharing a public IP address across multiple virtual machines.
     * 
     */
    @Import(name="sharedPublicIpAddressConfiguration")
      private final @Nullable Output<SharedPublicIpAddressConfigurationArgs> sharedPublicIpAddressConfiguration;

    public Output<SharedPublicIpAddressConfigurationArgs> getSharedPublicIpAddressConfiguration() {
        return this.sharedPublicIpAddressConfiguration == null ? Output.empty() : this.sharedPublicIpAddressConfiguration;
    }

    /**
     * The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
     * 
     */
    @Import(name="sshAuthority")
      private final @Nullable Output<String> sshAuthority;

    public Output<String> getSshAuthority() {
        return this.sshAuthority == null ? Output.empty() : this.sshAuthority;
    }

    /**
     * The resource ID of the sub net.
     * 
     */
    @Import(name="subnetId")
      private final @Nullable Output<String> subnetId;

    public Output<String> getSubnetId() {
        return this.subnetId == null ? Output.empty() : this.subnetId;
    }

    /**
     * The resource ID of the virtual network.
     * 
     */
    @Import(name="virtualNetworkId")
      private final @Nullable Output<String> virtualNetworkId;

    public Output<String> getVirtualNetworkId() {
        return this.virtualNetworkId == null ? Output.empty() : this.virtualNetworkId;
    }

    public NetworkInterfacePropertiesArgs(
        @Nullable Output<String> dnsName,
        @Nullable Output<String> privateIpAddress,
        @Nullable Output<String> publicIpAddress,
        @Nullable Output<String> publicIpAddressId,
        @Nullable Output<String> rdpAuthority,
        @Nullable Output<SharedPublicIpAddressConfigurationArgs> sharedPublicIpAddressConfiguration,
        @Nullable Output<String> sshAuthority,
        @Nullable Output<String> subnetId,
        @Nullable Output<String> virtualNetworkId) {
        this.dnsName = dnsName;
        this.privateIpAddress = privateIpAddress;
        this.publicIpAddress = publicIpAddress;
        this.publicIpAddressId = publicIpAddressId;
        this.rdpAuthority = rdpAuthority;
        this.sharedPublicIpAddressConfiguration = sharedPublicIpAddressConfiguration;
        this.sshAuthority = sshAuthority;
        this.subnetId = subnetId;
        this.virtualNetworkId = virtualNetworkId;
    }

    private NetworkInterfacePropertiesArgs() {
        this.dnsName = Output.empty();
        this.privateIpAddress = Output.empty();
        this.publicIpAddress = Output.empty();
        this.publicIpAddressId = Output.empty();
        this.rdpAuthority = Output.empty();
        this.sharedPublicIpAddressConfiguration = Output.empty();
        this.sshAuthority = Output.empty();
        this.subnetId = Output.empty();
        this.virtualNetworkId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfacePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> dnsName;
        private @Nullable Output<String> privateIpAddress;
        private @Nullable Output<String> publicIpAddress;
        private @Nullable Output<String> publicIpAddressId;
        private @Nullable Output<String> rdpAuthority;
        private @Nullable Output<SharedPublicIpAddressConfigurationArgs> sharedPublicIpAddressConfiguration;
        private @Nullable Output<String> sshAuthority;
        private @Nullable Output<String> subnetId;
        private @Nullable Output<String> virtualNetworkId;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkInterfacePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsName = defaults.dnsName;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.publicIpAddress = defaults.publicIpAddress;
    	      this.publicIpAddressId = defaults.publicIpAddressId;
    	      this.rdpAuthority = defaults.rdpAuthority;
    	      this.sharedPublicIpAddressConfiguration = defaults.sharedPublicIpAddressConfiguration;
    	      this.sshAuthority = defaults.sshAuthority;
    	      this.subnetId = defaults.subnetId;
    	      this.virtualNetworkId = defaults.virtualNetworkId;
        }

        public Builder dnsName(@Nullable Output<String> dnsName) {
            this.dnsName = dnsName;
            return this;
        }

        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = Output.ofNullable(dnsName);
            return this;
        }

        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }

        public Builder privateIpAddress(@Nullable String privateIpAddress) {
            this.privateIpAddress = Output.ofNullable(privateIpAddress);
            return this;
        }

        public Builder publicIpAddress(@Nullable Output<String> publicIpAddress) {
            this.publicIpAddress = publicIpAddress;
            return this;
        }

        public Builder publicIpAddress(@Nullable String publicIpAddress) {
            this.publicIpAddress = Output.ofNullable(publicIpAddress);
            return this;
        }

        public Builder publicIpAddressId(@Nullable Output<String> publicIpAddressId) {
            this.publicIpAddressId = publicIpAddressId;
            return this;
        }

        public Builder publicIpAddressId(@Nullable String publicIpAddressId) {
            this.publicIpAddressId = Output.ofNullable(publicIpAddressId);
            return this;
        }

        public Builder rdpAuthority(@Nullable Output<String> rdpAuthority) {
            this.rdpAuthority = rdpAuthority;
            return this;
        }

        public Builder rdpAuthority(@Nullable String rdpAuthority) {
            this.rdpAuthority = Output.ofNullable(rdpAuthority);
            return this;
        }

        public Builder sharedPublicIpAddressConfiguration(@Nullable Output<SharedPublicIpAddressConfigurationArgs> sharedPublicIpAddressConfiguration) {
            this.sharedPublicIpAddressConfiguration = sharedPublicIpAddressConfiguration;
            return this;
        }

        public Builder sharedPublicIpAddressConfiguration(@Nullable SharedPublicIpAddressConfigurationArgs sharedPublicIpAddressConfiguration) {
            this.sharedPublicIpAddressConfiguration = Output.ofNullable(sharedPublicIpAddressConfiguration);
            return this;
        }

        public Builder sshAuthority(@Nullable Output<String> sshAuthority) {
            this.sshAuthority = sshAuthority;
            return this;
        }

        public Builder sshAuthority(@Nullable String sshAuthority) {
            this.sshAuthority = Output.ofNullable(sshAuthority);
            return this;
        }

        public Builder subnetId(@Nullable Output<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = Output.ofNullable(subnetId);
            return this;
        }

        public Builder virtualNetworkId(@Nullable Output<String> virtualNetworkId) {
            this.virtualNetworkId = virtualNetworkId;
            return this;
        }

        public Builder virtualNetworkId(@Nullable String virtualNetworkId) {
            this.virtualNetworkId = Output.ofNullable(virtualNetworkId);
            return this;
        }
        public NetworkInterfacePropertiesArgs build() {
            return new NetworkInterfacePropertiesArgs(dnsName, privateIpAddress, publicIpAddress, publicIpAddressId, rdpAuthority, sharedPublicIpAddressConfiguration, sshAuthority, subnetId, virtualNetworkId);
        }
    }
}
