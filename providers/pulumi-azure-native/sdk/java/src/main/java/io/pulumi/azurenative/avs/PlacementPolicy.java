// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.avs;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.avs.PlacementPolicyArgs;
import io.pulumi.azurenative.avs.outputs.VmHostPlacementPolicyPropertiesResponse;
import io.pulumi.azurenative.avs.outputs.VmVmPlacementPolicyPropertiesResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A vSphere Distributed Resource Scheduler (DRS) placement policy
API Version: 2021-12-01.

{{% examples %}}
## Example Usage
{{% example %}}
### PlacementPolicies_CreateOrUpdate
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var placementPolicy = new AzureNative.AVS.PlacementPolicy("placementPolicy", new AzureNative.AVS.PlacementPolicyArgs
        {
            ClusterName = "cluster1",
            PlacementPolicyName = "policy1",
            PrivateCloudName = "cloud1",
            Properties = new AzureNative.AVS.Inputs.VmHostPlacementPolicyPropertiesArgs
            {
                AffinityType = "AntiAffinity",
                HostMembers = 
                {
                    "fakehost22.nyc1.kubernetes.center",
                    "fakehost23.nyc1.kubernetes.center",
                    "fakehost24.nyc1.kubernetes.center",
                },
                Type = "VmHost",
                VmMembers = 
                {
                    "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-128",
                    "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-256",
                },
            },
            ResourceGroupName = "group1",
        });
    }

}

```

```go
package main

import (
	avs "github.com/pulumi/pulumi-azure-native/sdk/go/azure/avs"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := avs.NewPlacementPolicy(ctx, "placementPolicy", &avs.PlacementPolicyArgs{
			ClusterName:         pulumi.String("cluster1"),
			PlacementPolicyName: pulumi.String("policy1"),
			PrivateCloudName:    pulumi.String("cloud1"),
			Properties: avs.VmHostPlacementPolicyProperties{
				AffinityType: "AntiAffinity",
				HostMembers: []string{
					"fakehost22.nyc1.kubernetes.center",
					"fakehost23.nyc1.kubernetes.center",
					"fakehost24.nyc1.kubernetes.center",
				},
				Type: "VmHost",
				VmMembers: []string{
					"/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-128",
					"/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-256",
				},
			},
			ResourceGroupName: pulumi.String("group1"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const placementPolicy = new azure_native.avs.PlacementPolicy("placementPolicy", {
    clusterName: "cluster1",
    placementPolicyName: "policy1",
    privateCloudName: "cloud1",
    properties: {
        affinityType: "AntiAffinity",
        hostMembers: [
            "fakehost22.nyc1.kubernetes.center",
            "fakehost23.nyc1.kubernetes.center",
            "fakehost24.nyc1.kubernetes.center",
        ],
        type: "VmHost",
        vmMembers: [
            "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-128",
            "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-256",
        ],
    },
    resourceGroupName: "group1",
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

placement_policy = azure_native.avs.PlacementPolicy("placementPolicy",
    cluster_name="cluster1",
    placement_policy_name="policy1",
    private_cloud_name="cloud1",
    properties=azure_native.avs.VmHostPlacementPolicyPropertiesArgs(
        affinity_type="AntiAffinity",
        host_members=[
            "fakehost22.nyc1.kubernetes.center",
            "fakehost23.nyc1.kubernetes.center",
            "fakehost24.nyc1.kubernetes.center",
        ],
        type="VmHost",
        vm_members=[
            "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-128",
            "/subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-256",
        ],
    ),
    resource_group_name="group1")

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:avs:PlacementPolicy policy1 /subscriptions/{subscription-id}/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/placementPolicies/policy1 
```

 */
@ResourceType(type="azure-native:avs:PlacementPolicy")
public class PlacementPolicy extends io.pulumi.resources.CustomResource {
    /**
     * Resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * placement policy properties
     */
    @OutputExport(name="properties", type=Either.class, parameters={VmHostPlacementPolicyPropertiesResponse.class, VmVmPlacementPolicyPropertiesResponse.class})
    private Output<Either<VmHostPlacementPolicyPropertiesResponse,VmVmPlacementPolicyPropertiesResponse>> properties;

    /**
     * @return placement policy properties
     */
    public Output<Either<VmHostPlacementPolicyPropertiesResponse,VmVmPlacementPolicyPropertiesResponse>> getProperties() {
        return this.properties;
    }
    /**
     * Resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PlacementPolicy(String name, PlacementPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:avs:PlacementPolicy", name, args == null ? PlacementPolicyArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private PlacementPolicy(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:avs:PlacementPolicy", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:avs/v20211201:PlacementPolicy").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PlacementPolicy get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new PlacementPolicy(name, id, options);
    }
}
