// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.insights.DiagnosticSettingArgs;
import io.pulumi.azurenative.insights.outputs.LogSettingsResponse;
import io.pulumi.azurenative.insights.outputs.MetricSettingsResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The diagnostic setting resource.
 * API Version: 2017-05-01-preview.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Creates or Updates the diagnostic setting
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var diagnosticSetting = new AzureNative.Insights.DiagnosticSetting("diagnosticSetting", new AzureNative.Insights.DiagnosticSettingArgs
 *         {
 *             EventHubAuthorizationRuleId = "/subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule",
 *             EventHubName = "myeventhub",
 *             LogAnalyticsDestinationType = "Dedicated",
 *             Logs = 
 *             {
 *                 new AzureNative.Insights.Inputs.LogSettingsArgs
 *                 {
 *                     Category = "WorkflowRuntime",
 *                     Enabled = true,
 *                     RetentionPolicy = new AzureNative.Insights.Inputs.RetentionPolicyArgs
 *                     {
 *                         Days = 0,
 *                         Enabled = false,
 *                     },
 *                 },
 *             },
 *             Metrics = 
 *             {
 *                 new AzureNative.Insights.Inputs.MetricSettingsArgs
 *                 {
 *                     Category = "WorkflowMetrics",
 *                     Enabled = true,
 *                     RetentionPolicy = new AzureNative.Insights.Inputs.RetentionPolicyArgs
 *                     {
 *                         Days = 0,
 *                         Enabled = false,
 *                     },
 *                 },
 *             },
 *             Name = "mysetting",
 *             ResourceUri = "subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourcegroups/viruela1/providers/microsoft.logic/workflows/viruela6",
 *             StorageAccountId = "/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/apptest/providers/Microsoft.Storage/storageAccounts/appteststorage1",
 *             WorkspaceId = "",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	insights "github.com/pulumi/pulumi-azure-native/sdk/go/azure/insights"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := insights.NewDiagnosticSetting(ctx, "diagnosticSetting", &insights.DiagnosticSettingArgs{
 * 			EventHubAuthorizationRuleId: pulumi.String("/subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule"),
 * 			EventHubName:                pulumi.String("myeventhub"),
 * 			LogAnalyticsDestinationType: pulumi.String("Dedicated"),
 * 			Logs: []insights.LogSettingsArgs{
 * 				&insights.LogSettingsArgs{
 * 					Category: pulumi.String("WorkflowRuntime"),
 * 					Enabled:  pulumi.Bool(true),
 * 					RetentionPolicy: &insights.RetentionPolicyArgs{
 * 						Days:    pulumi.Int(0),
 * 						Enabled: pulumi.Bool(false),
 * 					},
 * 				},
 * 			},
 * 			Metrics: []insights.MetricSettingsArgs{
 * 				&insights.MetricSettingsArgs{
 * 					Category: pulumi.String("WorkflowMetrics"),
 * 					Enabled:  pulumi.Bool(true),
 * 					RetentionPolicy: &insights.RetentionPolicyArgs{
 * 						Days:    pulumi.Int(0),
 * 						Enabled: pulumi.Bool(false),
 * 					},
 * 				},
 * 			},
 * 			Name:             pulumi.String("mysetting"),
 * 			ResourceUri:      pulumi.String("subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourcegroups/viruela1/providers/microsoft.logic/workflows/viruela6"),
 * 			StorageAccountId: pulumi.String("/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/apptest/providers/Microsoft.Storage/storageAccounts/appteststorage1"),
 * 			WorkspaceId:      pulumi.String(""),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const diagnosticSetting = new azure_native.insights.DiagnosticSetting("diagnosticSetting", {
 *     eventHubAuthorizationRuleId: "/subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule",
 *     eventHubName: "myeventhub",
 *     logAnalyticsDestinationType: "Dedicated",
 *     logs: [{
 *         category: "WorkflowRuntime",
 *         enabled: true,
 *         retentionPolicy: {
 *             days: 0,
 *             enabled: false,
 *         },
 *     }],
 *     metrics: [{
 *         category: "WorkflowMetrics",
 *         enabled: true,
 *         retentionPolicy: {
 *             days: 0,
 *             enabled: false,
 *         },
 *     }],
 *     name: "mysetting",
 *     resourceUri: "subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourcegroups/viruela1/providers/microsoft.logic/workflows/viruela6",
 *     storageAccountId: "/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/apptest/providers/Microsoft.Storage/storageAccounts/appteststorage1",
 *     workspaceId: "",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * diagnostic_setting = azure_native.insights.DiagnosticSetting("diagnosticSetting",
 *     event_hub_authorization_rule_id="/subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule",
 *     event_hub_name="myeventhub",
 *     log_analytics_destination_type="Dedicated",
 *     logs=[azure_native.insights.LogSettingsArgs(
 *         category="WorkflowRuntime",
 *         enabled=True,
 *         retention_policy=azure_native.insights.RetentionPolicyArgs(
 *             days=0,
 *             enabled=False,
 *         ),
 *     )],
 *     metrics=[azure_native.insights.MetricSettingsArgs(
 *         category="WorkflowMetrics",
 *         enabled=True,
 *         retention_policy=azure_native.insights.RetentionPolicyArgs(
 *             days=0,
 *             enabled=False,
 *         ),
 *     )],
 *     name="mysetting",
 *     resource_uri="subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourcegroups/viruela1/providers/microsoft.logic/workflows/viruela6",
 *     storage_account_id="/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/apptest/providers/Microsoft.Storage/storageAccounts/appteststorage1",
 *     workspace_id="")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:insights:DiagnosticSetting mysetting /subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourcegroups/viruela1/providers/microsoft.logic/workflows/viruela6/diagnosticSettings/mysetting 
 * ```
 * 
 */
@ResourceType(type="azure-native:insights:DiagnosticSetting")
public class DiagnosticSetting extends io.pulumi.resources.CustomResource {
    /**
     * The resource Id for the event hub authorization rule.
     */
    @Export(name="eventHubAuthorizationRuleId", type=String.class, parameters={})
    private Output</* @Nullable */ String> eventHubAuthorizationRuleId;

    /**
     * @return The resource Id for the event hub authorization rule.
     */
    public Output</* @Nullable */ String> getEventHubAuthorizationRuleId() {
        return this.eventHubAuthorizationRuleId;
    }
    /**
     * The name of the event hub. If none is specified, the default event hub will be selected.
     */
    @Export(name="eventHubName", type=String.class, parameters={})
    private Output</* @Nullable */ String> eventHubName;

    /**
     * @return The name of the event hub. If none is specified, the default event hub will be selected.
     */
    public Output</* @Nullable */ String> getEventHubName() {
        return this.eventHubName;
    }
    /**
     * A string indicating whether the export to Log Analytics should use the default destination type, i.e. AzureDiagnostics, or use a destination type constructed as follows: <normalized service identity>_<normalized category name>. Possible values are: Dedicated and null (null is default.)
     */
    @Export(name="logAnalyticsDestinationType", type=String.class, parameters={})
    private Output</* @Nullable */ String> logAnalyticsDestinationType;

    /**
     * @return A string indicating whether the export to Log Analytics should use the default destination type, i.e. AzureDiagnostics, or use a destination type constructed as follows: <normalized service identity>_<normalized category name>. Possible values are: Dedicated and null (null is default.)
     */
    public Output</* @Nullable */ String> getLogAnalyticsDestinationType() {
        return this.logAnalyticsDestinationType;
    }
    /**
     * The list of logs settings.
     */
    @Export(name="logs", type=List.class, parameters={LogSettingsResponse.class})
    private Output</* @Nullable */ List<LogSettingsResponse>> logs;

    /**
     * @return The list of logs settings.
     */
    public Output</* @Nullable */ List<LogSettingsResponse>> getLogs() {
        return this.logs;
    }
    /**
     * The list of metric settings.
     */
    @Export(name="metrics", type=List.class, parameters={MetricSettingsResponse.class})
    private Output</* @Nullable */ List<MetricSettingsResponse>> metrics;

    /**
     * @return The list of metric settings.
     */
    public Output</* @Nullable */ List<MetricSettingsResponse>> getMetrics() {
        return this.metrics;
    }
    /**
     * Azure resource name
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Azure resource name
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
     */
    @Export(name="serviceBusRuleId", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceBusRuleId;

    /**
     * @return The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
     */
    public Output</* @Nullable */ String> getServiceBusRuleId() {
        return this.serviceBusRuleId;
    }
    /**
     * The resource ID of the storage account to which you would like to send Diagnostic Logs.
     */
    @Export(name="storageAccountId", type=String.class, parameters={})
    private Output</* @Nullable */ String> storageAccountId;

    /**
     * @return The resource ID of the storage account to which you would like to send Diagnostic Logs.
     */
    public Output</* @Nullable */ String> getStorageAccountId() {
        return this.storageAccountId;
    }
    /**
     * Azure resource type
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Azure resource type
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
     */
    @Export(name="workspaceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> workspaceId;

    /**
     * @return The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
     */
    public Output</* @Nullable */ String> getWorkspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DiagnosticSetting(String name) {
        this(name, DiagnosticSettingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DiagnosticSetting(String name, DiagnosticSettingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DiagnosticSetting(String name, DiagnosticSettingArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:insights:DiagnosticSetting", name, args == null ? DiagnosticSettingArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private DiagnosticSetting(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:insights:DiagnosticSetting", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:insights/v20170501preview:DiagnosticSetting").build()),
                Output.of(Alias.builder().type("azure-native:insights/v20210501preview:DiagnosticSetting").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DiagnosticSetting get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DiagnosticSetting(name, id, options);
    }
}
