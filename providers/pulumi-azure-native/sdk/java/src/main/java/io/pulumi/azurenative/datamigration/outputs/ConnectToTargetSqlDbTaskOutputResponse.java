// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.datamigration.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class ConnectToTargetSqlDbTaskOutputResponse {
    /**
     * Source databases as a map from database name to database id
     * 
     */
    private final Map<String,String> databases;
    /**
     * Result identifier
     * 
     */
    private final String id;
    /**
     * Target server brand version
     * 
     */
    private final String targetServerBrandVersion;
    /**
     * Version of the target server
     * 
     */
    private final String targetServerVersion;

    @CustomType.Constructor
    private ConnectToTargetSqlDbTaskOutputResponse(
        @CustomType.Parameter("databases") Map<String,String> databases,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("targetServerBrandVersion") String targetServerBrandVersion,
        @CustomType.Parameter("targetServerVersion") String targetServerVersion) {
        this.databases = databases;
        this.id = id;
        this.targetServerBrandVersion = targetServerBrandVersion;
        this.targetServerVersion = targetServerVersion;
    }

    /**
     * Source databases as a map from database name to database id
     * 
    */
    public Map<String,String> getDatabases() {
        return this.databases;
    }
    /**
     * Result identifier
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Target server brand version
     * 
    */
    public String getTargetServerBrandVersion() {
        return this.targetServerBrandVersion;
    }
    /**
     * Version of the target server
     * 
    */
    public String getTargetServerVersion() {
        return this.targetServerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectToTargetSqlDbTaskOutputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> databases;
        private String id;
        private String targetServerBrandVersion;
        private String targetServerVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectToTargetSqlDbTaskOutputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databases = defaults.databases;
    	      this.id = defaults.id;
    	      this.targetServerBrandVersion = defaults.targetServerBrandVersion;
    	      this.targetServerVersion = defaults.targetServerVersion;
        }

        public Builder databases(Map<String,String> databases) {
            this.databases = Objects.requireNonNull(databases);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder targetServerBrandVersion(String targetServerBrandVersion) {
            this.targetServerBrandVersion = Objects.requireNonNull(targetServerBrandVersion);
            return this;
        }
        public Builder targetServerVersion(String targetServerVersion) {
            this.targetServerVersion = Objects.requireNonNull(targetServerVersion);
            return this;
        }        public ConnectToTargetSqlDbTaskOutputResponse build() {
            return new ConnectToTargetSqlDbTaskOutputResponse(databases, id, targetServerBrandVersion, targetServerVersion);
        }
    }
}
