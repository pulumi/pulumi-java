// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.appplatform.inputs;

import io.pulumi.azurenative.appplatform.enums.BindingType;
import io.pulumi.azurenative.appplatform.inputs.BuildpackBindingLaunchPropertiesArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Properties of a buildpack binding
 * 
 */
public final class BuildpackBindingPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final BuildpackBindingPropertiesArgs Empty = new BuildpackBindingPropertiesArgs();

    /**
     * Buildpack Binding Type
     * 
     */
    @Import(name="bindingType")
      private final @Nullable Output<Either<String,BindingType>> bindingType;

    public Output<Either<String,BindingType>> getBindingType() {
        return this.bindingType == null ? Output.empty() : this.bindingType;
    }

    /**
     * The object describes the buildpack binding launch properties
     * 
     */
    @Import(name="launchProperties")
      private final @Nullable Output<BuildpackBindingLaunchPropertiesArgs> launchProperties;

    public Output<BuildpackBindingLaunchPropertiesArgs> getLaunchProperties() {
        return this.launchProperties == null ? Output.empty() : this.launchProperties;
    }

    public BuildpackBindingPropertiesArgs(
        @Nullable Output<Either<String,BindingType>> bindingType,
        @Nullable Output<BuildpackBindingLaunchPropertiesArgs> launchProperties) {
        this.bindingType = bindingType;
        this.launchProperties = launchProperties;
    }

    private BuildpackBindingPropertiesArgs() {
        this.bindingType = Output.empty();
        this.launchProperties = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuildpackBindingPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,BindingType>> bindingType;
        private @Nullable Output<BuildpackBindingLaunchPropertiesArgs> launchProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(BuildpackBindingPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bindingType = defaults.bindingType;
    	      this.launchProperties = defaults.launchProperties;
        }

        public Builder bindingType(@Nullable Output<Either<String,BindingType>> bindingType) {
            this.bindingType = bindingType;
            return this;
        }
        public Builder bindingType(@Nullable Either<String,BindingType> bindingType) {
            this.bindingType = Output.ofNullable(bindingType);
            return this;
        }
        public Builder launchProperties(@Nullable Output<BuildpackBindingLaunchPropertiesArgs> launchProperties) {
            this.launchProperties = launchProperties;
            return this;
        }
        public Builder launchProperties(@Nullable BuildpackBindingLaunchPropertiesArgs launchProperties) {
            this.launchProperties = Output.ofNullable(launchProperties);
            return this;
        }        public BuildpackBindingPropertiesArgs build() {
            return new BuildpackBindingPropertiesArgs(bindingType, launchProperties);
        }
    }
}
