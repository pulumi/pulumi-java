// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.servicefabric.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents the health policy used to evaluate the health of services belonging to a service type.
 * 
 */
public final class ArmServiceTypeHealthPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ArmServiceTypeHealthPolicyArgs Empty = new ArmServiceTypeHealthPolicyArgs();

    /**
     * The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
     * 
     */
    @Import(name="maxPercentUnhealthyPartitionsPerService")
      private final @Nullable Output<Integer> maxPercentUnhealthyPartitionsPerService;

    public Output<Integer> getMaxPercentUnhealthyPartitionsPerService() {
        return this.maxPercentUnhealthyPartitionsPerService == null ? Codegen.empty() : this.maxPercentUnhealthyPartitionsPerService;
    }

    /**
     * The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
     * 
     */
    @Import(name="maxPercentUnhealthyReplicasPerPartition")
      private final @Nullable Output<Integer> maxPercentUnhealthyReplicasPerPartition;

    public Output<Integer> getMaxPercentUnhealthyReplicasPerPartition() {
        return this.maxPercentUnhealthyReplicasPerPartition == null ? Codegen.empty() : this.maxPercentUnhealthyReplicasPerPartition;
    }

    /**
     * The maximum percentage of services allowed to be unhealthy before your application is considered in error.
     * 
     */
    @Import(name="maxPercentUnhealthyServices")
      private final @Nullable Output<Integer> maxPercentUnhealthyServices;

    public Output<Integer> getMaxPercentUnhealthyServices() {
        return this.maxPercentUnhealthyServices == null ? Codegen.empty() : this.maxPercentUnhealthyServices;
    }

    public ArmServiceTypeHealthPolicyArgs(
        @Nullable Output<Integer> maxPercentUnhealthyPartitionsPerService,
        @Nullable Output<Integer> maxPercentUnhealthyReplicasPerPartition,
        @Nullable Output<Integer> maxPercentUnhealthyServices) {
        this.maxPercentUnhealthyPartitionsPerService = maxPercentUnhealthyPartitionsPerService == null ? Codegen.ofNullable(0) : maxPercentUnhealthyPartitionsPerService;
        this.maxPercentUnhealthyReplicasPerPartition = maxPercentUnhealthyReplicasPerPartition == null ? Codegen.ofNullable(0) : maxPercentUnhealthyReplicasPerPartition;
        this.maxPercentUnhealthyServices = maxPercentUnhealthyServices == null ? Codegen.ofNullable(0) : maxPercentUnhealthyServices;
    }

    private ArmServiceTypeHealthPolicyArgs() {
        this.maxPercentUnhealthyPartitionsPerService = Codegen.empty();
        this.maxPercentUnhealthyReplicasPerPartition = Codegen.empty();
        this.maxPercentUnhealthyServices = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ArmServiceTypeHealthPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> maxPercentUnhealthyPartitionsPerService;
        private @Nullable Output<Integer> maxPercentUnhealthyReplicasPerPartition;
        private @Nullable Output<Integer> maxPercentUnhealthyServices;

        public Builder() {
    	      // Empty
        }

        public Builder(ArmServiceTypeHealthPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxPercentUnhealthyPartitionsPerService = defaults.maxPercentUnhealthyPartitionsPerService;
    	      this.maxPercentUnhealthyReplicasPerPartition = defaults.maxPercentUnhealthyReplicasPerPartition;
    	      this.maxPercentUnhealthyServices = defaults.maxPercentUnhealthyServices;
        }

        public Builder maxPercentUnhealthyPartitionsPerService(@Nullable Output<Integer> maxPercentUnhealthyPartitionsPerService) {
            this.maxPercentUnhealthyPartitionsPerService = maxPercentUnhealthyPartitionsPerService;
            return this;
        }
        public Builder maxPercentUnhealthyPartitionsPerService(@Nullable Integer maxPercentUnhealthyPartitionsPerService) {
            this.maxPercentUnhealthyPartitionsPerService = Codegen.ofNullable(maxPercentUnhealthyPartitionsPerService);
            return this;
        }
        public Builder maxPercentUnhealthyReplicasPerPartition(@Nullable Output<Integer> maxPercentUnhealthyReplicasPerPartition) {
            this.maxPercentUnhealthyReplicasPerPartition = maxPercentUnhealthyReplicasPerPartition;
            return this;
        }
        public Builder maxPercentUnhealthyReplicasPerPartition(@Nullable Integer maxPercentUnhealthyReplicasPerPartition) {
            this.maxPercentUnhealthyReplicasPerPartition = Codegen.ofNullable(maxPercentUnhealthyReplicasPerPartition);
            return this;
        }
        public Builder maxPercentUnhealthyServices(@Nullable Output<Integer> maxPercentUnhealthyServices) {
            this.maxPercentUnhealthyServices = maxPercentUnhealthyServices;
            return this;
        }
        public Builder maxPercentUnhealthyServices(@Nullable Integer maxPercentUnhealthyServices) {
            this.maxPercentUnhealthyServices = Codegen.ofNullable(maxPercentUnhealthyServices);
            return this;
        }        public ArmServiceTypeHealthPolicyArgs build() {
            return new ArmServiceTypeHealthPolicyArgs(maxPercentUnhealthyPartitionsPerService, maxPercentUnhealthyReplicasPerPartition, maxPercentUnhealthyServices);
        }
    }
}
