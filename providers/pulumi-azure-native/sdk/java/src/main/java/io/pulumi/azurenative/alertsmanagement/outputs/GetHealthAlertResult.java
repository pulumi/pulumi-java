// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.alertsmanagement.outputs;

import io.pulumi.azurenative.alertsmanagement.outputs.HealthAlertActionResponse;
import io.pulumi.azurenative.alertsmanagement.outputs.HealthAlertCriteriaResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetHealthAlertResult {
    private final @Nullable List<HealthAlertActionResponse> actions;
    private final HealthAlertCriteriaResponse criteria;
    private final String description;
    private final Boolean enabled;
    private final String id;
    private final String lastUpdatedTime;
    private final String location;
    private final String name;
    private final @Nullable List<String> scopes;
    private final @Nullable Map<String,String> tags;
    private final String type;

    @OutputCustomType.Constructor({"actions","criteria","description","enabled","id","lastUpdatedTime","location","name","scopes","tags","type"})
    private GetHealthAlertResult(
        @Nullable List<HealthAlertActionResponse> actions,
        HealthAlertCriteriaResponse criteria,
        String description,
        Boolean enabled,
        String id,
        String lastUpdatedTime,
        String location,
        String name,
        @Nullable List<String> scopes,
        @Nullable Map<String,String> tags,
        String type) {
        this.actions = actions;
        this.criteria = Objects.requireNonNull(criteria);
        this.description = Objects.requireNonNull(description);
        this.enabled = Objects.requireNonNull(enabled);
        this.id = Objects.requireNonNull(id);
        this.lastUpdatedTime = Objects.requireNonNull(lastUpdatedTime);
        this.location = Objects.requireNonNull(location);
        this.name = Objects.requireNonNull(name);
        this.scopes = scopes;
        this.tags = tags;
        this.type = Objects.requireNonNull(type);
    }

    public List<HealthAlertActionResponse> getActions() {
        return this.actions == null ? List.of() : this.actions;
    }
    public HealthAlertCriteriaResponse getCriteria() {
        return this.criteria;
    }
    public String getDescription() {
        return this.description;
    }
    public Boolean getEnabled() {
        return this.enabled;
    }
    public String getId() {
        return this.id;
    }
    public String getLastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    public String getLocation() {
        return this.location;
    }
    public String getName() {
        return this.name;
    }
    public List<String> getScopes() {
        return this.scopes == null ? List.of() : this.scopes;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHealthAlertResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<HealthAlertActionResponse> actions;
        private HealthAlertCriteriaResponse criteria;
        private String description;
        private Boolean enabled;
        private String id;
        private String lastUpdatedTime;
        private String location;
        private String name;
        private @Nullable List<String> scopes;
        private @Nullable Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHealthAlertResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.criteria = defaults.criteria;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.lastUpdatedTime = defaults.lastUpdatedTime;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.scopes = defaults.scopes;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setActions(@Nullable List<HealthAlertActionResponse> actions) {
            this.actions = actions;
            return this;
        }

        public Builder setCriteria(HealthAlertCriteriaResponse criteria) {
            this.criteria = Objects.requireNonNull(criteria);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setEnabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setLastUpdatedTime(String lastUpdatedTime) {
            this.lastUpdatedTime = Objects.requireNonNull(lastUpdatedTime);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setScopes(@Nullable List<String> scopes) {
            this.scopes = scopes;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetHealthAlertResult build() {
            return new GetHealthAlertResult(actions, criteria, description, enabled, id, lastUpdatedTime, location, name, scopes, tags, type);
        }
    }
}
