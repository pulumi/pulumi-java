// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.synapse.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Tables that will be included and excluded in the follower database
 * 
 */
public final class TableLevelSharingPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final TableLevelSharingPropertiesArgs Empty = new TableLevelSharingPropertiesArgs();

    /**
     * List of external tables exclude from the follower database
     * 
     */
    @InputImport(name="externalTablesToExclude")
      private final @Nullable Input<List<String>> externalTablesToExclude;

    public Input<List<String>> getExternalTablesToExclude() {
        return this.externalTablesToExclude == null ? Input.empty() : this.externalTablesToExclude;
    }

    /**
     * List of external tables to include in the follower database
     * 
     */
    @InputImport(name="externalTablesToInclude")
      private final @Nullable Input<List<String>> externalTablesToInclude;

    public Input<List<String>> getExternalTablesToInclude() {
        return this.externalTablesToInclude == null ? Input.empty() : this.externalTablesToInclude;
    }

    /**
     * List of materialized views exclude from the follower database
     * 
     */
    @InputImport(name="materializedViewsToExclude")
      private final @Nullable Input<List<String>> materializedViewsToExclude;

    public Input<List<String>> getMaterializedViewsToExclude() {
        return this.materializedViewsToExclude == null ? Input.empty() : this.materializedViewsToExclude;
    }

    /**
     * List of materialized views to include in the follower database
     * 
     */
    @InputImport(name="materializedViewsToInclude")
      private final @Nullable Input<List<String>> materializedViewsToInclude;

    public Input<List<String>> getMaterializedViewsToInclude() {
        return this.materializedViewsToInclude == null ? Input.empty() : this.materializedViewsToInclude;
    }

    /**
     * List of tables to exclude from the follower database
     * 
     */
    @InputImport(name="tablesToExclude")
      private final @Nullable Input<List<String>> tablesToExclude;

    public Input<List<String>> getTablesToExclude() {
        return this.tablesToExclude == null ? Input.empty() : this.tablesToExclude;
    }

    /**
     * List of tables to include in the follower database
     * 
     */
    @InputImport(name="tablesToInclude")
      private final @Nullable Input<List<String>> tablesToInclude;

    public Input<List<String>> getTablesToInclude() {
        return this.tablesToInclude == null ? Input.empty() : this.tablesToInclude;
    }

    public TableLevelSharingPropertiesArgs(
        @Nullable Input<List<String>> externalTablesToExclude,
        @Nullable Input<List<String>> externalTablesToInclude,
        @Nullable Input<List<String>> materializedViewsToExclude,
        @Nullable Input<List<String>> materializedViewsToInclude,
        @Nullable Input<List<String>> tablesToExclude,
        @Nullable Input<List<String>> tablesToInclude) {
        this.externalTablesToExclude = externalTablesToExclude;
        this.externalTablesToInclude = externalTablesToInclude;
        this.materializedViewsToExclude = materializedViewsToExclude;
        this.materializedViewsToInclude = materializedViewsToInclude;
        this.tablesToExclude = tablesToExclude;
        this.tablesToInclude = tablesToInclude;
    }

    private TableLevelSharingPropertiesArgs() {
        this.externalTablesToExclude = Input.empty();
        this.externalTablesToInclude = Input.empty();
        this.materializedViewsToExclude = Input.empty();
        this.materializedViewsToInclude = Input.empty();
        this.tablesToExclude = Input.empty();
        this.tablesToInclude = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableLevelSharingPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> externalTablesToExclude;
        private @Nullable Input<List<String>> externalTablesToInclude;
        private @Nullable Input<List<String>> materializedViewsToExclude;
        private @Nullable Input<List<String>> materializedViewsToInclude;
        private @Nullable Input<List<String>> tablesToExclude;
        private @Nullable Input<List<String>> tablesToInclude;

        public Builder() {
    	      // Empty
        }

        public Builder(TableLevelSharingPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalTablesToExclude = defaults.externalTablesToExclude;
    	      this.externalTablesToInclude = defaults.externalTablesToInclude;
    	      this.materializedViewsToExclude = defaults.materializedViewsToExclude;
    	      this.materializedViewsToInclude = defaults.materializedViewsToInclude;
    	      this.tablesToExclude = defaults.tablesToExclude;
    	      this.tablesToInclude = defaults.tablesToInclude;
        }

        public Builder externalTablesToExclude(@Nullable Input<List<String>> externalTablesToExclude) {
            this.externalTablesToExclude = externalTablesToExclude;
            return this;
        }

        public Builder externalTablesToExclude(@Nullable List<String> externalTablesToExclude) {
            this.externalTablesToExclude = Input.ofNullable(externalTablesToExclude);
            return this;
        }

        public Builder externalTablesToInclude(@Nullable Input<List<String>> externalTablesToInclude) {
            this.externalTablesToInclude = externalTablesToInclude;
            return this;
        }

        public Builder externalTablesToInclude(@Nullable List<String> externalTablesToInclude) {
            this.externalTablesToInclude = Input.ofNullable(externalTablesToInclude);
            return this;
        }

        public Builder materializedViewsToExclude(@Nullable Input<List<String>> materializedViewsToExclude) {
            this.materializedViewsToExclude = materializedViewsToExclude;
            return this;
        }

        public Builder materializedViewsToExclude(@Nullable List<String> materializedViewsToExclude) {
            this.materializedViewsToExclude = Input.ofNullable(materializedViewsToExclude);
            return this;
        }

        public Builder materializedViewsToInclude(@Nullable Input<List<String>> materializedViewsToInclude) {
            this.materializedViewsToInclude = materializedViewsToInclude;
            return this;
        }

        public Builder materializedViewsToInclude(@Nullable List<String> materializedViewsToInclude) {
            this.materializedViewsToInclude = Input.ofNullable(materializedViewsToInclude);
            return this;
        }

        public Builder tablesToExclude(@Nullable Input<List<String>> tablesToExclude) {
            this.tablesToExclude = tablesToExclude;
            return this;
        }

        public Builder tablesToExclude(@Nullable List<String> tablesToExclude) {
            this.tablesToExclude = Input.ofNullable(tablesToExclude);
            return this;
        }

        public Builder tablesToInclude(@Nullable Input<List<String>> tablesToInclude) {
            this.tablesToInclude = tablesToInclude;
            return this;
        }

        public Builder tablesToInclude(@Nullable List<String> tablesToInclude) {
            this.tablesToInclude = Input.ofNullable(tablesToInclude);
            return this;
        }
        public TableLevelSharingPropertiesArgs build() {
            return new TableLevelSharingPropertiesArgs(externalTablesToExclude, externalTablesToInclude, materializedViewsToExclude, materializedViewsToInclude, tablesToExclude, tablesToInclude);
        }
    }
}
