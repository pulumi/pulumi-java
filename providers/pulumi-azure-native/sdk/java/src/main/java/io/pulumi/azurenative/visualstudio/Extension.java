// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.visualstudio;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.visualstudio.ExtensionArgs;
import io.pulumi.azurenative.visualstudio.outputs.ExtensionResourcePlanResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * The response to an extension resource GET request.
API Version: 2014-04-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create an extension resource
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var extension = new AzureNative.VisualStudio.Extension("extension", new AzureNative.VisualStudio.ExtensionArgs
        {
            AccountResourceName = "ExampleAccount",
            ExtensionResourceName = "ms.example",
            Location = "Central US",
            Plan = new AzureNative.VisualStudio.Inputs.ExtensionResourcePlanArgs
            {
                Name = "ExamplePlan",
                Product = "ExampleExtensionName",
                PromotionCode = "",
                Publisher = "ExampleExtensionPublisher",
                Version = "1.0",
            },
            Properties = ,
            ResourceGroupName = "VS-Example-Group",
            Tags = ,
        });
    }

}

```

```go
package main

import (
	visualstudio "github.com/pulumi/pulumi-azure-native/sdk/go/azure/visualstudio"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := visualstudio.NewExtension(ctx, "extension", &visualstudio.ExtensionArgs{
			AccountResourceName:   pulumi.String("ExampleAccount"),
			ExtensionResourceName: pulumi.String("ms.example"),
			Location:              pulumi.String("Central US"),
			Plan: &visualstudio.ExtensionResourcePlanArgs{
				Name:          pulumi.String("ExamplePlan"),
				Product:       pulumi.String("ExampleExtensionName"),
				PromotionCode: pulumi.String(""),
				Publisher:     pulumi.String("ExampleExtensionPublisher"),
				Version:       pulumi.String("1.0"),
			},
			Properties:        nil,
			ResourceGroupName: pulumi.String("VS-Example-Group"),
			Tags:              nil,
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const extension = new azure_native.visualstudio.Extension("extension", {
    accountResourceName: "ExampleAccount",
    extensionResourceName: "ms.example",
    location: "Central US",
    plan: {
        name: "ExamplePlan",
        product: "ExampleExtensionName",
        promotionCode: "",
        publisher: "ExampleExtensionPublisher",
        version: "1.0",
    },
    properties: {},
    resourceGroupName: "VS-Example-Group",
    tags: {},
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

extension = azure_native.visualstudio.Extension("extension",
    account_resource_name="ExampleAccount",
    extension_resource_name="ms.example",
    location="Central US",
    plan=azure_native.visualstudio.ExtensionResourcePlanArgs(
        name="ExamplePlan",
        product="ExampleExtensionName",
        promotion_code="",
        publisher="ExampleExtensionPublisher",
        version="1.0",
    ),
    properties={},
    resource_group_name="VS-Example-Group",
    tags={})

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:visualstudio:Extension ms.example /subscriptions/0de7f055-dbea-498d-8e9e-da287eedca90/resourceGroups/VS-Example-Group/providers/Microsoft.VisualStudio/account/ExampleAccount/extension/ms.example 
```

 */
@ResourceType(type="azure-native:visualstudio:Extension")
public class Extension extends io.pulumi.resources.CustomResource {
    /**
     * Resource location.
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * Resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The extension plan that was purchased.
     */
    @OutputExport(name="plan", type=ExtensionResourcePlanResponse.class, parameters={})
    private Output</* @Nullable */ ExtensionResourcePlanResponse> plan;

    /**
     * @return The extension plan that was purchased.
     */
    public Output</* @Nullable */ ExtensionResourcePlanResponse> getPlan() {
        return this.plan;
    }
    /**
     * Resource properties.
     */
    @OutputExport(name="properties", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> properties;

    /**
     * @return Resource properties.
     */
    public Output<Map<String,String>> getProperties() {
        return this.properties;
    }
    /**
     * Resource tags.
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * Resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Extension(String name, ExtensionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:visualstudio:Extension", name, args == null ? ExtensionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Extension(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:visualstudio:Extension", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:visualstudio/v20140401preview:Extension").build()),
                Input.of(Alias.builder().setType("azure-native:visualstudio/v20171101preview:Extension").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Extension get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Extension(name, id, options);
    }
}
