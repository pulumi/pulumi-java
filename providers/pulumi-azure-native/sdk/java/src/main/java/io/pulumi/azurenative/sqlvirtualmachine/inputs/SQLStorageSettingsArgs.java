// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sqlvirtualmachine.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Set disk storage settings for SQL Server.
 * 
 */
public final class SQLStorageSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final SQLStorageSettingsArgs Empty = new SQLStorageSettingsArgs();

    /**
     * SQL Server default file path
     * 
     */
    @Import(name="defaultFilePath")
      private final @Nullable Output<String> defaultFilePath;

    public Output<String> getDefaultFilePath() {
        return this.defaultFilePath == null ? Output.empty() : this.defaultFilePath;
    }

    /**
     * Logical Unit Numbers for the disks.
     * 
     */
    @Import(name="luns")
      private final @Nullable Output<List<Integer>> luns;

    public Output<List<Integer>> getLuns() {
        return this.luns == null ? Output.empty() : this.luns;
    }

    public SQLStorageSettingsArgs(
        @Nullable Output<String> defaultFilePath,
        @Nullable Output<List<Integer>> luns) {
        this.defaultFilePath = defaultFilePath;
        this.luns = luns;
    }

    private SQLStorageSettingsArgs() {
        this.defaultFilePath = Output.empty();
        this.luns = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SQLStorageSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> defaultFilePath;
        private @Nullable Output<List<Integer>> luns;

        public Builder() {
    	      // Empty
        }

        public Builder(SQLStorageSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultFilePath = defaults.defaultFilePath;
    	      this.luns = defaults.luns;
        }

        public Builder defaultFilePath(@Nullable Output<String> defaultFilePath) {
            this.defaultFilePath = defaultFilePath;
            return this;
        }
        public Builder defaultFilePath(@Nullable String defaultFilePath) {
            this.defaultFilePath = Output.ofNullable(defaultFilePath);
            return this;
        }
        public Builder luns(@Nullable Output<List<Integer>> luns) {
            this.luns = luns;
            return this;
        }
        public Builder luns(@Nullable List<Integer> luns) {
            this.luns = Output.ofNullable(luns);
            return this;
        }
        public Builder luns(Integer... luns) {
            return luns(List.of(luns));
        }        public SQLStorageSettingsArgs build() {
            return new SQLStorageSettingsArgs(defaultFilePath, luns);
        }
    }
}
