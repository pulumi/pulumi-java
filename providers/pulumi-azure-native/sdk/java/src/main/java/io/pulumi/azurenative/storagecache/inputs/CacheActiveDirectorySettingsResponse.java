// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storagecache.inputs;

import io.pulumi.azurenative.storagecache.inputs.CacheActiveDirectorySettingsResponseCredentials;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CacheActiveDirectorySettingsResponse extends io.pulumi.resources.InvokeArgs {

    public static final CacheActiveDirectorySettingsResponse Empty = new CacheActiveDirectorySettingsResponse();

    @InputImport(name="cacheNetBiosName", required=true)
    private final String cacheNetBiosName;

    public String getCacheNetBiosName() {
        return this.cacheNetBiosName;
    }

    @InputImport(name="credentials")
    private final @Nullable CacheActiveDirectorySettingsResponseCredentials credentials;

    public Optional<CacheActiveDirectorySettingsResponseCredentials> getCredentials() {
        return this.credentials == null ? Optional.empty() : Optional.ofNullable(this.credentials);
    }

    @InputImport(name="domainJoined", required=true)
    private final String domainJoined;

    public String getDomainJoined() {
        return this.domainJoined;
    }

    @InputImport(name="domainName", required=true)
    private final String domainName;

    public String getDomainName() {
        return this.domainName;
    }

    @InputImport(name="domainNetBiosName", required=true)
    private final String domainNetBiosName;

    public String getDomainNetBiosName() {
        return this.domainNetBiosName;
    }

    @InputImport(name="primaryDnsIpAddress", required=true)
    private final String primaryDnsIpAddress;

    public String getPrimaryDnsIpAddress() {
        return this.primaryDnsIpAddress;
    }

    @InputImport(name="secondaryDnsIpAddress")
    private final @Nullable String secondaryDnsIpAddress;

    public Optional<String> getSecondaryDnsIpAddress() {
        return this.secondaryDnsIpAddress == null ? Optional.empty() : Optional.ofNullable(this.secondaryDnsIpAddress);
    }

    public CacheActiveDirectorySettingsResponse(
        String cacheNetBiosName,
        @Nullable CacheActiveDirectorySettingsResponseCredentials credentials,
        String domainJoined,
        String domainName,
        String domainNetBiosName,
        String primaryDnsIpAddress,
        @Nullable String secondaryDnsIpAddress) {
        this.cacheNetBiosName = Objects.requireNonNull(cacheNetBiosName, "expected parameter 'cacheNetBiosName' to be non-null");
        this.credentials = credentials;
        this.domainJoined = Objects.requireNonNull(domainJoined, "expected parameter 'domainJoined' to be non-null");
        this.domainName = Objects.requireNonNull(domainName, "expected parameter 'domainName' to be non-null");
        this.domainNetBiosName = Objects.requireNonNull(domainNetBiosName, "expected parameter 'domainNetBiosName' to be non-null");
        this.primaryDnsIpAddress = Objects.requireNonNull(primaryDnsIpAddress, "expected parameter 'primaryDnsIpAddress' to be non-null");
        this.secondaryDnsIpAddress = secondaryDnsIpAddress;
    }

    private CacheActiveDirectorySettingsResponse() {
        this.cacheNetBiosName = null;
        this.credentials = null;
        this.domainJoined = null;
        this.domainName = null;
        this.domainNetBiosName = null;
        this.primaryDnsIpAddress = null;
        this.secondaryDnsIpAddress = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheActiveDirectorySettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cacheNetBiosName;
        private @Nullable CacheActiveDirectorySettingsResponseCredentials credentials;
        private String domainJoined;
        private String domainName;
        private String domainNetBiosName;
        private String primaryDnsIpAddress;
        private @Nullable String secondaryDnsIpAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(CacheActiveDirectorySettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheNetBiosName = defaults.cacheNetBiosName;
    	      this.credentials = defaults.credentials;
    	      this.domainJoined = defaults.domainJoined;
    	      this.domainName = defaults.domainName;
    	      this.domainNetBiosName = defaults.domainNetBiosName;
    	      this.primaryDnsIpAddress = defaults.primaryDnsIpAddress;
    	      this.secondaryDnsIpAddress = defaults.secondaryDnsIpAddress;
        }

        public Builder setCacheNetBiosName(String cacheNetBiosName) {
            this.cacheNetBiosName = Objects.requireNonNull(cacheNetBiosName);
            return this;
        }

        public Builder setCredentials(@Nullable CacheActiveDirectorySettingsResponseCredentials credentials) {
            this.credentials = credentials;
            return this;
        }

        public Builder setDomainJoined(String domainJoined) {
            this.domainJoined = Objects.requireNonNull(domainJoined);
            return this;
        }

        public Builder setDomainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }

        public Builder setDomainNetBiosName(String domainNetBiosName) {
            this.domainNetBiosName = Objects.requireNonNull(domainNetBiosName);
            return this;
        }

        public Builder setPrimaryDnsIpAddress(String primaryDnsIpAddress) {
            this.primaryDnsIpAddress = Objects.requireNonNull(primaryDnsIpAddress);
            return this;
        }

        public Builder setSecondaryDnsIpAddress(@Nullable String secondaryDnsIpAddress) {
            this.secondaryDnsIpAddress = secondaryDnsIpAddress;
            return this;
        }

        public CacheActiveDirectorySettingsResponse build() {
            return new CacheActiveDirectorySettingsResponse(cacheNetBiosName, credentials, domainJoined, domainName, domainNetBiosName, primaryDnsIpAddress, secondaryDnsIpAddress);
        }
    }
}
