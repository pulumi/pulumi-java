// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.migrate.inputs;

import io.pulumi.azurenative.migrate.inputs.LoadBalancerBackendAddressPoolReferenceArgs;
import io.pulumi.azurenative.migrate.inputs.LoadBalancerNatRuleReferenceArgs;
import io.pulumi.azurenative.migrate.inputs.PublicIpReferenceArgs;
import io.pulumi.azurenative.migrate.inputs.SubnetReferenceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines NIC IP configuration properties.
 * 
 */
public final class NicIpConfigurationResourceSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final NicIpConfigurationResourceSettingsArgs Empty = new NicIpConfigurationResourceSettingsArgs();

    /**
     * Gets or sets the references of the load balancer backend address pools.
     * 
     */
    @Import(name="loadBalancerBackendAddressPools")
      private final @Nullable Output<List<LoadBalancerBackendAddressPoolReferenceArgs>> loadBalancerBackendAddressPools;

    public Output<List<LoadBalancerBackendAddressPoolReferenceArgs>> loadBalancerBackendAddressPools() {
        return this.loadBalancerBackendAddressPools == null ? Codegen.empty() : this.loadBalancerBackendAddressPools;
    }

    /**
     * Gets or sets the references of the load balancer NAT rules.
     * 
     */
    @Import(name="loadBalancerNatRules")
      private final @Nullable Output<List<LoadBalancerNatRuleReferenceArgs>> loadBalancerNatRules;

    public Output<List<LoadBalancerNatRuleReferenceArgs>> loadBalancerNatRules() {
        return this.loadBalancerNatRules == null ? Codegen.empty() : this.loadBalancerNatRules;
    }

    /**
     * Gets or sets the IP configuration name.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Gets or sets a value indicating whether this IP configuration is the primary.
     * 
     */
    @Import(name="primary")
      private final @Nullable Output<Boolean> primary;

    public Output<Boolean> primary() {
        return this.primary == null ? Codegen.empty() : this.primary;
    }

    /**
     * Gets or sets the private IP address of the network interface IP Configuration.
     * 
     */
    @Import(name="privateIpAddress")
      private final @Nullable Output<String> privateIpAddress;

    public Output<String> privateIpAddress() {
        return this.privateIpAddress == null ? Codegen.empty() : this.privateIpAddress;
    }

    /**
     * Gets or sets the private IP address allocation method.
     * 
     */
    @Import(name="privateIpAllocationMethod")
      private final @Nullable Output<String> privateIpAllocationMethod;

    public Output<String> privateIpAllocationMethod() {
        return this.privateIpAllocationMethod == null ? Codegen.empty() : this.privateIpAllocationMethod;
    }

    /**
     * Defines reference to a public IP.
     * 
     */
    @Import(name="publicIp")
      private final @Nullable Output<PublicIpReferenceArgs> publicIp;

    public Output<PublicIpReferenceArgs> publicIp() {
        return this.publicIp == null ? Codegen.empty() : this.publicIp;
    }

    /**
     * Defines reference to subnet.
     * 
     */
    @Import(name="subnet")
      private final @Nullable Output<SubnetReferenceArgs> subnet;

    public Output<SubnetReferenceArgs> subnet() {
        return this.subnet == null ? Codegen.empty() : this.subnet;
    }

    public NicIpConfigurationResourceSettingsArgs(
        @Nullable Output<List<LoadBalancerBackendAddressPoolReferenceArgs>> loadBalancerBackendAddressPools,
        @Nullable Output<List<LoadBalancerNatRuleReferenceArgs>> loadBalancerNatRules,
        @Nullable Output<String> name,
        @Nullable Output<Boolean> primary,
        @Nullable Output<String> privateIpAddress,
        @Nullable Output<String> privateIpAllocationMethod,
        @Nullable Output<PublicIpReferenceArgs> publicIp,
        @Nullable Output<SubnetReferenceArgs> subnet) {
        this.loadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
        this.loadBalancerNatRules = loadBalancerNatRules;
        this.name = name;
        this.primary = primary;
        this.privateIpAddress = privateIpAddress;
        this.privateIpAllocationMethod = privateIpAllocationMethod;
        this.publicIp = publicIp;
        this.subnet = subnet;
    }

    private NicIpConfigurationResourceSettingsArgs() {
        this.loadBalancerBackendAddressPools = Codegen.empty();
        this.loadBalancerNatRules = Codegen.empty();
        this.name = Codegen.empty();
        this.primary = Codegen.empty();
        this.privateIpAddress = Codegen.empty();
        this.privateIpAllocationMethod = Codegen.empty();
        this.publicIp = Codegen.empty();
        this.subnet = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NicIpConfigurationResourceSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<LoadBalancerBackendAddressPoolReferenceArgs>> loadBalancerBackendAddressPools;
        private @Nullable Output<List<LoadBalancerNatRuleReferenceArgs>> loadBalancerNatRules;
        private @Nullable Output<String> name;
        private @Nullable Output<Boolean> primary;
        private @Nullable Output<String> privateIpAddress;
        private @Nullable Output<String> privateIpAllocationMethod;
        private @Nullable Output<PublicIpReferenceArgs> publicIp;
        private @Nullable Output<SubnetReferenceArgs> subnet;

        public Builder() {
    	      // Empty
        }

        public Builder(NicIpConfigurationResourceSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.loadBalancerBackendAddressPools = defaults.loadBalancerBackendAddressPools;
    	      this.loadBalancerNatRules = defaults.loadBalancerNatRules;
    	      this.name = defaults.name;
    	      this.primary = defaults.primary;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.privateIpAllocationMethod = defaults.privateIpAllocationMethod;
    	      this.publicIp = defaults.publicIp;
    	      this.subnet = defaults.subnet;
        }

        public Builder loadBalancerBackendAddressPools(@Nullable Output<List<LoadBalancerBackendAddressPoolReferenceArgs>> loadBalancerBackendAddressPools) {
            this.loadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            return this;
        }
        public Builder loadBalancerBackendAddressPools(@Nullable List<LoadBalancerBackendAddressPoolReferenceArgs> loadBalancerBackendAddressPools) {
            this.loadBalancerBackendAddressPools = Codegen.ofNullable(loadBalancerBackendAddressPools);
            return this;
        }
        public Builder loadBalancerBackendAddressPools(LoadBalancerBackendAddressPoolReferenceArgs... loadBalancerBackendAddressPools) {
            return loadBalancerBackendAddressPools(List.of(loadBalancerBackendAddressPools));
        }
        public Builder loadBalancerNatRules(@Nullable Output<List<LoadBalancerNatRuleReferenceArgs>> loadBalancerNatRules) {
            this.loadBalancerNatRules = loadBalancerNatRules;
            return this;
        }
        public Builder loadBalancerNatRules(@Nullable List<LoadBalancerNatRuleReferenceArgs> loadBalancerNatRules) {
            this.loadBalancerNatRules = Codegen.ofNullable(loadBalancerNatRules);
            return this;
        }
        public Builder loadBalancerNatRules(LoadBalancerNatRuleReferenceArgs... loadBalancerNatRules) {
            return loadBalancerNatRules(List.of(loadBalancerNatRules));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder primary(@Nullable Output<Boolean> primary) {
            this.primary = primary;
            return this;
        }
        public Builder primary(@Nullable Boolean primary) {
            this.primary = Codegen.ofNullable(primary);
            return this;
        }
        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }
        public Builder privateIpAddress(@Nullable String privateIpAddress) {
            this.privateIpAddress = Codegen.ofNullable(privateIpAddress);
            return this;
        }
        public Builder privateIpAllocationMethod(@Nullable Output<String> privateIpAllocationMethod) {
            this.privateIpAllocationMethod = privateIpAllocationMethod;
            return this;
        }
        public Builder privateIpAllocationMethod(@Nullable String privateIpAllocationMethod) {
            this.privateIpAllocationMethod = Codegen.ofNullable(privateIpAllocationMethod);
            return this;
        }
        public Builder publicIp(@Nullable Output<PublicIpReferenceArgs> publicIp) {
            this.publicIp = publicIp;
            return this;
        }
        public Builder publicIp(@Nullable PublicIpReferenceArgs publicIp) {
            this.publicIp = Codegen.ofNullable(publicIp);
            return this;
        }
        public Builder subnet(@Nullable Output<SubnetReferenceArgs> subnet) {
            this.subnet = subnet;
            return this;
        }
        public Builder subnet(@Nullable SubnetReferenceArgs subnet) {
            this.subnet = Codegen.ofNullable(subnet);
            return this;
        }        public NicIpConfigurationResourceSettingsArgs build() {
            return new NicIpConfigurationResourceSettingsArgs(loadBalancerBackendAddressPools, loadBalancerNatRules, name, primary, privateIpAddress, privateIpAllocationMethod, publicIp, subnet);
        }
    }
}
