// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.delegatednetwork;

import io.pulumi.azurenative.delegatednetwork.inputs.ControllerDetailsArgs;
import io.pulumi.azurenative.delegatednetwork.inputs.SubnetDetailsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DelegatedSubnetServiceDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final DelegatedSubnetServiceDetailsArgs Empty = new DelegatedSubnetServiceDetailsArgs();

    /**
     * Properties of the controller.
     * 
     */
    @InputImport(name="controllerDetails")
      private final @Nullable Output<ControllerDetailsArgs> controllerDetails;

    public Output<ControllerDetailsArgs> getControllerDetails() {
        return this.controllerDetails == null ? Output.empty() : this.controllerDetails;
    }

    /**
     * Location of the resource.
     * 
     */
    @InputImport(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the resource. It must be a minimum of 3 characters, and a maximum of 63.
     * 
     */
    @InputImport(name="resourceName")
      private final @Nullable Output<String> resourceName;

    public Output<String> getPropResourceName() {
        return this.resourceName == null ? Output.empty() : this.resourceName;
    }

    /**
     * subnet details
     * 
     */
    @InputImport(name="subnetDetails")
      private final @Nullable Output<SubnetDetailsArgs> subnetDetails;

    public Output<SubnetDetailsArgs> getSubnetDetails() {
        return this.subnetDetails == null ? Output.empty() : this.subnetDetails;
    }

    /**
     * The resource tags.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public DelegatedSubnetServiceDetailsArgs(
        @Nullable Output<ControllerDetailsArgs> controllerDetails,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<String> resourceName,
        @Nullable Output<SubnetDetailsArgs> subnetDetails,
        @Nullable Output<Map<String,String>> tags) {
        this.controllerDetails = controllerDetails;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = resourceName;
        this.subnetDetails = subnetDetails;
        this.tags = tags;
    }

    private DelegatedSubnetServiceDetailsArgs() {
        this.controllerDetails = Output.empty();
        this.location = Output.empty();
        this.resourceGroupName = Output.empty();
        this.resourceName = Output.empty();
        this.subnetDetails = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DelegatedSubnetServiceDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ControllerDetailsArgs> controllerDetails;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<String> resourceName;
        private @Nullable Output<SubnetDetailsArgs> subnetDetails;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DelegatedSubnetServiceDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controllerDetails = defaults.controllerDetails;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.subnetDetails = defaults.subnetDetails;
    	      this.tags = defaults.tags;
        }

        public Builder controllerDetails(@Nullable Output<ControllerDetailsArgs> controllerDetails) {
            this.controllerDetails = controllerDetails;
            return this;
        }

        public Builder controllerDetails(@Nullable ControllerDetailsArgs controllerDetails) {
            this.controllerDetails = Output.ofNullable(controllerDetails);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder resourceName(@Nullable Output<String> resourceName) {
            this.resourceName = resourceName;
            return this;
        }

        public Builder resourceName(@Nullable String resourceName) {
            this.resourceName = Output.ofNullable(resourceName);
            return this;
        }

        public Builder subnetDetails(@Nullable Output<SubnetDetailsArgs> subnetDetails) {
            this.subnetDetails = subnetDetails;
            return this;
        }

        public Builder subnetDetails(@Nullable SubnetDetailsArgs subnetDetails) {
            this.subnetDetails = Output.ofNullable(subnetDetails);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public DelegatedSubnetServiceDetailsArgs build() {
            return new DelegatedSubnetServiceDetailsArgs(controllerDetails, location, resourceGroupName, resourceName, subnetDetails, tags);
        }
    }
}
