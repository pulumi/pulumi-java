// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.azurenative.insights.inputs.AlertRuleAnyOfOrLeafConditionArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;


/**
 * An Activity Log Alert rule condition that is met when all its member conditions are met.
 * 
 */
public final class AlertRuleAllOfConditionArgs extends io.pulumi.resources.ResourceArgs {

    public static final AlertRuleAllOfConditionArgs Empty = new AlertRuleAllOfConditionArgs();

    /**
     * The list of Activity Log Alert rule conditions.
     * 
     */
    @InputImport(name="allOf", required=true)
      private final Input<List<AlertRuleAnyOfOrLeafConditionArgs>> allOf;

    public Input<List<AlertRuleAnyOfOrLeafConditionArgs>> getAllOf() {
        return this.allOf;
    }

    public AlertRuleAllOfConditionArgs(Input<List<AlertRuleAnyOfOrLeafConditionArgs>> allOf) {
        this.allOf = Objects.requireNonNull(allOf, "expected parameter 'allOf' to be non-null");
    }

    private AlertRuleAllOfConditionArgs() {
        this.allOf = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertRuleAllOfConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<AlertRuleAnyOfOrLeafConditionArgs>> allOf;

        public Builder() {
    	      // Empty
        }

        public Builder(AlertRuleAllOfConditionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allOf = defaults.allOf;
        }

        public Builder allOf(Input<List<AlertRuleAnyOfOrLeafConditionArgs>> allOf) {
            this.allOf = Objects.requireNonNull(allOf);
            return this;
        }

        public Builder allOf(List<AlertRuleAnyOfOrLeafConditionArgs> allOf) {
            this.allOf = Input.of(Objects.requireNonNull(allOf));
            return this;
        }
        public AlertRuleAllOfConditionArgs build() {
            return new AlertRuleAllOfConditionArgs(allOf);
        }
    }
}
