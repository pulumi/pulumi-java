// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.healthcareapis;

import io.pulumi.azurenative.healthcareapis.inputs.IotEventHubIngestionEndpointConfigurationArgs;
import io.pulumi.azurenative.healthcareapis.inputs.IotMappingPropertiesArgs;
import io.pulumi.azurenative.healthcareapis.inputs.ServiceManagedIdentityIdentityArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IotConnectorArgs extends io.pulumi.resources.ResourceArgs {

    public static final IotConnectorArgs Empty = new IotConnectorArgs();

    /**
     * Device Mappings.
     * 
     */
    @InputImport(name="deviceMapping")
    private final @Nullable Input<IotMappingPropertiesArgs> deviceMapping;

    public Input<IotMappingPropertiesArgs> getDeviceMapping() {
        return this.deviceMapping == null ? Input.empty() : this.deviceMapping;
    }

    /**
     * Setting indicating whether the service has a managed identity associated with it.
     * 
     */
    @InputImport(name="identity")
    private final @Nullable Input<ServiceManagedIdentityIdentityArgs> identity;

    public Input<ServiceManagedIdentityIdentityArgs> getIdentity() {
        return this.identity == null ? Input.empty() : this.identity;
    }

    /**
     * Source configuration.
     * 
     */
    @InputImport(name="ingestionEndpointConfiguration")
    private final @Nullable Input<IotEventHubIngestionEndpointConfigurationArgs> ingestionEndpointConfiguration;

    public Input<IotEventHubIngestionEndpointConfigurationArgs> getIngestionEndpointConfiguration() {
        return this.ingestionEndpointConfiguration == null ? Input.empty() : this.ingestionEndpointConfiguration;
    }

    /**
     * The name of IoT Connector resource.
     * 
     */
    @InputImport(name="iotConnectorName")
    private final @Nullable Input<String> iotConnectorName;

    public Input<String> getIotConnectorName() {
        return this.iotConnectorName == null ? Input.empty() : this.iotConnectorName;
    }

    /**
     * The resource location.
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The name of the resource group that contains the service instance.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The name of workspace resource.
     * 
     */
    @InputImport(name="workspaceName", required=true)
    private final Input<String> workspaceName;

    public Input<String> getWorkspaceName() {
        return this.workspaceName;
    }

    public IotConnectorArgs(
        @Nullable Input<IotMappingPropertiesArgs> deviceMapping,
        @Nullable Input<ServiceManagedIdentityIdentityArgs> identity,
        @Nullable Input<IotEventHubIngestionEndpointConfigurationArgs> ingestionEndpointConfiguration,
        @Nullable Input<String> iotConnectorName,
        @Nullable Input<String> location,
        Input<String> resourceGroupName,
        @Nullable Input<Map<String,String>> tags,
        Input<String> workspaceName) {
        this.deviceMapping = deviceMapping;
        this.identity = identity;
        this.ingestionEndpointConfiguration = ingestionEndpointConfiguration;
        this.iotConnectorName = iotConnectorName;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private IotConnectorArgs() {
        this.deviceMapping = Input.empty();
        this.identity = Input.empty();
        this.ingestionEndpointConfiguration = Input.empty();
        this.iotConnectorName = Input.empty();
        this.location = Input.empty();
        this.resourceGroupName = Input.empty();
        this.tags = Input.empty();
        this.workspaceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IotConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<IotMappingPropertiesArgs> deviceMapping;
        private @Nullable Input<ServiceManagedIdentityIdentityArgs> identity;
        private @Nullable Input<IotEventHubIngestionEndpointConfigurationArgs> ingestionEndpointConfiguration;
        private @Nullable Input<String> iotConnectorName;
        private @Nullable Input<String> location;
        private Input<String> resourceGroupName;
        private @Nullable Input<Map<String,String>> tags;
        private Input<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(IotConnectorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceMapping = defaults.deviceMapping;
    	      this.identity = defaults.identity;
    	      this.ingestionEndpointConfiguration = defaults.ingestionEndpointConfiguration;
    	      this.iotConnectorName = defaults.iotConnectorName;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder setDeviceMapping(@Nullable Input<IotMappingPropertiesArgs> deviceMapping) {
            this.deviceMapping = deviceMapping;
            return this;
        }

        public Builder setDeviceMapping(@Nullable IotMappingPropertiesArgs deviceMapping) {
            this.deviceMapping = Input.ofNullable(deviceMapping);
            return this;
        }

        public Builder setIdentity(@Nullable Input<ServiceManagedIdentityIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }

        public Builder setIdentity(@Nullable ServiceManagedIdentityIdentityArgs identity) {
            this.identity = Input.ofNullable(identity);
            return this;
        }

        public Builder setIngestionEndpointConfiguration(@Nullable Input<IotEventHubIngestionEndpointConfigurationArgs> ingestionEndpointConfiguration) {
            this.ingestionEndpointConfiguration = ingestionEndpointConfiguration;
            return this;
        }

        public Builder setIngestionEndpointConfiguration(@Nullable IotEventHubIngestionEndpointConfigurationArgs ingestionEndpointConfiguration) {
            this.ingestionEndpointConfiguration = Input.ofNullable(ingestionEndpointConfiguration);
            return this;
        }

        public Builder setIotConnectorName(@Nullable Input<String> iotConnectorName) {
            this.iotConnectorName = iotConnectorName;
            return this;
        }

        public Builder setIotConnectorName(@Nullable String iotConnectorName) {
            this.iotConnectorName = Input.ofNullable(iotConnectorName);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setWorkspaceName(Input<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }

        public Builder setWorkspaceName(String workspaceName) {
            this.workspaceName = Input.of(Objects.requireNonNull(workspaceName));
            return this;
        }

        public IotConnectorArgs build() {
            return new IotConnectorArgs(deviceMapping, identity, ingestionEndpointConfiguration, iotConnectorName, location, resourceGroupName, tags, workspaceName);
        }
    }
}
