// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.healthcareapis;

import io.pulumi.azurenative.healthcareapis.inputs.IotEventHubIngestionEndpointConfigurationArgs;
import io.pulumi.azurenative.healthcareapis.inputs.IotMappingPropertiesArgs;
import io.pulumi.azurenative.healthcareapis.inputs.ServiceManagedIdentityIdentityArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IotConnectorArgs extends io.pulumi.resources.ResourceArgs {

    public static final IotConnectorArgs Empty = new IotConnectorArgs();

    /**
     * Device Mappings.
     * 
     */
    @Import(name="deviceMapping")
      private final @Nullable Output<IotMappingPropertiesArgs> deviceMapping;

    public Output<IotMappingPropertiesArgs> getDeviceMapping() {
        return this.deviceMapping == null ? Codegen.empty() : this.deviceMapping;
    }

    /**
     * Setting indicating whether the service has a managed identity associated with it.
     * 
     */
    @Import(name="identity")
      private final @Nullable Output<ServiceManagedIdentityIdentityArgs> identity;

    public Output<ServiceManagedIdentityIdentityArgs> getIdentity() {
        return this.identity == null ? Codegen.empty() : this.identity;
    }

    /**
     * Source configuration.
     * 
     */
    @Import(name="ingestionEndpointConfiguration")
      private final @Nullable Output<IotEventHubIngestionEndpointConfigurationArgs> ingestionEndpointConfiguration;

    public Output<IotEventHubIngestionEndpointConfigurationArgs> getIngestionEndpointConfiguration() {
        return this.ingestionEndpointConfiguration == null ? Codegen.empty() : this.ingestionEndpointConfiguration;
    }

    /**
     * The name of IoT Connector resource.
     * 
     */
    @Import(name="iotConnectorName")
      private final @Nullable Output<String> iotConnectorName;

    public Output<String> getIotConnectorName() {
        return this.iotConnectorName == null ? Codegen.empty() : this.iotConnectorName;
    }

    /**
     * The resource location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the resource group that contains the service instance.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The name of workspace resource.
     * 
     */
    @Import(name="workspaceName", required=true)
      private final Output<String> workspaceName;

    public Output<String> getWorkspaceName() {
        return this.workspaceName;
    }

    public IotConnectorArgs(
        @Nullable Output<IotMappingPropertiesArgs> deviceMapping,
        @Nullable Output<ServiceManagedIdentityIdentityArgs> identity,
        @Nullable Output<IotEventHubIngestionEndpointConfigurationArgs> ingestionEndpointConfiguration,
        @Nullable Output<String> iotConnectorName,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags,
        Output<String> workspaceName) {
        this.deviceMapping = deviceMapping;
        this.identity = identity;
        this.ingestionEndpointConfiguration = ingestionEndpointConfiguration;
        this.iotConnectorName = iotConnectorName;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.workspaceName = Objects.requireNonNull(workspaceName, "expected parameter 'workspaceName' to be non-null");
    }

    private IotConnectorArgs() {
        this.deviceMapping = Codegen.empty();
        this.identity = Codegen.empty();
        this.ingestionEndpointConfiguration = Codegen.empty();
        this.iotConnectorName = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
        this.workspaceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IotConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<IotMappingPropertiesArgs> deviceMapping;
        private @Nullable Output<ServiceManagedIdentityIdentityArgs> identity;
        private @Nullable Output<IotEventHubIngestionEndpointConfigurationArgs> ingestionEndpointConfiguration;
        private @Nullable Output<String> iotConnectorName;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;
        private Output<String> workspaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(IotConnectorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceMapping = defaults.deviceMapping;
    	      this.identity = defaults.identity;
    	      this.ingestionEndpointConfiguration = defaults.ingestionEndpointConfiguration;
    	      this.iotConnectorName = defaults.iotConnectorName;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.workspaceName = defaults.workspaceName;
        }

        public Builder deviceMapping(@Nullable Output<IotMappingPropertiesArgs> deviceMapping) {
            this.deviceMapping = deviceMapping;
            return this;
        }
        public Builder deviceMapping(@Nullable IotMappingPropertiesArgs deviceMapping) {
            this.deviceMapping = Codegen.ofNullable(deviceMapping);
            return this;
        }
        public Builder identity(@Nullable Output<ServiceManagedIdentityIdentityArgs> identity) {
            this.identity = identity;
            return this;
        }
        public Builder identity(@Nullable ServiceManagedIdentityIdentityArgs identity) {
            this.identity = Codegen.ofNullable(identity);
            return this;
        }
        public Builder ingestionEndpointConfiguration(@Nullable Output<IotEventHubIngestionEndpointConfigurationArgs> ingestionEndpointConfiguration) {
            this.ingestionEndpointConfiguration = ingestionEndpointConfiguration;
            return this;
        }
        public Builder ingestionEndpointConfiguration(@Nullable IotEventHubIngestionEndpointConfigurationArgs ingestionEndpointConfiguration) {
            this.ingestionEndpointConfiguration = Codegen.ofNullable(ingestionEndpointConfiguration);
            return this;
        }
        public Builder iotConnectorName(@Nullable Output<String> iotConnectorName) {
            this.iotConnectorName = iotConnectorName;
            return this;
        }
        public Builder iotConnectorName(@Nullable String iotConnectorName) {
            this.iotConnectorName = Codegen.ofNullable(iotConnectorName);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder workspaceName(Output<String> workspaceName) {
            this.workspaceName = Objects.requireNonNull(workspaceName);
            return this;
        }
        public Builder workspaceName(String workspaceName) {
            this.workspaceName = Output.of(Objects.requireNonNull(workspaceName));
            return this;
        }        public IotConnectorArgs build() {
            return new IotConnectorArgs(deviceMapping, identity, ingestionEndpointConfiguration, iotConnectorName, location, resourceGroupName, tags, workspaceName);
        }
    }
}
