// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerservice;

import io.pulumi.azurenative.containerservice.inputs.NetworkProfileArgs;
import io.pulumi.azurenative.containerservice.inputs.OpenShiftManagedClusterAgentPoolProfileArgs;
import io.pulumi.azurenative.containerservice.inputs.OpenShiftManagedClusterAuthProfileArgs;
import io.pulumi.azurenative.containerservice.inputs.OpenShiftManagedClusterMasterPoolProfileArgs;
import io.pulumi.azurenative.containerservice.inputs.OpenShiftRouterProfileArgs;
import io.pulumi.azurenative.containerservice.inputs.PurchasePlanArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OpenShiftManagedClusterArgs extends io.pulumi.resources.ResourceArgs {

    public static final OpenShiftManagedClusterArgs Empty = new OpenShiftManagedClusterArgs();

    /**
     * Configuration of OpenShift cluster VMs.
     * 
     */
    @InputImport(name="agentPoolProfiles")
    private final @Nullable Input<List<OpenShiftManagedClusterAgentPoolProfileArgs>> agentPoolProfiles;

    public Input<List<OpenShiftManagedClusterAgentPoolProfileArgs>> getAgentPoolProfiles() {
        return this.agentPoolProfiles == null ? Input.empty() : this.agentPoolProfiles;
    }

    /**
     * Configures OpenShift authentication.
     * 
     */
    @InputImport(name="authProfile")
    private final @Nullable Input<OpenShiftManagedClusterAuthProfileArgs> authProfile;

    public Input<OpenShiftManagedClusterAuthProfileArgs> getAuthProfile() {
        return this.authProfile == null ? Input.empty() : this.authProfile;
    }

    /**
     * Resource location
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Configuration for OpenShift master VMs.
     * 
     */
    @InputImport(name="masterPoolProfile")
    private final @Nullable Input<OpenShiftManagedClusterMasterPoolProfileArgs> masterPoolProfile;

    public Input<OpenShiftManagedClusterMasterPoolProfileArgs> getMasterPoolProfile() {
        return this.masterPoolProfile == null ? Input.empty() : this.masterPoolProfile;
    }

    /**
     * Configuration for OpenShift networking.
     * 
     */
    @InputImport(name="networkProfile")
    private final @Nullable Input<NetworkProfileArgs> networkProfile;

    public Input<NetworkProfileArgs> getNetworkProfile() {
        return this.networkProfile == null ? Input.empty() : this.networkProfile;
    }

    /**
     * Version of OpenShift specified when creating the cluster.
     * 
     */
    @InputImport(name="openShiftVersion", required=true)
    private final Input<String> openShiftVersion;

    public Input<String> getOpenShiftVersion() {
        return this.openShiftVersion;
    }

    /**
     * Define the resource plan as required by ARM for billing purposes
     * 
     */
    @InputImport(name="plan")
    private final @Nullable Input<PurchasePlanArgs> plan;

    public Input<PurchasePlanArgs> getPlan() {
        return this.plan == null ? Input.empty() : this.plan;
    }

    /**
     * The name of the resource group.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the OpenShift managed cluster resource.
     * 
     */
    @InputImport(name="resourceName")
    private final @Nullable Input<String> resourceName;

    public Input<String> getPropResourceName() {
        return this.resourceName == null ? Input.empty() : this.resourceName;
    }

    /**
     * Configuration for OpenShift router(s).
     * 
     */
    @InputImport(name="routerProfiles")
    private final @Nullable Input<List<OpenShiftRouterProfileArgs>> routerProfiles;

    public Input<List<OpenShiftRouterProfileArgs>> getRouterProfiles() {
        return this.routerProfiles == null ? Input.empty() : this.routerProfiles;
    }

    /**
     * Resource tags
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public OpenShiftManagedClusterArgs(
        @Nullable Input<List<OpenShiftManagedClusterAgentPoolProfileArgs>> agentPoolProfiles,
        @Nullable Input<OpenShiftManagedClusterAuthProfileArgs> authProfile,
        @Nullable Input<String> location,
        @Nullable Input<OpenShiftManagedClusterMasterPoolProfileArgs> masterPoolProfile,
        @Nullable Input<NetworkProfileArgs> networkProfile,
        Input<String> openShiftVersion,
        @Nullable Input<PurchasePlanArgs> plan,
        Input<String> resourceGroupName,
        @Nullable Input<String> resourceName,
        @Nullable Input<List<OpenShiftRouterProfileArgs>> routerProfiles,
        @Nullable Input<Map<String,String>> tags) {
        this.agentPoolProfiles = agentPoolProfiles;
        this.authProfile = authProfile;
        this.location = location;
        this.masterPoolProfile = masterPoolProfile;
        this.networkProfile = networkProfile;
        this.openShiftVersion = Objects.requireNonNull(openShiftVersion, "expected parameter 'openShiftVersion' to be non-null");
        this.plan = plan;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.resourceName = resourceName;
        this.routerProfiles = routerProfiles;
        this.tags = tags;
    }

    private OpenShiftManagedClusterArgs() {
        this.agentPoolProfiles = Input.empty();
        this.authProfile = Input.empty();
        this.location = Input.empty();
        this.masterPoolProfile = Input.empty();
        this.networkProfile = Input.empty();
        this.openShiftVersion = Input.empty();
        this.plan = Input.empty();
        this.resourceGroupName = Input.empty();
        this.resourceName = Input.empty();
        this.routerProfiles = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OpenShiftManagedClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<OpenShiftManagedClusterAgentPoolProfileArgs>> agentPoolProfiles;
        private @Nullable Input<OpenShiftManagedClusterAuthProfileArgs> authProfile;
        private @Nullable Input<String> location;
        private @Nullable Input<OpenShiftManagedClusterMasterPoolProfileArgs> masterPoolProfile;
        private @Nullable Input<NetworkProfileArgs> networkProfile;
        private Input<String> openShiftVersion;
        private @Nullable Input<PurchasePlanArgs> plan;
        private Input<String> resourceGroupName;
        private @Nullable Input<String> resourceName;
        private @Nullable Input<List<OpenShiftRouterProfileArgs>> routerProfiles;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(OpenShiftManagedClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentPoolProfiles = defaults.agentPoolProfiles;
    	      this.authProfile = defaults.authProfile;
    	      this.location = defaults.location;
    	      this.masterPoolProfile = defaults.masterPoolProfile;
    	      this.networkProfile = defaults.networkProfile;
    	      this.openShiftVersion = defaults.openShiftVersion;
    	      this.plan = defaults.plan;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceName = defaults.resourceName;
    	      this.routerProfiles = defaults.routerProfiles;
    	      this.tags = defaults.tags;
        }

        public Builder setAgentPoolProfiles(@Nullable Input<List<OpenShiftManagedClusterAgentPoolProfileArgs>> agentPoolProfiles) {
            this.agentPoolProfiles = agentPoolProfiles;
            return this;
        }

        public Builder setAgentPoolProfiles(@Nullable List<OpenShiftManagedClusterAgentPoolProfileArgs> agentPoolProfiles) {
            this.agentPoolProfiles = Input.ofNullable(agentPoolProfiles);
            return this;
        }

        public Builder setAuthProfile(@Nullable Input<OpenShiftManagedClusterAuthProfileArgs> authProfile) {
            this.authProfile = authProfile;
            return this;
        }

        public Builder setAuthProfile(@Nullable OpenShiftManagedClusterAuthProfileArgs authProfile) {
            this.authProfile = Input.ofNullable(authProfile);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setMasterPoolProfile(@Nullable Input<OpenShiftManagedClusterMasterPoolProfileArgs> masterPoolProfile) {
            this.masterPoolProfile = masterPoolProfile;
            return this;
        }

        public Builder setMasterPoolProfile(@Nullable OpenShiftManagedClusterMasterPoolProfileArgs masterPoolProfile) {
            this.masterPoolProfile = Input.ofNullable(masterPoolProfile);
            return this;
        }

        public Builder setNetworkProfile(@Nullable Input<NetworkProfileArgs> networkProfile) {
            this.networkProfile = networkProfile;
            return this;
        }

        public Builder setNetworkProfile(@Nullable NetworkProfileArgs networkProfile) {
            this.networkProfile = Input.ofNullable(networkProfile);
            return this;
        }

        public Builder setOpenShiftVersion(Input<String> openShiftVersion) {
            this.openShiftVersion = Objects.requireNonNull(openShiftVersion);
            return this;
        }

        public Builder setOpenShiftVersion(String openShiftVersion) {
            this.openShiftVersion = Input.of(Objects.requireNonNull(openShiftVersion));
            return this;
        }

        public Builder setPlan(@Nullable Input<PurchasePlanArgs> plan) {
            this.plan = plan;
            return this;
        }

        public Builder setPlan(@Nullable PurchasePlanArgs plan) {
            this.plan = Input.ofNullable(plan);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setResourceName(@Nullable Input<String> resourceName) {
            this.resourceName = resourceName;
            return this;
        }

        public Builder setResourceName(@Nullable String resourceName) {
            this.resourceName = Input.ofNullable(resourceName);
            return this;
        }

        public Builder setRouterProfiles(@Nullable Input<List<OpenShiftRouterProfileArgs>> routerProfiles) {
            this.routerProfiles = routerProfiles;
            return this;
        }

        public Builder setRouterProfiles(@Nullable List<OpenShiftRouterProfileArgs> routerProfiles) {
            this.routerProfiles = Input.ofNullable(routerProfiles);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public OpenShiftManagedClusterArgs build() {
            return new OpenShiftManagedClusterArgs(agentPoolProfiles, authProfile, location, masterPoolProfile, networkProfile, openShiftVersion, plan, resourceGroupName, resourceName, routerProfiles, tags);
        }
    }
}
