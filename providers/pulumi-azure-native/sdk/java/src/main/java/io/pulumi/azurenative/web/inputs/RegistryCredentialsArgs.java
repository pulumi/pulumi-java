// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Container App Private Registry
 * 
 */
public final class RegistryCredentialsArgs extends io.pulumi.resources.ResourceArgs {

    public static final RegistryCredentialsArgs Empty = new RegistryCredentialsArgs();

    /**
     * The name of the Secret that contains the registry login password
     * 
     */
    @Import(name="passwordSecretRef")
      private final @Nullable Output<String> passwordSecretRef;

    public Output<String> getPasswordSecretRef() {
        return this.passwordSecretRef == null ? Codegen.empty() : this.passwordSecretRef;
    }

    /**
     * Container Registry Server
     * 
     */
    @Import(name="server")
      private final @Nullable Output<String> server;

    public Output<String> getServer() {
        return this.server == null ? Codegen.empty() : this.server;
    }

    /**
     * Container Registry Username
     * 
     */
    @Import(name="username")
      private final @Nullable Output<String> username;

    public Output<String> getUsername() {
        return this.username == null ? Codegen.empty() : this.username;
    }

    public RegistryCredentialsArgs(
        @Nullable Output<String> passwordSecretRef,
        @Nullable Output<String> server,
        @Nullable Output<String> username) {
        this.passwordSecretRef = passwordSecretRef;
        this.server = server;
        this.username = username;
    }

    private RegistryCredentialsArgs() {
        this.passwordSecretRef = Codegen.empty();
        this.server = Codegen.empty();
        this.username = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> passwordSecretRef;
        private @Nullable Output<String> server;
        private @Nullable Output<String> username;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistryCredentialsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.passwordSecretRef = defaults.passwordSecretRef;
    	      this.server = defaults.server;
    	      this.username = defaults.username;
        }

        public Builder passwordSecretRef(@Nullable Output<String> passwordSecretRef) {
            this.passwordSecretRef = passwordSecretRef;
            return this;
        }
        public Builder passwordSecretRef(@Nullable String passwordSecretRef) {
            this.passwordSecretRef = Codegen.ofNullable(passwordSecretRef);
            return this;
        }
        public Builder server(@Nullable Output<String> server) {
            this.server = server;
            return this;
        }
        public Builder server(@Nullable String server) {
            this.server = Codegen.ofNullable(server);
            return this;
        }
        public Builder username(@Nullable Output<String> username) {
            this.username = username;
            return this;
        }
        public Builder username(@Nullable String username) {
            this.username = Codegen.ofNullable(username);
            return this;
        }        public RegistryCredentialsArgs build() {
            return new RegistryCredentialsArgs(passwordSecretRef, server, username);
        }
    }
}
