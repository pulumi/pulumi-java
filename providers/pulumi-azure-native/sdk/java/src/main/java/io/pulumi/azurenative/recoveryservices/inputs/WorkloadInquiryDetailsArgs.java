// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.recoveryservices.inputs;

import io.pulumi.azurenative.recoveryservices.inputs.InquiryValidationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Details of an inquired protectable item.
 * 
 */
public final class WorkloadInquiryDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkloadInquiryDetailsArgs Empty = new WorkloadInquiryDetailsArgs();

    /**
     * Inquiry validation such as permissions and other backup validations.
     * 
     */
    @Import(name="inquiryValidation")
      private final @Nullable Output<InquiryValidationArgs> inquiryValidation;

    public Output<InquiryValidationArgs> getInquiryValidation() {
        return this.inquiryValidation == null ? Codegen.empty() : this.inquiryValidation;
    }

    /**
     * Contains the protectable item Count inside this Container.
     * 
     */
    @Import(name="itemCount")
      private final @Nullable Output<Double> itemCount;

    public Output<Double> getItemCount() {
        return this.itemCount == null ? Codegen.empty() : this.itemCount;
    }

    /**
     * Type of the Workload such as SQL, Oracle etc.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> getType() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public WorkloadInquiryDetailsArgs(
        @Nullable Output<InquiryValidationArgs> inquiryValidation,
        @Nullable Output<Double> itemCount,
        @Nullable Output<String> type) {
        this.inquiryValidation = inquiryValidation;
        this.itemCount = itemCount;
        this.type = type;
    }

    private WorkloadInquiryDetailsArgs() {
        this.inquiryValidation = Codegen.empty();
        this.itemCount = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadInquiryDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<InquiryValidationArgs> inquiryValidation;
        private @Nullable Output<Double> itemCount;
        private @Nullable Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkloadInquiryDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inquiryValidation = defaults.inquiryValidation;
    	      this.itemCount = defaults.itemCount;
    	      this.type = defaults.type;
        }

        public Builder inquiryValidation(@Nullable Output<InquiryValidationArgs> inquiryValidation) {
            this.inquiryValidation = inquiryValidation;
            return this;
        }
        public Builder inquiryValidation(@Nullable InquiryValidationArgs inquiryValidation) {
            this.inquiryValidation = Codegen.ofNullable(inquiryValidation);
            return this;
        }
        public Builder itemCount(@Nullable Output<Double> itemCount) {
            this.itemCount = itemCount;
            return this;
        }
        public Builder itemCount(@Nullable Double itemCount) {
            this.itemCount = Codegen.ofNullable(itemCount);
            return this;
        }
        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public WorkloadInquiryDetailsArgs build() {
            return new WorkloadInquiryDetailsArgs(inquiryValidation, itemCount, type);
        }
    }
}
