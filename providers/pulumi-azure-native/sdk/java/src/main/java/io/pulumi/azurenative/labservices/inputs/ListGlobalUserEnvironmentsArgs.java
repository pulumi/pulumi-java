// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.labservices.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListGlobalUserEnvironmentsArgs extends io.pulumi.resources.InvokeArgs {

    public static final ListGlobalUserEnvironmentsArgs Empty = new ListGlobalUserEnvironmentsArgs();

    /**
     * The resource Id of the lab
     * 
     */
    @InputImport(name="labId")
        private final @Nullable String labId;

    public Optional<String> getLabId() {
        return this.labId == null ? Optional.empty() : Optional.ofNullable(this.labId);
    }

    /**
     * The name of the user.
     * 
     */
    @InputImport(name="userName", required=true)
        private final String userName;

    public String getUserName() {
        return this.userName;
    }

    public ListGlobalUserEnvironmentsArgs(
        @Nullable String labId,
        String userName) {
        this.labId = labId;
        this.userName = Objects.requireNonNull(userName, "expected parameter 'userName' to be non-null");
    }

    private ListGlobalUserEnvironmentsArgs() {
        this.labId = null;
        this.userName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListGlobalUserEnvironmentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String labId;
        private String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(ListGlobalUserEnvironmentsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.labId = defaults.labId;
    	      this.userName = defaults.userName;
        }

        public Builder setLabId(@Nullable String labId) {
            this.labId = labId;
            return this;
        }

        public Builder setUserName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        public ListGlobalUserEnvironmentsArgs build() {
            return new ListGlobalUserEnvironmentsArgs(labId, userName);
        }
    }
}
