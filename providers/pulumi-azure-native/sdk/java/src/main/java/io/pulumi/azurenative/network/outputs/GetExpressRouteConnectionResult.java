// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.ExpressRouteCircuitPeeringIdResponse;
import io.pulumi.azurenative.network.outputs.RoutingConfigurationResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetExpressRouteConnectionResult {
    private final @Nullable String authorizationKey;
    private final @Nullable Boolean enableInternetSecurity;
    private final ExpressRouteCircuitPeeringIdResponse expressRouteCircuitPeering;
    private final @Nullable Boolean expressRouteGatewayBypass;
    private final @Nullable String id;
    private final String name;
    private final String provisioningState;
    private final @Nullable RoutingConfigurationResponse routingConfiguration;
    private final @Nullable Integer routingWeight;

    @OutputCustomType.Constructor({"authorizationKey","enableInternetSecurity","expressRouteCircuitPeering","expressRouteGatewayBypass","id","name","provisioningState","routingConfiguration","routingWeight"})
    private GetExpressRouteConnectionResult(
        @Nullable String authorizationKey,
        @Nullable Boolean enableInternetSecurity,
        ExpressRouteCircuitPeeringIdResponse expressRouteCircuitPeering,
        @Nullable Boolean expressRouteGatewayBypass,
        @Nullable String id,
        String name,
        String provisioningState,
        @Nullable RoutingConfigurationResponse routingConfiguration,
        @Nullable Integer routingWeight) {
        this.authorizationKey = authorizationKey;
        this.enableInternetSecurity = enableInternetSecurity;
        this.expressRouteCircuitPeering = Objects.requireNonNull(expressRouteCircuitPeering);
        this.expressRouteGatewayBypass = expressRouteGatewayBypass;
        this.id = id;
        this.name = Objects.requireNonNull(name);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.routingConfiguration = routingConfiguration;
        this.routingWeight = routingWeight;
    }

    public Optional<String> getAuthorizationKey() {
        return Optional.ofNullable(this.authorizationKey);
    }
    public Optional<Boolean> getEnableInternetSecurity() {
        return Optional.ofNullable(this.enableInternetSecurity);
    }
    public ExpressRouteCircuitPeeringIdResponse getExpressRouteCircuitPeering() {
        return this.expressRouteCircuitPeering;
    }
    public Optional<Boolean> getExpressRouteGatewayBypass() {
        return Optional.ofNullable(this.expressRouteGatewayBypass);
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public String getName() {
        return this.name;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<RoutingConfigurationResponse> getRoutingConfiguration() {
        return Optional.ofNullable(this.routingConfiguration);
    }
    public Optional<Integer> getRoutingWeight() {
        return Optional.ofNullable(this.routingWeight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExpressRouteConnectionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String authorizationKey;
        private @Nullable Boolean enableInternetSecurity;
        private ExpressRouteCircuitPeeringIdResponse expressRouteCircuitPeering;
        private @Nullable Boolean expressRouteGatewayBypass;
        private @Nullable String id;
        private String name;
        private String provisioningState;
        private @Nullable RoutingConfigurationResponse routingConfiguration;
        private @Nullable Integer routingWeight;

        public Builder() {
    	      // Empty
        }

        public Builder(GetExpressRouteConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationKey = defaults.authorizationKey;
    	      this.enableInternetSecurity = defaults.enableInternetSecurity;
    	      this.expressRouteCircuitPeering = defaults.expressRouteCircuitPeering;
    	      this.expressRouteGatewayBypass = defaults.expressRouteGatewayBypass;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.routingConfiguration = defaults.routingConfiguration;
    	      this.routingWeight = defaults.routingWeight;
        }

        public Builder setAuthorizationKey(@Nullable String authorizationKey) {
            this.authorizationKey = authorizationKey;
            return this;
        }

        public Builder setEnableInternetSecurity(@Nullable Boolean enableInternetSecurity) {
            this.enableInternetSecurity = enableInternetSecurity;
            return this;
        }

        public Builder setExpressRouteCircuitPeering(ExpressRouteCircuitPeeringIdResponse expressRouteCircuitPeering) {
            this.expressRouteCircuitPeering = Objects.requireNonNull(expressRouteCircuitPeering);
            return this;
        }

        public Builder setExpressRouteGatewayBypass(@Nullable Boolean expressRouteGatewayBypass) {
            this.expressRouteGatewayBypass = expressRouteGatewayBypass;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRoutingConfiguration(@Nullable RoutingConfigurationResponse routingConfiguration) {
            this.routingConfiguration = routingConfiguration;
            return this;
        }

        public Builder setRoutingWeight(@Nullable Integer routingWeight) {
            this.routingWeight = routingWeight;
            return this;
        }

        public GetExpressRouteConnectionResult build() {
            return new GetExpressRouteConnectionResult(authorizationKey, enableInternetSecurity, expressRouteCircuitPeering, expressRouteGatewayBypass, id, name, provisioningState, routingConfiguration, routingWeight);
        }
    }
}
