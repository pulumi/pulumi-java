// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.edgeorder.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * Dimensions of a configuration.
 * 
 */
public final class DimensionsResponse extends io.pulumi.resources.InvokeArgs {

    public static final DimensionsResponse Empty = new DimensionsResponse();

    /**
     * Depth of the device.
     * 
     */
    @InputImport(name="depth", required=true)
    private final Double depth;

    public Double getDepth() {
        return this.depth;
    }

    /**
     * Height of the device.
     * 
     */
    @InputImport(name="height", required=true)
    private final Double height;

    public Double getHeight() {
        return this.height;
    }

    /**
     * Length of the device.
     * 
     */
    @InputImport(name="length", required=true)
    private final Double length;

    public Double getLength() {
        return this.length;
    }

    /**
     * Unit for the dimensions of length, height and width.
     * 
     */
    @InputImport(name="lengthHeightUnit", required=true)
    private final String lengthHeightUnit;

    public String getLengthHeightUnit() {
        return this.lengthHeightUnit;
    }

    /**
     * Weight of the device.
     * 
     */
    @InputImport(name="weight", required=true)
    private final Double weight;

    public Double getWeight() {
        return this.weight;
    }

    /**
     * Unit for the dimensions of weight.
     * 
     */
    @InputImport(name="weightUnit", required=true)
    private final String weightUnit;

    public String getWeightUnit() {
        return this.weightUnit;
    }

    /**
     * Width of the device.
     * 
     */
    @InputImport(name="width", required=true)
    private final Double width;

    public Double getWidth() {
        return this.width;
    }

    public DimensionsResponse(
        Double depth,
        Double height,
        Double length,
        String lengthHeightUnit,
        Double weight,
        String weightUnit,
        Double width) {
        this.depth = Objects.requireNonNull(depth, "expected parameter 'depth' to be non-null");
        this.height = Objects.requireNonNull(height, "expected parameter 'height' to be non-null");
        this.length = Objects.requireNonNull(length, "expected parameter 'length' to be non-null");
        this.lengthHeightUnit = Objects.requireNonNull(lengthHeightUnit, "expected parameter 'lengthHeightUnit' to be non-null");
        this.weight = Objects.requireNonNull(weight, "expected parameter 'weight' to be non-null");
        this.weightUnit = Objects.requireNonNull(weightUnit, "expected parameter 'weightUnit' to be non-null");
        this.width = Objects.requireNonNull(width, "expected parameter 'width' to be non-null");
    }

    private DimensionsResponse() {
        this.depth = null;
        this.height = null;
        this.length = null;
        this.lengthHeightUnit = null;
        this.weight = null;
        this.weightUnit = null;
        this.width = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DimensionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double depth;
        private Double height;
        private Double length;
        private String lengthHeightUnit;
        private Double weight;
        private String weightUnit;
        private Double width;

        public Builder() {
    	      // Empty
        }

        public Builder(DimensionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.depth = defaults.depth;
    	      this.height = defaults.height;
    	      this.length = defaults.length;
    	      this.lengthHeightUnit = defaults.lengthHeightUnit;
    	      this.weight = defaults.weight;
    	      this.weightUnit = defaults.weightUnit;
    	      this.width = defaults.width;
        }

        public Builder setDepth(Double depth) {
            this.depth = Objects.requireNonNull(depth);
            return this;
        }

        public Builder setHeight(Double height) {
            this.height = Objects.requireNonNull(height);
            return this;
        }

        public Builder setLength(Double length) {
            this.length = Objects.requireNonNull(length);
            return this;
        }

        public Builder setLengthHeightUnit(String lengthHeightUnit) {
            this.lengthHeightUnit = Objects.requireNonNull(lengthHeightUnit);
            return this;
        }

        public Builder setWeight(Double weight) {
            this.weight = Objects.requireNonNull(weight);
            return this;
        }

        public Builder setWeightUnit(String weightUnit) {
            this.weightUnit = Objects.requireNonNull(weightUnit);
            return this;
        }

        public Builder setWidth(Double width) {
            this.width = Objects.requireNonNull(width);
            return this;
        }

        public DimensionsResponse build() {
            return new DimensionsResponse(depth, height, length, lengthHeightUnit, weight, weightUnit, width);
        }
    }
}
