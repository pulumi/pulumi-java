// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.securityinsights.inputs;

import io.pulumi.azurenative.securityinsights.enums.AutomationRulePropertyConditionSupportedOperator;
import io.pulumi.azurenative.securityinsights.enums.AutomationRulePropertyConditionSupportedProperty;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The configuration of the automation rule condition
 * 
 */
public final class AutomationRulePropertyValuesConditionConditionPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final AutomationRulePropertyValuesConditionConditionPropertiesArgs Empty = new AutomationRulePropertyValuesConditionConditionPropertiesArgs();

    /**
     * The operator to use for evaluation the condition
     * 
     */
    @Import(name="operator")
      private final @Nullable Output<Either<String,AutomationRulePropertyConditionSupportedOperator>> operator;

    public Output<Either<String,AutomationRulePropertyConditionSupportedOperator>> getOperator() {
        return this.operator == null ? Codegen.empty() : this.operator;
    }

    /**
     * The property to evaluate
     * 
     */
    @Import(name="propertyName")
      private final @Nullable Output<Either<String,AutomationRulePropertyConditionSupportedProperty>> propertyName;

    public Output<Either<String,AutomationRulePropertyConditionSupportedProperty>> getPropertyName() {
        return this.propertyName == null ? Codegen.empty() : this.propertyName;
    }

    /**
     * The values to use for evaluating the condition
     * 
     */
    @Import(name="propertyValues")
      private final @Nullable Output<List<String>> propertyValues;

    public Output<List<String>> getPropertyValues() {
        return this.propertyValues == null ? Codegen.empty() : this.propertyValues;
    }

    public AutomationRulePropertyValuesConditionConditionPropertiesArgs(
        @Nullable Output<Either<String,AutomationRulePropertyConditionSupportedOperator>> operator,
        @Nullable Output<Either<String,AutomationRulePropertyConditionSupportedProperty>> propertyName,
        @Nullable Output<List<String>> propertyValues) {
        this.operator = operator;
        this.propertyName = propertyName;
        this.propertyValues = propertyValues;
    }

    private AutomationRulePropertyValuesConditionConditionPropertiesArgs() {
        this.operator = Codegen.empty();
        this.propertyName = Codegen.empty();
        this.propertyValues = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomationRulePropertyValuesConditionConditionPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Either<String,AutomationRulePropertyConditionSupportedOperator>> operator;
        private @Nullable Output<Either<String,AutomationRulePropertyConditionSupportedProperty>> propertyName;
        private @Nullable Output<List<String>> propertyValues;

        public Builder() {
    	      // Empty
        }

        public Builder(AutomationRulePropertyValuesConditionConditionPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.operator = defaults.operator;
    	      this.propertyName = defaults.propertyName;
    	      this.propertyValues = defaults.propertyValues;
        }

        public Builder operator(@Nullable Output<Either<String,AutomationRulePropertyConditionSupportedOperator>> operator) {
            this.operator = operator;
            return this;
        }
        public Builder operator(@Nullable Either<String,AutomationRulePropertyConditionSupportedOperator> operator) {
            this.operator = Codegen.ofNullable(operator);
            return this;
        }
        public Builder propertyName(@Nullable Output<Either<String,AutomationRulePropertyConditionSupportedProperty>> propertyName) {
            this.propertyName = propertyName;
            return this;
        }
        public Builder propertyName(@Nullable Either<String,AutomationRulePropertyConditionSupportedProperty> propertyName) {
            this.propertyName = Codegen.ofNullable(propertyName);
            return this;
        }
        public Builder propertyValues(@Nullable Output<List<String>> propertyValues) {
            this.propertyValues = propertyValues;
            return this;
        }
        public Builder propertyValues(@Nullable List<String> propertyValues) {
            this.propertyValues = Codegen.ofNullable(propertyValues);
            return this;
        }
        public Builder propertyValues(String... propertyValues) {
            return propertyValues(List.of(propertyValues));
        }        public AutomationRulePropertyValuesConditionConditionPropertiesArgs build() {
            return new AutomationRulePropertyValuesConditionConditionPropertiesArgs(operator, propertyName, propertyValues);
        }
    }
}
