// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An email receiver.
 * 
 */
public final class EmailReceiverResponse extends io.pulumi.resources.InvokeArgs {

    public static final EmailReceiverResponse Empty = new EmailReceiverResponse();

    /**
     * The email address of this receiver.
     * 
     */
    @Import(name="emailAddress", required=true)
      private final String emailAddress;

    public String emailAddress() {
        return this.emailAddress;
    }

    /**
     * The name of the email receiver. Names must be unique across all receivers within an action group.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String name() {
        return this.name;
    }

    /**
     * The receiver status of the e-mail.
     * 
     */
    @Import(name="status", required=true)
      private final String status;

    public String status() {
        return this.status;
    }

    /**
     * Indicates whether to use common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
      private final @Nullable Boolean useCommonAlertSchema;

    public Optional<Boolean> useCommonAlertSchema() {
        return this.useCommonAlertSchema == null ? Optional.empty() : Optional.ofNullable(this.useCommonAlertSchema);
    }

    public EmailReceiverResponse(
        String emailAddress,
        String name,
        String status,
        @Nullable Boolean useCommonAlertSchema) {
        this.emailAddress = Objects.requireNonNull(emailAddress, "expected parameter 'emailAddress' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
        this.useCommonAlertSchema = useCommonAlertSchema == null ? false : useCommonAlertSchema;
    }

    private EmailReceiverResponse() {
        this.emailAddress = null;
        this.name = null;
        this.status = null;
        this.useCommonAlertSchema = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EmailReceiverResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String emailAddress;
        private String name;
        private String status;
        private @Nullable Boolean useCommonAlertSchema;

        public Builder() {
    	      // Empty
        }

        public Builder(EmailReceiverResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.emailAddress = defaults.emailAddress;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.useCommonAlertSchema = defaults.useCommonAlertSchema;
        }

        public Builder emailAddress(String emailAddress) {
            this.emailAddress = Objects.requireNonNull(emailAddress);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder useCommonAlertSchema(@Nullable Boolean useCommonAlertSchema) {
            this.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }        public EmailReceiverResponse build() {
            return new EmailReceiverResponse(emailAddress, name, status, useCommonAlertSchema);
        }
    }
}
