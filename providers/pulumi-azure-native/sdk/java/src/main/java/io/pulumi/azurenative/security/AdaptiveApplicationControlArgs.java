// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security;

import io.pulumi.azurenative.security.inputs.PathRecommendationArgs;
import io.pulumi.azurenative.security.inputs.ProtectionModeArgs;
import io.pulumi.azurenative.security.inputs.VmRecommendationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AdaptiveApplicationControlArgs extends io.pulumi.resources.ResourceArgs {

    public static final AdaptiveApplicationControlArgs Empty = new AdaptiveApplicationControlArgs();

    /**
     * The location where ASC stores the data of the subscription. can be retrieved from Get locations
     * 
     */
    @Import(name="ascLocation", required=true)
      private final Output<String> ascLocation;

    public Output<String> getAscLocation() {
        return this.ascLocation;
    }

    /**
     * The application control policy enforcement/protection mode of the machine group
     * 
     */
    @Import(name="enforcementMode")
      private final @Nullable Output<String> enforcementMode;

    public Output<String> getEnforcementMode() {
        return this.enforcementMode == null ? Output.empty() : this.enforcementMode;
    }

    /**
     * Name of an application control machine group
     * 
     */
    @Import(name="groupName")
      private final @Nullable Output<String> groupName;

    public Output<String> getGroupName() {
        return this.groupName == null ? Output.empty() : this.groupName;
    }

    @Import(name="pathRecommendations")
      private final @Nullable Output<List<PathRecommendationArgs>> pathRecommendations;

    public Output<List<PathRecommendationArgs>> getPathRecommendations() {
        return this.pathRecommendations == null ? Output.empty() : this.pathRecommendations;
    }

    /**
     * The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux.
     * 
     */
    @Import(name="protectionMode")
      private final @Nullable Output<ProtectionModeArgs> protectionMode;

    public Output<ProtectionModeArgs> getProtectionMode() {
        return this.protectionMode == null ? Output.empty() : this.protectionMode;
    }

    @Import(name="vmRecommendations")
      private final @Nullable Output<List<VmRecommendationArgs>> vmRecommendations;

    public Output<List<VmRecommendationArgs>> getVmRecommendations() {
        return this.vmRecommendations == null ? Output.empty() : this.vmRecommendations;
    }

    public AdaptiveApplicationControlArgs(
        Output<String> ascLocation,
        @Nullable Output<String> enforcementMode,
        @Nullable Output<String> groupName,
        @Nullable Output<List<PathRecommendationArgs>> pathRecommendations,
        @Nullable Output<ProtectionModeArgs> protectionMode,
        @Nullable Output<List<VmRecommendationArgs>> vmRecommendations) {
        this.ascLocation = Objects.requireNonNull(ascLocation, "expected parameter 'ascLocation' to be non-null");
        this.enforcementMode = enforcementMode;
        this.groupName = groupName;
        this.pathRecommendations = pathRecommendations;
        this.protectionMode = protectionMode;
        this.vmRecommendations = vmRecommendations;
    }

    private AdaptiveApplicationControlArgs() {
        this.ascLocation = Output.empty();
        this.enforcementMode = Output.empty();
        this.groupName = Output.empty();
        this.pathRecommendations = Output.empty();
        this.protectionMode = Output.empty();
        this.vmRecommendations = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AdaptiveApplicationControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> ascLocation;
        private @Nullable Output<String> enforcementMode;
        private @Nullable Output<String> groupName;
        private @Nullable Output<List<PathRecommendationArgs>> pathRecommendations;
        private @Nullable Output<ProtectionModeArgs> protectionMode;
        private @Nullable Output<List<VmRecommendationArgs>> vmRecommendations;

        public Builder() {
    	      // Empty
        }

        public Builder(AdaptiveApplicationControlArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ascLocation = defaults.ascLocation;
    	      this.enforcementMode = defaults.enforcementMode;
    	      this.groupName = defaults.groupName;
    	      this.pathRecommendations = defaults.pathRecommendations;
    	      this.protectionMode = defaults.protectionMode;
    	      this.vmRecommendations = defaults.vmRecommendations;
        }

        public Builder ascLocation(Output<String> ascLocation) {
            this.ascLocation = Objects.requireNonNull(ascLocation);
            return this;
        }

        public Builder ascLocation(String ascLocation) {
            this.ascLocation = Output.of(Objects.requireNonNull(ascLocation));
            return this;
        }

        public Builder enforcementMode(@Nullable Output<String> enforcementMode) {
            this.enforcementMode = enforcementMode;
            return this;
        }

        public Builder enforcementMode(@Nullable String enforcementMode) {
            this.enforcementMode = Output.ofNullable(enforcementMode);
            return this;
        }

        public Builder groupName(@Nullable Output<String> groupName) {
            this.groupName = groupName;
            return this;
        }

        public Builder groupName(@Nullable String groupName) {
            this.groupName = Output.ofNullable(groupName);
            return this;
        }

        public Builder pathRecommendations(@Nullable Output<List<PathRecommendationArgs>> pathRecommendations) {
            this.pathRecommendations = pathRecommendations;
            return this;
        }

        public Builder pathRecommendations(@Nullable List<PathRecommendationArgs> pathRecommendations) {
            this.pathRecommendations = Output.ofNullable(pathRecommendations);
            return this;
        }

        public Builder protectionMode(@Nullable Output<ProtectionModeArgs> protectionMode) {
            this.protectionMode = protectionMode;
            return this;
        }

        public Builder protectionMode(@Nullable ProtectionModeArgs protectionMode) {
            this.protectionMode = Output.ofNullable(protectionMode);
            return this;
        }

        public Builder vmRecommendations(@Nullable Output<List<VmRecommendationArgs>> vmRecommendations) {
            this.vmRecommendations = vmRecommendations;
            return this;
        }

        public Builder vmRecommendations(@Nullable List<VmRecommendationArgs> vmRecommendations) {
            this.vmRecommendations = Output.ofNullable(vmRecommendations);
            return this;
        }
        public AdaptiveApplicationControlArgs build() {
            return new AdaptiveApplicationControlArgs(ascLocation, enforcementMode, groupName, pathRecommendations, protectionMode, vmRecommendations);
        }
    }
}
