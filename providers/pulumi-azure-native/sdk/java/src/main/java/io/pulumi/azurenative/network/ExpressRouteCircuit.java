// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.network.ExpressRouteCircuitArgs;
import io.pulumi.azurenative.network.outputs.ExpressRouteCircuitAuthorizationResponse;
import io.pulumi.azurenative.network.outputs.ExpressRouteCircuitPeeringResponse;
import io.pulumi.azurenative.network.outputs.ExpressRouteCircuitServiceProviderPropertiesResponse;
import io.pulumi.azurenative.network.outputs.ExpressRouteCircuitSkuResponse;
import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="azure-native:network:ExpressRouteCircuit")
public class ExpressRouteCircuit extends io.pulumi.resources.CustomResource {
    @OutputExport(name="allowClassicOperations", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> allowClassicOperations;

    public Output</* @Nullable */ Boolean> getAllowClassicOperations() {
        return this.allowClassicOperations;
    }
    @OutputExport(name="authorizations", type=List.class, parameters={ExpressRouteCircuitAuthorizationResponse.class})
    private Output</* @Nullable */ List<ExpressRouteCircuitAuthorizationResponse>> authorizations;

    public Output</* @Nullable */ List<ExpressRouteCircuitAuthorizationResponse>> getAuthorizations() {
        return this.authorizations;
    }
    @OutputExport(name="bandwidthInGbps", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> bandwidthInGbps;

    public Output</* @Nullable */ Double> getBandwidthInGbps() {
        return this.bandwidthInGbps;
    }
    @OutputExport(name="circuitProvisioningState", type=String.class, parameters={})
    private Output</* @Nullable */ String> circuitProvisioningState;

    public Output</* @Nullable */ String> getCircuitProvisioningState() {
        return this.circuitProvisioningState;
    }
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    public Output<String> getEtag() {
        return this.etag;
    }
    @OutputExport(name="expressRoutePort", type=SubResourceResponse.class, parameters={})
    private Output</* @Nullable */ SubResourceResponse> expressRoutePort;

    public Output</* @Nullable */ SubResourceResponse> getExpressRoutePort() {
        return this.expressRoutePort;
    }
    @OutputExport(name="gatewayManagerEtag", type=String.class, parameters={})
    private Output</* @Nullable */ String> gatewayManagerEtag;

    public Output</* @Nullable */ String> getGatewayManagerEtag() {
        return this.gatewayManagerEtag;
    }
    @OutputExport(name="globalReachEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> globalReachEnabled;

    public Output</* @Nullable */ Boolean> getGlobalReachEnabled() {
        return this.globalReachEnabled;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="peerings", type=List.class, parameters={ExpressRouteCircuitPeeringResponse.class})
    private Output</* @Nullable */ List<ExpressRouteCircuitPeeringResponse>> peerings;

    public Output</* @Nullable */ List<ExpressRouteCircuitPeeringResponse>> getPeerings() {
        return this.peerings;
    }
    @OutputExport(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    @OutputExport(name="serviceKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceKey;

    public Output</* @Nullable */ String> getServiceKey() {
        return this.serviceKey;
    }
    @OutputExport(name="serviceProviderNotes", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceProviderNotes;

    public Output</* @Nullable */ String> getServiceProviderNotes() {
        return this.serviceProviderNotes;
    }
    @OutputExport(name="serviceProviderProperties", type=ExpressRouteCircuitServiceProviderPropertiesResponse.class, parameters={})
    private Output</* @Nullable */ ExpressRouteCircuitServiceProviderPropertiesResponse> serviceProviderProperties;

    public Output</* @Nullable */ ExpressRouteCircuitServiceProviderPropertiesResponse> getServiceProviderProperties() {
        return this.serviceProviderProperties;
    }
    @OutputExport(name="serviceProviderProvisioningState", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceProviderProvisioningState;

    public Output</* @Nullable */ String> getServiceProviderProvisioningState() {
        return this.serviceProviderProvisioningState;
    }
    @OutputExport(name="sku", type=ExpressRouteCircuitSkuResponse.class, parameters={})
    private Output</* @Nullable */ ExpressRouteCircuitSkuResponse> sku;

    public Output</* @Nullable */ ExpressRouteCircuitSkuResponse> getSku() {
        return this.sku;
    }
    @OutputExport(name="stag", type=Integer.class, parameters={})
    private Output<Integer> stag;

    public Output<Integer> getStag() {
        return this.stag;
    }
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }

    public ExpressRouteCircuit(String name, ExpressRouteCircuitArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:ExpressRouteCircuit", name, args == null ? ExpressRouteCircuitArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ExpressRouteCircuit(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:ExpressRouteCircuit", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:network/v20150501preview:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20150615:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20160330:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20160601:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20160901:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20161201:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20170301:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20170601:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20170801:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20170901:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20171001:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20171101:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180101:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180201:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180401:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180601:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180701:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20180801:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181001:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181101:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20181201:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190201:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190401:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190601:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190701:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190801:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20190901:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191101:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20191201:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200301:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200401:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200501:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200601:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200701:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20200801:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20201101:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210201:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210301:ExpressRouteCircuit").build()),
                Input.of(Alias.builder().setType("azure-native:network/v20210501:ExpressRouteCircuit").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static ExpressRouteCircuit get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ExpressRouteCircuit(name, id, options);
    }
}
