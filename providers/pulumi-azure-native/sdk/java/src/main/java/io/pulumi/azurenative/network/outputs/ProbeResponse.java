// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network.outputs;

import io.pulumi.azurenative.network.outputs.SubResourceResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ProbeResponse {
    private final String etag;
    private final @Nullable String id;
    private final @Nullable Integer intervalInSeconds;
    private final List<SubResourceResponse> loadBalancingRules;
    private final @Nullable String name;
    private final @Nullable Integer numberOfProbes;
    private final Integer port;
    private final String protocol;
    private final String provisioningState;
    private final @Nullable String requestPath;
    private final String type;

    @OutputCustomType.Constructor({"etag","id","intervalInSeconds","loadBalancingRules","name","numberOfProbes","port","protocol","provisioningState","requestPath","type"})
    private ProbeResponse(
        String etag,
        @Nullable String id,
        @Nullable Integer intervalInSeconds,
        List<SubResourceResponse> loadBalancingRules,
        @Nullable String name,
        @Nullable Integer numberOfProbes,
        Integer port,
        String protocol,
        String provisioningState,
        @Nullable String requestPath,
        String type) {
        this.etag = Objects.requireNonNull(etag);
        this.id = id;
        this.intervalInSeconds = intervalInSeconds;
        this.loadBalancingRules = Objects.requireNonNull(loadBalancingRules);
        this.name = name;
        this.numberOfProbes = numberOfProbes;
        this.port = Objects.requireNonNull(port);
        this.protocol = Objects.requireNonNull(protocol);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.requestPath = requestPath;
        this.type = Objects.requireNonNull(type);
    }

    public String getEtag() {
        return this.etag;
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Integer> getIntervalInSeconds() {
        return Optional.ofNullable(this.intervalInSeconds);
    }
    public List<SubResourceResponse> getLoadBalancingRules() {
        return this.loadBalancingRules;
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Integer> getNumberOfProbes() {
        return Optional.ofNullable(this.numberOfProbes);
    }
    public Integer getPort() {
        return this.port;
    }
    public String getProtocol() {
        return this.protocol;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public Optional<String> getRequestPath() {
        return Optional.ofNullable(this.requestPath);
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProbeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String etag;
        private @Nullable String id;
        private @Nullable Integer intervalInSeconds;
        private List<SubResourceResponse> loadBalancingRules;
        private @Nullable String name;
        private @Nullable Integer numberOfProbes;
        private Integer port;
        private String protocol;
        private String provisioningState;
        private @Nullable String requestPath;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ProbeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.intervalInSeconds = defaults.intervalInSeconds;
    	      this.loadBalancingRules = defaults.loadBalancingRules;
    	      this.name = defaults.name;
    	      this.numberOfProbes = defaults.numberOfProbes;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.provisioningState = defaults.provisioningState;
    	      this.requestPath = defaults.requestPath;
    	      this.type = defaults.type;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setIntervalInSeconds(@Nullable Integer intervalInSeconds) {
            this.intervalInSeconds = intervalInSeconds;
            return this;
        }

        public Builder setLoadBalancingRules(List<SubResourceResponse> loadBalancingRules) {
            this.loadBalancingRules = Objects.requireNonNull(loadBalancingRules);
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setNumberOfProbes(@Nullable Integer numberOfProbes) {
            this.numberOfProbes = numberOfProbes;
            return this;
        }

        public Builder setPort(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public Builder setProtocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setRequestPath(@Nullable String requestPath) {
            this.requestPath = requestPath;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public ProbeResponse build() {
            return new ProbeResponse(etag, id, intervalInSeconds, loadBalancingRules, name, numberOfProbes, port, protocol, provisioningState, requestPath, type);
        }
    }
}
