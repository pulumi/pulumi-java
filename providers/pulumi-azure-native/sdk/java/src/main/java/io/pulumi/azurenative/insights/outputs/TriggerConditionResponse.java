// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.outputs;

import io.pulumi.azurenative.insights.outputs.LogMetricTriggerResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TriggerConditionResponse {
    private final @Nullable LogMetricTriggerResponse metricTrigger;
    private final Double threshold;
    private final String thresholdOperator;

    @OutputCustomType.Constructor({"metricTrigger","threshold","thresholdOperator"})
    private TriggerConditionResponse(
        @Nullable LogMetricTriggerResponse metricTrigger,
        Double threshold,
        String thresholdOperator) {
        this.metricTrigger = metricTrigger;
        this.threshold = Objects.requireNonNull(threshold);
        this.thresholdOperator = Objects.requireNonNull(thresholdOperator);
    }

    public Optional<LogMetricTriggerResponse> getMetricTrigger() {
        return Optional.ofNullable(this.metricTrigger);
    }
    public Double getThreshold() {
        return this.threshold;
    }
    public String getThresholdOperator() {
        return this.thresholdOperator;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable LogMetricTriggerResponse metricTrigger;
        private Double threshold;
        private String thresholdOperator;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerConditionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricTrigger = defaults.metricTrigger;
    	      this.threshold = defaults.threshold;
    	      this.thresholdOperator = defaults.thresholdOperator;
        }

        public Builder setMetricTrigger(@Nullable LogMetricTriggerResponse metricTrigger) {
            this.metricTrigger = metricTrigger;
            return this;
        }

        public Builder setThreshold(Double threshold) {
            this.threshold = Objects.requireNonNull(threshold);
            return this;
        }

        public Builder setThresholdOperator(String thresholdOperator) {
            this.thresholdOperator = Objects.requireNonNull(thresholdOperator);
            return this;
        }

        public TriggerConditionResponse build() {
            return new TriggerConditionResponse(metricTrigger, threshold, thresholdOperator);
        }
    }
}
