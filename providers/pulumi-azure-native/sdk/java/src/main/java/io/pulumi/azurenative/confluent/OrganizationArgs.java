// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.confluent;

import io.pulumi.azurenative.confluent.inputs.OrganizationResourcePropertiesOfferDetailArgs;
import io.pulumi.azurenative.confluent.inputs.OrganizationResourcePropertiesUserDetailArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationArgs extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationArgs Empty = new OrganizationArgs();

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="offerDetail")
    private final @Nullable Input<OrganizationResourcePropertiesOfferDetailArgs> offerDetail;

    public Input<OrganizationResourcePropertiesOfferDetailArgs> getOfferDetail() {
        return this.offerDetail == null ? Input.empty() : this.offerDetail;
    }

    @InputImport(name="organizationName")
    private final @Nullable Input<String> organizationName;

    public Input<String> getOrganizationName() {
        return this.organizationName == null ? Input.empty() : this.organizationName;
    }

    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="userDetail")
    private final @Nullable Input<OrganizationResourcePropertiesUserDetailArgs> userDetail;

    public Input<OrganizationResourcePropertiesUserDetailArgs> getUserDetail() {
        return this.userDetail == null ? Input.empty() : this.userDetail;
    }

    public OrganizationArgs(
        @Nullable Input<String> location,
        @Nullable Input<OrganizationResourcePropertiesOfferDetailArgs> offerDetail,
        @Nullable Input<String> organizationName,
        Input<String> resourceGroupName,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<OrganizationResourcePropertiesUserDetailArgs> userDetail) {
        this.location = location;
        this.offerDetail = offerDetail;
        this.organizationName = organizationName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.userDetail = userDetail;
    }

    private OrganizationArgs() {
        this.location = Input.empty();
        this.offerDetail = Input.empty();
        this.organizationName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.tags = Input.empty();
        this.userDetail = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> location;
        private @Nullable Input<OrganizationResourcePropertiesOfferDetailArgs> offerDetail;
        private @Nullable Input<String> organizationName;
        private Input<String> resourceGroupName;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<OrganizationResourcePropertiesUserDetailArgs> userDetail;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.offerDetail = defaults.offerDetail;
    	      this.organizationName = defaults.organizationName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.userDetail = defaults.userDetail;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setOfferDetail(@Nullable Input<OrganizationResourcePropertiesOfferDetailArgs> offerDetail) {
            this.offerDetail = offerDetail;
            return this;
        }

        public Builder setOfferDetail(@Nullable OrganizationResourcePropertiesOfferDetailArgs offerDetail) {
            this.offerDetail = Input.ofNullable(offerDetail);
            return this;
        }

        public Builder setOrganizationName(@Nullable Input<String> organizationName) {
            this.organizationName = organizationName;
            return this;
        }

        public Builder setOrganizationName(@Nullable String organizationName) {
            this.organizationName = Input.ofNullable(organizationName);
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setUserDetail(@Nullable Input<OrganizationResourcePropertiesUserDetailArgs> userDetail) {
            this.userDetail = userDetail;
            return this;
        }

        public Builder setUserDetail(@Nullable OrganizationResourcePropertiesUserDetailArgs userDetail) {
            this.userDetail = Input.ofNullable(userDetail);
            return this;
        }

        public OrganizationArgs build() {
            return new OrganizationArgs(location, offerDetail, organizationName, resourceGroupName, tags, userDetail);
        }
    }
}
