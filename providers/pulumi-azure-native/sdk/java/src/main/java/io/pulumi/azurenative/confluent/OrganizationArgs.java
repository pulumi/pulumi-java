// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.confluent;

import io.pulumi.azurenative.confluent.inputs.OrganizationResourcePropertiesOfferDetailArgs;
import io.pulumi.azurenative.confluent.inputs.OrganizationResourcePropertiesUserDetailArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationArgs extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationArgs Empty = new OrganizationArgs();

    /**
     * Location of Organization resource
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Confluent offer detail
     * 
     */
    @Import(name="offerDetail")
      private final @Nullable Output<OrganizationResourcePropertiesOfferDetailArgs> offerDetail;

    public Output<OrganizationResourcePropertiesOfferDetailArgs> offerDetail() {
        return this.offerDetail == null ? Codegen.empty() : this.offerDetail;
    }

    /**
     * Organization resource name
     * 
     */
    @Import(name="organizationName")
      private final @Nullable Output<String> organizationName;

    public Output<String> organizationName() {
        return this.organizationName == null ? Codegen.empty() : this.organizationName;
    }

    /**
     * Resource group name
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Organization resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * Subscriber detail
     * 
     */
    @Import(name="userDetail")
      private final @Nullable Output<OrganizationResourcePropertiesUserDetailArgs> userDetail;

    public Output<OrganizationResourcePropertiesUserDetailArgs> userDetail() {
        return this.userDetail == null ? Codegen.empty() : this.userDetail;
    }

    public OrganizationArgs(
        @Nullable Output<String> location,
        @Nullable Output<OrganizationResourcePropertiesOfferDetailArgs> offerDetail,
        @Nullable Output<String> organizationName,
        Output<String> resourceGroupName,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<OrganizationResourcePropertiesUserDetailArgs> userDetail) {
        this.location = location;
        this.offerDetail = offerDetail;
        this.organizationName = organizationName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
        this.userDetail = userDetail;
    }

    private OrganizationArgs() {
        this.location = Codegen.empty();
        this.offerDetail = Codegen.empty();
        this.organizationName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
        this.userDetail = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> location;
        private @Nullable Output<OrganizationResourcePropertiesOfferDetailArgs> offerDetail;
        private @Nullable Output<String> organizationName;
        private Output<String> resourceGroupName;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<OrganizationResourcePropertiesUserDetailArgs> userDetail;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.offerDetail = defaults.offerDetail;
    	      this.organizationName = defaults.organizationName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.userDetail = defaults.userDetail;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder offerDetail(@Nullable Output<OrganizationResourcePropertiesOfferDetailArgs> offerDetail) {
            this.offerDetail = offerDetail;
            return this;
        }
        public Builder offerDetail(@Nullable OrganizationResourcePropertiesOfferDetailArgs offerDetail) {
            this.offerDetail = Codegen.ofNullable(offerDetail);
            return this;
        }
        public Builder organizationName(@Nullable Output<String> organizationName) {
            this.organizationName = organizationName;
            return this;
        }
        public Builder organizationName(@Nullable String organizationName) {
            this.organizationName = Codegen.ofNullable(organizationName);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder userDetail(@Nullable Output<OrganizationResourcePropertiesUserDetailArgs> userDetail) {
            this.userDetail = userDetail;
            return this;
        }
        public Builder userDetail(@Nullable OrganizationResourcePropertiesUserDetailArgs userDetail) {
            this.userDetail = Codegen.ofNullable(userDetail);
            return this;
        }        public OrganizationArgs build() {
            return new OrganizationArgs(location, offerDetail, organizationName, resourceGroupName, tags, userDetail);
        }
    }
}
