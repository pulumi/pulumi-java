// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights;

import io.pulumi.azurenative.insights.enums.KnownDataCollectionEndpointResourceKind;
import io.pulumi.azurenative.insights.inputs.DataCollectionEndpointNetworkAclsArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DataCollectionEndpointArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataCollectionEndpointArgs Empty = new DataCollectionEndpointArgs();

    /**
     * The name of the data collection endpoint. The name is case insensitive.
     * 
     */
    @InputImport(name="dataCollectionEndpointName")
      private final @Nullable Input<String> dataCollectionEndpointName;

    public Input<String> getDataCollectionEndpointName() {
        return this.dataCollectionEndpointName == null ? Input.empty() : this.dataCollectionEndpointName;
    }

    /**
     * Description of the data collection endpoint.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The immutable ID of this data collection endpoint resource. This property is READ-ONLY.
     * 
     */
    @InputImport(name="immutableId")
      private final @Nullable Input<String> immutableId;

    public Input<String> getImmutableId() {
        return this.immutableId == null ? Input.empty() : this.immutableId;
    }

    /**
     * The kind of the resource.
     * 
     */
    @InputImport(name="kind")
      private final @Nullable Input<Either<String,KnownDataCollectionEndpointResourceKind>> kind;

    public Input<Either<String,KnownDataCollectionEndpointResourceKind>> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    /**
     * The geo-location where the resource lives.
     * 
     */
    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Network access control rules for the endpoints.
     * 
     */
    @InputImport(name="networkAcls")
      private final @Nullable Input<DataCollectionEndpointNetworkAclsArgs> networkAcls;

    public Input<DataCollectionEndpointNetworkAclsArgs> getNetworkAcls() {
        return this.networkAcls == null ? Input.empty() : this.networkAcls;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
      private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Resource tags.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public DataCollectionEndpointArgs(
        @Nullable Input<String> dataCollectionEndpointName,
        @Nullable Input<String> description,
        @Nullable Input<String> immutableId,
        @Nullable Input<Either<String,KnownDataCollectionEndpointResourceKind>> kind,
        @Nullable Input<String> location,
        @Nullable Input<DataCollectionEndpointNetworkAclsArgs> networkAcls,
        Input<String> resourceGroupName,
        @Nullable Input<Map<String,String>> tags) {
        this.dataCollectionEndpointName = dataCollectionEndpointName;
        this.description = description;
        this.immutableId = immutableId;
        this.kind = kind;
        this.location = location;
        this.networkAcls = networkAcls;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private DataCollectionEndpointArgs() {
        this.dataCollectionEndpointName = Input.empty();
        this.description = Input.empty();
        this.immutableId = Input.empty();
        this.kind = Input.empty();
        this.location = Input.empty();
        this.networkAcls = Input.empty();
        this.resourceGroupName = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataCollectionEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> dataCollectionEndpointName;
        private @Nullable Input<String> description;
        private @Nullable Input<String> immutableId;
        private @Nullable Input<Either<String,KnownDataCollectionEndpointResourceKind>> kind;
        private @Nullable Input<String> location;
        private @Nullable Input<DataCollectionEndpointNetworkAclsArgs> networkAcls;
        private Input<String> resourceGroupName;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DataCollectionEndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataCollectionEndpointName = defaults.dataCollectionEndpointName;
    	      this.description = defaults.description;
    	      this.immutableId = defaults.immutableId;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.networkAcls = defaults.networkAcls;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder dataCollectionEndpointName(@Nullable Input<String> dataCollectionEndpointName) {
            this.dataCollectionEndpointName = dataCollectionEndpointName;
            return this;
        }

        public Builder dataCollectionEndpointName(@Nullable String dataCollectionEndpointName) {
            this.dataCollectionEndpointName = Input.ofNullable(dataCollectionEndpointName);
            return this;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder immutableId(@Nullable Input<String> immutableId) {
            this.immutableId = immutableId;
            return this;
        }

        public Builder immutableId(@Nullable String immutableId) {
            this.immutableId = Input.ofNullable(immutableId);
            return this;
        }

        public Builder kind(@Nullable Input<Either<String,KnownDataCollectionEndpointResourceKind>> kind) {
            this.kind = kind;
            return this;
        }

        public Builder kind(@Nullable Either<String,KnownDataCollectionEndpointResourceKind> kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder location(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder networkAcls(@Nullable Input<DataCollectionEndpointNetworkAclsArgs> networkAcls) {
            this.networkAcls = networkAcls;
            return this;
        }

        public Builder networkAcls(@Nullable DataCollectionEndpointNetworkAclsArgs networkAcls) {
            this.networkAcls = Input.ofNullable(networkAcls);
            return this;
        }

        public Builder resourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public DataCollectionEndpointArgs build() {
            return new DataCollectionEndpointArgs(dataCollectionEndpointName, description, immutableId, kind, location, networkAcls, resourceGroupName, tags);
        }
    }
}
