// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;


public final class ScheduleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScheduleArgs Empty = new ScheduleArgs();

    @InputImport(name="frequencyInMinutes", required=true)
    private final Input<Integer> frequencyInMinutes;

    public Input<Integer> getFrequencyInMinutes() {
        return this.frequencyInMinutes;
    }

    @InputImport(name="timeWindowInMinutes", required=true)
    private final Input<Integer> timeWindowInMinutes;

    public Input<Integer> getTimeWindowInMinutes() {
        return this.timeWindowInMinutes;
    }

    public ScheduleArgs(
        Input<Integer> frequencyInMinutes,
        Input<Integer> timeWindowInMinutes) {
        this.frequencyInMinutes = Objects.requireNonNull(frequencyInMinutes, "expected parameter 'frequencyInMinutes' to be non-null");
        this.timeWindowInMinutes = Objects.requireNonNull(timeWindowInMinutes, "expected parameter 'timeWindowInMinutes' to be non-null");
    }

    private ScheduleArgs() {
        this.frequencyInMinutes = Input.empty();
        this.timeWindowInMinutes = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> frequencyInMinutes;
        private Input<Integer> timeWindowInMinutes;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.frequencyInMinutes = defaults.frequencyInMinutes;
    	      this.timeWindowInMinutes = defaults.timeWindowInMinutes;
        }

        public Builder setFrequencyInMinutes(Input<Integer> frequencyInMinutes) {
            this.frequencyInMinutes = Objects.requireNonNull(frequencyInMinutes);
            return this;
        }

        public Builder setFrequencyInMinutes(Integer frequencyInMinutes) {
            this.frequencyInMinutes = Input.of(Objects.requireNonNull(frequencyInMinutes));
            return this;
        }

        public Builder setTimeWindowInMinutes(Input<Integer> timeWindowInMinutes) {
            this.timeWindowInMinutes = Objects.requireNonNull(timeWindowInMinutes);
            return this;
        }

        public Builder setTimeWindowInMinutes(Integer timeWindowInMinutes) {
            this.timeWindowInMinutes = Input.of(Objects.requireNonNull(timeWindowInMinutes));
            return this;
        }

        public ScheduleArgs build() {
            return new ScheduleArgs(frequencyInMinutes, timeWindowInMinutes);
        }
    }
}
