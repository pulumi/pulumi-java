// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.inputs;

import io.pulumi.azurenative.storage.enums.InventoryRuleType;
import io.pulumi.azurenative.storage.inputs.BlobInventoryPolicyRuleArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The storage account blob inventory policy rules.
 * 
 */
public final class BlobInventoryPolicySchemaArgs extends io.pulumi.resources.ResourceArgs {

    public static final BlobInventoryPolicySchemaArgs Empty = new BlobInventoryPolicySchemaArgs();

    /**
     * Container name where blob inventory files are stored. Must be pre-created.
     * 
     */
    @Import(name="destination", required=true)
      private final Output<String> destination;

    public Output<String> getDestination() {
        return this.destination;
    }

    /**
     * Policy is enabled if set to true.
     * 
     */
    @Import(name="enabled", required=true)
      private final Output<Boolean> enabled;

    public Output<Boolean> getEnabled() {
        return this.enabled;
    }

    /**
     * The storage account blob inventory policy rules. The rule is applied when it is enabled.
     * 
     */
    @Import(name="rules", required=true)
      private final Output<List<BlobInventoryPolicyRuleArgs>> rules;

    public Output<List<BlobInventoryPolicyRuleArgs>> getRules() {
        return this.rules;
    }

    /**
     * The valid value is Inventory
     * 
     */
    @Import(name="type", required=true)
      private final Output<Either<String,InventoryRuleType>> type;

    public Output<Either<String,InventoryRuleType>> getType() {
        return this.type;
    }

    public BlobInventoryPolicySchemaArgs(
        Output<String> destination,
        Output<Boolean> enabled,
        Output<List<BlobInventoryPolicyRuleArgs>> rules,
        Output<Either<String,InventoryRuleType>> type) {
        this.destination = Objects.requireNonNull(destination, "expected parameter 'destination' to be non-null");
        this.enabled = Objects.requireNonNull(enabled, "expected parameter 'enabled' to be non-null");
        this.rules = Objects.requireNonNull(rules, "expected parameter 'rules' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private BlobInventoryPolicySchemaArgs() {
        this.destination = Codegen.empty();
        this.enabled = Codegen.empty();
        this.rules = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BlobInventoryPolicySchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> destination;
        private Output<Boolean> enabled;
        private Output<List<BlobInventoryPolicyRuleArgs>> rules;
        private Output<Either<String,InventoryRuleType>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(BlobInventoryPolicySchemaArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.enabled = defaults.enabled;
    	      this.rules = defaults.rules;
    	      this.type = defaults.type;
        }

        public Builder destination(Output<String> destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }
        public Builder destination(String destination) {
            this.destination = Output.of(Objects.requireNonNull(destination));
            return this;
        }
        public Builder enabled(Output<Boolean> enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        public Builder enabled(Boolean enabled) {
            this.enabled = Output.of(Objects.requireNonNull(enabled));
            return this;
        }
        public Builder rules(Output<List<BlobInventoryPolicyRuleArgs>> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(List<BlobInventoryPolicyRuleArgs> rules) {
            this.rules = Output.of(Objects.requireNonNull(rules));
            return this;
        }
        public Builder rules(BlobInventoryPolicyRuleArgs... rules) {
            return rules(List.of(rules));
        }
        public Builder type(Output<Either<String,InventoryRuleType>> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(Either<String,InventoryRuleType> type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public BlobInventoryPolicySchemaArgs build() {
            return new BlobInventoryPolicySchemaArgs(destination, enabled, rules, type);
        }
    }
}
