// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.storage.inputs;

import io.pulumi.azurenative.storage.enums.InventoryRuleType;
import io.pulumi.azurenative.storage.inputs.BlobInventoryPolicyRuleArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class BlobInventoryPolicySchemaArgs extends io.pulumi.resources.ResourceArgs {

    public static final BlobInventoryPolicySchemaArgs Empty = new BlobInventoryPolicySchemaArgs();

    @InputImport(name="destination", required=true)
    private final Input<String> destination;

    public Input<String> getDestination() {
        return this.destination;
    }

    @InputImport(name="enabled", required=true)
    private final Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled;
    }

    @InputImport(name="rules", required=true)
    private final Input<List<BlobInventoryPolicyRuleArgs>> rules;

    public Input<List<BlobInventoryPolicyRuleArgs>> getRules() {
        return this.rules;
    }

    @InputImport(name="type", required=true)
    private final Input<Either<String,InventoryRuleType>> type;

    public Input<Either<String,InventoryRuleType>> getType() {
        return this.type;
    }

    public BlobInventoryPolicySchemaArgs(
        Input<String> destination,
        Input<Boolean> enabled,
        Input<List<BlobInventoryPolicyRuleArgs>> rules,
        Input<Either<String,InventoryRuleType>> type) {
        this.destination = Objects.requireNonNull(destination, "expected parameter 'destination' to be non-null");
        this.enabled = Objects.requireNonNull(enabled, "expected parameter 'enabled' to be non-null");
        this.rules = Objects.requireNonNull(rules, "expected parameter 'rules' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private BlobInventoryPolicySchemaArgs() {
        this.destination = Input.empty();
        this.enabled = Input.empty();
        this.rules = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BlobInventoryPolicySchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> destination;
        private Input<Boolean> enabled;
        private Input<List<BlobInventoryPolicyRuleArgs>> rules;
        private Input<Either<String,InventoryRuleType>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(BlobInventoryPolicySchemaArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.enabled = defaults.enabled;
    	      this.rules = defaults.rules;
    	      this.type = defaults.type;
        }

        public Builder setDestination(Input<String> destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }

        public Builder setDestination(String destination) {
            this.destination = Input.of(Objects.requireNonNull(destination));
            return this;
        }

        public Builder setEnabled(Input<Boolean> enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }

        public Builder setEnabled(Boolean enabled) {
            this.enabled = Input.of(Objects.requireNonNull(enabled));
            return this;
        }

        public Builder setRules(Input<List<BlobInventoryPolicyRuleArgs>> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }

        public Builder setRules(List<BlobInventoryPolicyRuleArgs> rules) {
            this.rules = Input.of(Objects.requireNonNull(rules));
            return this;
        }

        public Builder setType(Input<Either<String,InventoryRuleType>> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(Either<String,InventoryRuleType> type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public BlobInventoryPolicySchemaArgs build() {
            return new BlobInventoryPolicySchemaArgs(destination, enabled, rules, type);
        }
    }
}
