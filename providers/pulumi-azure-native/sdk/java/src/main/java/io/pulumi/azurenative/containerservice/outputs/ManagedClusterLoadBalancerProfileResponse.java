// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerservice.outputs;

import io.pulumi.azurenative.containerservice.outputs.ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes;
import io.pulumi.azurenative.containerservice.outputs.ManagedClusterLoadBalancerProfileResponseOutboundIPs;
import io.pulumi.azurenative.containerservice.outputs.ResourceReferenceResponse;
import io.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagedClusterLoadBalancerProfileResponse {
    /**
     * Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
     * 
     */
    private final @Nullable Integer allocatedOutboundPorts;
    /**
     * The effective outbound IP resources of the cluster load balancer.
     * 
     */
    private final @Nullable List<ResourceReferenceResponse> effectiveOutboundIPs;
    /**
     * Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
     * 
     */
    private final @Nullable Integer idleTimeoutInMinutes;
    /**
     * Desired managed outbound IPs for the cluster load balancer.
     * 
     */
    private final @Nullable ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs managedOutboundIPs;
    /**
     * Desired outbound IP Prefix resources for the cluster load balancer.
     * 
     */
    private final @Nullable ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes outboundIPPrefixes;
    /**
     * Desired outbound IP resources for the cluster load balancer.
     * 
     */
    private final @Nullable ManagedClusterLoadBalancerProfileResponseOutboundIPs outboundIPs;

    @CustomType.Constructor
    private ManagedClusterLoadBalancerProfileResponse(
        @CustomType.Parameter("allocatedOutboundPorts") @Nullable Integer allocatedOutboundPorts,
        @CustomType.Parameter("effectiveOutboundIPs") @Nullable List<ResourceReferenceResponse> effectiveOutboundIPs,
        @CustomType.Parameter("idleTimeoutInMinutes") @Nullable Integer idleTimeoutInMinutes,
        @CustomType.Parameter("managedOutboundIPs") @Nullable ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs managedOutboundIPs,
        @CustomType.Parameter("outboundIPPrefixes") @Nullable ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes outboundIPPrefixes,
        @CustomType.Parameter("outboundIPs") @Nullable ManagedClusterLoadBalancerProfileResponseOutboundIPs outboundIPs) {
        this.allocatedOutboundPorts = allocatedOutboundPorts;
        this.effectiveOutboundIPs = effectiveOutboundIPs;
        this.idleTimeoutInMinutes = idleTimeoutInMinutes;
        this.managedOutboundIPs = managedOutboundIPs;
        this.outboundIPPrefixes = outboundIPPrefixes;
        this.outboundIPs = outboundIPs;
    }

    /**
     * Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
     * 
    */
    public Optional<Integer> getAllocatedOutboundPorts() {
        return Optional.ofNullable(this.allocatedOutboundPorts);
    }
    /**
     * The effective outbound IP resources of the cluster load balancer.
     * 
    */
    public List<ResourceReferenceResponse> getEffectiveOutboundIPs() {
        return this.effectiveOutboundIPs == null ? List.of() : this.effectiveOutboundIPs;
    }
    /**
     * Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.
     * 
    */
    public Optional<Integer> getIdleTimeoutInMinutes() {
        return Optional.ofNullable(this.idleTimeoutInMinutes);
    }
    /**
     * Desired managed outbound IPs for the cluster load balancer.
     * 
    */
    public Optional<ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs> getManagedOutboundIPs() {
        return Optional.ofNullable(this.managedOutboundIPs);
    }
    /**
     * Desired outbound IP Prefix resources for the cluster load balancer.
     * 
    */
    public Optional<ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes> getOutboundIPPrefixes() {
        return Optional.ofNullable(this.outboundIPPrefixes);
    }
    /**
     * Desired outbound IP resources for the cluster load balancer.
     * 
    */
    public Optional<ManagedClusterLoadBalancerProfileResponseOutboundIPs> getOutboundIPs() {
        return Optional.ofNullable(this.outboundIPs);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedClusterLoadBalancerProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer allocatedOutboundPorts;
        private @Nullable List<ResourceReferenceResponse> effectiveOutboundIPs;
        private @Nullable Integer idleTimeoutInMinutes;
        private @Nullable ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs managedOutboundIPs;
        private @Nullable ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes outboundIPPrefixes;
        private @Nullable ManagedClusterLoadBalancerProfileResponseOutboundIPs outboundIPs;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedClusterLoadBalancerProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocatedOutboundPorts = defaults.allocatedOutboundPorts;
    	      this.effectiveOutboundIPs = defaults.effectiveOutboundIPs;
    	      this.idleTimeoutInMinutes = defaults.idleTimeoutInMinutes;
    	      this.managedOutboundIPs = defaults.managedOutboundIPs;
    	      this.outboundIPPrefixes = defaults.outboundIPPrefixes;
    	      this.outboundIPs = defaults.outboundIPs;
        }

        public Builder allocatedOutboundPorts(@Nullable Integer allocatedOutboundPorts) {
            this.allocatedOutboundPorts = allocatedOutboundPorts;
            return this;
        }
        public Builder effectiveOutboundIPs(@Nullable List<ResourceReferenceResponse> effectiveOutboundIPs) {
            this.effectiveOutboundIPs = effectiveOutboundIPs;
            return this;
        }
        public Builder effectiveOutboundIPs(ResourceReferenceResponse... effectiveOutboundIPs) {
            return effectiveOutboundIPs(List.of(effectiveOutboundIPs));
        }
        public Builder idleTimeoutInMinutes(@Nullable Integer idleTimeoutInMinutes) {
            this.idleTimeoutInMinutes = idleTimeoutInMinutes;
            return this;
        }
        public Builder managedOutboundIPs(@Nullable ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs managedOutboundIPs) {
            this.managedOutboundIPs = managedOutboundIPs;
            return this;
        }
        public Builder outboundIPPrefixes(@Nullable ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes outboundIPPrefixes) {
            this.outboundIPPrefixes = outboundIPPrefixes;
            return this;
        }
        public Builder outboundIPs(@Nullable ManagedClusterLoadBalancerProfileResponseOutboundIPs outboundIPs) {
            this.outboundIPs = outboundIPs;
            return this;
        }        public ManagedClusterLoadBalancerProfileResponse build() {
            return new ManagedClusterLoadBalancerProfileResponse(allocatedOutboundPorts, effectiveOutboundIPs, idleTimeoutInMinutes, managedOutboundIPs, outboundIPPrefixes, outboundIPs);
        }
    }
}
