// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.batch.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataDiskResponse extends io.pulumi.resources.InvokeArgs {

    public static final DataDiskResponse Empty = new DataDiskResponse();

    @InputImport(name="caching")
    private final @Nullable String caching;

    public Optional<String> getCaching() {
        return this.caching == null ? Optional.empty() : Optional.ofNullable(this.caching);
    }

    @InputImport(name="diskSizeGB", required=true)
    private final Integer diskSizeGB;

    public Integer getDiskSizeGB() {
        return this.diskSizeGB;
    }

    @InputImport(name="lun", required=true)
    private final Integer lun;

    public Integer getLun() {
        return this.lun;
    }

    @InputImport(name="storageAccountType")
    private final @Nullable String storageAccountType;

    public Optional<String> getStorageAccountType() {
        return this.storageAccountType == null ? Optional.empty() : Optional.ofNullable(this.storageAccountType);
    }

    public DataDiskResponse(
        @Nullable String caching,
        Integer diskSizeGB,
        Integer lun,
        @Nullable String storageAccountType) {
        this.caching = caching;
        this.diskSizeGB = Objects.requireNonNull(diskSizeGB, "expected parameter 'diskSizeGB' to be non-null");
        this.lun = Objects.requireNonNull(lun, "expected parameter 'lun' to be non-null");
        this.storageAccountType = storageAccountType;
    }

    private DataDiskResponse() {
        this.caching = null;
        this.diskSizeGB = null;
        this.lun = null;
        this.storageAccountType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String caching;
        private Integer diskSizeGB;
        private Integer lun;
        private @Nullable String storageAccountType;

        public Builder() {
    	      // Empty
        }

        public Builder(DataDiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caching = defaults.caching;
    	      this.diskSizeGB = defaults.diskSizeGB;
    	      this.lun = defaults.lun;
    	      this.storageAccountType = defaults.storageAccountType;
        }

        public Builder setCaching(@Nullable String caching) {
            this.caching = caching;
            return this;
        }

        public Builder setDiskSizeGB(Integer diskSizeGB) {
            this.diskSizeGB = Objects.requireNonNull(diskSizeGB);
            return this;
        }

        public Builder setLun(Integer lun) {
            this.lun = Objects.requireNonNull(lun);
            return this;
        }

        public Builder setStorageAccountType(@Nullable String storageAccountType) {
            this.storageAccountType = storageAccountType;
            return this;
        }

        public DataDiskResponse build() {
            return new DataDiskResponse(caching, diskSizeGB, lun, storageAccountType);
        }
    }
}
