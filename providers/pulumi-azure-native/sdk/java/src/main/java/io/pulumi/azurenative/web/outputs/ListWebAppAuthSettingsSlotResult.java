// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.web.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ListWebAppAuthSettingsSlotResult {
    private final @Nullable String aadClaimsAuthorization;
    private final @Nullable List<String> additionalLoginParams;
    private final @Nullable List<String> allowedAudiences;
    private final @Nullable List<String> allowedExternalRedirectUrls;
    private final @Nullable String authFilePath;
    private final @Nullable String clientId;
    private final @Nullable String clientSecret;
    private final @Nullable String clientSecretCertificateThumbprint;
    private final @Nullable String clientSecretSettingName;
    private final @Nullable String configVersion;
    private final @Nullable String defaultProvider;
    private final @Nullable Boolean enabled;
    private final @Nullable String facebookAppId;
    private final @Nullable String facebookAppSecret;
    private final @Nullable String facebookAppSecretSettingName;
    private final @Nullable List<String> facebookOAuthScopes;
    private final @Nullable String gitHubClientId;
    private final @Nullable String gitHubClientSecret;
    private final @Nullable String gitHubClientSecretSettingName;
    private final @Nullable List<String> gitHubOAuthScopes;
    private final @Nullable String googleClientId;
    private final @Nullable String googleClientSecret;
    private final @Nullable String googleClientSecretSettingName;
    private final @Nullable List<String> googleOAuthScopes;
    private final String id;
    private final @Nullable String isAuthFromFile;
    private final @Nullable String issuer;
    private final @Nullable String kind;
    private final @Nullable String microsoftAccountClientId;
    private final @Nullable String microsoftAccountClientSecret;
    private final @Nullable String microsoftAccountClientSecretSettingName;
    private final @Nullable List<String> microsoftAccountOAuthScopes;
    private final String name;
    private final @Nullable String runtimeVersion;
    private final @Nullable Double tokenRefreshExtensionHours;
    private final @Nullable Boolean tokenStoreEnabled;
    private final @Nullable String twitterConsumerKey;
    private final @Nullable String twitterConsumerSecret;
    private final @Nullable String twitterConsumerSecretSettingName;
    private final String type;
    private final @Nullable String unauthenticatedClientAction;
    private final @Nullable Boolean validateIssuer;

    @OutputCustomType.Constructor({"aadClaimsAuthorization","additionalLoginParams","allowedAudiences","allowedExternalRedirectUrls","authFilePath","clientId","clientSecret","clientSecretCertificateThumbprint","clientSecretSettingName","configVersion","defaultProvider","enabled","facebookAppId","facebookAppSecret","facebookAppSecretSettingName","facebookOAuthScopes","gitHubClientId","gitHubClientSecret","gitHubClientSecretSettingName","gitHubOAuthScopes","googleClientId","googleClientSecret","googleClientSecretSettingName","googleOAuthScopes","id","isAuthFromFile","issuer","kind","microsoftAccountClientId","microsoftAccountClientSecret","microsoftAccountClientSecretSettingName","microsoftAccountOAuthScopes","name","runtimeVersion","tokenRefreshExtensionHours","tokenStoreEnabled","twitterConsumerKey","twitterConsumerSecret","twitterConsumerSecretSettingName","type","unauthenticatedClientAction","validateIssuer"})
    private ListWebAppAuthSettingsSlotResult(
        @Nullable String aadClaimsAuthorization,
        @Nullable List<String> additionalLoginParams,
        @Nullable List<String> allowedAudiences,
        @Nullable List<String> allowedExternalRedirectUrls,
        @Nullable String authFilePath,
        @Nullable String clientId,
        @Nullable String clientSecret,
        @Nullable String clientSecretCertificateThumbprint,
        @Nullable String clientSecretSettingName,
        @Nullable String configVersion,
        @Nullable String defaultProvider,
        @Nullable Boolean enabled,
        @Nullable String facebookAppId,
        @Nullable String facebookAppSecret,
        @Nullable String facebookAppSecretSettingName,
        @Nullable List<String> facebookOAuthScopes,
        @Nullable String gitHubClientId,
        @Nullable String gitHubClientSecret,
        @Nullable String gitHubClientSecretSettingName,
        @Nullable List<String> gitHubOAuthScopes,
        @Nullable String googleClientId,
        @Nullable String googleClientSecret,
        @Nullable String googleClientSecretSettingName,
        @Nullable List<String> googleOAuthScopes,
        String id,
        @Nullable String isAuthFromFile,
        @Nullable String issuer,
        @Nullable String kind,
        @Nullable String microsoftAccountClientId,
        @Nullable String microsoftAccountClientSecret,
        @Nullable String microsoftAccountClientSecretSettingName,
        @Nullable List<String> microsoftAccountOAuthScopes,
        String name,
        @Nullable String runtimeVersion,
        @Nullable Double tokenRefreshExtensionHours,
        @Nullable Boolean tokenStoreEnabled,
        @Nullable String twitterConsumerKey,
        @Nullable String twitterConsumerSecret,
        @Nullable String twitterConsumerSecretSettingName,
        String type,
        @Nullable String unauthenticatedClientAction,
        @Nullable Boolean validateIssuer) {
        this.aadClaimsAuthorization = aadClaimsAuthorization;
        this.additionalLoginParams = additionalLoginParams;
        this.allowedAudiences = allowedAudiences;
        this.allowedExternalRedirectUrls = allowedExternalRedirectUrls;
        this.authFilePath = authFilePath;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.clientSecretCertificateThumbprint = clientSecretCertificateThumbprint;
        this.clientSecretSettingName = clientSecretSettingName;
        this.configVersion = configVersion;
        this.defaultProvider = defaultProvider;
        this.enabled = enabled;
        this.facebookAppId = facebookAppId;
        this.facebookAppSecret = facebookAppSecret;
        this.facebookAppSecretSettingName = facebookAppSecretSettingName;
        this.facebookOAuthScopes = facebookOAuthScopes;
        this.gitHubClientId = gitHubClientId;
        this.gitHubClientSecret = gitHubClientSecret;
        this.gitHubClientSecretSettingName = gitHubClientSecretSettingName;
        this.gitHubOAuthScopes = gitHubOAuthScopes;
        this.googleClientId = googleClientId;
        this.googleClientSecret = googleClientSecret;
        this.googleClientSecretSettingName = googleClientSecretSettingName;
        this.googleOAuthScopes = googleOAuthScopes;
        this.id = Objects.requireNonNull(id);
        this.isAuthFromFile = isAuthFromFile;
        this.issuer = issuer;
        this.kind = kind;
        this.microsoftAccountClientId = microsoftAccountClientId;
        this.microsoftAccountClientSecret = microsoftAccountClientSecret;
        this.microsoftAccountClientSecretSettingName = microsoftAccountClientSecretSettingName;
        this.microsoftAccountOAuthScopes = microsoftAccountOAuthScopes;
        this.name = Objects.requireNonNull(name);
        this.runtimeVersion = runtimeVersion;
        this.tokenRefreshExtensionHours = tokenRefreshExtensionHours;
        this.tokenStoreEnabled = tokenStoreEnabled;
        this.twitterConsumerKey = twitterConsumerKey;
        this.twitterConsumerSecret = twitterConsumerSecret;
        this.twitterConsumerSecretSettingName = twitterConsumerSecretSettingName;
        this.type = Objects.requireNonNull(type);
        this.unauthenticatedClientAction = unauthenticatedClientAction;
        this.validateIssuer = validateIssuer;
    }

    public Optional<String> getAadClaimsAuthorization() {
        return Optional.ofNullable(this.aadClaimsAuthorization);
    }
    public List<String> getAdditionalLoginParams() {
        return this.additionalLoginParams == null ? List.of() : this.additionalLoginParams;
    }
    public List<String> getAllowedAudiences() {
        return this.allowedAudiences == null ? List.of() : this.allowedAudiences;
    }
    public List<String> getAllowedExternalRedirectUrls() {
        return this.allowedExternalRedirectUrls == null ? List.of() : this.allowedExternalRedirectUrls;
    }
    public Optional<String> getAuthFilePath() {
        return Optional.ofNullable(this.authFilePath);
    }
    public Optional<String> getClientId() {
        return Optional.ofNullable(this.clientId);
    }
    public Optional<String> getClientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }
    public Optional<String> getClientSecretCertificateThumbprint() {
        return Optional.ofNullable(this.clientSecretCertificateThumbprint);
    }
    public Optional<String> getClientSecretSettingName() {
        return Optional.ofNullable(this.clientSecretSettingName);
    }
    public Optional<String> getConfigVersion() {
        return Optional.ofNullable(this.configVersion);
    }
    public Optional<String> getDefaultProvider() {
        return Optional.ofNullable(this.defaultProvider);
    }
    public Optional<Boolean> getEnabled() {
        return Optional.ofNullable(this.enabled);
    }
    public Optional<String> getFacebookAppId() {
        return Optional.ofNullable(this.facebookAppId);
    }
    public Optional<String> getFacebookAppSecret() {
        return Optional.ofNullable(this.facebookAppSecret);
    }
    public Optional<String> getFacebookAppSecretSettingName() {
        return Optional.ofNullable(this.facebookAppSecretSettingName);
    }
    public List<String> getFacebookOAuthScopes() {
        return this.facebookOAuthScopes == null ? List.of() : this.facebookOAuthScopes;
    }
    public Optional<String> getGitHubClientId() {
        return Optional.ofNullable(this.gitHubClientId);
    }
    public Optional<String> getGitHubClientSecret() {
        return Optional.ofNullable(this.gitHubClientSecret);
    }
    public Optional<String> getGitHubClientSecretSettingName() {
        return Optional.ofNullable(this.gitHubClientSecretSettingName);
    }
    public List<String> getGitHubOAuthScopes() {
        return this.gitHubOAuthScopes == null ? List.of() : this.gitHubOAuthScopes;
    }
    public Optional<String> getGoogleClientId() {
        return Optional.ofNullable(this.googleClientId);
    }
    public Optional<String> getGoogleClientSecret() {
        return Optional.ofNullable(this.googleClientSecret);
    }
    public Optional<String> getGoogleClientSecretSettingName() {
        return Optional.ofNullable(this.googleClientSecretSettingName);
    }
    public List<String> getGoogleOAuthScopes() {
        return this.googleOAuthScopes == null ? List.of() : this.googleOAuthScopes;
    }
    public String getId() {
        return this.id;
    }
    public Optional<String> getIsAuthFromFile() {
        return Optional.ofNullable(this.isAuthFromFile);
    }
    public Optional<String> getIssuer() {
        return Optional.ofNullable(this.issuer);
    }
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    public Optional<String> getMicrosoftAccountClientId() {
        return Optional.ofNullable(this.microsoftAccountClientId);
    }
    public Optional<String> getMicrosoftAccountClientSecret() {
        return Optional.ofNullable(this.microsoftAccountClientSecret);
    }
    public Optional<String> getMicrosoftAccountClientSecretSettingName() {
        return Optional.ofNullable(this.microsoftAccountClientSecretSettingName);
    }
    public List<String> getMicrosoftAccountOAuthScopes() {
        return this.microsoftAccountOAuthScopes == null ? List.of() : this.microsoftAccountOAuthScopes;
    }
    public String getName() {
        return this.name;
    }
    public Optional<String> getRuntimeVersion() {
        return Optional.ofNullable(this.runtimeVersion);
    }
    public Optional<Double> getTokenRefreshExtensionHours() {
        return Optional.ofNullable(this.tokenRefreshExtensionHours);
    }
    public Optional<Boolean> getTokenStoreEnabled() {
        return Optional.ofNullable(this.tokenStoreEnabled);
    }
    public Optional<String> getTwitterConsumerKey() {
        return Optional.ofNullable(this.twitterConsumerKey);
    }
    public Optional<String> getTwitterConsumerSecret() {
        return Optional.ofNullable(this.twitterConsumerSecret);
    }
    public Optional<String> getTwitterConsumerSecretSettingName() {
        return Optional.ofNullable(this.twitterConsumerSecretSettingName);
    }
    public String getType() {
        return this.type;
    }
    public Optional<String> getUnauthenticatedClientAction() {
        return Optional.ofNullable(this.unauthenticatedClientAction);
    }
    public Optional<Boolean> getValidateIssuer() {
        return Optional.ofNullable(this.validateIssuer);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListWebAppAuthSettingsSlotResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String aadClaimsAuthorization;
        private @Nullable List<String> additionalLoginParams;
        private @Nullable List<String> allowedAudiences;
        private @Nullable List<String> allowedExternalRedirectUrls;
        private @Nullable String authFilePath;
        private @Nullable String clientId;
        private @Nullable String clientSecret;
        private @Nullable String clientSecretCertificateThumbprint;
        private @Nullable String clientSecretSettingName;
        private @Nullable String configVersion;
        private @Nullable String defaultProvider;
        private @Nullable Boolean enabled;
        private @Nullable String facebookAppId;
        private @Nullable String facebookAppSecret;
        private @Nullable String facebookAppSecretSettingName;
        private @Nullable List<String> facebookOAuthScopes;
        private @Nullable String gitHubClientId;
        private @Nullable String gitHubClientSecret;
        private @Nullable String gitHubClientSecretSettingName;
        private @Nullable List<String> gitHubOAuthScopes;
        private @Nullable String googleClientId;
        private @Nullable String googleClientSecret;
        private @Nullable String googleClientSecretSettingName;
        private @Nullable List<String> googleOAuthScopes;
        private String id;
        private @Nullable String isAuthFromFile;
        private @Nullable String issuer;
        private @Nullable String kind;
        private @Nullable String microsoftAccountClientId;
        private @Nullable String microsoftAccountClientSecret;
        private @Nullable String microsoftAccountClientSecretSettingName;
        private @Nullable List<String> microsoftAccountOAuthScopes;
        private String name;
        private @Nullable String runtimeVersion;
        private @Nullable Double tokenRefreshExtensionHours;
        private @Nullable Boolean tokenStoreEnabled;
        private @Nullable String twitterConsumerKey;
        private @Nullable String twitterConsumerSecret;
        private @Nullable String twitterConsumerSecretSettingName;
        private String type;
        private @Nullable String unauthenticatedClientAction;
        private @Nullable Boolean validateIssuer;

        public Builder() {
    	      // Empty
        }

        public Builder(ListWebAppAuthSettingsSlotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadClaimsAuthorization = defaults.aadClaimsAuthorization;
    	      this.additionalLoginParams = defaults.additionalLoginParams;
    	      this.allowedAudiences = defaults.allowedAudiences;
    	      this.allowedExternalRedirectUrls = defaults.allowedExternalRedirectUrls;
    	      this.authFilePath = defaults.authFilePath;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.clientSecretCertificateThumbprint = defaults.clientSecretCertificateThumbprint;
    	      this.clientSecretSettingName = defaults.clientSecretSettingName;
    	      this.configVersion = defaults.configVersion;
    	      this.defaultProvider = defaults.defaultProvider;
    	      this.enabled = defaults.enabled;
    	      this.facebookAppId = defaults.facebookAppId;
    	      this.facebookAppSecret = defaults.facebookAppSecret;
    	      this.facebookAppSecretSettingName = defaults.facebookAppSecretSettingName;
    	      this.facebookOAuthScopes = defaults.facebookOAuthScopes;
    	      this.gitHubClientId = defaults.gitHubClientId;
    	      this.gitHubClientSecret = defaults.gitHubClientSecret;
    	      this.gitHubClientSecretSettingName = defaults.gitHubClientSecretSettingName;
    	      this.gitHubOAuthScopes = defaults.gitHubOAuthScopes;
    	      this.googleClientId = defaults.googleClientId;
    	      this.googleClientSecret = defaults.googleClientSecret;
    	      this.googleClientSecretSettingName = defaults.googleClientSecretSettingName;
    	      this.googleOAuthScopes = defaults.googleOAuthScopes;
    	      this.id = defaults.id;
    	      this.isAuthFromFile = defaults.isAuthFromFile;
    	      this.issuer = defaults.issuer;
    	      this.kind = defaults.kind;
    	      this.microsoftAccountClientId = defaults.microsoftAccountClientId;
    	      this.microsoftAccountClientSecret = defaults.microsoftAccountClientSecret;
    	      this.microsoftAccountClientSecretSettingName = defaults.microsoftAccountClientSecretSettingName;
    	      this.microsoftAccountOAuthScopes = defaults.microsoftAccountOAuthScopes;
    	      this.name = defaults.name;
    	      this.runtimeVersion = defaults.runtimeVersion;
    	      this.tokenRefreshExtensionHours = defaults.tokenRefreshExtensionHours;
    	      this.tokenStoreEnabled = defaults.tokenStoreEnabled;
    	      this.twitterConsumerKey = defaults.twitterConsumerKey;
    	      this.twitterConsumerSecret = defaults.twitterConsumerSecret;
    	      this.twitterConsumerSecretSettingName = defaults.twitterConsumerSecretSettingName;
    	      this.type = defaults.type;
    	      this.unauthenticatedClientAction = defaults.unauthenticatedClientAction;
    	      this.validateIssuer = defaults.validateIssuer;
        }

        public Builder setAadClaimsAuthorization(@Nullable String aadClaimsAuthorization) {
            this.aadClaimsAuthorization = aadClaimsAuthorization;
            return this;
        }

        public Builder setAdditionalLoginParams(@Nullable List<String> additionalLoginParams) {
            this.additionalLoginParams = additionalLoginParams;
            return this;
        }

        public Builder setAllowedAudiences(@Nullable List<String> allowedAudiences) {
            this.allowedAudiences = allowedAudiences;
            return this;
        }

        public Builder setAllowedExternalRedirectUrls(@Nullable List<String> allowedExternalRedirectUrls) {
            this.allowedExternalRedirectUrls = allowedExternalRedirectUrls;
            return this;
        }

        public Builder setAuthFilePath(@Nullable String authFilePath) {
            this.authFilePath = authFilePath;
            return this;
        }

        public Builder setClientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }

        public Builder setClientSecret(@Nullable String clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }

        public Builder setClientSecretCertificateThumbprint(@Nullable String clientSecretCertificateThumbprint) {
            this.clientSecretCertificateThumbprint = clientSecretCertificateThumbprint;
            return this;
        }

        public Builder setClientSecretSettingName(@Nullable String clientSecretSettingName) {
            this.clientSecretSettingName = clientSecretSettingName;
            return this;
        }

        public Builder setConfigVersion(@Nullable String configVersion) {
            this.configVersion = configVersion;
            return this;
        }

        public Builder setDefaultProvider(@Nullable String defaultProvider) {
            this.defaultProvider = defaultProvider;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setFacebookAppId(@Nullable String facebookAppId) {
            this.facebookAppId = facebookAppId;
            return this;
        }

        public Builder setFacebookAppSecret(@Nullable String facebookAppSecret) {
            this.facebookAppSecret = facebookAppSecret;
            return this;
        }

        public Builder setFacebookAppSecretSettingName(@Nullable String facebookAppSecretSettingName) {
            this.facebookAppSecretSettingName = facebookAppSecretSettingName;
            return this;
        }

        public Builder setFacebookOAuthScopes(@Nullable List<String> facebookOAuthScopes) {
            this.facebookOAuthScopes = facebookOAuthScopes;
            return this;
        }

        public Builder setGitHubClientId(@Nullable String gitHubClientId) {
            this.gitHubClientId = gitHubClientId;
            return this;
        }

        public Builder setGitHubClientSecret(@Nullable String gitHubClientSecret) {
            this.gitHubClientSecret = gitHubClientSecret;
            return this;
        }

        public Builder setGitHubClientSecretSettingName(@Nullable String gitHubClientSecretSettingName) {
            this.gitHubClientSecretSettingName = gitHubClientSecretSettingName;
            return this;
        }

        public Builder setGitHubOAuthScopes(@Nullable List<String> gitHubOAuthScopes) {
            this.gitHubOAuthScopes = gitHubOAuthScopes;
            return this;
        }

        public Builder setGoogleClientId(@Nullable String googleClientId) {
            this.googleClientId = googleClientId;
            return this;
        }

        public Builder setGoogleClientSecret(@Nullable String googleClientSecret) {
            this.googleClientSecret = googleClientSecret;
            return this;
        }

        public Builder setGoogleClientSecretSettingName(@Nullable String googleClientSecretSettingName) {
            this.googleClientSecretSettingName = googleClientSecretSettingName;
            return this;
        }

        public Builder setGoogleOAuthScopes(@Nullable List<String> googleOAuthScopes) {
            this.googleOAuthScopes = googleOAuthScopes;
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setIsAuthFromFile(@Nullable String isAuthFromFile) {
            this.isAuthFromFile = isAuthFromFile;
            return this;
        }

        public Builder setIssuer(@Nullable String issuer) {
            this.issuer = issuer;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder setMicrosoftAccountClientId(@Nullable String microsoftAccountClientId) {
            this.microsoftAccountClientId = microsoftAccountClientId;
            return this;
        }

        public Builder setMicrosoftAccountClientSecret(@Nullable String microsoftAccountClientSecret) {
            this.microsoftAccountClientSecret = microsoftAccountClientSecret;
            return this;
        }

        public Builder setMicrosoftAccountClientSecretSettingName(@Nullable String microsoftAccountClientSecretSettingName) {
            this.microsoftAccountClientSecretSettingName = microsoftAccountClientSecretSettingName;
            return this;
        }

        public Builder setMicrosoftAccountOAuthScopes(@Nullable List<String> microsoftAccountOAuthScopes) {
            this.microsoftAccountOAuthScopes = microsoftAccountOAuthScopes;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRuntimeVersion(@Nullable String runtimeVersion) {
            this.runtimeVersion = runtimeVersion;
            return this;
        }

        public Builder setTokenRefreshExtensionHours(@Nullable Double tokenRefreshExtensionHours) {
            this.tokenRefreshExtensionHours = tokenRefreshExtensionHours;
            return this;
        }

        public Builder setTokenStoreEnabled(@Nullable Boolean tokenStoreEnabled) {
            this.tokenStoreEnabled = tokenStoreEnabled;
            return this;
        }

        public Builder setTwitterConsumerKey(@Nullable String twitterConsumerKey) {
            this.twitterConsumerKey = twitterConsumerKey;
            return this;
        }

        public Builder setTwitterConsumerSecret(@Nullable String twitterConsumerSecret) {
            this.twitterConsumerSecret = twitterConsumerSecret;
            return this;
        }

        public Builder setTwitterConsumerSecretSettingName(@Nullable String twitterConsumerSecretSettingName) {
            this.twitterConsumerSecretSettingName = twitterConsumerSecretSettingName;
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUnauthenticatedClientAction(@Nullable String unauthenticatedClientAction) {
            this.unauthenticatedClientAction = unauthenticatedClientAction;
            return this;
        }

        public Builder setValidateIssuer(@Nullable Boolean validateIssuer) {
            this.validateIssuer = validateIssuer;
            return this;
        }

        public ListWebAppAuthSettingsSlotResult build() {
            return new ListWebAppAuthSettingsSlotResult(aadClaimsAuthorization, additionalLoginParams, allowedAudiences, allowedExternalRedirectUrls, authFilePath, clientId, clientSecret, clientSecretCertificateThumbprint, clientSecretSettingName, configVersion, defaultProvider, enabled, facebookAppId, facebookAppSecret, facebookAppSecretSettingName, facebookOAuthScopes, gitHubClientId, gitHubClientSecret, gitHubClientSecretSettingName, gitHubOAuthScopes, googleClientId, googleClientSecret, googleClientSecretSettingName, googleOAuthScopes, id, isAuthFromFile, issuer, kind, microsoftAccountClientId, microsoftAccountClientSecret, microsoftAccountClientSecretSettingName, microsoftAccountOAuthScopes, name, runtimeVersion, tokenRefreshExtensionHours, tokenStoreEnabled, twitterConsumerKey, twitterConsumerSecret, twitterConsumerSecretSettingName, type, unauthenticatedClientAction, validateIssuer);
        }
    }
}
