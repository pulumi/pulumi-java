// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearning.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RealtimeConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final RealtimeConfigurationArgs Empty = new RealtimeConfigurationArgs();

    @InputImport(name="maxConcurrentCalls")
    private final @Nullable Input<Integer> maxConcurrentCalls;

    public Input<Integer> getMaxConcurrentCalls() {
        return this.maxConcurrentCalls == null ? Input.empty() : this.maxConcurrentCalls;
    }

    public RealtimeConfigurationArgs(@Nullable Input<Integer> maxConcurrentCalls) {
        this.maxConcurrentCalls = maxConcurrentCalls;
    }

    private RealtimeConfigurationArgs() {
        this.maxConcurrentCalls = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RealtimeConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> maxConcurrentCalls;

        public Builder() {
    	      // Empty
        }

        public Builder(RealtimeConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxConcurrentCalls = defaults.maxConcurrentCalls;
        }

        public Builder setMaxConcurrentCalls(@Nullable Input<Integer> maxConcurrentCalls) {
            this.maxConcurrentCalls = maxConcurrentCalls;
            return this;
        }

        public Builder setMaxConcurrentCalls(@Nullable Integer maxConcurrentCalls) {
            this.maxConcurrentCalls = Input.ofNullable(maxConcurrentCalls);
            return this;
        }

        public RealtimeConfigurationArgs build() {
            return new RealtimeConfigurationArgs(maxConcurrentCalls);
        }
    }
}
