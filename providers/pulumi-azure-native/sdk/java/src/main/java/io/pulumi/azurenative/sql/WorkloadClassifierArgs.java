// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkloadClassifierArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkloadClassifierArgs Empty = new WorkloadClassifierArgs();

    /**
     * The workload classifier context.
     * 
     */
    @Import(name="context")
      private final @Nullable Output<String> context;

    public Output<String> context() {
        return this.context == null ? Codegen.empty() : this.context;
    }

    /**
     * The name of the database.
     * 
     */
    @Import(name="databaseName", required=true)
      private final Output<String> databaseName;

    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * The workload classifier end time for classification.
     * 
     */
    @Import(name="endTime")
      private final @Nullable Output<String> endTime;

    public Output<String> endTime() {
        return this.endTime == null ? Codegen.empty() : this.endTime;
    }

    /**
     * The workload classifier importance.
     * 
     */
    @Import(name="importance")
      private final @Nullable Output<String> importance;

    public Output<String> importance() {
        return this.importance == null ? Codegen.empty() : this.importance;
    }

    /**
     * The workload classifier label.
     * 
     */
    @Import(name="label")
      private final @Nullable Output<String> label;

    public Output<String> label() {
        return this.label == null ? Codegen.empty() : this.label;
    }

    /**
     * The workload classifier member name.
     * 
     */
    @Import(name="memberName", required=true)
      private final Output<String> memberName;

    public Output<String> memberName() {
        return this.memberName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @Import(name="serverName", required=true)
      private final Output<String> serverName;

    public Output<String> serverName() {
        return this.serverName;
    }

    /**
     * The workload classifier start time for classification.
     * 
     */
    @Import(name="startTime")
      private final @Nullable Output<String> startTime;

    public Output<String> startTime() {
        return this.startTime == null ? Codegen.empty() : this.startTime;
    }

    /**
     * The name of the workload classifier to create/update.
     * 
     */
    @Import(name="workloadClassifierName")
      private final @Nullable Output<String> workloadClassifierName;

    public Output<String> workloadClassifierName() {
        return this.workloadClassifierName == null ? Codegen.empty() : this.workloadClassifierName;
    }

    /**
     * The name of the workload group from which to receive the classifier from.
     * 
     */
    @Import(name="workloadGroupName", required=true)
      private final Output<String> workloadGroupName;

    public Output<String> workloadGroupName() {
        return this.workloadGroupName;
    }

    public WorkloadClassifierArgs(
        @Nullable Output<String> context,
        Output<String> databaseName,
        @Nullable Output<String> endTime,
        @Nullable Output<String> importance,
        @Nullable Output<String> label,
        Output<String> memberName,
        Output<String> resourceGroupName,
        Output<String> serverName,
        @Nullable Output<String> startTime,
        @Nullable Output<String> workloadClassifierName,
        Output<String> workloadGroupName) {
        this.context = context;
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.endTime = endTime;
        this.importance = importance;
        this.label = label;
        this.memberName = Objects.requireNonNull(memberName, "expected parameter 'memberName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serverName = Objects.requireNonNull(serverName, "expected parameter 'serverName' to be non-null");
        this.startTime = startTime;
        this.workloadClassifierName = workloadClassifierName;
        this.workloadGroupName = Objects.requireNonNull(workloadGroupName, "expected parameter 'workloadGroupName' to be non-null");
    }

    private WorkloadClassifierArgs() {
        this.context = Codegen.empty();
        this.databaseName = Codegen.empty();
        this.endTime = Codegen.empty();
        this.importance = Codegen.empty();
        this.label = Codegen.empty();
        this.memberName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.serverName = Codegen.empty();
        this.startTime = Codegen.empty();
        this.workloadClassifierName = Codegen.empty();
        this.workloadGroupName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadClassifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> context;
        private Output<String> databaseName;
        private @Nullable Output<String> endTime;
        private @Nullable Output<String> importance;
        private @Nullable Output<String> label;
        private Output<String> memberName;
        private Output<String> resourceGroupName;
        private Output<String> serverName;
        private @Nullable Output<String> startTime;
        private @Nullable Output<String> workloadClassifierName;
        private Output<String> workloadGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkloadClassifierArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.context = defaults.context;
    	      this.databaseName = defaults.databaseName;
    	      this.endTime = defaults.endTime;
    	      this.importance = defaults.importance;
    	      this.label = defaults.label;
    	      this.memberName = defaults.memberName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serverName = defaults.serverName;
    	      this.startTime = defaults.startTime;
    	      this.workloadClassifierName = defaults.workloadClassifierName;
    	      this.workloadGroupName = defaults.workloadGroupName;
        }

        public Builder context(@Nullable Output<String> context) {
            this.context = context;
            return this;
        }
        public Builder context(@Nullable String context) {
            this.context = Codegen.ofNullable(context);
            return this;
        }
        public Builder databaseName(Output<String> databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        public Builder databaseName(String databaseName) {
            this.databaseName = Output.of(Objects.requireNonNull(databaseName));
            return this;
        }
        public Builder endTime(@Nullable Output<String> endTime) {
            this.endTime = endTime;
            return this;
        }
        public Builder endTime(@Nullable String endTime) {
            this.endTime = Codegen.ofNullable(endTime);
            return this;
        }
        public Builder importance(@Nullable Output<String> importance) {
            this.importance = importance;
            return this;
        }
        public Builder importance(@Nullable String importance) {
            this.importance = Codegen.ofNullable(importance);
            return this;
        }
        public Builder label(@Nullable Output<String> label) {
            this.label = label;
            return this;
        }
        public Builder label(@Nullable String label) {
            this.label = Codegen.ofNullable(label);
            return this;
        }
        public Builder memberName(Output<String> memberName) {
            this.memberName = Objects.requireNonNull(memberName);
            return this;
        }
        public Builder memberName(String memberName) {
            this.memberName = Output.of(Objects.requireNonNull(memberName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder serverName(Output<String> serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }
        public Builder serverName(String serverName) {
            this.serverName = Output.of(Objects.requireNonNull(serverName));
            return this;
        }
        public Builder startTime(@Nullable Output<String> startTime) {
            this.startTime = startTime;
            return this;
        }
        public Builder startTime(@Nullable String startTime) {
            this.startTime = Codegen.ofNullable(startTime);
            return this;
        }
        public Builder workloadClassifierName(@Nullable Output<String> workloadClassifierName) {
            this.workloadClassifierName = workloadClassifierName;
            return this;
        }
        public Builder workloadClassifierName(@Nullable String workloadClassifierName) {
            this.workloadClassifierName = Codegen.ofNullable(workloadClassifierName);
            return this;
        }
        public Builder workloadGroupName(Output<String> workloadGroupName) {
            this.workloadGroupName = Objects.requireNonNull(workloadGroupName);
            return this;
        }
        public Builder workloadGroupName(String workloadGroupName) {
            this.workloadGroupName = Output.of(Objects.requireNonNull(workloadGroupName));
            return this;
        }        public WorkloadClassifierArgs build() {
            return new WorkloadClassifierArgs(context, databaseName, endTime, importance, label, memberName, resourceGroupName, serverName, startTime, workloadClassifierName, workloadGroupName);
        }
    }
}
