// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkloadClassifierArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkloadClassifierArgs Empty = new WorkloadClassifierArgs();

    /**
     * The workload classifier context.
     * 
     */
    @InputImport(name="context")
    private final @Nullable Input<String> context;

    public Input<String> getContext() {
        return this.context == null ? Input.empty() : this.context;
    }

    /**
     * The name of the database.
     * 
     */
    @InputImport(name="databaseName", required=true)
    private final Input<String> databaseName;

    public Input<String> getDatabaseName() {
        return this.databaseName;
    }

    /**
     * The workload classifier end time for classification.
     * 
     */
    @InputImport(name="endTime")
    private final @Nullable Input<String> endTime;

    public Input<String> getEndTime() {
        return this.endTime == null ? Input.empty() : this.endTime;
    }

    /**
     * The workload classifier importance.
     * 
     */
    @InputImport(name="importance")
    private final @Nullable Input<String> importance;

    public Input<String> getImportance() {
        return this.importance == null ? Input.empty() : this.importance;
    }

    /**
     * The workload classifier label.
     * 
     */
    @InputImport(name="label")
    private final @Nullable Input<String> label;

    public Input<String> getLabel() {
        return this.label == null ? Input.empty() : this.label;
    }

    /**
     * The workload classifier member name.
     * 
     */
    @InputImport(name="memberName", required=true)
    private final Input<String> memberName;

    public Input<String> getMemberName() {
        return this.memberName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @InputImport(name="resourceGroupName", required=true)
    private final Input<String> resourceGroupName;

    public Input<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the server.
     * 
     */
    @InputImport(name="serverName", required=true)
    private final Input<String> serverName;

    public Input<String> getServerName() {
        return this.serverName;
    }

    /**
     * The workload classifier start time for classification.
     * 
     */
    @InputImport(name="startTime")
    private final @Nullable Input<String> startTime;

    public Input<String> getStartTime() {
        return this.startTime == null ? Input.empty() : this.startTime;
    }

    /**
     * The name of the workload classifier to create/update.
     * 
     */
    @InputImport(name="workloadClassifierName")
    private final @Nullable Input<String> workloadClassifierName;

    public Input<String> getWorkloadClassifierName() {
        return this.workloadClassifierName == null ? Input.empty() : this.workloadClassifierName;
    }

    /**
     * The name of the workload group from which to receive the classifier from.
     * 
     */
    @InputImport(name="workloadGroupName", required=true)
    private final Input<String> workloadGroupName;

    public Input<String> getWorkloadGroupName() {
        return this.workloadGroupName;
    }

    public WorkloadClassifierArgs(
        @Nullable Input<String> context,
        Input<String> databaseName,
        @Nullable Input<String> endTime,
        @Nullable Input<String> importance,
        @Nullable Input<String> label,
        Input<String> memberName,
        Input<String> resourceGroupName,
        Input<String> serverName,
        @Nullable Input<String> startTime,
        @Nullable Input<String> workloadClassifierName,
        Input<String> workloadGroupName) {
        this.context = context;
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.endTime = endTime;
        this.importance = importance;
        this.label = label;
        this.memberName = Objects.requireNonNull(memberName, "expected parameter 'memberName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.serverName = Objects.requireNonNull(serverName, "expected parameter 'serverName' to be non-null");
        this.startTime = startTime;
        this.workloadClassifierName = workloadClassifierName;
        this.workloadGroupName = Objects.requireNonNull(workloadGroupName, "expected parameter 'workloadGroupName' to be non-null");
    }

    private WorkloadClassifierArgs() {
        this.context = Input.empty();
        this.databaseName = Input.empty();
        this.endTime = Input.empty();
        this.importance = Input.empty();
        this.label = Input.empty();
        this.memberName = Input.empty();
        this.resourceGroupName = Input.empty();
        this.serverName = Input.empty();
        this.startTime = Input.empty();
        this.workloadClassifierName = Input.empty();
        this.workloadGroupName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadClassifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> context;
        private Input<String> databaseName;
        private @Nullable Input<String> endTime;
        private @Nullable Input<String> importance;
        private @Nullable Input<String> label;
        private Input<String> memberName;
        private Input<String> resourceGroupName;
        private Input<String> serverName;
        private @Nullable Input<String> startTime;
        private @Nullable Input<String> workloadClassifierName;
        private Input<String> workloadGroupName;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkloadClassifierArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.context = defaults.context;
    	      this.databaseName = defaults.databaseName;
    	      this.endTime = defaults.endTime;
    	      this.importance = defaults.importance;
    	      this.label = defaults.label;
    	      this.memberName = defaults.memberName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serverName = defaults.serverName;
    	      this.startTime = defaults.startTime;
    	      this.workloadClassifierName = defaults.workloadClassifierName;
    	      this.workloadGroupName = defaults.workloadGroupName;
        }

        public Builder setContext(@Nullable Input<String> context) {
            this.context = context;
            return this;
        }

        public Builder setContext(@Nullable String context) {
            this.context = Input.ofNullable(context);
            return this;
        }

        public Builder setDatabaseName(Input<String> databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }

        public Builder setDatabaseName(String databaseName) {
            this.databaseName = Input.of(Objects.requireNonNull(databaseName));
            return this;
        }

        public Builder setEndTime(@Nullable Input<String> endTime) {
            this.endTime = endTime;
            return this;
        }

        public Builder setEndTime(@Nullable String endTime) {
            this.endTime = Input.ofNullable(endTime);
            return this;
        }

        public Builder setImportance(@Nullable Input<String> importance) {
            this.importance = importance;
            return this;
        }

        public Builder setImportance(@Nullable String importance) {
            this.importance = Input.ofNullable(importance);
            return this;
        }

        public Builder setLabel(@Nullable Input<String> label) {
            this.label = label;
            return this;
        }

        public Builder setLabel(@Nullable String label) {
            this.label = Input.ofNullable(label);
            return this;
        }

        public Builder setMemberName(Input<String> memberName) {
            this.memberName = Objects.requireNonNull(memberName);
            return this;
        }

        public Builder setMemberName(String memberName) {
            this.memberName = Input.of(Objects.requireNonNull(memberName));
            return this;
        }

        public Builder setResourceGroupName(Input<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder setResourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Input.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder setServerName(Input<String> serverName) {
            this.serverName = Objects.requireNonNull(serverName);
            return this;
        }

        public Builder setServerName(String serverName) {
            this.serverName = Input.of(Objects.requireNonNull(serverName));
            return this;
        }

        public Builder setStartTime(@Nullable Input<String> startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = Input.ofNullable(startTime);
            return this;
        }

        public Builder setWorkloadClassifierName(@Nullable Input<String> workloadClassifierName) {
            this.workloadClassifierName = workloadClassifierName;
            return this;
        }

        public Builder setWorkloadClassifierName(@Nullable String workloadClassifierName) {
            this.workloadClassifierName = Input.ofNullable(workloadClassifierName);
            return this;
        }

        public Builder setWorkloadGroupName(Input<String> workloadGroupName) {
            this.workloadGroupName = Objects.requireNonNull(workloadGroupName);
            return this;
        }

        public Builder setWorkloadGroupName(String workloadGroupName) {
            this.workloadGroupName = Input.of(Objects.requireNonNull(workloadGroupName));
            return this;
        }

        public WorkloadClassifierArgs build() {
            return new WorkloadClassifierArgs(context, databaseName, endTime, importance, label, memberName, resourceGroupName, serverName, startTime, workloadClassifierName, workloadGroupName);
        }
    }
}
