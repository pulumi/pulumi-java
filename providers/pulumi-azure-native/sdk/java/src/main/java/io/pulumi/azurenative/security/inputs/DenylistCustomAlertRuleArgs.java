// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.security.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A custom alert rule that checks if a value (depends on the custom alert type) is denied.
 * 
 */
public final class DenylistCustomAlertRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final DenylistCustomAlertRuleArgs Empty = new DenylistCustomAlertRuleArgs();

    /**
     * The values to deny. The format of the values depends on the rule type.
     * 
     */
    @InputImport(name="denylistValues", required=true)
      private final Input<List<String>> denylistValues;

    public Input<List<String>> getDenylistValues() {
        return this.denylistValues;
    }

    /**
     * Status of the custom alert.
     * 
     */
    @InputImport(name="isEnabled", required=true)
      private final Input<Boolean> isEnabled;

    public Input<Boolean> getIsEnabled() {
        return this.isEnabled;
    }

    /**
     * The type of the custom alert rule.
     * Expected value is 'DenylistCustomAlertRule'.
     * 
     */
    @InputImport(name="ruleType", required=true)
      private final Input<String> ruleType;

    public Input<String> getRuleType() {
        return this.ruleType;
    }

    public DenylistCustomAlertRuleArgs(
        Input<List<String>> denylistValues,
        Input<Boolean> isEnabled,
        Input<String> ruleType) {
        this.denylistValues = Objects.requireNonNull(denylistValues, "expected parameter 'denylistValues' to be non-null");
        this.isEnabled = Objects.requireNonNull(isEnabled, "expected parameter 'isEnabled' to be non-null");
        this.ruleType = Objects.requireNonNull(ruleType, "expected parameter 'ruleType' to be non-null");
    }

    private DenylistCustomAlertRuleArgs() {
        this.denylistValues = Input.empty();
        this.isEnabled = Input.empty();
        this.ruleType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DenylistCustomAlertRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> denylistValues;
        private Input<Boolean> isEnabled;
        private Input<String> ruleType;

        public Builder() {
    	      // Empty
        }

        public Builder(DenylistCustomAlertRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.denylistValues = defaults.denylistValues;
    	      this.isEnabled = defaults.isEnabled;
    	      this.ruleType = defaults.ruleType;
        }

        public Builder setDenylistValues(Input<List<String>> denylistValues) {
            this.denylistValues = Objects.requireNonNull(denylistValues);
            return this;
        }

        public Builder setDenylistValues(List<String> denylistValues) {
            this.denylistValues = Input.of(Objects.requireNonNull(denylistValues));
            return this;
        }

        public Builder setIsEnabled(Input<Boolean> isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }

        public Builder setIsEnabled(Boolean isEnabled) {
            this.isEnabled = Input.of(Objects.requireNonNull(isEnabled));
            return this;
        }

        public Builder setRuleType(Input<String> ruleType) {
            this.ruleType = Objects.requireNonNull(ruleType);
            return this;
        }

        public Builder setRuleType(String ruleType) {
            this.ruleType = Input.of(Objects.requireNonNull(ruleType));
            return this;
        }
        public DenylistCustomAlertRuleArgs build() {
            return new DenylistCustomAlertRuleArgs(denylistValues, isEnabled, ruleType);
        }
    }
}
