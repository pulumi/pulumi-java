// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.sql.outputs.ServerInfoResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A server trust group.
API Version: 2020-11-01-preview.

{{% examples %}}
## Example Usage
{{% example %}}
### Create server trust group
```csharp
using Pulumi;
using AzureNative = Pulumi.AzureNative;

class MyStack : Stack
{
    public MyStack()
    {
        var serverTrustGroup = new AzureNative.Sql.ServerTrustGroup("serverTrustGroup", new AzureNative.Sql.ServerTrustGroupArgs
        {
            GroupMembers = 
            {
                new AzureNative.Sql.Inputs.ServerInfoArgs
                {
                    ServerId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/managedInstance-1",
                },
                new AzureNative.Sql.Inputs.ServerInfoArgs
                {
                    ServerId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/managedInstance-2",
                },
            },
            LocationName = "Japan East",
            ResourceGroupName = "Default",
            ServerTrustGroupName = "server-trust-group-test",
            TrustScopes = 
            {
                "GlobalTransactions",
                "ServiceBroker",
            },
        });
    }

}

```

```go
package main

import (
	sql "github.com/pulumi/pulumi-azure-native/sdk/go/azure/sql"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := sql.NewServerTrustGroup(ctx, "serverTrustGroup", &sql.ServerTrustGroupArgs{
			GroupMembers: sql.ServerInfoArray{
				&sql.ServerInfoArgs{
					ServerId: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/managedInstance-1"),
				},
				&sql.ServerInfoArgs{
					ServerId: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/managedInstance-2"),
				},
			},
			LocationName:         pulumi.String("Japan East"),
			ResourceGroupName:    pulumi.String("Default"),
			ServerTrustGroupName: pulumi.String("server-trust-group-test"),
			TrustScopes: pulumi.StringArray{
				pulumi.String("GlobalTransactions"),
				pulumi.String("ServiceBroker"),
			},
		})
		if err != nil {
			return err
		}
		return nil
	})
}

```

```typescript
import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const serverTrustGroup = new azure_native.sql.ServerTrustGroup("serverTrustGroup", {
    groupMembers: [
        {
            serverId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/managedInstance-1",
        },
        {
            serverId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/managedInstance-2",
        },
    ],
    locationName: "Japan East",
    resourceGroupName: "Default",
    serverTrustGroupName: "server-trust-group-test",
    trustScopes: [
        "GlobalTransactions",
        "ServiceBroker",
    ],
});

```

```python
import pulumi
import pulumi_azure_native as azure_native

server_trust_group = azure_native.sql.ServerTrustGroup("serverTrustGroup",
    group_members=[
        azure_native.sql.ServerInfoArgs(
            server_id="/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/managedInstance-1",
        ),
        azure_native.sql.ServerInfoArgs(
            server_id="/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/managedInstances/managedInstance-2",
        ),
    ],
    location_name="Japan East",
    resource_group_name="Default",
    server_trust_group_name="server-trust-group-test",
    trust_scopes=[
        "GlobalTransactions",
        "ServiceBroker",
    ])

```

{{% /example %}}
{{% /examples %}}

## Import

An existing resource can be imported using its type token, name, and identifier, e.g.

```sh
$ pulumi import azure-native:sql:ServerTrustGroup server-trust-group-test /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/locations/Japan East/serverTrustGroups/server-trust-group-test 
```

 */
@ResourceType(type="azure-native:sql:ServerTrustGroup")
public class ServerTrustGroup extends io.pulumi.resources.CustomResource {
    /**
     * Group members information for the server trust group.
     */
    @OutputExport(name="groupMembers", type=List.class, parameters={ServerInfoResponse.class})
    private Output<List<ServerInfoResponse>> groupMembers;

    /**
     * @return Group members information for the server trust group.
     */
    public Output<List<ServerInfoResponse>> getGroupMembers() {
        return this.groupMembers;
    }
    /**
     * Resource name.
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Trust scope of the server trust group.
     */
    @OutputExport(name="trustScopes", type=List.class, parameters={String.class})
    private Output<List<String>> trustScopes;

    /**
     * @return Trust scope of the server trust group.
     */
    public Output<List<String>> getTrustScopes() {
        return this.trustScopes;
    }
    /**
     * Resource type.
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerTrustGroup(String name, ServerTrustGroupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:ServerTrustGroup", name, args == null ? ServerTrustGroupArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ServerTrustGroup(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:sql:ServerTrustGroup", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .setAliases(List.of(
                Input.of(Alias.builder().setType("azure-native:sql/v20200202preview:ServerTrustGroup").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20200801preview:ServerTrustGroup").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20201101preview:ServerTrustGroup").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20210201preview:ServerTrustGroup").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20210501preview:ServerTrustGroup").build()),
                Input.of(Alias.builder().setType("azure-native:sql/v20210801preview:ServerTrustGroup").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerTrustGroup get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ServerTrustGroup(name, id, options);
    }
}
