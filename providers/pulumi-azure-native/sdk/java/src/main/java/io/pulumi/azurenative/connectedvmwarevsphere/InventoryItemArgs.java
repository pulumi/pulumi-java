// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.connectedvmwarevsphere;

import io.pulumi.azurenative.connectedvmwarevsphere.enums.InventoryType;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InventoryItemArgs extends io.pulumi.resources.ResourceArgs {

    public static final InventoryItemArgs Empty = new InventoryItemArgs();

    /**
     * Name of the inventoryItem.
     * 
     */
    @Import(name="inventoryItemName")
      private final @Nullable Output<String> inventoryItemName;

    public Output<String> getInventoryItemName() {
        return this.inventoryItemName == null ? Output.empty() : this.inventoryItemName;
    }

    /**
     * They inventory type.
     * 
     */
    @Import(name="inventoryType", required=true)
      private final Output<Either<String,InventoryType>> inventoryType;

    public Output<Either<String,InventoryType>> getInventoryType() {
        return this.inventoryType;
    }

    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<String> kind;

    public Output<String> getKind() {
        return this.kind == null ? Output.empty() : this.kind;
    }

    /**
     * Gets or sets the tracked resource id corresponding to the inventory resource.
     * 
     */
    @Import(name="managedResourceId")
      private final @Nullable Output<String> managedResourceId;

    public Output<String> getManagedResourceId() {
        return this.managedResourceId == null ? Output.empty() : this.managedResourceId;
    }

    /**
     * Gets or sets the vCenter Managed Object name for the inventory item.
     * 
     */
    @Import(name="moName")
      private final @Nullable Output<String> moName;

    public Output<String> getMoName() {
        return this.moName == null ? Output.empty() : this.moName;
    }

    /**
     * Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.
     * 
     */
    @Import(name="moRefId")
      private final @Nullable Output<String> moRefId;

    public Output<String> getMoRefId() {
        return this.moRefId == null ? Output.empty() : this.moRefId;
    }

    /**
     * The Resource Group Name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the vCenter.
     * 
     */
    @Import(name="vcenterName", required=true)
      private final Output<String> vcenterName;

    public Output<String> getVcenterName() {
        return this.vcenterName;
    }

    public InventoryItemArgs(
        @Nullable Output<String> inventoryItemName,
        Output<Either<String,InventoryType>> inventoryType,
        @Nullable Output<String> kind,
        @Nullable Output<String> managedResourceId,
        @Nullable Output<String> moName,
        @Nullable Output<String> moRefId,
        Output<String> resourceGroupName,
        Output<String> vcenterName) {
        this.inventoryItemName = inventoryItemName;
        this.inventoryType = Objects.requireNonNull(inventoryType, "expected parameter 'inventoryType' to be non-null");
        this.kind = kind;
        this.managedResourceId = managedResourceId;
        this.moName = moName;
        this.moRefId = moRefId;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.vcenterName = Objects.requireNonNull(vcenterName, "expected parameter 'vcenterName' to be non-null");
    }

    private InventoryItemArgs() {
        this.inventoryItemName = Output.empty();
        this.inventoryType = Output.empty();
        this.kind = Output.empty();
        this.managedResourceId = Output.empty();
        this.moName = Output.empty();
        this.moRefId = Output.empty();
        this.resourceGroupName = Output.empty();
        this.vcenterName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InventoryItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> inventoryItemName;
        private Output<Either<String,InventoryType>> inventoryType;
        private @Nullable Output<String> kind;
        private @Nullable Output<String> managedResourceId;
        private @Nullable Output<String> moName;
        private @Nullable Output<String> moRefId;
        private Output<String> resourceGroupName;
        private Output<String> vcenterName;

        public Builder() {
    	      // Empty
        }

        public Builder(InventoryItemArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inventoryItemName = defaults.inventoryItemName;
    	      this.inventoryType = defaults.inventoryType;
    	      this.kind = defaults.kind;
    	      this.managedResourceId = defaults.managedResourceId;
    	      this.moName = defaults.moName;
    	      this.moRefId = defaults.moRefId;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.vcenterName = defaults.vcenterName;
        }

        public Builder inventoryItemName(@Nullable Output<String> inventoryItemName) {
            this.inventoryItemName = inventoryItemName;
            return this;
        }
        public Builder inventoryItemName(@Nullable String inventoryItemName) {
            this.inventoryItemName = Output.ofNullable(inventoryItemName);
            return this;
        }
        public Builder inventoryType(Output<Either<String,InventoryType>> inventoryType) {
            this.inventoryType = Objects.requireNonNull(inventoryType);
            return this;
        }
        public Builder inventoryType(Either<String,InventoryType> inventoryType) {
            this.inventoryType = Output.of(Objects.requireNonNull(inventoryType));
            return this;
        }
        public Builder kind(@Nullable Output<String> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = Output.ofNullable(kind);
            return this;
        }
        public Builder managedResourceId(@Nullable Output<String> managedResourceId) {
            this.managedResourceId = managedResourceId;
            return this;
        }
        public Builder managedResourceId(@Nullable String managedResourceId) {
            this.managedResourceId = Output.ofNullable(managedResourceId);
            return this;
        }
        public Builder moName(@Nullable Output<String> moName) {
            this.moName = moName;
            return this;
        }
        public Builder moName(@Nullable String moName) {
            this.moName = Output.ofNullable(moName);
            return this;
        }
        public Builder moRefId(@Nullable Output<String> moRefId) {
            this.moRefId = moRefId;
            return this;
        }
        public Builder moRefId(@Nullable String moRefId) {
            this.moRefId = Output.ofNullable(moRefId);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder vcenterName(Output<String> vcenterName) {
            this.vcenterName = Objects.requireNonNull(vcenterName);
            return this;
        }
        public Builder vcenterName(String vcenterName) {
            this.vcenterName = Output.of(Objects.requireNonNull(vcenterName));
            return this;
        }        public InventoryItemArgs build() {
            return new InventoryItemArgs(inventoryItemName, inventoryType, kind, managedResourceId, moName, moRefId, resourceGroupName, vcenterName);
        }
    }
}
