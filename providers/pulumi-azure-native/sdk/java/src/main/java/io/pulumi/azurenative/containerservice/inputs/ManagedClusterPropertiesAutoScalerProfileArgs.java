// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerservice.inputs;

import io.pulumi.azurenative.containerservice.enums.Expander;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Parameters to be applied to the cluster-autoscaler when enabled
 * 
 */
public final class ManagedClusterPropertiesAutoScalerProfileArgs extends io.pulumi.resources.ResourceArgs {

    public static final ManagedClusterPropertiesAutoScalerProfileArgs Empty = new ManagedClusterPropertiesAutoScalerProfileArgs();

    @InputImport(name="balanceSimilarNodeGroups")
      private final @Nullable Input<String> balanceSimilarNodeGroups;

    public Input<String> getBalanceSimilarNodeGroups() {
        return this.balanceSimilarNodeGroups == null ? Input.empty() : this.balanceSimilarNodeGroups;
    }

    @InputImport(name="expander")
      private final @Nullable Input<Either<String,Expander>> expander;

    public Input<Either<String,Expander>> getExpander() {
        return this.expander == null ? Input.empty() : this.expander;
    }

    @InputImport(name="maxEmptyBulkDelete")
      private final @Nullable Input<String> maxEmptyBulkDelete;

    public Input<String> getMaxEmptyBulkDelete() {
        return this.maxEmptyBulkDelete == null ? Input.empty() : this.maxEmptyBulkDelete;
    }

    @InputImport(name="maxGracefulTerminationSec")
      private final @Nullable Input<String> maxGracefulTerminationSec;

    public Input<String> getMaxGracefulTerminationSec() {
        return this.maxGracefulTerminationSec == null ? Input.empty() : this.maxGracefulTerminationSec;
    }

    @InputImport(name="maxNodeProvisionTime")
      private final @Nullable Input<String> maxNodeProvisionTime;

    public Input<String> getMaxNodeProvisionTime() {
        return this.maxNodeProvisionTime == null ? Input.empty() : this.maxNodeProvisionTime;
    }

    @InputImport(name="maxTotalUnreadyPercentage")
      private final @Nullable Input<String> maxTotalUnreadyPercentage;

    public Input<String> getMaxTotalUnreadyPercentage() {
        return this.maxTotalUnreadyPercentage == null ? Input.empty() : this.maxTotalUnreadyPercentage;
    }

    @InputImport(name="newPodScaleUpDelay")
      private final @Nullable Input<String> newPodScaleUpDelay;

    public Input<String> getNewPodScaleUpDelay() {
        return this.newPodScaleUpDelay == null ? Input.empty() : this.newPodScaleUpDelay;
    }

    @InputImport(name="okTotalUnreadyCount")
      private final @Nullable Input<String> okTotalUnreadyCount;

    public Input<String> getOkTotalUnreadyCount() {
        return this.okTotalUnreadyCount == null ? Input.empty() : this.okTotalUnreadyCount;
    }

    @InputImport(name="scaleDownDelayAfterAdd")
      private final @Nullable Input<String> scaleDownDelayAfterAdd;

    public Input<String> getScaleDownDelayAfterAdd() {
        return this.scaleDownDelayAfterAdd == null ? Input.empty() : this.scaleDownDelayAfterAdd;
    }

    @InputImport(name="scaleDownDelayAfterDelete")
      private final @Nullable Input<String> scaleDownDelayAfterDelete;

    public Input<String> getScaleDownDelayAfterDelete() {
        return this.scaleDownDelayAfterDelete == null ? Input.empty() : this.scaleDownDelayAfterDelete;
    }

    @InputImport(name="scaleDownDelayAfterFailure")
      private final @Nullable Input<String> scaleDownDelayAfterFailure;

    public Input<String> getScaleDownDelayAfterFailure() {
        return this.scaleDownDelayAfterFailure == null ? Input.empty() : this.scaleDownDelayAfterFailure;
    }

    @InputImport(name="scaleDownUnneededTime")
      private final @Nullable Input<String> scaleDownUnneededTime;

    public Input<String> getScaleDownUnneededTime() {
        return this.scaleDownUnneededTime == null ? Input.empty() : this.scaleDownUnneededTime;
    }

    @InputImport(name="scaleDownUnreadyTime")
      private final @Nullable Input<String> scaleDownUnreadyTime;

    public Input<String> getScaleDownUnreadyTime() {
        return this.scaleDownUnreadyTime == null ? Input.empty() : this.scaleDownUnreadyTime;
    }

    @InputImport(name="scaleDownUtilizationThreshold")
      private final @Nullable Input<String> scaleDownUtilizationThreshold;

    public Input<String> getScaleDownUtilizationThreshold() {
        return this.scaleDownUtilizationThreshold == null ? Input.empty() : this.scaleDownUtilizationThreshold;
    }

    @InputImport(name="scanInterval")
      private final @Nullable Input<String> scanInterval;

    public Input<String> getScanInterval() {
        return this.scanInterval == null ? Input.empty() : this.scanInterval;
    }

    @InputImport(name="skipNodesWithLocalStorage")
      private final @Nullable Input<String> skipNodesWithLocalStorage;

    public Input<String> getSkipNodesWithLocalStorage() {
        return this.skipNodesWithLocalStorage == null ? Input.empty() : this.skipNodesWithLocalStorage;
    }

    @InputImport(name="skipNodesWithSystemPods")
      private final @Nullable Input<String> skipNodesWithSystemPods;

    public Input<String> getSkipNodesWithSystemPods() {
        return this.skipNodesWithSystemPods == null ? Input.empty() : this.skipNodesWithSystemPods;
    }

    public ManagedClusterPropertiesAutoScalerProfileArgs(
        @Nullable Input<String> balanceSimilarNodeGroups,
        @Nullable Input<Either<String,Expander>> expander,
        @Nullable Input<String> maxEmptyBulkDelete,
        @Nullable Input<String> maxGracefulTerminationSec,
        @Nullable Input<String> maxNodeProvisionTime,
        @Nullable Input<String> maxTotalUnreadyPercentage,
        @Nullable Input<String> newPodScaleUpDelay,
        @Nullable Input<String> okTotalUnreadyCount,
        @Nullable Input<String> scaleDownDelayAfterAdd,
        @Nullable Input<String> scaleDownDelayAfterDelete,
        @Nullable Input<String> scaleDownDelayAfterFailure,
        @Nullable Input<String> scaleDownUnneededTime,
        @Nullable Input<String> scaleDownUnreadyTime,
        @Nullable Input<String> scaleDownUtilizationThreshold,
        @Nullable Input<String> scanInterval,
        @Nullable Input<String> skipNodesWithLocalStorage,
        @Nullable Input<String> skipNodesWithSystemPods) {
        this.balanceSimilarNodeGroups = balanceSimilarNodeGroups;
        this.expander = expander;
        this.maxEmptyBulkDelete = maxEmptyBulkDelete;
        this.maxGracefulTerminationSec = maxGracefulTerminationSec;
        this.maxNodeProvisionTime = maxNodeProvisionTime;
        this.maxTotalUnreadyPercentage = maxTotalUnreadyPercentage;
        this.newPodScaleUpDelay = newPodScaleUpDelay;
        this.okTotalUnreadyCount = okTotalUnreadyCount;
        this.scaleDownDelayAfterAdd = scaleDownDelayAfterAdd;
        this.scaleDownDelayAfterDelete = scaleDownDelayAfterDelete;
        this.scaleDownDelayAfterFailure = scaleDownDelayAfterFailure;
        this.scaleDownUnneededTime = scaleDownUnneededTime;
        this.scaleDownUnreadyTime = scaleDownUnreadyTime;
        this.scaleDownUtilizationThreshold = scaleDownUtilizationThreshold;
        this.scanInterval = scanInterval;
        this.skipNodesWithLocalStorage = skipNodesWithLocalStorage;
        this.skipNodesWithSystemPods = skipNodesWithSystemPods;
    }

    private ManagedClusterPropertiesAutoScalerProfileArgs() {
        this.balanceSimilarNodeGroups = Input.empty();
        this.expander = Input.empty();
        this.maxEmptyBulkDelete = Input.empty();
        this.maxGracefulTerminationSec = Input.empty();
        this.maxNodeProvisionTime = Input.empty();
        this.maxTotalUnreadyPercentage = Input.empty();
        this.newPodScaleUpDelay = Input.empty();
        this.okTotalUnreadyCount = Input.empty();
        this.scaleDownDelayAfterAdd = Input.empty();
        this.scaleDownDelayAfterDelete = Input.empty();
        this.scaleDownDelayAfterFailure = Input.empty();
        this.scaleDownUnneededTime = Input.empty();
        this.scaleDownUnreadyTime = Input.empty();
        this.scaleDownUtilizationThreshold = Input.empty();
        this.scanInterval = Input.empty();
        this.skipNodesWithLocalStorage = Input.empty();
        this.skipNodesWithSystemPods = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedClusterPropertiesAutoScalerProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> balanceSimilarNodeGroups;
        private @Nullable Input<Either<String,Expander>> expander;
        private @Nullable Input<String> maxEmptyBulkDelete;
        private @Nullable Input<String> maxGracefulTerminationSec;
        private @Nullable Input<String> maxNodeProvisionTime;
        private @Nullable Input<String> maxTotalUnreadyPercentage;
        private @Nullable Input<String> newPodScaleUpDelay;
        private @Nullable Input<String> okTotalUnreadyCount;
        private @Nullable Input<String> scaleDownDelayAfterAdd;
        private @Nullable Input<String> scaleDownDelayAfterDelete;
        private @Nullable Input<String> scaleDownDelayAfterFailure;
        private @Nullable Input<String> scaleDownUnneededTime;
        private @Nullable Input<String> scaleDownUnreadyTime;
        private @Nullable Input<String> scaleDownUtilizationThreshold;
        private @Nullable Input<String> scanInterval;
        private @Nullable Input<String> skipNodesWithLocalStorage;
        private @Nullable Input<String> skipNodesWithSystemPods;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedClusterPropertiesAutoScalerProfileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.balanceSimilarNodeGroups = defaults.balanceSimilarNodeGroups;
    	      this.expander = defaults.expander;
    	      this.maxEmptyBulkDelete = defaults.maxEmptyBulkDelete;
    	      this.maxGracefulTerminationSec = defaults.maxGracefulTerminationSec;
    	      this.maxNodeProvisionTime = defaults.maxNodeProvisionTime;
    	      this.maxTotalUnreadyPercentage = defaults.maxTotalUnreadyPercentage;
    	      this.newPodScaleUpDelay = defaults.newPodScaleUpDelay;
    	      this.okTotalUnreadyCount = defaults.okTotalUnreadyCount;
    	      this.scaleDownDelayAfterAdd = defaults.scaleDownDelayAfterAdd;
    	      this.scaleDownDelayAfterDelete = defaults.scaleDownDelayAfterDelete;
    	      this.scaleDownDelayAfterFailure = defaults.scaleDownDelayAfterFailure;
    	      this.scaleDownUnneededTime = defaults.scaleDownUnneededTime;
    	      this.scaleDownUnreadyTime = defaults.scaleDownUnreadyTime;
    	      this.scaleDownUtilizationThreshold = defaults.scaleDownUtilizationThreshold;
    	      this.scanInterval = defaults.scanInterval;
    	      this.skipNodesWithLocalStorage = defaults.skipNodesWithLocalStorage;
    	      this.skipNodesWithSystemPods = defaults.skipNodesWithSystemPods;
        }

        public Builder setBalanceSimilarNodeGroups(@Nullable Input<String> balanceSimilarNodeGroups) {
            this.balanceSimilarNodeGroups = balanceSimilarNodeGroups;
            return this;
        }

        public Builder setBalanceSimilarNodeGroups(@Nullable String balanceSimilarNodeGroups) {
            this.balanceSimilarNodeGroups = Input.ofNullable(balanceSimilarNodeGroups);
            return this;
        }

        public Builder setExpander(@Nullable Input<Either<String,Expander>> expander) {
            this.expander = expander;
            return this;
        }

        public Builder setExpander(@Nullable Either<String,Expander> expander) {
            this.expander = Input.ofNullable(expander);
            return this;
        }

        public Builder setMaxEmptyBulkDelete(@Nullable Input<String> maxEmptyBulkDelete) {
            this.maxEmptyBulkDelete = maxEmptyBulkDelete;
            return this;
        }

        public Builder setMaxEmptyBulkDelete(@Nullable String maxEmptyBulkDelete) {
            this.maxEmptyBulkDelete = Input.ofNullable(maxEmptyBulkDelete);
            return this;
        }

        public Builder setMaxGracefulTerminationSec(@Nullable Input<String> maxGracefulTerminationSec) {
            this.maxGracefulTerminationSec = maxGracefulTerminationSec;
            return this;
        }

        public Builder setMaxGracefulTerminationSec(@Nullable String maxGracefulTerminationSec) {
            this.maxGracefulTerminationSec = Input.ofNullable(maxGracefulTerminationSec);
            return this;
        }

        public Builder setMaxNodeProvisionTime(@Nullable Input<String> maxNodeProvisionTime) {
            this.maxNodeProvisionTime = maxNodeProvisionTime;
            return this;
        }

        public Builder setMaxNodeProvisionTime(@Nullable String maxNodeProvisionTime) {
            this.maxNodeProvisionTime = Input.ofNullable(maxNodeProvisionTime);
            return this;
        }

        public Builder setMaxTotalUnreadyPercentage(@Nullable Input<String> maxTotalUnreadyPercentage) {
            this.maxTotalUnreadyPercentage = maxTotalUnreadyPercentage;
            return this;
        }

        public Builder setMaxTotalUnreadyPercentage(@Nullable String maxTotalUnreadyPercentage) {
            this.maxTotalUnreadyPercentage = Input.ofNullable(maxTotalUnreadyPercentage);
            return this;
        }

        public Builder setNewPodScaleUpDelay(@Nullable Input<String> newPodScaleUpDelay) {
            this.newPodScaleUpDelay = newPodScaleUpDelay;
            return this;
        }

        public Builder setNewPodScaleUpDelay(@Nullable String newPodScaleUpDelay) {
            this.newPodScaleUpDelay = Input.ofNullable(newPodScaleUpDelay);
            return this;
        }

        public Builder setOkTotalUnreadyCount(@Nullable Input<String> okTotalUnreadyCount) {
            this.okTotalUnreadyCount = okTotalUnreadyCount;
            return this;
        }

        public Builder setOkTotalUnreadyCount(@Nullable String okTotalUnreadyCount) {
            this.okTotalUnreadyCount = Input.ofNullable(okTotalUnreadyCount);
            return this;
        }

        public Builder setScaleDownDelayAfterAdd(@Nullable Input<String> scaleDownDelayAfterAdd) {
            this.scaleDownDelayAfterAdd = scaleDownDelayAfterAdd;
            return this;
        }

        public Builder setScaleDownDelayAfterAdd(@Nullable String scaleDownDelayAfterAdd) {
            this.scaleDownDelayAfterAdd = Input.ofNullable(scaleDownDelayAfterAdd);
            return this;
        }

        public Builder setScaleDownDelayAfterDelete(@Nullable Input<String> scaleDownDelayAfterDelete) {
            this.scaleDownDelayAfterDelete = scaleDownDelayAfterDelete;
            return this;
        }

        public Builder setScaleDownDelayAfterDelete(@Nullable String scaleDownDelayAfterDelete) {
            this.scaleDownDelayAfterDelete = Input.ofNullable(scaleDownDelayAfterDelete);
            return this;
        }

        public Builder setScaleDownDelayAfterFailure(@Nullable Input<String> scaleDownDelayAfterFailure) {
            this.scaleDownDelayAfterFailure = scaleDownDelayAfterFailure;
            return this;
        }

        public Builder setScaleDownDelayAfterFailure(@Nullable String scaleDownDelayAfterFailure) {
            this.scaleDownDelayAfterFailure = Input.ofNullable(scaleDownDelayAfterFailure);
            return this;
        }

        public Builder setScaleDownUnneededTime(@Nullable Input<String> scaleDownUnneededTime) {
            this.scaleDownUnneededTime = scaleDownUnneededTime;
            return this;
        }

        public Builder setScaleDownUnneededTime(@Nullable String scaleDownUnneededTime) {
            this.scaleDownUnneededTime = Input.ofNullable(scaleDownUnneededTime);
            return this;
        }

        public Builder setScaleDownUnreadyTime(@Nullable Input<String> scaleDownUnreadyTime) {
            this.scaleDownUnreadyTime = scaleDownUnreadyTime;
            return this;
        }

        public Builder setScaleDownUnreadyTime(@Nullable String scaleDownUnreadyTime) {
            this.scaleDownUnreadyTime = Input.ofNullable(scaleDownUnreadyTime);
            return this;
        }

        public Builder setScaleDownUtilizationThreshold(@Nullable Input<String> scaleDownUtilizationThreshold) {
            this.scaleDownUtilizationThreshold = scaleDownUtilizationThreshold;
            return this;
        }

        public Builder setScaleDownUtilizationThreshold(@Nullable String scaleDownUtilizationThreshold) {
            this.scaleDownUtilizationThreshold = Input.ofNullable(scaleDownUtilizationThreshold);
            return this;
        }

        public Builder setScanInterval(@Nullable Input<String> scanInterval) {
            this.scanInterval = scanInterval;
            return this;
        }

        public Builder setScanInterval(@Nullable String scanInterval) {
            this.scanInterval = Input.ofNullable(scanInterval);
            return this;
        }

        public Builder setSkipNodesWithLocalStorage(@Nullable Input<String> skipNodesWithLocalStorage) {
            this.skipNodesWithLocalStorage = skipNodesWithLocalStorage;
            return this;
        }

        public Builder setSkipNodesWithLocalStorage(@Nullable String skipNodesWithLocalStorage) {
            this.skipNodesWithLocalStorage = Input.ofNullable(skipNodesWithLocalStorage);
            return this;
        }

        public Builder setSkipNodesWithSystemPods(@Nullable Input<String> skipNodesWithSystemPods) {
            this.skipNodesWithSystemPods = skipNodesWithSystemPods;
            return this;
        }

        public Builder setSkipNodesWithSystemPods(@Nullable String skipNodesWithSystemPods) {
            this.skipNodesWithSystemPods = Input.ofNullable(skipNodesWithSystemPods);
            return this;
        }
        public ManagedClusterPropertiesAutoScalerProfileArgs build() {
            return new ManagedClusterPropertiesAutoScalerProfileArgs(balanceSimilarNodeGroups, expander, maxEmptyBulkDelete, maxGracefulTerminationSec, maxNodeProvisionTime, maxTotalUnreadyPercentage, newPodScaleUpDelay, okTotalUnreadyCount, scaleDownDelayAfterAdd, scaleDownDelayAfterDelete, scaleDownDelayAfterFailure, scaleDownUnneededTime, scaleDownUnreadyTime, scaleDownUtilizationThreshold, scanInterval, skipNodesWithLocalStorage, skipNodesWithSystemPods);
        }
    }
}
