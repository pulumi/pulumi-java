// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.compute;

import io.pulumi.azurenative.compute.inputs.SharingProfileArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GalleryArgs extends io.pulumi.resources.ResourceArgs {

    public static final GalleryArgs Empty = new GalleryArgs();

    /**
     * The description of this Shared Image Gallery resource. This property is updatable.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
     * 
     */
    @Import(name="galleryName")
      private final @Nullable Output<String> galleryName;

    public Output<String> getGalleryName() {
        return this.galleryName == null ? Codegen.empty() : this.galleryName;
    }

    /**
     * Resource location
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Profile for gallery sharing to subscription or tenant
     * 
     */
    @Import(name="sharingProfile")
      private final @Nullable Output<SharingProfileArgs> sharingProfile;

    public Output<SharingProfileArgs> getSharingProfile() {
        return this.sharingProfile == null ? Codegen.empty() : this.sharingProfile;
    }

    /**
     * Resource tags
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public GalleryArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> galleryName,
        @Nullable Output<String> location,
        Output<String> resourceGroupName,
        @Nullable Output<SharingProfileArgs> sharingProfile,
        @Nullable Output<Map<String,String>> tags) {
        this.description = description;
        this.galleryName = galleryName;
        this.location = location;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sharingProfile = sharingProfile;
        this.tags = tags;
    }

    private GalleryArgs() {
        this.description = Codegen.empty();
        this.galleryName = Codegen.empty();
        this.location = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.sharingProfile = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GalleryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> galleryName;
        private @Nullable Output<String> location;
        private Output<String> resourceGroupName;
        private @Nullable Output<SharingProfileArgs> sharingProfile;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GalleryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.galleryName = defaults.galleryName;
    	      this.location = defaults.location;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sharingProfile = defaults.sharingProfile;
    	      this.tags = defaults.tags;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder galleryName(@Nullable Output<String> galleryName) {
            this.galleryName = galleryName;
            return this;
        }
        public Builder galleryName(@Nullable String galleryName) {
            this.galleryName = Codegen.ofNullable(galleryName);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder sharingProfile(@Nullable Output<SharingProfileArgs> sharingProfile) {
            this.sharingProfile = sharingProfile;
            return this;
        }
        public Builder sharingProfile(@Nullable SharingProfileArgs sharingProfile) {
            this.sharingProfile = Codegen.ofNullable(sharingProfile);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public GalleryArgs build() {
            return new GalleryArgs(description, galleryName, location, resourceGroupName, sharingProfile, tags);
        }
    }
}
