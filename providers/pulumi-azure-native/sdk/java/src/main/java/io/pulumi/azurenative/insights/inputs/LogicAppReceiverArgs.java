// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.insights.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A logic app receiver.
 * 
 */
public final class LogicAppReceiverArgs extends io.pulumi.resources.ResourceArgs {

    public static final LogicAppReceiverArgs Empty = new LogicAppReceiverArgs();

    /**
     * The callback url where http request sent to.
     * 
     */
    @Import(name="callbackUrl", required=true)
      private final Output<String> callbackUrl;

    public Output<String> getCallbackUrl() {
        return this.callbackUrl;
    }

    /**
     * The name of the logic app receiver. Names must be unique across all receivers within an action group.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    /**
     * The azure resource id of the logic app receiver.
     * 
     */
    @Import(name="resourceId", required=true)
      private final Output<String> resourceId;

    public Output<String> getResourceId() {
        return this.resourceId;
    }

    /**
     * Indicates whether to use common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
      private final @Nullable Output<Boolean> useCommonAlertSchema;

    public Output<Boolean> getUseCommonAlertSchema() {
        return this.useCommonAlertSchema == null ? Output.empty() : this.useCommonAlertSchema;
    }

    public LogicAppReceiverArgs(
        Output<String> callbackUrl,
        Output<String> name,
        Output<String> resourceId,
        @Nullable Output<Boolean> useCommonAlertSchema) {
        this.callbackUrl = Objects.requireNonNull(callbackUrl, "expected parameter 'callbackUrl' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.resourceId = Objects.requireNonNull(resourceId, "expected parameter 'resourceId' to be non-null");
        this.useCommonAlertSchema = useCommonAlertSchema == null ? Output.ofNullable(false) : useCommonAlertSchema;
    }

    private LogicAppReceiverArgs() {
        this.callbackUrl = Output.empty();
        this.name = Output.empty();
        this.resourceId = Output.empty();
        this.useCommonAlertSchema = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogicAppReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> callbackUrl;
        private Output<String> name;
        private Output<String> resourceId;
        private @Nullable Output<Boolean> useCommonAlertSchema;

        public Builder() {
    	      // Empty
        }

        public Builder(LogicAppReceiverArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.callbackUrl = defaults.callbackUrl;
    	      this.name = defaults.name;
    	      this.resourceId = defaults.resourceId;
    	      this.useCommonAlertSchema = defaults.useCommonAlertSchema;
        }

        public Builder callbackUrl(Output<String> callbackUrl) {
            this.callbackUrl = Objects.requireNonNull(callbackUrl);
            return this;
        }

        public Builder callbackUrl(String callbackUrl) {
            this.callbackUrl = Output.of(Objects.requireNonNull(callbackUrl));
            return this;
        }

        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder resourceId(Output<String> resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }

        public Builder resourceId(String resourceId) {
            this.resourceId = Output.of(Objects.requireNonNull(resourceId));
            return this;
        }

        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            this.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }

        public Builder useCommonAlertSchema(@Nullable Boolean useCommonAlertSchema) {
            this.useCommonAlertSchema = Output.ofNullable(useCommonAlertSchema);
            return this;
        }
        public LogicAppReceiverArgs build() {
            return new LogicAppReceiverArgs(callbackUrl, name, resourceId, useCommonAlertSchema);
        }
    }
}
