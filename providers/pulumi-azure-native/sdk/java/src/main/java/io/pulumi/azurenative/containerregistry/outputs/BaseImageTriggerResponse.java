// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.containerregistry.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class BaseImageTriggerResponse {
    /**
     * The type of the auto trigger for base image dependency updates.
     * 
     */
    private final String baseImageTriggerType;
    /**
     * The name of the trigger.
     * 
     */
    private final String name;
    /**
     * The current status of trigger.
     * 
     */
    private final @Nullable String status;
    /**
     * The endpoint URL for receiving update triggers.
     * 
     */
    private final @Nullable String updateTriggerEndpoint;
    /**
     * Type of Payload body for Base image update triggers.
     * 
     */
    private final @Nullable String updateTriggerPayloadType;

    @OutputCustomType.Constructor({"baseImageTriggerType","name","status","updateTriggerEndpoint","updateTriggerPayloadType"})
    private BaseImageTriggerResponse(
        String baseImageTriggerType,
        String name,
        @Nullable String status,
        @Nullable String updateTriggerEndpoint,
        @Nullable String updateTriggerPayloadType) {
        this.baseImageTriggerType = Objects.requireNonNull(baseImageTriggerType);
        this.name = Objects.requireNonNull(name);
        this.status = status;
        this.updateTriggerEndpoint = updateTriggerEndpoint;
        this.updateTriggerPayloadType = updateTriggerPayloadType;
    }

    /**
     * The type of the auto trigger for base image dependency updates.
     * 
     */
    public String getBaseImageTriggerType() {
        return this.baseImageTriggerType;
    }
    /**
     * The name of the trigger.
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * The current status of trigger.
     * 
     */
    public Optional<String> getStatus() {
        return Optional.ofNullable(this.status);
    }
    /**
     * The endpoint URL for receiving update triggers.
     * 
     */
    public Optional<String> getUpdateTriggerEndpoint() {
        return Optional.ofNullable(this.updateTriggerEndpoint);
    }
    /**
     * Type of Payload body for Base image update triggers.
     * 
     */
    public Optional<String> getUpdateTriggerPayloadType() {
        return Optional.ofNullable(this.updateTriggerPayloadType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BaseImageTriggerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String baseImageTriggerType;
        private String name;
        private @Nullable String status;
        private @Nullable String updateTriggerEndpoint;
        private @Nullable String updateTriggerPayloadType;

        public Builder() {
    	      // Empty
        }

        public Builder(BaseImageTriggerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseImageTriggerType = defaults.baseImageTriggerType;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.updateTriggerEndpoint = defaults.updateTriggerEndpoint;
    	      this.updateTriggerPayloadType = defaults.updateTriggerPayloadType;
        }

        public Builder setBaseImageTriggerType(String baseImageTriggerType) {
            this.baseImageTriggerType = Objects.requireNonNull(baseImageTriggerType);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setStatus(@Nullable String status) {
            this.status = status;
            return this;
        }

        public Builder setUpdateTriggerEndpoint(@Nullable String updateTriggerEndpoint) {
            this.updateTriggerEndpoint = updateTriggerEndpoint;
            return this;
        }

        public Builder setUpdateTriggerPayloadType(@Nullable String updateTriggerPayloadType) {
            this.updateTriggerPayloadType = updateTriggerPayloadType;
            return this;
        }
        public BaseImageTriggerResponse build() {
            return new BaseImageTriggerResponse(baseImageTriggerType, name, status, updateTriggerEndpoint, updateTriggerPayloadType);
        }
    }
}
