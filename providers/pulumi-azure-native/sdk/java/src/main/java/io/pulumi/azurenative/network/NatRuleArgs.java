// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.network;

import io.pulumi.azurenative.network.enums.VpnNatRuleMode;
import io.pulumi.azurenative.network.enums.VpnNatRuleType;
import io.pulumi.azurenative.network.inputs.VpnNatRuleMappingArgs;
import io.pulumi.core.Either;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NatRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final NatRuleArgs Empty = new NatRuleArgs();

    /**
     * The private IP address external mapping for NAT.
     * 
     */
    @Import(name="externalMappings")
      private final @Nullable Output<List<VpnNatRuleMappingArgs>> externalMappings;

    public Output<List<VpnNatRuleMappingArgs>> getExternalMappings() {
        return this.externalMappings == null ? Output.empty() : this.externalMappings;
    }

    /**
     * The name of the gateway.
     * 
     */
    @Import(name="gatewayName", required=true)
      private final Output<String> gatewayName;

    public Output<String> getGatewayName() {
        return this.gatewayName;
    }

    /**
     * Resource ID.
     * 
     */
    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Output.empty() : this.id;
    }

    /**
     * The private IP address internal mapping for NAT.
     * 
     */
    @Import(name="internalMappings")
      private final @Nullable Output<List<VpnNatRuleMappingArgs>> internalMappings;

    public Output<List<VpnNatRuleMappingArgs>> getInternalMappings() {
        return this.internalMappings == null ? Output.empty() : this.internalMappings;
    }

    /**
     * The IP Configuration ID this NAT rule applies to.
     * 
     */
    @Import(name="ipConfigurationId")
      private final @Nullable Output<String> ipConfigurationId;

    public Output<String> getIpConfigurationId() {
        return this.ipConfigurationId == null ? Output.empty() : this.ipConfigurationId;
    }

    /**
     * The Source NAT direction of a VPN NAT.
     * 
     */
    @Import(name="mode")
      private final @Nullable Output<Either<String,VpnNatRuleMode>> mode;

    public Output<Either<String,VpnNatRuleMode>> getMode() {
        return this.mode == null ? Output.empty() : this.mode;
    }

    /**
     * The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The name of the nat rule.
     * 
     */
    @Import(name="natRuleName")
      private final @Nullable Output<String> natRuleName;

    public Output<String> getNatRuleName() {
        return this.natRuleName == null ? Output.empty() : this.natRuleName;
    }

    /**
     * The resource group name of the VpnGateway.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The type of NAT rule for VPN NAT.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<Either<String,VpnNatRuleType>> type;

    public Output<Either<String,VpnNatRuleType>> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    public NatRuleArgs(
        @Nullable Output<List<VpnNatRuleMappingArgs>> externalMappings,
        Output<String> gatewayName,
        @Nullable Output<String> id,
        @Nullable Output<List<VpnNatRuleMappingArgs>> internalMappings,
        @Nullable Output<String> ipConfigurationId,
        @Nullable Output<Either<String,VpnNatRuleMode>> mode,
        @Nullable Output<String> name,
        @Nullable Output<String> natRuleName,
        Output<String> resourceGroupName,
        @Nullable Output<Either<String,VpnNatRuleType>> type) {
        this.externalMappings = externalMappings;
        this.gatewayName = Objects.requireNonNull(gatewayName, "expected parameter 'gatewayName' to be non-null");
        this.id = id;
        this.internalMappings = internalMappings;
        this.ipConfigurationId = ipConfigurationId;
        this.mode = mode;
        this.name = name;
        this.natRuleName = natRuleName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.type = type;
    }

    private NatRuleArgs() {
        this.externalMappings = Output.empty();
        this.gatewayName = Output.empty();
        this.id = Output.empty();
        this.internalMappings = Output.empty();
        this.ipConfigurationId = Output.empty();
        this.mode = Output.empty();
        this.name = Output.empty();
        this.natRuleName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NatRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<VpnNatRuleMappingArgs>> externalMappings;
        private Output<String> gatewayName;
        private @Nullable Output<String> id;
        private @Nullable Output<List<VpnNatRuleMappingArgs>> internalMappings;
        private @Nullable Output<String> ipConfigurationId;
        private @Nullable Output<Either<String,VpnNatRuleMode>> mode;
        private @Nullable Output<String> name;
        private @Nullable Output<String> natRuleName;
        private Output<String> resourceGroupName;
        private @Nullable Output<Either<String,VpnNatRuleType>> type;

        public Builder() {
    	      // Empty
        }

        public Builder(NatRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalMappings = defaults.externalMappings;
    	      this.gatewayName = defaults.gatewayName;
    	      this.id = defaults.id;
    	      this.internalMappings = defaults.internalMappings;
    	      this.ipConfigurationId = defaults.ipConfigurationId;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.natRuleName = defaults.natRuleName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.type = defaults.type;
        }

        public Builder externalMappings(@Nullable Output<List<VpnNatRuleMappingArgs>> externalMappings) {
            this.externalMappings = externalMappings;
            return this;
        }
        public Builder externalMappings(@Nullable List<VpnNatRuleMappingArgs> externalMappings) {
            this.externalMappings = Output.ofNullable(externalMappings);
            return this;
        }
        public Builder externalMappings(VpnNatRuleMappingArgs... externalMappings) {
            return externalMappings(List.of(externalMappings));
        }
        public Builder gatewayName(Output<String> gatewayName) {
            this.gatewayName = Objects.requireNonNull(gatewayName);
            return this;
        }
        public Builder gatewayName(String gatewayName) {
            this.gatewayName = Output.of(Objects.requireNonNull(gatewayName));
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Output.ofNullable(id);
            return this;
        }
        public Builder internalMappings(@Nullable Output<List<VpnNatRuleMappingArgs>> internalMappings) {
            this.internalMappings = internalMappings;
            return this;
        }
        public Builder internalMappings(@Nullable List<VpnNatRuleMappingArgs> internalMappings) {
            this.internalMappings = Output.ofNullable(internalMappings);
            return this;
        }
        public Builder internalMappings(VpnNatRuleMappingArgs... internalMappings) {
            return internalMappings(List.of(internalMappings));
        }
        public Builder ipConfigurationId(@Nullable Output<String> ipConfigurationId) {
            this.ipConfigurationId = ipConfigurationId;
            return this;
        }
        public Builder ipConfigurationId(@Nullable String ipConfigurationId) {
            this.ipConfigurationId = Output.ofNullable(ipConfigurationId);
            return this;
        }
        public Builder mode(@Nullable Output<Either<String,VpnNatRuleMode>> mode) {
            this.mode = mode;
            return this;
        }
        public Builder mode(@Nullable Either<String,VpnNatRuleMode> mode) {
            this.mode = Output.ofNullable(mode);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder natRuleName(@Nullable Output<String> natRuleName) {
            this.natRuleName = natRuleName;
            return this;
        }
        public Builder natRuleName(@Nullable String natRuleName) {
            this.natRuleName = Output.ofNullable(natRuleName);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder type(@Nullable Output<Either<String,VpnNatRuleType>> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable Either<String,VpnNatRuleType> type) {
            this.type = Output.ofNullable(type);
            return this;
        }        public NatRuleArgs build() {
            return new NatRuleArgs(externalMappings, gatewayName, id, internalMappings, ipConfigurationId, mode, name, natRuleName, resourceGroupName, type);
        }
    }
}
