// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.devtestlab;

import io.pulumi.azurenative.Utilities;
import io.pulumi.azurenative.devtestlab.VirtualMachineArgs;
import io.pulumi.azurenative.devtestlab.outputs.ApplicableScheduleResponse;
import io.pulumi.azurenative.devtestlab.outputs.ArtifactDeploymentStatusPropertiesResponse;
import io.pulumi.azurenative.devtestlab.outputs.ArtifactInstallPropertiesResponse;
import io.pulumi.azurenative.devtestlab.outputs.ComputeVmPropertiesResponse;
import io.pulumi.azurenative.devtestlab.outputs.DataDiskPropertiesResponse;
import io.pulumi.azurenative.devtestlab.outputs.GalleryImageReferenceResponse;
import io.pulumi.azurenative.devtestlab.outputs.NetworkInterfacePropertiesResponse;
import io.pulumi.azurenative.devtestlab.outputs.ScheduleCreationParameterResponse;
import io.pulumi.core.Alias;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * A virtual machine.
 * API Version: 2018-09-15.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### VirtualMachines_CreateOrUpdate
 * ```csharp
 * using Pulumi;
 * using AzureNative = Pulumi.AzureNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var virtualMachine = new AzureNative.DevTestLab.VirtualMachine("virtualMachine", new AzureNative.DevTestLab.VirtualMachineArgs
 *         {
 *             AllowClaim = true,
 *             DisallowPublicIpAddress = true,
 *             GalleryImageReference = new AzureNative.DevTestLab.Inputs.GalleryImageReferenceArgs
 *             {
 *                 Offer = "UbuntuServer",
 *                 OsType = "Linux",
 *                 Publisher = "Canonical",
 *                 Sku = "16.04-LTS",
 *                 Version = "Latest",
 *             },
 *             LabName = "{labName}",
 *             LabSubnetName = "{virtualNetworkName}Subnet",
 *             LabVirtualNetworkId = "/subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/virtualnetworks/{virtualNetworkName}",
 *             Location = "{location}",
 *             Name = "{vmName}",
 *             Password = "{userPassword}",
 *             ResourceGroupName = "resourceGroupName",
 *             Size = "Standard_A2_v2",
 *             StorageType = "Standard",
 *             Tags = 
 *             {
 *                 { "tagName1", "tagValue1" },
 *             },
 *             UserName = "{userName}",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	devtestlab "github.com/pulumi/pulumi-azure-native/sdk/go/azure/devtestlab"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := devtestlab.NewVirtualMachine(ctx, "virtualMachine", &devtestlab.VirtualMachineArgs{
 * 			AllowClaim:              pulumi.Bool(true),
 * 			DisallowPublicIpAddress: pulumi.Bool(true),
 * 			GalleryImageReference: &devtestlab.GalleryImageReferenceArgs{
 * 				Offer:     pulumi.String("UbuntuServer"),
 * 				OsType:    pulumi.String("Linux"),
 * 				Publisher: pulumi.String("Canonical"),
 * 				Sku:       pulumi.String("16.04-LTS"),
 * 				Version:   pulumi.String("Latest"),
 * 			},
 * 			LabName:             pulumi.String("{labName}"),
 * 			LabSubnetName:       pulumi.String("{virtualNetworkName}Subnet"),
 * 			LabVirtualNetworkId: pulumi.String("/subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/virtualnetworks/{virtualNetworkName}"),
 * 			Location:            pulumi.String("{location}"),
 * 			Name:                pulumi.String("{vmName}"),
 * 			Password:            pulumi.String("{userPassword}"),
 * 			ResourceGroupName:   pulumi.String("resourceGroupName"),
 * 			Size:                pulumi.String("Standard_A2_v2"),
 * 			StorageType:         pulumi.String("Standard"),
 * 			Tags: pulumi.StringMap{
 * 				"tagName1": pulumi.String("tagValue1"),
 * 			},
 * 			UserName: pulumi.String("{userName}"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 * 
 * const virtualMachine = new azure_native.devtestlab.VirtualMachine("virtualMachine", {
 *     allowClaim: true,
 *     disallowPublicIpAddress: true,
 *     galleryImageReference: {
 *         offer: "UbuntuServer",
 *         osType: "Linux",
 *         publisher: "Canonical",
 *         sku: "16.04-LTS",
 *         version: "Latest",
 *     },
 *     labName: "{labName}",
 *     labSubnetName: "{virtualNetworkName}Subnet",
 *     labVirtualNetworkId: "/subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/virtualnetworks/{virtualNetworkName}",
 *     location: "{location}",
 *     name: "{vmName}",
 *     password: "{userPassword}",
 *     resourceGroupName: "resourceGroupName",
 *     size: "Standard_A2_v2",
 *     storageType: "Standard",
 *     tags: {
 *         tagName1: "tagValue1",
 *     },
 *     userName: "{userName}",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_azure_native as azure_native
 * 
 * virtual_machine = azure_native.devtestlab.VirtualMachine("virtualMachine",
 *     allow_claim=True,
 *     disallow_public_ip_address=True,
 *     gallery_image_reference=azure_native.devtestlab.GalleryImageReferenceArgs(
 *         offer="UbuntuServer",
 *         os_type="Linux",
 *         publisher="Canonical",
 *         sku="16.04-LTS",
 *         version="Latest",
 *     ),
 *     lab_name="{labName}",
 *     lab_subnet_name="{virtualNetworkName}Subnet",
 *     lab_virtual_network_id="/subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/virtualnetworks/{virtualNetworkName}",
 *     location="{location}",
 *     name="{vmName}",
 *     password="{userPassword}",
 *     resource_group_name="resourceGroupName",
 *     size="Standard_A2_v2",
 *     storage_type="Standard",
 *     tags={
 *         "tagName1": "tagValue1",
 *     },
 *     user_name="{userName}")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:devtestlab:VirtualMachine {vmName} /subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/virtualmachines/{vmName} 
 * ```
 * 
 */
@ResourceType(type="azure-native:devtestlab:VirtualMachine")
public class VirtualMachine extends io.pulumi.resources.CustomResource {
    /**
     * Indicates whether another user can take ownership of the virtual machine
     */
    @Export(name="allowClaim", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> allowClaim;

    /**
     * @return Indicates whether another user can take ownership of the virtual machine
     */
    public Output</* @Nullable */ Boolean> getAllowClaim() {
        return this.allowClaim;
    }
    /**
     * The applicable schedule for the virtual machine.
     */
    @Export(name="applicableSchedule", type=ApplicableScheduleResponse.class, parameters={})
    private Output<ApplicableScheduleResponse> applicableSchedule;

    /**
     * @return The applicable schedule for the virtual machine.
     */
    public Output<ApplicableScheduleResponse> getApplicableSchedule() {
        return this.applicableSchedule;
    }
    /**
     * The artifact deployment status for the virtual machine.
     */
    @Export(name="artifactDeploymentStatus", type=ArtifactDeploymentStatusPropertiesResponse.class, parameters={})
    private Output<ArtifactDeploymentStatusPropertiesResponse> artifactDeploymentStatus;

    /**
     * @return The artifact deployment status for the virtual machine.
     */
    public Output<ArtifactDeploymentStatusPropertiesResponse> getArtifactDeploymentStatus() {
        return this.artifactDeploymentStatus;
    }
    /**
     * The artifacts to be installed on the virtual machine.
     */
    @Export(name="artifacts", type=List.class, parameters={ArtifactInstallPropertiesResponse.class})
    private Output</* @Nullable */ List<ArtifactInstallPropertiesResponse>> artifacts;

    /**
     * @return The artifacts to be installed on the virtual machine.
     */
    public Output</* @Nullable */ List<ArtifactInstallPropertiesResponse>> getArtifacts() {
        return this.artifacts;
    }
    /**
     * The resource identifier (Microsoft.Compute) of the virtual machine.
     */
    @Export(name="computeId", type=String.class, parameters={})
    private Output<String> computeId;

    /**
     * @return The resource identifier (Microsoft.Compute) of the virtual machine.
     */
    public Output<String> getComputeId() {
        return this.computeId;
    }
    /**
     * The compute virtual machine properties.
     */
    @Export(name="computeVm", type=ComputeVmPropertiesResponse.class, parameters={})
    private Output<ComputeVmPropertiesResponse> computeVm;

    /**
     * @return The compute virtual machine properties.
     */
    public Output<ComputeVmPropertiesResponse> getComputeVm() {
        return this.computeVm;
    }
    /**
     * The email address of creator of the virtual machine.
     */
    @Export(name="createdByUser", type=String.class, parameters={})
    private Output<String> createdByUser;

    /**
     * @return The email address of creator of the virtual machine.
     */
    public Output<String> getCreatedByUser() {
        return this.createdByUser;
    }
    /**
     * The object identifier of the creator of the virtual machine.
     */
    @Export(name="createdByUserId", type=String.class, parameters={})
    private Output<String> createdByUserId;

    /**
     * @return The object identifier of the creator of the virtual machine.
     */
    public Output<String> getCreatedByUserId() {
        return this.createdByUserId;
    }
    /**
     * The creation date of the virtual machine.
     */
    @Export(name="createdDate", type=String.class, parameters={})
    private Output</* @Nullable */ String> createdDate;

    /**
     * @return The creation date of the virtual machine.
     */
    public Output</* @Nullable */ String> getCreatedDate() {
        return this.createdDate;
    }
    /**
     * The custom image identifier of the virtual machine.
     */
    @Export(name="customImageId", type=String.class, parameters={})
    private Output</* @Nullable */ String> customImageId;

    /**
     * @return The custom image identifier of the virtual machine.
     */
    public Output</* @Nullable */ String> getCustomImageId() {
        return this.customImageId;
    }
    /**
     * New or existing data disks to attach to the virtual machine after creation
     */
    @Export(name="dataDiskParameters", type=List.class, parameters={DataDiskPropertiesResponse.class})
    private Output</* @Nullable */ List<DataDiskPropertiesResponse>> dataDiskParameters;

    /**
     * @return New or existing data disks to attach to the virtual machine after creation
     */
    public Output</* @Nullable */ List<DataDiskPropertiesResponse>> getDataDiskParameters() {
        return this.dataDiskParameters;
    }
    /**
     * Indicates whether the virtual machine is to be created without a public IP address.
     */
    @Export(name="disallowPublicIpAddress", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> disallowPublicIpAddress;

    /**
     * @return Indicates whether the virtual machine is to be created without a public IP address.
     */
    public Output</* @Nullable */ Boolean> getDisallowPublicIpAddress() {
        return this.disallowPublicIpAddress;
    }
    /**
     * The resource ID of the environment that contains this virtual machine, if any.
     */
    @Export(name="environmentId", type=String.class, parameters={})
    private Output</* @Nullable */ String> environmentId;

    /**
     * @return The resource ID of the environment that contains this virtual machine, if any.
     */
    public Output</* @Nullable */ String> getEnvironmentId() {
        return this.environmentId;
    }
    /**
     * The expiration date for VM.
     */
    @Export(name="expirationDate", type=String.class, parameters={})
    private Output</* @Nullable */ String> expirationDate;

    /**
     * @return The expiration date for VM.
     */
    public Output</* @Nullable */ String> getExpirationDate() {
        return this.expirationDate;
    }
    /**
     * The fully-qualified domain name of the virtual machine.
     */
    @Export(name="fqdn", type=String.class, parameters={})
    private Output<String> fqdn;

    /**
     * @return The fully-qualified domain name of the virtual machine.
     */
    public Output<String> getFqdn() {
        return this.fqdn;
    }
    /**
     * The Microsoft Azure Marketplace image reference of the virtual machine.
     */
    @Export(name="galleryImageReference", type=GalleryImageReferenceResponse.class, parameters={})
    private Output</* @Nullable */ GalleryImageReferenceResponse> galleryImageReference;

    /**
     * @return The Microsoft Azure Marketplace image reference of the virtual machine.
     */
    public Output</* @Nullable */ GalleryImageReferenceResponse> getGalleryImageReference() {
        return this.galleryImageReference;
    }
    /**
     * Indicates whether this virtual machine uses an SSH key for authentication.
     */
    @Export(name="isAuthenticationWithSshKey", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isAuthenticationWithSshKey;

    /**
     * @return Indicates whether this virtual machine uses an SSH key for authentication.
     */
    public Output</* @Nullable */ Boolean> getIsAuthenticationWithSshKey() {
        return this.isAuthenticationWithSshKey;
    }
    /**
     * The lab subnet name of the virtual machine.
     */
    @Export(name="labSubnetName", type=String.class, parameters={})
    private Output</* @Nullable */ String> labSubnetName;

    /**
     * @return The lab subnet name of the virtual machine.
     */
    public Output</* @Nullable */ String> getLabSubnetName() {
        return this.labSubnetName;
    }
    /**
     * The lab virtual network identifier of the virtual machine.
     */
    @Export(name="labVirtualNetworkId", type=String.class, parameters={})
    private Output</* @Nullable */ String> labVirtualNetworkId;

    /**
     * @return The lab virtual network identifier of the virtual machine.
     */
    public Output</* @Nullable */ String> getLabVirtualNetworkId() {
        return this.labVirtualNetworkId;
    }
    /**
     * Last known compute power state captured in DTL
     */
    @Export(name="lastKnownPowerState", type=String.class, parameters={})
    private Output<String> lastKnownPowerState;

    /**
     * @return Last known compute power state captured in DTL
     */
    public Output<String> getLastKnownPowerState() {
        return this.lastKnownPowerState;
    }
    /**
     * The location of the resource.
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The location of the resource.
     */
    public Output</* @Nullable */ String> getLocation() {
        return this.location;
    }
    /**
     * The name of the resource.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource.
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The network interface properties.
     */
    @Export(name="networkInterface", type=NetworkInterfacePropertiesResponse.class, parameters={})
    private Output</* @Nullable */ NetworkInterfacePropertiesResponse> networkInterface;

    /**
     * @return The network interface properties.
     */
    public Output</* @Nullable */ NetworkInterfacePropertiesResponse> getNetworkInterface() {
        return this.networkInterface;
    }
    /**
     * The notes of the virtual machine.
     */
    @Export(name="notes", type=String.class, parameters={})
    private Output</* @Nullable */ String> notes;

    /**
     * @return The notes of the virtual machine.
     */
    public Output</* @Nullable */ String> getNotes() {
        return this.notes;
    }
    /**
     * The OS type of the virtual machine.
     */
    @Export(name="osType", type=String.class, parameters={})
    private Output<String> osType;

    /**
     * @return The OS type of the virtual machine.
     */
    public Output<String> getOsType() {
        return this.osType;
    }
    /**
     * The object identifier of the owner of the virtual machine.
     */
    @Export(name="ownerObjectId", type=String.class, parameters={})
    private Output</* @Nullable */ String> ownerObjectId;

    /**
     * @return The object identifier of the owner of the virtual machine.
     */
    public Output</* @Nullable */ String> getOwnerObjectId() {
        return this.ownerObjectId;
    }
    /**
     * The user principal name of the virtual machine owner.
     */
    @Export(name="ownerUserPrincipalName", type=String.class, parameters={})
    private Output</* @Nullable */ String> ownerUserPrincipalName;

    /**
     * @return The user principal name of the virtual machine owner.
     */
    public Output</* @Nullable */ String> getOwnerUserPrincipalName() {
        return this.ownerUserPrincipalName;
    }
    /**
     * The password of the virtual machine administrator.
     */
    @Export(name="password", type=String.class, parameters={})
    private Output</* @Nullable */ String> password;

    /**
     * @return The password of the virtual machine administrator.
     */
    public Output</* @Nullable */ String> getPassword() {
        return this.password;
    }
    /**
     * The id of the plan associated with the virtual machine image
     */
    @Export(name="planId", type=String.class, parameters={})
    private Output</* @Nullable */ String> planId;

    /**
     * @return The id of the plan associated with the virtual machine image
     */
    public Output</* @Nullable */ String> getPlanId() {
        return this.planId;
    }
    /**
     * The provisioning status of the resource.
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning status of the resource.
     */
    public Output<String> getProvisioningState() {
        return this.provisioningState;
    }
    /**
     * Virtual Machine schedules to be created
     */
    @Export(name="scheduleParameters", type=List.class, parameters={ScheduleCreationParameterResponse.class})
    private Output</* @Nullable */ List<ScheduleCreationParameterResponse>> scheduleParameters;

    /**
     * @return Virtual Machine schedules to be created
     */
    public Output</* @Nullable */ List<ScheduleCreationParameterResponse>> getScheduleParameters() {
        return this.scheduleParameters;
    }
    /**
     * The size of the virtual machine.
     */
    @Export(name="size", type=String.class, parameters={})
    private Output</* @Nullable */ String> size;

    /**
     * @return The size of the virtual machine.
     */
    public Output</* @Nullable */ String> getSize() {
        return this.size;
    }
    /**
     * The SSH key of the virtual machine administrator.
     */
    @Export(name="sshKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> sshKey;

    /**
     * @return The SSH key of the virtual machine administrator.
     */
    public Output</* @Nullable */ String> getSshKey() {
        return this.sshKey;
    }
    /**
     * Storage type to use for virtual machine (i.e. Standard, Premium).
     */
    @Export(name="storageType", type=String.class, parameters={})
    private Output</* @Nullable */ String> storageType;

    /**
     * @return Storage type to use for virtual machine (i.e. Standard, Premium).
     */
    public Output</* @Nullable */ String> getStorageType() {
        return this.storageType;
    }
    /**
     * The tags of the resource.
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tags of the resource.
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * The type of the resource.
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * The unique immutable identifier of a resource (Guid).
     */
    @Export(name="uniqueIdentifier", type=String.class, parameters={})
    private Output<String> uniqueIdentifier;

    /**
     * @return The unique immutable identifier of a resource (Guid).
     */
    public Output<String> getUniqueIdentifier() {
        return this.uniqueIdentifier;
    }
    /**
     * The user name of the virtual machine.
     */
    @Export(name="userName", type=String.class, parameters={})
    private Output</* @Nullable */ String> userName;

    /**
     * @return The user name of the virtual machine.
     */
    public Output</* @Nullable */ String> getUserName() {
        return this.userName;
    }
    /**
     * Tells source of creation of lab virtual machine. Output property only.
     */
    @Export(name="virtualMachineCreationSource", type=String.class, parameters={})
    private Output<String> virtualMachineCreationSource;

    /**
     * @return Tells source of creation of lab virtual machine. Output property only.
     */
    public Output<String> getVirtualMachineCreationSource() {
        return this.virtualMachineCreationSource;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VirtualMachine(String name) {
        this(name, VirtualMachineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VirtualMachine(String name, VirtualMachineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualMachine(String name, VirtualMachineArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:devtestlab:VirtualMachine", name, args == null ? VirtualMachineArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private VirtualMachine(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:devtestlab:VirtualMachine", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:devtestlab/v20150521preview:VirtualMachine").build()),
                Output.of(Alias.builder().type("azure-native:devtestlab/v20160515:VirtualMachine").build()),
                Output.of(Alias.builder().type("azure-native:devtestlab/v20180915:VirtualMachine").build())
            ))
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualMachine get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VirtualMachine(name, id, options);
    }
}
