// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Deployment container liveness/readiness probe configuration.
 * 
 */
public final class ProbeSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProbeSettingsArgs Empty = new ProbeSettingsArgs();

    /**
     * The number of failures to allow before returning an unhealthy status.
     * 
     */
    @Import(name="failureThreshold")
      private final @Nullable Output<Integer> failureThreshold;

    public Output<Integer> failureThreshold() {
        return this.failureThreshold == null ? Codegen.empty() : this.failureThreshold;
    }

    /**
     * The delay before the first probe in ISO 8601 format.
     * 
     */
    @Import(name="initialDelay")
      private final @Nullable Output<String> initialDelay;

    public Output<String> initialDelay() {
        return this.initialDelay == null ? Codegen.empty() : this.initialDelay;
    }

    /**
     * The length of time between probes in ISO 8601 format.
     * 
     */
    @Import(name="period")
      private final @Nullable Output<String> period;

    public Output<String> period() {
        return this.period == null ? Codegen.empty() : this.period;
    }

    /**
     * The number of successful probes before returning a healthy status.
     * 
     */
    @Import(name="successThreshold")
      private final @Nullable Output<Integer> successThreshold;

    public Output<Integer> successThreshold() {
        return this.successThreshold == null ? Codegen.empty() : this.successThreshold;
    }

    /**
     * The probe timeout in ISO 8601 format.
     * 
     */
    @Import(name="timeout")
      private final @Nullable Output<String> timeout;

    public Output<String> timeout() {
        return this.timeout == null ? Codegen.empty() : this.timeout;
    }

    public ProbeSettingsArgs(
        @Nullable Output<Integer> failureThreshold,
        @Nullable Output<String> initialDelay,
        @Nullable Output<String> period,
        @Nullable Output<Integer> successThreshold,
        @Nullable Output<String> timeout) {
        this.failureThreshold = failureThreshold;
        this.initialDelay = initialDelay;
        this.period = period;
        this.successThreshold = successThreshold;
        this.timeout = timeout;
    }

    private ProbeSettingsArgs() {
        this.failureThreshold = Codegen.empty();
        this.initialDelay = Codegen.empty();
        this.period = Codegen.empty();
        this.successThreshold = Codegen.empty();
        this.timeout = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProbeSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> failureThreshold;
        private @Nullable Output<String> initialDelay;
        private @Nullable Output<String> period;
        private @Nullable Output<Integer> successThreshold;
        private @Nullable Output<String> timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(ProbeSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.initialDelay = defaults.initialDelay;
    	      this.period = defaults.period;
    	      this.successThreshold = defaults.successThreshold;
    	      this.timeout = defaults.timeout;
        }

        public Builder failureThreshold(@Nullable Output<Integer> failureThreshold) {
            this.failureThreshold = failureThreshold;
            return this;
        }
        public Builder failureThreshold(@Nullable Integer failureThreshold) {
            this.failureThreshold = Codegen.ofNullable(failureThreshold);
            return this;
        }
        public Builder initialDelay(@Nullable Output<String> initialDelay) {
            this.initialDelay = initialDelay;
            return this;
        }
        public Builder initialDelay(@Nullable String initialDelay) {
            this.initialDelay = Codegen.ofNullable(initialDelay);
            return this;
        }
        public Builder period(@Nullable Output<String> period) {
            this.period = period;
            return this;
        }
        public Builder period(@Nullable String period) {
            this.period = Codegen.ofNullable(period);
            return this;
        }
        public Builder successThreshold(@Nullable Output<Integer> successThreshold) {
            this.successThreshold = successThreshold;
            return this;
        }
        public Builder successThreshold(@Nullable Integer successThreshold) {
            this.successThreshold = Codegen.ofNullable(successThreshold);
            return this;
        }
        public Builder timeout(@Nullable Output<String> timeout) {
            this.timeout = timeout;
            return this;
        }
        public Builder timeout(@Nullable String timeout) {
            this.timeout = Codegen.ofNullable(timeout);
            return this;
        }        public ProbeSettingsArgs build() {
            return new ProbeSettingsArgs(failureThreshold, initialDelay, period, successThreshold, timeout);
        }
    }
}
