// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.connectedvmwarevsphere.outputs;

import io.pulumi.azurenative.connectedvmwarevsphere.outputs.ExtendedLocationResponse;
import io.pulumi.azurenative.connectedvmwarevsphere.outputs.NetworkInterfaceResponse;
import io.pulumi.azurenative.connectedvmwarevsphere.outputs.ResourceStatusResponse;
import io.pulumi.azurenative.connectedvmwarevsphere.outputs.SystemDataResponse;
import io.pulumi.azurenative.connectedvmwarevsphere.outputs.VirtualDiskResponse;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetVirtualMachineTemplateResult {
    private final String customResourceName;
    private final List<VirtualDiskResponse> disks;
    private final @Nullable ExtendedLocationResponse extendedLocation;
    private final String firmwareType;
    private final String folderPath;
    private final String id;
    private final @Nullable String inventoryItemId;
    private final @Nullable String kind;
    private final String location;
    private final Integer memorySizeMB;
    private final String moName;
    private final @Nullable String moRefId;
    private final String name;
    private final List<NetworkInterfaceResponse> networkInterfaces;
    private final Integer numCPUs;
    private final Integer numCoresPerSocket;
    private final String osName;
    private final String osType;
    private final String provisioningState;
    private final List<ResourceStatusResponse> statuses;
    private final SystemDataResponse systemData;
    private final @Nullable Map<String,String> tags;
    private final String toolsVersion;
    private final String toolsVersionStatus;
    private final String type;
    private final String uuid;
    private final @Nullable String vCenterId;

    @OutputCustomType.Constructor({"customResourceName","disks","extendedLocation","firmwareType","folderPath","id","inventoryItemId","kind","location","memorySizeMB","moName","moRefId","name","networkInterfaces","numCPUs","numCoresPerSocket","osName","osType","provisioningState","statuses","systemData","tags","toolsVersion","toolsVersionStatus","type","uuid","vCenterId"})
    private GetVirtualMachineTemplateResult(
        String customResourceName,
        List<VirtualDiskResponse> disks,
        @Nullable ExtendedLocationResponse extendedLocation,
        String firmwareType,
        String folderPath,
        String id,
        @Nullable String inventoryItemId,
        @Nullable String kind,
        String location,
        Integer memorySizeMB,
        String moName,
        @Nullable String moRefId,
        String name,
        List<NetworkInterfaceResponse> networkInterfaces,
        Integer numCPUs,
        Integer numCoresPerSocket,
        String osName,
        String osType,
        String provisioningState,
        List<ResourceStatusResponse> statuses,
        SystemDataResponse systemData,
        @Nullable Map<String,String> tags,
        String toolsVersion,
        String toolsVersionStatus,
        String type,
        String uuid,
        @Nullable String vCenterId) {
        this.customResourceName = Objects.requireNonNull(customResourceName);
        this.disks = Objects.requireNonNull(disks);
        this.extendedLocation = extendedLocation;
        this.firmwareType = Objects.requireNonNull(firmwareType);
        this.folderPath = Objects.requireNonNull(folderPath);
        this.id = Objects.requireNonNull(id);
        this.inventoryItemId = inventoryItemId;
        this.kind = kind;
        this.location = Objects.requireNonNull(location);
        this.memorySizeMB = Objects.requireNonNull(memorySizeMB);
        this.moName = Objects.requireNonNull(moName);
        this.moRefId = moRefId;
        this.name = Objects.requireNonNull(name);
        this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
        this.numCPUs = Objects.requireNonNull(numCPUs);
        this.numCoresPerSocket = Objects.requireNonNull(numCoresPerSocket);
        this.osName = Objects.requireNonNull(osName);
        this.osType = Objects.requireNonNull(osType);
        this.provisioningState = Objects.requireNonNull(provisioningState);
        this.statuses = Objects.requireNonNull(statuses);
        this.systemData = Objects.requireNonNull(systemData);
        this.tags = tags;
        this.toolsVersion = Objects.requireNonNull(toolsVersion);
        this.toolsVersionStatus = Objects.requireNonNull(toolsVersionStatus);
        this.type = Objects.requireNonNull(type);
        this.uuid = Objects.requireNonNull(uuid);
        this.vCenterId = vCenterId;
    }

    public String getCustomResourceName() {
        return this.customResourceName;
    }
    public List<VirtualDiskResponse> getDisks() {
        return this.disks;
    }
    public Optional<ExtendedLocationResponse> getExtendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    public String getFirmwareType() {
        return this.firmwareType;
    }
    public String getFolderPath() {
        return this.folderPath;
    }
    public String getId() {
        return this.id;
    }
    public Optional<String> getInventoryItemId() {
        return Optional.ofNullable(this.inventoryItemId);
    }
    public Optional<String> getKind() {
        return Optional.ofNullable(this.kind);
    }
    public String getLocation() {
        return this.location;
    }
    public Integer getMemorySizeMB() {
        return this.memorySizeMB;
    }
    public String getMoName() {
        return this.moName;
    }
    public Optional<String> getMoRefId() {
        return Optional.ofNullable(this.moRefId);
    }
    public String getName() {
        return this.name;
    }
    public List<NetworkInterfaceResponse> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    public Integer getNumCPUs() {
        return this.numCPUs;
    }
    public Integer getNumCoresPerSocket() {
        return this.numCoresPerSocket;
    }
    public String getOsName() {
        return this.osName;
    }
    public String getOsType() {
        return this.osType;
    }
    public String getProvisioningState() {
        return this.provisioningState;
    }
    public List<ResourceStatusResponse> getStatuses() {
        return this.statuses;
    }
    public SystemDataResponse getSystemData() {
        return this.systemData;
    }
    public Map<String,String> getTags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String getToolsVersion() {
        return this.toolsVersion;
    }
    public String getToolsVersionStatus() {
        return this.toolsVersionStatus;
    }
    public String getType() {
        return this.type;
    }
    public String getUuid() {
        return this.uuid;
    }
    public Optional<String> getVCenterId() {
        return Optional.ofNullable(this.vCenterId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualMachineTemplateResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String customResourceName;
        private List<VirtualDiskResponse> disks;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private String firmwareType;
        private String folderPath;
        private String id;
        private @Nullable String inventoryItemId;
        private @Nullable String kind;
        private String location;
        private Integer memorySizeMB;
        private String moName;
        private @Nullable String moRefId;
        private String name;
        private List<NetworkInterfaceResponse> networkInterfaces;
        private Integer numCPUs;
        private Integer numCoresPerSocket;
        private String osName;
        private String osType;
        private String provisioningState;
        private List<ResourceStatusResponse> statuses;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String toolsVersion;
        private String toolsVersionStatus;
        private String type;
        private String uuid;
        private @Nullable String vCenterId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualMachineTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customResourceName = defaults.customResourceName;
    	      this.disks = defaults.disks;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.firmwareType = defaults.firmwareType;
    	      this.folderPath = defaults.folderPath;
    	      this.id = defaults.id;
    	      this.inventoryItemId = defaults.inventoryItemId;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.memorySizeMB = defaults.memorySizeMB;
    	      this.moName = defaults.moName;
    	      this.moRefId = defaults.moRefId;
    	      this.name = defaults.name;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.numCPUs = defaults.numCPUs;
    	      this.numCoresPerSocket = defaults.numCoresPerSocket;
    	      this.osName = defaults.osName;
    	      this.osType = defaults.osType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.statuses = defaults.statuses;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.toolsVersion = defaults.toolsVersion;
    	      this.toolsVersionStatus = defaults.toolsVersionStatus;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
    	      this.vCenterId = defaults.vCenterId;
        }

        public Builder setCustomResourceName(String customResourceName) {
            this.customResourceName = Objects.requireNonNull(customResourceName);
            return this;
        }

        public Builder setDisks(List<VirtualDiskResponse> disks) {
            this.disks = Objects.requireNonNull(disks);
            return this;
        }

        public Builder setExtendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }

        public Builder setFirmwareType(String firmwareType) {
            this.firmwareType = Objects.requireNonNull(firmwareType);
            return this;
        }

        public Builder setFolderPath(String folderPath) {
            this.folderPath = Objects.requireNonNull(folderPath);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInventoryItemId(@Nullable String inventoryItemId) {
            this.inventoryItemId = inventoryItemId;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setMemorySizeMB(Integer memorySizeMB) {
            this.memorySizeMB = Objects.requireNonNull(memorySizeMB);
            return this;
        }

        public Builder setMoName(String moName) {
            this.moName = Objects.requireNonNull(moName);
            return this;
        }

        public Builder setMoRefId(@Nullable String moRefId) {
            this.moRefId = moRefId;
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetworkInterfaces(List<NetworkInterfaceResponse> networkInterfaces) {
            this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
            return this;
        }

        public Builder setNumCPUs(Integer numCPUs) {
            this.numCPUs = Objects.requireNonNull(numCPUs);
            return this;
        }

        public Builder setNumCoresPerSocket(Integer numCoresPerSocket) {
            this.numCoresPerSocket = Objects.requireNonNull(numCoresPerSocket);
            return this;
        }

        public Builder setOsName(String osName) {
            this.osName = Objects.requireNonNull(osName);
            return this;
        }

        public Builder setOsType(String osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }

        public Builder setProvisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }

        public Builder setStatuses(List<ResourceStatusResponse> statuses) {
            this.statuses = Objects.requireNonNull(statuses);
            return this;
        }

        public Builder setSystemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setToolsVersion(String toolsVersion) {
            this.toolsVersion = Objects.requireNonNull(toolsVersion);
            return this;
        }

        public Builder setToolsVersionStatus(String toolsVersionStatus) {
            this.toolsVersionStatus = Objects.requireNonNull(toolsVersionStatus);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUuid(String uuid) {
            this.uuid = Objects.requireNonNull(uuid);
            return this;
        }

        public Builder setVCenterId(@Nullable String vCenterId) {
            this.vCenterId = vCenterId;
            return this;
        }

        public GetVirtualMachineTemplateResult build() {
            return new GetVirtualMachineTemplateResult(customResourceName, disks, extendedLocation, firmwareType, folderPath, id, inventoryItemId, kind, location, memorySizeMB, moName, moRefId, name, networkInterfaces, numCPUs, numCoresPerSocket, osName, osType, provisioningState, statuses, systemData, tags, toolsVersion, toolsVersionStatus, type, uuid, vCenterId);
        }
    }
}
