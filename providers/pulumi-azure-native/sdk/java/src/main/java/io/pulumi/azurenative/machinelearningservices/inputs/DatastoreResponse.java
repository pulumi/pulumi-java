// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.azurenative.machinelearningservices.inputs.AzureDataLakeSectionResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.AzureMySqlSectionResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.AzurePostgreSqlSectionResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.AzureSqlDatabaseSectionResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.AzureStorageSectionResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.GlusterFsSectionResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.LinkedInfoResponse;
import io.pulumi.azurenative.machinelearningservices.inputs.UserInfoResponse;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Machine Learning datastore object.
 * 
 */
public final class DatastoreResponse extends io.pulumi.resources.InvokeArgs {

    public static final DatastoreResponse Empty = new DatastoreResponse();

    @Import(name="azureDataLakeSection")
      private final @Nullable AzureDataLakeSectionResponse azureDataLakeSection;

    public Optional<AzureDataLakeSectionResponse> azureDataLakeSection() {
        return this.azureDataLakeSection == null ? Optional.empty() : Optional.ofNullable(this.azureDataLakeSection);
    }

    @Import(name="azureMySqlSection")
      private final @Nullable AzureMySqlSectionResponse azureMySqlSection;

    public Optional<AzureMySqlSectionResponse> azureMySqlSection() {
        return this.azureMySqlSection == null ? Optional.empty() : Optional.ofNullable(this.azureMySqlSection);
    }

    @Import(name="azurePostgreSqlSection")
      private final @Nullable AzurePostgreSqlSectionResponse azurePostgreSqlSection;

    public Optional<AzurePostgreSqlSectionResponse> azurePostgreSqlSection() {
        return this.azurePostgreSqlSection == null ? Optional.empty() : Optional.ofNullable(this.azurePostgreSqlSection);
    }

    @Import(name="azureSqlDatabaseSection")
      private final @Nullable AzureSqlDatabaseSectionResponse azureSqlDatabaseSection;

    public Optional<AzureSqlDatabaseSectionResponse> azureSqlDatabaseSection() {
        return this.azureSqlDatabaseSection == null ? Optional.empty() : Optional.ofNullable(this.azureSqlDatabaseSection);
    }

    @Import(name="azureStorageSection")
      private final @Nullable AzureStorageSectionResponse azureStorageSection;

    public Optional<AzureStorageSectionResponse> azureStorageSection() {
        return this.azureStorageSection == null ? Optional.empty() : Optional.ofNullable(this.azureStorageSection);
    }

    /**
     * The User who created the datastore.
     * 
     */
    @Import(name="createdBy", required=true)
      private final UserInfoResponse createdBy;

    public UserInfoResponse createdBy() {
        return this.createdBy;
    }

    /**
     * The date and time when the datastore was created.
     * 
     */
    @Import(name="createdTime", required=true)
      private final String createdTime;

    public String createdTime() {
        return this.createdTime;
    }

    /**
     * The datastore type.
     * 
     */
    @Import(name="dataStoreType")
      private final @Nullable String dataStoreType;

    public Optional<String> dataStoreType() {
        return this.dataStoreType == null ? Optional.empty() : Optional.ofNullable(this.dataStoreType);
    }

    /**
     * Description of the datastore.
     * 
     */
    @Import(name="description")
      private final @Nullable String description;

    public Optional<String> description() {
        return this.description == null ? Optional.empty() : Optional.ofNullable(this.description);
    }

    /**
     * Data specific to GlusterFS.
     * 
     */
    @Import(name="glusterFsSection")
      private final @Nullable GlusterFsSectionResponse glusterFsSection;

    public Optional<GlusterFsSectionResponse> glusterFsSection() {
        return this.glusterFsSection == null ? Optional.empty() : Optional.ofNullable(this.glusterFsSection);
    }

    /**
     * A read only property that denotes whether the service datastore has been validated with credentials.
     * 
     */
    @Import(name="hasBeenValidated")
      private final @Nullable Boolean hasBeenValidated;

    public Optional<Boolean> hasBeenValidated() {
        return this.hasBeenValidated == null ? Optional.empty() : Optional.ofNullable(this.hasBeenValidated);
    }

    /**
     * Info about origin if it is linked.
     * 
     */
    @Import(name="linkedInfo")
      private final @Nullable LinkedInfoResponse linkedInfo;

    public Optional<LinkedInfoResponse> linkedInfo() {
        return this.linkedInfo == null ? Optional.empty() : Optional.ofNullable(this.linkedInfo);
    }

    /**
     * The User who modified the datastore.
     * 
     */
    @Import(name="modifiedBy", required=true)
      private final UserInfoResponse modifiedBy;

    public UserInfoResponse modifiedBy() {
        return this.modifiedBy;
    }

    /**
     * The date and time when the datastore was last modified.
     * 
     */
    @Import(name="modifiedTime", required=true)
      private final String modifiedTime;

    public String modifiedTime() {
        return this.modifiedTime;
    }

    /**
     * Name of the datastore.
     * 
     */
    @Import(name="name")
      private final @Nullable String name;

    public Optional<String> name() {
        return this.name == null ? Optional.empty() : Optional.ofNullable(this.name);
    }

    /**
     * Tags for this datastore.
     * 
     */
    @Import(name="tags", required=true)
      private final Map<String,String> tags;

    public Map<String,String> tags() {
        return this.tags;
    }

    public DatastoreResponse(
        @Nullable AzureDataLakeSectionResponse azureDataLakeSection,
        @Nullable AzureMySqlSectionResponse azureMySqlSection,
        @Nullable AzurePostgreSqlSectionResponse azurePostgreSqlSection,
        @Nullable AzureSqlDatabaseSectionResponse azureSqlDatabaseSection,
        @Nullable AzureStorageSectionResponse azureStorageSection,
        UserInfoResponse createdBy,
        String createdTime,
        @Nullable String dataStoreType,
        @Nullable String description,
        @Nullable GlusterFsSectionResponse glusterFsSection,
        @Nullable Boolean hasBeenValidated,
        @Nullable LinkedInfoResponse linkedInfo,
        UserInfoResponse modifiedBy,
        String modifiedTime,
        @Nullable String name,
        Map<String,String> tags) {
        this.azureDataLakeSection = azureDataLakeSection;
        this.azureMySqlSection = azureMySqlSection;
        this.azurePostgreSqlSection = azurePostgreSqlSection;
        this.azureSqlDatabaseSection = azureSqlDatabaseSection;
        this.azureStorageSection = azureStorageSection;
        this.createdBy = Objects.requireNonNull(createdBy, "expected parameter 'createdBy' to be non-null");
        this.createdTime = Objects.requireNonNull(createdTime, "expected parameter 'createdTime' to be non-null");
        this.dataStoreType = dataStoreType;
        this.description = description;
        this.glusterFsSection = glusterFsSection;
        this.hasBeenValidated = hasBeenValidated == null ? false : hasBeenValidated;
        this.linkedInfo = linkedInfo;
        this.modifiedBy = Objects.requireNonNull(modifiedBy, "expected parameter 'modifiedBy' to be non-null");
        this.modifiedTime = Objects.requireNonNull(modifiedTime, "expected parameter 'modifiedTime' to be non-null");
        this.name = name;
        this.tags = Objects.requireNonNull(tags, "expected parameter 'tags' to be non-null");
    }

    private DatastoreResponse() {
        this.azureDataLakeSection = null;
        this.azureMySqlSection = null;
        this.azurePostgreSqlSection = null;
        this.azureSqlDatabaseSection = null;
        this.azureStorageSection = null;
        this.createdBy = null;
        this.createdTime = null;
        this.dataStoreType = null;
        this.description = null;
        this.glusterFsSection = null;
        this.hasBeenValidated = null;
        this.linkedInfo = null;
        this.modifiedBy = null;
        this.modifiedTime = null;
        this.name = null;
        this.tags = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatastoreResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AzureDataLakeSectionResponse azureDataLakeSection;
        private @Nullable AzureMySqlSectionResponse azureMySqlSection;
        private @Nullable AzurePostgreSqlSectionResponse azurePostgreSqlSection;
        private @Nullable AzureSqlDatabaseSectionResponse azureSqlDatabaseSection;
        private @Nullable AzureStorageSectionResponse azureStorageSection;
        private UserInfoResponse createdBy;
        private String createdTime;
        private @Nullable String dataStoreType;
        private @Nullable String description;
        private @Nullable GlusterFsSectionResponse glusterFsSection;
        private @Nullable Boolean hasBeenValidated;
        private @Nullable LinkedInfoResponse linkedInfo;
        private UserInfoResponse modifiedBy;
        private String modifiedTime;
        private @Nullable String name;
        private Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DatastoreResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureDataLakeSection = defaults.azureDataLakeSection;
    	      this.azureMySqlSection = defaults.azureMySqlSection;
    	      this.azurePostgreSqlSection = defaults.azurePostgreSqlSection;
    	      this.azureSqlDatabaseSection = defaults.azureSqlDatabaseSection;
    	      this.azureStorageSection = defaults.azureStorageSection;
    	      this.createdBy = defaults.createdBy;
    	      this.createdTime = defaults.createdTime;
    	      this.dataStoreType = defaults.dataStoreType;
    	      this.description = defaults.description;
    	      this.glusterFsSection = defaults.glusterFsSection;
    	      this.hasBeenValidated = defaults.hasBeenValidated;
    	      this.linkedInfo = defaults.linkedInfo;
    	      this.modifiedBy = defaults.modifiedBy;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder azureDataLakeSection(@Nullable AzureDataLakeSectionResponse azureDataLakeSection) {
            this.azureDataLakeSection = azureDataLakeSection;
            return this;
        }
        public Builder azureMySqlSection(@Nullable AzureMySqlSectionResponse azureMySqlSection) {
            this.azureMySqlSection = azureMySqlSection;
            return this;
        }
        public Builder azurePostgreSqlSection(@Nullable AzurePostgreSqlSectionResponse azurePostgreSqlSection) {
            this.azurePostgreSqlSection = azurePostgreSqlSection;
            return this;
        }
        public Builder azureSqlDatabaseSection(@Nullable AzureSqlDatabaseSectionResponse azureSqlDatabaseSection) {
            this.azureSqlDatabaseSection = azureSqlDatabaseSection;
            return this;
        }
        public Builder azureStorageSection(@Nullable AzureStorageSectionResponse azureStorageSection) {
            this.azureStorageSection = azureStorageSection;
            return this;
        }
        public Builder createdBy(UserInfoResponse createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        public Builder createdTime(String createdTime) {
            this.createdTime = Objects.requireNonNull(createdTime);
            return this;
        }
        public Builder dataStoreType(@Nullable String dataStoreType) {
            this.dataStoreType = dataStoreType;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder glusterFsSection(@Nullable GlusterFsSectionResponse glusterFsSection) {
            this.glusterFsSection = glusterFsSection;
            return this;
        }
        public Builder hasBeenValidated(@Nullable Boolean hasBeenValidated) {
            this.hasBeenValidated = hasBeenValidated;
            return this;
        }
        public Builder linkedInfo(@Nullable LinkedInfoResponse linkedInfo) {
            this.linkedInfo = linkedInfo;
            return this;
        }
        public Builder modifiedBy(UserInfoResponse modifiedBy) {
            this.modifiedBy = Objects.requireNonNull(modifiedBy);
            return this;
        }
        public Builder modifiedTime(String modifiedTime) {
            this.modifiedTime = Objects.requireNonNull(modifiedTime);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }        public DatastoreResponse build() {
            return new DatastoreResponse(azureDataLakeSection, azureMySqlSection, azurePostgreSqlSection, azureSqlDatabaseSection, azureStorageSection, createdBy, createdTime, dataStoreType, description, glusterFsSection, hasBeenValidated, linkedInfo, modifiedBy, modifiedTime, name, tags);
        }
    }
}
