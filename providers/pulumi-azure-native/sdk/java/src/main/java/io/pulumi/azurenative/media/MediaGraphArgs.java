// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.media;

import io.pulumi.azurenative.media.inputs.MediaGraphAssetSinkArgs;
import io.pulumi.azurenative.media.inputs.MediaGraphRtspSourceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MediaGraphArgs extends io.pulumi.resources.ResourceArgs {

    public static final MediaGraphArgs Empty = new MediaGraphArgs();

    /**
     * The Media Services account name.
     * 
     */
    @Import(name="accountName", required=true)
      private final Output<String> accountName;

    public Output<String> getAccountName() {
        return this.accountName;
    }

    /**
     * Media Graph description.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The Media Graph name.
     * 
     */
    @Import(name="mediaGraphName")
      private final @Nullable Output<String> mediaGraphName;

    public Output<String> getMediaGraphName() {
        return this.mediaGraphName == null ? Output.empty() : this.mediaGraphName;
    }

    /**
     * The name of the resource group within the Azure subscription.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> getResourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Media Graph sinks.
     * 
     */
    @Import(name="sinks", required=true)
      private final Output<List<MediaGraphAssetSinkArgs>> sinks;

    public Output<List<MediaGraphAssetSinkArgs>> getSinks() {
        return this.sinks;
    }

    /**
     * Media Graph sources.
     * 
     */
    @Import(name="sources", required=true)
      private final Output<List<MediaGraphRtspSourceArgs>> sources;

    public Output<List<MediaGraphRtspSourceArgs>> getSources() {
        return this.sources;
    }

    public MediaGraphArgs(
        Output<String> accountName,
        @Nullable Output<String> description,
        @Nullable Output<String> mediaGraphName,
        Output<String> resourceGroupName,
        Output<List<MediaGraphAssetSinkArgs>> sinks,
        Output<List<MediaGraphRtspSourceArgs>> sources) {
        this.accountName = Objects.requireNonNull(accountName, "expected parameter 'accountName' to be non-null");
        this.description = description;
        this.mediaGraphName = mediaGraphName;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.sinks = Objects.requireNonNull(sinks, "expected parameter 'sinks' to be non-null");
        this.sources = Objects.requireNonNull(sources, "expected parameter 'sources' to be non-null");
    }

    private MediaGraphArgs() {
        this.accountName = Output.empty();
        this.description = Output.empty();
        this.mediaGraphName = Output.empty();
        this.resourceGroupName = Output.empty();
        this.sinks = Output.empty();
        this.sources = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MediaGraphArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountName;
        private @Nullable Output<String> description;
        private @Nullable Output<String> mediaGraphName;
        private Output<String> resourceGroupName;
        private Output<List<MediaGraphAssetSinkArgs>> sinks;
        private Output<List<MediaGraphRtspSourceArgs>> sources;

        public Builder() {
    	      // Empty
        }

        public Builder(MediaGraphArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.description = defaults.description;
    	      this.mediaGraphName = defaults.mediaGraphName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sinks = defaults.sinks;
    	      this.sources = defaults.sources;
        }

        public Builder accountName(Output<String> accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }

        public Builder accountName(String accountName) {
            this.accountName = Output.of(Objects.requireNonNull(accountName));
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder mediaGraphName(@Nullable Output<String> mediaGraphName) {
            this.mediaGraphName = mediaGraphName;
            return this;
        }

        public Builder mediaGraphName(@Nullable String mediaGraphName) {
            this.mediaGraphName = Output.ofNullable(mediaGraphName);
            return this;
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }

        public Builder sinks(Output<List<MediaGraphAssetSinkArgs>> sinks) {
            this.sinks = Objects.requireNonNull(sinks);
            return this;
        }

        public Builder sinks(List<MediaGraphAssetSinkArgs> sinks) {
            this.sinks = Output.of(Objects.requireNonNull(sinks));
            return this;
        }

        public Builder sources(Output<List<MediaGraphRtspSourceArgs>> sources) {
            this.sources = Objects.requireNonNull(sources);
            return this;
        }

        public Builder sources(List<MediaGraphRtspSourceArgs> sources) {
            this.sources = Output.of(Objects.requireNonNull(sources));
            return this;
        }
        public MediaGraphArgs build() {
            return new MediaGraphArgs(accountName, description, mediaGraphName, resourceGroupName, sinks, sources);
        }
    }
}
