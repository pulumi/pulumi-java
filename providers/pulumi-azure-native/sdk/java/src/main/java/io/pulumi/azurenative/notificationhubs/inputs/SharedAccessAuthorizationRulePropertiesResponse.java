// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.notificationhubs.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SharedAccessAuthorizationRule properties.
 * 
 */
public final class SharedAccessAuthorizationRulePropertiesResponse extends io.pulumi.resources.InvokeArgs {

    public static final SharedAccessAuthorizationRulePropertiesResponse Empty = new SharedAccessAuthorizationRulePropertiesResponse();

    /**
     * A string that describes the claim type
     * 
     */
    @InputImport(name="claimType", required=true)
      private final String claimType;

    public String getClaimType() {
        return this.claimType;
    }

    /**
     * A string that describes the claim value
     * 
     */
    @InputImport(name="claimValue", required=true)
      private final String claimValue;

    public String getClaimValue() {
        return this.claimValue;
    }

    /**
     * The created time for this rule
     * 
     */
    @InputImport(name="createdTime", required=true)
      private final String createdTime;

    public String getCreatedTime() {
        return this.createdTime;
    }

    /**
     * A string that describes the authorization rule.
     * 
     */
    @InputImport(name="keyName", required=true)
      private final String keyName;

    public String getKeyName() {
        return this.keyName;
    }

    /**
     * The last modified time for this rule
     * 
     */
    @InputImport(name="modifiedTime", required=true)
      private final String modifiedTime;

    public String getModifiedTime() {
        return this.modifiedTime;
    }

    /**
     * A base64-encoded 256-bit primary key for signing and validating the SAS token.
     * 
     */
    @InputImport(name="primaryKey", required=true)
      private final String primaryKey;

    public String getPrimaryKey() {
        return this.primaryKey;
    }

    /**
     * The revision number for the rule
     * 
     */
    @InputImport(name="revision", required=true)
      private final Integer revision;

    public Integer getRevision() {
        return this.revision;
    }

    /**
     * The rights associated with the rule.
     * 
     */
    @InputImport(name="rights")
      private final @Nullable List<String> rights;

    public List<String> getRights() {
        return this.rights == null ? List.of() : this.rights;
    }

    /**
     * A base64-encoded 256-bit primary key for signing and validating the SAS token.
     * 
     */
    @InputImport(name="secondaryKey", required=true)
      private final String secondaryKey;

    public String getSecondaryKey() {
        return this.secondaryKey;
    }

    public SharedAccessAuthorizationRulePropertiesResponse(
        String claimType,
        String claimValue,
        String createdTime,
        String keyName,
        String modifiedTime,
        String primaryKey,
        Integer revision,
        @Nullable List<String> rights,
        String secondaryKey) {
        this.claimType = Objects.requireNonNull(claimType, "expected parameter 'claimType' to be non-null");
        this.claimValue = Objects.requireNonNull(claimValue, "expected parameter 'claimValue' to be non-null");
        this.createdTime = Objects.requireNonNull(createdTime, "expected parameter 'createdTime' to be non-null");
        this.keyName = Objects.requireNonNull(keyName, "expected parameter 'keyName' to be non-null");
        this.modifiedTime = Objects.requireNonNull(modifiedTime, "expected parameter 'modifiedTime' to be non-null");
        this.primaryKey = Objects.requireNonNull(primaryKey, "expected parameter 'primaryKey' to be non-null");
        this.revision = Objects.requireNonNull(revision, "expected parameter 'revision' to be non-null");
        this.rights = rights;
        this.secondaryKey = Objects.requireNonNull(secondaryKey, "expected parameter 'secondaryKey' to be non-null");
    }

    private SharedAccessAuthorizationRulePropertiesResponse() {
        this.claimType = null;
        this.claimValue = null;
        this.createdTime = null;
        this.keyName = null;
        this.modifiedTime = null;
        this.primaryKey = null;
        this.revision = null;
        this.rights = List.of();
        this.secondaryKey = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SharedAccessAuthorizationRulePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String claimType;
        private String claimValue;
        private String createdTime;
        private String keyName;
        private String modifiedTime;
        private String primaryKey;
        private Integer revision;
        private @Nullable List<String> rights;
        private String secondaryKey;

        public Builder() {
    	      // Empty
        }

        public Builder(SharedAccessAuthorizationRulePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.claimType = defaults.claimType;
    	      this.claimValue = defaults.claimValue;
    	      this.createdTime = defaults.createdTime;
    	      this.keyName = defaults.keyName;
    	      this.modifiedTime = defaults.modifiedTime;
    	      this.primaryKey = defaults.primaryKey;
    	      this.revision = defaults.revision;
    	      this.rights = defaults.rights;
    	      this.secondaryKey = defaults.secondaryKey;
        }

        public Builder claimType(String claimType) {
            this.claimType = Objects.requireNonNull(claimType);
            return this;
        }

        public Builder claimValue(String claimValue) {
            this.claimValue = Objects.requireNonNull(claimValue);
            return this;
        }

        public Builder createdTime(String createdTime) {
            this.createdTime = Objects.requireNonNull(createdTime);
            return this;
        }

        public Builder keyName(String keyName) {
            this.keyName = Objects.requireNonNull(keyName);
            return this;
        }

        public Builder modifiedTime(String modifiedTime) {
            this.modifiedTime = Objects.requireNonNull(modifiedTime);
            return this;
        }

        public Builder primaryKey(String primaryKey) {
            this.primaryKey = Objects.requireNonNull(primaryKey);
            return this;
        }

        public Builder revision(Integer revision) {
            this.revision = Objects.requireNonNull(revision);
            return this;
        }

        public Builder rights(@Nullable List<String> rights) {
            this.rights = rights;
            return this;
        }

        public Builder secondaryKey(String secondaryKey) {
            this.secondaryKey = Objects.requireNonNull(secondaryKey);
            return this;
        }
        public SharedAccessAuthorizationRulePropertiesResponse build() {
            return new SharedAccessAuthorizationRulePropertiesResponse(claimType, claimValue, createdTime, keyName, modifiedTime, primaryKey, revision, rights, secondaryKey);
        }
    }
}
