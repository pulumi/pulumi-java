// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.sql;

import io.pulumi.azurenative.sql.inputs.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs extends io.pulumi.resources.ResourceArgs {

    public static final ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs Empty = new ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs();

    /**
     * The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).
     * 
     */
    @Import(name="baselineName")
      private final @Nullable Output<String> baselineName;

    public Output<String> baselineName() {
        return this.baselineName == null ? Codegen.empty() : this.baselineName;
    }

    /**
     * The rule baseline result
     * 
     */
    @Import(name="baselineResults", required=true)
      private final Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults;

    public Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults() {
        return this.baselineResults;
    }

    /**
     * The name of the database for which the vulnerability assessment rule baseline is defined.
     * 
     */
    @Import(name="databaseName", required=true)
      private final Output<String> databaseName;

    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * The name of the managed instance.
     * 
     */
    @Import(name="managedInstanceName", required=true)
      private final Output<String> managedInstanceName;

    public Output<String> managedInstanceName() {
        return this.managedInstanceName;
    }

    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The vulnerability assessment rule ID.
     * 
     */
    @Import(name="ruleId", required=true)
      private final Output<String> ruleId;

    public Output<String> ruleId() {
        return this.ruleId;
    }

    /**
     * The name of the vulnerability assessment.
     * 
     */
    @Import(name="vulnerabilityAssessmentName", required=true)
      private final Output<String> vulnerabilityAssessmentName;

    public Output<String> vulnerabilityAssessmentName() {
        return this.vulnerabilityAssessmentName;
    }

    public ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs(
        @Nullable Output<String> baselineName,
        Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults,
        Output<String> databaseName,
        Output<String> managedInstanceName,
        Output<String> resourceGroupName,
        Output<String> ruleId,
        Output<String> vulnerabilityAssessmentName) {
        this.baselineName = baselineName;
        this.baselineResults = Objects.requireNonNull(baselineResults, "expected parameter 'baselineResults' to be non-null");
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.managedInstanceName = Objects.requireNonNull(managedInstanceName, "expected parameter 'managedInstanceName' to be non-null");
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.ruleId = Objects.requireNonNull(ruleId, "expected parameter 'ruleId' to be non-null");
        this.vulnerabilityAssessmentName = Objects.requireNonNull(vulnerabilityAssessmentName, "expected parameter 'vulnerabilityAssessmentName' to be non-null");
    }

    private ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs() {
        this.baselineName = Codegen.empty();
        this.baselineResults = Codegen.empty();
        this.databaseName = Codegen.empty();
        this.managedInstanceName = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.ruleId = Codegen.empty();
        this.vulnerabilityAssessmentName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> baselineName;
        private Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults;
        private Output<String> databaseName;
        private Output<String> managedInstanceName;
        private Output<String> resourceGroupName;
        private Output<String> ruleId;
        private Output<String> vulnerabilityAssessmentName;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineName = defaults.baselineName;
    	      this.baselineResults = defaults.baselineResults;
    	      this.databaseName = defaults.databaseName;
    	      this.managedInstanceName = defaults.managedInstanceName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.ruleId = defaults.ruleId;
    	      this.vulnerabilityAssessmentName = defaults.vulnerabilityAssessmentName;
        }

        public Builder baselineName(@Nullable Output<String> baselineName) {
            this.baselineName = baselineName;
            return this;
        }
        public Builder baselineName(@Nullable String baselineName) {
            this.baselineName = Codegen.ofNullable(baselineName);
            return this;
        }
        public Builder baselineResults(Output<List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs>> baselineResults) {
            this.baselineResults = Objects.requireNonNull(baselineResults);
            return this;
        }
        public Builder baselineResults(List<DatabaseVulnerabilityAssessmentRuleBaselineItemArgs> baselineResults) {
            this.baselineResults = Output.of(Objects.requireNonNull(baselineResults));
            return this;
        }
        public Builder baselineResults(DatabaseVulnerabilityAssessmentRuleBaselineItemArgs... baselineResults) {
            return baselineResults(List.of(baselineResults));
        }
        public Builder databaseName(Output<String> databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        public Builder databaseName(String databaseName) {
            this.databaseName = Output.of(Objects.requireNonNull(databaseName));
            return this;
        }
        public Builder managedInstanceName(Output<String> managedInstanceName) {
            this.managedInstanceName = Objects.requireNonNull(managedInstanceName);
            return this;
        }
        public Builder managedInstanceName(String managedInstanceName) {
            this.managedInstanceName = Output.of(Objects.requireNonNull(managedInstanceName));
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder ruleId(Output<String> ruleId) {
            this.ruleId = Objects.requireNonNull(ruleId);
            return this;
        }
        public Builder ruleId(String ruleId) {
            this.ruleId = Output.of(Objects.requireNonNull(ruleId));
            return this;
        }
        public Builder vulnerabilityAssessmentName(Output<String> vulnerabilityAssessmentName) {
            this.vulnerabilityAssessmentName = Objects.requireNonNull(vulnerabilityAssessmentName);
            return this;
        }
        public Builder vulnerabilityAssessmentName(String vulnerabilityAssessmentName) {
            this.vulnerabilityAssessmentName = Output.of(Objects.requireNonNull(vulnerabilityAssessmentName));
            return this;
        }        public ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs build() {
            return new ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs(baselineName, baselineResults, databaseName, managedInstanceName, resourceGroupName, ruleId, vulnerabilityAssessmentName);
        }
    }
}
