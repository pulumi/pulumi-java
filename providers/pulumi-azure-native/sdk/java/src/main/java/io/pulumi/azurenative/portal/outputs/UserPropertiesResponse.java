// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.portal.outputs;

import io.pulumi.azurenative.portal.outputs.StorageProfileResponse;
import io.pulumi.azurenative.portal.outputs.TerminalSettingsResponse;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class UserPropertiesResponse {
    /**
     * The preferred location of the cloud shell.
     * 
     */
    private final String preferredLocation;
    /**
     * The operating system type of the cloud shell. Deprecated, use preferredShellType.
     * 
     */
    private final String preferredOsType;
    /**
     * The shell type of the cloud shell.
     * 
     */
    private final String preferredShellType;
    /**
     * The storage profile of the user settings.
     * 
     */
    private final StorageProfileResponse storageProfile;
    /**
     * Settings for terminal appearance.
     * 
     */
    private final TerminalSettingsResponse terminalSettings;

    @OutputCustomType.Constructor
    private UserPropertiesResponse(
        @OutputCustomType.Parameter("preferredLocation") String preferredLocation,
        @OutputCustomType.Parameter("preferredOsType") String preferredOsType,
        @OutputCustomType.Parameter("preferredShellType") String preferredShellType,
        @OutputCustomType.Parameter("storageProfile") StorageProfileResponse storageProfile,
        @OutputCustomType.Parameter("terminalSettings") TerminalSettingsResponse terminalSettings) {
        this.preferredLocation = preferredLocation;
        this.preferredOsType = preferredOsType;
        this.preferredShellType = preferredShellType;
        this.storageProfile = storageProfile;
        this.terminalSettings = terminalSettings;
    }

    /**
     * The preferred location of the cloud shell.
     * 
    */
    public String getPreferredLocation() {
        return this.preferredLocation;
    }
    /**
     * The operating system type of the cloud shell. Deprecated, use preferredShellType.
     * 
    */
    public String getPreferredOsType() {
        return this.preferredOsType;
    }
    /**
     * The shell type of the cloud shell.
     * 
    */
    public String getPreferredShellType() {
        return this.preferredShellType;
    }
    /**
     * The storage profile of the user settings.
     * 
    */
    public StorageProfileResponse getStorageProfile() {
        return this.storageProfile;
    }
    /**
     * Settings for terminal appearance.
     * 
    */
    public TerminalSettingsResponse getTerminalSettings() {
        return this.terminalSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserPropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String preferredLocation;
        private String preferredOsType;
        private String preferredShellType;
        private StorageProfileResponse storageProfile;
        private TerminalSettingsResponse terminalSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(UserPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.preferredLocation = defaults.preferredLocation;
    	      this.preferredOsType = defaults.preferredOsType;
    	      this.preferredShellType = defaults.preferredShellType;
    	      this.storageProfile = defaults.storageProfile;
    	      this.terminalSettings = defaults.terminalSettings;
        }

        public Builder setPreferredLocation(String preferredLocation) {
            this.preferredLocation = Objects.requireNonNull(preferredLocation);
            return this;
        }

        public Builder setPreferredOsType(String preferredOsType) {
            this.preferredOsType = Objects.requireNonNull(preferredOsType);
            return this;
        }

        public Builder setPreferredShellType(String preferredShellType) {
            this.preferredShellType = Objects.requireNonNull(preferredShellType);
            return this;
        }

        public Builder setStorageProfile(StorageProfileResponse storageProfile) {
            this.storageProfile = Objects.requireNonNull(storageProfile);
            return this;
        }

        public Builder setTerminalSettings(TerminalSettingsResponse terminalSettings) {
            this.terminalSettings = Objects.requireNonNull(terminalSettings);
            return this;
        }
        public UserPropertiesResponse build() {
            return new UserPropertiesResponse(preferredLocation, preferredOsType, preferredShellType, storageProfile, terminalSettings);
        }
    }
}
