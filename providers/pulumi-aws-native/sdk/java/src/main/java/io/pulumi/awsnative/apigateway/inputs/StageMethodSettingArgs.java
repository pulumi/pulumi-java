// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apigateway.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StageMethodSettingArgs extends io.pulumi.resources.ResourceArgs {

    public static final StageMethodSettingArgs Empty = new StageMethodSettingArgs();

    @InputImport(name="cacheDataEncrypted")
    private final @Nullable Input<Boolean> cacheDataEncrypted;

    public Input<Boolean> getCacheDataEncrypted() {
        return this.cacheDataEncrypted == null ? Input.empty() : this.cacheDataEncrypted;
    }

    @InputImport(name="cacheTtlInSeconds")
    private final @Nullable Input<Integer> cacheTtlInSeconds;

    public Input<Integer> getCacheTtlInSeconds() {
        return this.cacheTtlInSeconds == null ? Input.empty() : this.cacheTtlInSeconds;
    }

    @InputImport(name="cachingEnabled")
    private final @Nullable Input<Boolean> cachingEnabled;

    public Input<Boolean> getCachingEnabled() {
        return this.cachingEnabled == null ? Input.empty() : this.cachingEnabled;
    }

    @InputImport(name="dataTraceEnabled")
    private final @Nullable Input<Boolean> dataTraceEnabled;

    public Input<Boolean> getDataTraceEnabled() {
        return this.dataTraceEnabled == null ? Input.empty() : this.dataTraceEnabled;
    }

    @InputImport(name="httpMethod")
    private final @Nullable Input<String> httpMethod;

    public Input<String> getHttpMethod() {
        return this.httpMethod == null ? Input.empty() : this.httpMethod;
    }

    @InputImport(name="loggingLevel")
    private final @Nullable Input<String> loggingLevel;

    public Input<String> getLoggingLevel() {
        return this.loggingLevel == null ? Input.empty() : this.loggingLevel;
    }

    @InputImport(name="metricsEnabled")
    private final @Nullable Input<Boolean> metricsEnabled;

    public Input<Boolean> getMetricsEnabled() {
        return this.metricsEnabled == null ? Input.empty() : this.metricsEnabled;
    }

    @InputImport(name="resourcePath")
    private final @Nullable Input<String> resourcePath;

    public Input<String> getResourcePath() {
        return this.resourcePath == null ? Input.empty() : this.resourcePath;
    }

    @InputImport(name="throttlingBurstLimit")
    private final @Nullable Input<Integer> throttlingBurstLimit;

    public Input<Integer> getThrottlingBurstLimit() {
        return this.throttlingBurstLimit == null ? Input.empty() : this.throttlingBurstLimit;
    }

    @InputImport(name="throttlingRateLimit")
    private final @Nullable Input<Double> throttlingRateLimit;

    public Input<Double> getThrottlingRateLimit() {
        return this.throttlingRateLimit == null ? Input.empty() : this.throttlingRateLimit;
    }

    public StageMethodSettingArgs(
        @Nullable Input<Boolean> cacheDataEncrypted,
        @Nullable Input<Integer> cacheTtlInSeconds,
        @Nullable Input<Boolean> cachingEnabled,
        @Nullable Input<Boolean> dataTraceEnabled,
        @Nullable Input<String> httpMethod,
        @Nullable Input<String> loggingLevel,
        @Nullable Input<Boolean> metricsEnabled,
        @Nullable Input<String> resourcePath,
        @Nullable Input<Integer> throttlingBurstLimit,
        @Nullable Input<Double> throttlingRateLimit) {
        this.cacheDataEncrypted = cacheDataEncrypted;
        this.cacheTtlInSeconds = cacheTtlInSeconds;
        this.cachingEnabled = cachingEnabled;
        this.dataTraceEnabled = dataTraceEnabled;
        this.httpMethod = httpMethod;
        this.loggingLevel = loggingLevel;
        this.metricsEnabled = metricsEnabled;
        this.resourcePath = resourcePath;
        this.throttlingBurstLimit = throttlingBurstLimit;
        this.throttlingRateLimit = throttlingRateLimit;
    }

    private StageMethodSettingArgs() {
        this.cacheDataEncrypted = Input.empty();
        this.cacheTtlInSeconds = Input.empty();
        this.cachingEnabled = Input.empty();
        this.dataTraceEnabled = Input.empty();
        this.httpMethod = Input.empty();
        this.loggingLevel = Input.empty();
        this.metricsEnabled = Input.empty();
        this.resourcePath = Input.empty();
        this.throttlingBurstLimit = Input.empty();
        this.throttlingRateLimit = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StageMethodSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> cacheDataEncrypted;
        private @Nullable Input<Integer> cacheTtlInSeconds;
        private @Nullable Input<Boolean> cachingEnabled;
        private @Nullable Input<Boolean> dataTraceEnabled;
        private @Nullable Input<String> httpMethod;
        private @Nullable Input<String> loggingLevel;
        private @Nullable Input<Boolean> metricsEnabled;
        private @Nullable Input<String> resourcePath;
        private @Nullable Input<Integer> throttlingBurstLimit;
        private @Nullable Input<Double> throttlingRateLimit;

        public Builder() {
    	      // Empty
        }

        public Builder(StageMethodSettingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheDataEncrypted = defaults.cacheDataEncrypted;
    	      this.cacheTtlInSeconds = defaults.cacheTtlInSeconds;
    	      this.cachingEnabled = defaults.cachingEnabled;
    	      this.dataTraceEnabled = defaults.dataTraceEnabled;
    	      this.httpMethod = defaults.httpMethod;
    	      this.loggingLevel = defaults.loggingLevel;
    	      this.metricsEnabled = defaults.metricsEnabled;
    	      this.resourcePath = defaults.resourcePath;
    	      this.throttlingBurstLimit = defaults.throttlingBurstLimit;
    	      this.throttlingRateLimit = defaults.throttlingRateLimit;
        }

        public Builder setCacheDataEncrypted(@Nullable Input<Boolean> cacheDataEncrypted) {
            this.cacheDataEncrypted = cacheDataEncrypted;
            return this;
        }

        public Builder setCacheDataEncrypted(@Nullable Boolean cacheDataEncrypted) {
            this.cacheDataEncrypted = Input.ofNullable(cacheDataEncrypted);
            return this;
        }

        public Builder setCacheTtlInSeconds(@Nullable Input<Integer> cacheTtlInSeconds) {
            this.cacheTtlInSeconds = cacheTtlInSeconds;
            return this;
        }

        public Builder setCacheTtlInSeconds(@Nullable Integer cacheTtlInSeconds) {
            this.cacheTtlInSeconds = Input.ofNullable(cacheTtlInSeconds);
            return this;
        }

        public Builder setCachingEnabled(@Nullable Input<Boolean> cachingEnabled) {
            this.cachingEnabled = cachingEnabled;
            return this;
        }

        public Builder setCachingEnabled(@Nullable Boolean cachingEnabled) {
            this.cachingEnabled = Input.ofNullable(cachingEnabled);
            return this;
        }

        public Builder setDataTraceEnabled(@Nullable Input<Boolean> dataTraceEnabled) {
            this.dataTraceEnabled = dataTraceEnabled;
            return this;
        }

        public Builder setDataTraceEnabled(@Nullable Boolean dataTraceEnabled) {
            this.dataTraceEnabled = Input.ofNullable(dataTraceEnabled);
            return this;
        }

        public Builder setHttpMethod(@Nullable Input<String> httpMethod) {
            this.httpMethod = httpMethod;
            return this;
        }

        public Builder setHttpMethod(@Nullable String httpMethod) {
            this.httpMethod = Input.ofNullable(httpMethod);
            return this;
        }

        public Builder setLoggingLevel(@Nullable Input<String> loggingLevel) {
            this.loggingLevel = loggingLevel;
            return this;
        }

        public Builder setLoggingLevel(@Nullable String loggingLevel) {
            this.loggingLevel = Input.ofNullable(loggingLevel);
            return this;
        }

        public Builder setMetricsEnabled(@Nullable Input<Boolean> metricsEnabled) {
            this.metricsEnabled = metricsEnabled;
            return this;
        }

        public Builder setMetricsEnabled(@Nullable Boolean metricsEnabled) {
            this.metricsEnabled = Input.ofNullable(metricsEnabled);
            return this;
        }

        public Builder setResourcePath(@Nullable Input<String> resourcePath) {
            this.resourcePath = resourcePath;
            return this;
        }

        public Builder setResourcePath(@Nullable String resourcePath) {
            this.resourcePath = Input.ofNullable(resourcePath);
            return this;
        }

        public Builder setThrottlingBurstLimit(@Nullable Input<Integer> throttlingBurstLimit) {
            this.throttlingBurstLimit = throttlingBurstLimit;
            return this;
        }

        public Builder setThrottlingBurstLimit(@Nullable Integer throttlingBurstLimit) {
            this.throttlingBurstLimit = Input.ofNullable(throttlingBurstLimit);
            return this;
        }

        public Builder setThrottlingRateLimit(@Nullable Input<Double> throttlingRateLimit) {
            this.throttlingRateLimit = throttlingRateLimit;
            return this;
        }

        public Builder setThrottlingRateLimit(@Nullable Double throttlingRateLimit) {
            this.throttlingRateLimit = Input.ofNullable(throttlingRateLimit);
            return this;
        }

        public StageMethodSettingArgs build() {
            return new StageMethodSettingArgs(cacheDataEncrypted, cacheTtlInSeconds, cachingEnabled, dataTraceEnabled, httpMethod, loggingLevel, metricsEnabled, resourcePath, throttlingBurstLimit, throttlingRateLimit);
        }
    }
}
