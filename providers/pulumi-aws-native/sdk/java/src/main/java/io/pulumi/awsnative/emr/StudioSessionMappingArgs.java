// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.emr;

import io.pulumi.awsnative.emr.enums.StudioSessionMappingIdentityType;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class StudioSessionMappingArgs extends io.pulumi.resources.ResourceArgs {

    public static final StudioSessionMappingArgs Empty = new StudioSessionMappingArgs();

    /**
     * The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified.
     * 
     */
    @InputImport(name="identityName", required=true)
      private final Input<String> identityName;

    public Input<String> getIdentityName() {
        return this.identityName;
    }

    /**
     * Specifies whether the identity to map to the Studio is a user or a group.
     * 
     */
    @InputImport(name="identityType", required=true)
      private final Input<StudioSessionMappingIdentityType> identityType;

    public Input<StudioSessionMappingIdentityType> getIdentityType() {
        return this.identityType;
    }

    /**
     * The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. Session policies refine Studio user permissions without the need to use multiple IAM user roles.
     * 
     */
    @InputImport(name="sessionPolicyArn", required=true)
      private final Input<String> sessionPolicyArn;

    public Input<String> getSessionPolicyArn() {
        return this.sessionPolicyArn;
    }

    /**
     * The ID of the Amazon EMR Studio to which the user or group will be mapped.
     * 
     */
    @InputImport(name="studioId", required=true)
      private final Input<String> studioId;

    public Input<String> getStudioId() {
        return this.studioId;
    }

    public StudioSessionMappingArgs(
        Input<String> identityName,
        Input<StudioSessionMappingIdentityType> identityType,
        Input<String> sessionPolicyArn,
        Input<String> studioId) {
        this.identityName = Objects.requireNonNull(identityName, "expected parameter 'identityName' to be non-null");
        this.identityType = Objects.requireNonNull(identityType, "expected parameter 'identityType' to be non-null");
        this.sessionPolicyArn = Objects.requireNonNull(sessionPolicyArn, "expected parameter 'sessionPolicyArn' to be non-null");
        this.studioId = Objects.requireNonNull(studioId, "expected parameter 'studioId' to be non-null");
    }

    private StudioSessionMappingArgs() {
        this.identityName = Input.empty();
        this.identityType = Input.empty();
        this.sessionPolicyArn = Input.empty();
        this.studioId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StudioSessionMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> identityName;
        private Input<StudioSessionMappingIdentityType> identityType;
        private Input<String> sessionPolicyArn;
        private Input<String> studioId;

        public Builder() {
    	      // Empty
        }

        public Builder(StudioSessionMappingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityName = defaults.identityName;
    	      this.identityType = defaults.identityType;
    	      this.sessionPolicyArn = defaults.sessionPolicyArn;
    	      this.studioId = defaults.studioId;
        }

        public Builder setIdentityName(Input<String> identityName) {
            this.identityName = Objects.requireNonNull(identityName);
            return this;
        }

        public Builder setIdentityName(String identityName) {
            this.identityName = Input.of(Objects.requireNonNull(identityName));
            return this;
        }

        public Builder setIdentityType(Input<StudioSessionMappingIdentityType> identityType) {
            this.identityType = Objects.requireNonNull(identityType);
            return this;
        }

        public Builder setIdentityType(StudioSessionMappingIdentityType identityType) {
            this.identityType = Input.of(Objects.requireNonNull(identityType));
            return this;
        }

        public Builder setSessionPolicyArn(Input<String> sessionPolicyArn) {
            this.sessionPolicyArn = Objects.requireNonNull(sessionPolicyArn);
            return this;
        }

        public Builder setSessionPolicyArn(String sessionPolicyArn) {
            this.sessionPolicyArn = Input.of(Objects.requireNonNull(sessionPolicyArn));
            return this;
        }

        public Builder setStudioId(Input<String> studioId) {
            this.studioId = Objects.requireNonNull(studioId);
            return this;
        }

        public Builder setStudioId(String studioId) {
            this.studioId = Input.of(Objects.requireNonNull(studioId));
            return this;
        }
        public StudioSessionMappingArgs build() {
            return new StudioSessionMappingArgs(identityName, identityType, sessionPolicyArn, studioId);
        }
    }
}
