// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.backup.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class BackupSelectionConditionResourceTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final BackupSelectionConditionResourceTypeArgs Empty = new BackupSelectionConditionResourceTypeArgs();

    @InputImport(name="conditionKey", required=true)
      private final Input<String> conditionKey;

    public Input<String> getConditionKey() {
        return this.conditionKey;
    }

    @InputImport(name="conditionType", required=true)
      private final Input<String> conditionType;

    public Input<String> getConditionType() {
        return this.conditionType;
    }

    @InputImport(name="conditionValue", required=true)
      private final Input<String> conditionValue;

    public Input<String> getConditionValue() {
        return this.conditionValue;
    }

    public BackupSelectionConditionResourceTypeArgs(
        Input<String> conditionKey,
        Input<String> conditionType,
        Input<String> conditionValue) {
        this.conditionKey = Objects.requireNonNull(conditionKey, "expected parameter 'conditionKey' to be non-null");
        this.conditionType = Objects.requireNonNull(conditionType, "expected parameter 'conditionType' to be non-null");
        this.conditionValue = Objects.requireNonNull(conditionValue, "expected parameter 'conditionValue' to be non-null");
    }

    private BackupSelectionConditionResourceTypeArgs() {
        this.conditionKey = Input.empty();
        this.conditionType = Input.empty();
        this.conditionValue = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupSelectionConditionResourceTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> conditionKey;
        private Input<String> conditionType;
        private Input<String> conditionValue;

        public Builder() {
    	      // Empty
        }

        public Builder(BackupSelectionConditionResourceTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditionKey = defaults.conditionKey;
    	      this.conditionType = defaults.conditionType;
    	      this.conditionValue = defaults.conditionValue;
        }

        public Builder conditionKey(Input<String> conditionKey) {
            this.conditionKey = Objects.requireNonNull(conditionKey);
            return this;
        }

        public Builder conditionKey(String conditionKey) {
            this.conditionKey = Input.of(Objects.requireNonNull(conditionKey));
            return this;
        }

        public Builder conditionType(Input<String> conditionType) {
            this.conditionType = Objects.requireNonNull(conditionType);
            return this;
        }

        public Builder conditionType(String conditionType) {
            this.conditionType = Input.of(Objects.requireNonNull(conditionType));
            return this;
        }

        public Builder conditionValue(Input<String> conditionValue) {
            this.conditionValue = Objects.requireNonNull(conditionValue);
            return this;
        }

        public Builder conditionValue(String conditionValue) {
            this.conditionValue = Input.of(Objects.requireNonNull(conditionValue));
            return this;
        }
        public BackupSelectionConditionResourceTypeArgs build() {
            return new BackupSelectionConditionResourceTypeArgs(conditionKey, conditionType, conditionValue);
        }
    }
}
