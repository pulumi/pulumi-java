// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.inputs.DatasetCsvOptionsArgs;
import io.pulumi.awsnative.databrew.inputs.DatasetExcelOptionsArgs;
import io.pulumi.awsnative.databrew.inputs.DatasetJsonOptionsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Format options for dataset
 * 
 */
public final class DatasetFormatOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetFormatOptionsArgs Empty = new DatasetFormatOptionsArgs();

    @Import(name="csv")
      private final @Nullable Output<DatasetCsvOptionsArgs> csv;

    public Output<DatasetCsvOptionsArgs> csv() {
        return this.csv == null ? Codegen.empty() : this.csv;
    }

    @Import(name="excel")
      private final @Nullable Output<DatasetExcelOptionsArgs> excel;

    public Output<DatasetExcelOptionsArgs> excel() {
        return this.excel == null ? Codegen.empty() : this.excel;
    }

    @Import(name="json")
      private final @Nullable Output<DatasetJsonOptionsArgs> json;

    public Output<DatasetJsonOptionsArgs> json() {
        return this.json == null ? Codegen.empty() : this.json;
    }

    public DatasetFormatOptionsArgs(
        @Nullable Output<DatasetCsvOptionsArgs> csv,
        @Nullable Output<DatasetExcelOptionsArgs> excel,
        @Nullable Output<DatasetJsonOptionsArgs> json) {
        this.csv = csv;
        this.excel = excel;
        this.json = json;
    }

    private DatasetFormatOptionsArgs() {
        this.csv = Codegen.empty();
        this.excel = Codegen.empty();
        this.json = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetFormatOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DatasetCsvOptionsArgs> csv;
        private @Nullable Output<DatasetExcelOptionsArgs> excel;
        private @Nullable Output<DatasetJsonOptionsArgs> json;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetFormatOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.csv = defaults.csv;
    	      this.excel = defaults.excel;
    	      this.json = defaults.json;
        }

        public Builder csv(@Nullable Output<DatasetCsvOptionsArgs> csv) {
            this.csv = csv;
            return this;
        }
        public Builder csv(@Nullable DatasetCsvOptionsArgs csv) {
            this.csv = Codegen.ofNullable(csv);
            return this;
        }
        public Builder excel(@Nullable Output<DatasetExcelOptionsArgs> excel) {
            this.excel = excel;
            return this;
        }
        public Builder excel(@Nullable DatasetExcelOptionsArgs excel) {
            this.excel = Codegen.ofNullable(excel);
            return this;
        }
        public Builder json(@Nullable Output<DatasetJsonOptionsArgs> json) {
            this.json = json;
            return this;
        }
        public Builder json(@Nullable DatasetJsonOptionsArgs json) {
            this.json = Codegen.ofNullable(json);
            return this;
        }        public DatasetFormatOptionsArgs build() {
            return new DatasetFormatOptionsArgs(csv, excel, json);
        }
    }
}
