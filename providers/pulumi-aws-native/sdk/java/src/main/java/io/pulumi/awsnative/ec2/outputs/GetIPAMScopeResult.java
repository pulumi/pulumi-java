// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ec2.outputs;

import io.pulumi.awsnative.ec2.enums.IPAMScopeIpamScopeType;
import io.pulumi.awsnative.ec2.outputs.IPAMScopeTag;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetIPAMScopeResult {
    /**
     * The Amazon Resource Name (ARN) of the IPAM scope.
     * 
     */
    private final @Nullable String arn;
    private final @Nullable String description;
    /**
     * The Amazon Resource Name (ARN) of the IPAM this scope is a part of.
     * 
     */
    private final @Nullable String ipamArn;
    /**
     * Id of the IPAM scope.
     * 
     */
    private final @Nullable String ipamScopeId;
    /**
     * Determines whether this scope contains publicly routable space or space for a private network
     * 
     */
    private final @Nullable IPAMScopeIpamScopeType ipamScopeType;
    /**
     * Is this one of the default scopes created with the IPAM.
     * 
     */
    private final @Nullable Boolean isDefault;
    /**
     * The number of pools that currently exist in this scope.
     * 
     */
    private final @Nullable Integer poolCount;
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    private final @Nullable List<IPAMScopeTag> tags;

    @OutputCustomType.Constructor({"arn","description","ipamArn","ipamScopeId","ipamScopeType","isDefault","poolCount","tags"})
    private GetIPAMScopeResult(
        @Nullable String arn,
        @Nullable String description,
        @Nullable String ipamArn,
        @Nullable String ipamScopeId,
        @Nullable IPAMScopeIpamScopeType ipamScopeType,
        @Nullable Boolean isDefault,
        @Nullable Integer poolCount,
        @Nullable List<IPAMScopeTag> tags) {
        this.arn = arn;
        this.description = description;
        this.ipamArn = ipamArn;
        this.ipamScopeId = ipamScopeId;
        this.ipamScopeType = ipamScopeType;
        this.isDefault = isDefault;
        this.poolCount = poolCount;
        this.tags = tags;
    }

    /**
     * The Amazon Resource Name (ARN) of the IPAM scope.
     * 
    */
    public Optional<String> getArn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * The Amazon Resource Name (ARN) of the IPAM this scope is a part of.
     * 
    */
    public Optional<String> getIpamArn() {
        return Optional.ofNullable(this.ipamArn);
    }
    /**
     * Id of the IPAM scope.
     * 
    */
    public Optional<String> getIpamScopeId() {
        return Optional.ofNullable(this.ipamScopeId);
    }
    /**
     * Determines whether this scope contains publicly routable space or space for a private network
     * 
    */
    public Optional<IPAMScopeIpamScopeType> getIpamScopeType() {
        return Optional.ofNullable(this.ipamScopeType);
    }
    /**
     * Is this one of the default scopes created with the IPAM.
     * 
    */
    public Optional<Boolean> getIsDefault() {
        return Optional.ofNullable(this.isDefault);
    }
    /**
     * The number of pools that currently exist in this scope.
     * 
    */
    public Optional<Integer> getPoolCount() {
        return Optional.ofNullable(this.poolCount);
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
    */
    public List<IPAMScopeTag> getTags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIPAMScopeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String description;
        private @Nullable String ipamArn;
        private @Nullable String ipamScopeId;
        private @Nullable IPAMScopeIpamScopeType ipamScopeType;
        private @Nullable Boolean isDefault;
        private @Nullable Integer poolCount;
        private @Nullable List<IPAMScopeTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIPAMScopeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.ipamArn = defaults.ipamArn;
    	      this.ipamScopeId = defaults.ipamScopeId;
    	      this.ipamScopeType = defaults.ipamScopeType;
    	      this.isDefault = defaults.isDefault;
    	      this.poolCount = defaults.poolCount;
    	      this.tags = defaults.tags;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder setIpamArn(@Nullable String ipamArn) {
            this.ipamArn = ipamArn;
            return this;
        }

        public Builder setIpamScopeId(@Nullable String ipamScopeId) {
            this.ipamScopeId = ipamScopeId;
            return this;
        }

        public Builder setIpamScopeType(@Nullable IPAMScopeIpamScopeType ipamScopeType) {
            this.ipamScopeType = ipamScopeType;
            return this;
        }

        public Builder setIsDefault(@Nullable Boolean isDefault) {
            this.isDefault = isDefault;
            return this;
        }

        public Builder setPoolCount(@Nullable Integer poolCount) {
            this.poolCount = poolCount;
            return this;
        }

        public Builder setTags(@Nullable List<IPAMScopeTag> tags) {
            this.tags = tags;
            return this;
        }
        public GetIPAMScopeResult build() {
            return new GetIPAMScopeResult(arn, description, ipamArn, ipamScopeId, ipamScopeType, isDefault, poolCount, tags);
        }
    }
}
