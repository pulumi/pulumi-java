// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.frauddetector.inputs;

import io.pulumi.awsnative.frauddetector.enums.EventTypeEventVariableDataSource;
import io.pulumi.awsnative.frauddetector.enums.EventTypeEventVariableDataType;
import io.pulumi.awsnative.frauddetector.enums.EventTypeEventVariableVariableType;
import io.pulumi.awsnative.frauddetector.inputs.EventTypeTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EventTypeEventVariableArgs extends io.pulumi.resources.ResourceArgs {

    public static final EventTypeEventVariableArgs Empty = new EventTypeEventVariableArgs();

    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The time when the event type was created.
     * 
     */
    @InputImport(name="createdTime")
      private final @Nullable Input<String> createdTime;

    public Input<String> getCreatedTime() {
        return this.createdTime == null ? Input.empty() : this.createdTime;
    }

    @InputImport(name="dataSource")
      private final @Nullable Input<EventTypeEventVariableDataSource> dataSource;

    public Input<EventTypeEventVariableDataSource> getDataSource() {
        return this.dataSource == null ? Input.empty() : this.dataSource;
    }

    @InputImport(name="dataType")
      private final @Nullable Input<EventTypeEventVariableDataType> dataType;

    public Input<EventTypeEventVariableDataType> getDataType() {
        return this.dataType == null ? Input.empty() : this.dataType;
    }

    @InputImport(name="defaultValue")
      private final @Nullable Input<String> defaultValue;

    public Input<String> getDefaultValue() {
        return this.defaultValue == null ? Input.empty() : this.defaultValue;
    }

    /**
     * The description.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="inline")
      private final @Nullable Input<Boolean> inline;

    public Input<Boolean> getInline() {
        return this.inline == null ? Input.empty() : this.inline;
    }

    /**
     * The time when the event type was last updated.
     * 
     */
    @InputImport(name="lastUpdatedTime")
      private final @Nullable Input<String> lastUpdatedTime;

    public Input<String> getLastUpdatedTime() {
        return this.lastUpdatedTime == null ? Input.empty() : this.lastUpdatedTime;
    }

    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Tags associated with this event type.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<List<EventTypeTagArgs>> tags;

    public Input<List<EventTypeTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="variableType")
      private final @Nullable Input<EventTypeEventVariableVariableType> variableType;

    public Input<EventTypeEventVariableVariableType> getVariableType() {
        return this.variableType == null ? Input.empty() : this.variableType;
    }

    public EventTypeEventVariableArgs(
        @Nullable Input<String> arn,
        @Nullable Input<String> createdTime,
        @Nullable Input<EventTypeEventVariableDataSource> dataSource,
        @Nullable Input<EventTypeEventVariableDataType> dataType,
        @Nullable Input<String> defaultValue,
        @Nullable Input<String> description,
        @Nullable Input<Boolean> inline,
        @Nullable Input<String> lastUpdatedTime,
        @Nullable Input<String> name,
        @Nullable Input<List<EventTypeTagArgs>> tags,
        @Nullable Input<EventTypeEventVariableVariableType> variableType) {
        this.arn = arn;
        this.createdTime = createdTime;
        this.dataSource = dataSource;
        this.dataType = dataType;
        this.defaultValue = defaultValue;
        this.description = description;
        this.inline = inline;
        this.lastUpdatedTime = lastUpdatedTime;
        this.name = name;
        this.tags = tags;
        this.variableType = variableType;
    }

    private EventTypeEventVariableArgs() {
        this.arn = Input.empty();
        this.createdTime = Input.empty();
        this.dataSource = Input.empty();
        this.dataType = Input.empty();
        this.defaultValue = Input.empty();
        this.description = Input.empty();
        this.inline = Input.empty();
        this.lastUpdatedTime = Input.empty();
        this.name = Input.empty();
        this.tags = Input.empty();
        this.variableType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventTypeEventVariableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> createdTime;
        private @Nullable Input<EventTypeEventVariableDataSource> dataSource;
        private @Nullable Input<EventTypeEventVariableDataType> dataType;
        private @Nullable Input<String> defaultValue;
        private @Nullable Input<String> description;
        private @Nullable Input<Boolean> inline;
        private @Nullable Input<String> lastUpdatedTime;
        private @Nullable Input<String> name;
        private @Nullable Input<List<EventTypeTagArgs>> tags;
        private @Nullable Input<EventTypeEventVariableVariableType> variableType;

        public Builder() {
    	      // Empty
        }

        public Builder(EventTypeEventVariableArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.dataSource = defaults.dataSource;
    	      this.dataType = defaults.dataType;
    	      this.defaultValue = defaults.defaultValue;
    	      this.description = defaults.description;
    	      this.inline = defaults.inline;
    	      this.lastUpdatedTime = defaults.lastUpdatedTime;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.variableType = defaults.variableType;
        }

        public Builder arn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder createdTime(@Nullable Input<String> createdTime) {
            this.createdTime = createdTime;
            return this;
        }

        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = Input.ofNullable(createdTime);
            return this;
        }

        public Builder dataSource(@Nullable Input<EventTypeEventVariableDataSource> dataSource) {
            this.dataSource = dataSource;
            return this;
        }

        public Builder dataSource(@Nullable EventTypeEventVariableDataSource dataSource) {
            this.dataSource = Input.ofNullable(dataSource);
            return this;
        }

        public Builder dataType(@Nullable Input<EventTypeEventVariableDataType> dataType) {
            this.dataType = dataType;
            return this;
        }

        public Builder dataType(@Nullable EventTypeEventVariableDataType dataType) {
            this.dataType = Input.ofNullable(dataType);
            return this;
        }

        public Builder defaultValue(@Nullable Input<String> defaultValue) {
            this.defaultValue = defaultValue;
            return this;
        }

        public Builder defaultValue(@Nullable String defaultValue) {
            this.defaultValue = Input.ofNullable(defaultValue);
            return this;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder inline(@Nullable Input<Boolean> inline) {
            this.inline = inline;
            return this;
        }

        public Builder inline(@Nullable Boolean inline) {
            this.inline = Input.ofNullable(inline);
            return this;
        }

        public Builder lastUpdatedTime(@Nullable Input<String> lastUpdatedTime) {
            this.lastUpdatedTime = lastUpdatedTime;
            return this;
        }

        public Builder lastUpdatedTime(@Nullable String lastUpdatedTime) {
            this.lastUpdatedTime = Input.ofNullable(lastUpdatedTime);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder tags(@Nullable Input<List<EventTypeTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<EventTypeTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder variableType(@Nullable Input<EventTypeEventVariableVariableType> variableType) {
            this.variableType = variableType;
            return this;
        }

        public Builder variableType(@Nullable EventTypeEventVariableVariableType variableType) {
            this.variableType = Input.ofNullable(variableType);
            return this;
        }
        public EventTypeEventVariableArgs build() {
            return new EventTypeEventVariableArgs(arn, createdTime, dataSource, dataType, defaultValue, description, inline, lastUpdatedTime, name, tags, variableType);
        }
    }
}
