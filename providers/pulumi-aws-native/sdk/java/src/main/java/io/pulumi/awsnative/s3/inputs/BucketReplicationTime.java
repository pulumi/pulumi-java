// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.awsnative.s3.enums.BucketReplicationTimeStatus;
import io.pulumi.awsnative.s3.inputs.BucketReplicationTimeValue;
import io.pulumi.core.annotations.Import;
import java.util.Objects;


public final class BucketReplicationTime extends io.pulumi.resources.InvokeArgs {

    public static final BucketReplicationTime Empty = new BucketReplicationTime();

    @Import(name="status", required=true)
      private final BucketReplicationTimeStatus status;

    public BucketReplicationTimeStatus status() {
        return this.status;
    }

    @Import(name="time", required=true)
      private final BucketReplicationTimeValue time;

    public BucketReplicationTimeValue time() {
        return this.time;
    }

    public BucketReplicationTime(
        BucketReplicationTimeStatus status,
        BucketReplicationTimeValue time) {
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
        this.time = Objects.requireNonNull(time, "expected parameter 'time' to be non-null");
    }

    private BucketReplicationTime() {
        this.status = null;
        this.time = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationTime defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketReplicationTimeStatus status;
        private BucketReplicationTimeValue time;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketReplicationTime defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.status = defaults.status;
    	      this.time = defaults.time;
        }

        public Builder status(BucketReplicationTimeStatus status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder time(BucketReplicationTimeValue time) {
            this.time = Objects.requireNonNull(time);
            return this;
        }        public BucketReplicationTime build() {
            return new BucketReplicationTime(status, time);
        }
    }
}
