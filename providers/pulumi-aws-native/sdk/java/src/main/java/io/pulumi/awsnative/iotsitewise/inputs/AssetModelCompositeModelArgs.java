// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotsitewise.inputs;

import io.pulumi.awsnative.iotsitewise.inputs.AssetModelPropertyArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AssetModelCompositeModelArgs extends io.pulumi.resources.ResourceArgs {

    public static final AssetModelCompositeModelArgs Empty = new AssetModelCompositeModelArgs();

    @InputImport(name="compositeModelProperties")
    private final @Nullable Input<List<AssetModelPropertyArgs>> compositeModelProperties;

    public Input<List<AssetModelPropertyArgs>> getCompositeModelProperties() {
        return this.compositeModelProperties == null ? Input.empty() : this.compositeModelProperties;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="type", required=true)
    private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    public AssetModelCompositeModelArgs(
        @Nullable Input<List<AssetModelPropertyArgs>> compositeModelProperties,
        @Nullable Input<String> description,
        Input<String> name,
        Input<String> type) {
        this.compositeModelProperties = compositeModelProperties;
        this.description = description;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private AssetModelCompositeModelArgs() {
        this.compositeModelProperties = Input.empty();
        this.description = Input.empty();
        this.name = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetModelCompositeModelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<AssetModelPropertyArgs>> compositeModelProperties;
        private @Nullable Input<String> description;
        private Input<String> name;
        private Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetModelCompositeModelArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compositeModelProperties = defaults.compositeModelProperties;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        public Builder setCompositeModelProperties(@Nullable Input<List<AssetModelPropertyArgs>> compositeModelProperties) {
            this.compositeModelProperties = compositeModelProperties;
            return this;
        }

        public Builder setCompositeModelProperties(@Nullable List<AssetModelPropertyArgs> compositeModelProperties) {
            this.compositeModelProperties = Input.ofNullable(compositeModelProperties);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public AssetModelCompositeModelArgs build() {
            return new AssetModelCompositeModelArgs(compositeModelProperties, description, name, type);
        }
    }
}
