// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.awsnative.s3.enums.BucketCorsRuleAllowedMethodsItem;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
 * 
 */
public final class BucketCorsRule extends io.pulumi.resources.InvokeArgs {

    public static final BucketCorsRule Empty = new BucketCorsRule();

    /**
     * Headers that are specified in the Access-Control-Request-Headers header.
     * 
     */
    @Import(name="allowedHeaders")
      private final @Nullable List<String> allowedHeaders;

    public List<String> getAllowedHeaders() {
        return this.allowedHeaders == null ? List.of() : this.allowedHeaders;
    }

    /**
     * An HTTP method that you allow the origin to execute.
     * 
     */
    @Import(name="allowedMethods", required=true)
      private final List<BucketCorsRuleAllowedMethodsItem> allowedMethods;

    public List<BucketCorsRuleAllowedMethodsItem> getAllowedMethods() {
        return this.allowedMethods;
    }

    /**
     * One or more origins you want customers to be able to access the bucket from.
     * 
     */
    @Import(name="allowedOrigins", required=true)
      private final List<String> allowedOrigins;

    public List<String> getAllowedOrigins() {
        return this.allowedOrigins;
    }

    /**
     * One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).
     * 
     */
    @Import(name="exposedHeaders")
      private final @Nullable List<String> exposedHeaders;

    public List<String> getExposedHeaders() {
        return this.exposedHeaders == null ? List.of() : this.exposedHeaders;
    }

    /**
     * A unique identifier for this rule.
     * 
     */
    @Import(name="id")
      private final @Nullable String id;

    public Optional<String> getId() {
        return this.id == null ? Optional.empty() : Optional.ofNullable(this.id);
    }

    /**
     * The time in seconds that your browser is to cache the preflight response for the specified resource.
     * 
     */
    @Import(name="maxAge")
      private final @Nullable Integer maxAge;

    public Optional<Integer> getMaxAge() {
        return this.maxAge == null ? Optional.empty() : Optional.ofNullable(this.maxAge);
    }

    public BucketCorsRule(
        @Nullable List<String> allowedHeaders,
        List<BucketCorsRuleAllowedMethodsItem> allowedMethods,
        List<String> allowedOrigins,
        @Nullable List<String> exposedHeaders,
        @Nullable String id,
        @Nullable Integer maxAge) {
        this.allowedHeaders = allowedHeaders;
        this.allowedMethods = Objects.requireNonNull(allowedMethods, "expected parameter 'allowedMethods' to be non-null");
        this.allowedOrigins = Objects.requireNonNull(allowedOrigins, "expected parameter 'allowedOrigins' to be non-null");
        this.exposedHeaders = exposedHeaders;
        this.id = id;
        this.maxAge = maxAge;
    }

    private BucketCorsRule() {
        this.allowedHeaders = List.of();
        this.allowedMethods = List.of();
        this.allowedOrigins = List.of();
        this.exposedHeaders = List.of();
        this.id = null;
        this.maxAge = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketCorsRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> allowedHeaders;
        private List<BucketCorsRuleAllowedMethodsItem> allowedMethods;
        private List<String> allowedOrigins;
        private @Nullable List<String> exposedHeaders;
        private @Nullable String id;
        private @Nullable Integer maxAge;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketCorsRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedHeaders = defaults.allowedHeaders;
    	      this.allowedMethods = defaults.allowedMethods;
    	      this.allowedOrigins = defaults.allowedOrigins;
    	      this.exposedHeaders = defaults.exposedHeaders;
    	      this.id = defaults.id;
    	      this.maxAge = defaults.maxAge;
        }

        public Builder allowedHeaders(@Nullable List<String> allowedHeaders) {
            this.allowedHeaders = allowedHeaders;
            return this;
        }
        public Builder allowedHeaders(String... allowedHeaders) {
            return allowedHeaders(List.of(allowedHeaders));
        }
        public Builder allowedMethods(List<BucketCorsRuleAllowedMethodsItem> allowedMethods) {
            this.allowedMethods = Objects.requireNonNull(allowedMethods);
            return this;
        }
        public Builder allowedMethods(BucketCorsRuleAllowedMethodsItem... allowedMethods) {
            return allowedMethods(List.of(allowedMethods));
        }
        public Builder allowedOrigins(List<String> allowedOrigins) {
            this.allowedOrigins = Objects.requireNonNull(allowedOrigins);
            return this;
        }
        public Builder allowedOrigins(String... allowedOrigins) {
            return allowedOrigins(List.of(allowedOrigins));
        }
        public Builder exposedHeaders(@Nullable List<String> exposedHeaders) {
            this.exposedHeaders = exposedHeaders;
            return this;
        }
        public Builder exposedHeaders(String... exposedHeaders) {
            return exposedHeaders(List.of(exposedHeaders));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder maxAge(@Nullable Integer maxAge) {
            this.maxAge = maxAge;
            return this;
        }        public BucketCorsRule build() {
            return new BucketCorsRule(allowedHeaders, allowedMethods, allowedOrigins, exposedHeaders, id, maxAge);
        }
    }
}
