// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.evidently.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LaunchMetricDefinitionObjectArgs extends io.pulumi.resources.ResourceArgs {

    public static final LaunchMetricDefinitionObjectArgs Empty = new LaunchMetricDefinitionObjectArgs();

    /**
     * The JSON path to reference the entity id in the event.
     * 
     */
    @InputImport(name="entityIdKey", required=true)
        private final Input<String> entityIdKey;

    public Input<String> getEntityIdKey() {
        return this.entityIdKey;
    }

    /**
     * Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn't.
     * 
     */
    @InputImport(name="eventPattern", required=true)
        private final Input<String> eventPattern;

    public Input<String> getEventPattern() {
        return this.eventPattern;
    }

    @InputImport(name="metricName", required=true)
        private final Input<String> metricName;

    public Input<String> getMetricName() {
        return this.metricName;
    }

    @InputImport(name="unitLabel")
        private final @Nullable Input<String> unitLabel;

    public Input<String> getUnitLabel() {
        return this.unitLabel == null ? Input.empty() : this.unitLabel;
    }

    /**
     * The JSON path to reference the numerical metric value in the event.
     * 
     */
    @InputImport(name="valueKey", required=true)
        private final Input<String> valueKey;

    public Input<String> getValueKey() {
        return this.valueKey;
    }

    public LaunchMetricDefinitionObjectArgs(
        Input<String> entityIdKey,
        Input<String> eventPattern,
        Input<String> metricName,
        @Nullable Input<String> unitLabel,
        Input<String> valueKey) {
        this.entityIdKey = Objects.requireNonNull(entityIdKey, "expected parameter 'entityIdKey' to be non-null");
        this.eventPattern = Objects.requireNonNull(eventPattern, "expected parameter 'eventPattern' to be non-null");
        this.metricName = Objects.requireNonNull(metricName, "expected parameter 'metricName' to be non-null");
        this.unitLabel = unitLabel;
        this.valueKey = Objects.requireNonNull(valueKey, "expected parameter 'valueKey' to be non-null");
    }

    private LaunchMetricDefinitionObjectArgs() {
        this.entityIdKey = Input.empty();
        this.eventPattern = Input.empty();
        this.metricName = Input.empty();
        this.unitLabel = Input.empty();
        this.valueKey = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LaunchMetricDefinitionObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> entityIdKey;
        private Input<String> eventPattern;
        private Input<String> metricName;
        private @Nullable Input<String> unitLabel;
        private Input<String> valueKey;

        public Builder() {
    	      // Empty
        }

        public Builder(LaunchMetricDefinitionObjectArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityIdKey = defaults.entityIdKey;
    	      this.eventPattern = defaults.eventPattern;
    	      this.metricName = defaults.metricName;
    	      this.unitLabel = defaults.unitLabel;
    	      this.valueKey = defaults.valueKey;
        }

        public Builder setEntityIdKey(Input<String> entityIdKey) {
            this.entityIdKey = Objects.requireNonNull(entityIdKey);
            return this;
        }

        public Builder setEntityIdKey(String entityIdKey) {
            this.entityIdKey = Input.of(Objects.requireNonNull(entityIdKey));
            return this;
        }

        public Builder setEventPattern(Input<String> eventPattern) {
            this.eventPattern = Objects.requireNonNull(eventPattern);
            return this;
        }

        public Builder setEventPattern(String eventPattern) {
            this.eventPattern = Input.of(Objects.requireNonNull(eventPattern));
            return this;
        }

        public Builder setMetricName(Input<String> metricName) {
            this.metricName = Objects.requireNonNull(metricName);
            return this;
        }

        public Builder setMetricName(String metricName) {
            this.metricName = Input.of(Objects.requireNonNull(metricName));
            return this;
        }

        public Builder setUnitLabel(@Nullable Input<String> unitLabel) {
            this.unitLabel = unitLabel;
            return this;
        }

        public Builder setUnitLabel(@Nullable String unitLabel) {
            this.unitLabel = Input.ofNullable(unitLabel);
            return this;
        }

        public Builder setValueKey(Input<String> valueKey) {
            this.valueKey = Objects.requireNonNull(valueKey);
            return this;
        }

        public Builder setValueKey(String valueKey) {
            this.valueKey = Input.of(Objects.requireNonNull(valueKey));
            return this;
        }
        public LaunchMetricDefinitionObjectArgs build() {
            return new LaunchMetricDefinitionObjectArgs(entityIdKey, eventPattern, metricName, unitLabel, valueKey);
        }
    }
}
