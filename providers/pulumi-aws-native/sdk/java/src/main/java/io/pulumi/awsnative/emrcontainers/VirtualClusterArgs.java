// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.emrcontainers;

import io.pulumi.awsnative.emrcontainers.inputs.VirtualClusterContainerProviderArgs;
import io.pulumi.awsnative.emrcontainers.inputs.VirtualClusterTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualClusterArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualClusterArgs Empty = new VirtualClusterArgs();

    /**
     * Container provider of the virtual cluster.
     * 
     */
    @Import(name="containerProvider", required=true)
      private final Output<VirtualClusterContainerProviderArgs> containerProvider;

    public Output<VirtualClusterContainerProviderArgs> getContainerProvider() {
        return this.containerProvider;
    }

    /**
     * Name of the virtual cluster.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * An array of key-value pairs to apply to this virtual cluster.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<VirtualClusterTagArgs>> tags;

    public Output<List<VirtualClusterTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public VirtualClusterArgs(
        Output<VirtualClusterContainerProviderArgs> containerProvider,
        @Nullable Output<String> name,
        @Nullable Output<List<VirtualClusterTagArgs>> tags) {
        this.containerProvider = Objects.requireNonNull(containerProvider, "expected parameter 'containerProvider' to be non-null");
        this.name = name;
        this.tags = tags;
    }

    private VirtualClusterArgs() {
        this.containerProvider = Output.empty();
        this.name = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<VirtualClusterContainerProviderArgs> containerProvider;
        private @Nullable Output<String> name;
        private @Nullable Output<List<VirtualClusterTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerProvider = defaults.containerProvider;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder containerProvider(Output<VirtualClusterContainerProviderArgs> containerProvider) {
            this.containerProvider = Objects.requireNonNull(containerProvider);
            return this;
        }
        public Builder containerProvider(VirtualClusterContainerProviderArgs containerProvider) {
            this.containerProvider = Output.of(Objects.requireNonNull(containerProvider));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder tags(@Nullable Output<List<VirtualClusterTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<VirtualClusterTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tags(VirtualClusterTagArgs... tags) {
            return tags(List.of(tags));
        }        public VirtualClusterArgs build() {
            return new VirtualClusterArgs(containerProvider, name, tags);
        }
    }
}
