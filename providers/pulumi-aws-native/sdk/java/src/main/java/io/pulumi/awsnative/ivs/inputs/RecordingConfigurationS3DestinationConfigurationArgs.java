// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ivs.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Recording S3 Destination Configuration.
 * 
 */
public final class RecordingConfigurationS3DestinationConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final RecordingConfigurationS3DestinationConfigurationArgs Empty = new RecordingConfigurationS3DestinationConfigurationArgs();

    @InputImport(name="bucketName", required=true)
    private final Input<String> bucketName;

    public Input<String> getBucketName() {
        return this.bucketName;
    }

    public RecordingConfigurationS3DestinationConfigurationArgs(Input<String> bucketName) {
        this.bucketName = Objects.requireNonNull(bucketName, "expected parameter 'bucketName' to be non-null");
    }

    private RecordingConfigurationS3DestinationConfigurationArgs() {
        this.bucketName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecordingConfigurationS3DestinationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> bucketName;

        public Builder() {
    	      // Empty
        }

        public Builder(RecordingConfigurationS3DestinationConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
        }

        public Builder setBucketName(Input<String> bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }

        public Builder setBucketName(String bucketName) {
            this.bucketName = Input.of(Objects.requireNonNull(bucketName));
            return this;
        }

        public RecordingConfigurationS3DestinationConfigurationArgs build() {
            return new RecordingConfigurationS3DestinationConfigurationArgs(bucketName);
        }
    }
}
