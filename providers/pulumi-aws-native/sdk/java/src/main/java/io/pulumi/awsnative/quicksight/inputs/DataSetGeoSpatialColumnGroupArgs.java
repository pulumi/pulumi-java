// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight.inputs;

import io.pulumi.awsnative.quicksight.enums.DataSetGeoSpatialCountryCode;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * <p>Geospatial column group that denotes a hierarchy.</p>
 * 
 */
public final class DataSetGeoSpatialColumnGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataSetGeoSpatialColumnGroupArgs Empty = new DataSetGeoSpatialColumnGroupArgs();

    /**
     * <p>Columns in this hierarchy.</p>
     * 
     */
    @Import(name="columns", required=true)
      private final Output<List<String>> columns;

    public Output<List<String>> getColumns() {
        return this.columns;
    }

    @Import(name="countryCode")
      private final @Nullable Output<DataSetGeoSpatialCountryCode> countryCode;

    public Output<DataSetGeoSpatialCountryCode> getCountryCode() {
        return this.countryCode == null ? Codegen.empty() : this.countryCode;
    }

    /**
     * <p>A display name for the hierarchy.</p>
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    public DataSetGeoSpatialColumnGroupArgs(
        Output<List<String>> columns,
        @Nullable Output<DataSetGeoSpatialCountryCode> countryCode,
        Output<String> name) {
        this.columns = Objects.requireNonNull(columns, "expected parameter 'columns' to be non-null");
        this.countryCode = countryCode;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private DataSetGeoSpatialColumnGroupArgs() {
        this.columns = Codegen.empty();
        this.countryCode = Codegen.empty();
        this.name = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSetGeoSpatialColumnGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> columns;
        private @Nullable Output<DataSetGeoSpatialCountryCode> countryCode;
        private Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSetGeoSpatialColumnGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columns = defaults.columns;
    	      this.countryCode = defaults.countryCode;
    	      this.name = defaults.name;
        }

        public Builder columns(Output<List<String>> columns) {
            this.columns = Objects.requireNonNull(columns);
            return this;
        }
        public Builder columns(List<String> columns) {
            this.columns = Output.of(Objects.requireNonNull(columns));
            return this;
        }
        public Builder columns(String... columns) {
            return columns(List.of(columns));
        }
        public Builder countryCode(@Nullable Output<DataSetGeoSpatialCountryCode> countryCode) {
            this.countryCode = countryCode;
            return this;
        }
        public Builder countryCode(@Nullable DataSetGeoSpatialCountryCode countryCode) {
            this.countryCode = Codegen.ofNullable(countryCode);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }        public DataSetGeoSpatialColumnGroupArgs build() {
            return new DataSetGeoSpatialColumnGroupArgs(columns, countryCode, name);
        }
    }
}
