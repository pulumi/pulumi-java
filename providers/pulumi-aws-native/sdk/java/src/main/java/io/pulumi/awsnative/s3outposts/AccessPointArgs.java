// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3outposts;

import io.pulumi.awsnative.s3outposts.inputs.AccessPointVpcConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccessPointArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccessPointArgs Empty = new AccessPointArgs();

    @InputImport(name="bucket", required=true)
    private final Input<String> bucket;

    public Input<String> getBucket() {
        return this.bucket;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="policy")
    private final @Nullable Input<Object> policy;

    public Input<Object> getPolicy() {
        return this.policy == null ? Input.empty() : this.policy;
    }

    @InputImport(name="vpcConfiguration", required=true)
    private final Input<AccessPointVpcConfigurationArgs> vpcConfiguration;

    public Input<AccessPointVpcConfigurationArgs> getVpcConfiguration() {
        return this.vpcConfiguration;
    }

    public AccessPointArgs(
        Input<String> bucket,
        @Nullable Input<String> name,
        @Nullable Input<Object> policy,
        Input<AccessPointVpcConfigurationArgs> vpcConfiguration) {
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.name = name;
        this.policy = policy;
        this.vpcConfiguration = Objects.requireNonNull(vpcConfiguration, "expected parameter 'vpcConfiguration' to be non-null");
    }

    private AccessPointArgs() {
        this.bucket = Input.empty();
        this.name = Input.empty();
        this.policy = Input.empty();
        this.vpcConfiguration = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> bucket;
        private @Nullable Input<String> name;
        private @Nullable Input<Object> policy;
        private Input<AccessPointVpcConfigurationArgs> vpcConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessPointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.name = defaults.name;
    	      this.policy = defaults.policy;
    	      this.vpcConfiguration = defaults.vpcConfiguration;
        }

        public Builder setBucket(Input<String> bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }

        public Builder setBucket(String bucket) {
            this.bucket = Input.of(Objects.requireNonNull(bucket));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPolicy(@Nullable Input<Object> policy) {
            this.policy = policy;
            return this;
        }

        public Builder setPolicy(@Nullable Object policy) {
            this.policy = Input.ofNullable(policy);
            return this;
        }

        public Builder setVpcConfiguration(Input<AccessPointVpcConfigurationArgs> vpcConfiguration) {
            this.vpcConfiguration = Objects.requireNonNull(vpcConfiguration);
            return this;
        }

        public Builder setVpcConfiguration(AccessPointVpcConfigurationArgs vpcConfiguration) {
            this.vpcConfiguration = Input.of(Objects.requireNonNull(vpcConfiguration));
            return this;
        }

        public AccessPointArgs build() {
            return new AccessPointArgs(bucket, name, policy, vpcConfiguration);
        }
    }
}
