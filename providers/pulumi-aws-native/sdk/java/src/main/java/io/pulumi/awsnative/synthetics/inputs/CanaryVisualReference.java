// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.synthetics.inputs;

import io.pulumi.awsnative.synthetics.inputs.CanaryBaseScreenshot;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CanaryVisualReference extends io.pulumi.resources.InvokeArgs {

    public static final CanaryVisualReference Empty = new CanaryVisualReference();

    /**
     * Canary run id to be used as base reference for visual testing
     * 
     */
    @Import(name="baseCanaryRunId", required=true)
      private final String baseCanaryRunId;

    public String getBaseCanaryRunId() {
        return this.baseCanaryRunId;
    }

    /**
     * List of screenshots used as base reference for visual testing
     * 
     */
    @Import(name="baseScreenshots")
      private final @Nullable List<CanaryBaseScreenshot> baseScreenshots;

    public List<CanaryBaseScreenshot> getBaseScreenshots() {
        return this.baseScreenshots == null ? List.of() : this.baseScreenshots;
    }

    public CanaryVisualReference(
        String baseCanaryRunId,
        @Nullable List<CanaryBaseScreenshot> baseScreenshots) {
        this.baseCanaryRunId = Objects.requireNonNull(baseCanaryRunId, "expected parameter 'baseCanaryRunId' to be non-null");
        this.baseScreenshots = baseScreenshots;
    }

    private CanaryVisualReference() {
        this.baseCanaryRunId = null;
        this.baseScreenshots = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CanaryVisualReference defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String baseCanaryRunId;
        private @Nullable List<CanaryBaseScreenshot> baseScreenshots;

        public Builder() {
    	      // Empty
        }

        public Builder(CanaryVisualReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseCanaryRunId = defaults.baseCanaryRunId;
    	      this.baseScreenshots = defaults.baseScreenshots;
        }

        public Builder baseCanaryRunId(String baseCanaryRunId) {
            this.baseCanaryRunId = Objects.requireNonNull(baseCanaryRunId);
            return this;
        }

        public Builder baseScreenshots(@Nullable List<CanaryBaseScreenshot> baseScreenshots) {
            this.baseScreenshots = baseScreenshots;
            return this;
        }
        public CanaryVisualReference build() {
            return new CanaryVisualReference(baseCanaryRunId, baseScreenshots);
        }
    }
}
