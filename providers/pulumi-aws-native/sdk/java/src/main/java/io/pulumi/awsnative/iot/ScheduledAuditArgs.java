// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iot;

import io.pulumi.awsnative.iot.enums.ScheduledAuditDayOfWeek;
import io.pulumi.awsnative.iot.enums.ScheduledAuditFrequency;
import io.pulumi.awsnative.iot.inputs.ScheduledAuditTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ScheduledAuditArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScheduledAuditArgs Empty = new ScheduledAuditArgs();

    /**
     * The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY.
     * 
     */
    @Import(name="dayOfMonth")
      private final @Nullable Output<String> dayOfMonth;

    public Output<String> dayOfMonth() {
        return this.dayOfMonth == null ? Codegen.empty() : this.dayOfMonth;
    }

    /**
     * The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
     * 
     */
    @Import(name="dayOfWeek")
      private final @Nullable Output<ScheduledAuditDayOfWeek> dayOfWeek;

    public Output<ScheduledAuditDayOfWeek> dayOfWeek() {
        return this.dayOfWeek == null ? Codegen.empty() : this.dayOfWeek;
    }

    /**
     * How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
     * 
     */
    @Import(name="frequency", required=true)
      private final Output<ScheduledAuditFrequency> frequency;

    public Output<ScheduledAuditFrequency> frequency() {
        return this.frequency;
    }

    /**
     * The name you want to give to the scheduled audit.
     * 
     */
    @Import(name="scheduledAuditName")
      private final @Nullable Output<String> scheduledAuditName;

    public Output<String> scheduledAuditName() {
        return this.scheduledAuditName == null ? Codegen.empty() : this.scheduledAuditName;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<ScheduledAuditTagArgs>> tags;

    public Output<List<ScheduledAuditTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * Which checks are performed during the scheduled audit. Checks must be enabled for your account.
     * 
     */
    @Import(name="targetCheckNames", required=true)
      private final Output<List<String>> targetCheckNames;

    public Output<List<String>> targetCheckNames() {
        return this.targetCheckNames;
    }

    public ScheduledAuditArgs(
        @Nullable Output<String> dayOfMonth,
        @Nullable Output<ScheduledAuditDayOfWeek> dayOfWeek,
        Output<ScheduledAuditFrequency> frequency,
        @Nullable Output<String> scheduledAuditName,
        @Nullable Output<List<ScheduledAuditTagArgs>> tags,
        Output<List<String>> targetCheckNames) {
        this.dayOfMonth = dayOfMonth;
        this.dayOfWeek = dayOfWeek;
        this.frequency = Objects.requireNonNull(frequency, "expected parameter 'frequency' to be non-null");
        this.scheduledAuditName = scheduledAuditName;
        this.tags = tags;
        this.targetCheckNames = Objects.requireNonNull(targetCheckNames, "expected parameter 'targetCheckNames' to be non-null");
    }

    private ScheduledAuditArgs() {
        this.dayOfMonth = Codegen.empty();
        this.dayOfWeek = Codegen.empty();
        this.frequency = Codegen.empty();
        this.scheduledAuditName = Codegen.empty();
        this.tags = Codegen.empty();
        this.targetCheckNames = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduledAuditArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> dayOfMonth;
        private @Nullable Output<ScheduledAuditDayOfWeek> dayOfWeek;
        private Output<ScheduledAuditFrequency> frequency;
        private @Nullable Output<String> scheduledAuditName;
        private @Nullable Output<List<ScheduledAuditTagArgs>> tags;
        private Output<List<String>> targetCheckNames;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduledAuditArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfMonth = defaults.dayOfMonth;
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.frequency = defaults.frequency;
    	      this.scheduledAuditName = defaults.scheduledAuditName;
    	      this.tags = defaults.tags;
    	      this.targetCheckNames = defaults.targetCheckNames;
        }

        public Builder dayOfMonth(@Nullable Output<String> dayOfMonth) {
            this.dayOfMonth = dayOfMonth;
            return this;
        }
        public Builder dayOfMonth(@Nullable String dayOfMonth) {
            this.dayOfMonth = Codegen.ofNullable(dayOfMonth);
            return this;
        }
        public Builder dayOfWeek(@Nullable Output<ScheduledAuditDayOfWeek> dayOfWeek) {
            this.dayOfWeek = dayOfWeek;
            return this;
        }
        public Builder dayOfWeek(@Nullable ScheduledAuditDayOfWeek dayOfWeek) {
            this.dayOfWeek = Codegen.ofNullable(dayOfWeek);
            return this;
        }
        public Builder frequency(Output<ScheduledAuditFrequency> frequency) {
            this.frequency = Objects.requireNonNull(frequency);
            return this;
        }
        public Builder frequency(ScheduledAuditFrequency frequency) {
            this.frequency = Output.of(Objects.requireNonNull(frequency));
            return this;
        }
        public Builder scheduledAuditName(@Nullable Output<String> scheduledAuditName) {
            this.scheduledAuditName = scheduledAuditName;
            return this;
        }
        public Builder scheduledAuditName(@Nullable String scheduledAuditName) {
            this.scheduledAuditName = Codegen.ofNullable(scheduledAuditName);
            return this;
        }
        public Builder tags(@Nullable Output<List<ScheduledAuditTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<ScheduledAuditTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(ScheduledAuditTagArgs... tags) {
            return tags(List.of(tags));
        }
        public Builder targetCheckNames(Output<List<String>> targetCheckNames) {
            this.targetCheckNames = Objects.requireNonNull(targetCheckNames);
            return this;
        }
        public Builder targetCheckNames(List<String> targetCheckNames) {
            this.targetCheckNames = Output.of(Objects.requireNonNull(targetCheckNames));
            return this;
        }
        public Builder targetCheckNames(String... targetCheckNames) {
            return targetCheckNames(List.of(targetCheckNames));
        }        public ScheduledAuditArgs build() {
            return new ScheduledAuditArgs(dayOfMonth, dayOfWeek, frequency, scheduledAuditName, tags, targetCheckNames);
        }
    }
}
