// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudfront.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PublicKeyConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final PublicKeyConfigArgs Empty = new PublicKeyConfigArgs();

    @InputImport(name="callerReference", required=true)
      private final Output<String> callerReference;

    public Output<String> getCallerReference() {
        return this.callerReference;
    }

    @InputImport(name="comment")
      private final @Nullable Output<String> comment;

    public Output<String> getComment() {
        return this.comment == null ? Output.empty() : this.comment;
    }

    @InputImport(name="encodedKey", required=true)
      private final Output<String> encodedKey;

    public Output<String> getEncodedKey() {
        return this.encodedKey;
    }

    @InputImport(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    public PublicKeyConfigArgs(
        Output<String> callerReference,
        @Nullable Output<String> comment,
        Output<String> encodedKey,
        Output<String> name) {
        this.callerReference = Objects.requireNonNull(callerReference, "expected parameter 'callerReference' to be non-null");
        this.comment = comment;
        this.encodedKey = Objects.requireNonNull(encodedKey, "expected parameter 'encodedKey' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private PublicKeyConfigArgs() {
        this.callerReference = Output.empty();
        this.comment = Output.empty();
        this.encodedKey = Output.empty();
        this.name = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicKeyConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> callerReference;
        private @Nullable Output<String> comment;
        private Output<String> encodedKey;
        private Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(PublicKeyConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.callerReference = defaults.callerReference;
    	      this.comment = defaults.comment;
    	      this.encodedKey = defaults.encodedKey;
    	      this.name = defaults.name;
        }

        public Builder callerReference(Output<String> callerReference) {
            this.callerReference = Objects.requireNonNull(callerReference);
            return this;
        }

        public Builder callerReference(String callerReference) {
            this.callerReference = Output.of(Objects.requireNonNull(callerReference));
            return this;
        }

        public Builder comment(@Nullable Output<String> comment) {
            this.comment = comment;
            return this;
        }

        public Builder comment(@Nullable String comment) {
            this.comment = Output.ofNullable(comment);
            return this;
        }

        public Builder encodedKey(Output<String> encodedKey) {
            this.encodedKey = Objects.requireNonNull(encodedKey);
            return this;
        }

        public Builder encodedKey(String encodedKey) {
            this.encodedKey = Output.of(Objects.requireNonNull(encodedKey));
            return this;
        }

        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public PublicKeyConfigArgs build() {
            return new PublicKeyConfigArgs(callerReference, comment, encodedKey, name);
        }
    }
}
