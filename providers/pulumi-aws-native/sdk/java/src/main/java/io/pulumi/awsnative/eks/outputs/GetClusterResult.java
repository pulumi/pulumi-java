// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.eks.outputs;

import io.pulumi.awsnative.eks.outputs.ClusterLogging;
import io.pulumi.awsnative.eks.outputs.ClusterResourcesVpcConfig;
import io.pulumi.awsnative.eks.outputs.ClusterTag;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterResult {
    /**
     * The ARN of the cluster, such as arn:aws:eks:us-west-2:666666666666:cluster/prod.
     * 
     */
    private final @Nullable String arn;
    /**
     * The certificate-authority-data for your cluster.
     * 
     */
    private final @Nullable String certificateAuthorityData;
    /**
     * The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control plane to data plane communication.
     * 
     */
    private final @Nullable String clusterSecurityGroupId;
    /**
     * Amazon Resource Name (ARN) or alias of the customer master key (CMK).
     * 
     */
    private final @Nullable String encryptionConfigKeyArn;
    /**
     * The endpoint for your Kubernetes API server, such as https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com.
     * 
     */
    private final @Nullable String endpoint;
    private final @Nullable ClusterLogging logging;
    /**
     * The issuer URL for the cluster's OIDC identity provider, such as https://oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E. If you need to remove https:// from this output value, you can include the following code in your template.
     * 
     */
    private final @Nullable String openIdConnectIssuerUrl;
    private final @Nullable ClusterResourcesVpcConfig resourcesVpcConfig;
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    private final @Nullable List<ClusterTag> tags;
    /**
     * The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in Amazon EKS is used.
     * 
     */
    private final @Nullable String version;

    @CustomType.Constructor
    private GetClusterResult(
        @CustomType.Parameter("arn") @Nullable String arn,
        @CustomType.Parameter("certificateAuthorityData") @Nullable String certificateAuthorityData,
        @CustomType.Parameter("clusterSecurityGroupId") @Nullable String clusterSecurityGroupId,
        @CustomType.Parameter("encryptionConfigKeyArn") @Nullable String encryptionConfigKeyArn,
        @CustomType.Parameter("endpoint") @Nullable String endpoint,
        @CustomType.Parameter("logging") @Nullable ClusterLogging logging,
        @CustomType.Parameter("openIdConnectIssuerUrl") @Nullable String openIdConnectIssuerUrl,
        @CustomType.Parameter("resourcesVpcConfig") @Nullable ClusterResourcesVpcConfig resourcesVpcConfig,
        @CustomType.Parameter("tags") @Nullable List<ClusterTag> tags,
        @CustomType.Parameter("version") @Nullable String version) {
        this.arn = arn;
        this.certificateAuthorityData = certificateAuthorityData;
        this.clusterSecurityGroupId = clusterSecurityGroupId;
        this.encryptionConfigKeyArn = encryptionConfigKeyArn;
        this.endpoint = endpoint;
        this.logging = logging;
        this.openIdConnectIssuerUrl = openIdConnectIssuerUrl;
        this.resourcesVpcConfig = resourcesVpcConfig;
        this.tags = tags;
        this.version = version;
    }

    /**
     * The ARN of the cluster, such as arn:aws:eks:us-west-2:666666666666:cluster/prod.
     * 
    */
    public Optional<String> getArn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * The certificate-authority-data for your cluster.
     * 
    */
    public Optional<String> getCertificateAuthorityData() {
        return Optional.ofNullable(this.certificateAuthorityData);
    }
    /**
     * The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control plane to data plane communication.
     * 
    */
    public Optional<String> getClusterSecurityGroupId() {
        return Optional.ofNullable(this.clusterSecurityGroupId);
    }
    /**
     * Amazon Resource Name (ARN) or alias of the customer master key (CMK).
     * 
    */
    public Optional<String> getEncryptionConfigKeyArn() {
        return Optional.ofNullable(this.encryptionConfigKeyArn);
    }
    /**
     * The endpoint for your Kubernetes API server, such as https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com.
     * 
    */
    public Optional<String> getEndpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    public Optional<ClusterLogging> getLogging() {
        return Optional.ofNullable(this.logging);
    }
    /**
     * The issuer URL for the cluster's OIDC identity provider, such as https://oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E. If you need to remove https:// from this output value, you can include the following code in your template.
     * 
    */
    public Optional<String> getOpenIdConnectIssuerUrl() {
        return Optional.ofNullable(this.openIdConnectIssuerUrl);
    }
    public Optional<ClusterResourcesVpcConfig> getResourcesVpcConfig() {
        return Optional.ofNullable(this.resourcesVpcConfig);
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
    */
    public List<ClusterTag> getTags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in Amazon EKS is used.
     * 
    */
    public Optional<String> getVersion() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String certificateAuthorityData;
        private @Nullable String clusterSecurityGroupId;
        private @Nullable String encryptionConfigKeyArn;
        private @Nullable String endpoint;
        private @Nullable ClusterLogging logging;
        private @Nullable String openIdConnectIssuerUrl;
        private @Nullable ClusterResourcesVpcConfig resourcesVpcConfig;
        private @Nullable List<ClusterTag> tags;
        private @Nullable String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.certificateAuthorityData = defaults.certificateAuthorityData;
    	      this.clusterSecurityGroupId = defaults.clusterSecurityGroupId;
    	      this.encryptionConfigKeyArn = defaults.encryptionConfigKeyArn;
    	      this.endpoint = defaults.endpoint;
    	      this.logging = defaults.logging;
    	      this.openIdConnectIssuerUrl = defaults.openIdConnectIssuerUrl;
    	      this.resourcesVpcConfig = defaults.resourcesVpcConfig;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }

        public Builder certificateAuthorityData(@Nullable String certificateAuthorityData) {
            this.certificateAuthorityData = certificateAuthorityData;
            return this;
        }

        public Builder clusterSecurityGroupId(@Nullable String clusterSecurityGroupId) {
            this.clusterSecurityGroupId = clusterSecurityGroupId;
            return this;
        }

        public Builder encryptionConfigKeyArn(@Nullable String encryptionConfigKeyArn) {
            this.encryptionConfigKeyArn = encryptionConfigKeyArn;
            return this;
        }

        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = endpoint;
            return this;
        }

        public Builder logging(@Nullable ClusterLogging logging) {
            this.logging = logging;
            return this;
        }

        public Builder openIdConnectIssuerUrl(@Nullable String openIdConnectIssuerUrl) {
            this.openIdConnectIssuerUrl = openIdConnectIssuerUrl;
            return this;
        }

        public Builder resourcesVpcConfig(@Nullable ClusterResourcesVpcConfig resourcesVpcConfig) {
            this.resourcesVpcConfig = resourcesVpcConfig;
            return this;
        }

        public Builder tags(@Nullable List<ClusterTag> tags) {
            this.tags = tags;
            return this;
        }

        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetClusterResult build() {
            return new GetClusterResult(arn, certificateAuthorityData, clusterSecurityGroupId, encryptionConfigKeyArn, endpoint, logging, openIdConnectIssuerUrl, resourcesVpcConfig, tags, version);
        }
    }
}
