// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2.inputs;

import io.pulumi.awsnative.wafv2.inputs.RuleGroupAndStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupByteMatchStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupGeoMatchStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupIPSetReferenceStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupLabelMatchStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupNotStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupOrStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupRateBasedStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupRegexMatchStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupRegexPatternSetReferenceStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupSizeConstraintStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupSqliMatchStatementArgs;
import io.pulumi.awsnative.wafv2.inputs.RuleGroupXssMatchStatementArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
 * 
 */
public final class RuleGroupStatementArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleGroupStatementArgs Empty = new RuleGroupStatementArgs();

    @InputImport(name="andStatement")
    private final @Nullable Input<RuleGroupAndStatementArgs> andStatement;

    public Input<RuleGroupAndStatementArgs> getAndStatement() {
        return this.andStatement == null ? Input.empty() : this.andStatement;
    }

    @InputImport(name="byteMatchStatement")
    private final @Nullable Input<RuleGroupByteMatchStatementArgs> byteMatchStatement;

    public Input<RuleGroupByteMatchStatementArgs> getByteMatchStatement() {
        return this.byteMatchStatement == null ? Input.empty() : this.byteMatchStatement;
    }

    @InputImport(name="geoMatchStatement")
    private final @Nullable Input<RuleGroupGeoMatchStatementArgs> geoMatchStatement;

    public Input<RuleGroupGeoMatchStatementArgs> getGeoMatchStatement() {
        return this.geoMatchStatement == null ? Input.empty() : this.geoMatchStatement;
    }

    @InputImport(name="iPSetReferenceStatement")
    private final @Nullable Input<RuleGroupIPSetReferenceStatementArgs> iPSetReferenceStatement;

    public Input<RuleGroupIPSetReferenceStatementArgs> getIPSetReferenceStatement() {
        return this.iPSetReferenceStatement == null ? Input.empty() : this.iPSetReferenceStatement;
    }

    @InputImport(name="labelMatchStatement")
    private final @Nullable Input<RuleGroupLabelMatchStatementArgs> labelMatchStatement;

    public Input<RuleGroupLabelMatchStatementArgs> getLabelMatchStatement() {
        return this.labelMatchStatement == null ? Input.empty() : this.labelMatchStatement;
    }

    @InputImport(name="notStatement")
    private final @Nullable Input<RuleGroupNotStatementArgs> notStatement;

    public Input<RuleGroupNotStatementArgs> getNotStatement() {
        return this.notStatement == null ? Input.empty() : this.notStatement;
    }

    @InputImport(name="orStatement")
    private final @Nullable Input<RuleGroupOrStatementArgs> orStatement;

    public Input<RuleGroupOrStatementArgs> getOrStatement() {
        return this.orStatement == null ? Input.empty() : this.orStatement;
    }

    @InputImport(name="rateBasedStatement")
    private final @Nullable Input<RuleGroupRateBasedStatementArgs> rateBasedStatement;

    public Input<RuleGroupRateBasedStatementArgs> getRateBasedStatement() {
        return this.rateBasedStatement == null ? Input.empty() : this.rateBasedStatement;
    }

    @InputImport(name="regexMatchStatement")
    private final @Nullable Input<RuleGroupRegexMatchStatementArgs> regexMatchStatement;

    public Input<RuleGroupRegexMatchStatementArgs> getRegexMatchStatement() {
        return this.regexMatchStatement == null ? Input.empty() : this.regexMatchStatement;
    }

    @InputImport(name="regexPatternSetReferenceStatement")
    private final @Nullable Input<RuleGroupRegexPatternSetReferenceStatementArgs> regexPatternSetReferenceStatement;

    public Input<RuleGroupRegexPatternSetReferenceStatementArgs> getRegexPatternSetReferenceStatement() {
        return this.regexPatternSetReferenceStatement == null ? Input.empty() : this.regexPatternSetReferenceStatement;
    }

    @InputImport(name="sizeConstraintStatement")
    private final @Nullable Input<RuleGroupSizeConstraintStatementArgs> sizeConstraintStatement;

    public Input<RuleGroupSizeConstraintStatementArgs> getSizeConstraintStatement() {
        return this.sizeConstraintStatement == null ? Input.empty() : this.sizeConstraintStatement;
    }

    @InputImport(name="sqliMatchStatement")
    private final @Nullable Input<RuleGroupSqliMatchStatementArgs> sqliMatchStatement;

    public Input<RuleGroupSqliMatchStatementArgs> getSqliMatchStatement() {
        return this.sqliMatchStatement == null ? Input.empty() : this.sqliMatchStatement;
    }

    @InputImport(name="xssMatchStatement")
    private final @Nullable Input<RuleGroupXssMatchStatementArgs> xssMatchStatement;

    public Input<RuleGroupXssMatchStatementArgs> getXssMatchStatement() {
        return this.xssMatchStatement == null ? Input.empty() : this.xssMatchStatement;
    }

    public RuleGroupStatementArgs(
        @Nullable Input<RuleGroupAndStatementArgs> andStatement,
        @Nullable Input<RuleGroupByteMatchStatementArgs> byteMatchStatement,
        @Nullable Input<RuleGroupGeoMatchStatementArgs> geoMatchStatement,
        @Nullable Input<RuleGroupIPSetReferenceStatementArgs> iPSetReferenceStatement,
        @Nullable Input<RuleGroupLabelMatchStatementArgs> labelMatchStatement,
        @Nullable Input<RuleGroupNotStatementArgs> notStatement,
        @Nullable Input<RuleGroupOrStatementArgs> orStatement,
        @Nullable Input<RuleGroupRateBasedStatementArgs> rateBasedStatement,
        @Nullable Input<RuleGroupRegexMatchStatementArgs> regexMatchStatement,
        @Nullable Input<RuleGroupRegexPatternSetReferenceStatementArgs> regexPatternSetReferenceStatement,
        @Nullable Input<RuleGroupSizeConstraintStatementArgs> sizeConstraintStatement,
        @Nullable Input<RuleGroupSqliMatchStatementArgs> sqliMatchStatement,
        @Nullable Input<RuleGroupXssMatchStatementArgs> xssMatchStatement) {
        this.andStatement = andStatement;
        this.byteMatchStatement = byteMatchStatement;
        this.geoMatchStatement = geoMatchStatement;
        this.iPSetReferenceStatement = iPSetReferenceStatement;
        this.labelMatchStatement = labelMatchStatement;
        this.notStatement = notStatement;
        this.orStatement = orStatement;
        this.rateBasedStatement = rateBasedStatement;
        this.regexMatchStatement = regexMatchStatement;
        this.regexPatternSetReferenceStatement = regexPatternSetReferenceStatement;
        this.sizeConstraintStatement = sizeConstraintStatement;
        this.sqliMatchStatement = sqliMatchStatement;
        this.xssMatchStatement = xssMatchStatement;
    }

    private RuleGroupStatementArgs() {
        this.andStatement = Input.empty();
        this.byteMatchStatement = Input.empty();
        this.geoMatchStatement = Input.empty();
        this.iPSetReferenceStatement = Input.empty();
        this.labelMatchStatement = Input.empty();
        this.notStatement = Input.empty();
        this.orStatement = Input.empty();
        this.rateBasedStatement = Input.empty();
        this.regexMatchStatement = Input.empty();
        this.regexPatternSetReferenceStatement = Input.empty();
        this.sizeConstraintStatement = Input.empty();
        this.sqliMatchStatement = Input.empty();
        this.xssMatchStatement = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleGroupStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<RuleGroupAndStatementArgs> andStatement;
        private @Nullable Input<RuleGroupByteMatchStatementArgs> byteMatchStatement;
        private @Nullable Input<RuleGroupGeoMatchStatementArgs> geoMatchStatement;
        private @Nullable Input<RuleGroupIPSetReferenceStatementArgs> iPSetReferenceStatement;
        private @Nullable Input<RuleGroupLabelMatchStatementArgs> labelMatchStatement;
        private @Nullable Input<RuleGroupNotStatementArgs> notStatement;
        private @Nullable Input<RuleGroupOrStatementArgs> orStatement;
        private @Nullable Input<RuleGroupRateBasedStatementArgs> rateBasedStatement;
        private @Nullable Input<RuleGroupRegexMatchStatementArgs> regexMatchStatement;
        private @Nullable Input<RuleGroupRegexPatternSetReferenceStatementArgs> regexPatternSetReferenceStatement;
        private @Nullable Input<RuleGroupSizeConstraintStatementArgs> sizeConstraintStatement;
        private @Nullable Input<RuleGroupSqliMatchStatementArgs> sqliMatchStatement;
        private @Nullable Input<RuleGroupXssMatchStatementArgs> xssMatchStatement;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleGroupStatementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.andStatement = defaults.andStatement;
    	      this.byteMatchStatement = defaults.byteMatchStatement;
    	      this.geoMatchStatement = defaults.geoMatchStatement;
    	      this.iPSetReferenceStatement = defaults.iPSetReferenceStatement;
    	      this.labelMatchStatement = defaults.labelMatchStatement;
    	      this.notStatement = defaults.notStatement;
    	      this.orStatement = defaults.orStatement;
    	      this.rateBasedStatement = defaults.rateBasedStatement;
    	      this.regexMatchStatement = defaults.regexMatchStatement;
    	      this.regexPatternSetReferenceStatement = defaults.regexPatternSetReferenceStatement;
    	      this.sizeConstraintStatement = defaults.sizeConstraintStatement;
    	      this.sqliMatchStatement = defaults.sqliMatchStatement;
    	      this.xssMatchStatement = defaults.xssMatchStatement;
        }

        public Builder setAndStatement(@Nullable Input<RuleGroupAndStatementArgs> andStatement) {
            this.andStatement = andStatement;
            return this;
        }

        public Builder setAndStatement(@Nullable RuleGroupAndStatementArgs andStatement) {
            this.andStatement = Input.ofNullable(andStatement);
            return this;
        }

        public Builder setByteMatchStatement(@Nullable Input<RuleGroupByteMatchStatementArgs> byteMatchStatement) {
            this.byteMatchStatement = byteMatchStatement;
            return this;
        }

        public Builder setByteMatchStatement(@Nullable RuleGroupByteMatchStatementArgs byteMatchStatement) {
            this.byteMatchStatement = Input.ofNullable(byteMatchStatement);
            return this;
        }

        public Builder setGeoMatchStatement(@Nullable Input<RuleGroupGeoMatchStatementArgs> geoMatchStatement) {
            this.geoMatchStatement = geoMatchStatement;
            return this;
        }

        public Builder setGeoMatchStatement(@Nullable RuleGroupGeoMatchStatementArgs geoMatchStatement) {
            this.geoMatchStatement = Input.ofNullable(geoMatchStatement);
            return this;
        }

        public Builder setIPSetReferenceStatement(@Nullable Input<RuleGroupIPSetReferenceStatementArgs> iPSetReferenceStatement) {
            this.iPSetReferenceStatement = iPSetReferenceStatement;
            return this;
        }

        public Builder setIPSetReferenceStatement(@Nullable RuleGroupIPSetReferenceStatementArgs iPSetReferenceStatement) {
            this.iPSetReferenceStatement = Input.ofNullable(iPSetReferenceStatement);
            return this;
        }

        public Builder setLabelMatchStatement(@Nullable Input<RuleGroupLabelMatchStatementArgs> labelMatchStatement) {
            this.labelMatchStatement = labelMatchStatement;
            return this;
        }

        public Builder setLabelMatchStatement(@Nullable RuleGroupLabelMatchStatementArgs labelMatchStatement) {
            this.labelMatchStatement = Input.ofNullable(labelMatchStatement);
            return this;
        }

        public Builder setNotStatement(@Nullable Input<RuleGroupNotStatementArgs> notStatement) {
            this.notStatement = notStatement;
            return this;
        }

        public Builder setNotStatement(@Nullable RuleGroupNotStatementArgs notStatement) {
            this.notStatement = Input.ofNullable(notStatement);
            return this;
        }

        public Builder setOrStatement(@Nullable Input<RuleGroupOrStatementArgs> orStatement) {
            this.orStatement = orStatement;
            return this;
        }

        public Builder setOrStatement(@Nullable RuleGroupOrStatementArgs orStatement) {
            this.orStatement = Input.ofNullable(orStatement);
            return this;
        }

        public Builder setRateBasedStatement(@Nullable Input<RuleGroupRateBasedStatementArgs> rateBasedStatement) {
            this.rateBasedStatement = rateBasedStatement;
            return this;
        }

        public Builder setRateBasedStatement(@Nullable RuleGroupRateBasedStatementArgs rateBasedStatement) {
            this.rateBasedStatement = Input.ofNullable(rateBasedStatement);
            return this;
        }

        public Builder setRegexMatchStatement(@Nullable Input<RuleGroupRegexMatchStatementArgs> regexMatchStatement) {
            this.regexMatchStatement = regexMatchStatement;
            return this;
        }

        public Builder setRegexMatchStatement(@Nullable RuleGroupRegexMatchStatementArgs regexMatchStatement) {
            this.regexMatchStatement = Input.ofNullable(regexMatchStatement);
            return this;
        }

        public Builder setRegexPatternSetReferenceStatement(@Nullable Input<RuleGroupRegexPatternSetReferenceStatementArgs> regexPatternSetReferenceStatement) {
            this.regexPatternSetReferenceStatement = regexPatternSetReferenceStatement;
            return this;
        }

        public Builder setRegexPatternSetReferenceStatement(@Nullable RuleGroupRegexPatternSetReferenceStatementArgs regexPatternSetReferenceStatement) {
            this.regexPatternSetReferenceStatement = Input.ofNullable(regexPatternSetReferenceStatement);
            return this;
        }

        public Builder setSizeConstraintStatement(@Nullable Input<RuleGroupSizeConstraintStatementArgs> sizeConstraintStatement) {
            this.sizeConstraintStatement = sizeConstraintStatement;
            return this;
        }

        public Builder setSizeConstraintStatement(@Nullable RuleGroupSizeConstraintStatementArgs sizeConstraintStatement) {
            this.sizeConstraintStatement = Input.ofNullable(sizeConstraintStatement);
            return this;
        }

        public Builder setSqliMatchStatement(@Nullable Input<RuleGroupSqliMatchStatementArgs> sqliMatchStatement) {
            this.sqliMatchStatement = sqliMatchStatement;
            return this;
        }

        public Builder setSqliMatchStatement(@Nullable RuleGroupSqliMatchStatementArgs sqliMatchStatement) {
            this.sqliMatchStatement = Input.ofNullable(sqliMatchStatement);
            return this;
        }

        public Builder setXssMatchStatement(@Nullable Input<RuleGroupXssMatchStatementArgs> xssMatchStatement) {
            this.xssMatchStatement = xssMatchStatement;
            return this;
        }

        public Builder setXssMatchStatement(@Nullable RuleGroupXssMatchStatementArgs xssMatchStatement) {
            this.xssMatchStatement = Input.ofNullable(xssMatchStatement);
            return this;
        }

        public RuleGroupStatementArgs build() {
            return new RuleGroupStatementArgs(andStatement, byteMatchStatement, geoMatchStatement, iPSetReferenceStatement, labelMatchStatement, notStatement, orStatement, rateBasedStatement, regexMatchStatement, regexPatternSetReferenceStatement, sizeConstraintStatement, sqliMatchStatement, xssMatchStatement);
        }
    }
}
