// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.workspaces.inputs;

import io.pulumi.awsnative.workspaces.enums.ConnectionAliasAssociationAssociationStatus;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionAliasAssociation extends io.pulumi.resources.InvokeArgs {

    public static final ConnectionAliasAssociation Empty = new ConnectionAliasAssociation();

    @InputImport(name="associatedAccountId")
        private final @Nullable String associatedAccountId;

    public Optional<String> getAssociatedAccountId() {
        return this.associatedAccountId == null ? Optional.empty() : Optional.ofNullable(this.associatedAccountId);
    }

    @InputImport(name="associationStatus")
        private final @Nullable ConnectionAliasAssociationAssociationStatus associationStatus;

    public Optional<ConnectionAliasAssociationAssociationStatus> getAssociationStatus() {
        return this.associationStatus == null ? Optional.empty() : Optional.ofNullable(this.associationStatus);
    }

    @InputImport(name="connectionIdentifier")
        private final @Nullable String connectionIdentifier;

    public Optional<String> getConnectionIdentifier() {
        return this.connectionIdentifier == null ? Optional.empty() : Optional.ofNullable(this.connectionIdentifier);
    }

    @InputImport(name="resourceId")
        private final @Nullable String resourceId;

    public Optional<String> getResourceId() {
        return this.resourceId == null ? Optional.empty() : Optional.ofNullable(this.resourceId);
    }

    public ConnectionAliasAssociation(
        @Nullable String associatedAccountId,
        @Nullable ConnectionAliasAssociationAssociationStatus associationStatus,
        @Nullable String connectionIdentifier,
        @Nullable String resourceId) {
        this.associatedAccountId = associatedAccountId;
        this.associationStatus = associationStatus;
        this.connectionIdentifier = connectionIdentifier;
        this.resourceId = resourceId;
    }

    private ConnectionAliasAssociation() {
        this.associatedAccountId = null;
        this.associationStatus = null;
        this.connectionIdentifier = null;
        this.resourceId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionAliasAssociation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String associatedAccountId;
        private @Nullable ConnectionAliasAssociationAssociationStatus associationStatus;
        private @Nullable String connectionIdentifier;
        private @Nullable String resourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionAliasAssociation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedAccountId = defaults.associatedAccountId;
    	      this.associationStatus = defaults.associationStatus;
    	      this.connectionIdentifier = defaults.connectionIdentifier;
    	      this.resourceId = defaults.resourceId;
        }

        public Builder setAssociatedAccountId(@Nullable String associatedAccountId) {
            this.associatedAccountId = associatedAccountId;
            return this;
        }

        public Builder setAssociationStatus(@Nullable ConnectionAliasAssociationAssociationStatus associationStatus) {
            this.associationStatus = associationStatus;
            return this;
        }

        public Builder setConnectionIdentifier(@Nullable String connectionIdentifier) {
            this.connectionIdentifier = connectionIdentifier;
            return this;
        }

        public Builder setResourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        public ConnectionAliasAssociation build() {
            return new ConnectionAliasAssociation(associatedAccountId, associationStatus, connectionIdentifier, resourceId);
        }
    }
}
