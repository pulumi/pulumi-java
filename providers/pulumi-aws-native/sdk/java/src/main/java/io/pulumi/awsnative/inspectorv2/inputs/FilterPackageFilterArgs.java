// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.inspectorv2.inputs;

import io.pulumi.awsnative.inspectorv2.inputs.FilterNumberFilterArgs;
import io.pulumi.awsnative.inspectorv2.inputs.FilterStringFilterArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FilterPackageFilterArgs extends io.pulumi.resources.ResourceArgs {

    public static final FilterPackageFilterArgs Empty = new FilterPackageFilterArgs();

    @InputImport(name="architecture")
    private final @Nullable Input<FilterStringFilterArgs> architecture;

    public Input<FilterStringFilterArgs> getArchitecture() {
        return this.architecture == null ? Input.empty() : this.architecture;
    }

    @InputImport(name="epoch")
    private final @Nullable Input<FilterNumberFilterArgs> epoch;

    public Input<FilterNumberFilterArgs> getEpoch() {
        return this.epoch == null ? Input.empty() : this.epoch;
    }

    @InputImport(name="name")
    private final @Nullable Input<FilterStringFilterArgs> name;

    public Input<FilterStringFilterArgs> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="release")
    private final @Nullable Input<FilterStringFilterArgs> release;

    public Input<FilterStringFilterArgs> getRelease() {
        return this.release == null ? Input.empty() : this.release;
    }

    @InputImport(name="sourceLayerHash")
    private final @Nullable Input<FilterStringFilterArgs> sourceLayerHash;

    public Input<FilterStringFilterArgs> getSourceLayerHash() {
        return this.sourceLayerHash == null ? Input.empty() : this.sourceLayerHash;
    }

    @InputImport(name="version")
    private final @Nullable Input<FilterStringFilterArgs> version;

    public Input<FilterStringFilterArgs> getVersion() {
        return this.version == null ? Input.empty() : this.version;
    }

    public FilterPackageFilterArgs(
        @Nullable Input<FilterStringFilterArgs> architecture,
        @Nullable Input<FilterNumberFilterArgs> epoch,
        @Nullable Input<FilterStringFilterArgs> name,
        @Nullable Input<FilterStringFilterArgs> release,
        @Nullable Input<FilterStringFilterArgs> sourceLayerHash,
        @Nullable Input<FilterStringFilterArgs> version) {
        this.architecture = architecture;
        this.epoch = epoch;
        this.name = name;
        this.release = release;
        this.sourceLayerHash = sourceLayerHash;
        this.version = version;
    }

    private FilterPackageFilterArgs() {
        this.architecture = Input.empty();
        this.epoch = Input.empty();
        this.name = Input.empty();
        this.release = Input.empty();
        this.sourceLayerHash = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FilterPackageFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<FilterStringFilterArgs> architecture;
        private @Nullable Input<FilterNumberFilterArgs> epoch;
        private @Nullable Input<FilterStringFilterArgs> name;
        private @Nullable Input<FilterStringFilterArgs> release;
        private @Nullable Input<FilterStringFilterArgs> sourceLayerHash;
        private @Nullable Input<FilterStringFilterArgs> version;

        public Builder() {
    	      // Empty
        }

        public Builder(FilterPackageFilterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.epoch = defaults.epoch;
    	      this.name = defaults.name;
    	      this.release = defaults.release;
    	      this.sourceLayerHash = defaults.sourceLayerHash;
    	      this.version = defaults.version;
        }

        public Builder setArchitecture(@Nullable Input<FilterStringFilterArgs> architecture) {
            this.architecture = architecture;
            return this;
        }

        public Builder setArchitecture(@Nullable FilterStringFilterArgs architecture) {
            this.architecture = Input.ofNullable(architecture);
            return this;
        }

        public Builder setEpoch(@Nullable Input<FilterNumberFilterArgs> epoch) {
            this.epoch = epoch;
            return this;
        }

        public Builder setEpoch(@Nullable FilterNumberFilterArgs epoch) {
            this.epoch = Input.ofNullable(epoch);
            return this;
        }

        public Builder setName(@Nullable Input<FilterStringFilterArgs> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable FilterStringFilterArgs name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setRelease(@Nullable Input<FilterStringFilterArgs> release) {
            this.release = release;
            return this;
        }

        public Builder setRelease(@Nullable FilterStringFilterArgs release) {
            this.release = Input.ofNullable(release);
            return this;
        }

        public Builder setSourceLayerHash(@Nullable Input<FilterStringFilterArgs> sourceLayerHash) {
            this.sourceLayerHash = sourceLayerHash;
            return this;
        }

        public Builder setSourceLayerHash(@Nullable FilterStringFilterArgs sourceLayerHash) {
            this.sourceLayerHash = Input.ofNullable(sourceLayerHash);
            return this;
        }

        public Builder setVersion(@Nullable Input<FilterStringFilterArgs> version) {
            this.version = version;
            return this;
        }

        public Builder setVersion(@Nullable FilterStringFilterArgs version) {
            this.version = Input.ofNullable(version);
            return this;
        }

        public FilterPackageFilterArgs build() {
            return new FilterPackageFilterArgs(architecture, epoch, name, release, sourceLayerHash, version);
        }
    }
}
