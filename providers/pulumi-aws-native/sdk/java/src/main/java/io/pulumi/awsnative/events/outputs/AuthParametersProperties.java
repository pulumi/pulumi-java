// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.events.outputs;

import io.pulumi.awsnative.events.outputs.ConnectionApiKeyAuthParameters;
import io.pulumi.awsnative.events.outputs.ConnectionBasicAuthParameters;
import io.pulumi.awsnative.events.outputs.ConnectionHttpParameters;
import io.pulumi.awsnative.events.outputs.ConnectionOAuthParameters;
import io.pulumi.core.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AuthParametersProperties {
    private final @Nullable ConnectionApiKeyAuthParameters apiKeyAuthParameters;
    private final @Nullable ConnectionBasicAuthParameters basicAuthParameters;
    private final @Nullable ConnectionHttpParameters invocationHttpParameters;
    private final @Nullable ConnectionOAuthParameters oAuthParameters;

    @OutputCustomType.Constructor({"apiKeyAuthParameters","basicAuthParameters","invocationHttpParameters","oAuthParameters"})
    private AuthParametersProperties(
        @Nullable ConnectionApiKeyAuthParameters apiKeyAuthParameters,
        @Nullable ConnectionBasicAuthParameters basicAuthParameters,
        @Nullable ConnectionHttpParameters invocationHttpParameters,
        @Nullable ConnectionOAuthParameters oAuthParameters) {
        this.apiKeyAuthParameters = apiKeyAuthParameters;
        this.basicAuthParameters = basicAuthParameters;
        this.invocationHttpParameters = invocationHttpParameters;
        this.oAuthParameters = oAuthParameters;
    }

    public Optional<ConnectionApiKeyAuthParameters> getApiKeyAuthParameters() {
        return Optional.ofNullable(this.apiKeyAuthParameters);
    }
    public Optional<ConnectionBasicAuthParameters> getBasicAuthParameters() {
        return Optional.ofNullable(this.basicAuthParameters);
    }
    public Optional<ConnectionHttpParameters> getInvocationHttpParameters() {
        return Optional.ofNullable(this.invocationHttpParameters);
    }
    public Optional<ConnectionOAuthParameters> getOAuthParameters() {
        return Optional.ofNullable(this.oAuthParameters);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthParametersProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ConnectionApiKeyAuthParameters apiKeyAuthParameters;
        private @Nullable ConnectionBasicAuthParameters basicAuthParameters;
        private @Nullable ConnectionHttpParameters invocationHttpParameters;
        private @Nullable ConnectionOAuthParameters oAuthParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthParametersProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKeyAuthParameters = defaults.apiKeyAuthParameters;
    	      this.basicAuthParameters = defaults.basicAuthParameters;
    	      this.invocationHttpParameters = defaults.invocationHttpParameters;
    	      this.oAuthParameters = defaults.oAuthParameters;
        }

        public Builder setApiKeyAuthParameters(@Nullable ConnectionApiKeyAuthParameters apiKeyAuthParameters) {
            this.apiKeyAuthParameters = apiKeyAuthParameters;
            return this;
        }

        public Builder setBasicAuthParameters(@Nullable ConnectionBasicAuthParameters basicAuthParameters) {
            this.basicAuthParameters = basicAuthParameters;
            return this;
        }

        public Builder setInvocationHttpParameters(@Nullable ConnectionHttpParameters invocationHttpParameters) {
            this.invocationHttpParameters = invocationHttpParameters;
            return this;
        }

        public Builder setOAuthParameters(@Nullable ConnectionOAuthParameters oAuthParameters) {
            this.oAuthParameters = oAuthParameters;
            return this;
        }
        public AuthParametersProperties build() {
            return new AuthParametersProperties(apiKeyAuthParameters, basicAuthParameters, invocationHttpParameters, oAuthParameters);
        }
    }
}
