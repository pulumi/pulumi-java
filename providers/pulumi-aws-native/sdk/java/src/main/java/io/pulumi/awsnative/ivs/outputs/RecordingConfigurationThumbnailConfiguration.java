// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ivs.outputs;

import io.pulumi.awsnative.ivs.enums.RecordingConfigurationThumbnailConfigurationRecordingMode;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class RecordingConfigurationThumbnailConfiguration {
    private final RecordingConfigurationThumbnailConfigurationRecordingMode recordingMode;
    private final @Nullable Integer targetIntervalSeconds;

    @OutputCustomType.Constructor({"recordingMode","targetIntervalSeconds"})
    private RecordingConfigurationThumbnailConfiguration(
        RecordingConfigurationThumbnailConfigurationRecordingMode recordingMode,
        @Nullable Integer targetIntervalSeconds) {
        this.recordingMode = Objects.requireNonNull(recordingMode);
        this.targetIntervalSeconds = targetIntervalSeconds;
    }

    public RecordingConfigurationThumbnailConfigurationRecordingMode getRecordingMode() {
        return this.recordingMode;
    }
    public Optional<Integer> getTargetIntervalSeconds() {
        return Optional.ofNullable(this.targetIntervalSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecordingConfigurationThumbnailConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordingConfigurationThumbnailConfigurationRecordingMode recordingMode;
        private @Nullable Integer targetIntervalSeconds;

        public Builder() {
    	      // Empty
        }

        public Builder(RecordingConfigurationThumbnailConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.recordingMode = defaults.recordingMode;
    	      this.targetIntervalSeconds = defaults.targetIntervalSeconds;
        }

        public Builder setRecordingMode(RecordingConfigurationThumbnailConfigurationRecordingMode recordingMode) {
            this.recordingMode = Objects.requireNonNull(recordingMode);
            return this;
        }

        public Builder setTargetIntervalSeconds(@Nullable Integer targetIntervalSeconds) {
            this.targetIntervalSeconds = targetIntervalSeconds;
            return this;
        }

        public RecordingConfigurationThumbnailConfiguration build() {
            return new RecordingConfigurationThumbnailConfiguration(recordingMode, targetIntervalSeconds);
        }
    }
}
