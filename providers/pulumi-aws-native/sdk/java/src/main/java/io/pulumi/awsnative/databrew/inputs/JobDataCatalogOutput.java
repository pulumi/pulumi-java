// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.inputs.JobDatabaseTableOutputOptions;
import io.pulumi.awsnative.databrew.inputs.JobS3TableOutputOptions;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobDataCatalogOutput extends io.pulumi.resources.InvokeArgs {

    public static final JobDataCatalogOutput Empty = new JobDataCatalogOutput();

    @Import(name="catalogId")
      private final @Nullable String catalogId;

    public Optional<String> getCatalogId() {
        return this.catalogId == null ? Optional.empty() : Optional.ofNullable(this.catalogId);
    }

    @Import(name="databaseName", required=true)
      private final String databaseName;

    public String getDatabaseName() {
        return this.databaseName;
    }

    @Import(name="databaseOptions")
      private final @Nullable JobDatabaseTableOutputOptions databaseOptions;

    public Optional<JobDatabaseTableOutputOptions> getDatabaseOptions() {
        return this.databaseOptions == null ? Optional.empty() : Optional.ofNullable(this.databaseOptions);
    }

    @Import(name="overwrite")
      private final @Nullable Boolean overwrite;

    public Optional<Boolean> getOverwrite() {
        return this.overwrite == null ? Optional.empty() : Optional.ofNullable(this.overwrite);
    }

    @Import(name="s3Options")
      private final @Nullable JobS3TableOutputOptions s3Options;

    public Optional<JobS3TableOutputOptions> getS3Options() {
        return this.s3Options == null ? Optional.empty() : Optional.ofNullable(this.s3Options);
    }

    @Import(name="tableName", required=true)
      private final String tableName;

    public String getTableName() {
        return this.tableName;
    }

    public JobDataCatalogOutput(
        @Nullable String catalogId,
        String databaseName,
        @Nullable JobDatabaseTableOutputOptions databaseOptions,
        @Nullable Boolean overwrite,
        @Nullable JobS3TableOutputOptions s3Options,
        String tableName) {
        this.catalogId = catalogId;
        this.databaseName = Objects.requireNonNull(databaseName, "expected parameter 'databaseName' to be non-null");
        this.databaseOptions = databaseOptions;
        this.overwrite = overwrite;
        this.s3Options = s3Options;
        this.tableName = Objects.requireNonNull(tableName, "expected parameter 'tableName' to be non-null");
    }

    private JobDataCatalogOutput() {
        this.catalogId = null;
        this.databaseName = null;
        this.databaseOptions = null;
        this.overwrite = null;
        this.s3Options = null;
        this.tableName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobDataCatalogOutput defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String catalogId;
        private String databaseName;
        private @Nullable JobDatabaseTableOutputOptions databaseOptions;
        private @Nullable Boolean overwrite;
        private @Nullable JobS3TableOutputOptions s3Options;
        private String tableName;

        public Builder() {
    	      // Empty
        }

        public Builder(JobDataCatalogOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogId = defaults.catalogId;
    	      this.databaseName = defaults.databaseName;
    	      this.databaseOptions = defaults.databaseOptions;
    	      this.overwrite = defaults.overwrite;
    	      this.s3Options = defaults.s3Options;
    	      this.tableName = defaults.tableName;
        }

        public Builder catalogId(@Nullable String catalogId) {
            this.catalogId = catalogId;
            return this;
        }
        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        public Builder databaseOptions(@Nullable JobDatabaseTableOutputOptions databaseOptions) {
            this.databaseOptions = databaseOptions;
            return this;
        }
        public Builder overwrite(@Nullable Boolean overwrite) {
            this.overwrite = overwrite;
            return this;
        }
        public Builder s3Options(@Nullable JobS3TableOutputOptions s3Options) {
            this.s3Options = s3Options;
            return this;
        }
        public Builder tableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }        public JobDataCatalogOutput build() {
            return new JobDataCatalogOutput(catalogId, databaseName, databaseOptions, overwrite, s3Options, tableName);
        }
    }
}
