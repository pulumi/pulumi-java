// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ecs.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskSetServiceRegistryArgs extends io.pulumi.resources.ResourceArgs {

    public static final TaskSetServiceRegistryArgs Empty = new TaskSetServiceRegistryArgs();

    /**
     * The container name value, already specified in the task definition, to be used for your service discovery service. If the task definition that your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition that your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
     * 
     */
    @InputImport(name="containerName")
      private final @Nullable Input<String> containerName;

    public Input<String> getContainerName() {
        return this.containerName == null ? Input.empty() : this.containerName;
    }

    /**
     * The port value, already specified in the task definition, to be used for your service discovery service. If the task definition your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
     * 
     */
    @InputImport(name="containerPort")
      private final @Nullable Input<Integer> containerPort;

    public Input<Integer> getContainerPort() {
        return this.containerPort == null ? Input.empty() : this.containerPort;
    }

    /**
     * The port value used if your service discovery service specified an SRV record. This field may be used if both the awsvpc network mode and SRV records are used.
     * 
     */
    @InputImport(name="port")
      private final @Nullable Input<Integer> port;

    public Input<Integer> getPort() {
        return this.port == null ? Input.empty() : this.port;
    }

    /**
     * The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is AWS Cloud Map. For more information, see https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html
     * 
     */
    @InputImport(name="registryArn")
      private final @Nullable Input<String> registryArn;

    public Input<String> getRegistryArn() {
        return this.registryArn == null ? Input.empty() : this.registryArn;
    }

    public TaskSetServiceRegistryArgs(
        @Nullable Input<String> containerName,
        @Nullable Input<Integer> containerPort,
        @Nullable Input<Integer> port,
        @Nullable Input<String> registryArn) {
        this.containerName = containerName;
        this.containerPort = containerPort;
        this.port = port;
        this.registryArn = registryArn;
    }

    private TaskSetServiceRegistryArgs() {
        this.containerName = Input.empty();
        this.containerPort = Input.empty();
        this.port = Input.empty();
        this.registryArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskSetServiceRegistryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> containerName;
        private @Nullable Input<Integer> containerPort;
        private @Nullable Input<Integer> port;
        private @Nullable Input<String> registryArn;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskSetServiceRegistryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerName = defaults.containerName;
    	      this.containerPort = defaults.containerPort;
    	      this.port = defaults.port;
    	      this.registryArn = defaults.registryArn;
        }

        public Builder containerName(@Nullable Input<String> containerName) {
            this.containerName = containerName;
            return this;
        }

        public Builder containerName(@Nullable String containerName) {
            this.containerName = Input.ofNullable(containerName);
            return this;
        }

        public Builder containerPort(@Nullable Input<Integer> containerPort) {
            this.containerPort = containerPort;
            return this;
        }

        public Builder containerPort(@Nullable Integer containerPort) {
            this.containerPort = Input.ofNullable(containerPort);
            return this;
        }

        public Builder port(@Nullable Input<Integer> port) {
            this.port = port;
            return this;
        }

        public Builder port(@Nullable Integer port) {
            this.port = Input.ofNullable(port);
            return this;
        }

        public Builder registryArn(@Nullable Input<String> registryArn) {
            this.registryArn = registryArn;
            return this;
        }

        public Builder registryArn(@Nullable String registryArn) {
            this.registryArn = Input.ofNullable(registryArn);
            return this;
        }
        public TaskSetServiceRegistryArgs build() {
            return new TaskSetServiceRegistryArgs(containerName, containerPort, port, registryArn);
        }
    }
}
