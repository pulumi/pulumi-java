// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotsitewise.inputs;

import io.pulumi.awsnative.iotsitewise.enums.AssetPropertyNotificationState;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The asset property's definition, alias, and notification state.
 * 
 */
public final class AssetProperty extends io.pulumi.resources.InvokeArgs {

    public static final AssetProperty Empty = new AssetProperty();

    /**
     * The property alias that identifies the property.
     * 
     */
    @InputImport(name="alias")
      private final @Nullable String alias;

    public Optional<String> getAlias() {
        return this.alias == null ? Optional.empty() : Optional.ofNullable(this.alias);
    }

    /**
     * Customer provided ID for property.
     * 
     */
    @InputImport(name="logicalId", required=true)
      private final String logicalId;

    public String getLogicalId() {
        return this.logicalId;
    }

    /**
     * The MQTT notification state (ENABLED or DISABLED) for this asset property.
     * 
     */
    @InputImport(name="notificationState")
      private final @Nullable AssetPropertyNotificationState notificationState;

    public Optional<AssetPropertyNotificationState> getNotificationState() {
        return this.notificationState == null ? Optional.empty() : Optional.ofNullable(this.notificationState);
    }

    public AssetProperty(
        @Nullable String alias,
        String logicalId,
        @Nullable AssetPropertyNotificationState notificationState) {
        this.alias = alias;
        this.logicalId = Objects.requireNonNull(logicalId, "expected parameter 'logicalId' to be non-null");
        this.notificationState = notificationState;
    }

    private AssetProperty() {
        this.alias = null;
        this.logicalId = null;
        this.notificationState = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetProperty defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String alias;
        private String logicalId;
        private @Nullable AssetPropertyNotificationState notificationState;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alias = defaults.alias;
    	      this.logicalId = defaults.logicalId;
    	      this.notificationState = defaults.notificationState;
        }

        public Builder setAlias(@Nullable String alias) {
            this.alias = alias;
            return this;
        }

        public Builder setLogicalId(String logicalId) {
            this.logicalId = Objects.requireNonNull(logicalId);
            return this;
        }

        public Builder setNotificationState(@Nullable AssetPropertyNotificationState notificationState) {
            this.notificationState = notificationState;
            return this;
        }
        public AssetProperty build() {
            return new AssetProperty(alias, logicalId, notificationState);
        }
    }
}
