// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.appflow.inputs;

import io.pulumi.awsnative.appflow.enums.FlowScheduledTriggerPropertiesDataPullMode;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlowScheduledTriggerPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowScheduledTriggerPropertiesArgs Empty = new FlowScheduledTriggerPropertiesArgs();

    @InputImport(name="dataPullMode")
    private final @Nullable Input<FlowScheduledTriggerPropertiesDataPullMode> dataPullMode;

    public Input<FlowScheduledTriggerPropertiesDataPullMode> getDataPullMode() {
        return this.dataPullMode == null ? Input.empty() : this.dataPullMode;
    }

    @InputImport(name="scheduleEndTime")
    private final @Nullable Input<Double> scheduleEndTime;

    public Input<Double> getScheduleEndTime() {
        return this.scheduleEndTime == null ? Input.empty() : this.scheduleEndTime;
    }

    @InputImport(name="scheduleExpression", required=true)
    private final Input<String> scheduleExpression;

    public Input<String> getScheduleExpression() {
        return this.scheduleExpression;
    }

    @InputImport(name="scheduleOffset")
    private final @Nullable Input<Double> scheduleOffset;

    public Input<Double> getScheduleOffset() {
        return this.scheduleOffset == null ? Input.empty() : this.scheduleOffset;
    }

    @InputImport(name="scheduleStartTime")
    private final @Nullable Input<Double> scheduleStartTime;

    public Input<Double> getScheduleStartTime() {
        return this.scheduleStartTime == null ? Input.empty() : this.scheduleStartTime;
    }

    @InputImport(name="timeZone")
    private final @Nullable Input<String> timeZone;

    public Input<String> getTimeZone() {
        return this.timeZone == null ? Input.empty() : this.timeZone;
    }

    public FlowScheduledTriggerPropertiesArgs(
        @Nullable Input<FlowScheduledTriggerPropertiesDataPullMode> dataPullMode,
        @Nullable Input<Double> scheduleEndTime,
        Input<String> scheduleExpression,
        @Nullable Input<Double> scheduleOffset,
        @Nullable Input<Double> scheduleStartTime,
        @Nullable Input<String> timeZone) {
        this.dataPullMode = dataPullMode;
        this.scheduleEndTime = scheduleEndTime;
        this.scheduleExpression = Objects.requireNonNull(scheduleExpression, "expected parameter 'scheduleExpression' to be non-null");
        this.scheduleOffset = scheduleOffset;
        this.scheduleStartTime = scheduleStartTime;
        this.timeZone = timeZone;
    }

    private FlowScheduledTriggerPropertiesArgs() {
        this.dataPullMode = Input.empty();
        this.scheduleEndTime = Input.empty();
        this.scheduleExpression = Input.empty();
        this.scheduleOffset = Input.empty();
        this.scheduleStartTime = Input.empty();
        this.timeZone = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowScheduledTriggerPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<FlowScheduledTriggerPropertiesDataPullMode> dataPullMode;
        private @Nullable Input<Double> scheduleEndTime;
        private Input<String> scheduleExpression;
        private @Nullable Input<Double> scheduleOffset;
        private @Nullable Input<Double> scheduleStartTime;
        private @Nullable Input<String> timeZone;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowScheduledTriggerPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataPullMode = defaults.dataPullMode;
    	      this.scheduleEndTime = defaults.scheduleEndTime;
    	      this.scheduleExpression = defaults.scheduleExpression;
    	      this.scheduleOffset = defaults.scheduleOffset;
    	      this.scheduleStartTime = defaults.scheduleStartTime;
    	      this.timeZone = defaults.timeZone;
        }

        public Builder setDataPullMode(@Nullable Input<FlowScheduledTriggerPropertiesDataPullMode> dataPullMode) {
            this.dataPullMode = dataPullMode;
            return this;
        }

        public Builder setDataPullMode(@Nullable FlowScheduledTriggerPropertiesDataPullMode dataPullMode) {
            this.dataPullMode = Input.ofNullable(dataPullMode);
            return this;
        }

        public Builder setScheduleEndTime(@Nullable Input<Double> scheduleEndTime) {
            this.scheduleEndTime = scheduleEndTime;
            return this;
        }

        public Builder setScheduleEndTime(@Nullable Double scheduleEndTime) {
            this.scheduleEndTime = Input.ofNullable(scheduleEndTime);
            return this;
        }

        public Builder setScheduleExpression(Input<String> scheduleExpression) {
            this.scheduleExpression = Objects.requireNonNull(scheduleExpression);
            return this;
        }

        public Builder setScheduleExpression(String scheduleExpression) {
            this.scheduleExpression = Input.of(Objects.requireNonNull(scheduleExpression));
            return this;
        }

        public Builder setScheduleOffset(@Nullable Input<Double> scheduleOffset) {
            this.scheduleOffset = scheduleOffset;
            return this;
        }

        public Builder setScheduleOffset(@Nullable Double scheduleOffset) {
            this.scheduleOffset = Input.ofNullable(scheduleOffset);
            return this;
        }

        public Builder setScheduleStartTime(@Nullable Input<Double> scheduleStartTime) {
            this.scheduleStartTime = scheduleStartTime;
            return this;
        }

        public Builder setScheduleStartTime(@Nullable Double scheduleStartTime) {
            this.scheduleStartTime = Input.ofNullable(scheduleStartTime);
            return this;
        }

        public Builder setTimeZone(@Nullable Input<String> timeZone) {
            this.timeZone = timeZone;
            return this;
        }

        public Builder setTimeZone(@Nullable String timeZone) {
            this.timeZone = Input.ofNullable(timeZone);
            return this;
        }

        public FlowScheduledTriggerPropertiesArgs build() {
            return new FlowScheduledTriggerPropertiesArgs(dataPullMode, scheduleEndTime, scheduleExpression, scheduleOffset, scheduleStartTime, timeZone);
        }
    }
}
