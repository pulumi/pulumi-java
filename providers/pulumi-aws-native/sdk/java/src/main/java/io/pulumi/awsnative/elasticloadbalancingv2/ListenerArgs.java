// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.elasticloadbalancingv2;

import io.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerActionArgs;
import io.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerCertificateArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ListenerArgs extends io.pulumi.resources.ResourceArgs {

    public static final ListenerArgs Empty = new ListenerArgs();

    @Import(name="alpnPolicy")
      private final @Nullable Output<List<String>> alpnPolicy;

    public Output<List<String>> alpnPolicy() {
        return this.alpnPolicy == null ? Codegen.empty() : this.alpnPolicy;
    }

    @Import(name="certificates")
      private final @Nullable Output<List<ListenerCertificateArgs>> certificates;

    public Output<List<ListenerCertificateArgs>> certificates() {
        return this.certificates == null ? Codegen.empty() : this.certificates;
    }

    @Import(name="defaultActions", required=true)
      private final Output<List<ListenerActionArgs>> defaultActions;

    public Output<List<ListenerActionArgs>> defaultActions() {
        return this.defaultActions;
    }

    @Import(name="loadBalancerArn", required=true)
      private final Output<String> loadBalancerArn;

    public Output<String> loadBalancerArn() {
        return this.loadBalancerArn;
    }

    @Import(name="port")
      private final @Nullable Output<Integer> port;

    public Output<Integer> port() {
        return this.port == null ? Codegen.empty() : this.port;
    }

    @Import(name="protocol")
      private final @Nullable Output<String> protocol;

    public Output<String> protocol() {
        return this.protocol == null ? Codegen.empty() : this.protocol;
    }

    @Import(name="sslPolicy")
      private final @Nullable Output<String> sslPolicy;

    public Output<String> sslPolicy() {
        return this.sslPolicy == null ? Codegen.empty() : this.sslPolicy;
    }

    public ListenerArgs(
        @Nullable Output<List<String>> alpnPolicy,
        @Nullable Output<List<ListenerCertificateArgs>> certificates,
        Output<List<ListenerActionArgs>> defaultActions,
        Output<String> loadBalancerArn,
        @Nullable Output<Integer> port,
        @Nullable Output<String> protocol,
        @Nullable Output<String> sslPolicy) {
        this.alpnPolicy = alpnPolicy;
        this.certificates = certificates;
        this.defaultActions = Objects.requireNonNull(defaultActions, "expected parameter 'defaultActions' to be non-null");
        this.loadBalancerArn = Objects.requireNonNull(loadBalancerArn, "expected parameter 'loadBalancerArn' to be non-null");
        this.port = port;
        this.protocol = protocol;
        this.sslPolicy = sslPolicy;
    }

    private ListenerArgs() {
        this.alpnPolicy = Codegen.empty();
        this.certificates = Codegen.empty();
        this.defaultActions = Codegen.empty();
        this.loadBalancerArn = Codegen.empty();
        this.port = Codegen.empty();
        this.protocol = Codegen.empty();
        this.sslPolicy = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListenerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> alpnPolicy;
        private @Nullable Output<List<ListenerCertificateArgs>> certificates;
        private Output<List<ListenerActionArgs>> defaultActions;
        private Output<String> loadBalancerArn;
        private @Nullable Output<Integer> port;
        private @Nullable Output<String> protocol;
        private @Nullable Output<String> sslPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(ListenerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alpnPolicy = defaults.alpnPolicy;
    	      this.certificates = defaults.certificates;
    	      this.defaultActions = defaults.defaultActions;
    	      this.loadBalancerArn = defaults.loadBalancerArn;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.sslPolicy = defaults.sslPolicy;
        }

        public Builder alpnPolicy(@Nullable Output<List<String>> alpnPolicy) {
            this.alpnPolicy = alpnPolicy;
            return this;
        }
        public Builder alpnPolicy(@Nullable List<String> alpnPolicy) {
            this.alpnPolicy = Codegen.ofNullable(alpnPolicy);
            return this;
        }
        public Builder alpnPolicy(String... alpnPolicy) {
            return alpnPolicy(List.of(alpnPolicy));
        }
        public Builder certificates(@Nullable Output<List<ListenerCertificateArgs>> certificates) {
            this.certificates = certificates;
            return this;
        }
        public Builder certificates(@Nullable List<ListenerCertificateArgs> certificates) {
            this.certificates = Codegen.ofNullable(certificates);
            return this;
        }
        public Builder certificates(ListenerCertificateArgs... certificates) {
            return certificates(List.of(certificates));
        }
        public Builder defaultActions(Output<List<ListenerActionArgs>> defaultActions) {
            this.defaultActions = Objects.requireNonNull(defaultActions);
            return this;
        }
        public Builder defaultActions(List<ListenerActionArgs> defaultActions) {
            this.defaultActions = Output.of(Objects.requireNonNull(defaultActions));
            return this;
        }
        public Builder defaultActions(ListenerActionArgs... defaultActions) {
            return defaultActions(List.of(defaultActions));
        }
        public Builder loadBalancerArn(Output<String> loadBalancerArn) {
            this.loadBalancerArn = Objects.requireNonNull(loadBalancerArn);
            return this;
        }
        public Builder loadBalancerArn(String loadBalancerArn) {
            this.loadBalancerArn = Output.of(Objects.requireNonNull(loadBalancerArn));
            return this;
        }
        public Builder port(@Nullable Output<Integer> port) {
            this.port = port;
            return this;
        }
        public Builder port(@Nullable Integer port) {
            this.port = Codegen.ofNullable(port);
            return this;
        }
        public Builder protocol(@Nullable Output<String> protocol) {
            this.protocol = protocol;
            return this;
        }
        public Builder protocol(@Nullable String protocol) {
            this.protocol = Codegen.ofNullable(protocol);
            return this;
        }
        public Builder sslPolicy(@Nullable Output<String> sslPolicy) {
            this.sslPolicy = sslPolicy;
            return this;
        }
        public Builder sslPolicy(@Nullable String sslPolicy) {
            this.sslPolicy = Codegen.ofNullable(sslPolicy);
            return this;
        }        public ListenerArgs build() {
            return new ListenerArgs(alpnPolicy, certificates, defaultActions, loadBalancerArn, port, protocol, sslPolicy);
        }
    }
}
