// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.elasticache;

import io.pulumi.awsnative.elasticache.inputs.GlobalReplicationGroupMemberArgs;
import io.pulumi.awsnative.elasticache.inputs.GlobalReplicationGroupRegionalConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GlobalReplicationGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final GlobalReplicationGroupArgs Empty = new GlobalReplicationGroupArgs();

    @InputImport(name="automaticFailoverEnabled")
    private final @Nullable Input<Boolean> automaticFailoverEnabled;

    public Input<Boolean> getAutomaticFailoverEnabled() {
        return this.automaticFailoverEnabled == null ? Input.empty() : this.automaticFailoverEnabled;
    }

    @InputImport(name="cacheNodeType")
    private final @Nullable Input<String> cacheNodeType;

    public Input<String> getCacheNodeType() {
        return this.cacheNodeType == null ? Input.empty() : this.cacheNodeType;
    }

    @InputImport(name="cacheParameterGroupName")
    private final @Nullable Input<String> cacheParameterGroupName;

    public Input<String> getCacheParameterGroupName() {
        return this.cacheParameterGroupName == null ? Input.empty() : this.cacheParameterGroupName;
    }

    @InputImport(name="engineVersion")
    private final @Nullable Input<String> engineVersion;

    public Input<String> getEngineVersion() {
        return this.engineVersion == null ? Input.empty() : this.engineVersion;
    }

    @InputImport(name="globalNodeGroupCount")
    private final @Nullable Input<Integer> globalNodeGroupCount;

    public Input<Integer> getGlobalNodeGroupCount() {
        return this.globalNodeGroupCount == null ? Input.empty() : this.globalNodeGroupCount;
    }

    @InputImport(name="globalReplicationGroupDescription")
    private final @Nullable Input<String> globalReplicationGroupDescription;

    public Input<String> getGlobalReplicationGroupDescription() {
        return this.globalReplicationGroupDescription == null ? Input.empty() : this.globalReplicationGroupDescription;
    }

    @InputImport(name="globalReplicationGroupIdSuffix")
    private final @Nullable Input<String> globalReplicationGroupIdSuffix;

    public Input<String> getGlobalReplicationGroupIdSuffix() {
        return this.globalReplicationGroupIdSuffix == null ? Input.empty() : this.globalReplicationGroupIdSuffix;
    }

    @InputImport(name="members", required=true)
    private final Input<List<GlobalReplicationGroupMemberArgs>> members;

    public Input<List<GlobalReplicationGroupMemberArgs>> getMembers() {
        return this.members;
    }

    @InputImport(name="regionalConfigurations")
    private final @Nullable Input<List<GlobalReplicationGroupRegionalConfigurationArgs>> regionalConfigurations;

    public Input<List<GlobalReplicationGroupRegionalConfigurationArgs>> getRegionalConfigurations() {
        return this.regionalConfigurations == null ? Input.empty() : this.regionalConfigurations;
    }

    public GlobalReplicationGroupArgs(
        @Nullable Input<Boolean> automaticFailoverEnabled,
        @Nullable Input<String> cacheNodeType,
        @Nullable Input<String> cacheParameterGroupName,
        @Nullable Input<String> engineVersion,
        @Nullable Input<Integer> globalNodeGroupCount,
        @Nullable Input<String> globalReplicationGroupDescription,
        @Nullable Input<String> globalReplicationGroupIdSuffix,
        Input<List<GlobalReplicationGroupMemberArgs>> members,
        @Nullable Input<List<GlobalReplicationGroupRegionalConfigurationArgs>> regionalConfigurations) {
        this.automaticFailoverEnabled = automaticFailoverEnabled;
        this.cacheNodeType = cacheNodeType;
        this.cacheParameterGroupName = cacheParameterGroupName;
        this.engineVersion = engineVersion;
        this.globalNodeGroupCount = globalNodeGroupCount;
        this.globalReplicationGroupDescription = globalReplicationGroupDescription;
        this.globalReplicationGroupIdSuffix = globalReplicationGroupIdSuffix;
        this.members = Objects.requireNonNull(members, "expected parameter 'members' to be non-null");
        this.regionalConfigurations = regionalConfigurations;
    }

    private GlobalReplicationGroupArgs() {
        this.automaticFailoverEnabled = Input.empty();
        this.cacheNodeType = Input.empty();
        this.cacheParameterGroupName = Input.empty();
        this.engineVersion = Input.empty();
        this.globalNodeGroupCount = Input.empty();
        this.globalReplicationGroupDescription = Input.empty();
        this.globalReplicationGroupIdSuffix = Input.empty();
        this.members = Input.empty();
        this.regionalConfigurations = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GlobalReplicationGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> automaticFailoverEnabled;
        private @Nullable Input<String> cacheNodeType;
        private @Nullable Input<String> cacheParameterGroupName;
        private @Nullable Input<String> engineVersion;
        private @Nullable Input<Integer> globalNodeGroupCount;
        private @Nullable Input<String> globalReplicationGroupDescription;
        private @Nullable Input<String> globalReplicationGroupIdSuffix;
        private Input<List<GlobalReplicationGroupMemberArgs>> members;
        private @Nullable Input<List<GlobalReplicationGroupRegionalConfigurationArgs>> regionalConfigurations;

        public Builder() {
    	      // Empty
        }

        public Builder(GlobalReplicationGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automaticFailoverEnabled = defaults.automaticFailoverEnabled;
    	      this.cacheNodeType = defaults.cacheNodeType;
    	      this.cacheParameterGroupName = defaults.cacheParameterGroupName;
    	      this.engineVersion = defaults.engineVersion;
    	      this.globalNodeGroupCount = defaults.globalNodeGroupCount;
    	      this.globalReplicationGroupDescription = defaults.globalReplicationGroupDescription;
    	      this.globalReplicationGroupIdSuffix = defaults.globalReplicationGroupIdSuffix;
    	      this.members = defaults.members;
    	      this.regionalConfigurations = defaults.regionalConfigurations;
        }

        public Builder setAutomaticFailoverEnabled(@Nullable Input<Boolean> automaticFailoverEnabled) {
            this.automaticFailoverEnabled = automaticFailoverEnabled;
            return this;
        }

        public Builder setAutomaticFailoverEnabled(@Nullable Boolean automaticFailoverEnabled) {
            this.automaticFailoverEnabled = Input.ofNullable(automaticFailoverEnabled);
            return this;
        }

        public Builder setCacheNodeType(@Nullable Input<String> cacheNodeType) {
            this.cacheNodeType = cacheNodeType;
            return this;
        }

        public Builder setCacheNodeType(@Nullable String cacheNodeType) {
            this.cacheNodeType = Input.ofNullable(cacheNodeType);
            return this;
        }

        public Builder setCacheParameterGroupName(@Nullable Input<String> cacheParameterGroupName) {
            this.cacheParameterGroupName = cacheParameterGroupName;
            return this;
        }

        public Builder setCacheParameterGroupName(@Nullable String cacheParameterGroupName) {
            this.cacheParameterGroupName = Input.ofNullable(cacheParameterGroupName);
            return this;
        }

        public Builder setEngineVersion(@Nullable Input<String> engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }

        public Builder setEngineVersion(@Nullable String engineVersion) {
            this.engineVersion = Input.ofNullable(engineVersion);
            return this;
        }

        public Builder setGlobalNodeGroupCount(@Nullable Input<Integer> globalNodeGroupCount) {
            this.globalNodeGroupCount = globalNodeGroupCount;
            return this;
        }

        public Builder setGlobalNodeGroupCount(@Nullable Integer globalNodeGroupCount) {
            this.globalNodeGroupCount = Input.ofNullable(globalNodeGroupCount);
            return this;
        }

        public Builder setGlobalReplicationGroupDescription(@Nullable Input<String> globalReplicationGroupDescription) {
            this.globalReplicationGroupDescription = globalReplicationGroupDescription;
            return this;
        }

        public Builder setGlobalReplicationGroupDescription(@Nullable String globalReplicationGroupDescription) {
            this.globalReplicationGroupDescription = Input.ofNullable(globalReplicationGroupDescription);
            return this;
        }

        public Builder setGlobalReplicationGroupIdSuffix(@Nullable Input<String> globalReplicationGroupIdSuffix) {
            this.globalReplicationGroupIdSuffix = globalReplicationGroupIdSuffix;
            return this;
        }

        public Builder setGlobalReplicationGroupIdSuffix(@Nullable String globalReplicationGroupIdSuffix) {
            this.globalReplicationGroupIdSuffix = Input.ofNullable(globalReplicationGroupIdSuffix);
            return this;
        }

        public Builder setMembers(Input<List<GlobalReplicationGroupMemberArgs>> members) {
            this.members = Objects.requireNonNull(members);
            return this;
        }

        public Builder setMembers(List<GlobalReplicationGroupMemberArgs> members) {
            this.members = Input.of(Objects.requireNonNull(members));
            return this;
        }

        public Builder setRegionalConfigurations(@Nullable Input<List<GlobalReplicationGroupRegionalConfigurationArgs>> regionalConfigurations) {
            this.regionalConfigurations = regionalConfigurations;
            return this;
        }

        public Builder setRegionalConfigurations(@Nullable List<GlobalReplicationGroupRegionalConfigurationArgs> regionalConfigurations) {
            this.regionalConfigurations = Input.ofNullable(regionalConfigurations);
            return this;
        }

        public GlobalReplicationGroupArgs build() {
            return new GlobalReplicationGroupArgs(automaticFailoverEnabled, cacheNodeType, cacheParameterGroupName, engineVersion, globalNodeGroupCount, globalReplicationGroupDescription, globalReplicationGroupIdSuffix, members, regionalConfigurations);
        }
    }
}
