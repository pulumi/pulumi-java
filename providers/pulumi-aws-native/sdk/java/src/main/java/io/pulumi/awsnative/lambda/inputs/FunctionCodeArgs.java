// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lambda.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FunctionCodeArgs extends io.pulumi.resources.ResourceArgs {

    public static final FunctionCodeArgs Empty = new FunctionCodeArgs();

    /**
     * ImageUri.
     * 
     */
    @Import(name="imageUri")
      private final @Nullable Output<String> imageUri;

    public Output<String> imageUri() {
        return this.imageUri == null ? Codegen.empty() : this.imageUri;
    }

    /**
     * An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
     * 
     */
    @Import(name="s3Bucket")
      private final @Nullable Output<String> s3Bucket;

    public Output<String> s3Bucket() {
        return this.s3Bucket == null ? Codegen.empty() : this.s3Bucket;
    }

    /**
     * The Amazon S3 key of the deployment package.
     * 
     */
    @Import(name="s3Key")
      private final @Nullable Output<String> s3Key;

    public Output<String> s3Key() {
        return this.s3Key == null ? Codegen.empty() : this.s3Key;
    }

    /**
     * For versioned objects, the version of the deployment package object to use.
     * 
     */
    @Import(name="s3ObjectVersion")
      private final @Nullable Output<String> s3ObjectVersion;

    public Output<String> s3ObjectVersion() {
        return this.s3ObjectVersion == null ? Codegen.empty() : this.s3ObjectVersion;
    }

    /**
     * The source code of your Lambda function. If you include your function source inline with this parameter, AWS CloudFormation places it in a file named index and zips it to create a deployment package..
     * 
     */
    @Import(name="zipFile")
      private final @Nullable Output<String> zipFile;

    public Output<String> zipFile() {
        return this.zipFile == null ? Codegen.empty() : this.zipFile;
    }

    public FunctionCodeArgs(
        @Nullable Output<String> imageUri,
        @Nullable Output<String> s3Bucket,
        @Nullable Output<String> s3Key,
        @Nullable Output<String> s3ObjectVersion,
        @Nullable Output<String> zipFile) {
        this.imageUri = imageUri;
        this.s3Bucket = s3Bucket;
        this.s3Key = s3Key;
        this.s3ObjectVersion = s3ObjectVersion;
        this.zipFile = zipFile;
    }

    private FunctionCodeArgs() {
        this.imageUri = Codegen.empty();
        this.s3Bucket = Codegen.empty();
        this.s3Key = Codegen.empty();
        this.s3ObjectVersion = Codegen.empty();
        this.zipFile = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FunctionCodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> imageUri;
        private @Nullable Output<String> s3Bucket;
        private @Nullable Output<String> s3Key;
        private @Nullable Output<String> s3ObjectVersion;
        private @Nullable Output<String> zipFile;

        public Builder() {
    	      // Empty
        }

        public Builder(FunctionCodeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageUri = defaults.imageUri;
    	      this.s3Bucket = defaults.s3Bucket;
    	      this.s3Key = defaults.s3Key;
    	      this.s3ObjectVersion = defaults.s3ObjectVersion;
    	      this.zipFile = defaults.zipFile;
        }

        public Builder imageUri(@Nullable Output<String> imageUri) {
            this.imageUri = imageUri;
            return this;
        }
        public Builder imageUri(@Nullable String imageUri) {
            this.imageUri = Codegen.ofNullable(imageUri);
            return this;
        }
        public Builder s3Bucket(@Nullable Output<String> s3Bucket) {
            this.s3Bucket = s3Bucket;
            return this;
        }
        public Builder s3Bucket(@Nullable String s3Bucket) {
            this.s3Bucket = Codegen.ofNullable(s3Bucket);
            return this;
        }
        public Builder s3Key(@Nullable Output<String> s3Key) {
            this.s3Key = s3Key;
            return this;
        }
        public Builder s3Key(@Nullable String s3Key) {
            this.s3Key = Codegen.ofNullable(s3Key);
            return this;
        }
        public Builder s3ObjectVersion(@Nullable Output<String> s3ObjectVersion) {
            this.s3ObjectVersion = s3ObjectVersion;
            return this;
        }
        public Builder s3ObjectVersion(@Nullable String s3ObjectVersion) {
            this.s3ObjectVersion = Codegen.ofNullable(s3ObjectVersion);
            return this;
        }
        public Builder zipFile(@Nullable Output<String> zipFile) {
            this.zipFile = zipFile;
            return this;
        }
        public Builder zipFile(@Nullable String zipFile) {
            this.zipFile = Codegen.ofNullable(zipFile);
            return this;
        }        public FunctionCodeArgs build() {
            return new FunctionCodeArgs(imageUri, s3Bucket, s3Key, s3ObjectVersion, zipFile);
        }
    }
}
