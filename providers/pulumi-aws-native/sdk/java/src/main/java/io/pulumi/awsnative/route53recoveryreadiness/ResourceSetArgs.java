// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.route53recoveryreadiness;

import io.pulumi.awsnative.route53recoveryreadiness.inputs.ResourceSetResourceArgs;
import io.pulumi.awsnative.route53recoveryreadiness.inputs.ResourceSetTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResourceSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourceSetArgs Empty = new ResourceSetArgs();

    /**
     * The name of the resource set to create.
     * 
     */
    @Import(name="resourceSetName")
      private final @Nullable Output<String> resourceSetName;

    public Output<String> getResourceSetName() {
        return this.resourceSetName == null ? Output.empty() : this.resourceSetName;
    }

    /**
     * The resource type of the resources in the resource set. Enter one of the following values for resource type:
     * 
     * AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
     * 
     */
    @Import(name="resourceSetType", required=true)
      private final Output<String> resourceSetType;

    public Output<String> getResourceSetType() {
        return this.resourceSetType;
    }

    /**
     * A list of resource objects in the resource set.
     * 
     */
    @Import(name="resources", required=true)
      private final Output<List<ResourceSetResourceArgs>> resources;

    public Output<List<ResourceSetResourceArgs>> getResources() {
        return this.resources;
    }

    /**
     * A tag to associate with the parameters for a resource set.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<ResourceSetTagArgs>> tags;

    public Output<List<ResourceSetTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ResourceSetArgs(
        @Nullable Output<String> resourceSetName,
        Output<String> resourceSetType,
        Output<List<ResourceSetResourceArgs>> resources,
        @Nullable Output<List<ResourceSetTagArgs>> tags) {
        this.resourceSetName = resourceSetName;
        this.resourceSetType = Objects.requireNonNull(resourceSetType, "expected parameter 'resourceSetType' to be non-null");
        this.resources = Objects.requireNonNull(resources, "expected parameter 'resources' to be non-null");
        this.tags = tags;
    }

    private ResourceSetArgs() {
        this.resourceSetName = Output.empty();
        this.resourceSetType = Output.empty();
        this.resources = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> resourceSetName;
        private Output<String> resourceSetType;
        private Output<List<ResourceSetResourceArgs>> resources;
        private @Nullable Output<List<ResourceSetTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceSetName = defaults.resourceSetName;
    	      this.resourceSetType = defaults.resourceSetType;
    	      this.resources = defaults.resources;
    	      this.tags = defaults.tags;
        }

        public Builder resourceSetName(@Nullable Output<String> resourceSetName) {
            this.resourceSetName = resourceSetName;
            return this;
        }

        public Builder resourceSetName(@Nullable String resourceSetName) {
            this.resourceSetName = Output.ofNullable(resourceSetName);
            return this;
        }

        public Builder resourceSetType(Output<String> resourceSetType) {
            this.resourceSetType = Objects.requireNonNull(resourceSetType);
            return this;
        }

        public Builder resourceSetType(String resourceSetType) {
            this.resourceSetType = Output.of(Objects.requireNonNull(resourceSetType));
            return this;
        }

        public Builder resources(Output<List<ResourceSetResourceArgs>> resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }

        public Builder resources(List<ResourceSetResourceArgs> resources) {
            this.resources = Output.of(Objects.requireNonNull(resources));
            return this;
        }

        public Builder tags(@Nullable Output<List<ResourceSetTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<ResourceSetTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public ResourceSetArgs build() {
            return new ResourceSetArgs(resourceSetName, resourceSetType, resources, tags);
        }
    }
}
