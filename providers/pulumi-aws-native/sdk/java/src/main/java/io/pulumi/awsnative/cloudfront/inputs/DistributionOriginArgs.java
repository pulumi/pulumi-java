// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudfront.inputs;

import io.pulumi.awsnative.cloudfront.inputs.DistributionCustomOriginConfigArgs;
import io.pulumi.awsnative.cloudfront.inputs.DistributionOriginCustomHeaderArgs;
import io.pulumi.awsnative.cloudfront.inputs.DistributionOriginShieldArgs;
import io.pulumi.awsnative.cloudfront.inputs.DistributionS3OriginConfigArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DistributionOriginArgs extends io.pulumi.resources.ResourceArgs {

    public static final DistributionOriginArgs Empty = new DistributionOriginArgs();

    @InputImport(name="connectionAttempts")
    private final @Nullable Input<Integer> connectionAttempts;

    public Input<Integer> getConnectionAttempts() {
        return this.connectionAttempts == null ? Input.empty() : this.connectionAttempts;
    }

    @InputImport(name="connectionTimeout")
    private final @Nullable Input<Integer> connectionTimeout;

    public Input<Integer> getConnectionTimeout() {
        return this.connectionTimeout == null ? Input.empty() : this.connectionTimeout;
    }

    @InputImport(name="customOriginConfig")
    private final @Nullable Input<DistributionCustomOriginConfigArgs> customOriginConfig;

    public Input<DistributionCustomOriginConfigArgs> getCustomOriginConfig() {
        return this.customOriginConfig == null ? Input.empty() : this.customOriginConfig;
    }

    @InputImport(name="domainName", required=true)
    private final Input<String> domainName;

    public Input<String> getDomainName() {
        return this.domainName;
    }

    @InputImport(name="id", required=true)
    private final Input<String> id;

    public Input<String> getId() {
        return this.id;
    }

    @InputImport(name="originCustomHeaders")
    private final @Nullable Input<List<DistributionOriginCustomHeaderArgs>> originCustomHeaders;

    public Input<List<DistributionOriginCustomHeaderArgs>> getOriginCustomHeaders() {
        return this.originCustomHeaders == null ? Input.empty() : this.originCustomHeaders;
    }

    @InputImport(name="originPath")
    private final @Nullable Input<String> originPath;

    public Input<String> getOriginPath() {
        return this.originPath == null ? Input.empty() : this.originPath;
    }

    @InputImport(name="originShield")
    private final @Nullable Input<DistributionOriginShieldArgs> originShield;

    public Input<DistributionOriginShieldArgs> getOriginShield() {
        return this.originShield == null ? Input.empty() : this.originShield;
    }

    @InputImport(name="s3OriginConfig")
    private final @Nullable Input<DistributionS3OriginConfigArgs> s3OriginConfig;

    public Input<DistributionS3OriginConfigArgs> getS3OriginConfig() {
        return this.s3OriginConfig == null ? Input.empty() : this.s3OriginConfig;
    }

    public DistributionOriginArgs(
        @Nullable Input<Integer> connectionAttempts,
        @Nullable Input<Integer> connectionTimeout,
        @Nullable Input<DistributionCustomOriginConfigArgs> customOriginConfig,
        Input<String> domainName,
        Input<String> id,
        @Nullable Input<List<DistributionOriginCustomHeaderArgs>> originCustomHeaders,
        @Nullable Input<String> originPath,
        @Nullable Input<DistributionOriginShieldArgs> originShield,
        @Nullable Input<DistributionS3OriginConfigArgs> s3OriginConfig) {
        this.connectionAttempts = connectionAttempts;
        this.connectionTimeout = connectionTimeout;
        this.customOriginConfig = customOriginConfig;
        this.domainName = Objects.requireNonNull(domainName, "expected parameter 'domainName' to be non-null");
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.originCustomHeaders = originCustomHeaders;
        this.originPath = originPath;
        this.originShield = originShield;
        this.s3OriginConfig = s3OriginConfig;
    }

    private DistributionOriginArgs() {
        this.connectionAttempts = Input.empty();
        this.connectionTimeout = Input.empty();
        this.customOriginConfig = Input.empty();
        this.domainName = Input.empty();
        this.id = Input.empty();
        this.originCustomHeaders = Input.empty();
        this.originPath = Input.empty();
        this.originShield = Input.empty();
        this.s3OriginConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionOriginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> connectionAttempts;
        private @Nullable Input<Integer> connectionTimeout;
        private @Nullable Input<DistributionCustomOriginConfigArgs> customOriginConfig;
        private Input<String> domainName;
        private Input<String> id;
        private @Nullable Input<List<DistributionOriginCustomHeaderArgs>> originCustomHeaders;
        private @Nullable Input<String> originPath;
        private @Nullable Input<DistributionOriginShieldArgs> originShield;
        private @Nullable Input<DistributionS3OriginConfigArgs> s3OriginConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(DistributionOriginArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionAttempts = defaults.connectionAttempts;
    	      this.connectionTimeout = defaults.connectionTimeout;
    	      this.customOriginConfig = defaults.customOriginConfig;
    	      this.domainName = defaults.domainName;
    	      this.id = defaults.id;
    	      this.originCustomHeaders = defaults.originCustomHeaders;
    	      this.originPath = defaults.originPath;
    	      this.originShield = defaults.originShield;
    	      this.s3OriginConfig = defaults.s3OriginConfig;
        }

        public Builder setConnectionAttempts(@Nullable Input<Integer> connectionAttempts) {
            this.connectionAttempts = connectionAttempts;
            return this;
        }

        public Builder setConnectionAttempts(@Nullable Integer connectionAttempts) {
            this.connectionAttempts = Input.ofNullable(connectionAttempts);
            return this;
        }

        public Builder setConnectionTimeout(@Nullable Input<Integer> connectionTimeout) {
            this.connectionTimeout = connectionTimeout;
            return this;
        }

        public Builder setConnectionTimeout(@Nullable Integer connectionTimeout) {
            this.connectionTimeout = Input.ofNullable(connectionTimeout);
            return this;
        }

        public Builder setCustomOriginConfig(@Nullable Input<DistributionCustomOriginConfigArgs> customOriginConfig) {
            this.customOriginConfig = customOriginConfig;
            return this;
        }

        public Builder setCustomOriginConfig(@Nullable DistributionCustomOriginConfigArgs customOriginConfig) {
            this.customOriginConfig = Input.ofNullable(customOriginConfig);
            return this;
        }

        public Builder setDomainName(Input<String> domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }

        public Builder setDomainName(String domainName) {
            this.domainName = Input.of(Objects.requireNonNull(domainName));
            return this;
        }

        public Builder setId(Input<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setId(String id) {
            this.id = Input.of(Objects.requireNonNull(id));
            return this;
        }

        public Builder setOriginCustomHeaders(@Nullable Input<List<DistributionOriginCustomHeaderArgs>> originCustomHeaders) {
            this.originCustomHeaders = originCustomHeaders;
            return this;
        }

        public Builder setOriginCustomHeaders(@Nullable List<DistributionOriginCustomHeaderArgs> originCustomHeaders) {
            this.originCustomHeaders = Input.ofNullable(originCustomHeaders);
            return this;
        }

        public Builder setOriginPath(@Nullable Input<String> originPath) {
            this.originPath = originPath;
            return this;
        }

        public Builder setOriginPath(@Nullable String originPath) {
            this.originPath = Input.ofNullable(originPath);
            return this;
        }

        public Builder setOriginShield(@Nullable Input<DistributionOriginShieldArgs> originShield) {
            this.originShield = originShield;
            return this;
        }

        public Builder setOriginShield(@Nullable DistributionOriginShieldArgs originShield) {
            this.originShield = Input.ofNullable(originShield);
            return this;
        }

        public Builder setS3OriginConfig(@Nullable Input<DistributionS3OriginConfigArgs> s3OriginConfig) {
            this.s3OriginConfig = s3OriginConfig;
            return this;
        }

        public Builder setS3OriginConfig(@Nullable DistributionS3OriginConfigArgs s3OriginConfig) {
            this.s3OriginConfig = Input.ofNullable(s3OriginConfig);
            return this;
        }

        public DistributionOriginArgs build() {
            return new DistributionOriginArgs(connectionAttempts, connectionTimeout, customOriginConfig, domainName, id, originCustomHeaders, originPath, originShield, s3OriginConfig);
        }
    }
}
