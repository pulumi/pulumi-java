// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.fms.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class PolicyIEMap {
    private final @Nullable List<String> aCCOUNT;
    private final @Nullable List<String> oRGUNIT;

    @CustomType.Constructor
    private PolicyIEMap(
        @CustomType.Parameter("aCCOUNT") @Nullable List<String> aCCOUNT,
        @CustomType.Parameter("oRGUNIT") @Nullable List<String> oRGUNIT) {
        this.aCCOUNT = aCCOUNT;
        this.oRGUNIT = oRGUNIT;
    }

    public List<String> aCCOUNT() {
        return this.aCCOUNT == null ? List.of() : this.aCCOUNT;
    }
    public List<String> oRGUNIT() {
        return this.oRGUNIT == null ? List.of() : this.oRGUNIT;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyIEMap defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> aCCOUNT;
        private @Nullable List<String> oRGUNIT;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyIEMap defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aCCOUNT = defaults.aCCOUNT;
    	      this.oRGUNIT = defaults.oRGUNIT;
        }

        public Builder aCCOUNT(@Nullable List<String> aCCOUNT) {
            this.aCCOUNT = aCCOUNT;
            return this;
        }
        public Builder aCCOUNT(String... aCCOUNT) {
            return aCCOUNT(List.of(aCCOUNT));
        }
        public Builder oRGUNIT(@Nullable List<String> oRGUNIT) {
            this.oRGUNIT = oRGUNIT;
            return this;
        }
        public Builder oRGUNIT(String... oRGUNIT) {
            return oRGUNIT(List.of(oRGUNIT));
        }        public PolicyIEMap build() {
            return new PolicyIEMap(aCCOUNT, oRGUNIT);
        }
    }
}
