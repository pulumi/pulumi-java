// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cassandra;

import io.pulumi.awsnative.cassandra.inputs.TableBillingModeArgs;
import io.pulumi.awsnative.cassandra.inputs.TableClusteringKeyColumnArgs;
import io.pulumi.awsnative.cassandra.inputs.TableColumnArgs;
import io.pulumi.awsnative.cassandra.inputs.TableEncryptionSpecificationArgs;
import io.pulumi.awsnative.cassandra.inputs.TableTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TableArgs extends io.pulumi.resources.ResourceArgs {

    public static final TableArgs Empty = new TableArgs();

    @Import(name="billingMode")
      private final @Nullable Output<TableBillingModeArgs> billingMode;

    public Output<TableBillingModeArgs> getBillingMode() {
        return this.billingMode == null ? Output.empty() : this.billingMode;
    }

    /**
     * Clustering key columns of the table
     * 
     */
    @Import(name="clusteringKeyColumns")
      private final @Nullable Output<List<TableClusteringKeyColumnArgs>> clusteringKeyColumns;

    public Output<List<TableClusteringKeyColumnArgs>> getClusteringKeyColumns() {
        return this.clusteringKeyColumns == null ? Output.empty() : this.clusteringKeyColumns;
    }

    /**
     * Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
     * 
     */
    @Import(name="defaultTimeToLive")
      private final @Nullable Output<Integer> defaultTimeToLive;

    public Output<Integer> getDefaultTimeToLive() {
        return this.defaultTimeToLive == null ? Output.empty() : this.defaultTimeToLive;
    }

    @Import(name="encryptionSpecification")
      private final @Nullable Output<TableEncryptionSpecificationArgs> encryptionSpecification;

    public Output<TableEncryptionSpecificationArgs> getEncryptionSpecification() {
        return this.encryptionSpecification == null ? Output.empty() : this.encryptionSpecification;
    }

    /**
     * Name for Cassandra keyspace
     * 
     */
    @Import(name="keyspaceName", required=true)
      private final Output<String> keyspaceName;

    public Output<String> getKeyspaceName() {
        return this.keyspaceName;
    }

    /**
     * Partition key columns of the table
     * 
     */
    @Import(name="partitionKeyColumns", required=true)
      private final Output<List<TableColumnArgs>> partitionKeyColumns;

    public Output<List<TableColumnArgs>> getPartitionKeyColumns() {
        return this.partitionKeyColumns;
    }

    /**
     * Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     * 
     */
    @Import(name="pointInTimeRecoveryEnabled")
      private final @Nullable Output<Boolean> pointInTimeRecoveryEnabled;

    public Output<Boolean> getPointInTimeRecoveryEnabled() {
        return this.pointInTimeRecoveryEnabled == null ? Output.empty() : this.pointInTimeRecoveryEnabled;
    }

    /**
     * Non-key columns of the table
     * 
     */
    @Import(name="regularColumns")
      private final @Nullable Output<List<TableColumnArgs>> regularColumns;

    public Output<List<TableColumnArgs>> getRegularColumns() {
        return this.regularColumns == null ? Output.empty() : this.regularColumns;
    }

    /**
     * Name for Cassandra table
     * 
     */
    @Import(name="tableName")
      private final @Nullable Output<String> tableName;

    public Output<String> getTableName() {
        return this.tableName == null ? Output.empty() : this.tableName;
    }

    /**
     * An array of key-value pairs to apply to this resource
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<TableTagArgs>> tags;

    public Output<List<TableTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public TableArgs(
        @Nullable Output<TableBillingModeArgs> billingMode,
        @Nullable Output<List<TableClusteringKeyColumnArgs>> clusteringKeyColumns,
        @Nullable Output<Integer> defaultTimeToLive,
        @Nullable Output<TableEncryptionSpecificationArgs> encryptionSpecification,
        Output<String> keyspaceName,
        Output<List<TableColumnArgs>> partitionKeyColumns,
        @Nullable Output<Boolean> pointInTimeRecoveryEnabled,
        @Nullable Output<List<TableColumnArgs>> regularColumns,
        @Nullable Output<String> tableName,
        @Nullable Output<List<TableTagArgs>> tags) {
        this.billingMode = billingMode;
        this.clusteringKeyColumns = clusteringKeyColumns;
        this.defaultTimeToLive = defaultTimeToLive;
        this.encryptionSpecification = encryptionSpecification;
        this.keyspaceName = Objects.requireNonNull(keyspaceName, "expected parameter 'keyspaceName' to be non-null");
        this.partitionKeyColumns = Objects.requireNonNull(partitionKeyColumns, "expected parameter 'partitionKeyColumns' to be non-null");
        this.pointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
        this.regularColumns = regularColumns;
        this.tableName = tableName;
        this.tags = tags;
    }

    private TableArgs() {
        this.billingMode = Output.empty();
        this.clusteringKeyColumns = Output.empty();
        this.defaultTimeToLive = Output.empty();
        this.encryptionSpecification = Output.empty();
        this.keyspaceName = Output.empty();
        this.partitionKeyColumns = Output.empty();
        this.pointInTimeRecoveryEnabled = Output.empty();
        this.regularColumns = Output.empty();
        this.tableName = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<TableBillingModeArgs> billingMode;
        private @Nullable Output<List<TableClusteringKeyColumnArgs>> clusteringKeyColumns;
        private @Nullable Output<Integer> defaultTimeToLive;
        private @Nullable Output<TableEncryptionSpecificationArgs> encryptionSpecification;
        private Output<String> keyspaceName;
        private Output<List<TableColumnArgs>> partitionKeyColumns;
        private @Nullable Output<Boolean> pointInTimeRecoveryEnabled;
        private @Nullable Output<List<TableColumnArgs>> regularColumns;
        private @Nullable Output<String> tableName;
        private @Nullable Output<List<TableTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(TableArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingMode = defaults.billingMode;
    	      this.clusteringKeyColumns = defaults.clusteringKeyColumns;
    	      this.defaultTimeToLive = defaults.defaultTimeToLive;
    	      this.encryptionSpecification = defaults.encryptionSpecification;
    	      this.keyspaceName = defaults.keyspaceName;
    	      this.partitionKeyColumns = defaults.partitionKeyColumns;
    	      this.pointInTimeRecoveryEnabled = defaults.pointInTimeRecoveryEnabled;
    	      this.regularColumns = defaults.regularColumns;
    	      this.tableName = defaults.tableName;
    	      this.tags = defaults.tags;
        }

        public Builder billingMode(@Nullable Output<TableBillingModeArgs> billingMode) {
            this.billingMode = billingMode;
            return this;
        }
        public Builder billingMode(@Nullable TableBillingModeArgs billingMode) {
            this.billingMode = Output.ofNullable(billingMode);
            return this;
        }
        public Builder clusteringKeyColumns(@Nullable Output<List<TableClusteringKeyColumnArgs>> clusteringKeyColumns) {
            this.clusteringKeyColumns = clusteringKeyColumns;
            return this;
        }
        public Builder clusteringKeyColumns(@Nullable List<TableClusteringKeyColumnArgs> clusteringKeyColumns) {
            this.clusteringKeyColumns = Output.ofNullable(clusteringKeyColumns);
            return this;
        }
        public Builder clusteringKeyColumns(TableClusteringKeyColumnArgs... clusteringKeyColumns) {
            return clusteringKeyColumns(List.of(clusteringKeyColumns));
        }
        public Builder defaultTimeToLive(@Nullable Output<Integer> defaultTimeToLive) {
            this.defaultTimeToLive = defaultTimeToLive;
            return this;
        }
        public Builder defaultTimeToLive(@Nullable Integer defaultTimeToLive) {
            this.defaultTimeToLive = Output.ofNullable(defaultTimeToLive);
            return this;
        }
        public Builder encryptionSpecification(@Nullable Output<TableEncryptionSpecificationArgs> encryptionSpecification) {
            this.encryptionSpecification = encryptionSpecification;
            return this;
        }
        public Builder encryptionSpecification(@Nullable TableEncryptionSpecificationArgs encryptionSpecification) {
            this.encryptionSpecification = Output.ofNullable(encryptionSpecification);
            return this;
        }
        public Builder keyspaceName(Output<String> keyspaceName) {
            this.keyspaceName = Objects.requireNonNull(keyspaceName);
            return this;
        }
        public Builder keyspaceName(String keyspaceName) {
            this.keyspaceName = Output.of(Objects.requireNonNull(keyspaceName));
            return this;
        }
        public Builder partitionKeyColumns(Output<List<TableColumnArgs>> partitionKeyColumns) {
            this.partitionKeyColumns = Objects.requireNonNull(partitionKeyColumns);
            return this;
        }
        public Builder partitionKeyColumns(List<TableColumnArgs> partitionKeyColumns) {
            this.partitionKeyColumns = Output.of(Objects.requireNonNull(partitionKeyColumns));
            return this;
        }
        public Builder partitionKeyColumns(TableColumnArgs... partitionKeyColumns) {
            return partitionKeyColumns(List.of(partitionKeyColumns));
        }
        public Builder pointInTimeRecoveryEnabled(@Nullable Output<Boolean> pointInTimeRecoveryEnabled) {
            this.pointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
            return this;
        }
        public Builder pointInTimeRecoveryEnabled(@Nullable Boolean pointInTimeRecoveryEnabled) {
            this.pointInTimeRecoveryEnabled = Output.ofNullable(pointInTimeRecoveryEnabled);
            return this;
        }
        public Builder regularColumns(@Nullable Output<List<TableColumnArgs>> regularColumns) {
            this.regularColumns = regularColumns;
            return this;
        }
        public Builder regularColumns(@Nullable List<TableColumnArgs> regularColumns) {
            this.regularColumns = Output.ofNullable(regularColumns);
            return this;
        }
        public Builder regularColumns(TableColumnArgs... regularColumns) {
            return regularColumns(List.of(regularColumns));
        }
        public Builder tableName(@Nullable Output<String> tableName) {
            this.tableName = tableName;
            return this;
        }
        public Builder tableName(@Nullable String tableName) {
            this.tableName = Output.ofNullable(tableName);
            return this;
        }
        public Builder tags(@Nullable Output<List<TableTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<TableTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tags(TableTagArgs... tags) {
            return tags(List.of(tags));
        }        public TableArgs build() {
            return new TableArgs(billingMode, clusteringKeyColumns, defaultTimeToLive, encryptionSpecification, keyspaceName, partitionKeyColumns, pointInTimeRecoveryEnabled, regularColumns, tableName, tags);
        }
    }
}
