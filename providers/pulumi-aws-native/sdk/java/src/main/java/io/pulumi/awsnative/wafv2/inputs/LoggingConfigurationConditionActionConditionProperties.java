// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2.inputs;

import io.pulumi.awsnative.wafv2.enums.LoggingConfigurationConditionActionConditionPropertiesAction;
import io.pulumi.core.internal.annotations.InputImport;
import java.util.Objects;


/**
 * A single action condition.
 * 
 */
public final class LoggingConfigurationConditionActionConditionProperties extends io.pulumi.resources.InvokeArgs {

    public static final LoggingConfigurationConditionActionConditionProperties Empty = new LoggingConfigurationConditionActionConditionProperties();

    /**
     * Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
     * 
     */
    @InputImport(name="action", required=true)
    private final LoggingConfigurationConditionActionConditionPropertiesAction action;

    public LoggingConfigurationConditionActionConditionPropertiesAction getAction() {
        return this.action;
    }

    public LoggingConfigurationConditionActionConditionProperties(LoggingConfigurationConditionActionConditionPropertiesAction action) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
    }

    private LoggingConfigurationConditionActionConditionProperties() {
        this.action = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoggingConfigurationConditionActionConditionProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingConfigurationConditionActionConditionPropertiesAction action;

        public Builder() {
    	      // Empty
        }

        public Builder(LoggingConfigurationConditionActionConditionProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
        }

        public Builder setAction(LoggingConfigurationConditionActionConditionPropertiesAction action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public LoggingConfigurationConditionActionConditionProperties build() {
            return new LoggingConfigurationConditionActionConditionProperties(action);
        }
    }
}
