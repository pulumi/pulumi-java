// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.timestream.inputs;

import io.pulumi.awsnative.timestream.inputs.ScheduledQueryS3ConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;


/**
 * Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.
 * 
 */
public final class ScheduledQueryErrorReportConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryErrorReportConfigurationArgs Empty = new ScheduledQueryErrorReportConfigurationArgs();

    @InputImport(name="s3Configuration", required=true)
      private final Input<ScheduledQueryS3ConfigurationArgs> s3Configuration;

    public Input<ScheduledQueryS3ConfigurationArgs> getS3Configuration() {
        return this.s3Configuration;
    }

    public ScheduledQueryErrorReportConfigurationArgs(Input<ScheduledQueryS3ConfigurationArgs> s3Configuration) {
        this.s3Configuration = Objects.requireNonNull(s3Configuration, "expected parameter 's3Configuration' to be non-null");
    }

    private ScheduledQueryErrorReportConfigurationArgs() {
        this.s3Configuration = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduledQueryErrorReportConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<ScheduledQueryS3ConfigurationArgs> s3Configuration;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduledQueryErrorReportConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.s3Configuration = defaults.s3Configuration;
        }

        public Builder s3Configuration(Input<ScheduledQueryS3ConfigurationArgs> s3Configuration) {
            this.s3Configuration = Objects.requireNonNull(s3Configuration);
            return this;
        }

        public Builder s3Configuration(ScheduledQueryS3ConfigurationArgs s3Configuration) {
            this.s3Configuration = Input.of(Objects.requireNonNull(s3Configuration));
            return this;
        }
        public ScheduledQueryErrorReportConfigurationArgs build() {
            return new ScheduledQueryErrorReportConfigurationArgs(s3Configuration);
        }
    }
}
