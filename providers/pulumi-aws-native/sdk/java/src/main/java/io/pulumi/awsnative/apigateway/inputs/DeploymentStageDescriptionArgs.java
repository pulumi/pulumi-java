// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apigateway.inputs;

import io.pulumi.awsnative.apigateway.inputs.DeploymentAccessLogSettingArgs;
import io.pulumi.awsnative.apigateway.inputs.DeploymentCanarySettingArgs;
import io.pulumi.awsnative.apigateway.inputs.DeploymentMethodSettingArgs;
import io.pulumi.awsnative.apigateway.inputs.DeploymentTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeploymentStageDescriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeploymentStageDescriptionArgs Empty = new DeploymentStageDescriptionArgs();

    /**
     * Specifies settings for logging access in this stage.
     * 
     */
    @InputImport(name="accessLogSetting")
    private final @Nullable Input<DeploymentAccessLogSettingArgs> accessLogSetting;

    public Input<DeploymentAccessLogSettingArgs> getAccessLogSetting() {
        return this.accessLogSetting == null ? Input.empty() : this.accessLogSetting;
    }

    /**
     * Indicates whether cache clustering is enabled for the stage.
     * 
     */
    @InputImport(name="cacheClusterEnabled")
    private final @Nullable Input<Boolean> cacheClusterEnabled;

    public Input<Boolean> getCacheClusterEnabled() {
        return this.cacheClusterEnabled == null ? Input.empty() : this.cacheClusterEnabled;
    }

    /**
     * The size of the stage's cache cluster.
     * 
     */
    @InputImport(name="cacheClusterSize")
    private final @Nullable Input<String> cacheClusterSize;

    public Input<String> getCacheClusterSize() {
        return this.cacheClusterSize == null ? Input.empty() : this.cacheClusterSize;
    }

    /**
     * The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
     * 
     */
    @InputImport(name="cacheDataEncrypted")
    private final @Nullable Input<Boolean> cacheDataEncrypted;

    public Input<Boolean> getCacheDataEncrypted() {
        return this.cacheDataEncrypted == null ? Input.empty() : this.cacheDataEncrypted;
    }

    /**
     * The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
     * 
     */
    @InputImport(name="cacheTtlInSeconds")
    private final @Nullable Input<Integer> cacheTtlInSeconds;

    public Input<Integer> getCacheTtlInSeconds() {
        return this.cacheTtlInSeconds == null ? Input.empty() : this.cacheTtlInSeconds;
    }

    /**
     * Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
     * 
     */
    @InputImport(name="cachingEnabled")
    private final @Nullable Input<Boolean> cachingEnabled;

    public Input<Boolean> getCachingEnabled() {
        return this.cachingEnabled == null ? Input.empty() : this.cachingEnabled;
    }

    /**
     * Specifies settings for the canary deployment in this stage.
     * 
     */
    @InputImport(name="canarySetting")
    private final @Nullable Input<DeploymentCanarySettingArgs> canarySetting;

    public Input<DeploymentCanarySettingArgs> getCanarySetting() {
        return this.canarySetting == null ? Input.empty() : this.canarySetting;
    }

    /**
     * The identifier of the client certificate that API Gateway uses to call your integration endpoints in the stage.
     * 
     */
    @InputImport(name="clientCertificateId")
    private final @Nullable Input<String> clientCertificateId;

    public Input<String> getClientCertificateId() {
        return this.clientCertificateId == null ? Input.empty() : this.clientCertificateId;
    }

    /**
     * Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
     * 
     */
    @InputImport(name="dataTraceEnabled")
    private final @Nullable Input<Boolean> dataTraceEnabled;

    public Input<Boolean> getDataTraceEnabled() {
        return this.dataTraceEnabled == null ? Input.empty() : this.dataTraceEnabled;
    }

    /**
     * A description of the purpose of the stage.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The version identifier of the API documentation snapshot.
     * 
     */
    @InputImport(name="documentationVersion")
    private final @Nullable Input<String> documentationVersion;

    public Input<String> getDocumentationVersion() {
        return this.documentationVersion == null ? Input.empty() : this.documentationVersion;
    }

    /**
     * The logging level for this method. For valid values, see the loggingLevel property of the Stage resource in the Amazon API Gateway API Reference.
     * 
     */
    @InputImport(name="loggingLevel")
    private final @Nullable Input<String> loggingLevel;

    public Input<String> getLoggingLevel() {
        return this.loggingLevel == null ? Input.empty() : this.loggingLevel;
    }

    /**
     * Configures settings for all of the stage's methods.
     * 
     */
    @InputImport(name="methodSettings")
    private final @Nullable Input<List<DeploymentMethodSettingArgs>> methodSettings;

    public Input<List<DeploymentMethodSettingArgs>> getMethodSettings() {
        return this.methodSettings == null ? Input.empty() : this.methodSettings;
    }

    /**
     * Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
     * 
     */
    @InputImport(name="metricsEnabled")
    private final @Nullable Input<Boolean> metricsEnabled;

    public Input<Boolean> getMetricsEnabled() {
        return this.metricsEnabled == null ? Input.empty() : this.metricsEnabled;
    }

    /**
     * An array of arbitrary tags (key-value pairs) to associate with the stage.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<List<DeploymentTagArgs>> tags;

    public Input<List<DeploymentTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    @InputImport(name="throttlingBurstLimit")
    private final @Nullable Input<Integer> throttlingBurstLimit;

    public Input<Integer> getThrottlingBurstLimit() {
        return this.throttlingBurstLimit == null ? Input.empty() : this.throttlingBurstLimit;
    }

    /**
     * The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    @InputImport(name="throttlingRateLimit")
    private final @Nullable Input<Double> throttlingRateLimit;

    public Input<Double> getThrottlingRateLimit() {
        return this.throttlingRateLimit == null ? Input.empty() : this.throttlingRateLimit;
    }

    /**
     * Specifies whether active tracing with X-ray is enabled for this stage.
     * 
     */
    @InputImport(name="tracingEnabled")
    private final @Nullable Input<Boolean> tracingEnabled;

    public Input<Boolean> getTracingEnabled() {
        return this.tracingEnabled == null ? Input.empty() : this.tracingEnabled;
    }

    /**
     * A map that defines the stage variables. Variable names must consist of alphanumeric characters, and the values must match the following regular expression: [A-Za-z0-9-._~:/?#&=,]+.
     * 
     */
    @InputImport(name="variables")
    private final @Nullable Input<Object> variables;

    public Input<Object> getVariables() {
        return this.variables == null ? Input.empty() : this.variables;
    }

    public DeploymentStageDescriptionArgs(
        @Nullable Input<DeploymentAccessLogSettingArgs> accessLogSetting,
        @Nullable Input<Boolean> cacheClusterEnabled,
        @Nullable Input<String> cacheClusterSize,
        @Nullable Input<Boolean> cacheDataEncrypted,
        @Nullable Input<Integer> cacheTtlInSeconds,
        @Nullable Input<Boolean> cachingEnabled,
        @Nullable Input<DeploymentCanarySettingArgs> canarySetting,
        @Nullable Input<String> clientCertificateId,
        @Nullable Input<Boolean> dataTraceEnabled,
        @Nullable Input<String> description,
        @Nullable Input<String> documentationVersion,
        @Nullable Input<String> loggingLevel,
        @Nullable Input<List<DeploymentMethodSettingArgs>> methodSettings,
        @Nullable Input<Boolean> metricsEnabled,
        @Nullable Input<List<DeploymentTagArgs>> tags,
        @Nullable Input<Integer> throttlingBurstLimit,
        @Nullable Input<Double> throttlingRateLimit,
        @Nullable Input<Boolean> tracingEnabled,
        @Nullable Input<Object> variables) {
        this.accessLogSetting = accessLogSetting;
        this.cacheClusterEnabled = cacheClusterEnabled;
        this.cacheClusterSize = cacheClusterSize;
        this.cacheDataEncrypted = cacheDataEncrypted;
        this.cacheTtlInSeconds = cacheTtlInSeconds;
        this.cachingEnabled = cachingEnabled;
        this.canarySetting = canarySetting;
        this.clientCertificateId = clientCertificateId;
        this.dataTraceEnabled = dataTraceEnabled;
        this.description = description;
        this.documentationVersion = documentationVersion;
        this.loggingLevel = loggingLevel;
        this.methodSettings = methodSettings;
        this.metricsEnabled = metricsEnabled;
        this.tags = tags;
        this.throttlingBurstLimit = throttlingBurstLimit;
        this.throttlingRateLimit = throttlingRateLimit;
        this.tracingEnabled = tracingEnabled;
        this.variables = variables;
    }

    private DeploymentStageDescriptionArgs() {
        this.accessLogSetting = Input.empty();
        this.cacheClusterEnabled = Input.empty();
        this.cacheClusterSize = Input.empty();
        this.cacheDataEncrypted = Input.empty();
        this.cacheTtlInSeconds = Input.empty();
        this.cachingEnabled = Input.empty();
        this.canarySetting = Input.empty();
        this.clientCertificateId = Input.empty();
        this.dataTraceEnabled = Input.empty();
        this.description = Input.empty();
        this.documentationVersion = Input.empty();
        this.loggingLevel = Input.empty();
        this.methodSettings = Input.empty();
        this.metricsEnabled = Input.empty();
        this.tags = Input.empty();
        this.throttlingBurstLimit = Input.empty();
        this.throttlingRateLimit = Input.empty();
        this.tracingEnabled = Input.empty();
        this.variables = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentStageDescriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DeploymentAccessLogSettingArgs> accessLogSetting;
        private @Nullable Input<Boolean> cacheClusterEnabled;
        private @Nullable Input<String> cacheClusterSize;
        private @Nullable Input<Boolean> cacheDataEncrypted;
        private @Nullable Input<Integer> cacheTtlInSeconds;
        private @Nullable Input<Boolean> cachingEnabled;
        private @Nullable Input<DeploymentCanarySettingArgs> canarySetting;
        private @Nullable Input<String> clientCertificateId;
        private @Nullable Input<Boolean> dataTraceEnabled;
        private @Nullable Input<String> description;
        private @Nullable Input<String> documentationVersion;
        private @Nullable Input<String> loggingLevel;
        private @Nullable Input<List<DeploymentMethodSettingArgs>> methodSettings;
        private @Nullable Input<Boolean> metricsEnabled;
        private @Nullable Input<List<DeploymentTagArgs>> tags;
        private @Nullable Input<Integer> throttlingBurstLimit;
        private @Nullable Input<Double> throttlingRateLimit;
        private @Nullable Input<Boolean> tracingEnabled;
        private @Nullable Input<Object> variables;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentStageDescriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLogSetting = defaults.accessLogSetting;
    	      this.cacheClusterEnabled = defaults.cacheClusterEnabled;
    	      this.cacheClusterSize = defaults.cacheClusterSize;
    	      this.cacheDataEncrypted = defaults.cacheDataEncrypted;
    	      this.cacheTtlInSeconds = defaults.cacheTtlInSeconds;
    	      this.cachingEnabled = defaults.cachingEnabled;
    	      this.canarySetting = defaults.canarySetting;
    	      this.clientCertificateId = defaults.clientCertificateId;
    	      this.dataTraceEnabled = defaults.dataTraceEnabled;
    	      this.description = defaults.description;
    	      this.documentationVersion = defaults.documentationVersion;
    	      this.loggingLevel = defaults.loggingLevel;
    	      this.methodSettings = defaults.methodSettings;
    	      this.metricsEnabled = defaults.metricsEnabled;
    	      this.tags = defaults.tags;
    	      this.throttlingBurstLimit = defaults.throttlingBurstLimit;
    	      this.throttlingRateLimit = defaults.throttlingRateLimit;
    	      this.tracingEnabled = defaults.tracingEnabled;
    	      this.variables = defaults.variables;
        }

        public Builder setAccessLogSetting(@Nullable Input<DeploymentAccessLogSettingArgs> accessLogSetting) {
            this.accessLogSetting = accessLogSetting;
            return this;
        }

        public Builder setAccessLogSetting(@Nullable DeploymentAccessLogSettingArgs accessLogSetting) {
            this.accessLogSetting = Input.ofNullable(accessLogSetting);
            return this;
        }

        public Builder setCacheClusterEnabled(@Nullable Input<Boolean> cacheClusterEnabled) {
            this.cacheClusterEnabled = cacheClusterEnabled;
            return this;
        }

        public Builder setCacheClusterEnabled(@Nullable Boolean cacheClusterEnabled) {
            this.cacheClusterEnabled = Input.ofNullable(cacheClusterEnabled);
            return this;
        }

        public Builder setCacheClusterSize(@Nullable Input<String> cacheClusterSize) {
            this.cacheClusterSize = cacheClusterSize;
            return this;
        }

        public Builder setCacheClusterSize(@Nullable String cacheClusterSize) {
            this.cacheClusterSize = Input.ofNullable(cacheClusterSize);
            return this;
        }

        public Builder setCacheDataEncrypted(@Nullable Input<Boolean> cacheDataEncrypted) {
            this.cacheDataEncrypted = cacheDataEncrypted;
            return this;
        }

        public Builder setCacheDataEncrypted(@Nullable Boolean cacheDataEncrypted) {
            this.cacheDataEncrypted = Input.ofNullable(cacheDataEncrypted);
            return this;
        }

        public Builder setCacheTtlInSeconds(@Nullable Input<Integer> cacheTtlInSeconds) {
            this.cacheTtlInSeconds = cacheTtlInSeconds;
            return this;
        }

        public Builder setCacheTtlInSeconds(@Nullable Integer cacheTtlInSeconds) {
            this.cacheTtlInSeconds = Input.ofNullable(cacheTtlInSeconds);
            return this;
        }

        public Builder setCachingEnabled(@Nullable Input<Boolean> cachingEnabled) {
            this.cachingEnabled = cachingEnabled;
            return this;
        }

        public Builder setCachingEnabled(@Nullable Boolean cachingEnabled) {
            this.cachingEnabled = Input.ofNullable(cachingEnabled);
            return this;
        }

        public Builder setCanarySetting(@Nullable Input<DeploymentCanarySettingArgs> canarySetting) {
            this.canarySetting = canarySetting;
            return this;
        }

        public Builder setCanarySetting(@Nullable DeploymentCanarySettingArgs canarySetting) {
            this.canarySetting = Input.ofNullable(canarySetting);
            return this;
        }

        public Builder setClientCertificateId(@Nullable Input<String> clientCertificateId) {
            this.clientCertificateId = clientCertificateId;
            return this;
        }

        public Builder setClientCertificateId(@Nullable String clientCertificateId) {
            this.clientCertificateId = Input.ofNullable(clientCertificateId);
            return this;
        }

        public Builder setDataTraceEnabled(@Nullable Input<Boolean> dataTraceEnabled) {
            this.dataTraceEnabled = dataTraceEnabled;
            return this;
        }

        public Builder setDataTraceEnabled(@Nullable Boolean dataTraceEnabled) {
            this.dataTraceEnabled = Input.ofNullable(dataTraceEnabled);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDocumentationVersion(@Nullable Input<String> documentationVersion) {
            this.documentationVersion = documentationVersion;
            return this;
        }

        public Builder setDocumentationVersion(@Nullable String documentationVersion) {
            this.documentationVersion = Input.ofNullable(documentationVersion);
            return this;
        }

        public Builder setLoggingLevel(@Nullable Input<String> loggingLevel) {
            this.loggingLevel = loggingLevel;
            return this;
        }

        public Builder setLoggingLevel(@Nullable String loggingLevel) {
            this.loggingLevel = Input.ofNullable(loggingLevel);
            return this;
        }

        public Builder setMethodSettings(@Nullable Input<List<DeploymentMethodSettingArgs>> methodSettings) {
            this.methodSettings = methodSettings;
            return this;
        }

        public Builder setMethodSettings(@Nullable List<DeploymentMethodSettingArgs> methodSettings) {
            this.methodSettings = Input.ofNullable(methodSettings);
            return this;
        }

        public Builder setMetricsEnabled(@Nullable Input<Boolean> metricsEnabled) {
            this.metricsEnabled = metricsEnabled;
            return this;
        }

        public Builder setMetricsEnabled(@Nullable Boolean metricsEnabled) {
            this.metricsEnabled = Input.ofNullable(metricsEnabled);
            return this;
        }

        public Builder setTags(@Nullable Input<List<DeploymentTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<DeploymentTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setThrottlingBurstLimit(@Nullable Input<Integer> throttlingBurstLimit) {
            this.throttlingBurstLimit = throttlingBurstLimit;
            return this;
        }

        public Builder setThrottlingBurstLimit(@Nullable Integer throttlingBurstLimit) {
            this.throttlingBurstLimit = Input.ofNullable(throttlingBurstLimit);
            return this;
        }

        public Builder setThrottlingRateLimit(@Nullable Input<Double> throttlingRateLimit) {
            this.throttlingRateLimit = throttlingRateLimit;
            return this;
        }

        public Builder setThrottlingRateLimit(@Nullable Double throttlingRateLimit) {
            this.throttlingRateLimit = Input.ofNullable(throttlingRateLimit);
            return this;
        }

        public Builder setTracingEnabled(@Nullable Input<Boolean> tracingEnabled) {
            this.tracingEnabled = tracingEnabled;
            return this;
        }

        public Builder setTracingEnabled(@Nullable Boolean tracingEnabled) {
            this.tracingEnabled = Input.ofNullable(tracingEnabled);
            return this;
        }

        public Builder setVariables(@Nullable Input<Object> variables) {
            this.variables = variables;
            return this;
        }

        public Builder setVariables(@Nullable Object variables) {
            this.variables = Input.ofNullable(variables);
            return this;
        }

        public DeploymentStageDescriptionArgs build() {
            return new DeploymentStageDescriptionArgs(accessLogSetting, cacheClusterEnabled, cacheClusterSize, cacheDataEncrypted, cacheTtlInSeconds, cachingEnabled, canarySetting, clientCertificateId, dataTraceEnabled, description, documentationVersion, loggingLevel, methodSettings, metricsEnabled, tags, throttlingBurstLimit, throttlingRateLimit, tracingEnabled, variables);
        }
    }
}
