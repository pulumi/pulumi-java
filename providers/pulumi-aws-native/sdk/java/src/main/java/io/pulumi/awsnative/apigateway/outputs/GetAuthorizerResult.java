// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apigateway.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAuthorizerResult {
    /**
     * Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
     * 
     */
    private final @Nullable String authType;
    /**
     * Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
     * 
     */
    private final @Nullable String authorizerCredentials;
    private final @Nullable String authorizerId;
    /**
     * The TTL in seconds of cached authorizer results.
     * 
     */
    private final @Nullable Integer authorizerResultTtlInSeconds;
    /**
     * Specifies the authorizer's Uniform Resource Identifier (URI).
     * 
     */
    private final @Nullable String authorizerUri;
    /**
     * The identity source for which authorization is requested.
     * 
     */
    private final @Nullable String identitySource;
    /**
     * A validation expression for the incoming identity token.
     * 
     */
    private final @Nullable String identityValidationExpression;
    /**
     * The name of the authorizer.
     * 
     */
    private final @Nullable String name;
    /**
     * A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
     * 
     */
    private final @Nullable List<String> providerARNs;
    /**
     * The authorizer type.
     * 
     */
    private final @Nullable String type;

    @CustomType.Constructor
    private GetAuthorizerResult(
        @CustomType.Parameter("authType") @Nullable String authType,
        @CustomType.Parameter("authorizerCredentials") @Nullable String authorizerCredentials,
        @CustomType.Parameter("authorizerId") @Nullable String authorizerId,
        @CustomType.Parameter("authorizerResultTtlInSeconds") @Nullable Integer authorizerResultTtlInSeconds,
        @CustomType.Parameter("authorizerUri") @Nullable String authorizerUri,
        @CustomType.Parameter("identitySource") @Nullable String identitySource,
        @CustomType.Parameter("identityValidationExpression") @Nullable String identityValidationExpression,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("providerARNs") @Nullable List<String> providerARNs,
        @CustomType.Parameter("type") @Nullable String type) {
        this.authType = authType;
        this.authorizerCredentials = authorizerCredentials;
        this.authorizerId = authorizerId;
        this.authorizerResultTtlInSeconds = authorizerResultTtlInSeconds;
        this.authorizerUri = authorizerUri;
        this.identitySource = identitySource;
        this.identityValidationExpression = identityValidationExpression;
        this.name = name;
        this.providerARNs = providerARNs;
        this.type = type;
    }

    /**
     * Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
     * 
    */
    public Optional<String> getAuthType() {
        return Optional.ofNullable(this.authType);
    }
    /**
     * Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
     * 
    */
    public Optional<String> getAuthorizerCredentials() {
        return Optional.ofNullable(this.authorizerCredentials);
    }
    public Optional<String> getAuthorizerId() {
        return Optional.ofNullable(this.authorizerId);
    }
    /**
     * The TTL in seconds of cached authorizer results.
     * 
    */
    public Optional<Integer> getAuthorizerResultTtlInSeconds() {
        return Optional.ofNullable(this.authorizerResultTtlInSeconds);
    }
    /**
     * Specifies the authorizer's Uniform Resource Identifier (URI).
     * 
    */
    public Optional<String> getAuthorizerUri() {
        return Optional.ofNullable(this.authorizerUri);
    }
    /**
     * The identity source for which authorization is requested.
     * 
    */
    public Optional<String> getIdentitySource() {
        return Optional.ofNullable(this.identitySource);
    }
    /**
     * A validation expression for the incoming identity token.
     * 
    */
    public Optional<String> getIdentityValidationExpression() {
        return Optional.ofNullable(this.identityValidationExpression);
    }
    /**
     * The name of the authorizer.
     * 
    */
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    /**
     * A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
     * 
    */
    public List<String> getProviderARNs() {
        return this.providerARNs == null ? List.of() : this.providerARNs;
    }
    /**
     * The authorizer type.
     * 
    */
    public Optional<String> getType() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthorizerResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String authType;
        private @Nullable String authorizerCredentials;
        private @Nullable String authorizerId;
        private @Nullable Integer authorizerResultTtlInSeconds;
        private @Nullable String authorizerUri;
        private @Nullable String identitySource;
        private @Nullable String identityValidationExpression;
        private @Nullable String name;
        private @Nullable List<String> providerARNs;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAuthorizerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authType = defaults.authType;
    	      this.authorizerCredentials = defaults.authorizerCredentials;
    	      this.authorizerId = defaults.authorizerId;
    	      this.authorizerResultTtlInSeconds = defaults.authorizerResultTtlInSeconds;
    	      this.authorizerUri = defaults.authorizerUri;
    	      this.identitySource = defaults.identitySource;
    	      this.identityValidationExpression = defaults.identityValidationExpression;
    	      this.name = defaults.name;
    	      this.providerARNs = defaults.providerARNs;
    	      this.type = defaults.type;
        }

        public Builder authType(@Nullable String authType) {
            this.authType = authType;
            return this;
        }
        public Builder authorizerCredentials(@Nullable String authorizerCredentials) {
            this.authorizerCredentials = authorizerCredentials;
            return this;
        }
        public Builder authorizerId(@Nullable String authorizerId) {
            this.authorizerId = authorizerId;
            return this;
        }
        public Builder authorizerResultTtlInSeconds(@Nullable Integer authorizerResultTtlInSeconds) {
            this.authorizerResultTtlInSeconds = authorizerResultTtlInSeconds;
            return this;
        }
        public Builder authorizerUri(@Nullable String authorizerUri) {
            this.authorizerUri = authorizerUri;
            return this;
        }
        public Builder identitySource(@Nullable String identitySource) {
            this.identitySource = identitySource;
            return this;
        }
        public Builder identityValidationExpression(@Nullable String identityValidationExpression) {
            this.identityValidationExpression = identityValidationExpression;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder providerARNs(@Nullable List<String> providerARNs) {
            this.providerARNs = providerARNs;
            return this;
        }
        public Builder providerARNs(String... providerARNs) {
            return providerARNs(List.of(providerARNs));
        }
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }        public GetAuthorizerResult build() {
            return new GetAuthorizerResult(authType, authorizerCredentials, authorizerId, authorizerResultTtlInSeconds, authorizerUri, identitySource, identityValidationExpression, name, providerARNs, type);
        }
    }
}
