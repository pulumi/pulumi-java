// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.awsnative.s3.inputs.StorageLensAccountLevelArgs;
import io.pulumi.awsnative.s3.inputs.StorageLensAwsOrgArgs;
import io.pulumi.awsnative.s3.inputs.StorageLensBucketsAndRegionsArgs;
import io.pulumi.awsnative.s3.inputs.StorageLensDataExportArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies the details of Amazon S3 Storage Lens configuration.
 * 
 */
public final class StorageLensConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final StorageLensConfigurationArgs Empty = new StorageLensConfigurationArgs();

    @InputImport(name="accountLevel", required=true)
      private final Input<StorageLensAccountLevelArgs> accountLevel;

    public Input<StorageLensAccountLevelArgs> getAccountLevel() {
        return this.accountLevel;
    }

    @InputImport(name="awsOrg")
      private final @Nullable Input<StorageLensAwsOrgArgs> awsOrg;

    public Input<StorageLensAwsOrgArgs> getAwsOrg() {
        return this.awsOrg == null ? Input.empty() : this.awsOrg;
    }

    @InputImport(name="dataExport")
      private final @Nullable Input<StorageLensDataExportArgs> dataExport;

    public Input<StorageLensDataExportArgs> getDataExport() {
        return this.dataExport == null ? Input.empty() : this.dataExport;
    }

    @InputImport(name="exclude")
      private final @Nullable Input<StorageLensBucketsAndRegionsArgs> exclude;

    public Input<StorageLensBucketsAndRegionsArgs> getExclude() {
        return this.exclude == null ? Input.empty() : this.exclude;
    }

    @InputImport(name="id", required=true)
      private final Input<String> id;

    public Input<String> getId() {
        return this.id;
    }

    @InputImport(name="include")
      private final @Nullable Input<StorageLensBucketsAndRegionsArgs> include;

    public Input<StorageLensBucketsAndRegionsArgs> getInclude() {
        return this.include == null ? Input.empty() : this.include;
    }

    /**
     * Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.
     * 
     */
    @InputImport(name="isEnabled", required=true)
      private final Input<Boolean> isEnabled;

    public Input<Boolean> getIsEnabled() {
        return this.isEnabled;
    }

    /**
     * The ARN for the Amazon S3 Storage Lens configuration.
     * 
     */
    @InputImport(name="storageLensArn")
      private final @Nullable Input<String> storageLensArn;

    public Input<String> getStorageLensArn() {
        return this.storageLensArn == null ? Input.empty() : this.storageLensArn;
    }

    public StorageLensConfigurationArgs(
        Input<StorageLensAccountLevelArgs> accountLevel,
        @Nullable Input<StorageLensAwsOrgArgs> awsOrg,
        @Nullable Input<StorageLensDataExportArgs> dataExport,
        @Nullable Input<StorageLensBucketsAndRegionsArgs> exclude,
        Input<String> id,
        @Nullable Input<StorageLensBucketsAndRegionsArgs> include,
        Input<Boolean> isEnabled,
        @Nullable Input<String> storageLensArn) {
        this.accountLevel = Objects.requireNonNull(accountLevel, "expected parameter 'accountLevel' to be non-null");
        this.awsOrg = awsOrg;
        this.dataExport = dataExport;
        this.exclude = exclude;
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.include = include;
        this.isEnabled = Objects.requireNonNull(isEnabled, "expected parameter 'isEnabled' to be non-null");
        this.storageLensArn = storageLensArn;
    }

    private StorageLensConfigurationArgs() {
        this.accountLevel = Input.empty();
        this.awsOrg = Input.empty();
        this.dataExport = Input.empty();
        this.exclude = Input.empty();
        this.id = Input.empty();
        this.include = Input.empty();
        this.isEnabled = Input.empty();
        this.storageLensArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageLensConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<StorageLensAccountLevelArgs> accountLevel;
        private @Nullable Input<StorageLensAwsOrgArgs> awsOrg;
        private @Nullable Input<StorageLensDataExportArgs> dataExport;
        private @Nullable Input<StorageLensBucketsAndRegionsArgs> exclude;
        private Input<String> id;
        private @Nullable Input<StorageLensBucketsAndRegionsArgs> include;
        private Input<Boolean> isEnabled;
        private @Nullable Input<String> storageLensArn;

        public Builder() {
    	      // Empty
        }

        public Builder(StorageLensConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountLevel = defaults.accountLevel;
    	      this.awsOrg = defaults.awsOrg;
    	      this.dataExport = defaults.dataExport;
    	      this.exclude = defaults.exclude;
    	      this.id = defaults.id;
    	      this.include = defaults.include;
    	      this.isEnabled = defaults.isEnabled;
    	      this.storageLensArn = defaults.storageLensArn;
        }

        public Builder accountLevel(Input<StorageLensAccountLevelArgs> accountLevel) {
            this.accountLevel = Objects.requireNonNull(accountLevel);
            return this;
        }

        public Builder accountLevel(StorageLensAccountLevelArgs accountLevel) {
            this.accountLevel = Input.of(Objects.requireNonNull(accountLevel));
            return this;
        }

        public Builder awsOrg(@Nullable Input<StorageLensAwsOrgArgs> awsOrg) {
            this.awsOrg = awsOrg;
            return this;
        }

        public Builder awsOrg(@Nullable StorageLensAwsOrgArgs awsOrg) {
            this.awsOrg = Input.ofNullable(awsOrg);
            return this;
        }

        public Builder dataExport(@Nullable Input<StorageLensDataExportArgs> dataExport) {
            this.dataExport = dataExport;
            return this;
        }

        public Builder dataExport(@Nullable StorageLensDataExportArgs dataExport) {
            this.dataExport = Input.ofNullable(dataExport);
            return this;
        }

        public Builder exclude(@Nullable Input<StorageLensBucketsAndRegionsArgs> exclude) {
            this.exclude = exclude;
            return this;
        }

        public Builder exclude(@Nullable StorageLensBucketsAndRegionsArgs exclude) {
            this.exclude = Input.ofNullable(exclude);
            return this;
        }

        public Builder id(Input<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder id(String id) {
            this.id = Input.of(Objects.requireNonNull(id));
            return this;
        }

        public Builder include(@Nullable Input<StorageLensBucketsAndRegionsArgs> include) {
            this.include = include;
            return this;
        }

        public Builder include(@Nullable StorageLensBucketsAndRegionsArgs include) {
            this.include = Input.ofNullable(include);
            return this;
        }

        public Builder isEnabled(Input<Boolean> isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }

        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Input.of(Objects.requireNonNull(isEnabled));
            return this;
        }

        public Builder storageLensArn(@Nullable Input<String> storageLensArn) {
            this.storageLensArn = storageLensArn;
            return this;
        }

        public Builder storageLensArn(@Nullable String storageLensArn) {
            this.storageLensArn = Input.ofNullable(storageLensArn);
            return this;
        }
        public StorageLensConfigurationArgs build() {
            return new StorageLensConfigurationArgs(accountLevel, awsOrg, dataExport, exclude, id, include, isEnabled, storageLensArn);
        }
    }
}
