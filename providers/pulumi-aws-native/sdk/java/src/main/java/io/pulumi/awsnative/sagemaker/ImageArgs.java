// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.sagemaker;

import io.pulumi.awsnative.sagemaker.inputs.ImageTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ImageArgs extends io.pulumi.resources.ResourceArgs {

    public static final ImageArgs Empty = new ImageArgs();

    @InputImport(name="imageDescription")
      private final @Nullable Output<String> imageDescription;

    public Output<String> getImageDescription() {
        return this.imageDescription == null ? Output.empty() : this.imageDescription;
    }

    @InputImport(name="imageDisplayName")
      private final @Nullable Output<String> imageDisplayName;

    public Output<String> getImageDisplayName() {
        return this.imageDisplayName == null ? Output.empty() : this.imageDisplayName;
    }

    @InputImport(name="imageName")
      private final @Nullable Output<String> imageName;

    public Output<String> getImageName() {
        return this.imageName == null ? Output.empty() : this.imageName;
    }

    @InputImport(name="imageRoleArn", required=true)
      private final Output<String> imageRoleArn;

    public Output<String> getImageRoleArn() {
        return this.imageRoleArn;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<List<ImageTagArgs>> tags;

    public Output<List<ImageTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ImageArgs(
        @Nullable Output<String> imageDescription,
        @Nullable Output<String> imageDisplayName,
        @Nullable Output<String> imageName,
        Output<String> imageRoleArn,
        @Nullable Output<List<ImageTagArgs>> tags) {
        this.imageDescription = imageDescription;
        this.imageDisplayName = imageDisplayName;
        this.imageName = imageName;
        this.imageRoleArn = Objects.requireNonNull(imageRoleArn, "expected parameter 'imageRoleArn' to be non-null");
        this.tags = tags;
    }

    private ImageArgs() {
        this.imageDescription = Output.empty();
        this.imageDisplayName = Output.empty();
        this.imageName = Output.empty();
        this.imageRoleArn = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> imageDescription;
        private @Nullable Output<String> imageDisplayName;
        private @Nullable Output<String> imageName;
        private Output<String> imageRoleArn;
        private @Nullable Output<List<ImageTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageDescription = defaults.imageDescription;
    	      this.imageDisplayName = defaults.imageDisplayName;
    	      this.imageName = defaults.imageName;
    	      this.imageRoleArn = defaults.imageRoleArn;
    	      this.tags = defaults.tags;
        }

        public Builder imageDescription(@Nullable Output<String> imageDescription) {
            this.imageDescription = imageDescription;
            return this;
        }

        public Builder imageDescription(@Nullable String imageDescription) {
            this.imageDescription = Output.ofNullable(imageDescription);
            return this;
        }

        public Builder imageDisplayName(@Nullable Output<String> imageDisplayName) {
            this.imageDisplayName = imageDisplayName;
            return this;
        }

        public Builder imageDisplayName(@Nullable String imageDisplayName) {
            this.imageDisplayName = Output.ofNullable(imageDisplayName);
            return this;
        }

        public Builder imageName(@Nullable Output<String> imageName) {
            this.imageName = imageName;
            return this;
        }

        public Builder imageName(@Nullable String imageName) {
            this.imageName = Output.ofNullable(imageName);
            return this;
        }

        public Builder imageRoleArn(Output<String> imageRoleArn) {
            this.imageRoleArn = Objects.requireNonNull(imageRoleArn);
            return this;
        }

        public Builder imageRoleArn(String imageRoleArn) {
            this.imageRoleArn = Output.of(Objects.requireNonNull(imageRoleArn));
            return this;
        }

        public Builder tags(@Nullable Output<List<ImageTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<ImageTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public ImageArgs build() {
            return new ImageArgs(imageDescription, imageDisplayName, imageName, imageRoleArn, tags);
        }
    }
}
