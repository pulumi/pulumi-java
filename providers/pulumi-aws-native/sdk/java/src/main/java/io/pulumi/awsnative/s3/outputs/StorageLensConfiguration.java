// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.outputs;

import io.pulumi.awsnative.s3.outputs.StorageLensAccountLevel;
import io.pulumi.awsnative.s3.outputs.StorageLensAwsOrg;
import io.pulumi.awsnative.s3.outputs.StorageLensBucketsAndRegions;
import io.pulumi.awsnative.s3.outputs.StorageLensDataExport;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StorageLensConfiguration {
    private final StorageLensAccountLevel accountLevel;
    private final @Nullable StorageLensAwsOrg awsOrg;
    private final @Nullable StorageLensDataExport dataExport;
    private final @Nullable StorageLensBucketsAndRegions exclude;
    private final String id;
    private final @Nullable StorageLensBucketsAndRegions include;
    /**
     * Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.
     * 
     */
    private final Boolean isEnabled;
    /**
     * The ARN for the Amazon S3 Storage Lens configuration.
     * 
     */
    private final @Nullable String storageLensArn;

    @CustomType.Constructor
    private StorageLensConfiguration(
        @CustomType.Parameter("accountLevel") StorageLensAccountLevel accountLevel,
        @CustomType.Parameter("awsOrg") @Nullable StorageLensAwsOrg awsOrg,
        @CustomType.Parameter("dataExport") @Nullable StorageLensDataExport dataExport,
        @CustomType.Parameter("exclude") @Nullable StorageLensBucketsAndRegions exclude,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("include") @Nullable StorageLensBucketsAndRegions include,
        @CustomType.Parameter("isEnabled") Boolean isEnabled,
        @CustomType.Parameter("storageLensArn") @Nullable String storageLensArn) {
        this.accountLevel = accountLevel;
        this.awsOrg = awsOrg;
        this.dataExport = dataExport;
        this.exclude = exclude;
        this.id = id;
        this.include = include;
        this.isEnabled = isEnabled;
        this.storageLensArn = storageLensArn;
    }

    public StorageLensAccountLevel accountLevel() {
        return this.accountLevel;
    }
    public Optional<StorageLensAwsOrg> awsOrg() {
        return Optional.ofNullable(this.awsOrg);
    }
    public Optional<StorageLensDataExport> dataExport() {
        return Optional.ofNullable(this.dataExport);
    }
    public Optional<StorageLensBucketsAndRegions> exclude() {
        return Optional.ofNullable(this.exclude);
    }
    public String id() {
        return this.id;
    }
    public Optional<StorageLensBucketsAndRegions> include() {
        return Optional.ofNullable(this.include);
    }
    /**
     * Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.
     * 
    */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * The ARN for the Amazon S3 Storage Lens configuration.
     * 
    */
    public Optional<String> storageLensArn() {
        return Optional.ofNullable(this.storageLensArn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageLensConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageLensAccountLevel accountLevel;
        private @Nullable StorageLensAwsOrg awsOrg;
        private @Nullable StorageLensDataExport dataExport;
        private @Nullable StorageLensBucketsAndRegions exclude;
        private String id;
        private @Nullable StorageLensBucketsAndRegions include;
        private Boolean isEnabled;
        private @Nullable String storageLensArn;

        public Builder() {
    	      // Empty
        }

        public Builder(StorageLensConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountLevel = defaults.accountLevel;
    	      this.awsOrg = defaults.awsOrg;
    	      this.dataExport = defaults.dataExport;
    	      this.exclude = defaults.exclude;
    	      this.id = defaults.id;
    	      this.include = defaults.include;
    	      this.isEnabled = defaults.isEnabled;
    	      this.storageLensArn = defaults.storageLensArn;
        }

        public Builder accountLevel(StorageLensAccountLevel accountLevel) {
            this.accountLevel = Objects.requireNonNull(accountLevel);
            return this;
        }
        public Builder awsOrg(@Nullable StorageLensAwsOrg awsOrg) {
            this.awsOrg = awsOrg;
            return this;
        }
        public Builder dataExport(@Nullable StorageLensDataExport dataExport) {
            this.dataExport = dataExport;
            return this;
        }
        public Builder exclude(@Nullable StorageLensBucketsAndRegions exclude) {
            this.exclude = exclude;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder include(@Nullable StorageLensBucketsAndRegions include) {
            this.include = include;
            return this;
        }
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        public Builder storageLensArn(@Nullable String storageLensArn) {
            this.storageLensArn = storageLensArn;
            return this;
        }        public StorageLensConfiguration build() {
            return new StorageLensConfiguration(accountLevel, awsOrg, dataExport, exclude, id, include, isEnabled, storageLensArn);
        }
    }
}
