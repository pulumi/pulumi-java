// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.appintegrations.outputs;

import io.pulumi.awsnative.appintegrations.outputs.DataIntegrationTag;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDataIntegrationResult {
    /**
     * The Amazon Resource Name (ARN) of the data integration.
     * 
     */
    private final @Nullable String dataIntegrationArn;
    /**
     * The data integration description.
     * 
     */
    private final @Nullable String description;
    /**
     * The unique identifer of the data integration.
     * 
     */
    private final @Nullable String id;
    /**
     * The name of the data integration.
     * 
     */
    private final @Nullable String name;
    /**
     * The tags (keys and values) associated with the data integration.
     * 
     */
    private final @Nullable List<DataIntegrationTag> tags;

    @CustomType.Constructor
    private GetDataIntegrationResult(
        @CustomType.Parameter("dataIntegrationArn") @Nullable String dataIntegrationArn,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("tags") @Nullable List<DataIntegrationTag> tags) {
        this.dataIntegrationArn = dataIntegrationArn;
        this.description = description;
        this.id = id;
        this.name = name;
        this.tags = tags;
    }

    /**
     * The Amazon Resource Name (ARN) of the data integration.
     * 
    */
    public Optional<String> dataIntegrationArn() {
        return Optional.ofNullable(this.dataIntegrationArn);
    }
    /**
     * The data integration description.
     * 
    */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * The unique identifer of the data integration.
     * 
    */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * The name of the data integration.
     * 
    */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * The tags (keys and values) associated with the data integration.
     * 
    */
    public List<DataIntegrationTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataIntegrationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String dataIntegrationArn;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable List<DataIntegrationTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDataIntegrationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataIntegrationArn = defaults.dataIntegrationArn;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder dataIntegrationArn(@Nullable String dataIntegrationArn) {
            this.dataIntegrationArn = dataIntegrationArn;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder tags(@Nullable List<DataIntegrationTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(DataIntegrationTag... tags) {
            return tags(List.of(tags));
        }        public GetDataIntegrationResult build() {
            return new GetDataIntegrationResult(dataIntegrationArn, description, id, name, tags);
        }
    }
}
