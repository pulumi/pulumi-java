// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.outputs;

import io.pulumi.awsnative.s3.enums.BucketNoncurrentVersionTransitionStorageClass;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class BucketNoncurrentVersionTransition {
    private final @Nullable Integer newerNoncurrentVersions;
    private final BucketNoncurrentVersionTransitionStorageClass storageClass;
    private final Integer transitionInDays;

    @OutputCustomType.Constructor({"newerNoncurrentVersions","storageClass","transitionInDays"})
    private BucketNoncurrentVersionTransition(
        @Nullable Integer newerNoncurrentVersions,
        BucketNoncurrentVersionTransitionStorageClass storageClass,
        Integer transitionInDays) {
        this.newerNoncurrentVersions = newerNoncurrentVersions;
        this.storageClass = Objects.requireNonNull(storageClass);
        this.transitionInDays = Objects.requireNonNull(transitionInDays);
    }

    public Optional<Integer> getNewerNoncurrentVersions() {
        return Optional.ofNullable(this.newerNoncurrentVersions);
    }
    public BucketNoncurrentVersionTransitionStorageClass getStorageClass() {
        return this.storageClass;
    }
    public Integer getTransitionInDays() {
        return this.transitionInDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketNoncurrentVersionTransition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer newerNoncurrentVersions;
        private BucketNoncurrentVersionTransitionStorageClass storageClass;
        private Integer transitionInDays;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketNoncurrentVersionTransition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.newerNoncurrentVersions = defaults.newerNoncurrentVersions;
    	      this.storageClass = defaults.storageClass;
    	      this.transitionInDays = defaults.transitionInDays;
        }

        public Builder setNewerNoncurrentVersions(@Nullable Integer newerNoncurrentVersions) {
            this.newerNoncurrentVersions = newerNoncurrentVersions;
            return this;
        }

        public Builder setStorageClass(BucketNoncurrentVersionTransitionStorageClass storageClass) {
            this.storageClass = Objects.requireNonNull(storageClass);
            return this;
        }

        public Builder setTransitionInDays(Integer transitionInDays) {
            this.transitionInDays = Objects.requireNonNull(transitionInDays);
            return this;
        }

        public BucketNoncurrentVersionTransition build() {
            return new BucketNoncurrentVersionTransition(newerNoncurrentVersions, storageClass, transitionInDays);
        }
    }
}
