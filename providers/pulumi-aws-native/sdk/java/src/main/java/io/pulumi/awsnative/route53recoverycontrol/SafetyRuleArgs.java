// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.route53recoverycontrol;

import io.pulumi.awsnative.route53recoverycontrol.inputs.SafetyRuleAssertionRuleArgs;
import io.pulumi.awsnative.route53recoverycontrol.inputs.SafetyRuleGatingRuleArgs;
import io.pulumi.awsnative.route53recoverycontrol.inputs.SafetyRuleRuleConfigArgs;
import io.pulumi.awsnative.route53recoverycontrol.inputs.SafetyRuleTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SafetyRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final SafetyRuleArgs Empty = new SafetyRuleArgs();

    @InputImport(name="assertionRule")
    private final @Nullable Input<SafetyRuleAssertionRuleArgs> assertionRule;

    public Input<SafetyRuleAssertionRuleArgs> getAssertionRule() {
        return this.assertionRule == null ? Input.empty() : this.assertionRule;
    }

    @InputImport(name="controlPanelArn")
    private final @Nullable Input<String> controlPanelArn;

    public Input<String> getControlPanelArn() {
        return this.controlPanelArn == null ? Input.empty() : this.controlPanelArn;
    }

    @InputImport(name="gatingRule")
    private final @Nullable Input<SafetyRuleGatingRuleArgs> gatingRule;

    public Input<SafetyRuleGatingRuleArgs> getGatingRule() {
        return this.gatingRule == null ? Input.empty() : this.gatingRule;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="ruleConfig")
    private final @Nullable Input<SafetyRuleRuleConfigArgs> ruleConfig;

    public Input<SafetyRuleRuleConfigArgs> getRuleConfig() {
        return this.ruleConfig == null ? Input.empty() : this.ruleConfig;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<SafetyRuleTagArgs>> tags;

    public Input<List<SafetyRuleTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public SafetyRuleArgs(
        @Nullable Input<SafetyRuleAssertionRuleArgs> assertionRule,
        @Nullable Input<String> controlPanelArn,
        @Nullable Input<SafetyRuleGatingRuleArgs> gatingRule,
        @Nullable Input<String> name,
        @Nullable Input<SafetyRuleRuleConfigArgs> ruleConfig,
        @Nullable Input<List<SafetyRuleTagArgs>> tags) {
        this.assertionRule = assertionRule;
        this.controlPanelArn = controlPanelArn;
        this.gatingRule = gatingRule;
        this.name = name;
        this.ruleConfig = ruleConfig;
        this.tags = tags;
    }

    private SafetyRuleArgs() {
        this.assertionRule = Input.empty();
        this.controlPanelArn = Input.empty();
        this.gatingRule = Input.empty();
        this.name = Input.empty();
        this.ruleConfig = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SafetyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<SafetyRuleAssertionRuleArgs> assertionRule;
        private @Nullable Input<String> controlPanelArn;
        private @Nullable Input<SafetyRuleGatingRuleArgs> gatingRule;
        private @Nullable Input<String> name;
        private @Nullable Input<SafetyRuleRuleConfigArgs> ruleConfig;
        private @Nullable Input<List<SafetyRuleTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(SafetyRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assertionRule = defaults.assertionRule;
    	      this.controlPanelArn = defaults.controlPanelArn;
    	      this.gatingRule = defaults.gatingRule;
    	      this.name = defaults.name;
    	      this.ruleConfig = defaults.ruleConfig;
    	      this.tags = defaults.tags;
        }

        public Builder setAssertionRule(@Nullable Input<SafetyRuleAssertionRuleArgs> assertionRule) {
            this.assertionRule = assertionRule;
            return this;
        }

        public Builder setAssertionRule(@Nullable SafetyRuleAssertionRuleArgs assertionRule) {
            this.assertionRule = Input.ofNullable(assertionRule);
            return this;
        }

        public Builder setControlPanelArn(@Nullable Input<String> controlPanelArn) {
            this.controlPanelArn = controlPanelArn;
            return this;
        }

        public Builder setControlPanelArn(@Nullable String controlPanelArn) {
            this.controlPanelArn = Input.ofNullable(controlPanelArn);
            return this;
        }

        public Builder setGatingRule(@Nullable Input<SafetyRuleGatingRuleArgs> gatingRule) {
            this.gatingRule = gatingRule;
            return this;
        }

        public Builder setGatingRule(@Nullable SafetyRuleGatingRuleArgs gatingRule) {
            this.gatingRule = Input.ofNullable(gatingRule);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setRuleConfig(@Nullable Input<SafetyRuleRuleConfigArgs> ruleConfig) {
            this.ruleConfig = ruleConfig;
            return this;
        }

        public Builder setRuleConfig(@Nullable SafetyRuleRuleConfigArgs ruleConfig) {
            this.ruleConfig = Input.ofNullable(ruleConfig);
            return this;
        }

        public Builder setTags(@Nullable Input<List<SafetyRuleTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<SafetyRuleTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public SafetyRuleArgs build() {
            return new SafetyRuleArgs(assertionRule, controlPanelArn, gatingRule, name, ruleConfig, tags);
        }
    }
}
