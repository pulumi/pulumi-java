// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.opsworkscm;

import io.pulumi.awsnative.opsworkscm.inputs.ServerEngineAttributeArgs;
import io.pulumi.awsnative.opsworkscm.inputs.ServerTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServerArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServerArgs Empty = new ServerArgs();

    @Import(name="associatePublicIpAddress")
      private final @Nullable Output<Boolean> associatePublicIpAddress;

    public Output<Boolean> getAssociatePublicIpAddress() {
        return this.associatePublicIpAddress == null ? Output.empty() : this.associatePublicIpAddress;
    }

    @Import(name="backupId")
      private final @Nullable Output<String> backupId;

    public Output<String> getBackupId() {
        return this.backupId == null ? Output.empty() : this.backupId;
    }

    @Import(name="backupRetentionCount")
      private final @Nullable Output<Integer> backupRetentionCount;

    public Output<Integer> getBackupRetentionCount() {
        return this.backupRetentionCount == null ? Output.empty() : this.backupRetentionCount;
    }

    @Import(name="customCertificate")
      private final @Nullable Output<String> customCertificate;

    public Output<String> getCustomCertificate() {
        return this.customCertificate == null ? Output.empty() : this.customCertificate;
    }

    @Import(name="customDomain")
      private final @Nullable Output<String> customDomain;

    public Output<String> getCustomDomain() {
        return this.customDomain == null ? Output.empty() : this.customDomain;
    }

    @Import(name="customPrivateKey")
      private final @Nullable Output<String> customPrivateKey;

    public Output<String> getCustomPrivateKey() {
        return this.customPrivateKey == null ? Output.empty() : this.customPrivateKey;
    }

    @Import(name="disableAutomatedBackup")
      private final @Nullable Output<Boolean> disableAutomatedBackup;

    public Output<Boolean> getDisableAutomatedBackup() {
        return this.disableAutomatedBackup == null ? Output.empty() : this.disableAutomatedBackup;
    }

    @Import(name="engine")
      private final @Nullable Output<String> engine;

    public Output<String> getEngine() {
        return this.engine == null ? Output.empty() : this.engine;
    }

    @Import(name="engineAttributes")
      private final @Nullable Output<List<ServerEngineAttributeArgs>> engineAttributes;

    public Output<List<ServerEngineAttributeArgs>> getEngineAttributes() {
        return this.engineAttributes == null ? Output.empty() : this.engineAttributes;
    }

    @Import(name="engineModel")
      private final @Nullable Output<String> engineModel;

    public Output<String> getEngineModel() {
        return this.engineModel == null ? Output.empty() : this.engineModel;
    }

    @Import(name="engineVersion")
      private final @Nullable Output<String> engineVersion;

    public Output<String> getEngineVersion() {
        return this.engineVersion == null ? Output.empty() : this.engineVersion;
    }

    @Import(name="instanceProfileArn", required=true)
      private final Output<String> instanceProfileArn;

    public Output<String> getInstanceProfileArn() {
        return this.instanceProfileArn;
    }

    @Import(name="instanceType", required=true)
      private final Output<String> instanceType;

    public Output<String> getInstanceType() {
        return this.instanceType;
    }

    @Import(name="keyPair")
      private final @Nullable Output<String> keyPair;

    public Output<String> getKeyPair() {
        return this.keyPair == null ? Output.empty() : this.keyPair;
    }

    @Import(name="preferredBackupWindow")
      private final @Nullable Output<String> preferredBackupWindow;

    public Output<String> getPreferredBackupWindow() {
        return this.preferredBackupWindow == null ? Output.empty() : this.preferredBackupWindow;
    }

    @Import(name="preferredMaintenanceWindow")
      private final @Nullable Output<String> preferredMaintenanceWindow;

    public Output<String> getPreferredMaintenanceWindow() {
        return this.preferredMaintenanceWindow == null ? Output.empty() : this.preferredMaintenanceWindow;
    }

    @Import(name="securityGroupIds")
      private final @Nullable Output<List<String>> securityGroupIds;

    public Output<List<String>> getSecurityGroupIds() {
        return this.securityGroupIds == null ? Output.empty() : this.securityGroupIds;
    }

    @Import(name="serverName")
      private final @Nullable Output<String> serverName;

    public Output<String> getServerName() {
        return this.serverName == null ? Output.empty() : this.serverName;
    }

    @Import(name="serviceRoleArn", required=true)
      private final Output<String> serviceRoleArn;

    public Output<String> getServiceRoleArn() {
        return this.serviceRoleArn;
    }

    @Import(name="subnetIds")
      private final @Nullable Output<List<String>> subnetIds;

    public Output<List<String>> getSubnetIds() {
        return this.subnetIds == null ? Output.empty() : this.subnetIds;
    }

    @Import(name="tags")
      private final @Nullable Output<List<ServerTagArgs>> tags;

    public Output<List<ServerTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ServerArgs(
        @Nullable Output<Boolean> associatePublicIpAddress,
        @Nullable Output<String> backupId,
        @Nullable Output<Integer> backupRetentionCount,
        @Nullable Output<String> customCertificate,
        @Nullable Output<String> customDomain,
        @Nullable Output<String> customPrivateKey,
        @Nullable Output<Boolean> disableAutomatedBackup,
        @Nullable Output<String> engine,
        @Nullable Output<List<ServerEngineAttributeArgs>> engineAttributes,
        @Nullable Output<String> engineModel,
        @Nullable Output<String> engineVersion,
        Output<String> instanceProfileArn,
        Output<String> instanceType,
        @Nullable Output<String> keyPair,
        @Nullable Output<String> preferredBackupWindow,
        @Nullable Output<String> preferredMaintenanceWindow,
        @Nullable Output<List<String>> securityGroupIds,
        @Nullable Output<String> serverName,
        Output<String> serviceRoleArn,
        @Nullable Output<List<String>> subnetIds,
        @Nullable Output<List<ServerTagArgs>> tags) {
        this.associatePublicIpAddress = associatePublicIpAddress;
        this.backupId = backupId;
        this.backupRetentionCount = backupRetentionCount;
        this.customCertificate = customCertificate;
        this.customDomain = customDomain;
        this.customPrivateKey = customPrivateKey;
        this.disableAutomatedBackup = disableAutomatedBackup;
        this.engine = engine;
        this.engineAttributes = engineAttributes;
        this.engineModel = engineModel;
        this.engineVersion = engineVersion;
        this.instanceProfileArn = Objects.requireNonNull(instanceProfileArn, "expected parameter 'instanceProfileArn' to be non-null");
        this.instanceType = Objects.requireNonNull(instanceType, "expected parameter 'instanceType' to be non-null");
        this.keyPair = keyPair;
        this.preferredBackupWindow = preferredBackupWindow;
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        this.securityGroupIds = securityGroupIds;
        this.serverName = serverName;
        this.serviceRoleArn = Objects.requireNonNull(serviceRoleArn, "expected parameter 'serviceRoleArn' to be non-null");
        this.subnetIds = subnetIds;
        this.tags = tags;
    }

    private ServerArgs() {
        this.associatePublicIpAddress = Output.empty();
        this.backupId = Output.empty();
        this.backupRetentionCount = Output.empty();
        this.customCertificate = Output.empty();
        this.customDomain = Output.empty();
        this.customPrivateKey = Output.empty();
        this.disableAutomatedBackup = Output.empty();
        this.engine = Output.empty();
        this.engineAttributes = Output.empty();
        this.engineModel = Output.empty();
        this.engineVersion = Output.empty();
        this.instanceProfileArn = Output.empty();
        this.instanceType = Output.empty();
        this.keyPair = Output.empty();
        this.preferredBackupWindow = Output.empty();
        this.preferredMaintenanceWindow = Output.empty();
        this.securityGroupIds = Output.empty();
        this.serverName = Output.empty();
        this.serviceRoleArn = Output.empty();
        this.subnetIds = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> associatePublicIpAddress;
        private @Nullable Output<String> backupId;
        private @Nullable Output<Integer> backupRetentionCount;
        private @Nullable Output<String> customCertificate;
        private @Nullable Output<String> customDomain;
        private @Nullable Output<String> customPrivateKey;
        private @Nullable Output<Boolean> disableAutomatedBackup;
        private @Nullable Output<String> engine;
        private @Nullable Output<List<ServerEngineAttributeArgs>> engineAttributes;
        private @Nullable Output<String> engineModel;
        private @Nullable Output<String> engineVersion;
        private Output<String> instanceProfileArn;
        private Output<String> instanceType;
        private @Nullable Output<String> keyPair;
        private @Nullable Output<String> preferredBackupWindow;
        private @Nullable Output<String> preferredMaintenanceWindow;
        private @Nullable Output<List<String>> securityGroupIds;
        private @Nullable Output<String> serverName;
        private Output<String> serviceRoleArn;
        private @Nullable Output<List<String>> subnetIds;
        private @Nullable Output<List<ServerTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ServerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatePublicIpAddress = defaults.associatePublicIpAddress;
    	      this.backupId = defaults.backupId;
    	      this.backupRetentionCount = defaults.backupRetentionCount;
    	      this.customCertificate = defaults.customCertificate;
    	      this.customDomain = defaults.customDomain;
    	      this.customPrivateKey = defaults.customPrivateKey;
    	      this.disableAutomatedBackup = defaults.disableAutomatedBackup;
    	      this.engine = defaults.engine;
    	      this.engineAttributes = defaults.engineAttributes;
    	      this.engineModel = defaults.engineModel;
    	      this.engineVersion = defaults.engineVersion;
    	      this.instanceProfileArn = defaults.instanceProfileArn;
    	      this.instanceType = defaults.instanceType;
    	      this.keyPair = defaults.keyPair;
    	      this.preferredBackupWindow = defaults.preferredBackupWindow;
    	      this.preferredMaintenanceWindow = defaults.preferredMaintenanceWindow;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.serverName = defaults.serverName;
    	      this.serviceRoleArn = defaults.serviceRoleArn;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
        }

        public Builder associatePublicIpAddress(@Nullable Output<Boolean> associatePublicIpAddress) {
            this.associatePublicIpAddress = associatePublicIpAddress;
            return this;
        }

        public Builder associatePublicIpAddress(@Nullable Boolean associatePublicIpAddress) {
            this.associatePublicIpAddress = Output.ofNullable(associatePublicIpAddress);
            return this;
        }

        public Builder backupId(@Nullable Output<String> backupId) {
            this.backupId = backupId;
            return this;
        }

        public Builder backupId(@Nullable String backupId) {
            this.backupId = Output.ofNullable(backupId);
            return this;
        }

        public Builder backupRetentionCount(@Nullable Output<Integer> backupRetentionCount) {
            this.backupRetentionCount = backupRetentionCount;
            return this;
        }

        public Builder backupRetentionCount(@Nullable Integer backupRetentionCount) {
            this.backupRetentionCount = Output.ofNullable(backupRetentionCount);
            return this;
        }

        public Builder customCertificate(@Nullable Output<String> customCertificate) {
            this.customCertificate = customCertificate;
            return this;
        }

        public Builder customCertificate(@Nullable String customCertificate) {
            this.customCertificate = Output.ofNullable(customCertificate);
            return this;
        }

        public Builder customDomain(@Nullable Output<String> customDomain) {
            this.customDomain = customDomain;
            return this;
        }

        public Builder customDomain(@Nullable String customDomain) {
            this.customDomain = Output.ofNullable(customDomain);
            return this;
        }

        public Builder customPrivateKey(@Nullable Output<String> customPrivateKey) {
            this.customPrivateKey = customPrivateKey;
            return this;
        }

        public Builder customPrivateKey(@Nullable String customPrivateKey) {
            this.customPrivateKey = Output.ofNullable(customPrivateKey);
            return this;
        }

        public Builder disableAutomatedBackup(@Nullable Output<Boolean> disableAutomatedBackup) {
            this.disableAutomatedBackup = disableAutomatedBackup;
            return this;
        }

        public Builder disableAutomatedBackup(@Nullable Boolean disableAutomatedBackup) {
            this.disableAutomatedBackup = Output.ofNullable(disableAutomatedBackup);
            return this;
        }

        public Builder engine(@Nullable Output<String> engine) {
            this.engine = engine;
            return this;
        }

        public Builder engine(@Nullable String engine) {
            this.engine = Output.ofNullable(engine);
            return this;
        }

        public Builder engineAttributes(@Nullable Output<List<ServerEngineAttributeArgs>> engineAttributes) {
            this.engineAttributes = engineAttributes;
            return this;
        }

        public Builder engineAttributes(@Nullable List<ServerEngineAttributeArgs> engineAttributes) {
            this.engineAttributes = Output.ofNullable(engineAttributes);
            return this;
        }

        public Builder engineModel(@Nullable Output<String> engineModel) {
            this.engineModel = engineModel;
            return this;
        }

        public Builder engineModel(@Nullable String engineModel) {
            this.engineModel = Output.ofNullable(engineModel);
            return this;
        }

        public Builder engineVersion(@Nullable Output<String> engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }

        public Builder engineVersion(@Nullable String engineVersion) {
            this.engineVersion = Output.ofNullable(engineVersion);
            return this;
        }

        public Builder instanceProfileArn(Output<String> instanceProfileArn) {
            this.instanceProfileArn = Objects.requireNonNull(instanceProfileArn);
            return this;
        }

        public Builder instanceProfileArn(String instanceProfileArn) {
            this.instanceProfileArn = Output.of(Objects.requireNonNull(instanceProfileArn));
            return this;
        }

        public Builder instanceType(Output<String> instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }

        public Builder instanceType(String instanceType) {
            this.instanceType = Output.of(Objects.requireNonNull(instanceType));
            return this;
        }

        public Builder keyPair(@Nullable Output<String> keyPair) {
            this.keyPair = keyPair;
            return this;
        }

        public Builder keyPair(@Nullable String keyPair) {
            this.keyPair = Output.ofNullable(keyPair);
            return this;
        }

        public Builder preferredBackupWindow(@Nullable Output<String> preferredBackupWindow) {
            this.preferredBackupWindow = preferredBackupWindow;
            return this;
        }

        public Builder preferredBackupWindow(@Nullable String preferredBackupWindow) {
            this.preferredBackupWindow = Output.ofNullable(preferredBackupWindow);
            return this;
        }

        public Builder preferredMaintenanceWindow(@Nullable Output<String> preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = preferredMaintenanceWindow;
            return this;
        }

        public Builder preferredMaintenanceWindow(@Nullable String preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = Output.ofNullable(preferredMaintenanceWindow);
            return this;
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = Output.ofNullable(securityGroupIds);
            return this;
        }

        public Builder serverName(@Nullable Output<String> serverName) {
            this.serverName = serverName;
            return this;
        }

        public Builder serverName(@Nullable String serverName) {
            this.serverName = Output.ofNullable(serverName);
            return this;
        }

        public Builder serviceRoleArn(Output<String> serviceRoleArn) {
            this.serviceRoleArn = Objects.requireNonNull(serviceRoleArn);
            return this;
        }

        public Builder serviceRoleArn(String serviceRoleArn) {
            this.serviceRoleArn = Output.of(Objects.requireNonNull(serviceRoleArn));
            return this;
        }

        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = Output.ofNullable(subnetIds);
            return this;
        }

        public Builder tags(@Nullable Output<List<ServerTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<ServerTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public ServerArgs build() {
            return new ServerArgs(associatePublicIpAddress, backupId, backupRetentionCount, customCertificate, customDomain, customPrivateKey, disableAutomatedBackup, engine, engineAttributes, engineModel, engineVersion, instanceProfileArn, instanceType, keyPair, preferredBackupWindow, preferredMaintenanceWindow, securityGroupIds, serverName, serviceRoleArn, subnetIds, tags);
        }
    }
}
