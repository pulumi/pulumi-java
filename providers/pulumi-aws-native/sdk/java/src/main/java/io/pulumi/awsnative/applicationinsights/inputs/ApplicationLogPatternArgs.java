// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.applicationinsights.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * The log pattern.
 * 
 */
public final class ApplicationLogPatternArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApplicationLogPatternArgs Empty = new ApplicationLogPatternArgs();

    /**
     * The log pattern.
     * 
     */
    @InputImport(name="pattern", required=true)
      private final Output<String> pattern;

    public Output<String> getPattern() {
        return this.pattern;
    }

    /**
     * The name of the log pattern.
     * 
     */
    @InputImport(name="patternName", required=true)
      private final Output<String> patternName;

    public Output<String> getPatternName() {
        return this.patternName;
    }

    /**
     * Rank of the log pattern.
     * 
     */
    @InputImport(name="rank", required=true)
      private final Output<Integer> rank;

    public Output<Integer> getRank() {
        return this.rank;
    }

    public ApplicationLogPatternArgs(
        Output<String> pattern,
        Output<String> patternName,
        Output<Integer> rank) {
        this.pattern = Objects.requireNonNull(pattern, "expected parameter 'pattern' to be non-null");
        this.patternName = Objects.requireNonNull(patternName, "expected parameter 'patternName' to be non-null");
        this.rank = Objects.requireNonNull(rank, "expected parameter 'rank' to be non-null");
    }

    private ApplicationLogPatternArgs() {
        this.pattern = Output.empty();
        this.patternName = Output.empty();
        this.rank = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationLogPatternArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> pattern;
        private Output<String> patternName;
        private Output<Integer> rank;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationLogPatternArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pattern = defaults.pattern;
    	      this.patternName = defaults.patternName;
    	      this.rank = defaults.rank;
        }

        public Builder pattern(Output<String> pattern) {
            this.pattern = Objects.requireNonNull(pattern);
            return this;
        }

        public Builder pattern(String pattern) {
            this.pattern = Output.of(Objects.requireNonNull(pattern));
            return this;
        }

        public Builder patternName(Output<String> patternName) {
            this.patternName = Objects.requireNonNull(patternName);
            return this;
        }

        public Builder patternName(String patternName) {
            this.patternName = Output.of(Objects.requireNonNull(patternName));
            return this;
        }

        public Builder rank(Output<Integer> rank) {
            this.rank = Objects.requireNonNull(rank);
            return this;
        }

        public Builder rank(Integer rank) {
            this.rank = Output.of(Objects.requireNonNull(rank));
            return this;
        }
        public ApplicationLogPatternArgs build() {
            return new ApplicationLogPatternArgs(pattern, patternName, rank);
        }
    }
}
