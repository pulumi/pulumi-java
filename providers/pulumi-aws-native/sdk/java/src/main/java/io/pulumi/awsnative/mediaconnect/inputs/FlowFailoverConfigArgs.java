// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediaconnect.inputs;

import io.pulumi.awsnative.mediaconnect.enums.FlowFailoverConfigState;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The settings for source failover
 * 
 */
public final class FlowFailoverConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowFailoverConfigArgs Empty = new FlowFailoverConfigArgs();

    /**
     * Search window time to look for dash-7 packets
     * 
     */
    @InputImport(name="recoveryWindow")
      private final @Nullable Input<Integer> recoveryWindow;

    public Input<Integer> getRecoveryWindow() {
        return this.recoveryWindow == null ? Input.empty() : this.recoveryWindow;
    }

    @InputImport(name="state")
      private final @Nullable Input<FlowFailoverConfigState> state;

    public Input<FlowFailoverConfigState> getState() {
        return this.state == null ? Input.empty() : this.state;
    }

    public FlowFailoverConfigArgs(
        @Nullable Input<Integer> recoveryWindow,
        @Nullable Input<FlowFailoverConfigState> state) {
        this.recoveryWindow = recoveryWindow;
        this.state = state;
    }

    private FlowFailoverConfigArgs() {
        this.recoveryWindow = Input.empty();
        this.state = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowFailoverConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> recoveryWindow;
        private @Nullable Input<FlowFailoverConfigState> state;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowFailoverConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.recoveryWindow = defaults.recoveryWindow;
    	      this.state = defaults.state;
        }

        public Builder setRecoveryWindow(@Nullable Input<Integer> recoveryWindow) {
            this.recoveryWindow = recoveryWindow;
            return this;
        }

        public Builder setRecoveryWindow(@Nullable Integer recoveryWindow) {
            this.recoveryWindow = Input.ofNullable(recoveryWindow);
            return this;
        }

        public Builder setState(@Nullable Input<FlowFailoverConfigState> state) {
            this.state = state;
            return this;
        }

        public Builder setState(@Nullable FlowFailoverConfigState state) {
            this.state = Input.ofNullable(state);
            return this;
        }
        public FlowFailoverConfigArgs build() {
            return new FlowFailoverConfigArgs(recoveryWindow, state);
        }
    }
}
