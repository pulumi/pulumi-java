// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lightsail;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.lightsail.BucketArgs;
import io.pulumi.awsnative.lightsail.outputs.BucketAccessRules;
import io.pulumi.awsnative.lightsail.outputs.BucketTag;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="aws-native:lightsail:Bucket")
public class Bucket extends io.pulumi.resources.CustomResource {
    @OutputExport(name="ableToUpdateBundle", type=Boolean.class, parameters={})
    private Output<Boolean> ableToUpdateBundle;

    public Output<Boolean> getAbleToUpdateBundle() {
        return this.ableToUpdateBundle;
    }
    @OutputExport(name="accessRules", type=BucketAccessRules.class, parameters={})
    private Output</* @Nullable */ BucketAccessRules> accessRules;

    public Output</* @Nullable */ BucketAccessRules> getAccessRules() {
        return this.accessRules;
    }
    @OutputExport(name="bucketArn", type=String.class, parameters={})
    private Output<String> bucketArn;

    public Output<String> getBucketArn() {
        return this.bucketArn;
    }
    @OutputExport(name="bucketName", type=String.class, parameters={})
    private Output<String> bucketName;

    public Output<String> getBucketName() {
        return this.bucketName;
    }
    @OutputExport(name="bundleId", type=String.class, parameters={})
    private Output<String> bundleId;

    public Output<String> getBundleId() {
        return this.bundleId;
    }
    @OutputExport(name="objectVersioning", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> objectVersioning;

    public Output</* @Nullable */ Boolean> getObjectVersioning() {
        return this.objectVersioning;
    }
    @OutputExport(name="readOnlyAccessAccounts", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> readOnlyAccessAccounts;

    public Output</* @Nullable */ List<String>> getReadOnlyAccessAccounts() {
        return this.readOnlyAccessAccounts;
    }
    @OutputExport(name="resourcesReceivingAccess", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> resourcesReceivingAccess;

    public Output</* @Nullable */ List<String>> getResourcesReceivingAccess() {
        return this.resourcesReceivingAccess;
    }
    @OutputExport(name="tags", type=List.class, parameters={BucketTag.class})
    private Output</* @Nullable */ List<BucketTag>> tags;

    public Output</* @Nullable */ List<BucketTag>> getTags() {
        return this.tags;
    }
    @OutputExport(name="url", type=String.class, parameters={})
    private Output<String> url;

    public Output<String> getUrl() {
        return this.url;
    }

    public Bucket(String name, BucketArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lightsail:Bucket", name, args == null ? BucketArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Bucket(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lightsail:Bucket", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Bucket get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Bucket(name, id, options);
    }
}
