// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iot.inputs;

import io.pulumi.awsnative.iot.inputs.AccountAuditConfigurationAuditCheckConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies which audit checks are enabled and disabled for this account.
 * 
 */
public final class AccountAuditConfigurationAuditCheckConfigurationsArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccountAuditConfigurationAuditCheckConfigurationsArgs Empty = new AccountAuditConfigurationAuditCheckConfigurationsArgs();

    @Import(name="authenticatedCognitoRoleOverlyPermissiveCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> authenticatedCognitoRoleOverlyPermissiveCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getAuthenticatedCognitoRoleOverlyPermissiveCheck() {
        return this.authenticatedCognitoRoleOverlyPermissiveCheck == null ? Output.empty() : this.authenticatedCognitoRoleOverlyPermissiveCheck;
    }

    @Import(name="caCertificateExpiringCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> caCertificateExpiringCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getCaCertificateExpiringCheck() {
        return this.caCertificateExpiringCheck == null ? Output.empty() : this.caCertificateExpiringCheck;
    }

    @Import(name="caCertificateKeyQualityCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> caCertificateKeyQualityCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getCaCertificateKeyQualityCheck() {
        return this.caCertificateKeyQualityCheck == null ? Output.empty() : this.caCertificateKeyQualityCheck;
    }

    @Import(name="conflictingClientIdsCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> conflictingClientIdsCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getConflictingClientIdsCheck() {
        return this.conflictingClientIdsCheck == null ? Output.empty() : this.conflictingClientIdsCheck;
    }

    @Import(name="deviceCertificateExpiringCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateExpiringCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getDeviceCertificateExpiringCheck() {
        return this.deviceCertificateExpiringCheck == null ? Output.empty() : this.deviceCertificateExpiringCheck;
    }

    @Import(name="deviceCertificateKeyQualityCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateKeyQualityCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getDeviceCertificateKeyQualityCheck() {
        return this.deviceCertificateKeyQualityCheck == null ? Output.empty() : this.deviceCertificateKeyQualityCheck;
    }

    @Import(name="deviceCertificateSharedCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateSharedCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getDeviceCertificateSharedCheck() {
        return this.deviceCertificateSharedCheck == null ? Output.empty() : this.deviceCertificateSharedCheck;
    }

    @Import(name="iotPolicyOverlyPermissiveCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotPolicyOverlyPermissiveCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getIotPolicyOverlyPermissiveCheck() {
        return this.iotPolicyOverlyPermissiveCheck == null ? Output.empty() : this.iotPolicyOverlyPermissiveCheck;
    }

    @Import(name="iotRoleAliasAllowsAccessToUnusedServicesCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotRoleAliasAllowsAccessToUnusedServicesCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getIotRoleAliasAllowsAccessToUnusedServicesCheck() {
        return this.iotRoleAliasAllowsAccessToUnusedServicesCheck == null ? Output.empty() : this.iotRoleAliasAllowsAccessToUnusedServicesCheck;
    }

    @Import(name="iotRoleAliasOverlyPermissiveCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotRoleAliasOverlyPermissiveCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getIotRoleAliasOverlyPermissiveCheck() {
        return this.iotRoleAliasOverlyPermissiveCheck == null ? Output.empty() : this.iotRoleAliasOverlyPermissiveCheck;
    }

    @Import(name="loggingDisabledCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> loggingDisabledCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getLoggingDisabledCheck() {
        return this.loggingDisabledCheck == null ? Output.empty() : this.loggingDisabledCheck;
    }

    @Import(name="revokedCaCertificateStillActiveCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> revokedCaCertificateStillActiveCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getRevokedCaCertificateStillActiveCheck() {
        return this.revokedCaCertificateStillActiveCheck == null ? Output.empty() : this.revokedCaCertificateStillActiveCheck;
    }

    @Import(name="revokedDeviceCertificateStillActiveCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> revokedDeviceCertificateStillActiveCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getRevokedDeviceCertificateStillActiveCheck() {
        return this.revokedDeviceCertificateStillActiveCheck == null ? Output.empty() : this.revokedDeviceCertificateStillActiveCheck;
    }

    @Import(name="unauthenticatedCognitoRoleOverlyPermissiveCheck")
      private final @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> unauthenticatedCognitoRoleOverlyPermissiveCheck;

    public Output<AccountAuditConfigurationAuditCheckConfigurationArgs> getUnauthenticatedCognitoRoleOverlyPermissiveCheck() {
        return this.unauthenticatedCognitoRoleOverlyPermissiveCheck == null ? Output.empty() : this.unauthenticatedCognitoRoleOverlyPermissiveCheck;
    }

    public AccountAuditConfigurationAuditCheckConfigurationsArgs(
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> authenticatedCognitoRoleOverlyPermissiveCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> caCertificateExpiringCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> caCertificateKeyQualityCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> conflictingClientIdsCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateExpiringCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateKeyQualityCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateSharedCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotPolicyOverlyPermissiveCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotRoleAliasAllowsAccessToUnusedServicesCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotRoleAliasOverlyPermissiveCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> loggingDisabledCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> revokedCaCertificateStillActiveCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> revokedDeviceCertificateStillActiveCheck,
        @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> unauthenticatedCognitoRoleOverlyPermissiveCheck) {
        this.authenticatedCognitoRoleOverlyPermissiveCheck = authenticatedCognitoRoleOverlyPermissiveCheck;
        this.caCertificateExpiringCheck = caCertificateExpiringCheck;
        this.caCertificateKeyQualityCheck = caCertificateKeyQualityCheck;
        this.conflictingClientIdsCheck = conflictingClientIdsCheck;
        this.deviceCertificateExpiringCheck = deviceCertificateExpiringCheck;
        this.deviceCertificateKeyQualityCheck = deviceCertificateKeyQualityCheck;
        this.deviceCertificateSharedCheck = deviceCertificateSharedCheck;
        this.iotPolicyOverlyPermissiveCheck = iotPolicyOverlyPermissiveCheck;
        this.iotRoleAliasAllowsAccessToUnusedServicesCheck = iotRoleAliasAllowsAccessToUnusedServicesCheck;
        this.iotRoleAliasOverlyPermissiveCheck = iotRoleAliasOverlyPermissiveCheck;
        this.loggingDisabledCheck = loggingDisabledCheck;
        this.revokedCaCertificateStillActiveCheck = revokedCaCertificateStillActiveCheck;
        this.revokedDeviceCertificateStillActiveCheck = revokedDeviceCertificateStillActiveCheck;
        this.unauthenticatedCognitoRoleOverlyPermissiveCheck = unauthenticatedCognitoRoleOverlyPermissiveCheck;
    }

    private AccountAuditConfigurationAuditCheckConfigurationsArgs() {
        this.authenticatedCognitoRoleOverlyPermissiveCheck = Output.empty();
        this.caCertificateExpiringCheck = Output.empty();
        this.caCertificateKeyQualityCheck = Output.empty();
        this.conflictingClientIdsCheck = Output.empty();
        this.deviceCertificateExpiringCheck = Output.empty();
        this.deviceCertificateKeyQualityCheck = Output.empty();
        this.deviceCertificateSharedCheck = Output.empty();
        this.iotPolicyOverlyPermissiveCheck = Output.empty();
        this.iotRoleAliasAllowsAccessToUnusedServicesCheck = Output.empty();
        this.iotRoleAliasOverlyPermissiveCheck = Output.empty();
        this.loggingDisabledCheck = Output.empty();
        this.revokedCaCertificateStillActiveCheck = Output.empty();
        this.revokedDeviceCertificateStillActiveCheck = Output.empty();
        this.unauthenticatedCognitoRoleOverlyPermissiveCheck = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountAuditConfigurationAuditCheckConfigurationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> authenticatedCognitoRoleOverlyPermissiveCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> caCertificateExpiringCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> caCertificateKeyQualityCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> conflictingClientIdsCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateExpiringCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateKeyQualityCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateSharedCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotPolicyOverlyPermissiveCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotRoleAliasAllowsAccessToUnusedServicesCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotRoleAliasOverlyPermissiveCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> loggingDisabledCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> revokedCaCertificateStillActiveCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> revokedDeviceCertificateStillActiveCheck;
        private @Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> unauthenticatedCognitoRoleOverlyPermissiveCheck;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountAuditConfigurationAuditCheckConfigurationsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticatedCognitoRoleOverlyPermissiveCheck = defaults.authenticatedCognitoRoleOverlyPermissiveCheck;
    	      this.caCertificateExpiringCheck = defaults.caCertificateExpiringCheck;
    	      this.caCertificateKeyQualityCheck = defaults.caCertificateKeyQualityCheck;
    	      this.conflictingClientIdsCheck = defaults.conflictingClientIdsCheck;
    	      this.deviceCertificateExpiringCheck = defaults.deviceCertificateExpiringCheck;
    	      this.deviceCertificateKeyQualityCheck = defaults.deviceCertificateKeyQualityCheck;
    	      this.deviceCertificateSharedCheck = defaults.deviceCertificateSharedCheck;
    	      this.iotPolicyOverlyPermissiveCheck = defaults.iotPolicyOverlyPermissiveCheck;
    	      this.iotRoleAliasAllowsAccessToUnusedServicesCheck = defaults.iotRoleAliasAllowsAccessToUnusedServicesCheck;
    	      this.iotRoleAliasOverlyPermissiveCheck = defaults.iotRoleAliasOverlyPermissiveCheck;
    	      this.loggingDisabledCheck = defaults.loggingDisabledCheck;
    	      this.revokedCaCertificateStillActiveCheck = defaults.revokedCaCertificateStillActiveCheck;
    	      this.revokedDeviceCertificateStillActiveCheck = defaults.revokedDeviceCertificateStillActiveCheck;
    	      this.unauthenticatedCognitoRoleOverlyPermissiveCheck = defaults.unauthenticatedCognitoRoleOverlyPermissiveCheck;
        }

        public Builder authenticatedCognitoRoleOverlyPermissiveCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> authenticatedCognitoRoleOverlyPermissiveCheck) {
            this.authenticatedCognitoRoleOverlyPermissiveCheck = authenticatedCognitoRoleOverlyPermissiveCheck;
            return this;
        }
        public Builder authenticatedCognitoRoleOverlyPermissiveCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs authenticatedCognitoRoleOverlyPermissiveCheck) {
            this.authenticatedCognitoRoleOverlyPermissiveCheck = Output.ofNullable(authenticatedCognitoRoleOverlyPermissiveCheck);
            return this;
        }
        public Builder caCertificateExpiringCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> caCertificateExpiringCheck) {
            this.caCertificateExpiringCheck = caCertificateExpiringCheck;
            return this;
        }
        public Builder caCertificateExpiringCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs caCertificateExpiringCheck) {
            this.caCertificateExpiringCheck = Output.ofNullable(caCertificateExpiringCheck);
            return this;
        }
        public Builder caCertificateKeyQualityCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> caCertificateKeyQualityCheck) {
            this.caCertificateKeyQualityCheck = caCertificateKeyQualityCheck;
            return this;
        }
        public Builder caCertificateKeyQualityCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs caCertificateKeyQualityCheck) {
            this.caCertificateKeyQualityCheck = Output.ofNullable(caCertificateKeyQualityCheck);
            return this;
        }
        public Builder conflictingClientIdsCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> conflictingClientIdsCheck) {
            this.conflictingClientIdsCheck = conflictingClientIdsCheck;
            return this;
        }
        public Builder conflictingClientIdsCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs conflictingClientIdsCheck) {
            this.conflictingClientIdsCheck = Output.ofNullable(conflictingClientIdsCheck);
            return this;
        }
        public Builder deviceCertificateExpiringCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateExpiringCheck) {
            this.deviceCertificateExpiringCheck = deviceCertificateExpiringCheck;
            return this;
        }
        public Builder deviceCertificateExpiringCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs deviceCertificateExpiringCheck) {
            this.deviceCertificateExpiringCheck = Output.ofNullable(deviceCertificateExpiringCheck);
            return this;
        }
        public Builder deviceCertificateKeyQualityCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateKeyQualityCheck) {
            this.deviceCertificateKeyQualityCheck = deviceCertificateKeyQualityCheck;
            return this;
        }
        public Builder deviceCertificateKeyQualityCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs deviceCertificateKeyQualityCheck) {
            this.deviceCertificateKeyQualityCheck = Output.ofNullable(deviceCertificateKeyQualityCheck);
            return this;
        }
        public Builder deviceCertificateSharedCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> deviceCertificateSharedCheck) {
            this.deviceCertificateSharedCheck = deviceCertificateSharedCheck;
            return this;
        }
        public Builder deviceCertificateSharedCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs deviceCertificateSharedCheck) {
            this.deviceCertificateSharedCheck = Output.ofNullable(deviceCertificateSharedCheck);
            return this;
        }
        public Builder iotPolicyOverlyPermissiveCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotPolicyOverlyPermissiveCheck) {
            this.iotPolicyOverlyPermissiveCheck = iotPolicyOverlyPermissiveCheck;
            return this;
        }
        public Builder iotPolicyOverlyPermissiveCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs iotPolicyOverlyPermissiveCheck) {
            this.iotPolicyOverlyPermissiveCheck = Output.ofNullable(iotPolicyOverlyPermissiveCheck);
            return this;
        }
        public Builder iotRoleAliasAllowsAccessToUnusedServicesCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotRoleAliasAllowsAccessToUnusedServicesCheck) {
            this.iotRoleAliasAllowsAccessToUnusedServicesCheck = iotRoleAliasAllowsAccessToUnusedServicesCheck;
            return this;
        }
        public Builder iotRoleAliasAllowsAccessToUnusedServicesCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs iotRoleAliasAllowsAccessToUnusedServicesCheck) {
            this.iotRoleAliasAllowsAccessToUnusedServicesCheck = Output.ofNullable(iotRoleAliasAllowsAccessToUnusedServicesCheck);
            return this;
        }
        public Builder iotRoleAliasOverlyPermissiveCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> iotRoleAliasOverlyPermissiveCheck) {
            this.iotRoleAliasOverlyPermissiveCheck = iotRoleAliasOverlyPermissiveCheck;
            return this;
        }
        public Builder iotRoleAliasOverlyPermissiveCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs iotRoleAliasOverlyPermissiveCheck) {
            this.iotRoleAliasOverlyPermissiveCheck = Output.ofNullable(iotRoleAliasOverlyPermissiveCheck);
            return this;
        }
        public Builder loggingDisabledCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> loggingDisabledCheck) {
            this.loggingDisabledCheck = loggingDisabledCheck;
            return this;
        }
        public Builder loggingDisabledCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs loggingDisabledCheck) {
            this.loggingDisabledCheck = Output.ofNullable(loggingDisabledCheck);
            return this;
        }
        public Builder revokedCaCertificateStillActiveCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> revokedCaCertificateStillActiveCheck) {
            this.revokedCaCertificateStillActiveCheck = revokedCaCertificateStillActiveCheck;
            return this;
        }
        public Builder revokedCaCertificateStillActiveCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs revokedCaCertificateStillActiveCheck) {
            this.revokedCaCertificateStillActiveCheck = Output.ofNullable(revokedCaCertificateStillActiveCheck);
            return this;
        }
        public Builder revokedDeviceCertificateStillActiveCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> revokedDeviceCertificateStillActiveCheck) {
            this.revokedDeviceCertificateStillActiveCheck = revokedDeviceCertificateStillActiveCheck;
            return this;
        }
        public Builder revokedDeviceCertificateStillActiveCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs revokedDeviceCertificateStillActiveCheck) {
            this.revokedDeviceCertificateStillActiveCheck = Output.ofNullable(revokedDeviceCertificateStillActiveCheck);
            return this;
        }
        public Builder unauthenticatedCognitoRoleOverlyPermissiveCheck(@Nullable Output<AccountAuditConfigurationAuditCheckConfigurationArgs> unauthenticatedCognitoRoleOverlyPermissiveCheck) {
            this.unauthenticatedCognitoRoleOverlyPermissiveCheck = unauthenticatedCognitoRoleOverlyPermissiveCheck;
            return this;
        }
        public Builder unauthenticatedCognitoRoleOverlyPermissiveCheck(@Nullable AccountAuditConfigurationAuditCheckConfigurationArgs unauthenticatedCognitoRoleOverlyPermissiveCheck) {
            this.unauthenticatedCognitoRoleOverlyPermissiveCheck = Output.ofNullable(unauthenticatedCognitoRoleOverlyPermissiveCheck);
            return this;
        }        public AccountAuditConfigurationAuditCheckConfigurationsArgs build() {
            return new AccountAuditConfigurationAuditCheckConfigurationsArgs(authenticatedCognitoRoleOverlyPermissiveCheck, caCertificateExpiringCheck, caCertificateKeyQualityCheck, conflictingClientIdsCheck, deviceCertificateExpiringCheck, deviceCertificateKeyQualityCheck, deviceCertificateSharedCheck, iotPolicyOverlyPermissiveCheck, iotRoleAliasAllowsAccessToUnusedServicesCheck, iotRoleAliasOverlyPermissiveCheck, loggingDisabledCheck, revokedCaCertificateStillActiveCheck, revokedDeviceCertificateStillActiveCheck, unauthenticatedCognitoRoleOverlyPermissiveCheck);
        }
    }
}
