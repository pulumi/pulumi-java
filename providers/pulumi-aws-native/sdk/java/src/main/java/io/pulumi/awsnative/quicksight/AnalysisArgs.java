// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight;

import io.pulumi.awsnative.quicksight.inputs.AnalysisErrorArgs;
import io.pulumi.awsnative.quicksight.inputs.AnalysisParametersArgs;
import io.pulumi.awsnative.quicksight.inputs.AnalysisResourcePermissionArgs;
import io.pulumi.awsnative.quicksight.inputs.AnalysisSourceEntityArgs;
import io.pulumi.awsnative.quicksight.inputs.AnalysisTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AnalysisArgs extends io.pulumi.resources.ResourceArgs {

    public static final AnalysisArgs Empty = new AnalysisArgs();

    @Import(name="analysisId", required=true)
      private final Output<String> analysisId;

    public Output<String> analysisId() {
        return this.analysisId;
    }

    @Import(name="awsAccountId", required=true)
      private final Output<String> awsAccountId;

    public Output<String> awsAccountId() {
        return this.awsAccountId;
    }

    /**
     * <p>Errors associated with the analysis.</p>
     * 
     */
    @Import(name="errors")
      private final @Nullable Output<List<AnalysisErrorArgs>> errors;

    public Output<List<AnalysisErrorArgs>> errors() {
        return this.errors == null ? Codegen.empty() : this.errors;
    }

    /**
     * <p>The descriptive name of the analysis.</p>
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="parameters")
      private final @Nullable Output<AnalysisParametersArgs> parameters;

    public Output<AnalysisParametersArgs> parameters() {
        return this.parameters == null ? Codegen.empty() : this.parameters;
    }

    /**
     * <p>A structure that describes the principals and the resource-level permissions on an
     *             analysis. You can use the <code>Permissions</code> structure to grant permissions by
     *             providing a list of AWS Identity and Access Management (IAM) action information for each
     *             principal listed by Amazon Resource Name (ARN). </p>
     * 
     *         <p>To specify no permissions, omit <code>Permissions</code>.</p>
     * 
     */
    @Import(name="permissions")
      private final @Nullable Output<List<AnalysisResourcePermissionArgs>> permissions;

    public Output<List<AnalysisResourcePermissionArgs>> permissions() {
        return this.permissions == null ? Codegen.empty() : this.permissions;
    }

    @Import(name="sourceEntity", required=true)
      private final Output<AnalysisSourceEntityArgs> sourceEntity;

    public Output<AnalysisSourceEntityArgs> sourceEntity() {
        return this.sourceEntity;
    }

    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             analysis.</p>
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<AnalysisTagArgs>> tags;

    public Output<List<AnalysisTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * <p>The ARN of the theme of the analysis.</p>
     * 
     */
    @Import(name="themeArn")
      private final @Nullable Output<String> themeArn;

    public Output<String> themeArn() {
        return this.themeArn == null ? Codegen.empty() : this.themeArn;
    }

    public AnalysisArgs(
        Output<String> analysisId,
        Output<String> awsAccountId,
        @Nullable Output<List<AnalysisErrorArgs>> errors,
        @Nullable Output<String> name,
        @Nullable Output<AnalysisParametersArgs> parameters,
        @Nullable Output<List<AnalysisResourcePermissionArgs>> permissions,
        Output<AnalysisSourceEntityArgs> sourceEntity,
        @Nullable Output<List<AnalysisTagArgs>> tags,
        @Nullable Output<String> themeArn) {
        this.analysisId = Objects.requireNonNull(analysisId, "expected parameter 'analysisId' to be non-null");
        this.awsAccountId = Objects.requireNonNull(awsAccountId, "expected parameter 'awsAccountId' to be non-null");
        this.errors = errors;
        this.name = name;
        this.parameters = parameters;
        this.permissions = permissions;
        this.sourceEntity = Objects.requireNonNull(sourceEntity, "expected parameter 'sourceEntity' to be non-null");
        this.tags = tags;
        this.themeArn = themeArn;
    }

    private AnalysisArgs() {
        this.analysisId = Codegen.empty();
        this.awsAccountId = Codegen.empty();
        this.errors = Codegen.empty();
        this.name = Codegen.empty();
        this.parameters = Codegen.empty();
        this.permissions = Codegen.empty();
        this.sourceEntity = Codegen.empty();
        this.tags = Codegen.empty();
        this.themeArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnalysisArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> analysisId;
        private Output<String> awsAccountId;
        private @Nullable Output<List<AnalysisErrorArgs>> errors;
        private @Nullable Output<String> name;
        private @Nullable Output<AnalysisParametersArgs> parameters;
        private @Nullable Output<List<AnalysisResourcePermissionArgs>> permissions;
        private Output<AnalysisSourceEntityArgs> sourceEntity;
        private @Nullable Output<List<AnalysisTagArgs>> tags;
        private @Nullable Output<String> themeArn;

        public Builder() {
    	      // Empty
        }

        public Builder(AnalysisArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analysisId = defaults.analysisId;
    	      this.awsAccountId = defaults.awsAccountId;
    	      this.errors = defaults.errors;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.permissions = defaults.permissions;
    	      this.sourceEntity = defaults.sourceEntity;
    	      this.tags = defaults.tags;
    	      this.themeArn = defaults.themeArn;
        }

        public Builder analysisId(Output<String> analysisId) {
            this.analysisId = Objects.requireNonNull(analysisId);
            return this;
        }
        public Builder analysisId(String analysisId) {
            this.analysisId = Output.of(Objects.requireNonNull(analysisId));
            return this;
        }
        public Builder awsAccountId(Output<String> awsAccountId) {
            this.awsAccountId = Objects.requireNonNull(awsAccountId);
            return this;
        }
        public Builder awsAccountId(String awsAccountId) {
            this.awsAccountId = Output.of(Objects.requireNonNull(awsAccountId));
            return this;
        }
        public Builder errors(@Nullable Output<List<AnalysisErrorArgs>> errors) {
            this.errors = errors;
            return this;
        }
        public Builder errors(@Nullable List<AnalysisErrorArgs> errors) {
            this.errors = Codegen.ofNullable(errors);
            return this;
        }
        public Builder errors(AnalysisErrorArgs... errors) {
            return errors(List.of(errors));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder parameters(@Nullable Output<AnalysisParametersArgs> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(@Nullable AnalysisParametersArgs parameters) {
            this.parameters = Codegen.ofNullable(parameters);
            return this;
        }
        public Builder permissions(@Nullable Output<List<AnalysisResourcePermissionArgs>> permissions) {
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(@Nullable List<AnalysisResourcePermissionArgs> permissions) {
            this.permissions = Codegen.ofNullable(permissions);
            return this;
        }
        public Builder permissions(AnalysisResourcePermissionArgs... permissions) {
            return permissions(List.of(permissions));
        }
        public Builder sourceEntity(Output<AnalysisSourceEntityArgs> sourceEntity) {
            this.sourceEntity = Objects.requireNonNull(sourceEntity);
            return this;
        }
        public Builder sourceEntity(AnalysisSourceEntityArgs sourceEntity) {
            this.sourceEntity = Output.of(Objects.requireNonNull(sourceEntity));
            return this;
        }
        public Builder tags(@Nullable Output<List<AnalysisTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<AnalysisTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(AnalysisTagArgs... tags) {
            return tags(List.of(tags));
        }
        public Builder themeArn(@Nullable Output<String> themeArn) {
            this.themeArn = themeArn;
            return this;
        }
        public Builder themeArn(@Nullable String themeArn) {
            this.themeArn = Codegen.ofNullable(themeArn);
            return this;
        }        public AnalysisArgs build() {
            return new AnalysisArgs(analysisId, awsAccountId, errors, name, parameters, permissions, sourceEntity, tags, themeArn);
        }
    }
}
