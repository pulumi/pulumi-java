// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ec2;

import io.pulumi.awsnative.ec2.enums.NetworkInsightsPathProtocol;
import io.pulumi.awsnative.ec2.inputs.NetworkInsightsPathTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkInsightsPathArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkInsightsPathArgs Empty = new NetworkInsightsPathArgs();

    @InputImport(name="destination", required=true)
    private final Input<String> destination;

    public Input<String> getDestination() {
        return this.destination;
    }

    @InputImport(name="destinationIp")
    private final @Nullable Input<String> destinationIp;

    public Input<String> getDestinationIp() {
        return this.destinationIp == null ? Input.empty() : this.destinationIp;
    }

    @InputImport(name="destinationPort")
    private final @Nullable Input<Integer> destinationPort;

    public Input<Integer> getDestinationPort() {
        return this.destinationPort == null ? Input.empty() : this.destinationPort;
    }

    @InputImport(name="protocol", required=true)
    private final Input<NetworkInsightsPathProtocol> protocol;

    public Input<NetworkInsightsPathProtocol> getProtocol() {
        return this.protocol;
    }

    @InputImport(name="source", required=true)
    private final Input<String> source;

    public Input<String> getSource() {
        return this.source;
    }

    @InputImport(name="sourceIp")
    private final @Nullable Input<String> sourceIp;

    public Input<String> getSourceIp() {
        return this.sourceIp == null ? Input.empty() : this.sourceIp;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<NetworkInsightsPathTagArgs>> tags;

    public Input<List<NetworkInsightsPathTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public NetworkInsightsPathArgs(
        Input<String> destination,
        @Nullable Input<String> destinationIp,
        @Nullable Input<Integer> destinationPort,
        Input<NetworkInsightsPathProtocol> protocol,
        Input<String> source,
        @Nullable Input<String> sourceIp,
        @Nullable Input<List<NetworkInsightsPathTagArgs>> tags) {
        this.destination = Objects.requireNonNull(destination, "expected parameter 'destination' to be non-null");
        this.destinationIp = destinationIp;
        this.destinationPort = destinationPort;
        this.protocol = Objects.requireNonNull(protocol, "expected parameter 'protocol' to be non-null");
        this.source = Objects.requireNonNull(source, "expected parameter 'source' to be non-null");
        this.sourceIp = sourceIp;
        this.tags = tags;
    }

    private NetworkInsightsPathArgs() {
        this.destination = Input.empty();
        this.destinationIp = Input.empty();
        this.destinationPort = Input.empty();
        this.protocol = Input.empty();
        this.source = Input.empty();
        this.sourceIp = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInsightsPathArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> destination;
        private @Nullable Input<String> destinationIp;
        private @Nullable Input<Integer> destinationPort;
        private Input<NetworkInsightsPathProtocol> protocol;
        private Input<String> source;
        private @Nullable Input<String> sourceIp;
        private @Nullable Input<List<NetworkInsightsPathTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkInsightsPathArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.destinationIp = defaults.destinationIp;
    	      this.destinationPort = defaults.destinationPort;
    	      this.protocol = defaults.protocol;
    	      this.source = defaults.source;
    	      this.sourceIp = defaults.sourceIp;
    	      this.tags = defaults.tags;
        }

        public Builder setDestination(Input<String> destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }

        public Builder setDestination(String destination) {
            this.destination = Input.of(Objects.requireNonNull(destination));
            return this;
        }

        public Builder setDestinationIp(@Nullable Input<String> destinationIp) {
            this.destinationIp = destinationIp;
            return this;
        }

        public Builder setDestinationIp(@Nullable String destinationIp) {
            this.destinationIp = Input.ofNullable(destinationIp);
            return this;
        }

        public Builder setDestinationPort(@Nullable Input<Integer> destinationPort) {
            this.destinationPort = destinationPort;
            return this;
        }

        public Builder setDestinationPort(@Nullable Integer destinationPort) {
            this.destinationPort = Input.ofNullable(destinationPort);
            return this;
        }

        public Builder setProtocol(Input<NetworkInsightsPathProtocol> protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }

        public Builder setProtocol(NetworkInsightsPathProtocol protocol) {
            this.protocol = Input.of(Objects.requireNonNull(protocol));
            return this;
        }

        public Builder setSource(Input<String> source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder setSource(String source) {
            this.source = Input.of(Objects.requireNonNull(source));
            return this;
        }

        public Builder setSourceIp(@Nullable Input<String> sourceIp) {
            this.sourceIp = sourceIp;
            return this;
        }

        public Builder setSourceIp(@Nullable String sourceIp) {
            this.sourceIp = Input.ofNullable(sourceIp);
            return this;
        }

        public Builder setTags(@Nullable Input<List<NetworkInsightsPathTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<NetworkInsightsPathTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public NetworkInsightsPathArgs build() {
            return new NetworkInsightsPathArgs(destination, destinationIp, destinationPort, protocol, source, sourceIp, tags);
        }
    }
}
