// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.sagemaker.inputs;

import io.pulumi.awsnative.sagemaker.enums.ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType;
import io.pulumi.awsnative.sagemaker.enums.ModelExplainabilityJobDefinitionEndpointInputS3InputMode;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The endpoint for a monitoring job.
 * 
 */
public final class ModelExplainabilityJobDefinitionEndpointInputArgs extends io.pulumi.resources.ResourceArgs {

    public static final ModelExplainabilityJobDefinitionEndpointInputArgs Empty = new ModelExplainabilityJobDefinitionEndpointInputArgs();

    @Import(name="endpointName", required=true)
      private final Output<String> endpointName;

    public Output<String> getEndpointName() {
        return this.endpointName;
    }

    /**
     * JSONpath to locate features in JSONlines dataset
     * 
     */
    @Import(name="featuresAttribute")
      private final @Nullable Output<String> featuresAttribute;

    public Output<String> getFeaturesAttribute() {
        return this.featuresAttribute == null ? Codegen.empty() : this.featuresAttribute;
    }

    /**
     * Index or JSONpath to locate predicted label(s)
     * 
     */
    @Import(name="inferenceAttribute")
      private final @Nullable Output<String> inferenceAttribute;

    public Output<String> getInferenceAttribute() {
        return this.inferenceAttribute == null ? Codegen.empty() : this.inferenceAttribute;
    }

    /**
     * Path to the filesystem where the endpoint data is available to the container.
     * 
     */
    @Import(name="localPath", required=true)
      private final Output<String> localPath;

    public Output<String> getLocalPath() {
        return this.localPath;
    }

    /**
     * Index or JSONpath to locate probabilities
     * 
     */
    @Import(name="probabilityAttribute")
      private final @Nullable Output<String> probabilityAttribute;

    public Output<String> getProbabilityAttribute() {
        return this.probabilityAttribute == null ? Codegen.empty() : this.probabilityAttribute;
    }

    /**
     * Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
     * 
     */
    @Import(name="s3DataDistributionType")
      private final @Nullable Output<ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType> s3DataDistributionType;

    public Output<ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType> getS3DataDistributionType() {
        return this.s3DataDistributionType == null ? Codegen.empty() : this.s3DataDistributionType;
    }

    /**
     * Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
     * 
     */
    @Import(name="s3InputMode")
      private final @Nullable Output<ModelExplainabilityJobDefinitionEndpointInputS3InputMode> s3InputMode;

    public Output<ModelExplainabilityJobDefinitionEndpointInputS3InputMode> getS3InputMode() {
        return this.s3InputMode == null ? Codegen.empty() : this.s3InputMode;
    }

    public ModelExplainabilityJobDefinitionEndpointInputArgs(
        Output<String> endpointName,
        @Nullable Output<String> featuresAttribute,
        @Nullable Output<String> inferenceAttribute,
        Output<String> localPath,
        @Nullable Output<String> probabilityAttribute,
        @Nullable Output<ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType> s3DataDistributionType,
        @Nullable Output<ModelExplainabilityJobDefinitionEndpointInputS3InputMode> s3InputMode) {
        this.endpointName = Objects.requireNonNull(endpointName, "expected parameter 'endpointName' to be non-null");
        this.featuresAttribute = featuresAttribute;
        this.inferenceAttribute = inferenceAttribute;
        this.localPath = Objects.requireNonNull(localPath, "expected parameter 'localPath' to be non-null");
        this.probabilityAttribute = probabilityAttribute;
        this.s3DataDistributionType = s3DataDistributionType;
        this.s3InputMode = s3InputMode;
    }

    private ModelExplainabilityJobDefinitionEndpointInputArgs() {
        this.endpointName = Codegen.empty();
        this.featuresAttribute = Codegen.empty();
        this.inferenceAttribute = Codegen.empty();
        this.localPath = Codegen.empty();
        this.probabilityAttribute = Codegen.empty();
        this.s3DataDistributionType = Codegen.empty();
        this.s3InputMode = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelExplainabilityJobDefinitionEndpointInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> endpointName;
        private @Nullable Output<String> featuresAttribute;
        private @Nullable Output<String> inferenceAttribute;
        private Output<String> localPath;
        private @Nullable Output<String> probabilityAttribute;
        private @Nullable Output<ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType> s3DataDistributionType;
        private @Nullable Output<ModelExplainabilityJobDefinitionEndpointInputS3InputMode> s3InputMode;

        public Builder() {
    	      // Empty
        }

        public Builder(ModelExplainabilityJobDefinitionEndpointInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointName = defaults.endpointName;
    	      this.featuresAttribute = defaults.featuresAttribute;
    	      this.inferenceAttribute = defaults.inferenceAttribute;
    	      this.localPath = defaults.localPath;
    	      this.probabilityAttribute = defaults.probabilityAttribute;
    	      this.s3DataDistributionType = defaults.s3DataDistributionType;
    	      this.s3InputMode = defaults.s3InputMode;
        }

        public Builder endpointName(Output<String> endpointName) {
            this.endpointName = Objects.requireNonNull(endpointName);
            return this;
        }
        public Builder endpointName(String endpointName) {
            this.endpointName = Output.of(Objects.requireNonNull(endpointName));
            return this;
        }
        public Builder featuresAttribute(@Nullable Output<String> featuresAttribute) {
            this.featuresAttribute = featuresAttribute;
            return this;
        }
        public Builder featuresAttribute(@Nullable String featuresAttribute) {
            this.featuresAttribute = Codegen.ofNullable(featuresAttribute);
            return this;
        }
        public Builder inferenceAttribute(@Nullable Output<String> inferenceAttribute) {
            this.inferenceAttribute = inferenceAttribute;
            return this;
        }
        public Builder inferenceAttribute(@Nullable String inferenceAttribute) {
            this.inferenceAttribute = Codegen.ofNullable(inferenceAttribute);
            return this;
        }
        public Builder localPath(Output<String> localPath) {
            this.localPath = Objects.requireNonNull(localPath);
            return this;
        }
        public Builder localPath(String localPath) {
            this.localPath = Output.of(Objects.requireNonNull(localPath));
            return this;
        }
        public Builder probabilityAttribute(@Nullable Output<String> probabilityAttribute) {
            this.probabilityAttribute = probabilityAttribute;
            return this;
        }
        public Builder probabilityAttribute(@Nullable String probabilityAttribute) {
            this.probabilityAttribute = Codegen.ofNullable(probabilityAttribute);
            return this;
        }
        public Builder s3DataDistributionType(@Nullable Output<ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType> s3DataDistributionType) {
            this.s3DataDistributionType = s3DataDistributionType;
            return this;
        }
        public Builder s3DataDistributionType(@Nullable ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType s3DataDistributionType) {
            this.s3DataDistributionType = Codegen.ofNullable(s3DataDistributionType);
            return this;
        }
        public Builder s3InputMode(@Nullable Output<ModelExplainabilityJobDefinitionEndpointInputS3InputMode> s3InputMode) {
            this.s3InputMode = s3InputMode;
            return this;
        }
        public Builder s3InputMode(@Nullable ModelExplainabilityJobDefinitionEndpointInputS3InputMode s3InputMode) {
            this.s3InputMode = Codegen.ofNullable(s3InputMode);
            return this;
        }        public ModelExplainabilityJobDefinitionEndpointInputArgs build() {
            return new ModelExplainabilityJobDefinitionEndpointInputArgs(endpointName, featuresAttribute, inferenceAttribute, localPath, probabilityAttribute, s3DataDistributionType, s3InputMode);
        }
    }
}
