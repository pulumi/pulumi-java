// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2.inputs;

import io.pulumi.awsnative.wafv2.inputs.WebACLAllowActionArgs;
import io.pulumi.awsnative.wafv2.inputs.WebACLBlockActionArgs;
import io.pulumi.awsnative.wafv2.inputs.WebACLCaptchaActionArgs;
import io.pulumi.awsnative.wafv2.inputs.WebACLCountActionArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Action taken when Rule matches its condition.
 * 
 */
public final class WebACLRuleActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebACLRuleActionArgs Empty = new WebACLRuleActionArgs();

    @Import(name="allow")
      private final @Nullable Output<WebACLAllowActionArgs> allow;

    public Output<WebACLAllowActionArgs> getAllow() {
        return this.allow == null ? Codegen.empty() : this.allow;
    }

    @Import(name="block")
      private final @Nullable Output<WebACLBlockActionArgs> block;

    public Output<WebACLBlockActionArgs> getBlock() {
        return this.block == null ? Codegen.empty() : this.block;
    }

    @Import(name="captcha")
      private final @Nullable Output<WebACLCaptchaActionArgs> captcha;

    public Output<WebACLCaptchaActionArgs> getCaptcha() {
        return this.captcha == null ? Codegen.empty() : this.captcha;
    }

    @Import(name="count")
      private final @Nullable Output<WebACLCountActionArgs> count;

    public Output<WebACLCountActionArgs> getCount() {
        return this.count == null ? Codegen.empty() : this.count;
    }

    public WebACLRuleActionArgs(
        @Nullable Output<WebACLAllowActionArgs> allow,
        @Nullable Output<WebACLBlockActionArgs> block,
        @Nullable Output<WebACLCaptchaActionArgs> captcha,
        @Nullable Output<WebACLCountActionArgs> count) {
        this.allow = allow;
        this.block = block;
        this.captcha = captcha;
        this.count = count;
    }

    private WebACLRuleActionArgs() {
        this.allow = Codegen.empty();
        this.block = Codegen.empty();
        this.captcha = Codegen.empty();
        this.count = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebACLRuleActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<WebACLAllowActionArgs> allow;
        private @Nullable Output<WebACLBlockActionArgs> block;
        private @Nullable Output<WebACLCaptchaActionArgs> captcha;
        private @Nullable Output<WebACLCountActionArgs> count;

        public Builder() {
    	      // Empty
        }

        public Builder(WebACLRuleActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allow = defaults.allow;
    	      this.block = defaults.block;
    	      this.captcha = defaults.captcha;
    	      this.count = defaults.count;
        }

        public Builder allow(@Nullable Output<WebACLAllowActionArgs> allow) {
            this.allow = allow;
            return this;
        }
        public Builder allow(@Nullable WebACLAllowActionArgs allow) {
            this.allow = Codegen.ofNullable(allow);
            return this;
        }
        public Builder block(@Nullable Output<WebACLBlockActionArgs> block) {
            this.block = block;
            return this;
        }
        public Builder block(@Nullable WebACLBlockActionArgs block) {
            this.block = Codegen.ofNullable(block);
            return this;
        }
        public Builder captcha(@Nullable Output<WebACLCaptchaActionArgs> captcha) {
            this.captcha = captcha;
            return this;
        }
        public Builder captcha(@Nullable WebACLCaptchaActionArgs captcha) {
            this.captcha = Codegen.ofNullable(captcha);
            return this;
        }
        public Builder count(@Nullable Output<WebACLCountActionArgs> count) {
            this.count = count;
            return this;
        }
        public Builder count(@Nullable WebACLCountActionArgs count) {
            this.count = Codegen.ofNullable(count);
            return this;
        }        public WebACLRuleActionArgs build() {
            return new WebACLRuleActionArgs(allow, block, captcha, count);
        }
    }
}
