// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2;

import io.pulumi.awsnative.wafv2.enums.IPSetIPAddressVersion;
import io.pulumi.awsnative.wafv2.enums.IPSetScope;
import io.pulumi.awsnative.wafv2.inputs.IPSetTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IPSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final IPSetArgs Empty = new IPSetArgs();

    @InputImport(name="addresses", required=true)
    private final Input<List<String>> addresses;

    public Input<List<String>> getAddresses() {
        return this.addresses;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="iPAddressVersion", required=true)
    private final Input<IPSetIPAddressVersion> iPAddressVersion;

    public Input<IPSetIPAddressVersion> getIPAddressVersion() {
        return this.iPAddressVersion;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="scope", required=true)
    private final Input<IPSetScope> scope;

    public Input<IPSetScope> getScope() {
        return this.scope;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<IPSetTagArgs>> tags;

    public Input<List<IPSetTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public IPSetArgs(
        Input<List<String>> addresses,
        @Nullable Input<String> description,
        Input<IPSetIPAddressVersion> iPAddressVersion,
        @Nullable Input<String> name,
        Input<IPSetScope> scope,
        @Nullable Input<List<IPSetTagArgs>> tags) {
        this.addresses = Objects.requireNonNull(addresses, "expected parameter 'addresses' to be non-null");
        this.description = description;
        this.iPAddressVersion = Objects.requireNonNull(iPAddressVersion, "expected parameter 'iPAddressVersion' to be non-null");
        this.name = name;
        this.scope = Objects.requireNonNull(scope, "expected parameter 'scope' to be non-null");
        this.tags = tags;
    }

    private IPSetArgs() {
        this.addresses = Input.empty();
        this.description = Input.empty();
        this.iPAddressVersion = Input.empty();
        this.name = Input.empty();
        this.scope = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IPSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> addresses;
        private @Nullable Input<String> description;
        private Input<IPSetIPAddressVersion> iPAddressVersion;
        private @Nullable Input<String> name;
        private Input<IPSetScope> scope;
        private @Nullable Input<List<IPSetTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(IPSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addresses = defaults.addresses;
    	      this.description = defaults.description;
    	      this.iPAddressVersion = defaults.iPAddressVersion;
    	      this.name = defaults.name;
    	      this.scope = defaults.scope;
    	      this.tags = defaults.tags;
        }

        public Builder setAddresses(Input<List<String>> addresses) {
            this.addresses = Objects.requireNonNull(addresses);
            return this;
        }

        public Builder setAddresses(List<String> addresses) {
            this.addresses = Input.of(Objects.requireNonNull(addresses));
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setIPAddressVersion(Input<IPSetIPAddressVersion> iPAddressVersion) {
            this.iPAddressVersion = Objects.requireNonNull(iPAddressVersion);
            return this;
        }

        public Builder setIPAddressVersion(IPSetIPAddressVersion iPAddressVersion) {
            this.iPAddressVersion = Input.of(Objects.requireNonNull(iPAddressVersion));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setScope(Input<IPSetScope> scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }

        public Builder setScope(IPSetScope scope) {
            this.scope = Input.of(Objects.requireNonNull(scope));
            return this;
        }

        public Builder setTags(@Nullable Input<List<IPSetTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<IPSetTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public IPSetArgs build() {
            return new IPSetArgs(addresses, description, iPAddressVersion, name, scope, tags);
        }
    }
}
