// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.devicefarm;

import io.pulumi.awsnative.devicefarm.inputs.DevicePoolRuleArgs;
import io.pulumi.awsnative.devicefarm.inputs.DevicePoolTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DevicePoolArgs extends io.pulumi.resources.ResourceArgs {

    public static final DevicePoolArgs Empty = new DevicePoolArgs();

    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    @Import(name="maxDevices")
      private final @Nullable Output<Integer> maxDevices;

    public Output<Integer> getMaxDevices() {
        return this.maxDevices == null ? Output.empty() : this.maxDevices;
    }

    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    @Import(name="projectArn", required=true)
      private final Output<String> projectArn;

    public Output<String> getProjectArn() {
        return this.projectArn;
    }

    @Import(name="rules", required=true)
      private final Output<List<DevicePoolRuleArgs>> rules;

    public Output<List<DevicePoolRuleArgs>> getRules() {
        return this.rules;
    }

    @Import(name="tags")
      private final @Nullable Output<List<DevicePoolTagArgs>> tags;

    public Output<List<DevicePoolTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public DevicePoolArgs(
        @Nullable Output<String> description,
        @Nullable Output<Integer> maxDevices,
        @Nullable Output<String> name,
        Output<String> projectArn,
        Output<List<DevicePoolRuleArgs>> rules,
        @Nullable Output<List<DevicePoolTagArgs>> tags) {
        this.description = description;
        this.maxDevices = maxDevices;
        this.name = name;
        this.projectArn = Objects.requireNonNull(projectArn, "expected parameter 'projectArn' to be non-null");
        this.rules = Objects.requireNonNull(rules, "expected parameter 'rules' to be non-null");
        this.tags = tags;
    }

    private DevicePoolArgs() {
        this.description = Output.empty();
        this.maxDevices = Output.empty();
        this.name = Output.empty();
        this.projectArn = Output.empty();
        this.rules = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DevicePoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<Integer> maxDevices;
        private @Nullable Output<String> name;
        private Output<String> projectArn;
        private Output<List<DevicePoolRuleArgs>> rules;
        private @Nullable Output<List<DevicePoolTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DevicePoolArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.maxDevices = defaults.maxDevices;
    	      this.name = defaults.name;
    	      this.projectArn = defaults.projectArn;
    	      this.rules = defaults.rules;
    	      this.tags = defaults.tags;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder maxDevices(@Nullable Output<Integer> maxDevices) {
            this.maxDevices = maxDevices;
            return this;
        }

        public Builder maxDevices(@Nullable Integer maxDevices) {
            this.maxDevices = Output.ofNullable(maxDevices);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder projectArn(Output<String> projectArn) {
            this.projectArn = Objects.requireNonNull(projectArn);
            return this;
        }

        public Builder projectArn(String projectArn) {
            this.projectArn = Output.of(Objects.requireNonNull(projectArn));
            return this;
        }

        public Builder rules(Output<List<DevicePoolRuleArgs>> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }

        public Builder rules(List<DevicePoolRuleArgs> rules) {
            this.rules = Output.of(Objects.requireNonNull(rules));
            return this;
        }

        public Builder tags(@Nullable Output<List<DevicePoolTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<DevicePoolTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public DevicePoolArgs build() {
            return new DevicePoolArgs(description, maxDevices, name, projectArn, rules, tags);
        }
    }
}
