// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.route53recoverycontrol.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SafetyRuleAssertionRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final SafetyRuleAssertionRuleArgs Empty = new SafetyRuleAssertionRuleArgs();

    @InputImport(name="assertedControls", required=true)
    private final Input<List<String>> assertedControls;

    public Input<List<String>> getAssertedControls() {
        return this.assertedControls;
    }

    @InputImport(name="waitPeriodMs", required=true)
    private final Input<Integer> waitPeriodMs;

    public Input<Integer> getWaitPeriodMs() {
        return this.waitPeriodMs;
    }

    public SafetyRuleAssertionRuleArgs(
        Input<List<String>> assertedControls,
        Input<Integer> waitPeriodMs) {
        this.assertedControls = Objects.requireNonNull(assertedControls, "expected parameter 'assertedControls' to be non-null");
        this.waitPeriodMs = Objects.requireNonNull(waitPeriodMs, "expected parameter 'waitPeriodMs' to be non-null");
    }

    private SafetyRuleAssertionRuleArgs() {
        this.assertedControls = Input.empty();
        this.waitPeriodMs = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SafetyRuleAssertionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> assertedControls;
        private Input<Integer> waitPeriodMs;

        public Builder() {
    	      // Empty
        }

        public Builder(SafetyRuleAssertionRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assertedControls = defaults.assertedControls;
    	      this.waitPeriodMs = defaults.waitPeriodMs;
        }

        public Builder setAssertedControls(Input<List<String>> assertedControls) {
            this.assertedControls = Objects.requireNonNull(assertedControls);
            return this;
        }

        public Builder setAssertedControls(List<String> assertedControls) {
            this.assertedControls = Input.of(Objects.requireNonNull(assertedControls));
            return this;
        }

        public Builder setWaitPeriodMs(Input<Integer> waitPeriodMs) {
            this.waitPeriodMs = Objects.requireNonNull(waitPeriodMs);
            return this;
        }

        public Builder setWaitPeriodMs(Integer waitPeriodMs) {
            this.waitPeriodMs = Input.of(Objects.requireNonNull(waitPeriodMs));
            return this;
        }

        public SafetyRuleAssertionRuleArgs build() {
            return new SafetyRuleAssertionRuleArgs(assertedControls, waitPeriodMs);
        }
    }
}
