// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kinesisfirehose.inputs;

import io.pulumi.awsnative.kinesisfirehose.enums.DeliveryStreamS3DestinationConfigurationCompressionFormat;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamBufferingHintsArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptionsArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamEncryptionConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeliveryStreamS3DestinationConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeliveryStreamS3DestinationConfigurationArgs Empty = new DeliveryStreamS3DestinationConfigurationArgs();

    @InputImport(name="bucketARN", required=true)
        private final Input<String> bucketARN;

    public Input<String> getBucketARN() {
        return this.bucketARN;
    }

    @InputImport(name="bufferingHints")
        private final @Nullable Input<DeliveryStreamBufferingHintsArgs> bufferingHints;

    public Input<DeliveryStreamBufferingHintsArgs> getBufferingHints() {
        return this.bufferingHints == null ? Input.empty() : this.bufferingHints;
    }

    @InputImport(name="cloudWatchLoggingOptions")
        private final @Nullable Input<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions;

    public Input<DeliveryStreamCloudWatchLoggingOptionsArgs> getCloudWatchLoggingOptions() {
        return this.cloudWatchLoggingOptions == null ? Input.empty() : this.cloudWatchLoggingOptions;
    }

    @InputImport(name="compressionFormat")
        private final @Nullable Input<DeliveryStreamS3DestinationConfigurationCompressionFormat> compressionFormat;

    public Input<DeliveryStreamS3DestinationConfigurationCompressionFormat> getCompressionFormat() {
        return this.compressionFormat == null ? Input.empty() : this.compressionFormat;
    }

    @InputImport(name="encryptionConfiguration")
        private final @Nullable Input<DeliveryStreamEncryptionConfigurationArgs> encryptionConfiguration;

    public Input<DeliveryStreamEncryptionConfigurationArgs> getEncryptionConfiguration() {
        return this.encryptionConfiguration == null ? Input.empty() : this.encryptionConfiguration;
    }

    @InputImport(name="errorOutputPrefix")
        private final @Nullable Input<String> errorOutputPrefix;

    public Input<String> getErrorOutputPrefix() {
        return this.errorOutputPrefix == null ? Input.empty() : this.errorOutputPrefix;
    }

    @InputImport(name="prefix")
        private final @Nullable Input<String> prefix;

    public Input<String> getPrefix() {
        return this.prefix == null ? Input.empty() : this.prefix;
    }

    @InputImport(name="roleARN", required=true)
        private final Input<String> roleARN;

    public Input<String> getRoleARN() {
        return this.roleARN;
    }

    public DeliveryStreamS3DestinationConfigurationArgs(
        Input<String> bucketARN,
        @Nullable Input<DeliveryStreamBufferingHintsArgs> bufferingHints,
        @Nullable Input<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions,
        @Nullable Input<DeliveryStreamS3DestinationConfigurationCompressionFormat> compressionFormat,
        @Nullable Input<DeliveryStreamEncryptionConfigurationArgs> encryptionConfiguration,
        @Nullable Input<String> errorOutputPrefix,
        @Nullable Input<String> prefix,
        Input<String> roleARN) {
        this.bucketARN = Objects.requireNonNull(bucketARN, "expected parameter 'bucketARN' to be non-null");
        this.bufferingHints = bufferingHints;
        this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
        this.compressionFormat = compressionFormat;
        this.encryptionConfiguration = encryptionConfiguration;
        this.errorOutputPrefix = errorOutputPrefix;
        this.prefix = prefix;
        this.roleARN = Objects.requireNonNull(roleARN, "expected parameter 'roleARN' to be non-null");
    }

    private DeliveryStreamS3DestinationConfigurationArgs() {
        this.bucketARN = Input.empty();
        this.bufferingHints = Input.empty();
        this.cloudWatchLoggingOptions = Input.empty();
        this.compressionFormat = Input.empty();
        this.encryptionConfiguration = Input.empty();
        this.errorOutputPrefix = Input.empty();
        this.prefix = Input.empty();
        this.roleARN = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryStreamS3DestinationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> bucketARN;
        private @Nullable Input<DeliveryStreamBufferingHintsArgs> bufferingHints;
        private @Nullable Input<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions;
        private @Nullable Input<DeliveryStreamS3DestinationConfigurationCompressionFormat> compressionFormat;
        private @Nullable Input<DeliveryStreamEncryptionConfigurationArgs> encryptionConfiguration;
        private @Nullable Input<String> errorOutputPrefix;
        private @Nullable Input<String> prefix;
        private Input<String> roleARN;

        public Builder() {
    	      // Empty
        }

        public Builder(DeliveryStreamS3DestinationConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketARN = defaults.bucketARN;
    	      this.bufferingHints = defaults.bufferingHints;
    	      this.cloudWatchLoggingOptions = defaults.cloudWatchLoggingOptions;
    	      this.compressionFormat = defaults.compressionFormat;
    	      this.encryptionConfiguration = defaults.encryptionConfiguration;
    	      this.errorOutputPrefix = defaults.errorOutputPrefix;
    	      this.prefix = defaults.prefix;
    	      this.roleARN = defaults.roleARN;
        }

        public Builder setBucketARN(Input<String> bucketARN) {
            this.bucketARN = Objects.requireNonNull(bucketARN);
            return this;
        }

        public Builder setBucketARN(String bucketARN) {
            this.bucketARN = Input.of(Objects.requireNonNull(bucketARN));
            return this;
        }

        public Builder setBufferingHints(@Nullable Input<DeliveryStreamBufferingHintsArgs> bufferingHints) {
            this.bufferingHints = bufferingHints;
            return this;
        }

        public Builder setBufferingHints(@Nullable DeliveryStreamBufferingHintsArgs bufferingHints) {
            this.bufferingHints = Input.ofNullable(bufferingHints);
            return this;
        }

        public Builder setCloudWatchLoggingOptions(@Nullable Input<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions) {
            this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder setCloudWatchLoggingOptions(@Nullable DeliveryStreamCloudWatchLoggingOptionsArgs cloudWatchLoggingOptions) {
            this.cloudWatchLoggingOptions = Input.ofNullable(cloudWatchLoggingOptions);
            return this;
        }

        public Builder setCompressionFormat(@Nullable Input<DeliveryStreamS3DestinationConfigurationCompressionFormat> compressionFormat) {
            this.compressionFormat = compressionFormat;
            return this;
        }

        public Builder setCompressionFormat(@Nullable DeliveryStreamS3DestinationConfigurationCompressionFormat compressionFormat) {
            this.compressionFormat = Input.ofNullable(compressionFormat);
            return this;
        }

        public Builder setEncryptionConfiguration(@Nullable Input<DeliveryStreamEncryptionConfigurationArgs> encryptionConfiguration) {
            this.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        public Builder setEncryptionConfiguration(@Nullable DeliveryStreamEncryptionConfigurationArgs encryptionConfiguration) {
            this.encryptionConfiguration = Input.ofNullable(encryptionConfiguration);
            return this;
        }

        public Builder setErrorOutputPrefix(@Nullable Input<String> errorOutputPrefix) {
            this.errorOutputPrefix = errorOutputPrefix;
            return this;
        }

        public Builder setErrorOutputPrefix(@Nullable String errorOutputPrefix) {
            this.errorOutputPrefix = Input.ofNullable(errorOutputPrefix);
            return this;
        }

        public Builder setPrefix(@Nullable Input<String> prefix) {
            this.prefix = prefix;
            return this;
        }

        public Builder setPrefix(@Nullable String prefix) {
            this.prefix = Input.ofNullable(prefix);
            return this;
        }

        public Builder setRoleARN(Input<String> roleARN) {
            this.roleARN = Objects.requireNonNull(roleARN);
            return this;
        }

        public Builder setRoleARN(String roleARN) {
            this.roleARN = Input.of(Objects.requireNonNull(roleARN));
            return this;
        }
        public DeliveryStreamS3DestinationConfigurationArgs build() {
            return new DeliveryStreamS3DestinationConfigurationArgs(bucketARN, bufferingHints, cloudWatchLoggingOptions, compressionFormat, encryptionConfiguration, errorOutputPrefix, prefix, roleARN);
        }
    }
}
