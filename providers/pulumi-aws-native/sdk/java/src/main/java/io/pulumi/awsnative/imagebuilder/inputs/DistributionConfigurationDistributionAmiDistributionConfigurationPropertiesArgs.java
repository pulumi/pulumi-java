// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.imagebuilder.inputs;

import io.pulumi.awsnative.imagebuilder.inputs.DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The specific AMI settings (for example, launch permissions, AMI tags).
 * 
 */
public final class DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs Empty = new DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs();

    /**
     * The tags to apply to AMIs distributed to this Region.
     * 
     */
    @InputImport(name="amiTags")
    private final @Nullable Input<Object> amiTags;

    public Input<Object> getAmiTags() {
        return this.amiTags == null ? Input.empty() : this.amiTags;
    }

    /**
     * The description of the AMI distribution configuration.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The KMS key identifier used to encrypt the distributed image.
     * 
     */
    @InputImport(name="kmsKeyId")
    private final @Nullable Input<String> kmsKeyId;

    public Input<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Input.empty() : this.kmsKeyId;
    }

    /**
     * Launch permissions can be used to configure which AWS accounts can use the AMI to launch instances.
     * 
     */
    @InputImport(name="launchPermissionConfiguration")
    private final @Nullable Input<DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs> launchPermissionConfiguration;

    public Input<DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs> getLaunchPermissionConfiguration() {
        return this.launchPermissionConfiguration == null ? Input.empty() : this.launchPermissionConfiguration;
    }

    /**
     * The name of the AMI distribution configuration.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The ID of accounts to which you want to distribute an image.
     * 
     */
    @InputImport(name="targetAccountIds")
    private final @Nullable Input<List<String>> targetAccountIds;

    public Input<List<String>> getTargetAccountIds() {
        return this.targetAccountIds == null ? Input.empty() : this.targetAccountIds;
    }

    public DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs(
        @Nullable Input<Object> amiTags,
        @Nullable Input<String> description,
        @Nullable Input<String> kmsKeyId,
        @Nullable Input<DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs> launchPermissionConfiguration,
        @Nullable Input<String> name,
        @Nullable Input<List<String>> targetAccountIds) {
        this.amiTags = amiTags;
        this.description = description;
        this.kmsKeyId = kmsKeyId;
        this.launchPermissionConfiguration = launchPermissionConfiguration;
        this.name = name;
        this.targetAccountIds = targetAccountIds;
    }

    private DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs() {
        this.amiTags = Input.empty();
        this.description = Input.empty();
        this.kmsKeyId = Input.empty();
        this.launchPermissionConfiguration = Input.empty();
        this.name = Input.empty();
        this.targetAccountIds = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Object> amiTags;
        private @Nullable Input<String> description;
        private @Nullable Input<String> kmsKeyId;
        private @Nullable Input<DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs> launchPermissionConfiguration;
        private @Nullable Input<String> name;
        private @Nullable Input<List<String>> targetAccountIds;

        public Builder() {
    	      // Empty
        }

        public Builder(DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amiTags = defaults.amiTags;
    	      this.description = defaults.description;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.launchPermissionConfiguration = defaults.launchPermissionConfiguration;
    	      this.name = defaults.name;
    	      this.targetAccountIds = defaults.targetAccountIds;
        }

        public Builder setAmiTags(@Nullable Input<Object> amiTags) {
            this.amiTags = amiTags;
            return this;
        }

        public Builder setAmiTags(@Nullable Object amiTags) {
            this.amiTags = Input.ofNullable(amiTags);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setKmsKeyId(@Nullable Input<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder setKmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Input.ofNullable(kmsKeyId);
            return this;
        }

        public Builder setLaunchPermissionConfiguration(@Nullable Input<DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs> launchPermissionConfiguration) {
            this.launchPermissionConfiguration = launchPermissionConfiguration;
            return this;
        }

        public Builder setLaunchPermissionConfiguration(@Nullable DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs launchPermissionConfiguration) {
            this.launchPermissionConfiguration = Input.ofNullable(launchPermissionConfiguration);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setTargetAccountIds(@Nullable Input<List<String>> targetAccountIds) {
            this.targetAccountIds = targetAccountIds;
            return this;
        }

        public Builder setTargetAccountIds(@Nullable List<String> targetAccountIds) {
            this.targetAccountIds = Input.ofNullable(targetAccountIds);
            return this;
        }

        public DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs build() {
            return new DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesArgs(amiTags, description, kmsKeyId, launchPermissionConfiguration, name, targetAccountIds);
        }
    }
}
