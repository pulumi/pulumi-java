// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ecs.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskDefinitionContainerDependencyArgs extends io.pulumi.resources.ResourceArgs {

    public static final TaskDefinitionContainerDependencyArgs Empty = new TaskDefinitionContainerDependencyArgs();

    @Import(name="condition")
      private final @Nullable Output<String> condition;

    public Output<String> getCondition() {
        return this.condition == null ? Output.empty() : this.condition;
    }

    @Import(name="containerName")
      private final @Nullable Output<String> containerName;

    public Output<String> getContainerName() {
        return this.containerName == null ? Output.empty() : this.containerName;
    }

    public TaskDefinitionContainerDependencyArgs(
        @Nullable Output<String> condition,
        @Nullable Output<String> containerName) {
        this.condition = condition;
        this.containerName = containerName;
    }

    private TaskDefinitionContainerDependencyArgs() {
        this.condition = Output.empty();
        this.containerName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskDefinitionContainerDependencyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> condition;
        private @Nullable Output<String> containerName;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskDefinitionContainerDependencyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
    	      this.containerName = defaults.containerName;
        }

        public Builder condition(@Nullable Output<String> condition) {
            this.condition = condition;
            return this;
        }
        public Builder condition(@Nullable String condition) {
            this.condition = Output.ofNullable(condition);
            return this;
        }
        public Builder containerName(@Nullable Output<String> containerName) {
            this.containerName = containerName;
            return this;
        }
        public Builder containerName(@Nullable String containerName) {
            this.containerName = Output.ofNullable(containerName);
            return this;
        }        public TaskDefinitionContainerDependencyArgs build() {
            return new TaskDefinitionContainerDependencyArgs(condition, containerName);
        }
    }
}
