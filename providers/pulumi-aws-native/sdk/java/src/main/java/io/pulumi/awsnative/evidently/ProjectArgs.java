// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.evidently;

import io.pulumi.awsnative.evidently.inputs.ProjectDataDeliveryObjectArgs;
import io.pulumi.awsnative.evidently.inputs.ProjectTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProjectArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProjectArgs Empty = new ProjectArgs();

    @Import(name="dataDelivery")
      private final @Nullable Output<ProjectDataDeliveryObjectArgs> dataDelivery;

    public Output<ProjectDataDeliveryObjectArgs> getDataDelivery() {
        return this.dataDelivery == null ? Output.empty() : this.dataDelivery;
    }

    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<ProjectTagArgs>> tags;

    public Output<List<ProjectTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ProjectArgs(
        @Nullable Output<ProjectDataDeliveryObjectArgs> dataDelivery,
        @Nullable Output<String> description,
        @Nullable Output<String> name,
        @Nullable Output<List<ProjectTagArgs>> tags) {
        this.dataDelivery = dataDelivery;
        this.description = description;
        this.name = name;
        this.tags = tags;
    }

    private ProjectArgs() {
        this.dataDelivery = Output.empty();
        this.description = Output.empty();
        this.name = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ProjectDataDeliveryObjectArgs> dataDelivery;
        private @Nullable Output<String> description;
        private @Nullable Output<String> name;
        private @Nullable Output<List<ProjectTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ProjectArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataDelivery = defaults.dataDelivery;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder dataDelivery(@Nullable Output<ProjectDataDeliveryObjectArgs> dataDelivery) {
            this.dataDelivery = dataDelivery;
            return this;
        }
        public Builder dataDelivery(@Nullable ProjectDataDeliveryObjectArgs dataDelivery) {
            this.dataDelivery = Output.ofNullable(dataDelivery);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder tags(@Nullable Output<List<ProjectTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<ProjectTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tags(ProjectTagArgs... tags) {
            return tags(List.of(tags));
        }        public ProjectArgs build() {
            return new ProjectArgs(dataDelivery, description, name, tags);
        }
    }
}
