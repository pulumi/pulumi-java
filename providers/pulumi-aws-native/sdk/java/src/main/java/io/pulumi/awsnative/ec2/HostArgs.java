// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ec2;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HostArgs extends io.pulumi.resources.ResourceArgs {

    public static final HostArgs Empty = new HostArgs();

    /**
     * Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID.
     * 
     */
    @InputImport(name="autoPlacement")
      private final @Nullable Input<String> autoPlacement;

    public Input<String> getAutoPlacement() {
        return this.autoPlacement == null ? Input.empty() : this.autoPlacement;
    }

    /**
     * The Availability Zone in which to allocate the Dedicated Host.
     * 
     */
    @InputImport(name="availabilityZone", required=true)
      private final Input<String> availabilityZone;

    public Input<String> getAvailabilityZone() {
        return this.availabilityZone;
    }

    /**
     * Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default.
     * 
     */
    @InputImport(name="hostRecovery")
      private final @Nullable Input<String> hostRecovery;

    public Input<String> getHostRecovery() {
        return this.hostRecovery == null ? Input.empty() : this.hostRecovery;
    }

    /**
     * Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.
     * 
     */
    @InputImport(name="instanceType", required=true)
      private final Input<String> instanceType;

    public Input<String> getInstanceType() {
        return this.instanceType;
    }

    public HostArgs(
        @Nullable Input<String> autoPlacement,
        Input<String> availabilityZone,
        @Nullable Input<String> hostRecovery,
        Input<String> instanceType) {
        this.autoPlacement = autoPlacement;
        this.availabilityZone = Objects.requireNonNull(availabilityZone, "expected parameter 'availabilityZone' to be non-null");
        this.hostRecovery = hostRecovery;
        this.instanceType = Objects.requireNonNull(instanceType, "expected parameter 'instanceType' to be non-null");
    }

    private HostArgs() {
        this.autoPlacement = Input.empty();
        this.availabilityZone = Input.empty();
        this.hostRecovery = Input.empty();
        this.instanceType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HostArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> autoPlacement;
        private Input<String> availabilityZone;
        private @Nullable Input<String> hostRecovery;
        private Input<String> instanceType;

        public Builder() {
    	      // Empty
        }

        public Builder(HostArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoPlacement = defaults.autoPlacement;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.hostRecovery = defaults.hostRecovery;
    	      this.instanceType = defaults.instanceType;
        }

        public Builder autoPlacement(@Nullable Input<String> autoPlacement) {
            this.autoPlacement = autoPlacement;
            return this;
        }

        public Builder autoPlacement(@Nullable String autoPlacement) {
            this.autoPlacement = Input.ofNullable(autoPlacement);
            return this;
        }

        public Builder availabilityZone(Input<String> availabilityZone) {
            this.availabilityZone = Objects.requireNonNull(availabilityZone);
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            this.availabilityZone = Input.of(Objects.requireNonNull(availabilityZone));
            return this;
        }

        public Builder hostRecovery(@Nullable Input<String> hostRecovery) {
            this.hostRecovery = hostRecovery;
            return this;
        }

        public Builder hostRecovery(@Nullable String hostRecovery) {
            this.hostRecovery = Input.ofNullable(hostRecovery);
            return this;
        }

        public Builder instanceType(Input<String> instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }

        public Builder instanceType(String instanceType) {
            this.instanceType = Input.of(Objects.requireNonNull(instanceType));
            return this;
        }
        public HostArgs build() {
            return new HostArgs(autoPlacement, availabilityZone, hostRecovery, instanceType);
        }
    }
}
