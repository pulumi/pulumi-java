// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.autoscaling;

import io.pulumi.awsnative.autoscaling.inputs.WarmPoolInstanceReusePolicyArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WarmPoolArgs extends io.pulumi.resources.ResourceArgs {

    public static final WarmPoolArgs Empty = new WarmPoolArgs();

    @InputImport(name="autoScalingGroupName", required=true)
      private final Input<String> autoScalingGroupName;

    public Input<String> getAutoScalingGroupName() {
        return this.autoScalingGroupName;
    }

    @InputImport(name="instanceReusePolicy")
      private final @Nullable Input<WarmPoolInstanceReusePolicyArgs> instanceReusePolicy;

    public Input<WarmPoolInstanceReusePolicyArgs> getInstanceReusePolicy() {
        return this.instanceReusePolicy == null ? Input.empty() : this.instanceReusePolicy;
    }

    @InputImport(name="maxGroupPreparedCapacity")
      private final @Nullable Input<Integer> maxGroupPreparedCapacity;

    public Input<Integer> getMaxGroupPreparedCapacity() {
        return this.maxGroupPreparedCapacity == null ? Input.empty() : this.maxGroupPreparedCapacity;
    }

    @InputImport(name="minSize")
      private final @Nullable Input<Integer> minSize;

    public Input<Integer> getMinSize() {
        return this.minSize == null ? Input.empty() : this.minSize;
    }

    @InputImport(name="poolState")
      private final @Nullable Input<String> poolState;

    public Input<String> getPoolState() {
        return this.poolState == null ? Input.empty() : this.poolState;
    }

    public WarmPoolArgs(
        Input<String> autoScalingGroupName,
        @Nullable Input<WarmPoolInstanceReusePolicyArgs> instanceReusePolicy,
        @Nullable Input<Integer> maxGroupPreparedCapacity,
        @Nullable Input<Integer> minSize,
        @Nullable Input<String> poolState) {
        this.autoScalingGroupName = Objects.requireNonNull(autoScalingGroupName, "expected parameter 'autoScalingGroupName' to be non-null");
        this.instanceReusePolicy = instanceReusePolicy;
        this.maxGroupPreparedCapacity = maxGroupPreparedCapacity;
        this.minSize = minSize;
        this.poolState = poolState;
    }

    private WarmPoolArgs() {
        this.autoScalingGroupName = Input.empty();
        this.instanceReusePolicy = Input.empty();
        this.maxGroupPreparedCapacity = Input.empty();
        this.minSize = Input.empty();
        this.poolState = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WarmPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> autoScalingGroupName;
        private @Nullable Input<WarmPoolInstanceReusePolicyArgs> instanceReusePolicy;
        private @Nullable Input<Integer> maxGroupPreparedCapacity;
        private @Nullable Input<Integer> minSize;
        private @Nullable Input<String> poolState;

        public Builder() {
    	      // Empty
        }

        public Builder(WarmPoolArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoScalingGroupName = defaults.autoScalingGroupName;
    	      this.instanceReusePolicy = defaults.instanceReusePolicy;
    	      this.maxGroupPreparedCapacity = defaults.maxGroupPreparedCapacity;
    	      this.minSize = defaults.minSize;
    	      this.poolState = defaults.poolState;
        }

        public Builder setAutoScalingGroupName(Input<String> autoScalingGroupName) {
            this.autoScalingGroupName = Objects.requireNonNull(autoScalingGroupName);
            return this;
        }

        public Builder setAutoScalingGroupName(String autoScalingGroupName) {
            this.autoScalingGroupName = Input.of(Objects.requireNonNull(autoScalingGroupName));
            return this;
        }

        public Builder setInstanceReusePolicy(@Nullable Input<WarmPoolInstanceReusePolicyArgs> instanceReusePolicy) {
            this.instanceReusePolicy = instanceReusePolicy;
            return this;
        }

        public Builder setInstanceReusePolicy(@Nullable WarmPoolInstanceReusePolicyArgs instanceReusePolicy) {
            this.instanceReusePolicy = Input.ofNullable(instanceReusePolicy);
            return this;
        }

        public Builder setMaxGroupPreparedCapacity(@Nullable Input<Integer> maxGroupPreparedCapacity) {
            this.maxGroupPreparedCapacity = maxGroupPreparedCapacity;
            return this;
        }

        public Builder setMaxGroupPreparedCapacity(@Nullable Integer maxGroupPreparedCapacity) {
            this.maxGroupPreparedCapacity = Input.ofNullable(maxGroupPreparedCapacity);
            return this;
        }

        public Builder setMinSize(@Nullable Input<Integer> minSize) {
            this.minSize = minSize;
            return this;
        }

        public Builder setMinSize(@Nullable Integer minSize) {
            this.minSize = Input.ofNullable(minSize);
            return this;
        }

        public Builder setPoolState(@Nullable Input<String> poolState) {
            this.poolState = poolState;
            return this;
        }

        public Builder setPoolState(@Nullable String poolState) {
            this.poolState = Input.ofNullable(poolState);
            return this;
        }
        public WarmPoolArgs build() {
            return new WarmPoolArgs(autoScalingGroupName, instanceReusePolicy, maxGroupPreparedCapacity, minSize, poolState);
        }
    }
}
