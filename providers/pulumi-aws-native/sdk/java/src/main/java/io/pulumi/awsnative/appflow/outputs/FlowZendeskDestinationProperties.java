// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.appflow.outputs;

import io.pulumi.awsnative.appflow.enums.FlowWriteOperationType;
import io.pulumi.awsnative.appflow.outputs.FlowErrorHandlingConfig;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowZendeskDestinationProperties {
    private final @Nullable FlowErrorHandlingConfig errorHandlingConfig;
    /**
     * List of fields used as ID when performing a write operation.
     * 
     */
    private final @Nullable List<String> idFieldNames;
    private final String object;
    private final @Nullable FlowWriteOperationType writeOperationType;

    @CustomType.Constructor
    private FlowZendeskDestinationProperties(
        @CustomType.Parameter("errorHandlingConfig") @Nullable FlowErrorHandlingConfig errorHandlingConfig,
        @CustomType.Parameter("idFieldNames") @Nullable List<String> idFieldNames,
        @CustomType.Parameter("object") String object,
        @CustomType.Parameter("writeOperationType") @Nullable FlowWriteOperationType writeOperationType) {
        this.errorHandlingConfig = errorHandlingConfig;
        this.idFieldNames = idFieldNames;
        this.object = object;
        this.writeOperationType = writeOperationType;
    }

    public Optional<FlowErrorHandlingConfig> getErrorHandlingConfig() {
        return Optional.ofNullable(this.errorHandlingConfig);
    }
    /**
     * List of fields used as ID when performing a write operation.
     * 
    */
    public List<String> getIdFieldNames() {
        return this.idFieldNames == null ? List.of() : this.idFieldNames;
    }
    public String getObject() {
        return this.object;
    }
    public Optional<FlowWriteOperationType> getWriteOperationType() {
        return Optional.ofNullable(this.writeOperationType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowZendeskDestinationProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable FlowErrorHandlingConfig errorHandlingConfig;
        private @Nullable List<String> idFieldNames;
        private String object;
        private @Nullable FlowWriteOperationType writeOperationType;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowZendeskDestinationProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorHandlingConfig = defaults.errorHandlingConfig;
    	      this.idFieldNames = defaults.idFieldNames;
    	      this.object = defaults.object;
    	      this.writeOperationType = defaults.writeOperationType;
        }

        public Builder errorHandlingConfig(@Nullable FlowErrorHandlingConfig errorHandlingConfig) {
            this.errorHandlingConfig = errorHandlingConfig;
            return this;
        }

        public Builder idFieldNames(@Nullable List<String> idFieldNames) {
            this.idFieldNames = idFieldNames;
            return this;
        }

        public Builder object(String object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }

        public Builder writeOperationType(@Nullable FlowWriteOperationType writeOperationType) {
            this.writeOperationType = writeOperationType;
            return this;
        }
        public FlowZendeskDestinationProperties build() {
            return new FlowZendeskDestinationProperties(errorHandlingConfig, idFieldNames, object, writeOperationType);
        }
    }
}
