// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.connect.inputs;

import io.pulumi.awsnative.connect.enums.QuickConnectType;
import io.pulumi.awsnative.connect.inputs.QuickConnectPhoneNumberQuickConnectConfigArgs;
import io.pulumi.awsnative.connect.inputs.QuickConnectQueueQuickConnectConfigArgs;
import io.pulumi.awsnative.connect.inputs.QuickConnectUserQuickConnectConfigArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Configuration settings for the quick connect.
 * 
 */
public final class QuickConnectConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final QuickConnectConfigArgs Empty = new QuickConnectConfigArgs();

    @Import(name="phoneConfig")
      private final @Nullable Output<QuickConnectPhoneNumberQuickConnectConfigArgs> phoneConfig;

    public Output<QuickConnectPhoneNumberQuickConnectConfigArgs> phoneConfig() {
        return this.phoneConfig == null ? Codegen.empty() : this.phoneConfig;
    }

    @Import(name="queueConfig")
      private final @Nullable Output<QuickConnectQueueQuickConnectConfigArgs> queueConfig;

    public Output<QuickConnectQueueQuickConnectConfigArgs> queueConfig() {
        return this.queueConfig == null ? Codegen.empty() : this.queueConfig;
    }

    @Import(name="quickConnectType", required=true)
      private final Output<QuickConnectType> quickConnectType;

    public Output<QuickConnectType> quickConnectType() {
        return this.quickConnectType;
    }

    @Import(name="userConfig")
      private final @Nullable Output<QuickConnectUserQuickConnectConfigArgs> userConfig;

    public Output<QuickConnectUserQuickConnectConfigArgs> userConfig() {
        return this.userConfig == null ? Codegen.empty() : this.userConfig;
    }

    public QuickConnectConfigArgs(
        @Nullable Output<QuickConnectPhoneNumberQuickConnectConfigArgs> phoneConfig,
        @Nullable Output<QuickConnectQueueQuickConnectConfigArgs> queueConfig,
        Output<QuickConnectType> quickConnectType,
        @Nullable Output<QuickConnectUserQuickConnectConfigArgs> userConfig) {
        this.phoneConfig = phoneConfig;
        this.queueConfig = queueConfig;
        this.quickConnectType = Objects.requireNonNull(quickConnectType, "expected parameter 'quickConnectType' to be non-null");
        this.userConfig = userConfig;
    }

    private QuickConnectConfigArgs() {
        this.phoneConfig = Codegen.empty();
        this.queueConfig = Codegen.empty();
        this.quickConnectType = Codegen.empty();
        this.userConfig = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QuickConnectConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<QuickConnectPhoneNumberQuickConnectConfigArgs> phoneConfig;
        private @Nullable Output<QuickConnectQueueQuickConnectConfigArgs> queueConfig;
        private Output<QuickConnectType> quickConnectType;
        private @Nullable Output<QuickConnectUserQuickConnectConfigArgs> userConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(QuickConnectConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.phoneConfig = defaults.phoneConfig;
    	      this.queueConfig = defaults.queueConfig;
    	      this.quickConnectType = defaults.quickConnectType;
    	      this.userConfig = defaults.userConfig;
        }

        public Builder phoneConfig(@Nullable Output<QuickConnectPhoneNumberQuickConnectConfigArgs> phoneConfig) {
            this.phoneConfig = phoneConfig;
            return this;
        }
        public Builder phoneConfig(@Nullable QuickConnectPhoneNumberQuickConnectConfigArgs phoneConfig) {
            this.phoneConfig = Codegen.ofNullable(phoneConfig);
            return this;
        }
        public Builder queueConfig(@Nullable Output<QuickConnectQueueQuickConnectConfigArgs> queueConfig) {
            this.queueConfig = queueConfig;
            return this;
        }
        public Builder queueConfig(@Nullable QuickConnectQueueQuickConnectConfigArgs queueConfig) {
            this.queueConfig = Codegen.ofNullable(queueConfig);
            return this;
        }
        public Builder quickConnectType(Output<QuickConnectType> quickConnectType) {
            this.quickConnectType = Objects.requireNonNull(quickConnectType);
            return this;
        }
        public Builder quickConnectType(QuickConnectType quickConnectType) {
            this.quickConnectType = Output.of(Objects.requireNonNull(quickConnectType));
            return this;
        }
        public Builder userConfig(@Nullable Output<QuickConnectUserQuickConnectConfigArgs> userConfig) {
            this.userConfig = userConfig;
            return this;
        }
        public Builder userConfig(@Nullable QuickConnectUserQuickConnectConfigArgs userConfig) {
            this.userConfig = Codegen.ofNullable(userConfig);
            return this;
        }        public QuickConnectConfigArgs build() {
            return new QuickConnectConfigArgs(phoneConfig, queueConfig, quickConnectType, userConfig);
        }
    }
}
