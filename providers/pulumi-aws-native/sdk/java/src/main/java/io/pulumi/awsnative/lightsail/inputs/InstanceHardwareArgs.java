// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lightsail.inputs;

import io.pulumi.awsnative.lightsail.inputs.InstanceDiskArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Hardware of the Instance.
 * 
 */
public final class InstanceHardwareArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceHardwareArgs Empty = new InstanceHardwareArgs();

    /**
     * CPU count of the Instance.
     * 
     */
    @InputImport(name="cpuCount")
      private final @Nullable Output<Integer> cpuCount;

    public Output<Integer> getCpuCount() {
        return this.cpuCount == null ? Output.empty() : this.cpuCount;
    }

    /**
     * Disks attached to the Instance.
     * 
     */
    @InputImport(name="disks")
      private final @Nullable Output<List<InstanceDiskArgs>> disks;

    public Output<List<InstanceDiskArgs>> getDisks() {
        return this.disks == null ? Output.empty() : this.disks;
    }

    /**
     * RAM Size of the Instance.
     * 
     */
    @InputImport(name="ramSizeInGb")
      private final @Nullable Output<Integer> ramSizeInGb;

    public Output<Integer> getRamSizeInGb() {
        return this.ramSizeInGb == null ? Output.empty() : this.ramSizeInGb;
    }

    public InstanceHardwareArgs(
        @Nullable Output<Integer> cpuCount,
        @Nullable Output<List<InstanceDiskArgs>> disks,
        @Nullable Output<Integer> ramSizeInGb) {
        this.cpuCount = cpuCount;
        this.disks = disks;
        this.ramSizeInGb = ramSizeInGb;
    }

    private InstanceHardwareArgs() {
        this.cpuCount = Output.empty();
        this.disks = Output.empty();
        this.ramSizeInGb = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceHardwareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> cpuCount;
        private @Nullable Output<List<InstanceDiskArgs>> disks;
        private @Nullable Output<Integer> ramSizeInGb;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceHardwareArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuCount = defaults.cpuCount;
    	      this.disks = defaults.disks;
    	      this.ramSizeInGb = defaults.ramSizeInGb;
        }

        public Builder cpuCount(@Nullable Output<Integer> cpuCount) {
            this.cpuCount = cpuCount;
            return this;
        }

        public Builder cpuCount(@Nullable Integer cpuCount) {
            this.cpuCount = Output.ofNullable(cpuCount);
            return this;
        }

        public Builder disks(@Nullable Output<List<InstanceDiskArgs>> disks) {
            this.disks = disks;
            return this;
        }

        public Builder disks(@Nullable List<InstanceDiskArgs> disks) {
            this.disks = Output.ofNullable(disks);
            return this;
        }

        public Builder ramSizeInGb(@Nullable Output<Integer> ramSizeInGb) {
            this.ramSizeInGb = ramSizeInGb;
            return this;
        }

        public Builder ramSizeInGb(@Nullable Integer ramSizeInGb) {
            this.ramSizeInGb = Output.ofNullable(ramSizeInGb);
            return this;
        }
        public InstanceHardwareArgs build() {
            return new InstanceHardwareArgs(cpuCount, disks, ramSizeInGb);
        }
    }
}
