// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.groundstation.inputs;

import io.pulumi.awsnative.groundstation.enums.ConfigEirpUnits;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigEirp extends io.pulumi.resources.InvokeArgs {

    public static final ConfigEirp Empty = new ConfigEirp();

    @InputImport(name="units")
    private final @Nullable ConfigEirpUnits units;

    public Optional<ConfigEirpUnits> getUnits() {
        return this.units == null ? Optional.empty() : Optional.ofNullable(this.units);
    }

    @InputImport(name="value")
    private final @Nullable Double value;

    public Optional<Double> getValue() {
        return this.value == null ? Optional.empty() : Optional.ofNullable(this.value);
    }

    public ConfigEirp(
        @Nullable ConfigEirpUnits units,
        @Nullable Double value) {
        this.units = units;
        this.value = value;
    }

    private ConfigEirp() {
        this.units = null;
        this.value = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigEirp defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ConfigEirpUnits units;
        private @Nullable Double value;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigEirp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.units = defaults.units;
    	      this.value = defaults.value;
        }

        public Builder setUnits(@Nullable ConfigEirpUnits units) {
            this.units = units;
            return this;
        }

        public Builder setValue(@Nullable Double value) {
            this.value = value;
            return this;
        }

        public ConfigEirp build() {
            return new ConfigEirp(units, value);
        }
    }
}
