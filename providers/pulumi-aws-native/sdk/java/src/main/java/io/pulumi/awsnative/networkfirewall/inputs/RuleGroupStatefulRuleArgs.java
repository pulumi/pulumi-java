// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.networkfirewall.inputs;

import io.pulumi.awsnative.networkfirewall.enums.RuleGroupStatefulRuleAction;
import io.pulumi.awsnative.networkfirewall.inputs.RuleGroupHeaderArgs;
import io.pulumi.awsnative.networkfirewall.inputs.RuleGroupRuleOptionArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;


public final class RuleGroupStatefulRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleGroupStatefulRuleArgs Empty = new RuleGroupStatefulRuleArgs();

    @InputImport(name="action", required=true)
      private final Output<RuleGroupStatefulRuleAction> action;

    public Output<RuleGroupStatefulRuleAction> getAction() {
        return this.action;
    }

    @InputImport(name="header", required=true)
      private final Output<RuleGroupHeaderArgs> header;

    public Output<RuleGroupHeaderArgs> getHeader() {
        return this.header;
    }

    @InputImport(name="ruleOptions", required=true)
      private final Output<List<RuleGroupRuleOptionArgs>> ruleOptions;

    public Output<List<RuleGroupRuleOptionArgs>> getRuleOptions() {
        return this.ruleOptions;
    }

    public RuleGroupStatefulRuleArgs(
        Output<RuleGroupStatefulRuleAction> action,
        Output<RuleGroupHeaderArgs> header,
        Output<List<RuleGroupRuleOptionArgs>> ruleOptions) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
        this.header = Objects.requireNonNull(header, "expected parameter 'header' to be non-null");
        this.ruleOptions = Objects.requireNonNull(ruleOptions, "expected parameter 'ruleOptions' to be non-null");
    }

    private RuleGroupStatefulRuleArgs() {
        this.action = Output.empty();
        this.header = Output.empty();
        this.ruleOptions = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleGroupStatefulRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<RuleGroupStatefulRuleAction> action;
        private Output<RuleGroupHeaderArgs> header;
        private Output<List<RuleGroupRuleOptionArgs>> ruleOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleGroupStatefulRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.header = defaults.header;
    	      this.ruleOptions = defaults.ruleOptions;
        }

        public Builder action(Output<RuleGroupStatefulRuleAction> action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder action(RuleGroupStatefulRuleAction action) {
            this.action = Output.of(Objects.requireNonNull(action));
            return this;
        }

        public Builder header(Output<RuleGroupHeaderArgs> header) {
            this.header = Objects.requireNonNull(header);
            return this;
        }

        public Builder header(RuleGroupHeaderArgs header) {
            this.header = Output.of(Objects.requireNonNull(header));
            return this;
        }

        public Builder ruleOptions(Output<List<RuleGroupRuleOptionArgs>> ruleOptions) {
            this.ruleOptions = Objects.requireNonNull(ruleOptions);
            return this;
        }

        public Builder ruleOptions(List<RuleGroupRuleOptionArgs> ruleOptions) {
            this.ruleOptions = Output.of(Objects.requireNonNull(ruleOptions));
            return this;
        }
        public RuleGroupStatefulRuleArgs build() {
            return new RuleGroupStatefulRuleArgs(action, header, ruleOptions);
        }
    }
}
