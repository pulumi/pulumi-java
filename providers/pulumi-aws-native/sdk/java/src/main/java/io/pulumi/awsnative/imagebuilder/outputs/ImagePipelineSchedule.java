// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.imagebuilder.outputs;

import io.pulumi.awsnative.imagebuilder.enums.ImagePipelineSchedulePipelineExecutionStartCondition;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ImagePipelineSchedule {
    /**
     * The condition configures when the pipeline should trigger a new image build.
     * 
     */
    private final @Nullable ImagePipelineSchedulePipelineExecutionStartCondition pipelineExecutionStartCondition;
    /**
     * The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
     * 
     */
    private final @Nullable String scheduleExpression;

    @OutputCustomType.Constructor({"pipelineExecutionStartCondition","scheduleExpression"})
    private ImagePipelineSchedule(
        @Nullable ImagePipelineSchedulePipelineExecutionStartCondition pipelineExecutionStartCondition,
        @Nullable String scheduleExpression) {
        this.pipelineExecutionStartCondition = pipelineExecutionStartCondition;
        this.scheduleExpression = scheduleExpression;
    }

    /**
     * The condition configures when the pipeline should trigger a new image build.
     * 
     */
    public Optional<ImagePipelineSchedulePipelineExecutionStartCondition> getPipelineExecutionStartCondition() {
        return Optional.ofNullable(this.pipelineExecutionStartCondition);
    }
    /**
     * The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
     * 
     */
    public Optional<String> getScheduleExpression() {
        return Optional.ofNullable(this.scheduleExpression);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImagePipelineSchedule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ImagePipelineSchedulePipelineExecutionStartCondition pipelineExecutionStartCondition;
        private @Nullable String scheduleExpression;

        public Builder() {
    	      // Empty
        }

        public Builder(ImagePipelineSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pipelineExecutionStartCondition = defaults.pipelineExecutionStartCondition;
    	      this.scheduleExpression = defaults.scheduleExpression;
        }

        public Builder setPipelineExecutionStartCondition(@Nullable ImagePipelineSchedulePipelineExecutionStartCondition pipelineExecutionStartCondition) {
            this.pipelineExecutionStartCondition = pipelineExecutionStartCondition;
            return this;
        }

        public Builder setScheduleExpression(@Nullable String scheduleExpression) {
            this.scheduleExpression = scheduleExpression;
            return this;
        }
        public ImagePipelineSchedule build() {
            return new ImagePipelineSchedule(pipelineExecutionStartCondition, scheduleExpression);
        }
    }
}
