// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.inputs.DatasetFilterValueArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DatasetFilterExpressionArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetFilterExpressionArgs Empty = new DatasetFilterExpressionArgs();

    /**
     * Filtering expression for a parameter
     * 
     */
    @Import(name="expression", required=true)
      private final Output<String> expression;

    public Output<String> expression() {
        return this.expression;
    }

    @Import(name="valuesMap", required=true)
      private final Output<List<DatasetFilterValueArgs>> valuesMap;

    public Output<List<DatasetFilterValueArgs>> valuesMap() {
        return this.valuesMap;
    }

    public DatasetFilterExpressionArgs(
        Output<String> expression,
        Output<List<DatasetFilterValueArgs>> valuesMap) {
        this.expression = Objects.requireNonNull(expression, "expected parameter 'expression' to be non-null");
        this.valuesMap = Objects.requireNonNull(valuesMap, "expected parameter 'valuesMap' to be non-null");
    }

    private DatasetFilterExpressionArgs() {
        this.expression = Codegen.empty();
        this.valuesMap = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetFilterExpressionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> expression;
        private Output<List<DatasetFilterValueArgs>> valuesMap;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetFilterExpressionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expression = defaults.expression;
    	      this.valuesMap = defaults.valuesMap;
        }

        public Builder expression(Output<String> expression) {
            this.expression = Objects.requireNonNull(expression);
            return this;
        }
        public Builder expression(String expression) {
            this.expression = Output.of(Objects.requireNonNull(expression));
            return this;
        }
        public Builder valuesMap(Output<List<DatasetFilterValueArgs>> valuesMap) {
            this.valuesMap = Objects.requireNonNull(valuesMap);
            return this;
        }
        public Builder valuesMap(List<DatasetFilterValueArgs> valuesMap) {
            this.valuesMap = Output.of(Objects.requireNonNull(valuesMap));
            return this;
        }
        public Builder valuesMap(DatasetFilterValueArgs... valuesMap) {
            return valuesMap(List.of(valuesMap));
        }        public DatasetFilterExpressionArgs build() {
            return new DatasetFilterExpressionArgs(expression, valuesMap);
        }
    }
}
