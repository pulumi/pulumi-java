// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.aps;

import io.pulumi.awsnative.aps.inputs.RuleGroupsNamespaceTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RuleGroupsNamespaceArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleGroupsNamespaceArgs Empty = new RuleGroupsNamespaceArgs();

    /**
     * The RuleGroupsNamespace data.
     * 
     */
    @InputImport(name="data", required=true)
      private final Output<String> data;

    public Output<String> getData() {
        return this.data;
    }

    /**
     * The RuleGroupsNamespace name.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<List<RuleGroupsNamespaceTagArgs>> tags;

    public Output<List<RuleGroupsNamespaceTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * Required to identify a specific APS Workspace associated with this RuleGroupsNamespace.
     * 
     */
    @InputImport(name="workspace", required=true)
      private final Output<String> workspace;

    public Output<String> getWorkspace() {
        return this.workspace;
    }

    public RuleGroupsNamespaceArgs(
        Output<String> data,
        @Nullable Output<String> name,
        @Nullable Output<List<RuleGroupsNamespaceTagArgs>> tags,
        Output<String> workspace) {
        this.data = Objects.requireNonNull(data, "expected parameter 'data' to be non-null");
        this.name = name;
        this.tags = tags;
        this.workspace = Objects.requireNonNull(workspace, "expected parameter 'workspace' to be non-null");
    }

    private RuleGroupsNamespaceArgs() {
        this.data = Output.empty();
        this.name = Output.empty();
        this.tags = Output.empty();
        this.workspace = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleGroupsNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> data;
        private @Nullable Output<String> name;
        private @Nullable Output<List<RuleGroupsNamespaceTagArgs>> tags;
        private Output<String> workspace;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleGroupsNamespaceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.data = defaults.data;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.workspace = defaults.workspace;
        }

        public Builder data(Output<String> data) {
            this.data = Objects.requireNonNull(data);
            return this;
        }

        public Builder data(String data) {
            this.data = Output.of(Objects.requireNonNull(data));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder tags(@Nullable Output<List<RuleGroupsNamespaceTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<RuleGroupsNamespaceTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder workspace(Output<String> workspace) {
            this.workspace = Objects.requireNonNull(workspace);
            return this;
        }

        public Builder workspace(String workspace) {
            this.workspace = Output.of(Objects.requireNonNull(workspace));
            return this;
        }
        public RuleGroupsNamespaceArgs build() {
            return new RuleGroupsNamespaceArgs(data, name, tags, workspace);
        }
    }
}
