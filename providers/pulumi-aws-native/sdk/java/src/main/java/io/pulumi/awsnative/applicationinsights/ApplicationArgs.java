// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.applicationinsights;

import io.pulumi.awsnative.applicationinsights.inputs.ApplicationComponentMonitoringSettingArgs;
import io.pulumi.awsnative.applicationinsights.inputs.ApplicationCustomComponentArgs;
import io.pulumi.awsnative.applicationinsights.inputs.ApplicationLogPatternSetArgs;
import io.pulumi.awsnative.applicationinsights.inputs.ApplicationTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApplicationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApplicationArgs Empty = new ApplicationArgs();

    /**
     * If set to true, application will be configured with recommended monitoring configuration.
     * 
     */
    @Import(name="autoConfigurationEnabled")
      private final @Nullable Output<Boolean> autoConfigurationEnabled;

    public Output<Boolean> autoConfigurationEnabled() {
        return this.autoConfigurationEnabled == null ? Codegen.empty() : this.autoConfigurationEnabled;
    }

    /**
     * Indicates whether Application Insights can listen to CloudWatch events for the application resources.
     * 
     */
    @Import(name="cWEMonitorEnabled")
      private final @Nullable Output<Boolean> cWEMonitorEnabled;

    public Output<Boolean> cWEMonitorEnabled() {
        return this.cWEMonitorEnabled == null ? Codegen.empty() : this.cWEMonitorEnabled;
    }

    /**
     * The monitoring settings of the components.
     * 
     */
    @Import(name="componentMonitoringSettings")
      private final @Nullable Output<List<ApplicationComponentMonitoringSettingArgs>> componentMonitoringSettings;

    public Output<List<ApplicationComponentMonitoringSettingArgs>> componentMonitoringSettings() {
        return this.componentMonitoringSettings == null ? Codegen.empty() : this.componentMonitoringSettings;
    }

    /**
     * The custom grouped components.
     * 
     */
    @Import(name="customComponents")
      private final @Nullable Output<List<ApplicationCustomComponentArgs>> customComponents;

    public Output<List<ApplicationCustomComponentArgs>> customComponents() {
        return this.customComponents == null ? Codegen.empty() : this.customComponents;
    }

    /**
     * The log pattern sets.
     * 
     */
    @Import(name="logPatternSets")
      private final @Nullable Output<List<ApplicationLogPatternSetArgs>> logPatternSets;

    public Output<List<ApplicationLogPatternSetArgs>> logPatternSets() {
        return this.logPatternSets == null ? Codegen.empty() : this.logPatternSets;
    }

    /**
     * When set to true, creates opsItems for any problems detected on an application.
     * 
     */
    @Import(name="opsCenterEnabled")
      private final @Nullable Output<Boolean> opsCenterEnabled;

    public Output<Boolean> opsCenterEnabled() {
        return this.opsCenterEnabled == null ? Codegen.empty() : this.opsCenterEnabled;
    }

    /**
     * The SNS topic provided to Application Insights that is associated to the created opsItem.
     * 
     */
    @Import(name="opsItemSNSTopicArn")
      private final @Nullable Output<String> opsItemSNSTopicArn;

    public Output<String> opsItemSNSTopicArn() {
        return this.opsItemSNSTopicArn == null ? Codegen.empty() : this.opsItemSNSTopicArn;
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
      private final Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The tags of Application Insights application.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<ApplicationTagArgs>> tags;

    public Output<List<ApplicationTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public ApplicationArgs(
        @Nullable Output<Boolean> autoConfigurationEnabled,
        @Nullable Output<Boolean> cWEMonitorEnabled,
        @Nullable Output<List<ApplicationComponentMonitoringSettingArgs>> componentMonitoringSettings,
        @Nullable Output<List<ApplicationCustomComponentArgs>> customComponents,
        @Nullable Output<List<ApplicationLogPatternSetArgs>> logPatternSets,
        @Nullable Output<Boolean> opsCenterEnabled,
        @Nullable Output<String> opsItemSNSTopicArn,
        Output<String> resourceGroupName,
        @Nullable Output<List<ApplicationTagArgs>> tags) {
        this.autoConfigurationEnabled = autoConfigurationEnabled;
        this.cWEMonitorEnabled = cWEMonitorEnabled;
        this.componentMonitoringSettings = componentMonitoringSettings;
        this.customComponents = customComponents;
        this.logPatternSets = logPatternSets;
        this.opsCenterEnabled = opsCenterEnabled;
        this.opsItemSNSTopicArn = opsItemSNSTopicArn;
        this.resourceGroupName = Objects.requireNonNull(resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
        this.tags = tags;
    }

    private ApplicationArgs() {
        this.autoConfigurationEnabled = Codegen.empty();
        this.cWEMonitorEnabled = Codegen.empty();
        this.componentMonitoringSettings = Codegen.empty();
        this.customComponents = Codegen.empty();
        this.logPatternSets = Codegen.empty();
        this.opsCenterEnabled = Codegen.empty();
        this.opsItemSNSTopicArn = Codegen.empty();
        this.resourceGroupName = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> autoConfigurationEnabled;
        private @Nullable Output<Boolean> cWEMonitorEnabled;
        private @Nullable Output<List<ApplicationComponentMonitoringSettingArgs>> componentMonitoringSettings;
        private @Nullable Output<List<ApplicationCustomComponentArgs>> customComponents;
        private @Nullable Output<List<ApplicationLogPatternSetArgs>> logPatternSets;
        private @Nullable Output<Boolean> opsCenterEnabled;
        private @Nullable Output<String> opsItemSNSTopicArn;
        private Output<String> resourceGroupName;
        private @Nullable Output<List<ApplicationTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoConfigurationEnabled = defaults.autoConfigurationEnabled;
    	      this.cWEMonitorEnabled = defaults.cWEMonitorEnabled;
    	      this.componentMonitoringSettings = defaults.componentMonitoringSettings;
    	      this.customComponents = defaults.customComponents;
    	      this.logPatternSets = defaults.logPatternSets;
    	      this.opsCenterEnabled = defaults.opsCenterEnabled;
    	      this.opsItemSNSTopicArn = defaults.opsItemSNSTopicArn;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder autoConfigurationEnabled(@Nullable Output<Boolean> autoConfigurationEnabled) {
            this.autoConfigurationEnabled = autoConfigurationEnabled;
            return this;
        }
        public Builder autoConfigurationEnabled(@Nullable Boolean autoConfigurationEnabled) {
            this.autoConfigurationEnabled = Codegen.ofNullable(autoConfigurationEnabled);
            return this;
        }
        public Builder cWEMonitorEnabled(@Nullable Output<Boolean> cWEMonitorEnabled) {
            this.cWEMonitorEnabled = cWEMonitorEnabled;
            return this;
        }
        public Builder cWEMonitorEnabled(@Nullable Boolean cWEMonitorEnabled) {
            this.cWEMonitorEnabled = Codegen.ofNullable(cWEMonitorEnabled);
            return this;
        }
        public Builder componentMonitoringSettings(@Nullable Output<List<ApplicationComponentMonitoringSettingArgs>> componentMonitoringSettings) {
            this.componentMonitoringSettings = componentMonitoringSettings;
            return this;
        }
        public Builder componentMonitoringSettings(@Nullable List<ApplicationComponentMonitoringSettingArgs> componentMonitoringSettings) {
            this.componentMonitoringSettings = Codegen.ofNullable(componentMonitoringSettings);
            return this;
        }
        public Builder componentMonitoringSettings(ApplicationComponentMonitoringSettingArgs... componentMonitoringSettings) {
            return componentMonitoringSettings(List.of(componentMonitoringSettings));
        }
        public Builder customComponents(@Nullable Output<List<ApplicationCustomComponentArgs>> customComponents) {
            this.customComponents = customComponents;
            return this;
        }
        public Builder customComponents(@Nullable List<ApplicationCustomComponentArgs> customComponents) {
            this.customComponents = Codegen.ofNullable(customComponents);
            return this;
        }
        public Builder customComponents(ApplicationCustomComponentArgs... customComponents) {
            return customComponents(List.of(customComponents));
        }
        public Builder logPatternSets(@Nullable Output<List<ApplicationLogPatternSetArgs>> logPatternSets) {
            this.logPatternSets = logPatternSets;
            return this;
        }
        public Builder logPatternSets(@Nullable List<ApplicationLogPatternSetArgs> logPatternSets) {
            this.logPatternSets = Codegen.ofNullable(logPatternSets);
            return this;
        }
        public Builder logPatternSets(ApplicationLogPatternSetArgs... logPatternSets) {
            return logPatternSets(List.of(logPatternSets));
        }
        public Builder opsCenterEnabled(@Nullable Output<Boolean> opsCenterEnabled) {
            this.opsCenterEnabled = opsCenterEnabled;
            return this;
        }
        public Builder opsCenterEnabled(@Nullable Boolean opsCenterEnabled) {
            this.opsCenterEnabled = Codegen.ofNullable(opsCenterEnabled);
            return this;
        }
        public Builder opsItemSNSTopicArn(@Nullable Output<String> opsItemSNSTopicArn) {
            this.opsItemSNSTopicArn = opsItemSNSTopicArn;
            return this;
        }
        public Builder opsItemSNSTopicArn(@Nullable String opsItemSNSTopicArn) {
            this.opsItemSNSTopicArn = Codegen.ofNullable(opsItemSNSTopicArn);
            return this;
        }
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Output.of(Objects.requireNonNull(resourceGroupName));
            return this;
        }
        public Builder tags(@Nullable Output<List<ApplicationTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<ApplicationTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(ApplicationTagArgs... tags) {
            return tags(List.of(tags));
        }        public ApplicationArgs build() {
            return new ApplicationArgs(autoConfigurationEnabled, cWEMonitorEnabled, componentMonitoringSettings, customComponents, logPatternSets, opsCenterEnabled, opsItemSNSTopicArn, resourceGroupName, tags);
        }
    }
}
