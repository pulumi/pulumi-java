// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudfront.inputs;

import io.pulumi.awsnative.cloudfront.inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CachePolicyConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final CachePolicyConfigArgs Empty = new CachePolicyConfigArgs();

    @Import(name="comment")
      private final @Nullable Output<String> comment;

    public Output<String> getComment() {
        return this.comment == null ? Output.empty() : this.comment;
    }

    @Import(name="defaultTTL", required=true)
      private final Output<Double> defaultTTL;

    public Output<Double> getDefaultTTL() {
        return this.defaultTTL;
    }

    @Import(name="maxTTL", required=true)
      private final Output<Double> maxTTL;

    public Output<Double> getMaxTTL() {
        return this.maxTTL;
    }

    @Import(name="minTTL", required=true)
      private final Output<Double> minTTL;

    public Output<Double> getMinTTL() {
        return this.minTTL;
    }

    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    @Import(name="parametersInCacheKeyAndForwardedToOrigin", required=true)
      private final Output<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin;

    public Output<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> getParametersInCacheKeyAndForwardedToOrigin() {
        return this.parametersInCacheKeyAndForwardedToOrigin;
    }

    public CachePolicyConfigArgs(
        @Nullable Output<String> comment,
        Output<Double> defaultTTL,
        Output<Double> maxTTL,
        Output<Double> minTTL,
        Output<String> name,
        Output<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin) {
        this.comment = comment;
        this.defaultTTL = Objects.requireNonNull(defaultTTL, "expected parameter 'defaultTTL' to be non-null");
        this.maxTTL = Objects.requireNonNull(maxTTL, "expected parameter 'maxTTL' to be non-null");
        this.minTTL = Objects.requireNonNull(minTTL, "expected parameter 'minTTL' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.parametersInCacheKeyAndForwardedToOrigin = Objects.requireNonNull(parametersInCacheKeyAndForwardedToOrigin, "expected parameter 'parametersInCacheKeyAndForwardedToOrigin' to be non-null");
    }

    private CachePolicyConfigArgs() {
        this.comment = Output.empty();
        this.defaultTTL = Output.empty();
        this.maxTTL = Output.empty();
        this.minTTL = Output.empty();
        this.name = Output.empty();
        this.parametersInCacheKeyAndForwardedToOrigin = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CachePolicyConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> comment;
        private Output<Double> defaultTTL;
        private Output<Double> maxTTL;
        private Output<Double> minTTL;
        private Output<String> name;
        private Output<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin;

        public Builder() {
    	      // Empty
        }

        public Builder(CachePolicyConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.defaultTTL = defaults.defaultTTL;
    	      this.maxTTL = defaults.maxTTL;
    	      this.minTTL = defaults.minTTL;
    	      this.name = defaults.name;
    	      this.parametersInCacheKeyAndForwardedToOrigin = defaults.parametersInCacheKeyAndForwardedToOrigin;
        }

        public Builder comment(@Nullable Output<String> comment) {
            this.comment = comment;
            return this;
        }
        public Builder comment(@Nullable String comment) {
            this.comment = Output.ofNullable(comment);
            return this;
        }
        public Builder defaultTTL(Output<Double> defaultTTL) {
            this.defaultTTL = Objects.requireNonNull(defaultTTL);
            return this;
        }
        public Builder defaultTTL(Double defaultTTL) {
            this.defaultTTL = Output.of(Objects.requireNonNull(defaultTTL));
            return this;
        }
        public Builder maxTTL(Output<Double> maxTTL) {
            this.maxTTL = Objects.requireNonNull(maxTTL);
            return this;
        }
        public Builder maxTTL(Double maxTTL) {
            this.maxTTL = Output.of(Objects.requireNonNull(maxTTL));
            return this;
        }
        public Builder minTTL(Output<Double> minTTL) {
            this.minTTL = Objects.requireNonNull(minTTL);
            return this;
        }
        public Builder minTTL(Double minTTL) {
            this.minTTL = Output.of(Objects.requireNonNull(minTTL));
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder parametersInCacheKeyAndForwardedToOrigin(Output<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin) {
            this.parametersInCacheKeyAndForwardedToOrigin = Objects.requireNonNull(parametersInCacheKeyAndForwardedToOrigin);
            return this;
        }
        public Builder parametersInCacheKeyAndForwardedToOrigin(CachePolicyParametersInCacheKeyAndForwardedToOriginArgs parametersInCacheKeyAndForwardedToOrigin) {
            this.parametersInCacheKeyAndForwardedToOrigin = Output.of(Objects.requireNonNull(parametersInCacheKeyAndForwardedToOrigin));
            return this;
        }        public CachePolicyConfigArgs build() {
            return new CachePolicyConfigArgs(comment, defaultTTL, maxTTL, minTTL, name, parametersInCacheKeyAndForwardedToOrigin);
        }
    }
}
