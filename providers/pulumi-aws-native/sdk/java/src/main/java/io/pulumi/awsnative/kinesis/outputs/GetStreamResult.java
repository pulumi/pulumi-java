// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kinesis.outputs;

import io.pulumi.awsnative.kinesis.outputs.StreamEncryption;
import io.pulumi.awsnative.kinesis.outputs.StreamModeDetails;
import io.pulumi.awsnative.kinesis.outputs.StreamTag;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetStreamResult {
    /**
     * The Amazon resource name (ARN) of the Kinesis stream
     * 
     */
    private final @Nullable String arn;
    /**
     * The number of hours for the data records that are stored in shards to remain accessible.
     * 
     */
    private final @Nullable Integer retentionPeriodHours;
    /**
     * The number of shards that the stream uses. Required when StreamMode = PROVISIONED is passed.
     * 
     */
    private final @Nullable Integer shardCount;
    /**
     * When specified, enables or updates server-side encryption using an AWS KMS key for a specified stream.
     * 
     */
    private final @Nullable StreamEncryption streamEncryption;
    /**
     * The mode in which the stream is running.
     * 
     */
    private final @Nullable StreamModeDetails streamModeDetails;
    /**
     * An arbitrary set of tags (key–value pairs) to associate with the Kinesis stream.
     * 
     */
    private final @Nullable List<StreamTag> tags;

    @OutputCustomType.Constructor({"arn","retentionPeriodHours","shardCount","streamEncryption","streamModeDetails","tags"})
    private GetStreamResult(
        @Nullable String arn,
        @Nullable Integer retentionPeriodHours,
        @Nullable Integer shardCount,
        @Nullable StreamEncryption streamEncryption,
        @Nullable StreamModeDetails streamModeDetails,
        @Nullable List<StreamTag> tags) {
        this.arn = arn;
        this.retentionPeriodHours = retentionPeriodHours;
        this.shardCount = shardCount;
        this.streamEncryption = streamEncryption;
        this.streamModeDetails = streamModeDetails;
        this.tags = tags;
    }

    /**
     * The Amazon resource name (ARN) of the Kinesis stream
     * 
     */
    public Optional<String> getArn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * The number of hours for the data records that are stored in shards to remain accessible.
     * 
     */
    public Optional<Integer> getRetentionPeriodHours() {
        return Optional.ofNullable(this.retentionPeriodHours);
    }
    /**
     * The number of shards that the stream uses. Required when StreamMode = PROVISIONED is passed.
     * 
     */
    public Optional<Integer> getShardCount() {
        return Optional.ofNullable(this.shardCount);
    }
    /**
     * When specified, enables or updates server-side encryption using an AWS KMS key for a specified stream.
     * 
     */
    public Optional<StreamEncryption> getStreamEncryption() {
        return Optional.ofNullable(this.streamEncryption);
    }
    /**
     * The mode in which the stream is running.
     * 
     */
    public Optional<StreamModeDetails> getStreamModeDetails() {
        return Optional.ofNullable(this.streamModeDetails);
    }
    /**
     * An arbitrary set of tags (key–value pairs) to associate with the Kinesis stream.
     * 
     */
    public List<StreamTag> getTags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable Integer retentionPeriodHours;
        private @Nullable Integer shardCount;
        private @Nullable StreamEncryption streamEncryption;
        private @Nullable StreamModeDetails streamModeDetails;
        private @Nullable List<StreamTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStreamResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.retentionPeriodHours = defaults.retentionPeriodHours;
    	      this.shardCount = defaults.shardCount;
    	      this.streamEncryption = defaults.streamEncryption;
    	      this.streamModeDetails = defaults.streamModeDetails;
    	      this.tags = defaults.tags;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }

        public Builder setRetentionPeriodHours(@Nullable Integer retentionPeriodHours) {
            this.retentionPeriodHours = retentionPeriodHours;
            return this;
        }

        public Builder setShardCount(@Nullable Integer shardCount) {
            this.shardCount = shardCount;
            return this;
        }

        public Builder setStreamEncryption(@Nullable StreamEncryption streamEncryption) {
            this.streamEncryption = streamEncryption;
            return this;
        }

        public Builder setStreamModeDetails(@Nullable StreamModeDetails streamModeDetails) {
            this.streamModeDetails = streamModeDetails;
            return this;
        }

        public Builder setTags(@Nullable List<StreamTag> tags) {
            this.tags = tags;
            return this;
        }
        public GetStreamResult build() {
            return new GetStreamResult(arn, retentionPeriodHours, shardCount, streamEncryption, streamModeDetails, tags);
        }
    }
}
