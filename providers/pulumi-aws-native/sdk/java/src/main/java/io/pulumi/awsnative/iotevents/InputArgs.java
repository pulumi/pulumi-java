// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotevents;

import io.pulumi.awsnative.iotevents.inputs.InputDefinitionArgs;
import io.pulumi.awsnative.iotevents.inputs.InputTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InputArgs extends io.pulumi.resources.ResourceArgs {

    public static final InputArgs Empty = new InputArgs();

    @InputImport(name="inputDefinition", required=true)
        private final Input<InputDefinitionArgs> inputDefinition;

    public Input<InputDefinitionArgs> getInputDefinition() {
        return this.inputDefinition;
    }

    /**
     * A brief description of the input.
     * 
     */
    @InputImport(name="inputDescription")
        private final @Nullable Input<String> inputDescription;

    public Input<String> getInputDescription() {
        return this.inputDescription == null ? Input.empty() : this.inputDescription;
    }

    /**
     * The name of the input.
     * 
     */
    @InputImport(name="inputName")
        private final @Nullable Input<String> inputName;

    public Input<String> getInputName() {
        return this.inputName == null ? Input.empty() : this.inputName;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     * 
     */
    @InputImport(name="tags")
        private final @Nullable Input<List<InputTagArgs>> tags;

    public Input<List<InputTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public InputArgs(
        Input<InputDefinitionArgs> inputDefinition,
        @Nullable Input<String> inputDescription,
        @Nullable Input<String> inputName,
        @Nullable Input<List<InputTagArgs>> tags) {
        this.inputDefinition = Objects.requireNonNull(inputDefinition, "expected parameter 'inputDefinition' to be non-null");
        this.inputDescription = inputDescription;
        this.inputName = inputName;
        this.tags = tags;
    }

    private InputArgs() {
        this.inputDefinition = Input.empty();
        this.inputDescription = Input.empty();
        this.inputName = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<InputDefinitionArgs> inputDefinition;
        private @Nullable Input<String> inputDescription;
        private @Nullable Input<String> inputName;
        private @Nullable Input<List<InputTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(InputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inputDefinition = defaults.inputDefinition;
    	      this.inputDescription = defaults.inputDescription;
    	      this.inputName = defaults.inputName;
    	      this.tags = defaults.tags;
        }

        public Builder setInputDefinition(Input<InputDefinitionArgs> inputDefinition) {
            this.inputDefinition = Objects.requireNonNull(inputDefinition);
            return this;
        }

        public Builder setInputDefinition(InputDefinitionArgs inputDefinition) {
            this.inputDefinition = Input.of(Objects.requireNonNull(inputDefinition));
            return this;
        }

        public Builder setInputDescription(@Nullable Input<String> inputDescription) {
            this.inputDescription = inputDescription;
            return this;
        }

        public Builder setInputDescription(@Nullable String inputDescription) {
            this.inputDescription = Input.ofNullable(inputDescription);
            return this;
        }

        public Builder setInputName(@Nullable Input<String> inputName) {
            this.inputName = inputName;
            return this;
        }

        public Builder setInputName(@Nullable String inputName) {
            this.inputName = Input.ofNullable(inputName);
            return this;
        }

        public Builder setTags(@Nullable Input<List<InputTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<InputTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public InputArgs build() {
            return new InputArgs(inputDefinition, inputDescription, inputName, tags);
        }
    }
}
