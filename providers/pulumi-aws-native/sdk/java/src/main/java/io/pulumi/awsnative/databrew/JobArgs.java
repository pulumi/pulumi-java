// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew;

import io.pulumi.awsnative.databrew.enums.JobEncryptionMode;
import io.pulumi.awsnative.databrew.enums.JobLogSubscription;
import io.pulumi.awsnative.databrew.enums.JobType;
import io.pulumi.awsnative.databrew.inputs.JobDataCatalogOutputArgs;
import io.pulumi.awsnative.databrew.inputs.JobDatabaseOutputArgs;
import io.pulumi.awsnative.databrew.inputs.JobOutputArgs;
import io.pulumi.awsnative.databrew.inputs.JobOutputLocationArgs;
import io.pulumi.awsnative.databrew.inputs.JobProfileConfigurationArgs;
import io.pulumi.awsnative.databrew.inputs.JobRecipeArgs;
import io.pulumi.awsnative.databrew.inputs.JobSampleArgs;
import io.pulumi.awsnative.databrew.inputs.JobTagArgs;
import io.pulumi.awsnative.databrew.inputs.JobValidationConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobArgs Empty = new JobArgs();

    @InputImport(name="dataCatalogOutputs")
    private final @Nullable Input<List<JobDataCatalogOutputArgs>> dataCatalogOutputs;

    public Input<List<JobDataCatalogOutputArgs>> getDataCatalogOutputs() {
        return this.dataCatalogOutputs == null ? Input.empty() : this.dataCatalogOutputs;
    }

    @InputImport(name="databaseOutputs")
    private final @Nullable Input<List<JobDatabaseOutputArgs>> databaseOutputs;

    public Input<List<JobDatabaseOutputArgs>> getDatabaseOutputs() {
        return this.databaseOutputs == null ? Input.empty() : this.databaseOutputs;
    }

    @InputImport(name="datasetName")
    private final @Nullable Input<String> datasetName;

    public Input<String> getDatasetName() {
        return this.datasetName == null ? Input.empty() : this.datasetName;
    }

    @InputImport(name="encryptionKeyArn")
    private final @Nullable Input<String> encryptionKeyArn;

    public Input<String> getEncryptionKeyArn() {
        return this.encryptionKeyArn == null ? Input.empty() : this.encryptionKeyArn;
    }

    @InputImport(name="encryptionMode")
    private final @Nullable Input<JobEncryptionMode> encryptionMode;

    public Input<JobEncryptionMode> getEncryptionMode() {
        return this.encryptionMode == null ? Input.empty() : this.encryptionMode;
    }

    @InputImport(name="jobSample")
    private final @Nullable Input<JobSampleArgs> jobSample;

    public Input<JobSampleArgs> getJobSample() {
        return this.jobSample == null ? Input.empty() : this.jobSample;
    }

    @InputImport(name="logSubscription")
    private final @Nullable Input<JobLogSubscription> logSubscription;

    public Input<JobLogSubscription> getLogSubscription() {
        return this.logSubscription == null ? Input.empty() : this.logSubscription;
    }

    @InputImport(name="maxCapacity")
    private final @Nullable Input<Integer> maxCapacity;

    public Input<Integer> getMaxCapacity() {
        return this.maxCapacity == null ? Input.empty() : this.maxCapacity;
    }

    @InputImport(name="maxRetries")
    private final @Nullable Input<Integer> maxRetries;

    public Input<Integer> getMaxRetries() {
        return this.maxRetries == null ? Input.empty() : this.maxRetries;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="outputLocation")
    private final @Nullable Input<JobOutputLocationArgs> outputLocation;

    public Input<JobOutputLocationArgs> getOutputLocation() {
        return this.outputLocation == null ? Input.empty() : this.outputLocation;
    }

    @InputImport(name="outputs")
    private final @Nullable Input<List<JobOutputArgs>> outputs;

    public Input<List<JobOutputArgs>> getOutputs() {
        return this.outputs == null ? Input.empty() : this.outputs;
    }

    @InputImport(name="profileConfiguration")
    private final @Nullable Input<JobProfileConfigurationArgs> profileConfiguration;

    public Input<JobProfileConfigurationArgs> getProfileConfiguration() {
        return this.profileConfiguration == null ? Input.empty() : this.profileConfiguration;
    }

    @InputImport(name="projectName")
    private final @Nullable Input<String> projectName;

    public Input<String> getProjectName() {
        return this.projectName == null ? Input.empty() : this.projectName;
    }

    @InputImport(name="recipe")
    private final @Nullable Input<JobRecipeArgs> recipe;

    public Input<JobRecipeArgs> getRecipe() {
        return this.recipe == null ? Input.empty() : this.recipe;
    }

    @InputImport(name="roleArn", required=true)
    private final Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<JobTagArgs>> tags;

    public Input<List<JobTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="timeout")
    private final @Nullable Input<Integer> timeout;

    public Input<Integer> getTimeout() {
        return this.timeout == null ? Input.empty() : this.timeout;
    }

    @InputImport(name="type", required=true)
    private final Input<JobType> type;

    public Input<JobType> getType() {
        return this.type;
    }

    @InputImport(name="validationConfigurations")
    private final @Nullable Input<List<JobValidationConfigurationArgs>> validationConfigurations;

    public Input<List<JobValidationConfigurationArgs>> getValidationConfigurations() {
        return this.validationConfigurations == null ? Input.empty() : this.validationConfigurations;
    }

    public JobArgs(
        @Nullable Input<List<JobDataCatalogOutputArgs>> dataCatalogOutputs,
        @Nullable Input<List<JobDatabaseOutputArgs>> databaseOutputs,
        @Nullable Input<String> datasetName,
        @Nullable Input<String> encryptionKeyArn,
        @Nullable Input<JobEncryptionMode> encryptionMode,
        @Nullable Input<JobSampleArgs> jobSample,
        @Nullable Input<JobLogSubscription> logSubscription,
        @Nullable Input<Integer> maxCapacity,
        @Nullable Input<Integer> maxRetries,
        @Nullable Input<String> name,
        @Nullable Input<JobOutputLocationArgs> outputLocation,
        @Nullable Input<List<JobOutputArgs>> outputs,
        @Nullable Input<JobProfileConfigurationArgs> profileConfiguration,
        @Nullable Input<String> projectName,
        @Nullable Input<JobRecipeArgs> recipe,
        Input<String> roleArn,
        @Nullable Input<List<JobTagArgs>> tags,
        @Nullable Input<Integer> timeout,
        Input<JobType> type,
        @Nullable Input<List<JobValidationConfigurationArgs>> validationConfigurations) {
        this.dataCatalogOutputs = dataCatalogOutputs;
        this.databaseOutputs = databaseOutputs;
        this.datasetName = datasetName;
        this.encryptionKeyArn = encryptionKeyArn;
        this.encryptionMode = encryptionMode;
        this.jobSample = jobSample;
        this.logSubscription = logSubscription;
        this.maxCapacity = maxCapacity;
        this.maxRetries = maxRetries;
        this.name = name;
        this.outputLocation = outputLocation;
        this.outputs = outputs;
        this.profileConfiguration = profileConfiguration;
        this.projectName = projectName;
        this.recipe = recipe;
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.tags = tags;
        this.timeout = timeout;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.validationConfigurations = validationConfigurations;
    }

    private JobArgs() {
        this.dataCatalogOutputs = Input.empty();
        this.databaseOutputs = Input.empty();
        this.datasetName = Input.empty();
        this.encryptionKeyArn = Input.empty();
        this.encryptionMode = Input.empty();
        this.jobSample = Input.empty();
        this.logSubscription = Input.empty();
        this.maxCapacity = Input.empty();
        this.maxRetries = Input.empty();
        this.name = Input.empty();
        this.outputLocation = Input.empty();
        this.outputs = Input.empty();
        this.profileConfiguration = Input.empty();
        this.projectName = Input.empty();
        this.recipe = Input.empty();
        this.roleArn = Input.empty();
        this.tags = Input.empty();
        this.timeout = Input.empty();
        this.type = Input.empty();
        this.validationConfigurations = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<JobDataCatalogOutputArgs>> dataCatalogOutputs;
        private @Nullable Input<List<JobDatabaseOutputArgs>> databaseOutputs;
        private @Nullable Input<String> datasetName;
        private @Nullable Input<String> encryptionKeyArn;
        private @Nullable Input<JobEncryptionMode> encryptionMode;
        private @Nullable Input<JobSampleArgs> jobSample;
        private @Nullable Input<JobLogSubscription> logSubscription;
        private @Nullable Input<Integer> maxCapacity;
        private @Nullable Input<Integer> maxRetries;
        private @Nullable Input<String> name;
        private @Nullable Input<JobOutputLocationArgs> outputLocation;
        private @Nullable Input<List<JobOutputArgs>> outputs;
        private @Nullable Input<JobProfileConfigurationArgs> profileConfiguration;
        private @Nullable Input<String> projectName;
        private @Nullable Input<JobRecipeArgs> recipe;
        private Input<String> roleArn;
        private @Nullable Input<List<JobTagArgs>> tags;
        private @Nullable Input<Integer> timeout;
        private Input<JobType> type;
        private @Nullable Input<List<JobValidationConfigurationArgs>> validationConfigurations;

        public Builder() {
    	      // Empty
        }

        public Builder(JobArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataCatalogOutputs = defaults.dataCatalogOutputs;
    	      this.databaseOutputs = defaults.databaseOutputs;
    	      this.datasetName = defaults.datasetName;
    	      this.encryptionKeyArn = defaults.encryptionKeyArn;
    	      this.encryptionMode = defaults.encryptionMode;
    	      this.jobSample = defaults.jobSample;
    	      this.logSubscription = defaults.logSubscription;
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.maxRetries = defaults.maxRetries;
    	      this.name = defaults.name;
    	      this.outputLocation = defaults.outputLocation;
    	      this.outputs = defaults.outputs;
    	      this.profileConfiguration = defaults.profileConfiguration;
    	      this.projectName = defaults.projectName;
    	      this.recipe = defaults.recipe;
    	      this.roleArn = defaults.roleArn;
    	      this.tags = defaults.tags;
    	      this.timeout = defaults.timeout;
    	      this.type = defaults.type;
    	      this.validationConfigurations = defaults.validationConfigurations;
        }

        public Builder setDataCatalogOutputs(@Nullable Input<List<JobDataCatalogOutputArgs>> dataCatalogOutputs) {
            this.dataCatalogOutputs = dataCatalogOutputs;
            return this;
        }

        public Builder setDataCatalogOutputs(@Nullable List<JobDataCatalogOutputArgs> dataCatalogOutputs) {
            this.dataCatalogOutputs = Input.ofNullable(dataCatalogOutputs);
            return this;
        }

        public Builder setDatabaseOutputs(@Nullable Input<List<JobDatabaseOutputArgs>> databaseOutputs) {
            this.databaseOutputs = databaseOutputs;
            return this;
        }

        public Builder setDatabaseOutputs(@Nullable List<JobDatabaseOutputArgs> databaseOutputs) {
            this.databaseOutputs = Input.ofNullable(databaseOutputs);
            return this;
        }

        public Builder setDatasetName(@Nullable Input<String> datasetName) {
            this.datasetName = datasetName;
            return this;
        }

        public Builder setDatasetName(@Nullable String datasetName) {
            this.datasetName = Input.ofNullable(datasetName);
            return this;
        }

        public Builder setEncryptionKeyArn(@Nullable Input<String> encryptionKeyArn) {
            this.encryptionKeyArn = encryptionKeyArn;
            return this;
        }

        public Builder setEncryptionKeyArn(@Nullable String encryptionKeyArn) {
            this.encryptionKeyArn = Input.ofNullable(encryptionKeyArn);
            return this;
        }

        public Builder setEncryptionMode(@Nullable Input<JobEncryptionMode> encryptionMode) {
            this.encryptionMode = encryptionMode;
            return this;
        }

        public Builder setEncryptionMode(@Nullable JobEncryptionMode encryptionMode) {
            this.encryptionMode = Input.ofNullable(encryptionMode);
            return this;
        }

        public Builder setJobSample(@Nullable Input<JobSampleArgs> jobSample) {
            this.jobSample = jobSample;
            return this;
        }

        public Builder setJobSample(@Nullable JobSampleArgs jobSample) {
            this.jobSample = Input.ofNullable(jobSample);
            return this;
        }

        public Builder setLogSubscription(@Nullable Input<JobLogSubscription> logSubscription) {
            this.logSubscription = logSubscription;
            return this;
        }

        public Builder setLogSubscription(@Nullable JobLogSubscription logSubscription) {
            this.logSubscription = Input.ofNullable(logSubscription);
            return this;
        }

        public Builder setMaxCapacity(@Nullable Input<Integer> maxCapacity) {
            this.maxCapacity = maxCapacity;
            return this;
        }

        public Builder setMaxCapacity(@Nullable Integer maxCapacity) {
            this.maxCapacity = Input.ofNullable(maxCapacity);
            return this;
        }

        public Builder setMaxRetries(@Nullable Input<Integer> maxRetries) {
            this.maxRetries = maxRetries;
            return this;
        }

        public Builder setMaxRetries(@Nullable Integer maxRetries) {
            this.maxRetries = Input.ofNullable(maxRetries);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOutputLocation(@Nullable Input<JobOutputLocationArgs> outputLocation) {
            this.outputLocation = outputLocation;
            return this;
        }

        public Builder setOutputLocation(@Nullable JobOutputLocationArgs outputLocation) {
            this.outputLocation = Input.ofNullable(outputLocation);
            return this;
        }

        public Builder setOutputs(@Nullable Input<List<JobOutputArgs>> outputs) {
            this.outputs = outputs;
            return this;
        }

        public Builder setOutputs(@Nullable List<JobOutputArgs> outputs) {
            this.outputs = Input.ofNullable(outputs);
            return this;
        }

        public Builder setProfileConfiguration(@Nullable Input<JobProfileConfigurationArgs> profileConfiguration) {
            this.profileConfiguration = profileConfiguration;
            return this;
        }

        public Builder setProfileConfiguration(@Nullable JobProfileConfigurationArgs profileConfiguration) {
            this.profileConfiguration = Input.ofNullable(profileConfiguration);
            return this;
        }

        public Builder setProjectName(@Nullable Input<String> projectName) {
            this.projectName = projectName;
            return this;
        }

        public Builder setProjectName(@Nullable String projectName) {
            this.projectName = Input.ofNullable(projectName);
            return this;
        }

        public Builder setRecipe(@Nullable Input<JobRecipeArgs> recipe) {
            this.recipe = recipe;
            return this;
        }

        public Builder setRecipe(@Nullable JobRecipeArgs recipe) {
            this.recipe = Input.ofNullable(recipe);
            return this;
        }

        public Builder setRoleArn(Input<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder setRoleArn(String roleArn) {
            this.roleArn = Input.of(Objects.requireNonNull(roleArn));
            return this;
        }

        public Builder setTags(@Nullable Input<List<JobTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<JobTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTimeout(@Nullable Input<Integer> timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setTimeout(@Nullable Integer timeout) {
            this.timeout = Input.ofNullable(timeout);
            return this;
        }

        public Builder setType(Input<JobType> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(JobType type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public Builder setValidationConfigurations(@Nullable Input<List<JobValidationConfigurationArgs>> validationConfigurations) {
            this.validationConfigurations = validationConfigurations;
            return this;
        }

        public Builder setValidationConfigurations(@Nullable List<JobValidationConfigurationArgs> validationConfigurations) {
            this.validationConfigurations = Input.ofNullable(validationConfigurations);
            return this;
        }

        public JobArgs build() {
            return new JobArgs(dataCatalogOutputs, databaseOutputs, datasetName, encryptionKeyArn, encryptionMode, jobSample, logSubscription, maxCapacity, maxRetries, name, outputLocation, outputs, profileConfiguration, projectName, recipe, roleArn, tags, timeout, type, validationConfigurations);
        }
    }
}
