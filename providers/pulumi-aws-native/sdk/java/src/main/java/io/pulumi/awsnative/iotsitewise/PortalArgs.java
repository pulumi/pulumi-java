// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotsitewise;

import io.pulumi.awsnative.iotsitewise.inputs.AlarmsPropertiesArgs;
import io.pulumi.awsnative.iotsitewise.inputs.PortalTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PortalArgs extends io.pulumi.resources.ResourceArgs {

    public static final PortalArgs Empty = new PortalArgs();

    /**
     * Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range.
     * 
     */
    @InputImport(name="alarms")
      private final @Nullable Input<AlarmsPropertiesArgs> alarms;

    public Input<AlarmsPropertiesArgs> getAlarms() {
        return this.alarms == null ? Input.empty() : this.alarms;
    }

    /**
     * The email address that sends alarm notifications.
     * 
     */
    @InputImport(name="notificationSenderEmail")
      private final @Nullable Input<String> notificationSenderEmail;

    public Input<String> getNotificationSenderEmail() {
        return this.notificationSenderEmail == null ? Input.empty() : this.notificationSenderEmail;
    }

    /**
     * The service to use to authenticate users to the portal. Choose from SSO or IAM. You can't change this value after you create a portal.
     * 
     */
    @InputImport(name="portalAuthMode")
      private final @Nullable Input<String> portalAuthMode;

    public Input<String> getPortalAuthMode() {
        return this.portalAuthMode == null ? Input.empty() : this.portalAuthMode;
    }

    /**
     * The AWS administrator's contact email address.
     * 
     */
    @InputImport(name="portalContactEmail", required=true)
      private final Input<String> portalContactEmail;

    public Input<String> getPortalContactEmail() {
        return this.portalContactEmail;
    }

    /**
     * A description for the portal.
     * 
     */
    @InputImport(name="portalDescription")
      private final @Nullable Input<String> portalDescription;

    public Input<String> getPortalDescription() {
        return this.portalDescription == null ? Input.empty() : this.portalDescription;
    }

    /**
     * A friendly name for the portal.
     * 
     */
    @InputImport(name="portalName")
      private final @Nullable Input<String> portalName;

    public Input<String> getPortalName() {
        return this.portalName == null ? Input.empty() : this.portalName;
    }

    /**
     * The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf.
     * 
     */
    @InputImport(name="roleArn", required=true)
      private final Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn;
    }

    /**
     * A list of key-value pairs that contain metadata for the portal.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<List<PortalTagArgs>> tags;

    public Input<List<PortalTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public PortalArgs(
        @Nullable Input<AlarmsPropertiesArgs> alarms,
        @Nullable Input<String> notificationSenderEmail,
        @Nullable Input<String> portalAuthMode,
        Input<String> portalContactEmail,
        @Nullable Input<String> portalDescription,
        @Nullable Input<String> portalName,
        Input<String> roleArn,
        @Nullable Input<List<PortalTagArgs>> tags) {
        this.alarms = alarms;
        this.notificationSenderEmail = notificationSenderEmail;
        this.portalAuthMode = portalAuthMode;
        this.portalContactEmail = Objects.requireNonNull(portalContactEmail, "expected parameter 'portalContactEmail' to be non-null");
        this.portalDescription = portalDescription;
        this.portalName = portalName;
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.tags = tags;
    }

    private PortalArgs() {
        this.alarms = Input.empty();
        this.notificationSenderEmail = Input.empty();
        this.portalAuthMode = Input.empty();
        this.portalContactEmail = Input.empty();
        this.portalDescription = Input.empty();
        this.portalName = Input.empty();
        this.roleArn = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PortalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AlarmsPropertiesArgs> alarms;
        private @Nullable Input<String> notificationSenderEmail;
        private @Nullable Input<String> portalAuthMode;
        private Input<String> portalContactEmail;
        private @Nullable Input<String> portalDescription;
        private @Nullable Input<String> portalName;
        private Input<String> roleArn;
        private @Nullable Input<List<PortalTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(PortalArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alarms = defaults.alarms;
    	      this.notificationSenderEmail = defaults.notificationSenderEmail;
    	      this.portalAuthMode = defaults.portalAuthMode;
    	      this.portalContactEmail = defaults.portalContactEmail;
    	      this.portalDescription = defaults.portalDescription;
    	      this.portalName = defaults.portalName;
    	      this.roleArn = defaults.roleArn;
    	      this.tags = defaults.tags;
        }

        public Builder setAlarms(@Nullable Input<AlarmsPropertiesArgs> alarms) {
            this.alarms = alarms;
            return this;
        }

        public Builder setAlarms(@Nullable AlarmsPropertiesArgs alarms) {
            this.alarms = Input.ofNullable(alarms);
            return this;
        }

        public Builder setNotificationSenderEmail(@Nullable Input<String> notificationSenderEmail) {
            this.notificationSenderEmail = notificationSenderEmail;
            return this;
        }

        public Builder setNotificationSenderEmail(@Nullable String notificationSenderEmail) {
            this.notificationSenderEmail = Input.ofNullable(notificationSenderEmail);
            return this;
        }

        public Builder setPortalAuthMode(@Nullable Input<String> portalAuthMode) {
            this.portalAuthMode = portalAuthMode;
            return this;
        }

        public Builder setPortalAuthMode(@Nullable String portalAuthMode) {
            this.portalAuthMode = Input.ofNullable(portalAuthMode);
            return this;
        }

        public Builder setPortalContactEmail(Input<String> portalContactEmail) {
            this.portalContactEmail = Objects.requireNonNull(portalContactEmail);
            return this;
        }

        public Builder setPortalContactEmail(String portalContactEmail) {
            this.portalContactEmail = Input.of(Objects.requireNonNull(portalContactEmail));
            return this;
        }

        public Builder setPortalDescription(@Nullable Input<String> portalDescription) {
            this.portalDescription = portalDescription;
            return this;
        }

        public Builder setPortalDescription(@Nullable String portalDescription) {
            this.portalDescription = Input.ofNullable(portalDescription);
            return this;
        }

        public Builder setPortalName(@Nullable Input<String> portalName) {
            this.portalName = portalName;
            return this;
        }

        public Builder setPortalName(@Nullable String portalName) {
            this.portalName = Input.ofNullable(portalName);
            return this;
        }

        public Builder setRoleArn(Input<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder setRoleArn(String roleArn) {
            this.roleArn = Input.of(Objects.requireNonNull(roleArn));
            return this;
        }

        public Builder setTags(@Nullable Input<List<PortalTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<PortalTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public PortalArgs build() {
            return new PortalArgs(alarms, notificationSenderEmail, portalAuthMode, portalContactEmail, portalDescription, portalName, roleArn, tags);
        }
    }
}
