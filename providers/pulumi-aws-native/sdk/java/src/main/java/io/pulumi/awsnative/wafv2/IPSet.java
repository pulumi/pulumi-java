// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.wafv2.IPSetArgs;
import io.pulumi.awsnative.wafv2.enums.IPSetIPAddressVersion;
import io.pulumi.awsnative.wafv2.enums.IPSetScope;
import io.pulumi.awsnative.wafv2.outputs.IPSetTag;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Contains a list of IP addresses. This can be either IPV4 or IPV6. The list will be mutually
 * 
 */
@ResourceType(type="aws-native:wafv2:IPSet")
public class IPSet extends io.pulumi.resources.CustomResource {
    /**
     * List of IPAddresses.
     * 
     */
    @OutputExport(name="addresses", type=List.class, parameters={String.class})
    private Output<List<String>> addresses;

    /**
     * @return List of IPAddresses.
     * 
     */
    public Output<List<String>> getAddresses() {
        return this.addresses;
    }
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    @OutputExport(name="iPAddressVersion", type=IPSetIPAddressVersion.class, parameters={})
    private Output<IPSetIPAddressVersion> iPAddressVersion;

    public Output<IPSetIPAddressVersion> getIPAddressVersion() {
        return this.iPAddressVersion;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    public Output</* @Nullable */ String> getName() {
        return this.name;
    }
    @OutputExport(name="scope", type=IPSetScope.class, parameters={})
    private Output<IPSetScope> scope;

    public Output<IPSetScope> getScope() {
        return this.scope;
    }
    @OutputExport(name="tags", type=List.class, parameters={IPSetTag.class})
    private Output</* @Nullable */ List<IPSetTag>> tags;

    public Output</* @Nullable */ List<IPSetTag>> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IPSet(String name, IPSetArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:wafv2:IPSet", name, args == null ? IPSetArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private IPSet(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:wafv2:IPSet", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IPSet get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new IPSet(name, id, options);
    }
}
