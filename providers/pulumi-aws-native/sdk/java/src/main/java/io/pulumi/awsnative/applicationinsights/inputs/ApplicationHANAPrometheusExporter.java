// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.applicationinsights.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationHANAPrometheusExporter extends io.pulumi.resources.InvokeArgs {

    public static final ApplicationHANAPrometheusExporter Empty = new ApplicationHANAPrometheusExporter();

    @InputImport(name="agreeToInstallHANADBClient", required=true)
    private final Boolean agreeToInstallHANADBClient;

    public Boolean getAgreeToInstallHANADBClient() {
        return this.agreeToInstallHANADBClient;
    }

    @InputImport(name="hANAPort", required=true)
    private final String hANAPort;

    public String getHANAPort() {
        return this.hANAPort;
    }

    @InputImport(name="hANASID", required=true)
    private final String hANASID;

    public String getHANASID() {
        return this.hANASID;
    }

    @InputImport(name="hANASecretName", required=true)
    private final String hANASecretName;

    public String getHANASecretName() {
        return this.hANASecretName;
    }

    @InputImport(name="prometheusPort")
    private final @Nullable String prometheusPort;

    public Optional<String> getPrometheusPort() {
        return this.prometheusPort == null ? Optional.empty() : Optional.ofNullable(this.prometheusPort);
    }

    public ApplicationHANAPrometheusExporter(
        Boolean agreeToInstallHANADBClient,
        String hANAPort,
        String hANASID,
        String hANASecretName,
        @Nullable String prometheusPort) {
        this.agreeToInstallHANADBClient = Objects.requireNonNull(agreeToInstallHANADBClient, "expected parameter 'agreeToInstallHANADBClient' to be non-null");
        this.hANAPort = Objects.requireNonNull(hANAPort, "expected parameter 'hANAPort' to be non-null");
        this.hANASID = Objects.requireNonNull(hANASID, "expected parameter 'hANASID' to be non-null");
        this.hANASecretName = Objects.requireNonNull(hANASecretName, "expected parameter 'hANASecretName' to be non-null");
        this.prometheusPort = prometheusPort;
    }

    private ApplicationHANAPrometheusExporter() {
        this.agreeToInstallHANADBClient = null;
        this.hANAPort = null;
        this.hANASID = null;
        this.hANASecretName = null;
        this.prometheusPort = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationHANAPrometheusExporter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean agreeToInstallHANADBClient;
        private String hANAPort;
        private String hANASID;
        private String hANASecretName;
        private @Nullable String prometheusPort;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationHANAPrometheusExporter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agreeToInstallHANADBClient = defaults.agreeToInstallHANADBClient;
    	      this.hANAPort = defaults.hANAPort;
    	      this.hANASID = defaults.hANASID;
    	      this.hANASecretName = defaults.hANASecretName;
    	      this.prometheusPort = defaults.prometheusPort;
        }

        public Builder setAgreeToInstallHANADBClient(Boolean agreeToInstallHANADBClient) {
            this.agreeToInstallHANADBClient = Objects.requireNonNull(agreeToInstallHANADBClient);
            return this;
        }

        public Builder setHANAPort(String hANAPort) {
            this.hANAPort = Objects.requireNonNull(hANAPort);
            return this;
        }

        public Builder setHANASID(String hANASID) {
            this.hANASID = Objects.requireNonNull(hANASID);
            return this;
        }

        public Builder setHANASecretName(String hANASecretName) {
            this.hANASecretName = Objects.requireNonNull(hANASecretName);
            return this;
        }

        public Builder setPrometheusPort(@Nullable String prometheusPort) {
            this.prometheusPort = prometheusPort;
            return this;
        }

        public ApplicationHANAPrometheusExporter build() {
            return new ApplicationHANAPrometheusExporter(agreeToInstallHANADBClient, hANAPort, hANASID, hANASecretName, prometheusPort);
        }
    }
}
