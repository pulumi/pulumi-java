// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.acmpca.inputs;

import io.pulumi.awsnative.acmpca.inputs.CertificateExtendedKeyUsageArgs;
import io.pulumi.awsnative.acmpca.inputs.CertificateGeneralNameArgs;
import io.pulumi.awsnative.acmpca.inputs.CertificateKeyUsageArgs;
import io.pulumi.awsnative.acmpca.inputs.CertificatePolicyInformationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Structure that contains X.500 extensions for a Certificate.
 * 
 */
public final class CertificateExtensionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final CertificateExtensionsArgs Empty = new CertificateExtensionsArgs();

    @InputImport(name="certificatePolicies")
      private final @Nullable Output<List<CertificatePolicyInformationArgs>> certificatePolicies;

    public Output<List<CertificatePolicyInformationArgs>> getCertificatePolicies() {
        return this.certificatePolicies == null ? Output.empty() : this.certificatePolicies;
    }

    @InputImport(name="extendedKeyUsage")
      private final @Nullable Output<List<CertificateExtendedKeyUsageArgs>> extendedKeyUsage;

    public Output<List<CertificateExtendedKeyUsageArgs>> getExtendedKeyUsage() {
        return this.extendedKeyUsage == null ? Output.empty() : this.extendedKeyUsage;
    }

    @InputImport(name="keyUsage")
      private final @Nullable Output<CertificateKeyUsageArgs> keyUsage;

    public Output<CertificateKeyUsageArgs> getKeyUsage() {
        return this.keyUsage == null ? Output.empty() : this.keyUsage;
    }

    @InputImport(name="subjectAlternativeNames")
      private final @Nullable Output<List<CertificateGeneralNameArgs>> subjectAlternativeNames;

    public Output<List<CertificateGeneralNameArgs>> getSubjectAlternativeNames() {
        return this.subjectAlternativeNames == null ? Output.empty() : this.subjectAlternativeNames;
    }

    public CertificateExtensionsArgs(
        @Nullable Output<List<CertificatePolicyInformationArgs>> certificatePolicies,
        @Nullable Output<List<CertificateExtendedKeyUsageArgs>> extendedKeyUsage,
        @Nullable Output<CertificateKeyUsageArgs> keyUsage,
        @Nullable Output<List<CertificateGeneralNameArgs>> subjectAlternativeNames) {
        this.certificatePolicies = certificatePolicies;
        this.extendedKeyUsage = extendedKeyUsage;
        this.keyUsage = keyUsage;
        this.subjectAlternativeNames = subjectAlternativeNames;
    }

    private CertificateExtensionsArgs() {
        this.certificatePolicies = Output.empty();
        this.extendedKeyUsage = Output.empty();
        this.keyUsage = Output.empty();
        this.subjectAlternativeNames = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateExtensionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<CertificatePolicyInformationArgs>> certificatePolicies;
        private @Nullable Output<List<CertificateExtendedKeyUsageArgs>> extendedKeyUsage;
        private @Nullable Output<CertificateKeyUsageArgs> keyUsage;
        private @Nullable Output<List<CertificateGeneralNameArgs>> subjectAlternativeNames;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateExtensionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificatePolicies = defaults.certificatePolicies;
    	      this.extendedKeyUsage = defaults.extendedKeyUsage;
    	      this.keyUsage = defaults.keyUsage;
    	      this.subjectAlternativeNames = defaults.subjectAlternativeNames;
        }

        public Builder certificatePolicies(@Nullable Output<List<CertificatePolicyInformationArgs>> certificatePolicies) {
            this.certificatePolicies = certificatePolicies;
            return this;
        }

        public Builder certificatePolicies(@Nullable List<CertificatePolicyInformationArgs> certificatePolicies) {
            this.certificatePolicies = Output.ofNullable(certificatePolicies);
            return this;
        }

        public Builder extendedKeyUsage(@Nullable Output<List<CertificateExtendedKeyUsageArgs>> extendedKeyUsage) {
            this.extendedKeyUsage = extendedKeyUsage;
            return this;
        }

        public Builder extendedKeyUsage(@Nullable List<CertificateExtendedKeyUsageArgs> extendedKeyUsage) {
            this.extendedKeyUsage = Output.ofNullable(extendedKeyUsage);
            return this;
        }

        public Builder keyUsage(@Nullable Output<CertificateKeyUsageArgs> keyUsage) {
            this.keyUsage = keyUsage;
            return this;
        }

        public Builder keyUsage(@Nullable CertificateKeyUsageArgs keyUsage) {
            this.keyUsage = Output.ofNullable(keyUsage);
            return this;
        }

        public Builder subjectAlternativeNames(@Nullable Output<List<CertificateGeneralNameArgs>> subjectAlternativeNames) {
            this.subjectAlternativeNames = subjectAlternativeNames;
            return this;
        }

        public Builder subjectAlternativeNames(@Nullable List<CertificateGeneralNameArgs> subjectAlternativeNames) {
            this.subjectAlternativeNames = Output.ofNullable(subjectAlternativeNames);
            return this;
        }
        public CertificateExtensionsArgs build() {
            return new CertificateExtensionsArgs(certificatePolicies, extendedKeyUsage, keyUsage, subjectAlternativeNames);
        }
    }
}
