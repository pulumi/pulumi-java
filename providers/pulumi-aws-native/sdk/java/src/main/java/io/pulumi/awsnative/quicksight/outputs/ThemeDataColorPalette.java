// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ThemeDataColorPalette {
    /**
     * <p>The hexadecimal codes for the colors.</p>
     * 
     */
    private final @Nullable List<String> colors;
    /**
     * <p>The hexadecimal code of a color that applies to charts where a lack of data is
     *             highlighted.</p>
     * 
     */
    private final @Nullable String emptyFillColor;
    /**
     * <p>The minimum and maximum hexadecimal codes that describe a color gradient. </p>
     * 
     */
    private final @Nullable List<String> minMaxGradient;

    @OutputCustomType.Constructor
    private ThemeDataColorPalette(
        @OutputCustomType.Parameter("colors") @Nullable List<String> colors,
        @OutputCustomType.Parameter("emptyFillColor") @Nullable String emptyFillColor,
        @OutputCustomType.Parameter("minMaxGradient") @Nullable List<String> minMaxGradient) {
        this.colors = colors;
        this.emptyFillColor = emptyFillColor;
        this.minMaxGradient = minMaxGradient;
    }

    /**
     * <p>The hexadecimal codes for the colors.</p>
     * 
    */
    public List<String> getColors() {
        return this.colors == null ? List.of() : this.colors;
    }
    /**
     * <p>The hexadecimal code of a color that applies to charts where a lack of data is
     *             highlighted.</p>
     * 
    */
    public Optional<String> getEmptyFillColor() {
        return Optional.ofNullable(this.emptyFillColor);
    }
    /**
     * <p>The minimum and maximum hexadecimal codes that describe a color gradient. </p>
     * 
    */
    public List<String> getMinMaxGradient() {
        return this.minMaxGradient == null ? List.of() : this.minMaxGradient;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThemeDataColorPalette defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> colors;
        private @Nullable String emptyFillColor;
        private @Nullable List<String> minMaxGradient;

        public Builder() {
    	      // Empty
        }

        public Builder(ThemeDataColorPalette defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.colors = defaults.colors;
    	      this.emptyFillColor = defaults.emptyFillColor;
    	      this.minMaxGradient = defaults.minMaxGradient;
        }

        public Builder setColors(@Nullable List<String> colors) {
            this.colors = colors;
            return this;
        }

        public Builder setEmptyFillColor(@Nullable String emptyFillColor) {
            this.emptyFillColor = emptyFillColor;
            return this;
        }

        public Builder setMinMaxGradient(@Nullable List<String> minMaxGradient) {
            this.minMaxGradient = minMaxGradient;
            return this;
        }
        public ThemeDataColorPalette build() {
            return new ThemeDataColorPalette(colors, emptyFillColor, minMaxGradient);
        }
    }
}
