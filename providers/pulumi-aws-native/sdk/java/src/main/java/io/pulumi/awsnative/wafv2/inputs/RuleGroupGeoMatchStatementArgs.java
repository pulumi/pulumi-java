// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2.inputs;

import io.pulumi.awsnative.wafv2.inputs.RuleGroupForwardedIPConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RuleGroupGeoMatchStatementArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleGroupGeoMatchStatementArgs Empty = new RuleGroupGeoMatchStatementArgs();

    @Import(name="countryCodes")
      private final @Nullable Output<List<String>> countryCodes;

    public Output<List<String>> getCountryCodes() {
        return this.countryCodes == null ? Output.empty() : this.countryCodes;
    }

    @Import(name="forwardedIPConfig")
      private final @Nullable Output<RuleGroupForwardedIPConfigurationArgs> forwardedIPConfig;

    public Output<RuleGroupForwardedIPConfigurationArgs> getForwardedIPConfig() {
        return this.forwardedIPConfig == null ? Output.empty() : this.forwardedIPConfig;
    }

    public RuleGroupGeoMatchStatementArgs(
        @Nullable Output<List<String>> countryCodes,
        @Nullable Output<RuleGroupForwardedIPConfigurationArgs> forwardedIPConfig) {
        this.countryCodes = countryCodes;
        this.forwardedIPConfig = forwardedIPConfig;
    }

    private RuleGroupGeoMatchStatementArgs() {
        this.countryCodes = Output.empty();
        this.forwardedIPConfig = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleGroupGeoMatchStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> countryCodes;
        private @Nullable Output<RuleGroupForwardedIPConfigurationArgs> forwardedIPConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleGroupGeoMatchStatementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.countryCodes = defaults.countryCodes;
    	      this.forwardedIPConfig = defaults.forwardedIPConfig;
        }

        public Builder countryCodes(@Nullable Output<List<String>> countryCodes) {
            this.countryCodes = countryCodes;
            return this;
        }
        public Builder countryCodes(@Nullable List<String> countryCodes) {
            this.countryCodes = Output.ofNullable(countryCodes);
            return this;
        }
        public Builder countryCodes(String... countryCodes) {
            return countryCodes(List.of(countryCodes));
        }
        public Builder forwardedIPConfig(@Nullable Output<RuleGroupForwardedIPConfigurationArgs> forwardedIPConfig) {
            this.forwardedIPConfig = forwardedIPConfig;
            return this;
        }
        public Builder forwardedIPConfig(@Nullable RuleGroupForwardedIPConfigurationArgs forwardedIPConfig) {
            this.forwardedIPConfig = Output.ofNullable(forwardedIPConfig);
            return this;
        }        public RuleGroupGeoMatchStatementArgs build() {
            return new RuleGroupGeoMatchStatementArgs(countryCodes, forwardedIPConfig);
        }
    }
}
