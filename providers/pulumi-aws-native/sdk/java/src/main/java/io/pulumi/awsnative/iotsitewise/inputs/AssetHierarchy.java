// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotsitewise.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class AssetHierarchy extends io.pulumi.resources.InvokeArgs {

    public static final AssetHierarchy Empty = new AssetHierarchy();

    @InputImport(name="childAssetId", required=true)
    private final String childAssetId;

    public String getChildAssetId() {
        return this.childAssetId;
    }

    @InputImport(name="logicalId", required=true)
    private final String logicalId;

    public String getLogicalId() {
        return this.logicalId;
    }

    public AssetHierarchy(
        String childAssetId,
        String logicalId) {
        this.childAssetId = Objects.requireNonNull(childAssetId, "expected parameter 'childAssetId' to be non-null");
        this.logicalId = Objects.requireNonNull(logicalId, "expected parameter 'logicalId' to be non-null");
    }

    private AssetHierarchy() {
        this.childAssetId = null;
        this.logicalId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetHierarchy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String childAssetId;
        private String logicalId;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetHierarchy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childAssetId = defaults.childAssetId;
    	      this.logicalId = defaults.logicalId;
        }

        public Builder setChildAssetId(String childAssetId) {
            this.childAssetId = Objects.requireNonNull(childAssetId);
            return this;
        }

        public Builder setLogicalId(String logicalId) {
            this.logicalId = Objects.requireNonNull(logicalId);
            return this;
        }

        public AssetHierarchy build() {
            return new AssetHierarchy(childAssetId, logicalId);
        }
    }
}
