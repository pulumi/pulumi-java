// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.route53recoveryreadiness.inputs;

import io.pulumi.awsnative.route53recoveryreadiness.inputs.ResourceSetTargetResource;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A component for DNS/routing control readiness checks.
 * 
 */
public final class ResourceSetDNSTargetResource extends io.pulumi.resources.InvokeArgs {

    public static final ResourceSetDNSTargetResource Empty = new ResourceSetDNSTargetResource();

    /**
     * The domain name that acts as an ingress point to a portion of the customer application.
     * 
     */
    @Import(name="domainName")
      private final @Nullable String domainName;

    public Optional<String> getDomainName() {
        return this.domainName == null ? Optional.empty() : Optional.ofNullable(this.domainName);
    }

    /**
     * The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.
     * 
     */
    @Import(name="hostedZoneArn")
      private final @Nullable String hostedZoneArn;

    public Optional<String> getHostedZoneArn() {
        return this.hostedZoneArn == null ? Optional.empty() : Optional.ofNullable(this.hostedZoneArn);
    }

    /**
     * The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type.
     * 
     */
    @Import(name="recordSetId")
      private final @Nullable String recordSetId;

    public Optional<String> getRecordSetId() {
        return this.recordSetId == null ? Optional.empty() : Optional.ofNullable(this.recordSetId);
    }

    /**
     * The type of DNS record of the target resource.
     * 
     */
    @Import(name="recordType")
      private final @Nullable String recordType;

    public Optional<String> getRecordType() {
        return this.recordType == null ? Optional.empty() : Optional.ofNullable(this.recordType);
    }

    @Import(name="targetResource")
      private final @Nullable ResourceSetTargetResource targetResource;

    public Optional<ResourceSetTargetResource> getTargetResource() {
        return this.targetResource == null ? Optional.empty() : Optional.ofNullable(this.targetResource);
    }

    public ResourceSetDNSTargetResource(
        @Nullable String domainName,
        @Nullable String hostedZoneArn,
        @Nullable String recordSetId,
        @Nullable String recordType,
        @Nullable ResourceSetTargetResource targetResource) {
        this.domainName = domainName;
        this.hostedZoneArn = hostedZoneArn;
        this.recordSetId = recordSetId;
        this.recordType = recordType;
        this.targetResource = targetResource;
    }

    private ResourceSetDNSTargetResource() {
        this.domainName = null;
        this.hostedZoneArn = null;
        this.recordSetId = null;
        this.recordType = null;
        this.targetResource = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceSetDNSTargetResource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String domainName;
        private @Nullable String hostedZoneArn;
        private @Nullable String recordSetId;
        private @Nullable String recordType;
        private @Nullable ResourceSetTargetResource targetResource;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceSetDNSTargetResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.hostedZoneArn = defaults.hostedZoneArn;
    	      this.recordSetId = defaults.recordSetId;
    	      this.recordType = defaults.recordType;
    	      this.targetResource = defaults.targetResource;
        }

        public Builder domainName(@Nullable String domainName) {
            this.domainName = domainName;
            return this;
        }
        public Builder hostedZoneArn(@Nullable String hostedZoneArn) {
            this.hostedZoneArn = hostedZoneArn;
            return this;
        }
        public Builder recordSetId(@Nullable String recordSetId) {
            this.recordSetId = recordSetId;
            return this;
        }
        public Builder recordType(@Nullable String recordType) {
            this.recordType = recordType;
            return this;
        }
        public Builder targetResource(@Nullable ResourceSetTargetResource targetResource) {
            this.targetResource = targetResource;
            return this;
        }        public ResourceSetDNSTargetResource build() {
            return new ResourceSetDNSTargetResource(domainName, hostedZoneArn, recordSetId, recordType, targetResource);
        }
    }
}
