// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.timestream;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.timestream.TableArgs;
import io.pulumi.awsnative.timestream.outputs.MagneticStoreWritePropertiesProperties;
import io.pulumi.awsnative.timestream.outputs.RetentionPropertiesProperties;
import io.pulumi.awsnative.timestream.outputs.TableTag;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * The AWS::Timestream::Table resource creates a Timestream Table.
 * 
 */
@ResourceType(type="aws-native:timestream:Table")
public class Table extends io.pulumi.resources.CustomResource {
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The name for the database which the table to be created belongs to.
     * 
     */
    @OutputExport(name="databaseName", type=String.class, parameters={})
    private Output<String> databaseName;

    /**
     * @return The name for the database which the table to be created belongs to.
     * 
     */
    public Output<String> getDatabaseName() {
        return this.databaseName;
    }
    /**
     * The properties that determine whether magnetic store writes are enabled.
     * 
     */
    @OutputExport(name="magneticStoreWriteProperties", type=MagneticStoreWritePropertiesProperties.class, parameters={})
    private Output</* @Nullable */ MagneticStoreWritePropertiesProperties> magneticStoreWriteProperties;

    /**
     * @return The properties that determine whether magnetic store writes are enabled.
     * 
     */
    public Output</* @Nullable */ MagneticStoreWritePropertiesProperties> getMagneticStoreWriteProperties() {
        return this.magneticStoreWriteProperties;
    }
    /**
     * The table name exposed as a read-only attribute.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The table name exposed as a read-only attribute.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The retention duration of the memory store and the magnetic store.
     * 
     */
    @OutputExport(name="retentionProperties", type=RetentionPropertiesProperties.class, parameters={})
    private Output</* @Nullable */ RetentionPropertiesProperties> retentionProperties;

    /**
     * @return The retention duration of the memory store and the magnetic store.
     * 
     */
    public Output</* @Nullable */ RetentionPropertiesProperties> getRetentionProperties() {
        return this.retentionProperties;
    }
    /**
     * The name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
     * 
     */
    @OutputExport(name="tableName", type=String.class, parameters={})
    private Output</* @Nullable */ String> tableName;

    /**
     * @return The name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
     * 
     */
    public Output</* @Nullable */ String> getTableName() {
        return this.tableName;
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @OutputExport(name="tags", type=List.class, parameters={TableTag.class})
    private Output</* @Nullable */ List<TableTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Output</* @Nullable */ List<TableTag>> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Table(String name, TableArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:timestream:Table", name, args == null ? TableArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Table(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:timestream:Table", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Table get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Table(name, id, options);
    }
}
