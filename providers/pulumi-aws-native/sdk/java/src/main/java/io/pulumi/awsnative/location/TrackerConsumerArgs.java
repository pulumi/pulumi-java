// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.location;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class TrackerConsumerArgs extends io.pulumi.resources.ResourceArgs {

    public static final TrackerConsumerArgs Empty = new TrackerConsumerArgs();

    @Import(name="consumerArn", required=true)
      private final Output<String> consumerArn;

    public Output<String> consumerArn() {
        return this.consumerArn;
    }

    @Import(name="trackerName", required=true)
      private final Output<String> trackerName;

    public Output<String> trackerName() {
        return this.trackerName;
    }

    public TrackerConsumerArgs(
        Output<String> consumerArn,
        Output<String> trackerName) {
        this.consumerArn = Objects.requireNonNull(consumerArn, "expected parameter 'consumerArn' to be non-null");
        this.trackerName = Objects.requireNonNull(trackerName, "expected parameter 'trackerName' to be non-null");
    }

    private TrackerConsumerArgs() {
        this.consumerArn = Codegen.empty();
        this.trackerName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TrackerConsumerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> consumerArn;
        private Output<String> trackerName;

        public Builder() {
    	      // Empty
        }

        public Builder(TrackerConsumerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerArn = defaults.consumerArn;
    	      this.trackerName = defaults.trackerName;
        }

        public Builder consumerArn(Output<String> consumerArn) {
            this.consumerArn = Objects.requireNonNull(consumerArn);
            return this;
        }
        public Builder consumerArn(String consumerArn) {
            this.consumerArn = Output.of(Objects.requireNonNull(consumerArn));
            return this;
        }
        public Builder trackerName(Output<String> trackerName) {
            this.trackerName = Objects.requireNonNull(trackerName);
            return this;
        }
        public Builder trackerName(String trackerName) {
            this.trackerName = Output.of(Objects.requireNonNull(trackerName));
            return this;
        }        public TrackerConsumerArgs build() {
            return new TrackerConsumerArgs(consumerArn, trackerName);
        }
    }
}
