// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.amplify.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppBasicAuthConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppBasicAuthConfigArgs Empty = new AppBasicAuthConfigArgs();

    @Import(name="enableBasicAuth")
      private final @Nullable Output<Boolean> enableBasicAuth;

    public Output<Boolean> getEnableBasicAuth() {
        return this.enableBasicAuth == null ? Output.empty() : this.enableBasicAuth;
    }

    @Import(name="password")
      private final @Nullable Output<String> password;

    public Output<String> getPassword() {
        return this.password == null ? Output.empty() : this.password;
    }

    @Import(name="username")
      private final @Nullable Output<String> username;

    public Output<String> getUsername() {
        return this.username == null ? Output.empty() : this.username;
    }

    public AppBasicAuthConfigArgs(
        @Nullable Output<Boolean> enableBasicAuth,
        @Nullable Output<String> password,
        @Nullable Output<String> username) {
        this.enableBasicAuth = enableBasicAuth;
        this.password = password;
        this.username = username;
    }

    private AppBasicAuthConfigArgs() {
        this.enableBasicAuth = Output.empty();
        this.password = Output.empty();
        this.username = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppBasicAuthConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> enableBasicAuth;
        private @Nullable Output<String> password;
        private @Nullable Output<String> username;

        public Builder() {
    	      // Empty
        }

        public Builder(AppBasicAuthConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableBasicAuth = defaults.enableBasicAuth;
    	      this.password = defaults.password;
    	      this.username = defaults.username;
        }

        public Builder enableBasicAuth(@Nullable Output<Boolean> enableBasicAuth) {
            this.enableBasicAuth = enableBasicAuth;
            return this;
        }

        public Builder enableBasicAuth(@Nullable Boolean enableBasicAuth) {
            this.enableBasicAuth = Output.ofNullable(enableBasicAuth);
            return this;
        }

        public Builder password(@Nullable Output<String> password) {
            this.password = password;
            return this;
        }

        public Builder password(@Nullable String password) {
            this.password = Output.ofNullable(password);
            return this;
        }

        public Builder username(@Nullable Output<String> username) {
            this.username = username;
            return this;
        }

        public Builder username(@Nullable String username) {
            this.username = Output.ofNullable(username);
            return this;
        }
        public AppBasicAuthConfigArgs build() {
            return new AppBasicAuthConfigArgs(enableBasicAuth, password, username);
        }
    }
}
