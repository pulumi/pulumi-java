// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apprunner;

import io.pulumi.awsnative.apprunner.inputs.VpcConnectorTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VpcConnectorArgs extends io.pulumi.resources.ResourceArgs {

    public static final VpcConnectorArgs Empty = new VpcConnectorArgs();

    @InputImport(name="securityGroups")
    private final @Nullable Input<List<String>> securityGroups;

    public Input<List<String>> getSecurityGroups() {
        return this.securityGroups == null ? Input.empty() : this.securityGroups;
    }

    @InputImport(name="subnets", required=true)
    private final Input<List<String>> subnets;

    public Input<List<String>> getSubnets() {
        return this.subnets;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<VpcConnectorTagArgs>> tags;

    public Input<List<VpcConnectorTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="vpcConnectorName")
    private final @Nullable Input<String> vpcConnectorName;

    public Input<String> getVpcConnectorName() {
        return this.vpcConnectorName == null ? Input.empty() : this.vpcConnectorName;
    }

    public VpcConnectorArgs(
        @Nullable Input<List<String>> securityGroups,
        Input<List<String>> subnets,
        @Nullable Input<List<VpcConnectorTagArgs>> tags,
        @Nullable Input<String> vpcConnectorName) {
        this.securityGroups = securityGroups;
        this.subnets = Objects.requireNonNull(subnets, "expected parameter 'subnets' to be non-null");
        this.tags = tags;
        this.vpcConnectorName = vpcConnectorName;
    }

    private VpcConnectorArgs() {
        this.securityGroups = Input.empty();
        this.subnets = Input.empty();
        this.tags = Input.empty();
        this.vpcConnectorName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpcConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> securityGroups;
        private Input<List<String>> subnets;
        private @Nullable Input<List<VpcConnectorTagArgs>> tags;
        private @Nullable Input<String> vpcConnectorName;

        public Builder() {
    	      // Empty
        }

        public Builder(VpcConnectorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.securityGroups = defaults.securityGroups;
    	      this.subnets = defaults.subnets;
    	      this.tags = defaults.tags;
    	      this.vpcConnectorName = defaults.vpcConnectorName;
        }

        public Builder setSecurityGroups(@Nullable Input<List<String>> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }

        public Builder setSecurityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = Input.ofNullable(securityGroups);
            return this;
        }

        public Builder setSubnets(Input<List<String>> subnets) {
            this.subnets = Objects.requireNonNull(subnets);
            return this;
        }

        public Builder setSubnets(List<String> subnets) {
            this.subnets = Input.of(Objects.requireNonNull(subnets));
            return this;
        }

        public Builder setTags(@Nullable Input<List<VpcConnectorTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<VpcConnectorTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVpcConnectorName(@Nullable Input<String> vpcConnectorName) {
            this.vpcConnectorName = vpcConnectorName;
            return this;
        }

        public Builder setVpcConnectorName(@Nullable String vpcConnectorName) {
            this.vpcConnectorName = Input.ofNullable(vpcConnectorName);
            return this;
        }

        public VpcConnectorArgs build() {
            return new VpcConnectorArgs(securityGroups, subnets, tags, vpcConnectorName);
        }
    }
}
