// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apprunner.inputs;

import io.pulumi.awsnative.apprunner.enums.ServiceCodeConfigurationValuesRuntime;
import io.pulumi.awsnative.apprunner.inputs.ServiceKeyValuePairArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Code Configuration Values
 * 
 */
public final class ServiceCodeConfigurationValuesArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceCodeConfigurationValuesArgs Empty = new ServiceCodeConfigurationValuesArgs();

    /**
     * Build Command
     * 
     */
    @Import(name="buildCommand")
      private final @Nullable Output<String> buildCommand;

    public Output<String> getBuildCommand() {
        return this.buildCommand == null ? Codegen.empty() : this.buildCommand;
    }

    /**
     * Port
     * 
     */
    @Import(name="port")
      private final @Nullable Output<String> port;

    public Output<String> getPort() {
        return this.port == null ? Codegen.empty() : this.port;
    }

    /**
     * Runtime
     * 
     */
    @Import(name="runtime", required=true)
      private final Output<ServiceCodeConfigurationValuesRuntime> runtime;

    public Output<ServiceCodeConfigurationValuesRuntime> getRuntime() {
        return this.runtime;
    }

    @Import(name="runtimeEnvironmentVariables")
      private final @Nullable Output<List<ServiceKeyValuePairArgs>> runtimeEnvironmentVariables;

    public Output<List<ServiceKeyValuePairArgs>> getRuntimeEnvironmentVariables() {
        return this.runtimeEnvironmentVariables == null ? Codegen.empty() : this.runtimeEnvironmentVariables;
    }

    /**
     * Start Command
     * 
     */
    @Import(name="startCommand")
      private final @Nullable Output<String> startCommand;

    public Output<String> getStartCommand() {
        return this.startCommand == null ? Codegen.empty() : this.startCommand;
    }

    public ServiceCodeConfigurationValuesArgs(
        @Nullable Output<String> buildCommand,
        @Nullable Output<String> port,
        Output<ServiceCodeConfigurationValuesRuntime> runtime,
        @Nullable Output<List<ServiceKeyValuePairArgs>> runtimeEnvironmentVariables,
        @Nullable Output<String> startCommand) {
        this.buildCommand = buildCommand;
        this.port = port;
        this.runtime = Objects.requireNonNull(runtime, "expected parameter 'runtime' to be non-null");
        this.runtimeEnvironmentVariables = runtimeEnvironmentVariables;
        this.startCommand = startCommand;
    }

    private ServiceCodeConfigurationValuesArgs() {
        this.buildCommand = Codegen.empty();
        this.port = Codegen.empty();
        this.runtime = Codegen.empty();
        this.runtimeEnvironmentVariables = Codegen.empty();
        this.startCommand = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceCodeConfigurationValuesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> buildCommand;
        private @Nullable Output<String> port;
        private Output<ServiceCodeConfigurationValuesRuntime> runtime;
        private @Nullable Output<List<ServiceKeyValuePairArgs>> runtimeEnvironmentVariables;
        private @Nullable Output<String> startCommand;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceCodeConfigurationValuesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildCommand = defaults.buildCommand;
    	      this.port = defaults.port;
    	      this.runtime = defaults.runtime;
    	      this.runtimeEnvironmentVariables = defaults.runtimeEnvironmentVariables;
    	      this.startCommand = defaults.startCommand;
        }

        public Builder buildCommand(@Nullable Output<String> buildCommand) {
            this.buildCommand = buildCommand;
            return this;
        }
        public Builder buildCommand(@Nullable String buildCommand) {
            this.buildCommand = Codegen.ofNullable(buildCommand);
            return this;
        }
        public Builder port(@Nullable Output<String> port) {
            this.port = port;
            return this;
        }
        public Builder port(@Nullable String port) {
            this.port = Codegen.ofNullable(port);
            return this;
        }
        public Builder runtime(Output<ServiceCodeConfigurationValuesRuntime> runtime) {
            this.runtime = Objects.requireNonNull(runtime);
            return this;
        }
        public Builder runtime(ServiceCodeConfigurationValuesRuntime runtime) {
            this.runtime = Output.of(Objects.requireNonNull(runtime));
            return this;
        }
        public Builder runtimeEnvironmentVariables(@Nullable Output<List<ServiceKeyValuePairArgs>> runtimeEnvironmentVariables) {
            this.runtimeEnvironmentVariables = runtimeEnvironmentVariables;
            return this;
        }
        public Builder runtimeEnvironmentVariables(@Nullable List<ServiceKeyValuePairArgs> runtimeEnvironmentVariables) {
            this.runtimeEnvironmentVariables = Codegen.ofNullable(runtimeEnvironmentVariables);
            return this;
        }
        public Builder runtimeEnvironmentVariables(ServiceKeyValuePairArgs... runtimeEnvironmentVariables) {
            return runtimeEnvironmentVariables(List.of(runtimeEnvironmentVariables));
        }
        public Builder startCommand(@Nullable Output<String> startCommand) {
            this.startCommand = startCommand;
            return this;
        }
        public Builder startCommand(@Nullable String startCommand) {
            this.startCommand = Codegen.ofNullable(startCommand);
            return this;
        }        public ServiceCodeConfigurationValuesArgs build() {
            return new ServiceCodeConfigurationValuesArgs(buildCommand, port, runtime, runtimeEnvironmentVariables, startCommand);
        }
    }
}
