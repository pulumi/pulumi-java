// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight;

import io.pulumi.awsnative.quicksight.inputs.DashboardParametersArgs;
import io.pulumi.awsnative.quicksight.inputs.DashboardPublishOptionsArgs;
import io.pulumi.awsnative.quicksight.inputs.DashboardResourcePermissionArgs;
import io.pulumi.awsnative.quicksight.inputs.DashboardSourceEntityArgs;
import io.pulumi.awsnative.quicksight.inputs.DashboardTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DashboardArgs extends io.pulumi.resources.ResourceArgs {

    public static final DashboardArgs Empty = new DashboardArgs();

    @InputImport(name="awsAccountId", required=true)
    private final Input<String> awsAccountId;

    public Input<String> getAwsAccountId() {
        return this.awsAccountId;
    }

    @InputImport(name="dashboardId", required=true)
    private final Input<String> dashboardId;

    public Input<String> getDashboardId() {
        return this.dashboardId;
    }

    @InputImport(name="dashboardPublishOptions")
    private final @Nullable Input<DashboardPublishOptionsArgs> dashboardPublishOptions;

    public Input<DashboardPublishOptionsArgs> getDashboardPublishOptions() {
        return this.dashboardPublishOptions == null ? Input.empty() : this.dashboardPublishOptions;
    }

    /**
     * <p>The display name of the dashboard.</p>
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="parameters")
    private final @Nullable Input<DashboardParametersArgs> parameters;

    public Input<DashboardParametersArgs> getParameters() {
        return this.parameters == null ? Input.empty() : this.parameters;
    }

    /**
     * <p>A structure that contains the permissions of the dashboard. You can use this structure
     *             for granting permissions by providing a list of IAM action information for each
     *             principal ARN. </p>
     * 
     *         <p>To specify no permissions, omit the permissions list.</p>
     * 
     */
    @InputImport(name="permissions")
    private final @Nullable Input<List<DashboardResourcePermissionArgs>> permissions;

    public Input<List<DashboardResourcePermissionArgs>> getPermissions() {
        return this.permissions == null ? Input.empty() : this.permissions;
    }

    @InputImport(name="sourceEntity", required=true)
    private final Input<DashboardSourceEntityArgs> sourceEntity;

    public Input<DashboardSourceEntityArgs> getSourceEntity() {
        return this.sourceEntity;
    }

    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             dashboard.</p>
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<List<DashboardTagArgs>> tags;

    public Input<List<DashboardTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * <p>The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If
     *             you add a value for this field, it overrides the value that is used in the source
     *             entity. The theme ARN must exist in the same AWS account where you create the
     *             dashboard.</p>
     * 
     */
    @InputImport(name="themeArn")
    private final @Nullable Input<String> themeArn;

    public Input<String> getThemeArn() {
        return this.themeArn == null ? Input.empty() : this.themeArn;
    }

    /**
     * <p>A description for the first version of the dashboard being created.</p>
     * 
     */
    @InputImport(name="versionDescription")
    private final @Nullable Input<String> versionDescription;

    public Input<String> getVersionDescription() {
        return this.versionDescription == null ? Input.empty() : this.versionDescription;
    }

    public DashboardArgs(
        Input<String> awsAccountId,
        Input<String> dashboardId,
        @Nullable Input<DashboardPublishOptionsArgs> dashboardPublishOptions,
        @Nullable Input<String> name,
        @Nullable Input<DashboardParametersArgs> parameters,
        @Nullable Input<List<DashboardResourcePermissionArgs>> permissions,
        Input<DashboardSourceEntityArgs> sourceEntity,
        @Nullable Input<List<DashboardTagArgs>> tags,
        @Nullable Input<String> themeArn,
        @Nullable Input<String> versionDescription) {
        this.awsAccountId = Objects.requireNonNull(awsAccountId, "expected parameter 'awsAccountId' to be non-null");
        this.dashboardId = Objects.requireNonNull(dashboardId, "expected parameter 'dashboardId' to be non-null");
        this.dashboardPublishOptions = dashboardPublishOptions;
        this.name = name;
        this.parameters = parameters;
        this.permissions = permissions;
        this.sourceEntity = Objects.requireNonNull(sourceEntity, "expected parameter 'sourceEntity' to be non-null");
        this.tags = tags;
        this.themeArn = themeArn;
        this.versionDescription = versionDescription;
    }

    private DashboardArgs() {
        this.awsAccountId = Input.empty();
        this.dashboardId = Input.empty();
        this.dashboardPublishOptions = Input.empty();
        this.name = Input.empty();
        this.parameters = Input.empty();
        this.permissions = Input.empty();
        this.sourceEntity = Input.empty();
        this.tags = Input.empty();
        this.themeArn = Input.empty();
        this.versionDescription = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> awsAccountId;
        private Input<String> dashboardId;
        private @Nullable Input<DashboardPublishOptionsArgs> dashboardPublishOptions;
        private @Nullable Input<String> name;
        private @Nullable Input<DashboardParametersArgs> parameters;
        private @Nullable Input<List<DashboardResourcePermissionArgs>> permissions;
        private Input<DashboardSourceEntityArgs> sourceEntity;
        private @Nullable Input<List<DashboardTagArgs>> tags;
        private @Nullable Input<String> themeArn;
        private @Nullable Input<String> versionDescription;

        public Builder() {
    	      // Empty
        }

        public Builder(DashboardArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsAccountId = defaults.awsAccountId;
    	      this.dashboardId = defaults.dashboardId;
    	      this.dashboardPublishOptions = defaults.dashboardPublishOptions;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.permissions = defaults.permissions;
    	      this.sourceEntity = defaults.sourceEntity;
    	      this.tags = defaults.tags;
    	      this.themeArn = defaults.themeArn;
    	      this.versionDescription = defaults.versionDescription;
        }

        public Builder setAwsAccountId(Input<String> awsAccountId) {
            this.awsAccountId = Objects.requireNonNull(awsAccountId);
            return this;
        }

        public Builder setAwsAccountId(String awsAccountId) {
            this.awsAccountId = Input.of(Objects.requireNonNull(awsAccountId));
            return this;
        }

        public Builder setDashboardId(Input<String> dashboardId) {
            this.dashboardId = Objects.requireNonNull(dashboardId);
            return this;
        }

        public Builder setDashboardId(String dashboardId) {
            this.dashboardId = Input.of(Objects.requireNonNull(dashboardId));
            return this;
        }

        public Builder setDashboardPublishOptions(@Nullable Input<DashboardPublishOptionsArgs> dashboardPublishOptions) {
            this.dashboardPublishOptions = dashboardPublishOptions;
            return this;
        }

        public Builder setDashboardPublishOptions(@Nullable DashboardPublishOptionsArgs dashboardPublishOptions) {
            this.dashboardPublishOptions = Input.ofNullable(dashboardPublishOptions);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setParameters(@Nullable Input<DashboardParametersArgs> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setParameters(@Nullable DashboardParametersArgs parameters) {
            this.parameters = Input.ofNullable(parameters);
            return this;
        }

        public Builder setPermissions(@Nullable Input<List<DashboardResourcePermissionArgs>> permissions) {
            this.permissions = permissions;
            return this;
        }

        public Builder setPermissions(@Nullable List<DashboardResourcePermissionArgs> permissions) {
            this.permissions = Input.ofNullable(permissions);
            return this;
        }

        public Builder setSourceEntity(Input<DashboardSourceEntityArgs> sourceEntity) {
            this.sourceEntity = Objects.requireNonNull(sourceEntity);
            return this;
        }

        public Builder setSourceEntity(DashboardSourceEntityArgs sourceEntity) {
            this.sourceEntity = Input.of(Objects.requireNonNull(sourceEntity));
            return this;
        }

        public Builder setTags(@Nullable Input<List<DashboardTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<DashboardTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setThemeArn(@Nullable Input<String> themeArn) {
            this.themeArn = themeArn;
            return this;
        }

        public Builder setThemeArn(@Nullable String themeArn) {
            this.themeArn = Input.ofNullable(themeArn);
            return this;
        }

        public Builder setVersionDescription(@Nullable Input<String> versionDescription) {
            this.versionDescription = versionDescription;
            return this;
        }

        public Builder setVersionDescription(@Nullable String versionDescription) {
            this.versionDescription = Input.ofNullable(versionDescription);
            return this;
        }

        public DashboardArgs build() {
            return new DashboardArgs(awsAccountId, dashboardId, dashboardPublishOptions, name, parameters, permissions, sourceEntity, tags, themeArn, versionDescription);
        }
    }
}
