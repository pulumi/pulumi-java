// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apigateway.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UsagePlanApiStageArgs extends io.pulumi.resources.ResourceArgs {

    public static final UsagePlanApiStageArgs Empty = new UsagePlanApiStageArgs();

    /**
     * The ID of an API that is in the specified Stage property that you want to associate with the usage plan.
     * 
     */
    @Import(name="apiId")
      private final @Nullable Output<String> apiId;

    public Output<String> getApiId() {
        return this.apiId == null ? Output.empty() : this.apiId;
    }

    /**
     * The name of the stage to associate with the usage plan.
     * 
     */
    @Import(name="stage")
      private final @Nullable Output<String> stage;

    public Output<String> getStage() {
        return this.stage == null ? Output.empty() : this.stage;
    }

    /**
     * Map containing method-level throttling information for an API stage in a usage plan. The key for the map is the path and method for which to configure custom throttling, for example, '/pets/GET'. Duplicates are not allowed.
     * 
     */
    @Import(name="throttle")
      private final @Nullable Output<Object> throttle;

    public Output<Object> getThrottle() {
        return this.throttle == null ? Output.empty() : this.throttle;
    }

    public UsagePlanApiStageArgs(
        @Nullable Output<String> apiId,
        @Nullable Output<String> stage,
        @Nullable Output<Object> throttle) {
        this.apiId = apiId;
        this.stage = stage;
        this.throttle = throttle;
    }

    private UsagePlanApiStageArgs() {
        this.apiId = Output.empty();
        this.stage = Output.empty();
        this.throttle = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UsagePlanApiStageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> apiId;
        private @Nullable Output<String> stage;
        private @Nullable Output<Object> throttle;

        public Builder() {
    	      // Empty
        }

        public Builder(UsagePlanApiStageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiId = defaults.apiId;
    	      this.stage = defaults.stage;
    	      this.throttle = defaults.throttle;
        }

        public Builder apiId(@Nullable Output<String> apiId) {
            this.apiId = apiId;
            return this;
        }

        public Builder apiId(@Nullable String apiId) {
            this.apiId = Output.ofNullable(apiId);
            return this;
        }

        public Builder stage(@Nullable Output<String> stage) {
            this.stage = stage;
            return this;
        }

        public Builder stage(@Nullable String stage) {
            this.stage = Output.ofNullable(stage);
            return this;
        }

        public Builder throttle(@Nullable Output<Object> throttle) {
            this.throttle = throttle;
            return this;
        }

        public Builder throttle(@Nullable Object throttle) {
            this.throttle = Output.ofNullable(throttle);
            return this;
        }
        public UsagePlanApiStageArgs build() {
            return new UsagePlanApiStageArgs(apiId, stage, throttle);
        }
    }
}
