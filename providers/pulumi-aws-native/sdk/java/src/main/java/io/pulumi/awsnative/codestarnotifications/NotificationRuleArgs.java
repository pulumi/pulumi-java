// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.codestarnotifications;

import io.pulumi.awsnative.codestarnotifications.enums.NotificationRuleDetailType;
import io.pulumi.awsnative.codestarnotifications.enums.NotificationRuleStatus;
import io.pulumi.awsnative.codestarnotifications.inputs.NotificationRuleTargetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NotificationRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final NotificationRuleArgs Empty = new NotificationRuleArgs();

    @InputImport(name="createdBy")
      private final @Nullable Output<String> createdBy;

    public Output<String> getCreatedBy() {
        return this.createdBy == null ? Output.empty() : this.createdBy;
    }

    @InputImport(name="detailType", required=true)
      private final Output<NotificationRuleDetailType> detailType;

    public Output<NotificationRuleDetailType> getDetailType() {
        return this.detailType;
    }

    @InputImport(name="eventTypeId")
      private final @Nullable Output<String> eventTypeId;

    public Output<String> getEventTypeId() {
        return this.eventTypeId == null ? Output.empty() : this.eventTypeId;
    }

    @InputImport(name="eventTypeIds", required=true)
      private final Output<List<String>> eventTypeIds;

    public Output<List<String>> getEventTypeIds() {
        return this.eventTypeIds;
    }

    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    @InputImport(name="resource", required=true)
      private final Output<String> resource;

    public Output<String> getResource() {
        return this.resource;
    }

    @InputImport(name="status")
      private final @Nullable Output<NotificationRuleStatus> status;

    public Output<NotificationRuleStatus> getStatus() {
        return this.status == null ? Output.empty() : this.status;
    }

    @InputImport(name="tags")
      private final @Nullable Output<Object> tags;

    public Output<Object> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    @InputImport(name="targetAddress")
      private final @Nullable Output<String> targetAddress;

    public Output<String> getTargetAddress() {
        return this.targetAddress == null ? Output.empty() : this.targetAddress;
    }

    @InputImport(name="targets", required=true)
      private final Output<List<NotificationRuleTargetArgs>> targets;

    public Output<List<NotificationRuleTargetArgs>> getTargets() {
        return this.targets;
    }

    public NotificationRuleArgs(
        @Nullable Output<String> createdBy,
        Output<NotificationRuleDetailType> detailType,
        @Nullable Output<String> eventTypeId,
        Output<List<String>> eventTypeIds,
        @Nullable Output<String> name,
        Output<String> resource,
        @Nullable Output<NotificationRuleStatus> status,
        @Nullable Output<Object> tags,
        @Nullable Output<String> targetAddress,
        Output<List<NotificationRuleTargetArgs>> targets) {
        this.createdBy = createdBy;
        this.detailType = Objects.requireNonNull(detailType, "expected parameter 'detailType' to be non-null");
        this.eventTypeId = eventTypeId;
        this.eventTypeIds = Objects.requireNonNull(eventTypeIds, "expected parameter 'eventTypeIds' to be non-null");
        this.name = name;
        this.resource = Objects.requireNonNull(resource, "expected parameter 'resource' to be non-null");
        this.status = status;
        this.tags = tags;
        this.targetAddress = targetAddress;
        this.targets = Objects.requireNonNull(targets, "expected parameter 'targets' to be non-null");
    }

    private NotificationRuleArgs() {
        this.createdBy = Output.empty();
        this.detailType = Output.empty();
        this.eventTypeId = Output.empty();
        this.eventTypeIds = Output.empty();
        this.name = Output.empty();
        this.resource = Output.empty();
        this.status = Output.empty();
        this.tags = Output.empty();
        this.targetAddress = Output.empty();
        this.targets = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> createdBy;
        private Output<NotificationRuleDetailType> detailType;
        private @Nullable Output<String> eventTypeId;
        private Output<List<String>> eventTypeIds;
        private @Nullable Output<String> name;
        private Output<String> resource;
        private @Nullable Output<NotificationRuleStatus> status;
        private @Nullable Output<Object> tags;
        private @Nullable Output<String> targetAddress;
        private Output<List<NotificationRuleTargetArgs>> targets;

        public Builder() {
    	      // Empty
        }

        public Builder(NotificationRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdBy = defaults.createdBy;
    	      this.detailType = defaults.detailType;
    	      this.eventTypeId = defaults.eventTypeId;
    	      this.eventTypeIds = defaults.eventTypeIds;
    	      this.name = defaults.name;
    	      this.resource = defaults.resource;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.targetAddress = defaults.targetAddress;
    	      this.targets = defaults.targets;
        }

        public Builder createdBy(@Nullable Output<String> createdBy) {
            this.createdBy = createdBy;
            return this;
        }

        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = Output.ofNullable(createdBy);
            return this;
        }

        public Builder detailType(Output<NotificationRuleDetailType> detailType) {
            this.detailType = Objects.requireNonNull(detailType);
            return this;
        }

        public Builder detailType(NotificationRuleDetailType detailType) {
            this.detailType = Output.of(Objects.requireNonNull(detailType));
            return this;
        }

        public Builder eventTypeId(@Nullable Output<String> eventTypeId) {
            this.eventTypeId = eventTypeId;
            return this;
        }

        public Builder eventTypeId(@Nullable String eventTypeId) {
            this.eventTypeId = Output.ofNullable(eventTypeId);
            return this;
        }

        public Builder eventTypeIds(Output<List<String>> eventTypeIds) {
            this.eventTypeIds = Objects.requireNonNull(eventTypeIds);
            return this;
        }

        public Builder eventTypeIds(List<String> eventTypeIds) {
            this.eventTypeIds = Output.of(Objects.requireNonNull(eventTypeIds));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder resource(Output<String> resource) {
            this.resource = Objects.requireNonNull(resource);
            return this;
        }

        public Builder resource(String resource) {
            this.resource = Output.of(Objects.requireNonNull(resource));
            return this;
        }

        public Builder status(@Nullable Output<NotificationRuleStatus> status) {
            this.status = status;
            return this;
        }

        public Builder status(@Nullable NotificationRuleStatus status) {
            this.status = Output.ofNullable(status);
            return this;
        }

        public Builder tags(@Nullable Output<Object> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Object tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder targetAddress(@Nullable Output<String> targetAddress) {
            this.targetAddress = targetAddress;
            return this;
        }

        public Builder targetAddress(@Nullable String targetAddress) {
            this.targetAddress = Output.ofNullable(targetAddress);
            return this;
        }

        public Builder targets(Output<List<NotificationRuleTargetArgs>> targets) {
            this.targets = Objects.requireNonNull(targets);
            return this;
        }

        public Builder targets(List<NotificationRuleTargetArgs> targets) {
            this.targets = Output.of(Objects.requireNonNull(targets));
            return this;
        }
        public NotificationRuleArgs build() {
            return new NotificationRuleArgs(createdBy, detailType, eventTypeId, eventTypeIds, name, resource, status, tags, targetAddress, targets);
        }
    }
}
