// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.macie;

import io.pulumi.awsnative.macie.enums.FindingsFilterFindingFilterAction;
import io.pulumi.awsnative.macie.inputs.FindingsFilterFindingCriteriaArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FindingsFilterArgs extends io.pulumi.resources.ResourceArgs {

    public static final FindingsFilterArgs Empty = new FindingsFilterArgs();

    /**
     * Findings filter action.
     * 
     */
    @InputImport(name="action")
        private final @Nullable Input<FindingsFilterFindingFilterAction> action;

    public Input<FindingsFilterFindingFilterAction> getAction() {
        return this.action == null ? Input.empty() : this.action;
    }

    /**
     * Findings filter description
     * 
     */
    @InputImport(name="description")
        private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Findings filter criteria.
     * 
     */
    @InputImport(name="findingCriteria", required=true)
        private final Input<FindingsFilterFindingCriteriaArgs> findingCriteria;

    public Input<FindingsFilterFindingCriteriaArgs> getFindingCriteria() {
        return this.findingCriteria;
    }

    /**
     * Findings filter name
     * 
     */
    @InputImport(name="name")
        private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Findings filter position.
     * 
     */
    @InputImport(name="position")
        private final @Nullable Input<Integer> position;

    public Input<Integer> getPosition() {
        return this.position == null ? Input.empty() : this.position;
    }

    public FindingsFilterArgs(
        @Nullable Input<FindingsFilterFindingFilterAction> action,
        @Nullable Input<String> description,
        Input<FindingsFilterFindingCriteriaArgs> findingCriteria,
        @Nullable Input<String> name,
        @Nullable Input<Integer> position) {
        this.action = action;
        this.description = description;
        this.findingCriteria = Objects.requireNonNull(findingCriteria, "expected parameter 'findingCriteria' to be non-null");
        this.name = name;
        this.position = position;
    }

    private FindingsFilterArgs() {
        this.action = Input.empty();
        this.description = Input.empty();
        this.findingCriteria = Input.empty();
        this.name = Input.empty();
        this.position = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FindingsFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<FindingsFilterFindingFilterAction> action;
        private @Nullable Input<String> description;
        private Input<FindingsFilterFindingCriteriaArgs> findingCriteria;
        private @Nullable Input<String> name;
        private @Nullable Input<Integer> position;

        public Builder() {
    	      // Empty
        }

        public Builder(FindingsFilterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.description = defaults.description;
    	      this.findingCriteria = defaults.findingCriteria;
    	      this.name = defaults.name;
    	      this.position = defaults.position;
        }

        public Builder setAction(@Nullable Input<FindingsFilterFindingFilterAction> action) {
            this.action = action;
            return this;
        }

        public Builder setAction(@Nullable FindingsFilterFindingFilterAction action) {
            this.action = Input.ofNullable(action);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setFindingCriteria(Input<FindingsFilterFindingCriteriaArgs> findingCriteria) {
            this.findingCriteria = Objects.requireNonNull(findingCriteria);
            return this;
        }

        public Builder setFindingCriteria(FindingsFilterFindingCriteriaArgs findingCriteria) {
            this.findingCriteria = Input.of(Objects.requireNonNull(findingCriteria));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPosition(@Nullable Input<Integer> position) {
            this.position = position;
            return this;
        }

        public Builder setPosition(@Nullable Integer position) {
            this.position = Input.ofNullable(position);
            return this;
        }
        public FindingsFilterArgs build() {
            return new FindingsFilterArgs(action, description, findingCriteria, name, position);
        }
    }
}
