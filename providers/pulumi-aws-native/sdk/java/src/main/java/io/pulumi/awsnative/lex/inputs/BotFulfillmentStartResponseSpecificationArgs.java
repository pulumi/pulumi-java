// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lex.inputs;

import io.pulumi.awsnative.lex.inputs.BotMessageGroupArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Provides settings for a message that is sent to the user when a fulfillment Lambda function starts running.
 * 
 */
public final class BotFulfillmentStartResponseSpecificationArgs extends io.pulumi.resources.ResourceArgs {

    public static final BotFulfillmentStartResponseSpecificationArgs Empty = new BotFulfillmentStartResponseSpecificationArgs();

    /**
     * Determines whether the user can interrupt the start message while it is playing.
     * 
     */
    @Import(name="allowInterrupt")
      private final @Nullable Output<Boolean> allowInterrupt;

    public Output<Boolean> getAllowInterrupt() {
        return this.allowInterrupt == null ? Output.empty() : this.allowInterrupt;
    }

    /**
     * The delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn't played.
     * 
     */
    @Import(name="delayInSeconds", required=true)
      private final Output<Integer> delayInSeconds;

    public Output<Integer> getDelayInSeconds() {
        return this.delayInSeconds;
    }

    @Import(name="messageGroups", required=true)
      private final Output<List<BotMessageGroupArgs>> messageGroups;

    public Output<List<BotMessageGroupArgs>> getMessageGroups() {
        return this.messageGroups;
    }

    public BotFulfillmentStartResponseSpecificationArgs(
        @Nullable Output<Boolean> allowInterrupt,
        Output<Integer> delayInSeconds,
        Output<List<BotMessageGroupArgs>> messageGroups) {
        this.allowInterrupt = allowInterrupt;
        this.delayInSeconds = Objects.requireNonNull(delayInSeconds, "expected parameter 'delayInSeconds' to be non-null");
        this.messageGroups = Objects.requireNonNull(messageGroups, "expected parameter 'messageGroups' to be non-null");
    }

    private BotFulfillmentStartResponseSpecificationArgs() {
        this.allowInterrupt = Output.empty();
        this.delayInSeconds = Output.empty();
        this.messageGroups = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BotFulfillmentStartResponseSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> allowInterrupt;
        private Output<Integer> delayInSeconds;
        private Output<List<BotMessageGroupArgs>> messageGroups;

        public Builder() {
    	      // Empty
        }

        public Builder(BotFulfillmentStartResponseSpecificationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowInterrupt = defaults.allowInterrupt;
    	      this.delayInSeconds = defaults.delayInSeconds;
    	      this.messageGroups = defaults.messageGroups;
        }

        public Builder allowInterrupt(@Nullable Output<Boolean> allowInterrupt) {
            this.allowInterrupt = allowInterrupt;
            return this;
        }

        public Builder allowInterrupt(@Nullable Boolean allowInterrupt) {
            this.allowInterrupt = Output.ofNullable(allowInterrupt);
            return this;
        }

        public Builder delayInSeconds(Output<Integer> delayInSeconds) {
            this.delayInSeconds = Objects.requireNonNull(delayInSeconds);
            return this;
        }

        public Builder delayInSeconds(Integer delayInSeconds) {
            this.delayInSeconds = Output.of(Objects.requireNonNull(delayInSeconds));
            return this;
        }

        public Builder messageGroups(Output<List<BotMessageGroupArgs>> messageGroups) {
            this.messageGroups = Objects.requireNonNull(messageGroups);
            return this;
        }

        public Builder messageGroups(List<BotMessageGroupArgs> messageGroups) {
            this.messageGroups = Output.of(Objects.requireNonNull(messageGroups));
            return this;
        }
        public BotFulfillmentStartResponseSpecificationArgs build() {
            return new BotFulfillmentStartResponseSpecificationArgs(allowInterrupt, delayInSeconds, messageGroups);
        }
    }
}
