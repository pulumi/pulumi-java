// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.customerprofiles.inputs;

import io.pulumi.awsnative.customerprofiles.enums.IntegrationTriggerType;
import io.pulumi.awsnative.customerprofiles.inputs.IntegrationTriggerPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IntegrationTriggerConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final IntegrationTriggerConfigArgs Empty = new IntegrationTriggerConfigArgs();

    @InputImport(name="triggerProperties")
      private final @Nullable Input<IntegrationTriggerPropertiesArgs> triggerProperties;

    public Input<IntegrationTriggerPropertiesArgs> getTriggerProperties() {
        return this.triggerProperties == null ? Input.empty() : this.triggerProperties;
    }

    @InputImport(name="triggerType", required=true)
      private final Input<IntegrationTriggerType> triggerType;

    public Input<IntegrationTriggerType> getTriggerType() {
        return this.triggerType;
    }

    public IntegrationTriggerConfigArgs(
        @Nullable Input<IntegrationTriggerPropertiesArgs> triggerProperties,
        Input<IntegrationTriggerType> triggerType) {
        this.triggerProperties = triggerProperties;
        this.triggerType = Objects.requireNonNull(triggerType, "expected parameter 'triggerType' to be non-null");
    }

    private IntegrationTriggerConfigArgs() {
        this.triggerProperties = Input.empty();
        this.triggerType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationTriggerConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<IntegrationTriggerPropertiesArgs> triggerProperties;
        private Input<IntegrationTriggerType> triggerType;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationTriggerConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.triggerProperties = defaults.triggerProperties;
    	      this.triggerType = defaults.triggerType;
        }

        public Builder triggerProperties(@Nullable Input<IntegrationTriggerPropertiesArgs> triggerProperties) {
            this.triggerProperties = triggerProperties;
            return this;
        }

        public Builder triggerProperties(@Nullable IntegrationTriggerPropertiesArgs triggerProperties) {
            this.triggerProperties = Input.ofNullable(triggerProperties);
            return this;
        }

        public Builder triggerType(Input<IntegrationTriggerType> triggerType) {
            this.triggerType = Objects.requireNonNull(triggerType);
            return this;
        }

        public Builder triggerType(IntegrationTriggerType triggerType) {
            this.triggerType = Input.of(Objects.requireNonNull(triggerType));
            return this;
        }
        public IntegrationTriggerConfigArgs build() {
            return new IntegrationTriggerConfigArgs(triggerProperties, triggerType);
        }
    }
}
