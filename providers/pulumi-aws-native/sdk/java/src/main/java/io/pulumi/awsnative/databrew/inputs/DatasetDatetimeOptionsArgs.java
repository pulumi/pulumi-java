// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatasetDatetimeOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetDatetimeOptionsArgs Empty = new DatasetDatetimeOptionsArgs();

    /**
     * Date/time format of a date parameter
     * 
     */
    @InputImport(name="format", required=true)
      private final Output<String> format;

    public Output<String> getFormat() {
        return this.format;
    }

    /**
     * Locale code for a date parameter
     * 
     */
    @InputImport(name="localeCode")
      private final @Nullable Output<String> localeCode;

    public Output<String> getLocaleCode() {
        return this.localeCode == null ? Output.empty() : this.localeCode;
    }

    /**
     * Timezone offset
     * 
     */
    @InputImport(name="timezoneOffset")
      private final @Nullable Output<String> timezoneOffset;

    public Output<String> getTimezoneOffset() {
        return this.timezoneOffset == null ? Output.empty() : this.timezoneOffset;
    }

    public DatasetDatetimeOptionsArgs(
        Output<String> format,
        @Nullable Output<String> localeCode,
        @Nullable Output<String> timezoneOffset) {
        this.format = Objects.requireNonNull(format, "expected parameter 'format' to be non-null");
        this.localeCode = localeCode;
        this.timezoneOffset = timezoneOffset;
    }

    private DatasetDatetimeOptionsArgs() {
        this.format = Output.empty();
        this.localeCode = Output.empty();
        this.timezoneOffset = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetDatetimeOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> format;
        private @Nullable Output<String> localeCode;
        private @Nullable Output<String> timezoneOffset;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetDatetimeOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.format = defaults.format;
    	      this.localeCode = defaults.localeCode;
    	      this.timezoneOffset = defaults.timezoneOffset;
        }

        public Builder format(Output<String> format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }

        public Builder format(String format) {
            this.format = Output.of(Objects.requireNonNull(format));
            return this;
        }

        public Builder localeCode(@Nullable Output<String> localeCode) {
            this.localeCode = localeCode;
            return this;
        }

        public Builder localeCode(@Nullable String localeCode) {
            this.localeCode = Output.ofNullable(localeCode);
            return this;
        }

        public Builder timezoneOffset(@Nullable Output<String> timezoneOffset) {
            this.timezoneOffset = timezoneOffset;
            return this;
        }

        public Builder timezoneOffset(@Nullable String timezoneOffset) {
            this.timezoneOffset = Output.ofNullable(timezoneOffset);
            return this;
        }
        public DatasetDatetimeOptionsArgs build() {
            return new DatasetDatetimeOptionsArgs(format, localeCode, timezoneOffset);
        }
    }
}
