// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.dynamodb;

import io.pulumi.awsnative.dynamodb.inputs.GlobalTableAttributeDefinitionArgs;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableGlobalSecondaryIndexArgs;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableKeySchemaArgs;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableLocalSecondaryIndexArgs;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableReplicaSpecificationArgs;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableSSESpecificationArgs;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableStreamSpecificationArgs;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableTimeToLiveSpecificationArgs;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableWriteProvisionedThroughputSettingsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GlobalTableArgs extends io.pulumi.resources.ResourceArgs {

    public static final GlobalTableArgs Empty = new GlobalTableArgs();

    @InputImport(name="attributeDefinitions", required=true)
    private final Input<List<GlobalTableAttributeDefinitionArgs>> attributeDefinitions;

    public Input<List<GlobalTableAttributeDefinitionArgs>> getAttributeDefinitions() {
        return this.attributeDefinitions;
    }

    @InputImport(name="billingMode")
    private final @Nullable Input<String> billingMode;

    public Input<String> getBillingMode() {
        return this.billingMode == null ? Input.empty() : this.billingMode;
    }

    @InputImport(name="globalSecondaryIndexes")
    private final @Nullable Input<List<GlobalTableGlobalSecondaryIndexArgs>> globalSecondaryIndexes;

    public Input<List<GlobalTableGlobalSecondaryIndexArgs>> getGlobalSecondaryIndexes() {
        return this.globalSecondaryIndexes == null ? Input.empty() : this.globalSecondaryIndexes;
    }

    @InputImport(name="keySchema", required=true)
    private final Input<List<GlobalTableKeySchemaArgs>> keySchema;

    public Input<List<GlobalTableKeySchemaArgs>> getKeySchema() {
        return this.keySchema;
    }

    @InputImport(name="localSecondaryIndexes")
    private final @Nullable Input<List<GlobalTableLocalSecondaryIndexArgs>> localSecondaryIndexes;

    public Input<List<GlobalTableLocalSecondaryIndexArgs>> getLocalSecondaryIndexes() {
        return this.localSecondaryIndexes == null ? Input.empty() : this.localSecondaryIndexes;
    }

    @InputImport(name="replicas", required=true)
    private final Input<List<GlobalTableReplicaSpecificationArgs>> replicas;

    public Input<List<GlobalTableReplicaSpecificationArgs>> getReplicas() {
        return this.replicas;
    }

    @InputImport(name="sSESpecification")
    private final @Nullable Input<GlobalTableSSESpecificationArgs> sSESpecification;

    public Input<GlobalTableSSESpecificationArgs> getSSESpecification() {
        return this.sSESpecification == null ? Input.empty() : this.sSESpecification;
    }

    @InputImport(name="streamSpecification")
    private final @Nullable Input<GlobalTableStreamSpecificationArgs> streamSpecification;

    public Input<GlobalTableStreamSpecificationArgs> getStreamSpecification() {
        return this.streamSpecification == null ? Input.empty() : this.streamSpecification;
    }

    @InputImport(name="tableName")
    private final @Nullable Input<String> tableName;

    public Input<String> getTableName() {
        return this.tableName == null ? Input.empty() : this.tableName;
    }

    @InputImport(name="timeToLiveSpecification")
    private final @Nullable Input<GlobalTableTimeToLiveSpecificationArgs> timeToLiveSpecification;

    public Input<GlobalTableTimeToLiveSpecificationArgs> getTimeToLiveSpecification() {
        return this.timeToLiveSpecification == null ? Input.empty() : this.timeToLiveSpecification;
    }

    @InputImport(name="writeProvisionedThroughputSettings")
    private final @Nullable Input<GlobalTableWriteProvisionedThroughputSettingsArgs> writeProvisionedThroughputSettings;

    public Input<GlobalTableWriteProvisionedThroughputSettingsArgs> getWriteProvisionedThroughputSettings() {
        return this.writeProvisionedThroughputSettings == null ? Input.empty() : this.writeProvisionedThroughputSettings;
    }

    public GlobalTableArgs(
        Input<List<GlobalTableAttributeDefinitionArgs>> attributeDefinitions,
        @Nullable Input<String> billingMode,
        @Nullable Input<List<GlobalTableGlobalSecondaryIndexArgs>> globalSecondaryIndexes,
        Input<List<GlobalTableKeySchemaArgs>> keySchema,
        @Nullable Input<List<GlobalTableLocalSecondaryIndexArgs>> localSecondaryIndexes,
        Input<List<GlobalTableReplicaSpecificationArgs>> replicas,
        @Nullable Input<GlobalTableSSESpecificationArgs> sSESpecification,
        @Nullable Input<GlobalTableStreamSpecificationArgs> streamSpecification,
        @Nullable Input<String> tableName,
        @Nullable Input<GlobalTableTimeToLiveSpecificationArgs> timeToLiveSpecification,
        @Nullable Input<GlobalTableWriteProvisionedThroughputSettingsArgs> writeProvisionedThroughputSettings) {
        this.attributeDefinitions = Objects.requireNonNull(attributeDefinitions, "expected parameter 'attributeDefinitions' to be non-null");
        this.billingMode = billingMode;
        this.globalSecondaryIndexes = globalSecondaryIndexes;
        this.keySchema = Objects.requireNonNull(keySchema, "expected parameter 'keySchema' to be non-null");
        this.localSecondaryIndexes = localSecondaryIndexes;
        this.replicas = Objects.requireNonNull(replicas, "expected parameter 'replicas' to be non-null");
        this.sSESpecification = sSESpecification;
        this.streamSpecification = streamSpecification;
        this.tableName = tableName;
        this.timeToLiveSpecification = timeToLiveSpecification;
        this.writeProvisionedThroughputSettings = writeProvisionedThroughputSettings;
    }

    private GlobalTableArgs() {
        this.attributeDefinitions = Input.empty();
        this.billingMode = Input.empty();
        this.globalSecondaryIndexes = Input.empty();
        this.keySchema = Input.empty();
        this.localSecondaryIndexes = Input.empty();
        this.replicas = Input.empty();
        this.sSESpecification = Input.empty();
        this.streamSpecification = Input.empty();
        this.tableName = Input.empty();
        this.timeToLiveSpecification = Input.empty();
        this.writeProvisionedThroughputSettings = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GlobalTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<GlobalTableAttributeDefinitionArgs>> attributeDefinitions;
        private @Nullable Input<String> billingMode;
        private @Nullable Input<List<GlobalTableGlobalSecondaryIndexArgs>> globalSecondaryIndexes;
        private Input<List<GlobalTableKeySchemaArgs>> keySchema;
        private @Nullable Input<List<GlobalTableLocalSecondaryIndexArgs>> localSecondaryIndexes;
        private Input<List<GlobalTableReplicaSpecificationArgs>> replicas;
        private @Nullable Input<GlobalTableSSESpecificationArgs> sSESpecification;
        private @Nullable Input<GlobalTableStreamSpecificationArgs> streamSpecification;
        private @Nullable Input<String> tableName;
        private @Nullable Input<GlobalTableTimeToLiveSpecificationArgs> timeToLiveSpecification;
        private @Nullable Input<GlobalTableWriteProvisionedThroughputSettingsArgs> writeProvisionedThroughputSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(GlobalTableArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeDefinitions = defaults.attributeDefinitions;
    	      this.billingMode = defaults.billingMode;
    	      this.globalSecondaryIndexes = defaults.globalSecondaryIndexes;
    	      this.keySchema = defaults.keySchema;
    	      this.localSecondaryIndexes = defaults.localSecondaryIndexes;
    	      this.replicas = defaults.replicas;
    	      this.sSESpecification = defaults.sSESpecification;
    	      this.streamSpecification = defaults.streamSpecification;
    	      this.tableName = defaults.tableName;
    	      this.timeToLiveSpecification = defaults.timeToLiveSpecification;
    	      this.writeProvisionedThroughputSettings = defaults.writeProvisionedThroughputSettings;
        }

        public Builder setAttributeDefinitions(Input<List<GlobalTableAttributeDefinitionArgs>> attributeDefinitions) {
            this.attributeDefinitions = Objects.requireNonNull(attributeDefinitions);
            return this;
        }

        public Builder setAttributeDefinitions(List<GlobalTableAttributeDefinitionArgs> attributeDefinitions) {
            this.attributeDefinitions = Input.of(Objects.requireNonNull(attributeDefinitions));
            return this;
        }

        public Builder setBillingMode(@Nullable Input<String> billingMode) {
            this.billingMode = billingMode;
            return this;
        }

        public Builder setBillingMode(@Nullable String billingMode) {
            this.billingMode = Input.ofNullable(billingMode);
            return this;
        }

        public Builder setGlobalSecondaryIndexes(@Nullable Input<List<GlobalTableGlobalSecondaryIndexArgs>> globalSecondaryIndexes) {
            this.globalSecondaryIndexes = globalSecondaryIndexes;
            return this;
        }

        public Builder setGlobalSecondaryIndexes(@Nullable List<GlobalTableGlobalSecondaryIndexArgs> globalSecondaryIndexes) {
            this.globalSecondaryIndexes = Input.ofNullable(globalSecondaryIndexes);
            return this;
        }

        public Builder setKeySchema(Input<List<GlobalTableKeySchemaArgs>> keySchema) {
            this.keySchema = Objects.requireNonNull(keySchema);
            return this;
        }

        public Builder setKeySchema(List<GlobalTableKeySchemaArgs> keySchema) {
            this.keySchema = Input.of(Objects.requireNonNull(keySchema));
            return this;
        }

        public Builder setLocalSecondaryIndexes(@Nullable Input<List<GlobalTableLocalSecondaryIndexArgs>> localSecondaryIndexes) {
            this.localSecondaryIndexes = localSecondaryIndexes;
            return this;
        }

        public Builder setLocalSecondaryIndexes(@Nullable List<GlobalTableLocalSecondaryIndexArgs> localSecondaryIndexes) {
            this.localSecondaryIndexes = Input.ofNullable(localSecondaryIndexes);
            return this;
        }

        public Builder setReplicas(Input<List<GlobalTableReplicaSpecificationArgs>> replicas) {
            this.replicas = Objects.requireNonNull(replicas);
            return this;
        }

        public Builder setReplicas(List<GlobalTableReplicaSpecificationArgs> replicas) {
            this.replicas = Input.of(Objects.requireNonNull(replicas));
            return this;
        }

        public Builder setSSESpecification(@Nullable Input<GlobalTableSSESpecificationArgs> sSESpecification) {
            this.sSESpecification = sSESpecification;
            return this;
        }

        public Builder setSSESpecification(@Nullable GlobalTableSSESpecificationArgs sSESpecification) {
            this.sSESpecification = Input.ofNullable(sSESpecification);
            return this;
        }

        public Builder setStreamSpecification(@Nullable Input<GlobalTableStreamSpecificationArgs> streamSpecification) {
            this.streamSpecification = streamSpecification;
            return this;
        }

        public Builder setStreamSpecification(@Nullable GlobalTableStreamSpecificationArgs streamSpecification) {
            this.streamSpecification = Input.ofNullable(streamSpecification);
            return this;
        }

        public Builder setTableName(@Nullable Input<String> tableName) {
            this.tableName = tableName;
            return this;
        }

        public Builder setTableName(@Nullable String tableName) {
            this.tableName = Input.ofNullable(tableName);
            return this;
        }

        public Builder setTimeToLiveSpecification(@Nullable Input<GlobalTableTimeToLiveSpecificationArgs> timeToLiveSpecification) {
            this.timeToLiveSpecification = timeToLiveSpecification;
            return this;
        }

        public Builder setTimeToLiveSpecification(@Nullable GlobalTableTimeToLiveSpecificationArgs timeToLiveSpecification) {
            this.timeToLiveSpecification = Input.ofNullable(timeToLiveSpecification);
            return this;
        }

        public Builder setWriteProvisionedThroughputSettings(@Nullable Input<GlobalTableWriteProvisionedThroughputSettingsArgs> writeProvisionedThroughputSettings) {
            this.writeProvisionedThroughputSettings = writeProvisionedThroughputSettings;
            return this;
        }

        public Builder setWriteProvisionedThroughputSettings(@Nullable GlobalTableWriteProvisionedThroughputSettingsArgs writeProvisionedThroughputSettings) {
            this.writeProvisionedThroughputSettings = Input.ofNullable(writeProvisionedThroughputSettings);
            return this;
        }

        public GlobalTableArgs build() {
            return new GlobalTableArgs(attributeDefinitions, billingMode, globalSecondaryIndexes, keySchema, localSecondaryIndexes, replicas, sSESpecification, streamSpecification, tableName, timeToLiveSpecification, writeProvisionedThroughputSettings);
        }
    }
}
