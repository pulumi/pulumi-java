// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.imagebuilder.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Launch permissions can be used to configure which AWS accounts can use the AMI to launch instances.
 * 
 */
public final class DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs Empty = new DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs();

    /**
     * The ARN for an Amazon Web Services Organization that you want to share your AMI with.
     * 
     */
    @InputImport(name="organizationArns")
    private final @Nullable Input<List<String>> organizationArns;

    public Input<List<String>> getOrganizationArns() {
        return this.organizationArns == null ? Input.empty() : this.organizationArns;
    }

    /**
     * The ARN for an Organizations organizational unit (OU) that you want to share your AMI with.
     * 
     */
    @InputImport(name="organizationalUnitArns")
    private final @Nullable Input<List<String>> organizationalUnitArns;

    public Input<List<String>> getOrganizationalUnitArns() {
        return this.organizationalUnitArns == null ? Input.empty() : this.organizationalUnitArns;
    }

    /**
     * The name of the group.
     * 
     */
    @InputImport(name="userGroups")
    private final @Nullable Input<List<String>> userGroups;

    public Input<List<String>> getUserGroups() {
        return this.userGroups == null ? Input.empty() : this.userGroups;
    }

    /**
     * The AWS account ID.
     * 
     */
    @InputImport(name="userIds")
    private final @Nullable Input<List<String>> userIds;

    public Input<List<String>> getUserIds() {
        return this.userIds == null ? Input.empty() : this.userIds;
    }

    public DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs(
        @Nullable Input<List<String>> organizationArns,
        @Nullable Input<List<String>> organizationalUnitArns,
        @Nullable Input<List<String>> userGroups,
        @Nullable Input<List<String>> userIds) {
        this.organizationArns = organizationArns;
        this.organizationalUnitArns = organizationalUnitArns;
        this.userGroups = userGroups;
        this.userIds = userIds;
    }

    private DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs() {
        this.organizationArns = Input.empty();
        this.organizationalUnitArns = Input.empty();
        this.userGroups = Input.empty();
        this.userIds = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> organizationArns;
        private @Nullable Input<List<String>> organizationalUnitArns;
        private @Nullable Input<List<String>> userGroups;
        private @Nullable Input<List<String>> userIds;

        public Builder() {
    	      // Empty
        }

        public Builder(DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.organizationArns = defaults.organizationArns;
    	      this.organizationalUnitArns = defaults.organizationalUnitArns;
    	      this.userGroups = defaults.userGroups;
    	      this.userIds = defaults.userIds;
        }

        public Builder setOrganizationArns(@Nullable Input<List<String>> organizationArns) {
            this.organizationArns = organizationArns;
            return this;
        }

        public Builder setOrganizationArns(@Nullable List<String> organizationArns) {
            this.organizationArns = Input.ofNullable(organizationArns);
            return this;
        }

        public Builder setOrganizationalUnitArns(@Nullable Input<List<String>> organizationalUnitArns) {
            this.organizationalUnitArns = organizationalUnitArns;
            return this;
        }

        public Builder setOrganizationalUnitArns(@Nullable List<String> organizationalUnitArns) {
            this.organizationalUnitArns = Input.ofNullable(organizationalUnitArns);
            return this;
        }

        public Builder setUserGroups(@Nullable Input<List<String>> userGroups) {
            this.userGroups = userGroups;
            return this;
        }

        public Builder setUserGroups(@Nullable List<String> userGroups) {
            this.userGroups = Input.ofNullable(userGroups);
            return this;
        }

        public Builder setUserIds(@Nullable Input<List<String>> userIds) {
            this.userIds = userIds;
            return this;
        }

        public Builder setUserIds(@Nullable List<String> userIds) {
            this.userIds = Input.ofNullable(userIds);
            return this;
        }

        public DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs build() {
            return new DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationPropertiesArgs(organizationArns, organizationalUnitArns, userGroups, userIds);
        }
    }
}
