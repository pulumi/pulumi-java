// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.memorydb;

import io.pulumi.awsnative.memorydb.inputs.ParameterGroupTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ParameterGroupArgs extends io.pulumi.resources.ResourceArgs {

    public static final ParameterGroupArgs Empty = new ParameterGroupArgs();

    /**
     * A description of the parameter group.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The name of the parameter group family that this parameter group is compatible with.
     * 
     */
    @InputImport(name="family", required=true)
      private final Output<String> family;

    public Output<String> getFamily() {
        return this.family;
    }

    /**
     * The name of the parameter group.
     * 
     */
    @InputImport(name="parameterGroupName")
      private final @Nullable Output<String> parameterGroupName;

    public Output<String> getParameterGroupName() {
        return this.parameterGroupName == null ? Output.empty() : this.parameterGroupName;
    }

    /**
     * An map of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional.
     * 
     */
    @InputImport(name="parameters")
      private final @Nullable Output<Object> parameters;

    public Output<Object> getParameters() {
        return this.parameters == null ? Output.empty() : this.parameters;
    }

    /**
     * An array of key-value pairs to apply to this parameter group.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<List<ParameterGroupTagArgs>> tags;

    public Output<List<ParameterGroupTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ParameterGroupArgs(
        @Nullable Output<String> description,
        Output<String> family,
        @Nullable Output<String> parameterGroupName,
        @Nullable Output<Object> parameters,
        @Nullable Output<List<ParameterGroupTagArgs>> tags) {
        this.description = description;
        this.family = Objects.requireNonNull(family, "expected parameter 'family' to be non-null");
        this.parameterGroupName = parameterGroupName;
        this.parameters = parameters;
        this.tags = tags;
    }

    private ParameterGroupArgs() {
        this.description = Output.empty();
        this.family = Output.empty();
        this.parameterGroupName = Output.empty();
        this.parameters = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParameterGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private Output<String> family;
        private @Nullable Output<String> parameterGroupName;
        private @Nullable Output<Object> parameters;
        private @Nullable Output<List<ParameterGroupTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ParameterGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.family = defaults.family;
    	      this.parameterGroupName = defaults.parameterGroupName;
    	      this.parameters = defaults.parameters;
    	      this.tags = defaults.tags;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder family(Output<String> family) {
            this.family = Objects.requireNonNull(family);
            return this;
        }

        public Builder family(String family) {
            this.family = Output.of(Objects.requireNonNull(family));
            return this;
        }

        public Builder parameterGroupName(@Nullable Output<String> parameterGroupName) {
            this.parameterGroupName = parameterGroupName;
            return this;
        }

        public Builder parameterGroupName(@Nullable String parameterGroupName) {
            this.parameterGroupName = Output.ofNullable(parameterGroupName);
            return this;
        }

        public Builder parameters(@Nullable Output<Object> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder parameters(@Nullable Object parameters) {
            this.parameters = Output.ofNullable(parameters);
            return this;
        }

        public Builder tags(@Nullable Output<List<ParameterGroupTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<ParameterGroupTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public ParameterGroupArgs build() {
            return new ParameterGroupArgs(description, family, parameterGroupName, parameters, tags);
        }
    }
}
