// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotanalytics.inputs;

import io.pulumi.awsnative.iotanalytics.inputs.DatasetFilterArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatasetQueryActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetQueryActionArgs Empty = new DatasetQueryActionArgs();

    @InputImport(name="filters")
      private final @Nullable Input<List<DatasetFilterArgs>> filters;

    public Input<List<DatasetFilterArgs>> getFilters() {
        return this.filters == null ? Input.empty() : this.filters;
    }

    @InputImport(name="sqlQuery", required=true)
      private final Input<String> sqlQuery;

    public Input<String> getSqlQuery() {
        return this.sqlQuery;
    }

    public DatasetQueryActionArgs(
        @Nullable Input<List<DatasetFilterArgs>> filters,
        Input<String> sqlQuery) {
        this.filters = filters;
        this.sqlQuery = Objects.requireNonNull(sqlQuery, "expected parameter 'sqlQuery' to be non-null");
    }

    private DatasetQueryActionArgs() {
        this.filters = Input.empty();
        this.sqlQuery = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetQueryActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<DatasetFilterArgs>> filters;
        private Input<String> sqlQuery;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetQueryActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.sqlQuery = defaults.sqlQuery;
        }

        public Builder setFilters(@Nullable Input<List<DatasetFilterArgs>> filters) {
            this.filters = filters;
            return this;
        }

        public Builder setFilters(@Nullable List<DatasetFilterArgs> filters) {
            this.filters = Input.ofNullable(filters);
            return this;
        }

        public Builder setSqlQuery(Input<String> sqlQuery) {
            this.sqlQuery = Objects.requireNonNull(sqlQuery);
            return this;
        }

        public Builder setSqlQuery(String sqlQuery) {
            this.sqlQuery = Input.of(Objects.requireNonNull(sqlQuery));
            return this;
        }
        public DatasetQueryActionArgs build() {
            return new DatasetQueryActionArgs(filters, sqlQuery);
        }
    }
}
