// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.awsnative.s3.enums.BucketInventoryConfigurationIncludedObjectVersions;
import io.pulumi.awsnative.s3.enums.BucketInventoryConfigurationOptionalFieldsItem;
import io.pulumi.awsnative.s3.enums.BucketInventoryConfigurationScheduleFrequency;
import io.pulumi.awsnative.s3.inputs.BucketDestinationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketInventoryConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketInventoryConfigurationArgs Empty = new BucketInventoryConfigurationArgs();

    @InputImport(name="destination", required=true)
      private final Input<BucketDestinationArgs> destination;

    public Input<BucketDestinationArgs> getDestination() {
        return this.destination;
    }

    /**
     * Specifies whether the inventory is enabled or disabled.
     * 
     */
    @InputImport(name="enabled", required=true)
      private final Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled;
    }

    /**
     * The ID used to identify the inventory configuration.
     * 
     */
    @InputImport(name="id", required=true)
      private final Input<String> id;

    public Input<String> getId() {
        return this.id;
    }

    /**
     * Object versions to include in the inventory list.
     * 
     */
    @InputImport(name="includedObjectVersions", required=true)
      private final Input<BucketInventoryConfigurationIncludedObjectVersions> includedObjectVersions;

    public Input<BucketInventoryConfigurationIncludedObjectVersions> getIncludedObjectVersions() {
        return this.includedObjectVersions;
    }

    /**
     * Contains the optional fields that are included in the inventory results.
     * 
     */
    @InputImport(name="optionalFields")
      private final @Nullable Input<List<BucketInventoryConfigurationOptionalFieldsItem>> optionalFields;

    public Input<List<BucketInventoryConfigurationOptionalFieldsItem>> getOptionalFields() {
        return this.optionalFields == null ? Input.empty() : this.optionalFields;
    }

    /**
     * The prefix that is prepended to all inventory results.
     * 
     */
    @InputImport(name="prefix")
      private final @Nullable Input<String> prefix;

    public Input<String> getPrefix() {
        return this.prefix == null ? Input.empty() : this.prefix;
    }

    /**
     * Specifies the schedule for generating inventory results.
     * 
     */
    @InputImport(name="scheduleFrequency", required=true)
      private final Input<BucketInventoryConfigurationScheduleFrequency> scheduleFrequency;

    public Input<BucketInventoryConfigurationScheduleFrequency> getScheduleFrequency() {
        return this.scheduleFrequency;
    }

    public BucketInventoryConfigurationArgs(
        Input<BucketDestinationArgs> destination,
        Input<Boolean> enabled,
        Input<String> id,
        Input<BucketInventoryConfigurationIncludedObjectVersions> includedObjectVersions,
        @Nullable Input<List<BucketInventoryConfigurationOptionalFieldsItem>> optionalFields,
        @Nullable Input<String> prefix,
        Input<BucketInventoryConfigurationScheduleFrequency> scheduleFrequency) {
        this.destination = Objects.requireNonNull(destination, "expected parameter 'destination' to be non-null");
        this.enabled = Objects.requireNonNull(enabled, "expected parameter 'enabled' to be non-null");
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.includedObjectVersions = Objects.requireNonNull(includedObjectVersions, "expected parameter 'includedObjectVersions' to be non-null");
        this.optionalFields = optionalFields;
        this.prefix = prefix;
        this.scheduleFrequency = Objects.requireNonNull(scheduleFrequency, "expected parameter 'scheduleFrequency' to be non-null");
    }

    private BucketInventoryConfigurationArgs() {
        this.destination = Input.empty();
        this.enabled = Input.empty();
        this.id = Input.empty();
        this.includedObjectVersions = Input.empty();
        this.optionalFields = Input.empty();
        this.prefix = Input.empty();
        this.scheduleFrequency = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketInventoryConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<BucketDestinationArgs> destination;
        private Input<Boolean> enabled;
        private Input<String> id;
        private Input<BucketInventoryConfigurationIncludedObjectVersions> includedObjectVersions;
        private @Nullable Input<List<BucketInventoryConfigurationOptionalFieldsItem>> optionalFields;
        private @Nullable Input<String> prefix;
        private Input<BucketInventoryConfigurationScheduleFrequency> scheduleFrequency;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketInventoryConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.includedObjectVersions = defaults.includedObjectVersions;
    	      this.optionalFields = defaults.optionalFields;
    	      this.prefix = defaults.prefix;
    	      this.scheduleFrequency = defaults.scheduleFrequency;
        }

        public Builder setDestination(Input<BucketDestinationArgs> destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }

        public Builder setDestination(BucketDestinationArgs destination) {
            this.destination = Input.of(Objects.requireNonNull(destination));
            return this;
        }

        public Builder setEnabled(Input<Boolean> enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }

        public Builder setEnabled(Boolean enabled) {
            this.enabled = Input.of(Objects.requireNonNull(enabled));
            return this;
        }

        public Builder setId(Input<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setId(String id) {
            this.id = Input.of(Objects.requireNonNull(id));
            return this;
        }

        public Builder setIncludedObjectVersions(Input<BucketInventoryConfigurationIncludedObjectVersions> includedObjectVersions) {
            this.includedObjectVersions = Objects.requireNonNull(includedObjectVersions);
            return this;
        }

        public Builder setIncludedObjectVersions(BucketInventoryConfigurationIncludedObjectVersions includedObjectVersions) {
            this.includedObjectVersions = Input.of(Objects.requireNonNull(includedObjectVersions));
            return this;
        }

        public Builder setOptionalFields(@Nullable Input<List<BucketInventoryConfigurationOptionalFieldsItem>> optionalFields) {
            this.optionalFields = optionalFields;
            return this;
        }

        public Builder setOptionalFields(@Nullable List<BucketInventoryConfigurationOptionalFieldsItem> optionalFields) {
            this.optionalFields = Input.ofNullable(optionalFields);
            return this;
        }

        public Builder setPrefix(@Nullable Input<String> prefix) {
            this.prefix = prefix;
            return this;
        }

        public Builder setPrefix(@Nullable String prefix) {
            this.prefix = Input.ofNullable(prefix);
            return this;
        }

        public Builder setScheduleFrequency(Input<BucketInventoryConfigurationScheduleFrequency> scheduleFrequency) {
            this.scheduleFrequency = Objects.requireNonNull(scheduleFrequency);
            return this;
        }

        public Builder setScheduleFrequency(BucketInventoryConfigurationScheduleFrequency scheduleFrequency) {
            this.scheduleFrequency = Input.of(Objects.requireNonNull(scheduleFrequency));
            return this;
        }
        public BucketInventoryConfigurationArgs build() {
            return new BucketInventoryConfigurationArgs(destination, enabled, id, includedObjectVersions, optionalFields, prefix, scheduleFrequency);
        }
    }
}
