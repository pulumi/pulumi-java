// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotevents.inputs;

import io.pulumi.awsnative.iotevents.inputs.DetectorModelEventArgs;
import io.pulumi.awsnative.iotevents.inputs.DetectorModelTransitionEventArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * When an input is received and the `condition` is `TRUE`, perform the specified `actions`.
 * 
 */
public final class DetectorModelOnInputArgs extends io.pulumi.resources.ResourceArgs {

    public static final DetectorModelOnInputArgs Empty = new DetectorModelOnInputArgs();

    /**
     * Specifies the `actions` performed when the `condition` evaluates to `TRUE`.
     * 
     */
    @InputImport(name="events")
      private final @Nullable Input<List<DetectorModelEventArgs>> events;

    public Input<List<DetectorModelEventArgs>> getEvents() {
        return this.events == null ? Input.empty() : this.events;
    }

    /**
     * Specifies the `actions` performed, and the next `state` entered, when a `condition` evaluates to `TRUE`.
     * 
     */
    @InputImport(name="transitionEvents")
      private final @Nullable Input<List<DetectorModelTransitionEventArgs>> transitionEvents;

    public Input<List<DetectorModelTransitionEventArgs>> getTransitionEvents() {
        return this.transitionEvents == null ? Input.empty() : this.transitionEvents;
    }

    public DetectorModelOnInputArgs(
        @Nullable Input<List<DetectorModelEventArgs>> events,
        @Nullable Input<List<DetectorModelTransitionEventArgs>> transitionEvents) {
        this.events = events;
        this.transitionEvents = transitionEvents;
    }

    private DetectorModelOnInputArgs() {
        this.events = Input.empty();
        this.transitionEvents = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DetectorModelOnInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<DetectorModelEventArgs>> events;
        private @Nullable Input<List<DetectorModelTransitionEventArgs>> transitionEvents;

        public Builder() {
    	      // Empty
        }

        public Builder(DetectorModelOnInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.events = defaults.events;
    	      this.transitionEvents = defaults.transitionEvents;
        }

        public Builder events(@Nullable Input<List<DetectorModelEventArgs>> events) {
            this.events = events;
            return this;
        }

        public Builder events(@Nullable List<DetectorModelEventArgs> events) {
            this.events = Input.ofNullable(events);
            return this;
        }

        public Builder transitionEvents(@Nullable Input<List<DetectorModelTransitionEventArgs>> transitionEvents) {
            this.transitionEvents = transitionEvents;
            return this;
        }

        public Builder transitionEvents(@Nullable List<DetectorModelTransitionEventArgs> transitionEvents) {
            this.transitionEvents = Input.ofNullable(transitionEvents);
            return this;
        }
        public DetectorModelOnInputArgs build() {
            return new DetectorModelOnInputArgs(events, transitionEvents);
        }
    }
}
