// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight.outputs;

import io.pulumi.awsnative.quicksight.enums.DashboardResourceStatus;
import io.pulumi.awsnative.quicksight.outputs.DashboardError;
import io.pulumi.awsnative.quicksight.outputs.DashboardSheet;
import io.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardVersion {
    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     * 
     */
    private final @Nullable String arn;
    /**
     * <p>The time that this dashboard version was created.</p>
     * 
     */
    private final @Nullable String createdTime;
    /**
     * <p>The Amazon Resource Numbers (ARNs) for the datasets that are associated with this
     *             version of the dashboard.</p>
     * 
     */
    private final @Nullable List<String> dataSetArns;
    /**
     * <p>Description.</p>
     * 
     */
    private final @Nullable String description;
    /**
     * <p>Errors associated with this dashboard version.</p>
     * 
     */
    private final @Nullable List<DashboardError> errors;
    /**
     * <p>A list of the associated sheets with the unique identifier and name of each sheet.</p>
     * 
     */
    private final @Nullable List<DashboardSheet> sheets;
    /**
     * <p>Source entity ARN.</p>
     * 
     */
    private final @Nullable String sourceEntityArn;
    private final @Nullable DashboardResourceStatus status;
    /**
     * <p>The ARN of the theme associated with a version of the dashboard.</p>
     * 
     */
    private final @Nullable String themeArn;
    /**
     * <p>Version number for this version of the dashboard.</p>
     * 
     */
    private final @Nullable Double versionNumber;

    @CustomType.Constructor
    private DashboardVersion(
        @CustomType.Parameter("arn") @Nullable String arn,
        @CustomType.Parameter("createdTime") @Nullable String createdTime,
        @CustomType.Parameter("dataSetArns") @Nullable List<String> dataSetArns,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("errors") @Nullable List<DashboardError> errors,
        @CustomType.Parameter("sheets") @Nullable List<DashboardSheet> sheets,
        @CustomType.Parameter("sourceEntityArn") @Nullable String sourceEntityArn,
        @CustomType.Parameter("status") @Nullable DashboardResourceStatus status,
        @CustomType.Parameter("themeArn") @Nullable String themeArn,
        @CustomType.Parameter("versionNumber") @Nullable Double versionNumber) {
        this.arn = arn;
        this.createdTime = createdTime;
        this.dataSetArns = dataSetArns;
        this.description = description;
        this.errors = errors;
        this.sheets = sheets;
        this.sourceEntityArn = sourceEntityArn;
        this.status = status;
        this.themeArn = themeArn;
        this.versionNumber = versionNumber;
    }

    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     * 
    */
    public Optional<String> getArn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * <p>The time that this dashboard version was created.</p>
     * 
    */
    public Optional<String> getCreatedTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * <p>The Amazon Resource Numbers (ARNs) for the datasets that are associated with this
     *             version of the dashboard.</p>
     * 
    */
    public List<String> getDataSetArns() {
        return this.dataSetArns == null ? List.of() : this.dataSetArns;
    }
    /**
     * <p>Description.</p>
     * 
    */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * <p>Errors associated with this dashboard version.</p>
     * 
    */
    public List<DashboardError> getErrors() {
        return this.errors == null ? List.of() : this.errors;
    }
    /**
     * <p>A list of the associated sheets with the unique identifier and name of each sheet.</p>
     * 
    */
    public List<DashboardSheet> getSheets() {
        return this.sheets == null ? List.of() : this.sheets;
    }
    /**
     * <p>Source entity ARN.</p>
     * 
    */
    public Optional<String> getSourceEntityArn() {
        return Optional.ofNullable(this.sourceEntityArn);
    }
    public Optional<DashboardResourceStatus> getStatus() {
        return Optional.ofNullable(this.status);
    }
    /**
     * <p>The ARN of the theme associated with a version of the dashboard.</p>
     * 
    */
    public Optional<String> getThemeArn() {
        return Optional.ofNullable(this.themeArn);
    }
    /**
     * <p>Version number for this version of the dashboard.</p>
     * 
    */
    public Optional<Double> getVersionNumber() {
        return Optional.ofNullable(this.versionNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardVersion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String createdTime;
        private @Nullable List<String> dataSetArns;
        private @Nullable String description;
        private @Nullable List<DashboardError> errors;
        private @Nullable List<DashboardSheet> sheets;
        private @Nullable String sourceEntityArn;
        private @Nullable DashboardResourceStatus status;
        private @Nullable String themeArn;
        private @Nullable Double versionNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(DashboardVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.dataSetArns = defaults.dataSetArns;
    	      this.description = defaults.description;
    	      this.errors = defaults.errors;
    	      this.sheets = defaults.sheets;
    	      this.sourceEntityArn = defaults.sourceEntityArn;
    	      this.status = defaults.status;
    	      this.themeArn = defaults.themeArn;
    	      this.versionNumber = defaults.versionNumber;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }

        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }

        public Builder dataSetArns(@Nullable List<String> dataSetArns) {
            this.dataSetArns = dataSetArns;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder errors(@Nullable List<DashboardError> errors) {
            this.errors = errors;
            return this;
        }

        public Builder sheets(@Nullable List<DashboardSheet> sheets) {
            this.sheets = sheets;
            return this;
        }

        public Builder sourceEntityArn(@Nullable String sourceEntityArn) {
            this.sourceEntityArn = sourceEntityArn;
            return this;
        }

        public Builder status(@Nullable DashboardResourceStatus status) {
            this.status = status;
            return this;
        }

        public Builder themeArn(@Nullable String themeArn) {
            this.themeArn = themeArn;
            return this;
        }

        public Builder versionNumber(@Nullable Double versionNumber) {
            this.versionNumber = versionNumber;
            return this;
        }
        public DashboardVersion build() {
            return new DashboardVersion(arn, createdTime, dataSetArns, description, errors, sheets, sourceEntityArn, status, themeArn, versionNumber);
        }
    }
}
