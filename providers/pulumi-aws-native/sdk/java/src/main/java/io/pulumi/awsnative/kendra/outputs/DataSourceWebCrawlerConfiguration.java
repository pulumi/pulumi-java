// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kendra.outputs;

import io.pulumi.awsnative.kendra.outputs.DataSourceProxyConfiguration;
import io.pulumi.awsnative.kendra.outputs.DataSourceWebCrawlerAuthenticationConfiguration;
import io.pulumi.awsnative.kendra.outputs.DataSourceWebCrawlerUrls;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class DataSourceWebCrawlerConfiguration {
    private final @Nullable DataSourceWebCrawlerAuthenticationConfiguration authenticationConfiguration;
    private final @Nullable Integer crawlDepth;
    private final @Nullable Double maxContentSizePerPageInMegaBytes;
    private final @Nullable Integer maxLinksPerPage;
    private final @Nullable Integer maxUrlsPerMinuteCrawlRate;
    private final @Nullable DataSourceProxyConfiguration proxyConfiguration;
    private final @Nullable List<String> urlExclusionPatterns;
    private final @Nullable List<String> urlInclusionPatterns;
    private final DataSourceWebCrawlerUrls urls;

    @OutputCustomType.Constructor
    private DataSourceWebCrawlerConfiguration(
        @OutputCustomType.Parameter("authenticationConfiguration") @Nullable DataSourceWebCrawlerAuthenticationConfiguration authenticationConfiguration,
        @OutputCustomType.Parameter("crawlDepth") @Nullable Integer crawlDepth,
        @OutputCustomType.Parameter("maxContentSizePerPageInMegaBytes") @Nullable Double maxContentSizePerPageInMegaBytes,
        @OutputCustomType.Parameter("maxLinksPerPage") @Nullable Integer maxLinksPerPage,
        @OutputCustomType.Parameter("maxUrlsPerMinuteCrawlRate") @Nullable Integer maxUrlsPerMinuteCrawlRate,
        @OutputCustomType.Parameter("proxyConfiguration") @Nullable DataSourceProxyConfiguration proxyConfiguration,
        @OutputCustomType.Parameter("urlExclusionPatterns") @Nullable List<String> urlExclusionPatterns,
        @OutputCustomType.Parameter("urlInclusionPatterns") @Nullable List<String> urlInclusionPatterns,
        @OutputCustomType.Parameter("urls") DataSourceWebCrawlerUrls urls) {
        this.authenticationConfiguration = authenticationConfiguration;
        this.crawlDepth = crawlDepth;
        this.maxContentSizePerPageInMegaBytes = maxContentSizePerPageInMegaBytes;
        this.maxLinksPerPage = maxLinksPerPage;
        this.maxUrlsPerMinuteCrawlRate = maxUrlsPerMinuteCrawlRate;
        this.proxyConfiguration = proxyConfiguration;
        this.urlExclusionPatterns = urlExclusionPatterns;
        this.urlInclusionPatterns = urlInclusionPatterns;
        this.urls = urls;
    }

    public Optional<DataSourceWebCrawlerAuthenticationConfiguration> getAuthenticationConfiguration() {
        return Optional.ofNullable(this.authenticationConfiguration);
    }
    public Optional<Integer> getCrawlDepth() {
        return Optional.ofNullable(this.crawlDepth);
    }
    public Optional<Double> getMaxContentSizePerPageInMegaBytes() {
        return Optional.ofNullable(this.maxContentSizePerPageInMegaBytes);
    }
    public Optional<Integer> getMaxLinksPerPage() {
        return Optional.ofNullable(this.maxLinksPerPage);
    }
    public Optional<Integer> getMaxUrlsPerMinuteCrawlRate() {
        return Optional.ofNullable(this.maxUrlsPerMinuteCrawlRate);
    }
    public Optional<DataSourceProxyConfiguration> getProxyConfiguration() {
        return Optional.ofNullable(this.proxyConfiguration);
    }
    public List<String> getUrlExclusionPatterns() {
        return this.urlExclusionPatterns == null ? List.of() : this.urlExclusionPatterns;
    }
    public List<String> getUrlInclusionPatterns() {
        return this.urlInclusionPatterns == null ? List.of() : this.urlInclusionPatterns;
    }
    public DataSourceWebCrawlerUrls getUrls() {
        return this.urls;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceWebCrawlerConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DataSourceWebCrawlerAuthenticationConfiguration authenticationConfiguration;
        private @Nullable Integer crawlDepth;
        private @Nullable Double maxContentSizePerPageInMegaBytes;
        private @Nullable Integer maxLinksPerPage;
        private @Nullable Integer maxUrlsPerMinuteCrawlRate;
        private @Nullable DataSourceProxyConfiguration proxyConfiguration;
        private @Nullable List<String> urlExclusionPatterns;
        private @Nullable List<String> urlInclusionPatterns;
        private DataSourceWebCrawlerUrls urls;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceWebCrawlerConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationConfiguration = defaults.authenticationConfiguration;
    	      this.crawlDepth = defaults.crawlDepth;
    	      this.maxContentSizePerPageInMegaBytes = defaults.maxContentSizePerPageInMegaBytes;
    	      this.maxLinksPerPage = defaults.maxLinksPerPage;
    	      this.maxUrlsPerMinuteCrawlRate = defaults.maxUrlsPerMinuteCrawlRate;
    	      this.proxyConfiguration = defaults.proxyConfiguration;
    	      this.urlExclusionPatterns = defaults.urlExclusionPatterns;
    	      this.urlInclusionPatterns = defaults.urlInclusionPatterns;
    	      this.urls = defaults.urls;
        }

        public Builder authenticationConfiguration(@Nullable DataSourceWebCrawlerAuthenticationConfiguration authenticationConfiguration) {
            this.authenticationConfiguration = authenticationConfiguration;
            return this;
        }

        public Builder crawlDepth(@Nullable Integer crawlDepth) {
            this.crawlDepth = crawlDepth;
            return this;
        }

        public Builder maxContentSizePerPageInMegaBytes(@Nullable Double maxContentSizePerPageInMegaBytes) {
            this.maxContentSizePerPageInMegaBytes = maxContentSizePerPageInMegaBytes;
            return this;
        }

        public Builder maxLinksPerPage(@Nullable Integer maxLinksPerPage) {
            this.maxLinksPerPage = maxLinksPerPage;
            return this;
        }

        public Builder maxUrlsPerMinuteCrawlRate(@Nullable Integer maxUrlsPerMinuteCrawlRate) {
            this.maxUrlsPerMinuteCrawlRate = maxUrlsPerMinuteCrawlRate;
            return this;
        }

        public Builder proxyConfiguration(@Nullable DataSourceProxyConfiguration proxyConfiguration) {
            this.proxyConfiguration = proxyConfiguration;
            return this;
        }

        public Builder urlExclusionPatterns(@Nullable List<String> urlExclusionPatterns) {
            this.urlExclusionPatterns = urlExclusionPatterns;
            return this;
        }

        public Builder urlInclusionPatterns(@Nullable List<String> urlInclusionPatterns) {
            this.urlInclusionPatterns = urlInclusionPatterns;
            return this;
        }

        public Builder urls(DataSourceWebCrawlerUrls urls) {
            this.urls = Objects.requireNonNull(urls);
            return this;
        }
        public DataSourceWebCrawlerConfiguration build() {
            return new DataSourceWebCrawlerConfiguration(authenticationConfiguration, crawlDepth, maxContentSizePerPageInMegaBytes, maxLinksPerPage, maxUrlsPerMinuteCrawlRate, proxyConfiguration, urlExclusionPatterns, urlInclusionPatterns, urls);
        }
    }
}
