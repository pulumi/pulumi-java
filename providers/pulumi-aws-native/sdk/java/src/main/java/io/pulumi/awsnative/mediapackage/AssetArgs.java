// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediapackage;

import io.pulumi.awsnative.mediapackage.inputs.AssetTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AssetArgs extends io.pulumi.resources.ResourceArgs {

    public static final AssetArgs Empty = new AssetArgs();

    /**
     * The ID of the PackagingGroup for the Asset.
     * 
     */
    @InputImport(name="packagingGroupId", required=true)
      private final Input<String> packagingGroupId;

    public Input<String> getPackagingGroupId() {
        return this.packagingGroupId;
    }

    /**
     * The resource ID to include in SPEKE key requests.
     * 
     */
    @InputImport(name="resourceId")
      private final @Nullable Input<String> resourceId;

    public Input<String> getResourceId() {
        return this.resourceId == null ? Input.empty() : this.resourceId;
    }

    /**
     * ARN of the source object in S3.
     * 
     */
    @InputImport(name="sourceArn", required=true)
      private final Input<String> sourceArn;

    public Input<String> getSourceArn() {
        return this.sourceArn;
    }

    /**
     * The IAM role_arn used to access the source S3 bucket.
     * 
     */
    @InputImport(name="sourceRoleArn", required=true)
      private final Input<String> sourceRoleArn;

    public Input<String> getSourceRoleArn() {
        return this.sourceRoleArn;
    }

    /**
     * A collection of tags associated with a resource
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<List<AssetTagArgs>> tags;

    public Input<List<AssetTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public AssetArgs(
        Input<String> packagingGroupId,
        @Nullable Input<String> resourceId,
        Input<String> sourceArn,
        Input<String> sourceRoleArn,
        @Nullable Input<List<AssetTagArgs>> tags) {
        this.packagingGroupId = Objects.requireNonNull(packagingGroupId, "expected parameter 'packagingGroupId' to be non-null");
        this.resourceId = resourceId;
        this.sourceArn = Objects.requireNonNull(sourceArn, "expected parameter 'sourceArn' to be non-null");
        this.sourceRoleArn = Objects.requireNonNull(sourceRoleArn, "expected parameter 'sourceRoleArn' to be non-null");
        this.tags = tags;
    }

    private AssetArgs() {
        this.packagingGroupId = Input.empty();
        this.resourceId = Input.empty();
        this.sourceArn = Input.empty();
        this.sourceRoleArn = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> packagingGroupId;
        private @Nullable Input<String> resourceId;
        private Input<String> sourceArn;
        private Input<String> sourceRoleArn;
        private @Nullable Input<List<AssetTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.packagingGroupId = defaults.packagingGroupId;
    	      this.resourceId = defaults.resourceId;
    	      this.sourceArn = defaults.sourceArn;
    	      this.sourceRoleArn = defaults.sourceRoleArn;
    	      this.tags = defaults.tags;
        }

        public Builder setPackagingGroupId(Input<String> packagingGroupId) {
            this.packagingGroupId = Objects.requireNonNull(packagingGroupId);
            return this;
        }

        public Builder setPackagingGroupId(String packagingGroupId) {
            this.packagingGroupId = Input.of(Objects.requireNonNull(packagingGroupId));
            return this;
        }

        public Builder setResourceId(@Nullable Input<String> resourceId) {
            this.resourceId = resourceId;
            return this;
        }

        public Builder setResourceId(@Nullable String resourceId) {
            this.resourceId = Input.ofNullable(resourceId);
            return this;
        }

        public Builder setSourceArn(Input<String> sourceArn) {
            this.sourceArn = Objects.requireNonNull(sourceArn);
            return this;
        }

        public Builder setSourceArn(String sourceArn) {
            this.sourceArn = Input.of(Objects.requireNonNull(sourceArn));
            return this;
        }

        public Builder setSourceRoleArn(Input<String> sourceRoleArn) {
            this.sourceRoleArn = Objects.requireNonNull(sourceRoleArn);
            return this;
        }

        public Builder setSourceRoleArn(String sourceRoleArn) {
            this.sourceRoleArn = Input.of(Objects.requireNonNull(sourceRoleArn));
            return this;
        }

        public Builder setTags(@Nullable Input<List<AssetTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<AssetTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public AssetArgs build() {
            return new AssetArgs(packagingGroupId, resourceId, sourceArn, sourceRoleArn, tags);
        }
    }
}
