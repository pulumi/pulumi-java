// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.networkfirewall;

import io.pulumi.awsnative.networkfirewall.inputs.FirewallSubnetMappingArgs;
import io.pulumi.awsnative.networkfirewall.inputs.FirewallTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FirewallArgs extends io.pulumi.resources.ResourceArgs {

    public static final FirewallArgs Empty = new FirewallArgs();

    @InputImport(name="deleteProtection")
      private final @Nullable Input<Boolean> deleteProtection;

    public Input<Boolean> getDeleteProtection() {
        return this.deleteProtection == null ? Input.empty() : this.deleteProtection;
    }

    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="firewallName")
      private final @Nullable Input<String> firewallName;

    public Input<String> getFirewallName() {
        return this.firewallName == null ? Input.empty() : this.firewallName;
    }

    @InputImport(name="firewallPolicyArn", required=true)
      private final Input<String> firewallPolicyArn;

    public Input<String> getFirewallPolicyArn() {
        return this.firewallPolicyArn;
    }

    @InputImport(name="firewallPolicyChangeProtection")
      private final @Nullable Input<Boolean> firewallPolicyChangeProtection;

    public Input<Boolean> getFirewallPolicyChangeProtection() {
        return this.firewallPolicyChangeProtection == null ? Input.empty() : this.firewallPolicyChangeProtection;
    }

    @InputImport(name="subnetChangeProtection")
      private final @Nullable Input<Boolean> subnetChangeProtection;

    public Input<Boolean> getSubnetChangeProtection() {
        return this.subnetChangeProtection == null ? Input.empty() : this.subnetChangeProtection;
    }

    @InputImport(name="subnetMappings", required=true)
      private final Input<List<FirewallSubnetMappingArgs>> subnetMappings;

    public Input<List<FirewallSubnetMappingArgs>> getSubnetMappings() {
        return this.subnetMappings;
    }

    @InputImport(name="tags")
      private final @Nullable Input<List<FirewallTagArgs>> tags;

    public Input<List<FirewallTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="vpcId", required=true)
      private final Input<String> vpcId;

    public Input<String> getVpcId() {
        return this.vpcId;
    }

    public FirewallArgs(
        @Nullable Input<Boolean> deleteProtection,
        @Nullable Input<String> description,
        @Nullable Input<String> firewallName,
        Input<String> firewallPolicyArn,
        @Nullable Input<Boolean> firewallPolicyChangeProtection,
        @Nullable Input<Boolean> subnetChangeProtection,
        Input<List<FirewallSubnetMappingArgs>> subnetMappings,
        @Nullable Input<List<FirewallTagArgs>> tags,
        Input<String> vpcId) {
        this.deleteProtection = deleteProtection;
        this.description = description;
        this.firewallName = firewallName;
        this.firewallPolicyArn = Objects.requireNonNull(firewallPolicyArn, "expected parameter 'firewallPolicyArn' to be non-null");
        this.firewallPolicyChangeProtection = firewallPolicyChangeProtection;
        this.subnetChangeProtection = subnetChangeProtection;
        this.subnetMappings = Objects.requireNonNull(subnetMappings, "expected parameter 'subnetMappings' to be non-null");
        this.tags = tags;
        this.vpcId = Objects.requireNonNull(vpcId, "expected parameter 'vpcId' to be non-null");
    }

    private FirewallArgs() {
        this.deleteProtection = Input.empty();
        this.description = Input.empty();
        this.firewallName = Input.empty();
        this.firewallPolicyArn = Input.empty();
        this.firewallPolicyChangeProtection = Input.empty();
        this.subnetChangeProtection = Input.empty();
        this.subnetMappings = Input.empty();
        this.tags = Input.empty();
        this.vpcId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> deleteProtection;
        private @Nullable Input<String> description;
        private @Nullable Input<String> firewallName;
        private Input<String> firewallPolicyArn;
        private @Nullable Input<Boolean> firewallPolicyChangeProtection;
        private @Nullable Input<Boolean> subnetChangeProtection;
        private Input<List<FirewallSubnetMappingArgs>> subnetMappings;
        private @Nullable Input<List<FirewallTagArgs>> tags;
        private Input<String> vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(FirewallArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteProtection = defaults.deleteProtection;
    	      this.description = defaults.description;
    	      this.firewallName = defaults.firewallName;
    	      this.firewallPolicyArn = defaults.firewallPolicyArn;
    	      this.firewallPolicyChangeProtection = defaults.firewallPolicyChangeProtection;
    	      this.subnetChangeProtection = defaults.subnetChangeProtection;
    	      this.subnetMappings = defaults.subnetMappings;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder deleteProtection(@Nullable Input<Boolean> deleteProtection) {
            this.deleteProtection = deleteProtection;
            return this;
        }

        public Builder deleteProtection(@Nullable Boolean deleteProtection) {
            this.deleteProtection = Input.ofNullable(deleteProtection);
            return this;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder firewallName(@Nullable Input<String> firewallName) {
            this.firewallName = firewallName;
            return this;
        }

        public Builder firewallName(@Nullable String firewallName) {
            this.firewallName = Input.ofNullable(firewallName);
            return this;
        }

        public Builder firewallPolicyArn(Input<String> firewallPolicyArn) {
            this.firewallPolicyArn = Objects.requireNonNull(firewallPolicyArn);
            return this;
        }

        public Builder firewallPolicyArn(String firewallPolicyArn) {
            this.firewallPolicyArn = Input.of(Objects.requireNonNull(firewallPolicyArn));
            return this;
        }

        public Builder firewallPolicyChangeProtection(@Nullable Input<Boolean> firewallPolicyChangeProtection) {
            this.firewallPolicyChangeProtection = firewallPolicyChangeProtection;
            return this;
        }

        public Builder firewallPolicyChangeProtection(@Nullable Boolean firewallPolicyChangeProtection) {
            this.firewallPolicyChangeProtection = Input.ofNullable(firewallPolicyChangeProtection);
            return this;
        }

        public Builder subnetChangeProtection(@Nullable Input<Boolean> subnetChangeProtection) {
            this.subnetChangeProtection = subnetChangeProtection;
            return this;
        }

        public Builder subnetChangeProtection(@Nullable Boolean subnetChangeProtection) {
            this.subnetChangeProtection = Input.ofNullable(subnetChangeProtection);
            return this;
        }

        public Builder subnetMappings(Input<List<FirewallSubnetMappingArgs>> subnetMappings) {
            this.subnetMappings = Objects.requireNonNull(subnetMappings);
            return this;
        }

        public Builder subnetMappings(List<FirewallSubnetMappingArgs> subnetMappings) {
            this.subnetMappings = Input.of(Objects.requireNonNull(subnetMappings));
            return this;
        }

        public Builder tags(@Nullable Input<List<FirewallTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<FirewallTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder vpcId(Input<String> vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }

        public Builder vpcId(String vpcId) {
            this.vpcId = Input.of(Objects.requireNonNull(vpcId));
            return this;
        }
        public FirewallArgs build() {
            return new FirewallArgs(deleteProtection, description, firewallName, firewallPolicyArn, firewallPolicyChangeProtection, subnetChangeProtection, subnetMappings, tags, vpcId);
        }
    }
}
