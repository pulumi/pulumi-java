// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kinesisfirehose.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeliveryStreamParquetSerDeArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeliveryStreamParquetSerDeArgs Empty = new DeliveryStreamParquetSerDeArgs();

    @Import(name="blockSizeBytes")
      private final @Nullable Output<Integer> blockSizeBytes;

    public Output<Integer> getBlockSizeBytes() {
        return this.blockSizeBytes == null ? Output.empty() : this.blockSizeBytes;
    }

    @Import(name="compression")
      private final @Nullable Output<String> compression;

    public Output<String> getCompression() {
        return this.compression == null ? Output.empty() : this.compression;
    }

    @Import(name="enableDictionaryCompression")
      private final @Nullable Output<Boolean> enableDictionaryCompression;

    public Output<Boolean> getEnableDictionaryCompression() {
        return this.enableDictionaryCompression == null ? Output.empty() : this.enableDictionaryCompression;
    }

    @Import(name="maxPaddingBytes")
      private final @Nullable Output<Integer> maxPaddingBytes;

    public Output<Integer> getMaxPaddingBytes() {
        return this.maxPaddingBytes == null ? Output.empty() : this.maxPaddingBytes;
    }

    @Import(name="pageSizeBytes")
      private final @Nullable Output<Integer> pageSizeBytes;

    public Output<Integer> getPageSizeBytes() {
        return this.pageSizeBytes == null ? Output.empty() : this.pageSizeBytes;
    }

    @Import(name="writerVersion")
      private final @Nullable Output<String> writerVersion;

    public Output<String> getWriterVersion() {
        return this.writerVersion == null ? Output.empty() : this.writerVersion;
    }

    public DeliveryStreamParquetSerDeArgs(
        @Nullable Output<Integer> blockSizeBytes,
        @Nullable Output<String> compression,
        @Nullable Output<Boolean> enableDictionaryCompression,
        @Nullable Output<Integer> maxPaddingBytes,
        @Nullable Output<Integer> pageSizeBytes,
        @Nullable Output<String> writerVersion) {
        this.blockSizeBytes = blockSizeBytes;
        this.compression = compression;
        this.enableDictionaryCompression = enableDictionaryCompression;
        this.maxPaddingBytes = maxPaddingBytes;
        this.pageSizeBytes = pageSizeBytes;
        this.writerVersion = writerVersion;
    }

    private DeliveryStreamParquetSerDeArgs() {
        this.blockSizeBytes = Output.empty();
        this.compression = Output.empty();
        this.enableDictionaryCompression = Output.empty();
        this.maxPaddingBytes = Output.empty();
        this.pageSizeBytes = Output.empty();
        this.writerVersion = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryStreamParquetSerDeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> blockSizeBytes;
        private @Nullable Output<String> compression;
        private @Nullable Output<Boolean> enableDictionaryCompression;
        private @Nullable Output<Integer> maxPaddingBytes;
        private @Nullable Output<Integer> pageSizeBytes;
        private @Nullable Output<String> writerVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(DeliveryStreamParquetSerDeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockSizeBytes = defaults.blockSizeBytes;
    	      this.compression = defaults.compression;
    	      this.enableDictionaryCompression = defaults.enableDictionaryCompression;
    	      this.maxPaddingBytes = defaults.maxPaddingBytes;
    	      this.pageSizeBytes = defaults.pageSizeBytes;
    	      this.writerVersion = defaults.writerVersion;
        }

        public Builder blockSizeBytes(@Nullable Output<Integer> blockSizeBytes) {
            this.blockSizeBytes = blockSizeBytes;
            return this;
        }
        public Builder blockSizeBytes(@Nullable Integer blockSizeBytes) {
            this.blockSizeBytes = Output.ofNullable(blockSizeBytes);
            return this;
        }
        public Builder compression(@Nullable Output<String> compression) {
            this.compression = compression;
            return this;
        }
        public Builder compression(@Nullable String compression) {
            this.compression = Output.ofNullable(compression);
            return this;
        }
        public Builder enableDictionaryCompression(@Nullable Output<Boolean> enableDictionaryCompression) {
            this.enableDictionaryCompression = enableDictionaryCompression;
            return this;
        }
        public Builder enableDictionaryCompression(@Nullable Boolean enableDictionaryCompression) {
            this.enableDictionaryCompression = Output.ofNullable(enableDictionaryCompression);
            return this;
        }
        public Builder maxPaddingBytes(@Nullable Output<Integer> maxPaddingBytes) {
            this.maxPaddingBytes = maxPaddingBytes;
            return this;
        }
        public Builder maxPaddingBytes(@Nullable Integer maxPaddingBytes) {
            this.maxPaddingBytes = Output.ofNullable(maxPaddingBytes);
            return this;
        }
        public Builder pageSizeBytes(@Nullable Output<Integer> pageSizeBytes) {
            this.pageSizeBytes = pageSizeBytes;
            return this;
        }
        public Builder pageSizeBytes(@Nullable Integer pageSizeBytes) {
            this.pageSizeBytes = Output.ofNullable(pageSizeBytes);
            return this;
        }
        public Builder writerVersion(@Nullable Output<String> writerVersion) {
            this.writerVersion = writerVersion;
            return this;
        }
        public Builder writerVersion(@Nullable String writerVersion) {
            this.writerVersion = Output.ofNullable(writerVersion);
            return this;
        }        public DeliveryStreamParquetSerDeArgs build() {
            return new DeliveryStreamParquetSerDeArgs(blockSizeBytes, compression, enableDictionaryCompression, maxPaddingBytes, pageSizeBytes, writerVersion);
        }
    }
}
