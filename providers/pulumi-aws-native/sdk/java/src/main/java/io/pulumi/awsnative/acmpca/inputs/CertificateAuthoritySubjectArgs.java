// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.acmpca.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Structure that contains X.500 distinguished name information for your CA.
 * 
 */
public final class CertificateAuthoritySubjectArgs extends io.pulumi.resources.ResourceArgs {

    public static final CertificateAuthoritySubjectArgs Empty = new CertificateAuthoritySubjectArgs();

    @InputImport(name="commonName")
      private final @Nullable Input<String> commonName;

    public Input<String> getCommonName() {
        return this.commonName == null ? Input.empty() : this.commonName;
    }

    @InputImport(name="country")
      private final @Nullable Input<String> country;

    public Input<String> getCountry() {
        return this.country == null ? Input.empty() : this.country;
    }

    @InputImport(name="distinguishedNameQualifier")
      private final @Nullable Input<String> distinguishedNameQualifier;

    public Input<String> getDistinguishedNameQualifier() {
        return this.distinguishedNameQualifier == null ? Input.empty() : this.distinguishedNameQualifier;
    }

    @InputImport(name="generationQualifier")
      private final @Nullable Input<String> generationQualifier;

    public Input<String> getGenerationQualifier() {
        return this.generationQualifier == null ? Input.empty() : this.generationQualifier;
    }

    @InputImport(name="givenName")
      private final @Nullable Input<String> givenName;

    public Input<String> getGivenName() {
        return this.givenName == null ? Input.empty() : this.givenName;
    }

    @InputImport(name="initials")
      private final @Nullable Input<String> initials;

    public Input<String> getInitials() {
        return this.initials == null ? Input.empty() : this.initials;
    }

    @InputImport(name="locality")
      private final @Nullable Input<String> locality;

    public Input<String> getLocality() {
        return this.locality == null ? Input.empty() : this.locality;
    }

    @InputImport(name="organization")
      private final @Nullable Input<String> organization;

    public Input<String> getOrganization() {
        return this.organization == null ? Input.empty() : this.organization;
    }

    @InputImport(name="organizationalUnit")
      private final @Nullable Input<String> organizationalUnit;

    public Input<String> getOrganizationalUnit() {
        return this.organizationalUnit == null ? Input.empty() : this.organizationalUnit;
    }

    @InputImport(name="pseudonym")
      private final @Nullable Input<String> pseudonym;

    public Input<String> getPseudonym() {
        return this.pseudonym == null ? Input.empty() : this.pseudonym;
    }

    @InputImport(name="serialNumber")
      private final @Nullable Input<String> serialNumber;

    public Input<String> getSerialNumber() {
        return this.serialNumber == null ? Input.empty() : this.serialNumber;
    }

    @InputImport(name="state")
      private final @Nullable Input<String> state;

    public Input<String> getState() {
        return this.state == null ? Input.empty() : this.state;
    }

    @InputImport(name="surname")
      private final @Nullable Input<String> surname;

    public Input<String> getSurname() {
        return this.surname == null ? Input.empty() : this.surname;
    }

    @InputImport(name="title")
      private final @Nullable Input<String> title;

    public Input<String> getTitle() {
        return this.title == null ? Input.empty() : this.title;
    }

    public CertificateAuthoritySubjectArgs(
        @Nullable Input<String> commonName,
        @Nullable Input<String> country,
        @Nullable Input<String> distinguishedNameQualifier,
        @Nullable Input<String> generationQualifier,
        @Nullable Input<String> givenName,
        @Nullable Input<String> initials,
        @Nullable Input<String> locality,
        @Nullable Input<String> organization,
        @Nullable Input<String> organizationalUnit,
        @Nullable Input<String> pseudonym,
        @Nullable Input<String> serialNumber,
        @Nullable Input<String> state,
        @Nullable Input<String> surname,
        @Nullable Input<String> title) {
        this.commonName = commonName;
        this.country = country;
        this.distinguishedNameQualifier = distinguishedNameQualifier;
        this.generationQualifier = generationQualifier;
        this.givenName = givenName;
        this.initials = initials;
        this.locality = locality;
        this.organization = organization;
        this.organizationalUnit = organizationalUnit;
        this.pseudonym = pseudonym;
        this.serialNumber = serialNumber;
        this.state = state;
        this.surname = surname;
        this.title = title;
    }

    private CertificateAuthoritySubjectArgs() {
        this.commonName = Input.empty();
        this.country = Input.empty();
        this.distinguishedNameQualifier = Input.empty();
        this.generationQualifier = Input.empty();
        this.givenName = Input.empty();
        this.initials = Input.empty();
        this.locality = Input.empty();
        this.organization = Input.empty();
        this.organizationalUnit = Input.empty();
        this.pseudonym = Input.empty();
        this.serialNumber = Input.empty();
        this.state = Input.empty();
        this.surname = Input.empty();
        this.title = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateAuthoritySubjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> commonName;
        private @Nullable Input<String> country;
        private @Nullable Input<String> distinguishedNameQualifier;
        private @Nullable Input<String> generationQualifier;
        private @Nullable Input<String> givenName;
        private @Nullable Input<String> initials;
        private @Nullable Input<String> locality;
        private @Nullable Input<String> organization;
        private @Nullable Input<String> organizationalUnit;
        private @Nullable Input<String> pseudonym;
        private @Nullable Input<String> serialNumber;
        private @Nullable Input<String> state;
        private @Nullable Input<String> surname;
        private @Nullable Input<String> title;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateAuthoritySubjectArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonName = defaults.commonName;
    	      this.country = defaults.country;
    	      this.distinguishedNameQualifier = defaults.distinguishedNameQualifier;
    	      this.generationQualifier = defaults.generationQualifier;
    	      this.givenName = defaults.givenName;
    	      this.initials = defaults.initials;
    	      this.locality = defaults.locality;
    	      this.organization = defaults.organization;
    	      this.organizationalUnit = defaults.organizationalUnit;
    	      this.pseudonym = defaults.pseudonym;
    	      this.serialNumber = defaults.serialNumber;
    	      this.state = defaults.state;
    	      this.surname = defaults.surname;
    	      this.title = defaults.title;
        }

        public Builder setCommonName(@Nullable Input<String> commonName) {
            this.commonName = commonName;
            return this;
        }

        public Builder setCommonName(@Nullable String commonName) {
            this.commonName = Input.ofNullable(commonName);
            return this;
        }

        public Builder setCountry(@Nullable Input<String> country) {
            this.country = country;
            return this;
        }

        public Builder setCountry(@Nullable String country) {
            this.country = Input.ofNullable(country);
            return this;
        }

        public Builder setDistinguishedNameQualifier(@Nullable Input<String> distinguishedNameQualifier) {
            this.distinguishedNameQualifier = distinguishedNameQualifier;
            return this;
        }

        public Builder setDistinguishedNameQualifier(@Nullable String distinguishedNameQualifier) {
            this.distinguishedNameQualifier = Input.ofNullable(distinguishedNameQualifier);
            return this;
        }

        public Builder setGenerationQualifier(@Nullable Input<String> generationQualifier) {
            this.generationQualifier = generationQualifier;
            return this;
        }

        public Builder setGenerationQualifier(@Nullable String generationQualifier) {
            this.generationQualifier = Input.ofNullable(generationQualifier);
            return this;
        }

        public Builder setGivenName(@Nullable Input<String> givenName) {
            this.givenName = givenName;
            return this;
        }

        public Builder setGivenName(@Nullable String givenName) {
            this.givenName = Input.ofNullable(givenName);
            return this;
        }

        public Builder setInitials(@Nullable Input<String> initials) {
            this.initials = initials;
            return this;
        }

        public Builder setInitials(@Nullable String initials) {
            this.initials = Input.ofNullable(initials);
            return this;
        }

        public Builder setLocality(@Nullable Input<String> locality) {
            this.locality = locality;
            return this;
        }

        public Builder setLocality(@Nullable String locality) {
            this.locality = Input.ofNullable(locality);
            return this;
        }

        public Builder setOrganization(@Nullable Input<String> organization) {
            this.organization = organization;
            return this;
        }

        public Builder setOrganization(@Nullable String organization) {
            this.organization = Input.ofNullable(organization);
            return this;
        }

        public Builder setOrganizationalUnit(@Nullable Input<String> organizationalUnit) {
            this.organizationalUnit = organizationalUnit;
            return this;
        }

        public Builder setOrganizationalUnit(@Nullable String organizationalUnit) {
            this.organizationalUnit = Input.ofNullable(organizationalUnit);
            return this;
        }

        public Builder setPseudonym(@Nullable Input<String> pseudonym) {
            this.pseudonym = pseudonym;
            return this;
        }

        public Builder setPseudonym(@Nullable String pseudonym) {
            this.pseudonym = Input.ofNullable(pseudonym);
            return this;
        }

        public Builder setSerialNumber(@Nullable Input<String> serialNumber) {
            this.serialNumber = serialNumber;
            return this;
        }

        public Builder setSerialNumber(@Nullable String serialNumber) {
            this.serialNumber = Input.ofNullable(serialNumber);
            return this;
        }

        public Builder setState(@Nullable Input<String> state) {
            this.state = state;
            return this;
        }

        public Builder setState(@Nullable String state) {
            this.state = Input.ofNullable(state);
            return this;
        }

        public Builder setSurname(@Nullable Input<String> surname) {
            this.surname = surname;
            return this;
        }

        public Builder setSurname(@Nullable String surname) {
            this.surname = Input.ofNullable(surname);
            return this;
        }

        public Builder setTitle(@Nullable Input<String> title) {
            this.title = title;
            return this;
        }

        public Builder setTitle(@Nullable String title) {
            this.title = Input.ofNullable(title);
            return this;
        }
        public CertificateAuthoritySubjectArgs build() {
            return new CertificateAuthoritySubjectArgs(commonName, country, distinguishedNameQualifier, generationQualifier, givenName, initials, locality, organization, organizationalUnit, pseudonym, serialNumber, state, surname, title);
        }
    }
}
