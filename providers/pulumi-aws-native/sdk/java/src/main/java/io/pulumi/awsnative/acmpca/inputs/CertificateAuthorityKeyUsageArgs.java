// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.acmpca.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Structure that contains X.509 KeyUsage information.
 * 
 */
public final class CertificateAuthorityKeyUsageArgs extends io.pulumi.resources.ResourceArgs {

    public static final CertificateAuthorityKeyUsageArgs Empty = new CertificateAuthorityKeyUsageArgs();

    @Import(name="cRLSign")
      private final @Nullable Output<Boolean> cRLSign;

    public Output<Boolean> getCRLSign() {
        return this.cRLSign == null ? Output.empty() : this.cRLSign;
    }

    @Import(name="dataEncipherment")
      private final @Nullable Output<Boolean> dataEncipherment;

    public Output<Boolean> getDataEncipherment() {
        return this.dataEncipherment == null ? Output.empty() : this.dataEncipherment;
    }

    @Import(name="decipherOnly")
      private final @Nullable Output<Boolean> decipherOnly;

    public Output<Boolean> getDecipherOnly() {
        return this.decipherOnly == null ? Output.empty() : this.decipherOnly;
    }

    @Import(name="digitalSignature")
      private final @Nullable Output<Boolean> digitalSignature;

    public Output<Boolean> getDigitalSignature() {
        return this.digitalSignature == null ? Output.empty() : this.digitalSignature;
    }

    @Import(name="encipherOnly")
      private final @Nullable Output<Boolean> encipherOnly;

    public Output<Boolean> getEncipherOnly() {
        return this.encipherOnly == null ? Output.empty() : this.encipherOnly;
    }

    @Import(name="keyAgreement")
      private final @Nullable Output<Boolean> keyAgreement;

    public Output<Boolean> getKeyAgreement() {
        return this.keyAgreement == null ? Output.empty() : this.keyAgreement;
    }

    @Import(name="keyCertSign")
      private final @Nullable Output<Boolean> keyCertSign;

    public Output<Boolean> getKeyCertSign() {
        return this.keyCertSign == null ? Output.empty() : this.keyCertSign;
    }

    @Import(name="keyEncipherment")
      private final @Nullable Output<Boolean> keyEncipherment;

    public Output<Boolean> getKeyEncipherment() {
        return this.keyEncipherment == null ? Output.empty() : this.keyEncipherment;
    }

    @Import(name="nonRepudiation")
      private final @Nullable Output<Boolean> nonRepudiation;

    public Output<Boolean> getNonRepudiation() {
        return this.nonRepudiation == null ? Output.empty() : this.nonRepudiation;
    }

    public CertificateAuthorityKeyUsageArgs(
        @Nullable Output<Boolean> cRLSign,
        @Nullable Output<Boolean> dataEncipherment,
        @Nullable Output<Boolean> decipherOnly,
        @Nullable Output<Boolean> digitalSignature,
        @Nullable Output<Boolean> encipherOnly,
        @Nullable Output<Boolean> keyAgreement,
        @Nullable Output<Boolean> keyCertSign,
        @Nullable Output<Boolean> keyEncipherment,
        @Nullable Output<Boolean> nonRepudiation) {
        this.cRLSign = cRLSign;
        this.dataEncipherment = dataEncipherment;
        this.decipherOnly = decipherOnly;
        this.digitalSignature = digitalSignature;
        this.encipherOnly = encipherOnly;
        this.keyAgreement = keyAgreement;
        this.keyCertSign = keyCertSign;
        this.keyEncipherment = keyEncipherment;
        this.nonRepudiation = nonRepudiation;
    }

    private CertificateAuthorityKeyUsageArgs() {
        this.cRLSign = Output.empty();
        this.dataEncipherment = Output.empty();
        this.decipherOnly = Output.empty();
        this.digitalSignature = Output.empty();
        this.encipherOnly = Output.empty();
        this.keyAgreement = Output.empty();
        this.keyCertSign = Output.empty();
        this.keyEncipherment = Output.empty();
        this.nonRepudiation = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateAuthorityKeyUsageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> cRLSign;
        private @Nullable Output<Boolean> dataEncipherment;
        private @Nullable Output<Boolean> decipherOnly;
        private @Nullable Output<Boolean> digitalSignature;
        private @Nullable Output<Boolean> encipherOnly;
        private @Nullable Output<Boolean> keyAgreement;
        private @Nullable Output<Boolean> keyCertSign;
        private @Nullable Output<Boolean> keyEncipherment;
        private @Nullable Output<Boolean> nonRepudiation;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateAuthorityKeyUsageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cRLSign = defaults.cRLSign;
    	      this.dataEncipherment = defaults.dataEncipherment;
    	      this.decipherOnly = defaults.decipherOnly;
    	      this.digitalSignature = defaults.digitalSignature;
    	      this.encipherOnly = defaults.encipherOnly;
    	      this.keyAgreement = defaults.keyAgreement;
    	      this.keyCertSign = defaults.keyCertSign;
    	      this.keyEncipherment = defaults.keyEncipherment;
    	      this.nonRepudiation = defaults.nonRepudiation;
        }

        public Builder cRLSign(@Nullable Output<Boolean> cRLSign) {
            this.cRLSign = cRLSign;
            return this;
        }
        public Builder cRLSign(@Nullable Boolean cRLSign) {
            this.cRLSign = Output.ofNullable(cRLSign);
            return this;
        }
        public Builder dataEncipherment(@Nullable Output<Boolean> dataEncipherment) {
            this.dataEncipherment = dataEncipherment;
            return this;
        }
        public Builder dataEncipherment(@Nullable Boolean dataEncipherment) {
            this.dataEncipherment = Output.ofNullable(dataEncipherment);
            return this;
        }
        public Builder decipherOnly(@Nullable Output<Boolean> decipherOnly) {
            this.decipherOnly = decipherOnly;
            return this;
        }
        public Builder decipherOnly(@Nullable Boolean decipherOnly) {
            this.decipherOnly = Output.ofNullable(decipherOnly);
            return this;
        }
        public Builder digitalSignature(@Nullable Output<Boolean> digitalSignature) {
            this.digitalSignature = digitalSignature;
            return this;
        }
        public Builder digitalSignature(@Nullable Boolean digitalSignature) {
            this.digitalSignature = Output.ofNullable(digitalSignature);
            return this;
        }
        public Builder encipherOnly(@Nullable Output<Boolean> encipherOnly) {
            this.encipherOnly = encipherOnly;
            return this;
        }
        public Builder encipherOnly(@Nullable Boolean encipherOnly) {
            this.encipherOnly = Output.ofNullable(encipherOnly);
            return this;
        }
        public Builder keyAgreement(@Nullable Output<Boolean> keyAgreement) {
            this.keyAgreement = keyAgreement;
            return this;
        }
        public Builder keyAgreement(@Nullable Boolean keyAgreement) {
            this.keyAgreement = Output.ofNullable(keyAgreement);
            return this;
        }
        public Builder keyCertSign(@Nullable Output<Boolean> keyCertSign) {
            this.keyCertSign = keyCertSign;
            return this;
        }
        public Builder keyCertSign(@Nullable Boolean keyCertSign) {
            this.keyCertSign = Output.ofNullable(keyCertSign);
            return this;
        }
        public Builder keyEncipherment(@Nullable Output<Boolean> keyEncipherment) {
            this.keyEncipherment = keyEncipherment;
            return this;
        }
        public Builder keyEncipherment(@Nullable Boolean keyEncipherment) {
            this.keyEncipherment = Output.ofNullable(keyEncipherment);
            return this;
        }
        public Builder nonRepudiation(@Nullable Output<Boolean> nonRepudiation) {
            this.nonRepudiation = nonRepudiation;
            return this;
        }
        public Builder nonRepudiation(@Nullable Boolean nonRepudiation) {
            this.nonRepudiation = Output.ofNullable(nonRepudiation);
            return this;
        }        public CertificateAuthorityKeyUsageArgs build() {
            return new CertificateAuthorityKeyUsageArgs(cRLSign, dataEncipherment, decipherOnly, digitalSignature, encipherOnly, keyAgreement, keyCertSign, keyEncipherment, nonRepudiation);
        }
    }
}
