// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudfront;

import io.pulumi.awsnative.cloudfront.inputs.RealtimeLogConfigEndPointArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RealtimeLogConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final RealtimeLogConfigArgs Empty = new RealtimeLogConfigArgs();

    @Import(name="endPoints", required=true)
      private final Output<List<RealtimeLogConfigEndPointArgs>> endPoints;

    public Output<List<RealtimeLogConfigEndPointArgs>> endPoints() {
        return this.endPoints;
    }

    @Import(name="fields", required=true)
      private final Output<List<String>> fields;

    public Output<List<String>> fields() {
        return this.fields;
    }

    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="samplingRate", required=true)
      private final Output<Double> samplingRate;

    public Output<Double> samplingRate() {
        return this.samplingRate;
    }

    public RealtimeLogConfigArgs(
        Output<List<RealtimeLogConfigEndPointArgs>> endPoints,
        Output<List<String>> fields,
        @Nullable Output<String> name,
        Output<Double> samplingRate) {
        this.endPoints = Objects.requireNonNull(endPoints, "expected parameter 'endPoints' to be non-null");
        this.fields = Objects.requireNonNull(fields, "expected parameter 'fields' to be non-null");
        this.name = name;
        this.samplingRate = Objects.requireNonNull(samplingRate, "expected parameter 'samplingRate' to be non-null");
    }

    private RealtimeLogConfigArgs() {
        this.endPoints = Codegen.empty();
        this.fields = Codegen.empty();
        this.name = Codegen.empty();
        this.samplingRate = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RealtimeLogConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<RealtimeLogConfigEndPointArgs>> endPoints;
        private Output<List<String>> fields;
        private @Nullable Output<String> name;
        private Output<Double> samplingRate;

        public Builder() {
    	      // Empty
        }

        public Builder(RealtimeLogConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endPoints = defaults.endPoints;
    	      this.fields = defaults.fields;
    	      this.name = defaults.name;
    	      this.samplingRate = defaults.samplingRate;
        }

        public Builder endPoints(Output<List<RealtimeLogConfigEndPointArgs>> endPoints) {
            this.endPoints = Objects.requireNonNull(endPoints);
            return this;
        }
        public Builder endPoints(List<RealtimeLogConfigEndPointArgs> endPoints) {
            this.endPoints = Output.of(Objects.requireNonNull(endPoints));
            return this;
        }
        public Builder endPoints(RealtimeLogConfigEndPointArgs... endPoints) {
            return endPoints(List.of(endPoints));
        }
        public Builder fields(Output<List<String>> fields) {
            this.fields = Objects.requireNonNull(fields);
            return this;
        }
        public Builder fields(List<String> fields) {
            this.fields = Output.of(Objects.requireNonNull(fields));
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder samplingRate(Output<Double> samplingRate) {
            this.samplingRate = Objects.requireNonNull(samplingRate);
            return this;
        }
        public Builder samplingRate(Double samplingRate) {
            this.samplingRate = Output.of(Objects.requireNonNull(samplingRate));
            return this;
        }        public RealtimeLogConfigArgs build() {
            return new RealtimeLogConfigArgs(endPoints, fields, name, samplingRate);
        }
    }
}
