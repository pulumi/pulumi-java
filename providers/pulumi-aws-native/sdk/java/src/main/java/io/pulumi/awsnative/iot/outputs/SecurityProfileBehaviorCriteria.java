// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iot.outputs;

import io.pulumi.awsnative.iot.enums.SecurityProfileBehaviorCriteriaComparisonOperator;
import io.pulumi.awsnative.iot.outputs.SecurityProfileMachineLearningDetectionConfig;
import io.pulumi.awsnative.iot.outputs.SecurityProfileMetricValue;
import io.pulumi.awsnative.iot.outputs.SecurityProfileStatisticalThreshold;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class SecurityProfileBehaviorCriteria {
    /**
     * The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
     * 
     */
    private final @Nullable SecurityProfileBehaviorCriteriaComparisonOperator comparisonOperator;
    /**
     * If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
     * 
     */
    private final @Nullable Integer consecutiveDatapointsToAlarm;
    /**
     * If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
     * 
     */
    private final @Nullable Integer consecutiveDatapointsToClear;
    /**
     * Use this to specify the time duration over which the behavior is evaluated.
     * 
     */
    private final @Nullable Integer durationSeconds;
    private final @Nullable SecurityProfileMachineLearningDetectionConfig mlDetectionConfig;
    private final @Nullable SecurityProfileStatisticalThreshold statisticalThreshold;
    private final @Nullable SecurityProfileMetricValue value;

    @OutputCustomType.Constructor({"comparisonOperator","consecutiveDatapointsToAlarm","consecutiveDatapointsToClear","durationSeconds","mlDetectionConfig","statisticalThreshold","value"})
    private SecurityProfileBehaviorCriteria(
        @Nullable SecurityProfileBehaviorCriteriaComparisonOperator comparisonOperator,
        @Nullable Integer consecutiveDatapointsToAlarm,
        @Nullable Integer consecutiveDatapointsToClear,
        @Nullable Integer durationSeconds,
        @Nullable SecurityProfileMachineLearningDetectionConfig mlDetectionConfig,
        @Nullable SecurityProfileStatisticalThreshold statisticalThreshold,
        @Nullable SecurityProfileMetricValue value) {
        this.comparisonOperator = comparisonOperator;
        this.consecutiveDatapointsToAlarm = consecutiveDatapointsToAlarm;
        this.consecutiveDatapointsToClear = consecutiveDatapointsToClear;
        this.durationSeconds = durationSeconds;
        this.mlDetectionConfig = mlDetectionConfig;
        this.statisticalThreshold = statisticalThreshold;
        this.value = value;
    }

    /**
     * The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
     * 
     */
    public Optional<SecurityProfileBehaviorCriteriaComparisonOperator> getComparisonOperator() {
        return Optional.ofNullable(this.comparisonOperator);
    }
    /**
     * If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
     * 
     */
    public Optional<Integer> getConsecutiveDatapointsToAlarm() {
        return Optional.ofNullable(this.consecutiveDatapointsToAlarm);
    }
    /**
     * If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
     * 
     */
    public Optional<Integer> getConsecutiveDatapointsToClear() {
        return Optional.ofNullable(this.consecutiveDatapointsToClear);
    }
    /**
     * Use this to specify the time duration over which the behavior is evaluated.
     * 
     */
    public Optional<Integer> getDurationSeconds() {
        return Optional.ofNullable(this.durationSeconds);
    }
    public Optional<SecurityProfileMachineLearningDetectionConfig> getMlDetectionConfig() {
        return Optional.ofNullable(this.mlDetectionConfig);
    }
    public Optional<SecurityProfileStatisticalThreshold> getStatisticalThreshold() {
        return Optional.ofNullable(this.statisticalThreshold);
    }
    public Optional<SecurityProfileMetricValue> getValue() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityProfileBehaviorCriteria defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable SecurityProfileBehaviorCriteriaComparisonOperator comparisonOperator;
        private @Nullable Integer consecutiveDatapointsToAlarm;
        private @Nullable Integer consecutiveDatapointsToClear;
        private @Nullable Integer durationSeconds;
        private @Nullable SecurityProfileMachineLearningDetectionConfig mlDetectionConfig;
        private @Nullable SecurityProfileStatisticalThreshold statisticalThreshold;
        private @Nullable SecurityProfileMetricValue value;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityProfileBehaviorCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comparisonOperator = defaults.comparisonOperator;
    	      this.consecutiveDatapointsToAlarm = defaults.consecutiveDatapointsToAlarm;
    	      this.consecutiveDatapointsToClear = defaults.consecutiveDatapointsToClear;
    	      this.durationSeconds = defaults.durationSeconds;
    	      this.mlDetectionConfig = defaults.mlDetectionConfig;
    	      this.statisticalThreshold = defaults.statisticalThreshold;
    	      this.value = defaults.value;
        }

        public Builder setComparisonOperator(@Nullable SecurityProfileBehaviorCriteriaComparisonOperator comparisonOperator) {
            this.comparisonOperator = comparisonOperator;
            return this;
        }

        public Builder setConsecutiveDatapointsToAlarm(@Nullable Integer consecutiveDatapointsToAlarm) {
            this.consecutiveDatapointsToAlarm = consecutiveDatapointsToAlarm;
            return this;
        }

        public Builder setConsecutiveDatapointsToClear(@Nullable Integer consecutiveDatapointsToClear) {
            this.consecutiveDatapointsToClear = consecutiveDatapointsToClear;
            return this;
        }

        public Builder setDurationSeconds(@Nullable Integer durationSeconds) {
            this.durationSeconds = durationSeconds;
            return this;
        }

        public Builder setMlDetectionConfig(@Nullable SecurityProfileMachineLearningDetectionConfig mlDetectionConfig) {
            this.mlDetectionConfig = mlDetectionConfig;
            return this;
        }

        public Builder setStatisticalThreshold(@Nullable SecurityProfileStatisticalThreshold statisticalThreshold) {
            this.statisticalThreshold = statisticalThreshold;
            return this;
        }

        public Builder setValue(@Nullable SecurityProfileMetricValue value) {
            this.value = value;
            return this;
        }
        public SecurityProfileBehaviorCriteria build() {
            return new SecurityProfileBehaviorCriteria(comparisonOperator, consecutiveDatapointsToAlarm, consecutiveDatapointsToClear, durationSeconds, mlDetectionConfig, statisticalThreshold, value);
        }
    }
}
