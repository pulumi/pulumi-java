// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apigateway.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UsagePlanThrottleSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final UsagePlanThrottleSettingsArgs Empty = new UsagePlanThrottleSettingsArgs();

    /**
     * The maximum API request rate limit over a time ranging from one to a few seconds. The maximum API request rate limit depends on whether the underlying token bucket is at its full capacity.
     * 
     */
    @InputImport(name="burstLimit")
        private final @Nullable Input<Integer> burstLimit;

    public Input<Integer> getBurstLimit() {
        return this.burstLimit == null ? Input.empty() : this.burstLimit;
    }

    /**
     * The API request steady-state rate limit (average requests per second over an extended period of time).
     * 
     */
    @InputImport(name="rateLimit")
        private final @Nullable Input<Double> rateLimit;

    public Input<Double> getRateLimit() {
        return this.rateLimit == null ? Input.empty() : this.rateLimit;
    }

    public UsagePlanThrottleSettingsArgs(
        @Nullable Input<Integer> burstLimit,
        @Nullable Input<Double> rateLimit) {
        this.burstLimit = burstLimit;
        this.rateLimit = rateLimit;
    }

    private UsagePlanThrottleSettingsArgs() {
        this.burstLimit = Input.empty();
        this.rateLimit = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UsagePlanThrottleSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> burstLimit;
        private @Nullable Input<Double> rateLimit;

        public Builder() {
    	      // Empty
        }

        public Builder(UsagePlanThrottleSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.burstLimit = defaults.burstLimit;
    	      this.rateLimit = defaults.rateLimit;
        }

        public Builder setBurstLimit(@Nullable Input<Integer> burstLimit) {
            this.burstLimit = burstLimit;
            return this;
        }

        public Builder setBurstLimit(@Nullable Integer burstLimit) {
            this.burstLimit = Input.ofNullable(burstLimit);
            return this;
        }

        public Builder setRateLimit(@Nullable Input<Double> rateLimit) {
            this.rateLimit = rateLimit;
            return this;
        }

        public Builder setRateLimit(@Nullable Double rateLimit) {
            this.rateLimit = Input.ofNullable(rateLimit);
            return this;
        }
        public UsagePlanThrottleSettingsArgs build() {
            return new UsagePlanThrottleSettingsArgs(burstLimit, rateLimit);
        }
    }
}
