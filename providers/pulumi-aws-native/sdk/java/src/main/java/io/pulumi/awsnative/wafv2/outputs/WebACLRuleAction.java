// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2.outputs;

import io.pulumi.awsnative.wafv2.outputs.WebACLAllowAction;
import io.pulumi.awsnative.wafv2.outputs.WebACLBlockAction;
import io.pulumi.awsnative.wafv2.outputs.WebACLCaptchaAction;
import io.pulumi.awsnative.wafv2.outputs.WebACLCountAction;
import io.pulumi.core.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class WebACLRuleAction {
    private final @Nullable WebACLAllowAction allow;
    private final @Nullable WebACLBlockAction block;
    private final @Nullable WebACLCaptchaAction captcha;
    private final @Nullable WebACLCountAction count;

    @OutputCustomType.Constructor
    private WebACLRuleAction(
        @OutputCustomType.Parameter("allow") @Nullable WebACLAllowAction allow,
        @OutputCustomType.Parameter("block") @Nullable WebACLBlockAction block,
        @OutputCustomType.Parameter("captcha") @Nullable WebACLCaptchaAction captcha,
        @OutputCustomType.Parameter("count") @Nullable WebACLCountAction count) {
        this.allow = allow;
        this.block = block;
        this.captcha = captcha;
        this.count = count;
    }

    public Optional<WebACLAllowAction> getAllow() {
        return Optional.ofNullable(this.allow);
    }
    public Optional<WebACLBlockAction> getBlock() {
        return Optional.ofNullable(this.block);
    }
    public Optional<WebACLCaptchaAction> getCaptcha() {
        return Optional.ofNullable(this.captcha);
    }
    public Optional<WebACLCountAction> getCount() {
        return Optional.ofNullable(this.count);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebACLRuleAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable WebACLAllowAction allow;
        private @Nullable WebACLBlockAction block;
        private @Nullable WebACLCaptchaAction captcha;
        private @Nullable WebACLCountAction count;

        public Builder() {
    	      // Empty
        }

        public Builder(WebACLRuleAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allow = defaults.allow;
    	      this.block = defaults.block;
    	      this.captcha = defaults.captcha;
    	      this.count = defaults.count;
        }

        public Builder allow(@Nullable WebACLAllowAction allow) {
            this.allow = allow;
            return this;
        }

        public Builder block(@Nullable WebACLBlockAction block) {
            this.block = block;
            return this;
        }

        public Builder captcha(@Nullable WebACLCaptchaAction captcha) {
            this.captcha = captcha;
            return this;
        }

        public Builder count(@Nullable WebACLCountAction count) {
            this.count = count;
            return this;
        }
        public WebACLRuleAction build() {
            return new WebACLRuleAction(allow, block, captcha, count);
        }
    }
}
