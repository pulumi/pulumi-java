// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotsitewise;

import io.pulumi.awsnative.iotsitewise.inputs.AccessPolicyIdentityArgs;
import io.pulumi.awsnative.iotsitewise.inputs.AccessPolicyResourceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class AccessPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccessPolicyArgs Empty = new AccessPolicyArgs();

    /**
     * The identity for this access policy. Choose either a user or a group but not both.
     * 
     */
    @InputImport(name="accessPolicyIdentity", required=true)
      private final Output<AccessPolicyIdentityArgs> accessPolicyIdentity;

    public Output<AccessPolicyIdentityArgs> getAccessPolicyIdentity() {
        return this.accessPolicyIdentity;
    }

    /**
     * The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER.
     * 
     */
    @InputImport(name="accessPolicyPermission", required=true)
      private final Output<String> accessPolicyPermission;

    public Output<String> getAccessPolicyPermission() {
        return this.accessPolicyPermission;
    }

    /**
     * The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both.
     * 
     */
    @InputImport(name="accessPolicyResource", required=true)
      private final Output<AccessPolicyResourceArgs> accessPolicyResource;

    public Output<AccessPolicyResourceArgs> getAccessPolicyResource() {
        return this.accessPolicyResource;
    }

    public AccessPolicyArgs(
        Output<AccessPolicyIdentityArgs> accessPolicyIdentity,
        Output<String> accessPolicyPermission,
        Output<AccessPolicyResourceArgs> accessPolicyResource) {
        this.accessPolicyIdentity = Objects.requireNonNull(accessPolicyIdentity, "expected parameter 'accessPolicyIdentity' to be non-null");
        this.accessPolicyPermission = Objects.requireNonNull(accessPolicyPermission, "expected parameter 'accessPolicyPermission' to be non-null");
        this.accessPolicyResource = Objects.requireNonNull(accessPolicyResource, "expected parameter 'accessPolicyResource' to be non-null");
    }

    private AccessPolicyArgs() {
        this.accessPolicyIdentity = Output.empty();
        this.accessPolicyPermission = Output.empty();
        this.accessPolicyResource = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<AccessPolicyIdentityArgs> accessPolicyIdentity;
        private Output<String> accessPolicyPermission;
        private Output<AccessPolicyResourceArgs> accessPolicyResource;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicyIdentity = defaults.accessPolicyIdentity;
    	      this.accessPolicyPermission = defaults.accessPolicyPermission;
    	      this.accessPolicyResource = defaults.accessPolicyResource;
        }

        public Builder accessPolicyIdentity(Output<AccessPolicyIdentityArgs> accessPolicyIdentity) {
            this.accessPolicyIdentity = Objects.requireNonNull(accessPolicyIdentity);
            return this;
        }

        public Builder accessPolicyIdentity(AccessPolicyIdentityArgs accessPolicyIdentity) {
            this.accessPolicyIdentity = Output.of(Objects.requireNonNull(accessPolicyIdentity));
            return this;
        }

        public Builder accessPolicyPermission(Output<String> accessPolicyPermission) {
            this.accessPolicyPermission = Objects.requireNonNull(accessPolicyPermission);
            return this;
        }

        public Builder accessPolicyPermission(String accessPolicyPermission) {
            this.accessPolicyPermission = Output.of(Objects.requireNonNull(accessPolicyPermission));
            return this;
        }

        public Builder accessPolicyResource(Output<AccessPolicyResourceArgs> accessPolicyResource) {
            this.accessPolicyResource = Objects.requireNonNull(accessPolicyResource);
            return this;
        }

        public Builder accessPolicyResource(AccessPolicyResourceArgs accessPolicyResource) {
            this.accessPolicyResource = Output.of(Objects.requireNonNull(accessPolicyResource));
            return this;
        }
        public AccessPolicyArgs build() {
            return new AccessPolicyArgs(accessPolicyIdentity, accessPolicyPermission, accessPolicyResource);
        }
    }
}
