// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.backup.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BackupPlanLifecycleResourceTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final BackupPlanLifecycleResourceTypeArgs Empty = new BackupPlanLifecycleResourceTypeArgs();

    @InputImport(name="deleteAfterDays")
        private final @Nullable Input<Double> deleteAfterDays;

    public Input<Double> getDeleteAfterDays() {
        return this.deleteAfterDays == null ? Input.empty() : this.deleteAfterDays;
    }

    @InputImport(name="moveToColdStorageAfterDays")
        private final @Nullable Input<Double> moveToColdStorageAfterDays;

    public Input<Double> getMoveToColdStorageAfterDays() {
        return this.moveToColdStorageAfterDays == null ? Input.empty() : this.moveToColdStorageAfterDays;
    }

    public BackupPlanLifecycleResourceTypeArgs(
        @Nullable Input<Double> deleteAfterDays,
        @Nullable Input<Double> moveToColdStorageAfterDays) {
        this.deleteAfterDays = deleteAfterDays;
        this.moveToColdStorageAfterDays = moveToColdStorageAfterDays;
    }

    private BackupPlanLifecycleResourceTypeArgs() {
        this.deleteAfterDays = Input.empty();
        this.moveToColdStorageAfterDays = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupPlanLifecycleResourceTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Double> deleteAfterDays;
        private @Nullable Input<Double> moveToColdStorageAfterDays;

        public Builder() {
    	      // Empty
        }

        public Builder(BackupPlanLifecycleResourceTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteAfterDays = defaults.deleteAfterDays;
    	      this.moveToColdStorageAfterDays = defaults.moveToColdStorageAfterDays;
        }

        public Builder setDeleteAfterDays(@Nullable Input<Double> deleteAfterDays) {
            this.deleteAfterDays = deleteAfterDays;
            return this;
        }

        public Builder setDeleteAfterDays(@Nullable Double deleteAfterDays) {
            this.deleteAfterDays = Input.ofNullable(deleteAfterDays);
            return this;
        }

        public Builder setMoveToColdStorageAfterDays(@Nullable Input<Double> moveToColdStorageAfterDays) {
            this.moveToColdStorageAfterDays = moveToColdStorageAfterDays;
            return this;
        }

        public Builder setMoveToColdStorageAfterDays(@Nullable Double moveToColdStorageAfterDays) {
            this.moveToColdStorageAfterDays = Input.ofNullable(moveToColdStorageAfterDays);
            return this;
        }
        public BackupPlanLifecycleResourceTypeArgs build() {
            return new BackupPlanLifecycleResourceTypeArgs(deleteAfterDays, moveToColdStorageAfterDays);
        }
    }
}
