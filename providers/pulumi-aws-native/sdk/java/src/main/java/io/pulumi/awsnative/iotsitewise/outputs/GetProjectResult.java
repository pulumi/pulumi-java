// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotsitewise.outputs;

import io.pulumi.awsnative.iotsitewise.outputs.ProjectTag;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProjectResult {
    /**
     * The IDs of the assets to be associated to the project.
     * 
     */
    private final @Nullable List<String> assetIds;
    /**
     * The ARN of the project.
     * 
     */
    private final @Nullable String projectArn;
    /**
     * A description for the project.
     * 
     */
    private final @Nullable String projectDescription;
    /**
     * The ID of the project.
     * 
     */
    private final @Nullable String projectId;
    /**
     * A friendly name for the project.
     * 
     */
    private final @Nullable String projectName;
    /**
     * A list of key-value pairs that contain metadata for the project.
     * 
     */
    private final @Nullable List<ProjectTag> tags;

    @CustomType.Constructor
    private GetProjectResult(
        @CustomType.Parameter("assetIds") @Nullable List<String> assetIds,
        @CustomType.Parameter("projectArn") @Nullable String projectArn,
        @CustomType.Parameter("projectDescription") @Nullable String projectDescription,
        @CustomType.Parameter("projectId") @Nullable String projectId,
        @CustomType.Parameter("projectName") @Nullable String projectName,
        @CustomType.Parameter("tags") @Nullable List<ProjectTag> tags) {
        this.assetIds = assetIds;
        this.projectArn = projectArn;
        this.projectDescription = projectDescription;
        this.projectId = projectId;
        this.projectName = projectName;
        this.tags = tags;
    }

    /**
     * The IDs of the assets to be associated to the project.
     * 
    */
    public List<String> assetIds() {
        return this.assetIds == null ? List.of() : this.assetIds;
    }
    /**
     * The ARN of the project.
     * 
    */
    public Optional<String> projectArn() {
        return Optional.ofNullable(this.projectArn);
    }
    /**
     * A description for the project.
     * 
    */
    public Optional<String> projectDescription() {
        return Optional.ofNullable(this.projectDescription);
    }
    /**
     * The ID of the project.
     * 
    */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * A friendly name for the project.
     * 
    */
    public Optional<String> projectName() {
        return Optional.ofNullable(this.projectName);
    }
    /**
     * A list of key-value pairs that contain metadata for the project.
     * 
    */
    public List<ProjectTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> assetIds;
        private @Nullable String projectArn;
        private @Nullable String projectDescription;
        private @Nullable String projectId;
        private @Nullable String projectName;
        private @Nullable List<ProjectTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProjectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetIds = defaults.assetIds;
    	      this.projectArn = defaults.projectArn;
    	      this.projectDescription = defaults.projectDescription;
    	      this.projectId = defaults.projectId;
    	      this.projectName = defaults.projectName;
    	      this.tags = defaults.tags;
        }

        public Builder assetIds(@Nullable List<String> assetIds) {
            this.assetIds = assetIds;
            return this;
        }
        public Builder assetIds(String... assetIds) {
            return assetIds(List.of(assetIds));
        }
        public Builder projectArn(@Nullable String projectArn) {
            this.projectArn = projectArn;
            return this;
        }
        public Builder projectDescription(@Nullable String projectDescription) {
            this.projectDescription = projectDescription;
            return this;
        }
        public Builder projectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }
        public Builder projectName(@Nullable String projectName) {
            this.projectName = projectName;
            return this;
        }
        public Builder tags(@Nullable List<ProjectTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(ProjectTag... tags) {
            return tags(List.of(tags));
        }        public GetProjectResult build() {
            return new GetProjectResult(assetIds, projectArn, projectDescription, projectId, projectName, tags);
        }
    }
}
