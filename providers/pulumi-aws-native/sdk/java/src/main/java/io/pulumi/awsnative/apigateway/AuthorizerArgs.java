// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apigateway;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AuthorizerArgs extends io.pulumi.resources.ResourceArgs {

    public static final AuthorizerArgs Empty = new AuthorizerArgs();

    /**
     * Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
     * 
     */
    @Import(name="authType")
      private final @Nullable Output<String> authType;

    public Output<String> authType() {
        return this.authType == null ? Codegen.empty() : this.authType;
    }

    /**
     * Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
     * 
     */
    @Import(name="authorizerCredentials")
      private final @Nullable Output<String> authorizerCredentials;

    public Output<String> authorizerCredentials() {
        return this.authorizerCredentials == null ? Codegen.empty() : this.authorizerCredentials;
    }

    /**
     * The TTL in seconds of cached authorizer results.
     * 
     */
    @Import(name="authorizerResultTtlInSeconds")
      private final @Nullable Output<Integer> authorizerResultTtlInSeconds;

    public Output<Integer> authorizerResultTtlInSeconds() {
        return this.authorizerResultTtlInSeconds == null ? Codegen.empty() : this.authorizerResultTtlInSeconds;
    }

    /**
     * Specifies the authorizer's Uniform Resource Identifier (URI).
     * 
     */
    @Import(name="authorizerUri")
      private final @Nullable Output<String> authorizerUri;

    public Output<String> authorizerUri() {
        return this.authorizerUri == null ? Codegen.empty() : this.authorizerUri;
    }

    /**
     * The identity source for which authorization is requested.
     * 
     */
    @Import(name="identitySource")
      private final @Nullable Output<String> identitySource;

    public Output<String> identitySource() {
        return this.identitySource == null ? Codegen.empty() : this.identitySource;
    }

    /**
     * A validation expression for the incoming identity token.
     * 
     */
    @Import(name="identityValidationExpression")
      private final @Nullable Output<String> identityValidationExpression;

    public Output<String> identityValidationExpression() {
        return this.identityValidationExpression == null ? Codegen.empty() : this.identityValidationExpression;
    }

    /**
     * The name of the authorizer.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
     * 
     */
    @Import(name="providerARNs")
      private final @Nullable Output<List<String>> providerARNs;

    public Output<List<String>> providerARNs() {
        return this.providerARNs == null ? Codegen.empty() : this.providerARNs;
    }

    /**
     * The identifier of the API.
     * 
     */
    @Import(name="restApiId", required=true)
      private final Output<String> restApiId;

    public Output<String> restApiId() {
        return this.restApiId;
    }

    /**
     * The authorizer type.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    public AuthorizerArgs(
        @Nullable Output<String> authType,
        @Nullable Output<String> authorizerCredentials,
        @Nullable Output<Integer> authorizerResultTtlInSeconds,
        @Nullable Output<String> authorizerUri,
        @Nullable Output<String> identitySource,
        @Nullable Output<String> identityValidationExpression,
        @Nullable Output<String> name,
        @Nullable Output<List<String>> providerARNs,
        Output<String> restApiId,
        Output<String> type) {
        this.authType = authType;
        this.authorizerCredentials = authorizerCredentials;
        this.authorizerResultTtlInSeconds = authorizerResultTtlInSeconds;
        this.authorizerUri = authorizerUri;
        this.identitySource = identitySource;
        this.identityValidationExpression = identityValidationExpression;
        this.name = name;
        this.providerARNs = providerARNs;
        this.restApiId = Objects.requireNonNull(restApiId, "expected parameter 'restApiId' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private AuthorizerArgs() {
        this.authType = Codegen.empty();
        this.authorizerCredentials = Codegen.empty();
        this.authorizerResultTtlInSeconds = Codegen.empty();
        this.authorizerUri = Codegen.empty();
        this.identitySource = Codegen.empty();
        this.identityValidationExpression = Codegen.empty();
        this.name = Codegen.empty();
        this.providerARNs = Codegen.empty();
        this.restApiId = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthorizerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> authType;
        private @Nullable Output<String> authorizerCredentials;
        private @Nullable Output<Integer> authorizerResultTtlInSeconds;
        private @Nullable Output<String> authorizerUri;
        private @Nullable Output<String> identitySource;
        private @Nullable Output<String> identityValidationExpression;
        private @Nullable Output<String> name;
        private @Nullable Output<List<String>> providerARNs;
        private Output<String> restApiId;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthorizerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authType = defaults.authType;
    	      this.authorizerCredentials = defaults.authorizerCredentials;
    	      this.authorizerResultTtlInSeconds = defaults.authorizerResultTtlInSeconds;
    	      this.authorizerUri = defaults.authorizerUri;
    	      this.identitySource = defaults.identitySource;
    	      this.identityValidationExpression = defaults.identityValidationExpression;
    	      this.name = defaults.name;
    	      this.providerARNs = defaults.providerARNs;
    	      this.restApiId = defaults.restApiId;
    	      this.type = defaults.type;
        }

        public Builder authType(@Nullable Output<String> authType) {
            this.authType = authType;
            return this;
        }
        public Builder authType(@Nullable String authType) {
            this.authType = Codegen.ofNullable(authType);
            return this;
        }
        public Builder authorizerCredentials(@Nullable Output<String> authorizerCredentials) {
            this.authorizerCredentials = authorizerCredentials;
            return this;
        }
        public Builder authorizerCredentials(@Nullable String authorizerCredentials) {
            this.authorizerCredentials = Codegen.ofNullable(authorizerCredentials);
            return this;
        }
        public Builder authorizerResultTtlInSeconds(@Nullable Output<Integer> authorizerResultTtlInSeconds) {
            this.authorizerResultTtlInSeconds = authorizerResultTtlInSeconds;
            return this;
        }
        public Builder authorizerResultTtlInSeconds(@Nullable Integer authorizerResultTtlInSeconds) {
            this.authorizerResultTtlInSeconds = Codegen.ofNullable(authorizerResultTtlInSeconds);
            return this;
        }
        public Builder authorizerUri(@Nullable Output<String> authorizerUri) {
            this.authorizerUri = authorizerUri;
            return this;
        }
        public Builder authorizerUri(@Nullable String authorizerUri) {
            this.authorizerUri = Codegen.ofNullable(authorizerUri);
            return this;
        }
        public Builder identitySource(@Nullable Output<String> identitySource) {
            this.identitySource = identitySource;
            return this;
        }
        public Builder identitySource(@Nullable String identitySource) {
            this.identitySource = Codegen.ofNullable(identitySource);
            return this;
        }
        public Builder identityValidationExpression(@Nullable Output<String> identityValidationExpression) {
            this.identityValidationExpression = identityValidationExpression;
            return this;
        }
        public Builder identityValidationExpression(@Nullable String identityValidationExpression) {
            this.identityValidationExpression = Codegen.ofNullable(identityValidationExpression);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder providerARNs(@Nullable Output<List<String>> providerARNs) {
            this.providerARNs = providerARNs;
            return this;
        }
        public Builder providerARNs(@Nullable List<String> providerARNs) {
            this.providerARNs = Codegen.ofNullable(providerARNs);
            return this;
        }
        public Builder providerARNs(String... providerARNs) {
            return providerARNs(List.of(providerARNs));
        }
        public Builder restApiId(Output<String> restApiId) {
            this.restApiId = Objects.requireNonNull(restApiId);
            return this;
        }
        public Builder restApiId(String restApiId) {
            this.restApiId = Output.of(Objects.requireNonNull(restApiId));
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public AuthorizerArgs build() {
            return new AuthorizerArgs(authType, authorizerCredentials, authorizerResultTtlInSeconds, authorizerUri, identitySource, identityValidationExpression, name, providerARNs, restApiId, type);
        }
    }
}
