// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.stepfunctions;

import io.pulumi.awsnative.stepfunctions.enums.StateMachineType;
import io.pulumi.awsnative.stepfunctions.inputs.StateMachineDefinitionArgs;
import io.pulumi.awsnative.stepfunctions.inputs.StateMachineDefinitionSubstitutionsArgs;
import io.pulumi.awsnative.stepfunctions.inputs.StateMachineLoggingConfigurationArgs;
import io.pulumi.awsnative.stepfunctions.inputs.StateMachineS3LocationArgs;
import io.pulumi.awsnative.stepfunctions.inputs.StateMachineTagsEntryArgs;
import io.pulumi.awsnative.stepfunctions.inputs.StateMachineTracingConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StateMachineArgs extends io.pulumi.resources.ResourceArgs {

    public static final StateMachineArgs Empty = new StateMachineArgs();

    @InputImport(name="definition")
      private final @Nullable Input<StateMachineDefinitionArgs> definition;

    public Input<StateMachineDefinitionArgs> getDefinition() {
        return this.definition == null ? Input.empty() : this.definition;
    }

    @InputImport(name="definitionS3Location")
      private final @Nullable Input<StateMachineS3LocationArgs> definitionS3Location;

    public Input<StateMachineS3LocationArgs> getDefinitionS3Location() {
        return this.definitionS3Location == null ? Input.empty() : this.definitionS3Location;
    }

    @InputImport(name="definitionString")
      private final @Nullable Input<String> definitionString;

    public Input<String> getDefinitionString() {
        return this.definitionString == null ? Input.empty() : this.definitionString;
    }

    @InputImport(name="definitionSubstitutions")
      private final @Nullable Input<StateMachineDefinitionSubstitutionsArgs> definitionSubstitutions;

    public Input<StateMachineDefinitionSubstitutionsArgs> getDefinitionSubstitutions() {
        return this.definitionSubstitutions == null ? Input.empty() : this.definitionSubstitutions;
    }

    @InputImport(name="loggingConfiguration")
      private final @Nullable Input<StateMachineLoggingConfigurationArgs> loggingConfiguration;

    public Input<StateMachineLoggingConfigurationArgs> getLoggingConfiguration() {
        return this.loggingConfiguration == null ? Input.empty() : this.loggingConfiguration;
    }

    @InputImport(name="roleArn", required=true)
      private final Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn;
    }

    @InputImport(name="stateMachineName")
      private final @Nullable Input<String> stateMachineName;

    public Input<String> getStateMachineName() {
        return this.stateMachineName == null ? Input.empty() : this.stateMachineName;
    }

    @InputImport(name="stateMachineType")
      private final @Nullable Input<StateMachineType> stateMachineType;

    public Input<StateMachineType> getStateMachineType() {
        return this.stateMachineType == null ? Input.empty() : this.stateMachineType;
    }

    @InputImport(name="tags")
      private final @Nullable Input<List<StateMachineTagsEntryArgs>> tags;

    public Input<List<StateMachineTagsEntryArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="tracingConfiguration")
      private final @Nullable Input<StateMachineTracingConfigurationArgs> tracingConfiguration;

    public Input<StateMachineTracingConfigurationArgs> getTracingConfiguration() {
        return this.tracingConfiguration == null ? Input.empty() : this.tracingConfiguration;
    }

    public StateMachineArgs(
        @Nullable Input<StateMachineDefinitionArgs> definition,
        @Nullable Input<StateMachineS3LocationArgs> definitionS3Location,
        @Nullable Input<String> definitionString,
        @Nullable Input<StateMachineDefinitionSubstitutionsArgs> definitionSubstitutions,
        @Nullable Input<StateMachineLoggingConfigurationArgs> loggingConfiguration,
        Input<String> roleArn,
        @Nullable Input<String> stateMachineName,
        @Nullable Input<StateMachineType> stateMachineType,
        @Nullable Input<List<StateMachineTagsEntryArgs>> tags,
        @Nullable Input<StateMachineTracingConfigurationArgs> tracingConfiguration) {
        this.definition = definition;
        this.definitionS3Location = definitionS3Location;
        this.definitionString = definitionString;
        this.definitionSubstitutions = definitionSubstitutions;
        this.loggingConfiguration = loggingConfiguration;
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.stateMachineName = stateMachineName;
        this.stateMachineType = stateMachineType;
        this.tags = tags;
        this.tracingConfiguration = tracingConfiguration;
    }

    private StateMachineArgs() {
        this.definition = Input.empty();
        this.definitionS3Location = Input.empty();
        this.definitionString = Input.empty();
        this.definitionSubstitutions = Input.empty();
        this.loggingConfiguration = Input.empty();
        this.roleArn = Input.empty();
        this.stateMachineName = Input.empty();
        this.stateMachineType = Input.empty();
        this.tags = Input.empty();
        this.tracingConfiguration = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StateMachineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<StateMachineDefinitionArgs> definition;
        private @Nullable Input<StateMachineS3LocationArgs> definitionS3Location;
        private @Nullable Input<String> definitionString;
        private @Nullable Input<StateMachineDefinitionSubstitutionsArgs> definitionSubstitutions;
        private @Nullable Input<StateMachineLoggingConfigurationArgs> loggingConfiguration;
        private Input<String> roleArn;
        private @Nullable Input<String> stateMachineName;
        private @Nullable Input<StateMachineType> stateMachineType;
        private @Nullable Input<List<StateMachineTagsEntryArgs>> tags;
        private @Nullable Input<StateMachineTracingConfigurationArgs> tracingConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(StateMachineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definition = defaults.definition;
    	      this.definitionS3Location = defaults.definitionS3Location;
    	      this.definitionString = defaults.definitionString;
    	      this.definitionSubstitutions = defaults.definitionSubstitutions;
    	      this.loggingConfiguration = defaults.loggingConfiguration;
    	      this.roleArn = defaults.roleArn;
    	      this.stateMachineName = defaults.stateMachineName;
    	      this.stateMachineType = defaults.stateMachineType;
    	      this.tags = defaults.tags;
    	      this.tracingConfiguration = defaults.tracingConfiguration;
        }

        public Builder definition(@Nullable Input<StateMachineDefinitionArgs> definition) {
            this.definition = definition;
            return this;
        }

        public Builder definition(@Nullable StateMachineDefinitionArgs definition) {
            this.definition = Input.ofNullable(definition);
            return this;
        }

        public Builder definitionS3Location(@Nullable Input<StateMachineS3LocationArgs> definitionS3Location) {
            this.definitionS3Location = definitionS3Location;
            return this;
        }

        public Builder definitionS3Location(@Nullable StateMachineS3LocationArgs definitionS3Location) {
            this.definitionS3Location = Input.ofNullable(definitionS3Location);
            return this;
        }

        public Builder definitionString(@Nullable Input<String> definitionString) {
            this.definitionString = definitionString;
            return this;
        }

        public Builder definitionString(@Nullable String definitionString) {
            this.definitionString = Input.ofNullable(definitionString);
            return this;
        }

        public Builder definitionSubstitutions(@Nullable Input<StateMachineDefinitionSubstitutionsArgs> definitionSubstitutions) {
            this.definitionSubstitutions = definitionSubstitutions;
            return this;
        }

        public Builder definitionSubstitutions(@Nullable StateMachineDefinitionSubstitutionsArgs definitionSubstitutions) {
            this.definitionSubstitutions = Input.ofNullable(definitionSubstitutions);
            return this;
        }

        public Builder loggingConfiguration(@Nullable Input<StateMachineLoggingConfigurationArgs> loggingConfiguration) {
            this.loggingConfiguration = loggingConfiguration;
            return this;
        }

        public Builder loggingConfiguration(@Nullable StateMachineLoggingConfigurationArgs loggingConfiguration) {
            this.loggingConfiguration = Input.ofNullable(loggingConfiguration);
            return this;
        }

        public Builder roleArn(Input<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder roleArn(String roleArn) {
            this.roleArn = Input.of(Objects.requireNonNull(roleArn));
            return this;
        }

        public Builder stateMachineName(@Nullable Input<String> stateMachineName) {
            this.stateMachineName = stateMachineName;
            return this;
        }

        public Builder stateMachineName(@Nullable String stateMachineName) {
            this.stateMachineName = Input.ofNullable(stateMachineName);
            return this;
        }

        public Builder stateMachineType(@Nullable Input<StateMachineType> stateMachineType) {
            this.stateMachineType = stateMachineType;
            return this;
        }

        public Builder stateMachineType(@Nullable StateMachineType stateMachineType) {
            this.stateMachineType = Input.ofNullable(stateMachineType);
            return this;
        }

        public Builder tags(@Nullable Input<List<StateMachineTagsEntryArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<StateMachineTagsEntryArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder tracingConfiguration(@Nullable Input<StateMachineTracingConfigurationArgs> tracingConfiguration) {
            this.tracingConfiguration = tracingConfiguration;
            return this;
        }

        public Builder tracingConfiguration(@Nullable StateMachineTracingConfigurationArgs tracingConfiguration) {
            this.tracingConfiguration = Input.ofNullable(tracingConfiguration);
            return this;
        }
        public StateMachineArgs build() {
            return new StateMachineArgs(definition, definitionS3Location, definitionString, definitionSubstitutions, loggingConfiguration, roleArn, stateMachineName, stateMachineType, tags, tracingConfiguration);
        }
    }
}
