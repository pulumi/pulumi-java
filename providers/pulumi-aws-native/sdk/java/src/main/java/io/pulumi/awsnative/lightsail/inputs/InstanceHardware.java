// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lightsail.inputs;

import io.pulumi.awsnative.lightsail.inputs.InstanceDisk;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Hardware of the Instance.
 * 
 */
public final class InstanceHardware extends io.pulumi.resources.InvokeArgs {

    public static final InstanceHardware Empty = new InstanceHardware();

    /**
     * CPU count of the Instance.
     * 
     */
    @Import(name="cpuCount")
      private final @Nullable Integer cpuCount;

    public Optional<Integer> cpuCount() {
        return this.cpuCount == null ? Optional.empty() : Optional.ofNullable(this.cpuCount);
    }

    /**
     * Disks attached to the Instance.
     * 
     */
    @Import(name="disks")
      private final @Nullable List<InstanceDisk> disks;

    public List<InstanceDisk> disks() {
        return this.disks == null ? List.of() : this.disks;
    }

    /**
     * RAM Size of the Instance.
     * 
     */
    @Import(name="ramSizeInGb")
      private final @Nullable Integer ramSizeInGb;

    public Optional<Integer> ramSizeInGb() {
        return this.ramSizeInGb == null ? Optional.empty() : Optional.ofNullable(this.ramSizeInGb);
    }

    public InstanceHardware(
        @Nullable Integer cpuCount,
        @Nullable List<InstanceDisk> disks,
        @Nullable Integer ramSizeInGb) {
        this.cpuCount = cpuCount;
        this.disks = disks;
        this.ramSizeInGb = ramSizeInGb;
    }

    private InstanceHardware() {
        this.cpuCount = null;
        this.disks = List.of();
        this.ramSizeInGb = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceHardware defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer cpuCount;
        private @Nullable List<InstanceDisk> disks;
        private @Nullable Integer ramSizeInGb;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceHardware defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuCount = defaults.cpuCount;
    	      this.disks = defaults.disks;
    	      this.ramSizeInGb = defaults.ramSizeInGb;
        }

        public Builder cpuCount(@Nullable Integer cpuCount) {
            this.cpuCount = cpuCount;
            return this;
        }
        public Builder disks(@Nullable List<InstanceDisk> disks) {
            this.disks = disks;
            return this;
        }
        public Builder disks(InstanceDisk... disks) {
            return disks(List.of(disks));
        }
        public Builder ramSizeInGb(@Nullable Integer ramSizeInGb) {
            this.ramSizeInGb = ramSizeInGb;
            return this;
        }        public InstanceHardware build() {
            return new InstanceHardware(cpuCount, disks, ramSizeInGb);
        }
    }
}
