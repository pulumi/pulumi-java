// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kendra.inputs;

import io.pulumi.awsnative.kendra.inputs.DataSourceToIndexFieldMappingArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DataSourceServiceNowServiceCatalogConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataSourceServiceNowServiceCatalogConfigurationArgs Empty = new DataSourceServiceNowServiceCatalogConfigurationArgs();

    @InputImport(name="crawlAttachments")
      private final @Nullable Output<Boolean> crawlAttachments;

    public Output<Boolean> getCrawlAttachments() {
        return this.crawlAttachments == null ? Output.empty() : this.crawlAttachments;
    }

    @InputImport(name="documentDataFieldName", required=true)
      private final Output<String> documentDataFieldName;

    public Output<String> getDocumentDataFieldName() {
        return this.documentDataFieldName;
    }

    @InputImport(name="documentTitleFieldName")
      private final @Nullable Output<String> documentTitleFieldName;

    public Output<String> getDocumentTitleFieldName() {
        return this.documentTitleFieldName == null ? Output.empty() : this.documentTitleFieldName;
    }

    @InputImport(name="excludeAttachmentFilePatterns")
      private final @Nullable Output<List<String>> excludeAttachmentFilePatterns;

    public Output<List<String>> getExcludeAttachmentFilePatterns() {
        return this.excludeAttachmentFilePatterns == null ? Output.empty() : this.excludeAttachmentFilePatterns;
    }

    @InputImport(name="fieldMappings")
      private final @Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings;

    public Output<List<DataSourceToIndexFieldMappingArgs>> getFieldMappings() {
        return this.fieldMappings == null ? Output.empty() : this.fieldMappings;
    }

    @InputImport(name="includeAttachmentFilePatterns")
      private final @Nullable Output<List<String>> includeAttachmentFilePatterns;

    public Output<List<String>> getIncludeAttachmentFilePatterns() {
        return this.includeAttachmentFilePatterns == null ? Output.empty() : this.includeAttachmentFilePatterns;
    }

    public DataSourceServiceNowServiceCatalogConfigurationArgs(
        @Nullable Output<Boolean> crawlAttachments,
        Output<String> documentDataFieldName,
        @Nullable Output<String> documentTitleFieldName,
        @Nullable Output<List<String>> excludeAttachmentFilePatterns,
        @Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings,
        @Nullable Output<List<String>> includeAttachmentFilePatterns) {
        this.crawlAttachments = crawlAttachments;
        this.documentDataFieldName = Objects.requireNonNull(documentDataFieldName, "expected parameter 'documentDataFieldName' to be non-null");
        this.documentTitleFieldName = documentTitleFieldName;
        this.excludeAttachmentFilePatterns = excludeAttachmentFilePatterns;
        this.fieldMappings = fieldMappings;
        this.includeAttachmentFilePatterns = includeAttachmentFilePatterns;
    }

    private DataSourceServiceNowServiceCatalogConfigurationArgs() {
        this.crawlAttachments = Output.empty();
        this.documentDataFieldName = Output.empty();
        this.documentTitleFieldName = Output.empty();
        this.excludeAttachmentFilePatterns = Output.empty();
        this.fieldMappings = Output.empty();
        this.includeAttachmentFilePatterns = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceServiceNowServiceCatalogConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> crawlAttachments;
        private Output<String> documentDataFieldName;
        private @Nullable Output<String> documentTitleFieldName;
        private @Nullable Output<List<String>> excludeAttachmentFilePatterns;
        private @Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings;
        private @Nullable Output<List<String>> includeAttachmentFilePatterns;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceServiceNowServiceCatalogConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.crawlAttachments = defaults.crawlAttachments;
    	      this.documentDataFieldName = defaults.documentDataFieldName;
    	      this.documentTitleFieldName = defaults.documentTitleFieldName;
    	      this.excludeAttachmentFilePatterns = defaults.excludeAttachmentFilePatterns;
    	      this.fieldMappings = defaults.fieldMappings;
    	      this.includeAttachmentFilePatterns = defaults.includeAttachmentFilePatterns;
        }

        public Builder crawlAttachments(@Nullable Output<Boolean> crawlAttachments) {
            this.crawlAttachments = crawlAttachments;
            return this;
        }

        public Builder crawlAttachments(@Nullable Boolean crawlAttachments) {
            this.crawlAttachments = Output.ofNullable(crawlAttachments);
            return this;
        }

        public Builder documentDataFieldName(Output<String> documentDataFieldName) {
            this.documentDataFieldName = Objects.requireNonNull(documentDataFieldName);
            return this;
        }

        public Builder documentDataFieldName(String documentDataFieldName) {
            this.documentDataFieldName = Output.of(Objects.requireNonNull(documentDataFieldName));
            return this;
        }

        public Builder documentTitleFieldName(@Nullable Output<String> documentTitleFieldName) {
            this.documentTitleFieldName = documentTitleFieldName;
            return this;
        }

        public Builder documentTitleFieldName(@Nullable String documentTitleFieldName) {
            this.documentTitleFieldName = Output.ofNullable(documentTitleFieldName);
            return this;
        }

        public Builder excludeAttachmentFilePatterns(@Nullable Output<List<String>> excludeAttachmentFilePatterns) {
            this.excludeAttachmentFilePatterns = excludeAttachmentFilePatterns;
            return this;
        }

        public Builder excludeAttachmentFilePatterns(@Nullable List<String> excludeAttachmentFilePatterns) {
            this.excludeAttachmentFilePatterns = Output.ofNullable(excludeAttachmentFilePatterns);
            return this;
        }

        public Builder fieldMappings(@Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings) {
            this.fieldMappings = fieldMappings;
            return this;
        }

        public Builder fieldMappings(@Nullable List<DataSourceToIndexFieldMappingArgs> fieldMappings) {
            this.fieldMappings = Output.ofNullable(fieldMappings);
            return this;
        }

        public Builder includeAttachmentFilePatterns(@Nullable Output<List<String>> includeAttachmentFilePatterns) {
            this.includeAttachmentFilePatterns = includeAttachmentFilePatterns;
            return this;
        }

        public Builder includeAttachmentFilePatterns(@Nullable List<String> includeAttachmentFilePatterns) {
            this.includeAttachmentFilePatterns = Output.ofNullable(includeAttachmentFilePatterns);
            return this;
        }
        public DataSourceServiceNowServiceCatalogConfigurationArgs build() {
            return new DataSourceServiceNowServiceCatalogConfigurationArgs(crawlAttachments, documentDataFieldName, documentTitleFieldName, excludeAttachmentFilePatterns, fieldMappings, includeAttachmentFilePatterns);
        }
    }
}
