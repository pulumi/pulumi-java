// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ecs.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class TaskDefinitionUlimit {
    private final Integer hardLimit;
    private final String name;
    private final Integer softLimit;

    @OutputCustomType.Constructor({"hardLimit","name","softLimit"})
    private TaskDefinitionUlimit(
        Integer hardLimit,
        String name,
        Integer softLimit) {
        this.hardLimit = Objects.requireNonNull(hardLimit);
        this.name = Objects.requireNonNull(name);
        this.softLimit = Objects.requireNonNull(softLimit);
    }

    public Integer getHardLimit() {
        return this.hardLimit;
    }
    public String getName() {
        return this.name;
    }
    public Integer getSoftLimit() {
        return this.softLimit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskDefinitionUlimit defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer hardLimit;
        private String name;
        private Integer softLimit;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskDefinitionUlimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hardLimit = defaults.hardLimit;
    	      this.name = defaults.name;
    	      this.softLimit = defaults.softLimit;
        }

        public Builder setHardLimit(Integer hardLimit) {
            this.hardLimit = Objects.requireNonNull(hardLimit);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSoftLimit(Integer softLimit) {
            this.softLimit = Objects.requireNonNull(softLimit);
            return this;
        }
        public TaskDefinitionUlimit build() {
            return new TaskDefinitionUlimit(hardLimit, name, softLimit);
        }
    }
}
