// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.route53resolver.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResolverRuleTargetAddressArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResolverRuleTargetAddressArgs Empty = new ResolverRuleTargetAddressArgs();

    /**
     * One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.
     * 
     */
    @InputImport(name="ip", required=true)
      private final Output<String> ip;

    public Output<String> getIp() {
        return this.ip;
    }

    /**
     * The port at Ip that you want to forward DNS queries to.
     * 
     */
    @InputImport(name="port")
      private final @Nullable Output<String> port;

    public Output<String> getPort() {
        return this.port == null ? Output.empty() : this.port;
    }

    public ResolverRuleTargetAddressArgs(
        Output<String> ip,
        @Nullable Output<String> port) {
        this.ip = Objects.requireNonNull(ip, "expected parameter 'ip' to be non-null");
        this.port = port;
    }

    private ResolverRuleTargetAddressArgs() {
        this.ip = Output.empty();
        this.port = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResolverRuleTargetAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> ip;
        private @Nullable Output<String> port;

        public Builder() {
    	      // Empty
        }

        public Builder(ResolverRuleTargetAddressArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ip = defaults.ip;
    	      this.port = defaults.port;
        }

        public Builder ip(Output<String> ip) {
            this.ip = Objects.requireNonNull(ip);
            return this;
        }

        public Builder ip(String ip) {
            this.ip = Output.of(Objects.requireNonNull(ip));
            return this;
        }

        public Builder port(@Nullable Output<String> port) {
            this.port = port;
            return this;
        }

        public Builder port(@Nullable String port) {
            this.port = Output.ofNullable(port);
            return this;
        }
        public ResolverRuleTargetAddressArgs build() {
            return new ResolverRuleTargetAddressArgs(ip, port);
        }
    }
}
