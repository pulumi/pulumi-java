// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.robomaker.inputs;

import io.pulumi.awsnative.robomaker.enums.SimulationApplicationSourceConfigArchitecture;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Information about a source configuration.
 * 
 */
public final class SimulationApplicationSourceConfig extends io.pulumi.resources.InvokeArgs {

    public static final SimulationApplicationSourceConfig Empty = new SimulationApplicationSourceConfig();

    /**
     * The target processor architecture for the application.
     * 
     */
    @InputImport(name="architecture", required=true)
        private final SimulationApplicationSourceConfigArchitecture architecture;

    public SimulationApplicationSourceConfigArchitecture getArchitecture() {
        return this.architecture;
    }

    /**
     * The Amazon S3 bucket name.
     * 
     */
    @InputImport(name="s3Bucket", required=true)
        private final String s3Bucket;

    public String getS3Bucket() {
        return this.s3Bucket;
    }

    /**
     * The s3 object key.
     * 
     */
    @InputImport(name="s3Key", required=true)
        private final String s3Key;

    public String getS3Key() {
        return this.s3Key;
    }

    public SimulationApplicationSourceConfig(
        SimulationApplicationSourceConfigArchitecture architecture,
        String s3Bucket,
        String s3Key) {
        this.architecture = Objects.requireNonNull(architecture, "expected parameter 'architecture' to be non-null");
        this.s3Bucket = Objects.requireNonNull(s3Bucket, "expected parameter 's3Bucket' to be non-null");
        this.s3Key = Objects.requireNonNull(s3Key, "expected parameter 's3Key' to be non-null");
    }

    private SimulationApplicationSourceConfig() {
        this.architecture = null;
        this.s3Bucket = null;
        this.s3Key = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SimulationApplicationSourceConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SimulationApplicationSourceConfigArchitecture architecture;
        private String s3Bucket;
        private String s3Key;

        public Builder() {
    	      // Empty
        }

        public Builder(SimulationApplicationSourceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.s3Bucket = defaults.s3Bucket;
    	      this.s3Key = defaults.s3Key;
        }

        public Builder setArchitecture(SimulationApplicationSourceConfigArchitecture architecture) {
            this.architecture = Objects.requireNonNull(architecture);
            return this;
        }

        public Builder setS3Bucket(String s3Bucket) {
            this.s3Bucket = Objects.requireNonNull(s3Bucket);
            return this;
        }

        public Builder setS3Key(String s3Key) {
            this.s3Key = Objects.requireNonNull(s3Key);
            return this;
        }
        public SimulationApplicationSourceConfig build() {
            return new SimulationApplicationSourceConfig(architecture, s3Bucket, s3Key);
        }
    }
}
