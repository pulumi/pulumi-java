// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.robomaker.inputs;

import io.pulumi.awsnative.robomaker.enums.SimulationApplicationRenderingEngineName;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Information about a rendering engine.
 * 
 */
public final class SimulationApplicationRenderingEngineArgs extends io.pulumi.resources.ResourceArgs {

    public static final SimulationApplicationRenderingEngineArgs Empty = new SimulationApplicationRenderingEngineArgs();

    /**
     * The name of the rendering engine.
     * 
     */
    @InputImport(name="name", required=true)
    private final Input<SimulationApplicationRenderingEngineName> name;

    public Input<SimulationApplicationRenderingEngineName> getName() {
        return this.name;
    }

    /**
     * The version of the rendering engine.
     * 
     */
    @InputImport(name="version", required=true)
    private final Input<String> version;

    public Input<String> getVersion() {
        return this.version;
    }

    public SimulationApplicationRenderingEngineArgs(
        Input<SimulationApplicationRenderingEngineName> name,
        Input<String> version) {
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.version = Objects.requireNonNull(version, "expected parameter 'version' to be non-null");
    }

    private SimulationApplicationRenderingEngineArgs() {
        this.name = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SimulationApplicationRenderingEngineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<SimulationApplicationRenderingEngineName> name;
        private Input<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(SimulationApplicationRenderingEngineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.version = defaults.version;
        }

        public Builder setName(Input<SimulationApplicationRenderingEngineName> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(SimulationApplicationRenderingEngineName name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setVersion(Input<String> version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Input.of(Objects.requireNonNull(version));
            return this;
        }

        public SimulationApplicationRenderingEngineArgs build() {
            return new SimulationApplicationRenderingEngineArgs(name, version);
        }
    }
}
