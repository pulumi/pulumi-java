// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.appstream.inputs;

import io.pulumi.awsnative.appstream.inputs.AppBlockS3LocationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppBlockScriptDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppBlockScriptDetailsArgs Empty = new AppBlockScriptDetailsArgs();

    @Import(name="executableParameters")
      private final @Nullable Output<String> executableParameters;

    public Output<String> getExecutableParameters() {
        return this.executableParameters == null ? Output.empty() : this.executableParameters;
    }

    @Import(name="executablePath", required=true)
      private final Output<String> executablePath;

    public Output<String> getExecutablePath() {
        return this.executablePath;
    }

    @Import(name="scriptS3Location", required=true)
      private final Output<AppBlockS3LocationArgs> scriptS3Location;

    public Output<AppBlockS3LocationArgs> getScriptS3Location() {
        return this.scriptS3Location;
    }

    @Import(name="timeoutInSeconds", required=true)
      private final Output<Integer> timeoutInSeconds;

    public Output<Integer> getTimeoutInSeconds() {
        return this.timeoutInSeconds;
    }

    public AppBlockScriptDetailsArgs(
        @Nullable Output<String> executableParameters,
        Output<String> executablePath,
        Output<AppBlockS3LocationArgs> scriptS3Location,
        Output<Integer> timeoutInSeconds) {
        this.executableParameters = executableParameters;
        this.executablePath = Objects.requireNonNull(executablePath, "expected parameter 'executablePath' to be non-null");
        this.scriptS3Location = Objects.requireNonNull(scriptS3Location, "expected parameter 'scriptS3Location' to be non-null");
        this.timeoutInSeconds = Objects.requireNonNull(timeoutInSeconds, "expected parameter 'timeoutInSeconds' to be non-null");
    }

    private AppBlockScriptDetailsArgs() {
        this.executableParameters = Output.empty();
        this.executablePath = Output.empty();
        this.scriptS3Location = Output.empty();
        this.timeoutInSeconds = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppBlockScriptDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> executableParameters;
        private Output<String> executablePath;
        private Output<AppBlockS3LocationArgs> scriptS3Location;
        private Output<Integer> timeoutInSeconds;

        public Builder() {
    	      // Empty
        }

        public Builder(AppBlockScriptDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executableParameters = defaults.executableParameters;
    	      this.executablePath = defaults.executablePath;
    	      this.scriptS3Location = defaults.scriptS3Location;
    	      this.timeoutInSeconds = defaults.timeoutInSeconds;
        }

        public Builder executableParameters(@Nullable Output<String> executableParameters) {
            this.executableParameters = executableParameters;
            return this;
        }
        public Builder executableParameters(@Nullable String executableParameters) {
            this.executableParameters = Output.ofNullable(executableParameters);
            return this;
        }
        public Builder executablePath(Output<String> executablePath) {
            this.executablePath = Objects.requireNonNull(executablePath);
            return this;
        }
        public Builder executablePath(String executablePath) {
            this.executablePath = Output.of(Objects.requireNonNull(executablePath));
            return this;
        }
        public Builder scriptS3Location(Output<AppBlockS3LocationArgs> scriptS3Location) {
            this.scriptS3Location = Objects.requireNonNull(scriptS3Location);
            return this;
        }
        public Builder scriptS3Location(AppBlockS3LocationArgs scriptS3Location) {
            this.scriptS3Location = Output.of(Objects.requireNonNull(scriptS3Location));
            return this;
        }
        public Builder timeoutInSeconds(Output<Integer> timeoutInSeconds) {
            this.timeoutInSeconds = Objects.requireNonNull(timeoutInSeconds);
            return this;
        }
        public Builder timeoutInSeconds(Integer timeoutInSeconds) {
            this.timeoutInSeconds = Output.of(Objects.requireNonNull(timeoutInSeconds));
            return this;
        }        public AppBlockScriptDetailsArgs build() {
            return new AppBlockScriptDetailsArgs(executableParameters, executablePath, scriptS3Location, timeoutInSeconds);
        }
    }
}
