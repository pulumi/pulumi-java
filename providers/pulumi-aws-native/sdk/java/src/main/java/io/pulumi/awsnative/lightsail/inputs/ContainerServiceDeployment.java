// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lightsail.inputs;

import io.pulumi.awsnative.lightsail.inputs.Container;
import io.pulumi.awsnative.lightsail.inputs.ContainerPublicEndpoint;
import io.pulumi.core.internal.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerServiceDeployment extends io.pulumi.resources.InvokeArgs {

    public static final ContainerServiceDeployment Empty = new ContainerServiceDeployment();

    @InputImport(name="containers")
    private final @Nullable List<Container> containers;

    public List<Container> getContainers() {
        return this.containers == null ? List.of() : this.containers;
    }

    @InputImport(name="publicEndpoint")
    private final @Nullable ContainerPublicEndpoint publicEndpoint;

    public Optional<ContainerPublicEndpoint> getPublicEndpoint() {
        return this.publicEndpoint == null ? Optional.empty() : Optional.ofNullable(this.publicEndpoint);
    }

    public ContainerServiceDeployment(
        @Nullable List<Container> containers,
        @Nullable ContainerPublicEndpoint publicEndpoint) {
        this.containers = containers;
        this.publicEndpoint = publicEndpoint;
    }

    private ContainerServiceDeployment() {
        this.containers = List.of();
        this.publicEndpoint = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerServiceDeployment defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<Container> containers;
        private @Nullable ContainerPublicEndpoint publicEndpoint;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerServiceDeployment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containers = defaults.containers;
    	      this.publicEndpoint = defaults.publicEndpoint;
        }

        public Builder setContainers(@Nullable List<Container> containers) {
            this.containers = containers;
            return this;
        }

        public Builder setPublicEndpoint(@Nullable ContainerPublicEndpoint publicEndpoint) {
            this.publicEndpoint = publicEndpoint;
            return this;
        }

        public ContainerServiceDeployment build() {
            return new ContainerServiceDeployment(containers, publicEndpoint);
        }
    }
}
