// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kafkaconnect.outputs;

import io.pulumi.awsnative.kafkaconnect.outputs.ConnectorCloudWatchLogsLogDelivery;
import io.pulumi.awsnative.kafkaconnect.outputs.ConnectorFirehoseLogDelivery;
import io.pulumi.awsnative.kafkaconnect.outputs.ConnectorS3LogDelivery;
import io.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorWorkerLogDelivery {
    private final @Nullable ConnectorCloudWatchLogsLogDelivery cloudWatchLogs;
    private final @Nullable ConnectorFirehoseLogDelivery firehose;
    private final @Nullable ConnectorS3LogDelivery s3;

    @CustomType.Constructor
    private ConnectorWorkerLogDelivery(
        @CustomType.Parameter("cloudWatchLogs") @Nullable ConnectorCloudWatchLogsLogDelivery cloudWatchLogs,
        @CustomType.Parameter("firehose") @Nullable ConnectorFirehoseLogDelivery firehose,
        @CustomType.Parameter("s3") @Nullable ConnectorS3LogDelivery s3) {
        this.cloudWatchLogs = cloudWatchLogs;
        this.firehose = firehose;
        this.s3 = s3;
    }

    public Optional<ConnectorCloudWatchLogsLogDelivery> cloudWatchLogs() {
        return Optional.ofNullable(this.cloudWatchLogs);
    }
    public Optional<ConnectorFirehoseLogDelivery> firehose() {
        return Optional.ofNullable(this.firehose);
    }
    public Optional<ConnectorS3LogDelivery> s3() {
        return Optional.ofNullable(this.s3);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorWorkerLogDelivery defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ConnectorCloudWatchLogsLogDelivery cloudWatchLogs;
        private @Nullable ConnectorFirehoseLogDelivery firehose;
        private @Nullable ConnectorS3LogDelivery s3;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectorWorkerLogDelivery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudWatchLogs = defaults.cloudWatchLogs;
    	      this.firehose = defaults.firehose;
    	      this.s3 = defaults.s3;
        }

        public Builder cloudWatchLogs(@Nullable ConnectorCloudWatchLogsLogDelivery cloudWatchLogs) {
            this.cloudWatchLogs = cloudWatchLogs;
            return this;
        }
        public Builder firehose(@Nullable ConnectorFirehoseLogDelivery firehose) {
            this.firehose = firehose;
            return this;
        }
        public Builder s3(@Nullable ConnectorS3LogDelivery s3) {
            this.s3 = s3;
            return this;
        }        public ConnectorWorkerLogDelivery build() {
            return new ConnectorWorkerLogDelivery(cloudWatchLogs, firehose, s3);
        }
    }
}
