// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ses;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.ses.TemplateArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::SES::Template
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var config = new Config();
 *         var templateName = config.Require("templateName");
 *         var subjectPart = config.Require("subjectPart");
 *         var textPart = config.Require("textPart");
 *         var htmlPart = config.Require("htmlPart");
 *         var template = new AwsNative.SES.Template("template", new AwsNative.SES.TemplateArgs
 *         {
 *             Template = new AwsNative.SES.Inputs.TemplateArgs
 *             {
 *                 TemplateName = templateName,
 *                 SubjectPart = subjectPart,
 *                 TextPart = textPart,
 *                 HtmlPart = htmlPart,
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ses"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		cfg := config.New(ctx, "")
 * 		templateName := cfg.Require("templateName")
 * 		subjectPart := cfg.Require("subjectPart")
 * 		textPart := cfg.Require("textPart")
 * 		htmlPart := cfg.Require("htmlPart")
 * 		_, err := ses.NewTemplate(ctx, "template", &ses.TemplateArgs{
 * 			Template: &ses.TemplateArgs{
 * 				TemplateName: pulumi.String(templateName),
 * 				SubjectPart:  pulumi.String(subjectPart),
 * 				TextPart:     pulumi.String(textPart),
 * 				HtmlPart:     pulumi.String(htmlPart),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const config = new pulumi.Config();
 * const templateName = config.require("templateName");
 * const subjectPart = config.require("subjectPart");
 * const textPart = config.require("textPart");
 * const htmlPart = config.require("htmlPart");
 * const template = new aws_native.ses.Template("template", {template: {
 *     templateName: templateName,
 *     subjectPart: subjectPart,
 *     textPart: textPart,
 *     htmlPart: htmlPart,
 * }});
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * config = pulumi.Config()
 * template_name = config.require("templateName")
 * subject_part = config.require("subjectPart")
 * text_part = config.require("textPart")
 * html_part = config.require("htmlPart")
 * template = aws_native.ses.Template("template", template=aws_native.ses.TemplateArgs(
 *     template_name=template_name,
 *     subject_part=subject_part,
 *     text_part=text_part,
 *     html_part=html_part,
 * ))
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var config = new Config();
 *         var templateName = config.Require("templateName");
 *         var subjectPart = config.Require("subjectPart");
 *         var textPart = config.Require("textPart");
 *         var htmlPart = config.Require("htmlPart");
 *         var template = new AwsNative.SES.Template("template", new AwsNative.SES.TemplateArgs
 *         {
 *             Template = new AwsNative.SES.Inputs.TemplateArgs
 *             {
 *                 TemplateName = templateName,
 *                 SubjectPart = subjectPart,
 *                 TextPart = textPart,
 *                 HtmlPart = htmlPart,
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ses"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		cfg := config.New(ctx, "")
 * 		templateName := cfg.Require("templateName")
 * 		subjectPart := cfg.Require("subjectPart")
 * 		textPart := cfg.Require("textPart")
 * 		htmlPart := cfg.Require("htmlPart")
 * 		_, err := ses.NewTemplate(ctx, "template", &ses.TemplateArgs{
 * 			Template: &ses.TemplateArgs{
 * 				TemplateName: pulumi.String(templateName),
 * 				SubjectPart:  pulumi.String(subjectPart),
 * 				TextPart:     pulumi.String(textPart),
 * 				HtmlPart:     pulumi.String(htmlPart),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const config = new pulumi.Config();
 * const templateName = config.require("templateName");
 * const subjectPart = config.require("subjectPart");
 * const textPart = config.require("textPart");
 * const htmlPart = config.require("htmlPart");
 * const template = new aws_native.ses.Template("template", {template: {
 *     templateName: templateName,
 *     subjectPart: subjectPart,
 *     textPart: textPart,
 *     htmlPart: htmlPart,
 * }});
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * config = pulumi.Config()
 * template_name = config.require("templateName")
 * subject_part = config.require("subjectPart")
 * text_part = config.require("textPart")
 * html_part = config.require("htmlPart")
 * template = aws_native.ses.Template("template", template=aws_native.ses.TemplateArgs(
 *     template_name=template_name,
 *     subject_part=subject_part,
 *     text_part=text_part,
 *     html_part=html_part,
 * ))
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 */
@ResourceType(type="aws-native:ses:Template")
public class Template extends io.pulumi.resources.CustomResource {
    @Export(name="template", type=io.pulumi.awsnative.ses.outputs.Template.class, parameters={})
    private Output</* @Nullable */ io.pulumi.awsnative.ses.outputs.Template> template;

    public Output</* @Nullable */ io.pulumi.awsnative.ses.outputs.Template> getTemplate() {
        return this.template;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Template(String name) {
        this(name, TemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Template(String name, @Nullable TemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Template(String name, @Nullable TemplateArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ses:Template", name, args == null ? TemplateArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Template(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ses:Template", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Template get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Template(name, id, options);
    }
}
