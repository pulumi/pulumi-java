// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lookoutmetrics.inputs;

import io.pulumi.awsnative.lookoutmetrics.enums.AnomalyDetectorMetricSetMetricSetFrequency;
import io.pulumi.awsnative.lookoutmetrics.inputs.AnomalyDetectorMetricArgs;
import io.pulumi.awsnative.lookoutmetrics.inputs.AnomalyDetectorMetricSourceArgs;
import io.pulumi.awsnative.lookoutmetrics.inputs.AnomalyDetectorTimestampColumnArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AnomalyDetectorMetricSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final AnomalyDetectorMetricSetArgs Empty = new AnomalyDetectorMetricSetArgs();

    /**
     * Dimensions for this MetricSet.
     * 
     */
    @Import(name="dimensionList")
      private final @Nullable Output<List<String>> dimensionList;

    public Output<List<String>> getDimensionList() {
        return this.dimensionList == null ? Output.empty() : this.dimensionList;
    }

    /**
     * Metrics captured by this MetricSet.
     * 
     */
    @Import(name="metricList", required=true)
      private final Output<List<AnomalyDetectorMetricArgs>> metricList;

    public Output<List<AnomalyDetectorMetricArgs>> getMetricList() {
        return this.metricList;
    }

    /**
     * A description for the MetricSet.
     * 
     */
    @Import(name="metricSetDescription")
      private final @Nullable Output<String> metricSetDescription;

    public Output<String> getMetricSetDescription() {
        return this.metricSetDescription == null ? Output.empty() : this.metricSetDescription;
    }

    /**
     * A frequency period to aggregate the data
     * 
     */
    @Import(name="metricSetFrequency")
      private final @Nullable Output<AnomalyDetectorMetricSetMetricSetFrequency> metricSetFrequency;

    public Output<AnomalyDetectorMetricSetMetricSetFrequency> getMetricSetFrequency() {
        return this.metricSetFrequency == null ? Output.empty() : this.metricSetFrequency;
    }

    /**
     * The name of the MetricSet.
     * 
     */
    @Import(name="metricSetName", required=true)
      private final Output<String> metricSetName;

    public Output<String> getMetricSetName() {
        return this.metricSetName;
    }

    @Import(name="metricSource", required=true)
      private final Output<AnomalyDetectorMetricSourceArgs> metricSource;

    public Output<AnomalyDetectorMetricSourceArgs> getMetricSource() {
        return this.metricSource;
    }

    /**
     * Offset, in seconds, between the frequency interval and the time at which the metrics are available.
     * 
     */
    @Import(name="offset")
      private final @Nullable Output<Integer> offset;

    public Output<Integer> getOffset() {
        return this.offset == null ? Output.empty() : this.offset;
    }

    @Import(name="timestampColumn")
      private final @Nullable Output<AnomalyDetectorTimestampColumnArgs> timestampColumn;

    public Output<AnomalyDetectorTimestampColumnArgs> getTimestampColumn() {
        return this.timestampColumn == null ? Output.empty() : this.timestampColumn;
    }

    @Import(name="timezone")
      private final @Nullable Output<String> timezone;

    public Output<String> getTimezone() {
        return this.timezone == null ? Output.empty() : this.timezone;
    }

    public AnomalyDetectorMetricSetArgs(
        @Nullable Output<List<String>> dimensionList,
        Output<List<AnomalyDetectorMetricArgs>> metricList,
        @Nullable Output<String> metricSetDescription,
        @Nullable Output<AnomalyDetectorMetricSetMetricSetFrequency> metricSetFrequency,
        Output<String> metricSetName,
        Output<AnomalyDetectorMetricSourceArgs> metricSource,
        @Nullable Output<Integer> offset,
        @Nullable Output<AnomalyDetectorTimestampColumnArgs> timestampColumn,
        @Nullable Output<String> timezone) {
        this.dimensionList = dimensionList;
        this.metricList = Objects.requireNonNull(metricList, "expected parameter 'metricList' to be non-null");
        this.metricSetDescription = metricSetDescription;
        this.metricSetFrequency = metricSetFrequency;
        this.metricSetName = Objects.requireNonNull(metricSetName, "expected parameter 'metricSetName' to be non-null");
        this.metricSource = Objects.requireNonNull(metricSource, "expected parameter 'metricSource' to be non-null");
        this.offset = offset;
        this.timestampColumn = timestampColumn;
        this.timezone = timezone;
    }

    private AnomalyDetectorMetricSetArgs() {
        this.dimensionList = Output.empty();
        this.metricList = Output.empty();
        this.metricSetDescription = Output.empty();
        this.metricSetFrequency = Output.empty();
        this.metricSetName = Output.empty();
        this.metricSource = Output.empty();
        this.offset = Output.empty();
        this.timestampColumn = Output.empty();
        this.timezone = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnomalyDetectorMetricSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> dimensionList;
        private Output<List<AnomalyDetectorMetricArgs>> metricList;
        private @Nullable Output<String> metricSetDescription;
        private @Nullable Output<AnomalyDetectorMetricSetMetricSetFrequency> metricSetFrequency;
        private Output<String> metricSetName;
        private Output<AnomalyDetectorMetricSourceArgs> metricSource;
        private @Nullable Output<Integer> offset;
        private @Nullable Output<AnomalyDetectorTimestampColumnArgs> timestampColumn;
        private @Nullable Output<String> timezone;

        public Builder() {
    	      // Empty
        }

        public Builder(AnomalyDetectorMetricSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dimensionList = defaults.dimensionList;
    	      this.metricList = defaults.metricList;
    	      this.metricSetDescription = defaults.metricSetDescription;
    	      this.metricSetFrequency = defaults.metricSetFrequency;
    	      this.metricSetName = defaults.metricSetName;
    	      this.metricSource = defaults.metricSource;
    	      this.offset = defaults.offset;
    	      this.timestampColumn = defaults.timestampColumn;
    	      this.timezone = defaults.timezone;
        }

        public Builder dimensionList(@Nullable Output<List<String>> dimensionList) {
            this.dimensionList = dimensionList;
            return this;
        }
        public Builder dimensionList(@Nullable List<String> dimensionList) {
            this.dimensionList = Output.ofNullable(dimensionList);
            return this;
        }
        public Builder dimensionList(String... dimensionList) {
            return dimensionList(List.of(dimensionList));
        }
        public Builder metricList(Output<List<AnomalyDetectorMetricArgs>> metricList) {
            this.metricList = Objects.requireNonNull(metricList);
            return this;
        }
        public Builder metricList(List<AnomalyDetectorMetricArgs> metricList) {
            this.metricList = Output.of(Objects.requireNonNull(metricList));
            return this;
        }
        public Builder metricList(AnomalyDetectorMetricArgs... metricList) {
            return metricList(List.of(metricList));
        }
        public Builder metricSetDescription(@Nullable Output<String> metricSetDescription) {
            this.metricSetDescription = metricSetDescription;
            return this;
        }
        public Builder metricSetDescription(@Nullable String metricSetDescription) {
            this.metricSetDescription = Output.ofNullable(metricSetDescription);
            return this;
        }
        public Builder metricSetFrequency(@Nullable Output<AnomalyDetectorMetricSetMetricSetFrequency> metricSetFrequency) {
            this.metricSetFrequency = metricSetFrequency;
            return this;
        }
        public Builder metricSetFrequency(@Nullable AnomalyDetectorMetricSetMetricSetFrequency metricSetFrequency) {
            this.metricSetFrequency = Output.ofNullable(metricSetFrequency);
            return this;
        }
        public Builder metricSetName(Output<String> metricSetName) {
            this.metricSetName = Objects.requireNonNull(metricSetName);
            return this;
        }
        public Builder metricSetName(String metricSetName) {
            this.metricSetName = Output.of(Objects.requireNonNull(metricSetName));
            return this;
        }
        public Builder metricSource(Output<AnomalyDetectorMetricSourceArgs> metricSource) {
            this.metricSource = Objects.requireNonNull(metricSource);
            return this;
        }
        public Builder metricSource(AnomalyDetectorMetricSourceArgs metricSource) {
            this.metricSource = Output.of(Objects.requireNonNull(metricSource));
            return this;
        }
        public Builder offset(@Nullable Output<Integer> offset) {
            this.offset = offset;
            return this;
        }
        public Builder offset(@Nullable Integer offset) {
            this.offset = Output.ofNullable(offset);
            return this;
        }
        public Builder timestampColumn(@Nullable Output<AnomalyDetectorTimestampColumnArgs> timestampColumn) {
            this.timestampColumn = timestampColumn;
            return this;
        }
        public Builder timestampColumn(@Nullable AnomalyDetectorTimestampColumnArgs timestampColumn) {
            this.timestampColumn = Output.ofNullable(timestampColumn);
            return this;
        }
        public Builder timezone(@Nullable Output<String> timezone) {
            this.timezone = timezone;
            return this;
        }
        public Builder timezone(@Nullable String timezone) {
            this.timezone = Output.ofNullable(timezone);
            return this;
        }        public AnomalyDetectorMetricSetArgs build() {
            return new AnomalyDetectorMetricSetArgs(dimensionList, metricList, metricSetDescription, metricSetFrequency, metricSetName, metricSource, offset, timestampColumn, timezone);
        }
    }
}
