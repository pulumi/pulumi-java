// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ecs.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class TaskDefinitionUlimitArgs extends io.pulumi.resources.ResourceArgs {

    public static final TaskDefinitionUlimitArgs Empty = new TaskDefinitionUlimitArgs();

    @Import(name="hardLimit", required=true)
      private final Output<Integer> hardLimit;

    public Output<Integer> getHardLimit() {
        return this.hardLimit;
    }

    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    @Import(name="softLimit", required=true)
      private final Output<Integer> softLimit;

    public Output<Integer> getSoftLimit() {
        return this.softLimit;
    }

    public TaskDefinitionUlimitArgs(
        Output<Integer> hardLimit,
        Output<String> name,
        Output<Integer> softLimit) {
        this.hardLimit = Objects.requireNonNull(hardLimit, "expected parameter 'hardLimit' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.softLimit = Objects.requireNonNull(softLimit, "expected parameter 'softLimit' to be non-null");
    }

    private TaskDefinitionUlimitArgs() {
        this.hardLimit = Output.empty();
        this.name = Output.empty();
        this.softLimit = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskDefinitionUlimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> hardLimit;
        private Output<String> name;
        private Output<Integer> softLimit;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskDefinitionUlimitArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hardLimit = defaults.hardLimit;
    	      this.name = defaults.name;
    	      this.softLimit = defaults.softLimit;
        }

        public Builder hardLimit(Output<Integer> hardLimit) {
            this.hardLimit = Objects.requireNonNull(hardLimit);
            return this;
        }
        public Builder hardLimit(Integer hardLimit) {
            this.hardLimit = Output.of(Objects.requireNonNull(hardLimit));
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder softLimit(Output<Integer> softLimit) {
            this.softLimit = Objects.requireNonNull(softLimit);
            return this;
        }
        public Builder softLimit(Integer softLimit) {
            this.softLimit = Output.of(Objects.requireNonNull(softLimit));
            return this;
        }        public TaskDefinitionUlimitArgs build() {
            return new TaskDefinitionUlimitArgs(hardLimit, name, softLimit);
        }
    }
}
