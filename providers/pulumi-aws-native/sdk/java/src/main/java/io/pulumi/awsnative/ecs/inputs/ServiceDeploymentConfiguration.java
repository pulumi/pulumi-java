// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ecs.inputs;

import io.pulumi.awsnative.ecs.inputs.ServiceDeploymentCircuitBreaker;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceDeploymentConfiguration extends io.pulumi.resources.InvokeArgs {

    public static final ServiceDeploymentConfiguration Empty = new ServiceDeploymentConfiguration();

    @InputImport(name="deploymentCircuitBreaker")
    private final @Nullable ServiceDeploymentCircuitBreaker deploymentCircuitBreaker;

    public Optional<ServiceDeploymentCircuitBreaker> getDeploymentCircuitBreaker() {
        return this.deploymentCircuitBreaker == null ? Optional.empty() : Optional.ofNullable(this.deploymentCircuitBreaker);
    }

    @InputImport(name="maximumPercent")
    private final @Nullable Integer maximumPercent;

    public Optional<Integer> getMaximumPercent() {
        return this.maximumPercent == null ? Optional.empty() : Optional.ofNullable(this.maximumPercent);
    }

    @InputImport(name="minimumHealthyPercent")
    private final @Nullable Integer minimumHealthyPercent;

    public Optional<Integer> getMinimumHealthyPercent() {
        return this.minimumHealthyPercent == null ? Optional.empty() : Optional.ofNullable(this.minimumHealthyPercent);
    }

    public ServiceDeploymentConfiguration(
        @Nullable ServiceDeploymentCircuitBreaker deploymentCircuitBreaker,
        @Nullable Integer maximumPercent,
        @Nullable Integer minimumHealthyPercent) {
        this.deploymentCircuitBreaker = deploymentCircuitBreaker;
        this.maximumPercent = maximumPercent;
        this.minimumHealthyPercent = minimumHealthyPercent;
    }

    private ServiceDeploymentConfiguration() {
        this.deploymentCircuitBreaker = null;
        this.maximumPercent = null;
        this.minimumHealthyPercent = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceDeploymentConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ServiceDeploymentCircuitBreaker deploymentCircuitBreaker;
        private @Nullable Integer maximumPercent;
        private @Nullable Integer minimumHealthyPercent;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceDeploymentConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentCircuitBreaker = defaults.deploymentCircuitBreaker;
    	      this.maximumPercent = defaults.maximumPercent;
    	      this.minimumHealthyPercent = defaults.minimumHealthyPercent;
        }

        public Builder setDeploymentCircuitBreaker(@Nullable ServiceDeploymentCircuitBreaker deploymentCircuitBreaker) {
            this.deploymentCircuitBreaker = deploymentCircuitBreaker;
            return this;
        }

        public Builder setMaximumPercent(@Nullable Integer maximumPercent) {
            this.maximumPercent = maximumPercent;
            return this;
        }

        public Builder setMinimumHealthyPercent(@Nullable Integer minimumHealthyPercent) {
            this.minimumHealthyPercent = minimumHealthyPercent;
            return this;
        }

        public ServiceDeploymentConfiguration build() {
            return new ServiceDeploymentConfiguration(deploymentCircuitBreaker, maximumPercent, minimumHealthyPercent);
        }
    }
}
