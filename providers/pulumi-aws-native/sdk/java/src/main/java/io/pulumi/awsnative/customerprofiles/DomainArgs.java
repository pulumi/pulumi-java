// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.customerprofiles;

import io.pulumi.awsnative.customerprofiles.inputs.DomainTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainArgs Empty = new DomainArgs();

    /**
     * The URL of the SQS dead letter queue
     * 
     */
    @Import(name="deadLetterQueueUrl")
      private final @Nullable Output<String> deadLetterQueueUrl;

    public Output<String> getDeadLetterQueueUrl() {
        return this.deadLetterQueueUrl == null ? Output.empty() : this.deadLetterQueueUrl;
    }

    /**
     * The default encryption key
     * 
     */
    @Import(name="defaultEncryptionKey")
      private final @Nullable Output<String> defaultEncryptionKey;

    public Output<String> getDefaultEncryptionKey() {
        return this.defaultEncryptionKey == null ? Output.empty() : this.defaultEncryptionKey;
    }

    /**
     * The default number of days until the data within the domain expires.
     * 
     */
    @Import(name="defaultExpirationDays")
      private final @Nullable Output<Integer> defaultExpirationDays;

    public Output<Integer> getDefaultExpirationDays() {
        return this.defaultExpirationDays == null ? Output.empty() : this.defaultExpirationDays;
    }

    /**
     * The unique name of the domain.
     * 
     */
    @Import(name="domainName")
      private final @Nullable Output<String> domainName;

    public Output<String> getDomainName() {
        return this.domainName == null ? Output.empty() : this.domainName;
    }

    /**
     * The tags (keys and values) associated with the domain
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<DomainTagArgs>> tags;

    public Output<List<DomainTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public DomainArgs(
        @Nullable Output<String> deadLetterQueueUrl,
        @Nullable Output<String> defaultEncryptionKey,
        @Nullable Output<Integer> defaultExpirationDays,
        @Nullable Output<String> domainName,
        @Nullable Output<List<DomainTagArgs>> tags) {
        this.deadLetterQueueUrl = deadLetterQueueUrl;
        this.defaultEncryptionKey = defaultEncryptionKey;
        this.defaultExpirationDays = defaultExpirationDays;
        this.domainName = domainName;
        this.tags = tags;
    }

    private DomainArgs() {
        this.deadLetterQueueUrl = Output.empty();
        this.defaultEncryptionKey = Output.empty();
        this.defaultExpirationDays = Output.empty();
        this.domainName = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> deadLetterQueueUrl;
        private @Nullable Output<String> defaultEncryptionKey;
        private @Nullable Output<Integer> defaultExpirationDays;
        private @Nullable Output<String> domainName;
        private @Nullable Output<List<DomainTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deadLetterQueueUrl = defaults.deadLetterQueueUrl;
    	      this.defaultEncryptionKey = defaults.defaultEncryptionKey;
    	      this.defaultExpirationDays = defaults.defaultExpirationDays;
    	      this.domainName = defaults.domainName;
    	      this.tags = defaults.tags;
        }

        public Builder deadLetterQueueUrl(@Nullable Output<String> deadLetterQueueUrl) {
            this.deadLetterQueueUrl = deadLetterQueueUrl;
            return this;
        }
        public Builder deadLetterQueueUrl(@Nullable String deadLetterQueueUrl) {
            this.deadLetterQueueUrl = Output.ofNullable(deadLetterQueueUrl);
            return this;
        }
        public Builder defaultEncryptionKey(@Nullable Output<String> defaultEncryptionKey) {
            this.defaultEncryptionKey = defaultEncryptionKey;
            return this;
        }
        public Builder defaultEncryptionKey(@Nullable String defaultEncryptionKey) {
            this.defaultEncryptionKey = Output.ofNullable(defaultEncryptionKey);
            return this;
        }
        public Builder defaultExpirationDays(@Nullable Output<Integer> defaultExpirationDays) {
            this.defaultExpirationDays = defaultExpirationDays;
            return this;
        }
        public Builder defaultExpirationDays(@Nullable Integer defaultExpirationDays) {
            this.defaultExpirationDays = Output.ofNullable(defaultExpirationDays);
            return this;
        }
        public Builder domainName(@Nullable Output<String> domainName) {
            this.domainName = domainName;
            return this;
        }
        public Builder domainName(@Nullable String domainName) {
            this.domainName = Output.ofNullable(domainName);
            return this;
        }
        public Builder tags(@Nullable Output<List<DomainTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<DomainTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tags(DomainTagArgs... tags) {
            return tags(List.of(tags));
        }        public DomainArgs build() {
            return new DomainArgs(deadLetterQueueUrl, defaultEncryptionKey, defaultExpirationDays, domainName, tags);
        }
    }
}
