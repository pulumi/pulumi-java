// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.nimblestudio.outputs;

import io.pulumi.awsnative.nimblestudio.enums.LaunchProfileStreamingClipboardMode;
import io.pulumi.awsnative.nimblestudio.enums.LaunchProfileStreamingInstanceType;
import io.pulumi.awsnative.nimblestudio.outputs.LaunchProfileStreamConfigurationSessionStorage;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class LaunchProfileStreamConfiguration {
    private final LaunchProfileStreamingClipboardMode clipboardMode;
    private final List<LaunchProfileStreamingInstanceType> ec2InstanceTypes;
    private final @Nullable Double maxSessionLengthInMinutes;
    private final @Nullable Double maxStoppedSessionLengthInMinutes;
    private final @Nullable LaunchProfileStreamConfigurationSessionStorage sessionStorage;
    private final List<String> streamingImageIds;

    @OutputCustomType.Constructor({"clipboardMode","ec2InstanceTypes","maxSessionLengthInMinutes","maxStoppedSessionLengthInMinutes","sessionStorage","streamingImageIds"})
    private LaunchProfileStreamConfiguration(
        LaunchProfileStreamingClipboardMode clipboardMode,
        List<LaunchProfileStreamingInstanceType> ec2InstanceTypes,
        @Nullable Double maxSessionLengthInMinutes,
        @Nullable Double maxStoppedSessionLengthInMinutes,
        @Nullable LaunchProfileStreamConfigurationSessionStorage sessionStorage,
        List<String> streamingImageIds) {
        this.clipboardMode = Objects.requireNonNull(clipboardMode);
        this.ec2InstanceTypes = Objects.requireNonNull(ec2InstanceTypes);
        this.maxSessionLengthInMinutes = maxSessionLengthInMinutes;
        this.maxStoppedSessionLengthInMinutes = maxStoppedSessionLengthInMinutes;
        this.sessionStorage = sessionStorage;
        this.streamingImageIds = Objects.requireNonNull(streamingImageIds);
    }

    public LaunchProfileStreamingClipboardMode getClipboardMode() {
        return this.clipboardMode;
    }
    public List<LaunchProfileStreamingInstanceType> getEc2InstanceTypes() {
        return this.ec2InstanceTypes;
    }
    public Optional<Double> getMaxSessionLengthInMinutes() {
        return Optional.ofNullable(this.maxSessionLengthInMinutes);
    }
    public Optional<Double> getMaxStoppedSessionLengthInMinutes() {
        return Optional.ofNullable(this.maxStoppedSessionLengthInMinutes);
    }
    public Optional<LaunchProfileStreamConfigurationSessionStorage> getSessionStorage() {
        return Optional.ofNullable(this.sessionStorage);
    }
    public List<String> getStreamingImageIds() {
        return this.streamingImageIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LaunchProfileStreamConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LaunchProfileStreamingClipboardMode clipboardMode;
        private List<LaunchProfileStreamingInstanceType> ec2InstanceTypes;
        private @Nullable Double maxSessionLengthInMinutes;
        private @Nullable Double maxStoppedSessionLengthInMinutes;
        private @Nullable LaunchProfileStreamConfigurationSessionStorage sessionStorage;
        private List<String> streamingImageIds;

        public Builder() {
    	      // Empty
        }

        public Builder(LaunchProfileStreamConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clipboardMode = defaults.clipboardMode;
    	      this.ec2InstanceTypes = defaults.ec2InstanceTypes;
    	      this.maxSessionLengthInMinutes = defaults.maxSessionLengthInMinutes;
    	      this.maxStoppedSessionLengthInMinutes = defaults.maxStoppedSessionLengthInMinutes;
    	      this.sessionStorage = defaults.sessionStorage;
    	      this.streamingImageIds = defaults.streamingImageIds;
        }

        public Builder setClipboardMode(LaunchProfileStreamingClipboardMode clipboardMode) {
            this.clipboardMode = Objects.requireNonNull(clipboardMode);
            return this;
        }

        public Builder setEc2InstanceTypes(List<LaunchProfileStreamingInstanceType> ec2InstanceTypes) {
            this.ec2InstanceTypes = Objects.requireNonNull(ec2InstanceTypes);
            return this;
        }

        public Builder setMaxSessionLengthInMinutes(@Nullable Double maxSessionLengthInMinutes) {
            this.maxSessionLengthInMinutes = maxSessionLengthInMinutes;
            return this;
        }

        public Builder setMaxStoppedSessionLengthInMinutes(@Nullable Double maxStoppedSessionLengthInMinutes) {
            this.maxStoppedSessionLengthInMinutes = maxStoppedSessionLengthInMinutes;
            return this;
        }

        public Builder setSessionStorage(@Nullable LaunchProfileStreamConfigurationSessionStorage sessionStorage) {
            this.sessionStorage = sessionStorage;
            return this;
        }

        public Builder setStreamingImageIds(List<String> streamingImageIds) {
            this.streamingImageIds = Objects.requireNonNull(streamingImageIds);
            return this;
        }

        public LaunchProfileStreamConfiguration build() {
            return new LaunchProfileStreamConfiguration(clipboardMode, ec2InstanceTypes, maxSessionLengthInMinutes, maxStoppedSessionLengthInMinutes, sessionStorage, streamingImageIds);
        }
    }
}
