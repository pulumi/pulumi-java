// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.quicksight.DataSetArgs;
import io.pulumi.awsnative.quicksight.enums.DataSetImportMode;
import io.pulumi.awsnative.quicksight.outputs.DataSetColumnGroup;
import io.pulumi.awsnative.quicksight.outputs.DataSetColumnLevelPermissionRule;
import io.pulumi.awsnative.quicksight.outputs.DataSetFieldFolderMap;
import io.pulumi.awsnative.quicksight.outputs.DataSetIngestionWaitPolicy;
import io.pulumi.awsnative.quicksight.outputs.DataSetLogicalTableMap;
import io.pulumi.awsnative.quicksight.outputs.DataSetOutputColumn;
import io.pulumi.awsnative.quicksight.outputs.DataSetPhysicalTableMap;
import io.pulumi.awsnative.quicksight.outputs.DataSetResourcePermission;
import io.pulumi.awsnative.quicksight.outputs.DataSetRowLevelPermissionDataSet;
import io.pulumi.awsnative.quicksight.outputs.DataSetTag;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="aws-native:quicksight:DataSet")
public class DataSet extends io.pulumi.resources.CustomResource {
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    @OutputExport(name="awsAccountId", type=String.class, parameters={})
    private Output</* @Nullable */ String> awsAccountId;

    public Output</* @Nullable */ String> getAwsAccountId() {
        return this.awsAccountId;
    }
    @OutputExport(name="columnGroups", type=List.class, parameters={DataSetColumnGroup.class})
    private Output</* @Nullable */ List<DataSetColumnGroup>> columnGroups;

    public Output</* @Nullable */ List<DataSetColumnGroup>> getColumnGroups() {
        return this.columnGroups;
    }
    @OutputExport(name="columnLevelPermissionRules", type=List.class, parameters={DataSetColumnLevelPermissionRule.class})
    private Output</* @Nullable */ List<DataSetColumnLevelPermissionRule>> columnLevelPermissionRules;

    public Output</* @Nullable */ List<DataSetColumnLevelPermissionRule>> getColumnLevelPermissionRules() {
        return this.columnLevelPermissionRules;
    }
    @OutputExport(name="consumedSpiceCapacityInBytes", type=Double.class, parameters={})
    private Output<Double> consumedSpiceCapacityInBytes;

    public Output<Double> getConsumedSpiceCapacityInBytes() {
        return this.consumedSpiceCapacityInBytes;
    }
    @OutputExport(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    public Output<String> getCreatedTime() {
        return this.createdTime;
    }
    @OutputExport(name="dataSetId", type=String.class, parameters={})
    private Output</* @Nullable */ String> dataSetId;

    public Output</* @Nullable */ String> getDataSetId() {
        return this.dataSetId;
    }
    @OutputExport(name="fieldFolders", type=DataSetFieldFolderMap.class, parameters={})
    private Output</* @Nullable */ DataSetFieldFolderMap> fieldFolders;

    public Output</* @Nullable */ DataSetFieldFolderMap> getFieldFolders() {
        return this.fieldFolders;
    }
    @OutputExport(name="importMode", type=DataSetImportMode.class, parameters={})
    private Output</* @Nullable */ DataSetImportMode> importMode;

    public Output</* @Nullable */ DataSetImportMode> getImportMode() {
        return this.importMode;
    }
    @OutputExport(name="ingestionWaitPolicy", type=DataSetIngestionWaitPolicy.class, parameters={})
    private Output</* @Nullable */ DataSetIngestionWaitPolicy> ingestionWaitPolicy;

    public Output</* @Nullable */ DataSetIngestionWaitPolicy> getIngestionWaitPolicy() {
        return this.ingestionWaitPolicy;
    }
    @OutputExport(name="lastUpdatedTime", type=String.class, parameters={})
    private Output<String> lastUpdatedTime;

    public Output<String> getLastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    @OutputExport(name="logicalTableMap", type=DataSetLogicalTableMap.class, parameters={})
    private Output</* @Nullable */ DataSetLogicalTableMap> logicalTableMap;

    public Output</* @Nullable */ DataSetLogicalTableMap> getLogicalTableMap() {
        return this.logicalTableMap;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    public Output</* @Nullable */ String> getName() {
        return this.name;
    }
    @OutputExport(name="outputColumns", type=List.class, parameters={DataSetOutputColumn.class})
    private Output<List<DataSetOutputColumn>> outputColumns;

    public Output<List<DataSetOutputColumn>> getOutputColumns() {
        return this.outputColumns;
    }
    @OutputExport(name="permissions", type=List.class, parameters={DataSetResourcePermission.class})
    private Output</* @Nullable */ List<DataSetResourcePermission>> permissions;

    public Output</* @Nullable */ List<DataSetResourcePermission>> getPermissions() {
        return this.permissions;
    }
    @OutputExport(name="physicalTableMap", type=DataSetPhysicalTableMap.class, parameters={})
    private Output</* @Nullable */ DataSetPhysicalTableMap> physicalTableMap;

    public Output</* @Nullable */ DataSetPhysicalTableMap> getPhysicalTableMap() {
        return this.physicalTableMap;
    }
    @OutputExport(name="rowLevelPermissionDataSet", type=DataSetRowLevelPermissionDataSet.class, parameters={})
    private Output</* @Nullable */ DataSetRowLevelPermissionDataSet> rowLevelPermissionDataSet;

    public Output</* @Nullable */ DataSetRowLevelPermissionDataSet> getRowLevelPermissionDataSet() {
        return this.rowLevelPermissionDataSet;
    }
    @OutputExport(name="tags", type=List.class, parameters={DataSetTag.class})
    private Output</* @Nullable */ List<DataSetTag>> tags;

    public Output</* @Nullable */ List<DataSetTag>> getTags() {
        return this.tags;
    }

    public DataSet(String name, @Nullable DataSetArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:DataSet", name, args == null ? DataSetArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private DataSet(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:DataSet", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static DataSet get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DataSet(name, id, options);
    }
}
