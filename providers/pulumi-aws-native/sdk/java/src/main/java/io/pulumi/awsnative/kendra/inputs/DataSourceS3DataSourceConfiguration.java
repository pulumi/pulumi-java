// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kendra.inputs;

import io.pulumi.awsnative.kendra.inputs.DataSourceAccessControlListConfiguration;
import io.pulumi.awsnative.kendra.inputs.DataSourceDocumentsMetadataConfiguration;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * S3 data source configuration
 * 
 */
public final class DataSourceS3DataSourceConfiguration extends io.pulumi.resources.InvokeArgs {

    public static final DataSourceS3DataSourceConfiguration Empty = new DataSourceS3DataSourceConfiguration();

    @InputImport(name="accessControlListConfiguration")
    private final @Nullable DataSourceAccessControlListConfiguration accessControlListConfiguration;

    public Optional<DataSourceAccessControlListConfiguration> getAccessControlListConfiguration() {
        return this.accessControlListConfiguration == null ? Optional.empty() : Optional.ofNullable(this.accessControlListConfiguration);
    }

    @InputImport(name="bucketName", required=true)
    private final String bucketName;

    public String getBucketName() {
        return this.bucketName;
    }

    @InputImport(name="documentsMetadataConfiguration")
    private final @Nullable DataSourceDocumentsMetadataConfiguration documentsMetadataConfiguration;

    public Optional<DataSourceDocumentsMetadataConfiguration> getDocumentsMetadataConfiguration() {
        return this.documentsMetadataConfiguration == null ? Optional.empty() : Optional.ofNullable(this.documentsMetadataConfiguration);
    }

    @InputImport(name="exclusionPatterns")
    private final @Nullable List<String> exclusionPatterns;

    public List<String> getExclusionPatterns() {
        return this.exclusionPatterns == null ? List.of() : this.exclusionPatterns;
    }

    @InputImport(name="inclusionPatterns")
    private final @Nullable List<String> inclusionPatterns;

    public List<String> getInclusionPatterns() {
        return this.inclusionPatterns == null ? List.of() : this.inclusionPatterns;
    }

    @InputImport(name="inclusionPrefixes")
    private final @Nullable List<String> inclusionPrefixes;

    public List<String> getInclusionPrefixes() {
        return this.inclusionPrefixes == null ? List.of() : this.inclusionPrefixes;
    }

    public DataSourceS3DataSourceConfiguration(
        @Nullable DataSourceAccessControlListConfiguration accessControlListConfiguration,
        String bucketName,
        @Nullable DataSourceDocumentsMetadataConfiguration documentsMetadataConfiguration,
        @Nullable List<String> exclusionPatterns,
        @Nullable List<String> inclusionPatterns,
        @Nullable List<String> inclusionPrefixes) {
        this.accessControlListConfiguration = accessControlListConfiguration;
        this.bucketName = Objects.requireNonNull(bucketName, "expected parameter 'bucketName' to be non-null");
        this.documentsMetadataConfiguration = documentsMetadataConfiguration;
        this.exclusionPatterns = exclusionPatterns;
        this.inclusionPatterns = inclusionPatterns;
        this.inclusionPrefixes = inclusionPrefixes;
    }

    private DataSourceS3DataSourceConfiguration() {
        this.accessControlListConfiguration = null;
        this.bucketName = null;
        this.documentsMetadataConfiguration = null;
        this.exclusionPatterns = List.of();
        this.inclusionPatterns = List.of();
        this.inclusionPrefixes = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceS3DataSourceConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DataSourceAccessControlListConfiguration accessControlListConfiguration;
        private String bucketName;
        private @Nullable DataSourceDocumentsMetadataConfiguration documentsMetadataConfiguration;
        private @Nullable List<String> exclusionPatterns;
        private @Nullable List<String> inclusionPatterns;
        private @Nullable List<String> inclusionPrefixes;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceS3DataSourceConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlListConfiguration = defaults.accessControlListConfiguration;
    	      this.bucketName = defaults.bucketName;
    	      this.documentsMetadataConfiguration = defaults.documentsMetadataConfiguration;
    	      this.exclusionPatterns = defaults.exclusionPatterns;
    	      this.inclusionPatterns = defaults.inclusionPatterns;
    	      this.inclusionPrefixes = defaults.inclusionPrefixes;
        }

        public Builder setAccessControlListConfiguration(@Nullable DataSourceAccessControlListConfiguration accessControlListConfiguration) {
            this.accessControlListConfiguration = accessControlListConfiguration;
            return this;
        }

        public Builder setBucketName(String bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }

        public Builder setDocumentsMetadataConfiguration(@Nullable DataSourceDocumentsMetadataConfiguration documentsMetadataConfiguration) {
            this.documentsMetadataConfiguration = documentsMetadataConfiguration;
            return this;
        }

        public Builder setExclusionPatterns(@Nullable List<String> exclusionPatterns) {
            this.exclusionPatterns = exclusionPatterns;
            return this;
        }

        public Builder setInclusionPatterns(@Nullable List<String> inclusionPatterns) {
            this.inclusionPatterns = inclusionPatterns;
            return this;
        }

        public Builder setInclusionPrefixes(@Nullable List<String> inclusionPrefixes) {
            this.inclusionPrefixes = inclusionPrefixes;
            return this;
        }

        public DataSourceS3DataSourceConfiguration build() {
            return new DataSourceS3DataSourceConfiguration(accessControlListConfiguration, bucketName, documentsMetadataConfiguration, exclusionPatterns, inclusionPatterns, inclusionPrefixes);
        }
    }
}
