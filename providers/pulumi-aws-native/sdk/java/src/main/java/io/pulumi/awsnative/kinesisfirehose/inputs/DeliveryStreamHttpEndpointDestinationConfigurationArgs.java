// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kinesisfirehose.inputs;

import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamBufferingHintsArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptionsArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamHttpEndpointConfigurationArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamHttpEndpointRequestConfigurationArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamProcessingConfigurationArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamRetryOptionsArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamS3DestinationConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeliveryStreamHttpEndpointDestinationConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeliveryStreamHttpEndpointDestinationConfigurationArgs Empty = new DeliveryStreamHttpEndpointDestinationConfigurationArgs();

    @InputImport(name="bufferingHints")
    private final @Nullable Input<DeliveryStreamBufferingHintsArgs> bufferingHints;

    public Input<DeliveryStreamBufferingHintsArgs> getBufferingHints() {
        return this.bufferingHints == null ? Input.empty() : this.bufferingHints;
    }

    @InputImport(name="cloudWatchLoggingOptions")
    private final @Nullable Input<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions;

    public Input<DeliveryStreamCloudWatchLoggingOptionsArgs> getCloudWatchLoggingOptions() {
        return this.cloudWatchLoggingOptions == null ? Input.empty() : this.cloudWatchLoggingOptions;
    }

    @InputImport(name="endpointConfiguration", required=true)
    private final Input<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration;

    public Input<DeliveryStreamHttpEndpointConfigurationArgs> getEndpointConfiguration() {
        return this.endpointConfiguration;
    }

    @InputImport(name="processingConfiguration")
    private final @Nullable Input<DeliveryStreamProcessingConfigurationArgs> processingConfiguration;

    public Input<DeliveryStreamProcessingConfigurationArgs> getProcessingConfiguration() {
        return this.processingConfiguration == null ? Input.empty() : this.processingConfiguration;
    }

    @InputImport(name="requestConfiguration")
    private final @Nullable Input<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration;

    public Input<DeliveryStreamHttpEndpointRequestConfigurationArgs> getRequestConfiguration() {
        return this.requestConfiguration == null ? Input.empty() : this.requestConfiguration;
    }

    @InputImport(name="retryOptions")
    private final @Nullable Input<DeliveryStreamRetryOptionsArgs> retryOptions;

    public Input<DeliveryStreamRetryOptionsArgs> getRetryOptions() {
        return this.retryOptions == null ? Input.empty() : this.retryOptions;
    }

    @InputImport(name="roleARN")
    private final @Nullable Input<String> roleARN;

    public Input<String> getRoleARN() {
        return this.roleARN == null ? Input.empty() : this.roleARN;
    }

    @InputImport(name="s3BackupMode")
    private final @Nullable Input<String> s3BackupMode;

    public Input<String> getS3BackupMode() {
        return this.s3BackupMode == null ? Input.empty() : this.s3BackupMode;
    }

    @InputImport(name="s3Configuration", required=true)
    private final Input<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration;

    public Input<DeliveryStreamS3DestinationConfigurationArgs> getS3Configuration() {
        return this.s3Configuration;
    }

    public DeliveryStreamHttpEndpointDestinationConfigurationArgs(
        @Nullable Input<DeliveryStreamBufferingHintsArgs> bufferingHints,
        @Nullable Input<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions,
        Input<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration,
        @Nullable Input<DeliveryStreamProcessingConfigurationArgs> processingConfiguration,
        @Nullable Input<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration,
        @Nullable Input<DeliveryStreamRetryOptionsArgs> retryOptions,
        @Nullable Input<String> roleARN,
        @Nullable Input<String> s3BackupMode,
        Input<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration) {
        this.bufferingHints = bufferingHints;
        this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
        this.endpointConfiguration = Objects.requireNonNull(endpointConfiguration, "expected parameter 'endpointConfiguration' to be non-null");
        this.processingConfiguration = processingConfiguration;
        this.requestConfiguration = requestConfiguration;
        this.retryOptions = retryOptions;
        this.roleARN = roleARN;
        this.s3BackupMode = s3BackupMode;
        this.s3Configuration = Objects.requireNonNull(s3Configuration, "expected parameter 's3Configuration' to be non-null");
    }

    private DeliveryStreamHttpEndpointDestinationConfigurationArgs() {
        this.bufferingHints = Input.empty();
        this.cloudWatchLoggingOptions = Input.empty();
        this.endpointConfiguration = Input.empty();
        this.processingConfiguration = Input.empty();
        this.requestConfiguration = Input.empty();
        this.retryOptions = Input.empty();
        this.roleARN = Input.empty();
        this.s3BackupMode = Input.empty();
        this.s3Configuration = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryStreamHttpEndpointDestinationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DeliveryStreamBufferingHintsArgs> bufferingHints;
        private @Nullable Input<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions;
        private Input<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration;
        private @Nullable Input<DeliveryStreamProcessingConfigurationArgs> processingConfiguration;
        private @Nullable Input<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration;
        private @Nullable Input<DeliveryStreamRetryOptionsArgs> retryOptions;
        private @Nullable Input<String> roleARN;
        private @Nullable Input<String> s3BackupMode;
        private Input<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration;

        public Builder() {
    	      // Empty
        }

        public Builder(DeliveryStreamHttpEndpointDestinationConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bufferingHints = defaults.bufferingHints;
    	      this.cloudWatchLoggingOptions = defaults.cloudWatchLoggingOptions;
    	      this.endpointConfiguration = defaults.endpointConfiguration;
    	      this.processingConfiguration = defaults.processingConfiguration;
    	      this.requestConfiguration = defaults.requestConfiguration;
    	      this.retryOptions = defaults.retryOptions;
    	      this.roleARN = defaults.roleARN;
    	      this.s3BackupMode = defaults.s3BackupMode;
    	      this.s3Configuration = defaults.s3Configuration;
        }

        public Builder setBufferingHints(@Nullable Input<DeliveryStreamBufferingHintsArgs> bufferingHints) {
            this.bufferingHints = bufferingHints;
            return this;
        }

        public Builder setBufferingHints(@Nullable DeliveryStreamBufferingHintsArgs bufferingHints) {
            this.bufferingHints = Input.ofNullable(bufferingHints);
            return this;
        }

        public Builder setCloudWatchLoggingOptions(@Nullable Input<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions) {
            this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder setCloudWatchLoggingOptions(@Nullable DeliveryStreamCloudWatchLoggingOptionsArgs cloudWatchLoggingOptions) {
            this.cloudWatchLoggingOptions = Input.ofNullable(cloudWatchLoggingOptions);
            return this;
        }

        public Builder setEndpointConfiguration(Input<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration) {
            this.endpointConfiguration = Objects.requireNonNull(endpointConfiguration);
            return this;
        }

        public Builder setEndpointConfiguration(DeliveryStreamHttpEndpointConfigurationArgs endpointConfiguration) {
            this.endpointConfiguration = Input.of(Objects.requireNonNull(endpointConfiguration));
            return this;
        }

        public Builder setProcessingConfiguration(@Nullable Input<DeliveryStreamProcessingConfigurationArgs> processingConfiguration) {
            this.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder setProcessingConfiguration(@Nullable DeliveryStreamProcessingConfigurationArgs processingConfiguration) {
            this.processingConfiguration = Input.ofNullable(processingConfiguration);
            return this;
        }

        public Builder setRequestConfiguration(@Nullable Input<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration) {
            this.requestConfiguration = requestConfiguration;
            return this;
        }

        public Builder setRequestConfiguration(@Nullable DeliveryStreamHttpEndpointRequestConfigurationArgs requestConfiguration) {
            this.requestConfiguration = Input.ofNullable(requestConfiguration);
            return this;
        }

        public Builder setRetryOptions(@Nullable Input<DeliveryStreamRetryOptionsArgs> retryOptions) {
            this.retryOptions = retryOptions;
            return this;
        }

        public Builder setRetryOptions(@Nullable DeliveryStreamRetryOptionsArgs retryOptions) {
            this.retryOptions = Input.ofNullable(retryOptions);
            return this;
        }

        public Builder setRoleARN(@Nullable Input<String> roleARN) {
            this.roleARN = roleARN;
            return this;
        }

        public Builder setRoleARN(@Nullable String roleARN) {
            this.roleARN = Input.ofNullable(roleARN);
            return this;
        }

        public Builder setS3BackupMode(@Nullable Input<String> s3BackupMode) {
            this.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder setS3BackupMode(@Nullable String s3BackupMode) {
            this.s3BackupMode = Input.ofNullable(s3BackupMode);
            return this;
        }

        public Builder setS3Configuration(Input<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration) {
            this.s3Configuration = Objects.requireNonNull(s3Configuration);
            return this;
        }

        public Builder setS3Configuration(DeliveryStreamS3DestinationConfigurationArgs s3Configuration) {
            this.s3Configuration = Input.of(Objects.requireNonNull(s3Configuration));
            return this;
        }

        public DeliveryStreamHttpEndpointDestinationConfigurationArgs build() {
            return new DeliveryStreamHttpEndpointDestinationConfigurationArgs(bufferingHints, cloudWatchLoggingOptions, endpointConfiguration, processingConfiguration, requestConfiguration, retryOptions, roleARN, s3BackupMode, s3Configuration);
        }
    }
}
