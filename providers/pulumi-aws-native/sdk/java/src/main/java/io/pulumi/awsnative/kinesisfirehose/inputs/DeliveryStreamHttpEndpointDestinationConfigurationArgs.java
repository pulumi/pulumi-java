// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kinesisfirehose.inputs;

import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamBufferingHintsArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptionsArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamHttpEndpointConfigurationArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamHttpEndpointRequestConfigurationArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamProcessingConfigurationArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamRetryOptionsArgs;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamS3DestinationConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeliveryStreamHttpEndpointDestinationConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeliveryStreamHttpEndpointDestinationConfigurationArgs Empty = new DeliveryStreamHttpEndpointDestinationConfigurationArgs();

    @Import(name="bufferingHints")
      private final @Nullable Output<DeliveryStreamBufferingHintsArgs> bufferingHints;

    public Output<DeliveryStreamBufferingHintsArgs> getBufferingHints() {
        return this.bufferingHints == null ? Output.empty() : this.bufferingHints;
    }

    @Import(name="cloudWatchLoggingOptions")
      private final @Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions;

    public Output<DeliveryStreamCloudWatchLoggingOptionsArgs> getCloudWatchLoggingOptions() {
        return this.cloudWatchLoggingOptions == null ? Output.empty() : this.cloudWatchLoggingOptions;
    }

    @Import(name="endpointConfiguration", required=true)
      private final Output<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration;

    public Output<DeliveryStreamHttpEndpointConfigurationArgs> getEndpointConfiguration() {
        return this.endpointConfiguration;
    }

    @Import(name="processingConfiguration")
      private final @Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration;

    public Output<DeliveryStreamProcessingConfigurationArgs> getProcessingConfiguration() {
        return this.processingConfiguration == null ? Output.empty() : this.processingConfiguration;
    }

    @Import(name="requestConfiguration")
      private final @Nullable Output<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration;

    public Output<DeliveryStreamHttpEndpointRequestConfigurationArgs> getRequestConfiguration() {
        return this.requestConfiguration == null ? Output.empty() : this.requestConfiguration;
    }

    @Import(name="retryOptions")
      private final @Nullable Output<DeliveryStreamRetryOptionsArgs> retryOptions;

    public Output<DeliveryStreamRetryOptionsArgs> getRetryOptions() {
        return this.retryOptions == null ? Output.empty() : this.retryOptions;
    }

    @Import(name="roleARN")
      private final @Nullable Output<String> roleARN;

    public Output<String> getRoleARN() {
        return this.roleARN == null ? Output.empty() : this.roleARN;
    }

    @Import(name="s3BackupMode")
      private final @Nullable Output<String> s3BackupMode;

    public Output<String> getS3BackupMode() {
        return this.s3BackupMode == null ? Output.empty() : this.s3BackupMode;
    }

    @Import(name="s3Configuration", required=true)
      private final Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration;

    public Output<DeliveryStreamS3DestinationConfigurationArgs> getS3Configuration() {
        return this.s3Configuration;
    }

    public DeliveryStreamHttpEndpointDestinationConfigurationArgs(
        @Nullable Output<DeliveryStreamBufferingHintsArgs> bufferingHints,
        @Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions,
        Output<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration,
        @Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration,
        @Nullable Output<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration,
        @Nullable Output<DeliveryStreamRetryOptionsArgs> retryOptions,
        @Nullable Output<String> roleARN,
        @Nullable Output<String> s3BackupMode,
        Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration) {
        this.bufferingHints = bufferingHints;
        this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
        this.endpointConfiguration = Objects.requireNonNull(endpointConfiguration, "expected parameter 'endpointConfiguration' to be non-null");
        this.processingConfiguration = processingConfiguration;
        this.requestConfiguration = requestConfiguration;
        this.retryOptions = retryOptions;
        this.roleARN = roleARN;
        this.s3BackupMode = s3BackupMode;
        this.s3Configuration = Objects.requireNonNull(s3Configuration, "expected parameter 's3Configuration' to be non-null");
    }

    private DeliveryStreamHttpEndpointDestinationConfigurationArgs() {
        this.bufferingHints = Output.empty();
        this.cloudWatchLoggingOptions = Output.empty();
        this.endpointConfiguration = Output.empty();
        this.processingConfiguration = Output.empty();
        this.requestConfiguration = Output.empty();
        this.retryOptions = Output.empty();
        this.roleARN = Output.empty();
        this.s3BackupMode = Output.empty();
        this.s3Configuration = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryStreamHttpEndpointDestinationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DeliveryStreamBufferingHintsArgs> bufferingHints;
        private @Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions;
        private Output<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration;
        private @Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration;
        private @Nullable Output<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration;
        private @Nullable Output<DeliveryStreamRetryOptionsArgs> retryOptions;
        private @Nullable Output<String> roleARN;
        private @Nullable Output<String> s3BackupMode;
        private Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration;

        public Builder() {
    	      // Empty
        }

        public Builder(DeliveryStreamHttpEndpointDestinationConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bufferingHints = defaults.bufferingHints;
    	      this.cloudWatchLoggingOptions = defaults.cloudWatchLoggingOptions;
    	      this.endpointConfiguration = defaults.endpointConfiguration;
    	      this.processingConfiguration = defaults.processingConfiguration;
    	      this.requestConfiguration = defaults.requestConfiguration;
    	      this.retryOptions = defaults.retryOptions;
    	      this.roleARN = defaults.roleARN;
    	      this.s3BackupMode = defaults.s3BackupMode;
    	      this.s3Configuration = defaults.s3Configuration;
        }

        public Builder bufferingHints(@Nullable Output<DeliveryStreamBufferingHintsArgs> bufferingHints) {
            this.bufferingHints = bufferingHints;
            return this;
        }

        public Builder bufferingHints(@Nullable DeliveryStreamBufferingHintsArgs bufferingHints) {
            this.bufferingHints = Output.ofNullable(bufferingHints);
            return this;
        }

        public Builder cloudWatchLoggingOptions(@Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions) {
            this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder cloudWatchLoggingOptions(@Nullable DeliveryStreamCloudWatchLoggingOptionsArgs cloudWatchLoggingOptions) {
            this.cloudWatchLoggingOptions = Output.ofNullable(cloudWatchLoggingOptions);
            return this;
        }

        public Builder endpointConfiguration(Output<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration) {
            this.endpointConfiguration = Objects.requireNonNull(endpointConfiguration);
            return this;
        }

        public Builder endpointConfiguration(DeliveryStreamHttpEndpointConfigurationArgs endpointConfiguration) {
            this.endpointConfiguration = Output.of(Objects.requireNonNull(endpointConfiguration));
            return this;
        }

        public Builder processingConfiguration(@Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration) {
            this.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder processingConfiguration(@Nullable DeliveryStreamProcessingConfigurationArgs processingConfiguration) {
            this.processingConfiguration = Output.ofNullable(processingConfiguration);
            return this;
        }

        public Builder requestConfiguration(@Nullable Output<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration) {
            this.requestConfiguration = requestConfiguration;
            return this;
        }

        public Builder requestConfiguration(@Nullable DeliveryStreamHttpEndpointRequestConfigurationArgs requestConfiguration) {
            this.requestConfiguration = Output.ofNullable(requestConfiguration);
            return this;
        }

        public Builder retryOptions(@Nullable Output<DeliveryStreamRetryOptionsArgs> retryOptions) {
            this.retryOptions = retryOptions;
            return this;
        }

        public Builder retryOptions(@Nullable DeliveryStreamRetryOptionsArgs retryOptions) {
            this.retryOptions = Output.ofNullable(retryOptions);
            return this;
        }

        public Builder roleARN(@Nullable Output<String> roleARN) {
            this.roleARN = roleARN;
            return this;
        }

        public Builder roleARN(@Nullable String roleARN) {
            this.roleARN = Output.ofNullable(roleARN);
            return this;
        }

        public Builder s3BackupMode(@Nullable Output<String> s3BackupMode) {
            this.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder s3BackupMode(@Nullable String s3BackupMode) {
            this.s3BackupMode = Output.ofNullable(s3BackupMode);
            return this;
        }

        public Builder s3Configuration(Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration) {
            this.s3Configuration = Objects.requireNonNull(s3Configuration);
            return this;
        }

        public Builder s3Configuration(DeliveryStreamS3DestinationConfigurationArgs s3Configuration) {
            this.s3Configuration = Output.of(Objects.requireNonNull(s3Configuration));
            return this;
        }
        public DeliveryStreamHttpEndpointDestinationConfigurationArgs build() {
            return new DeliveryStreamHttpEndpointDestinationConfigurationArgs(bufferingHints, cloudWatchLoggingOptions, endpointConfiguration, processingConfiguration, requestConfiguration, retryOptions, roleARN, s3BackupMode, s3Configuration);
        }
    }
}
