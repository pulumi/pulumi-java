// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kinesisfirehose.inputs;

import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamBufferingHints;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptions;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamHttpEndpointConfiguration;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamHttpEndpointRequestConfiguration;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamProcessingConfiguration;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamRetryOptions;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamS3DestinationConfiguration;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryStreamHttpEndpointDestinationConfiguration extends io.pulumi.resources.InvokeArgs {

    public static final DeliveryStreamHttpEndpointDestinationConfiguration Empty = new DeliveryStreamHttpEndpointDestinationConfiguration();

    @InputImport(name="bufferingHints")
      private final @Nullable DeliveryStreamBufferingHints bufferingHints;

    public Optional<DeliveryStreamBufferingHints> getBufferingHints() {
        return this.bufferingHints == null ? Optional.empty() : Optional.ofNullable(this.bufferingHints);
    }

    @InputImport(name="cloudWatchLoggingOptions")
      private final @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions;

    public Optional<DeliveryStreamCloudWatchLoggingOptions> getCloudWatchLoggingOptions() {
        return this.cloudWatchLoggingOptions == null ? Optional.empty() : Optional.ofNullable(this.cloudWatchLoggingOptions);
    }

    @InputImport(name="endpointConfiguration", required=true)
      private final DeliveryStreamHttpEndpointConfiguration endpointConfiguration;

    public DeliveryStreamHttpEndpointConfiguration getEndpointConfiguration() {
        return this.endpointConfiguration;
    }

    @InputImport(name="processingConfiguration")
      private final @Nullable DeliveryStreamProcessingConfiguration processingConfiguration;

    public Optional<DeliveryStreamProcessingConfiguration> getProcessingConfiguration() {
        return this.processingConfiguration == null ? Optional.empty() : Optional.ofNullable(this.processingConfiguration);
    }

    @InputImport(name="requestConfiguration")
      private final @Nullable DeliveryStreamHttpEndpointRequestConfiguration requestConfiguration;

    public Optional<DeliveryStreamHttpEndpointRequestConfiguration> getRequestConfiguration() {
        return this.requestConfiguration == null ? Optional.empty() : Optional.ofNullable(this.requestConfiguration);
    }

    @InputImport(name="retryOptions")
      private final @Nullable DeliveryStreamRetryOptions retryOptions;

    public Optional<DeliveryStreamRetryOptions> getRetryOptions() {
        return this.retryOptions == null ? Optional.empty() : Optional.ofNullable(this.retryOptions);
    }

    @InputImport(name="roleARN")
      private final @Nullable String roleARN;

    public Optional<String> getRoleARN() {
        return this.roleARN == null ? Optional.empty() : Optional.ofNullable(this.roleARN);
    }

    @InputImport(name="s3BackupMode")
      private final @Nullable String s3BackupMode;

    public Optional<String> getS3BackupMode() {
        return this.s3BackupMode == null ? Optional.empty() : Optional.ofNullable(this.s3BackupMode);
    }

    @InputImport(name="s3Configuration", required=true)
      private final DeliveryStreamS3DestinationConfiguration s3Configuration;

    public DeliveryStreamS3DestinationConfiguration getS3Configuration() {
        return this.s3Configuration;
    }

    public DeliveryStreamHttpEndpointDestinationConfiguration(
        @Nullable DeliveryStreamBufferingHints bufferingHints,
        @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions,
        DeliveryStreamHttpEndpointConfiguration endpointConfiguration,
        @Nullable DeliveryStreamProcessingConfiguration processingConfiguration,
        @Nullable DeliveryStreamHttpEndpointRequestConfiguration requestConfiguration,
        @Nullable DeliveryStreamRetryOptions retryOptions,
        @Nullable String roleARN,
        @Nullable String s3BackupMode,
        DeliveryStreamS3DestinationConfiguration s3Configuration) {
        this.bufferingHints = bufferingHints;
        this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
        this.endpointConfiguration = Objects.requireNonNull(endpointConfiguration, "expected parameter 'endpointConfiguration' to be non-null");
        this.processingConfiguration = processingConfiguration;
        this.requestConfiguration = requestConfiguration;
        this.retryOptions = retryOptions;
        this.roleARN = roleARN;
        this.s3BackupMode = s3BackupMode;
        this.s3Configuration = Objects.requireNonNull(s3Configuration, "expected parameter 's3Configuration' to be non-null");
    }

    private DeliveryStreamHttpEndpointDestinationConfiguration() {
        this.bufferingHints = null;
        this.cloudWatchLoggingOptions = null;
        this.endpointConfiguration = null;
        this.processingConfiguration = null;
        this.requestConfiguration = null;
        this.retryOptions = null;
        this.roleARN = null;
        this.s3BackupMode = null;
        this.s3Configuration = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryStreamHttpEndpointDestinationConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DeliveryStreamBufferingHints bufferingHints;
        private @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions;
        private DeliveryStreamHttpEndpointConfiguration endpointConfiguration;
        private @Nullable DeliveryStreamProcessingConfiguration processingConfiguration;
        private @Nullable DeliveryStreamHttpEndpointRequestConfiguration requestConfiguration;
        private @Nullable DeliveryStreamRetryOptions retryOptions;
        private @Nullable String roleARN;
        private @Nullable String s3BackupMode;
        private DeliveryStreamS3DestinationConfiguration s3Configuration;

        public Builder() {
    	      // Empty
        }

        public Builder(DeliveryStreamHttpEndpointDestinationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bufferingHints = defaults.bufferingHints;
    	      this.cloudWatchLoggingOptions = defaults.cloudWatchLoggingOptions;
    	      this.endpointConfiguration = defaults.endpointConfiguration;
    	      this.processingConfiguration = defaults.processingConfiguration;
    	      this.requestConfiguration = defaults.requestConfiguration;
    	      this.retryOptions = defaults.retryOptions;
    	      this.roleARN = defaults.roleARN;
    	      this.s3BackupMode = defaults.s3BackupMode;
    	      this.s3Configuration = defaults.s3Configuration;
        }

        public Builder setBufferingHints(@Nullable DeliveryStreamBufferingHints bufferingHints) {
            this.bufferingHints = bufferingHints;
            return this;
        }

        public Builder setCloudWatchLoggingOptions(@Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions) {
            this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder setEndpointConfiguration(DeliveryStreamHttpEndpointConfiguration endpointConfiguration) {
            this.endpointConfiguration = Objects.requireNonNull(endpointConfiguration);
            return this;
        }

        public Builder setProcessingConfiguration(@Nullable DeliveryStreamProcessingConfiguration processingConfiguration) {
            this.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder setRequestConfiguration(@Nullable DeliveryStreamHttpEndpointRequestConfiguration requestConfiguration) {
            this.requestConfiguration = requestConfiguration;
            return this;
        }

        public Builder setRetryOptions(@Nullable DeliveryStreamRetryOptions retryOptions) {
            this.retryOptions = retryOptions;
            return this;
        }

        public Builder setRoleARN(@Nullable String roleARN) {
            this.roleARN = roleARN;
            return this;
        }

        public Builder setS3BackupMode(@Nullable String s3BackupMode) {
            this.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder setS3Configuration(DeliveryStreamS3DestinationConfiguration s3Configuration) {
            this.s3Configuration = Objects.requireNonNull(s3Configuration);
            return this;
        }
        public DeliveryStreamHttpEndpointDestinationConfiguration build() {
            return new DeliveryStreamHttpEndpointDestinationConfiguration(bufferingHints, cloudWatchLoggingOptions, endpointConfiguration, processingConfiguration, requestConfiguration, retryOptions, roleARN, s3BackupMode, s3Configuration);
        }
    }
}
