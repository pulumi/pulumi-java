// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudfront.inputs;

import io.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyCorsConfigArgs;
import io.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyCustomHeadersConfigArgs;
import io.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicySecurityHeadersConfigArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResponseHeadersPolicyConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResponseHeadersPolicyConfigArgs Empty = new ResponseHeadersPolicyConfigArgs();

    @InputImport(name="comment")
    private final @Nullable Input<String> comment;

    public Input<String> getComment() {
        return this.comment == null ? Input.empty() : this.comment;
    }

    @InputImport(name="corsConfig")
    private final @Nullable Input<ResponseHeadersPolicyCorsConfigArgs> corsConfig;

    public Input<ResponseHeadersPolicyCorsConfigArgs> getCorsConfig() {
        return this.corsConfig == null ? Input.empty() : this.corsConfig;
    }

    @InputImport(name="customHeadersConfig")
    private final @Nullable Input<ResponseHeadersPolicyCustomHeadersConfigArgs> customHeadersConfig;

    public Input<ResponseHeadersPolicyCustomHeadersConfigArgs> getCustomHeadersConfig() {
        return this.customHeadersConfig == null ? Input.empty() : this.customHeadersConfig;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="securityHeadersConfig")
    private final @Nullable Input<ResponseHeadersPolicySecurityHeadersConfigArgs> securityHeadersConfig;

    public Input<ResponseHeadersPolicySecurityHeadersConfigArgs> getSecurityHeadersConfig() {
        return this.securityHeadersConfig == null ? Input.empty() : this.securityHeadersConfig;
    }

    public ResponseHeadersPolicyConfigArgs(
        @Nullable Input<String> comment,
        @Nullable Input<ResponseHeadersPolicyCorsConfigArgs> corsConfig,
        @Nullable Input<ResponseHeadersPolicyCustomHeadersConfigArgs> customHeadersConfig,
        Input<String> name,
        @Nullable Input<ResponseHeadersPolicySecurityHeadersConfigArgs> securityHeadersConfig) {
        this.comment = comment;
        this.corsConfig = corsConfig;
        this.customHeadersConfig = customHeadersConfig;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.securityHeadersConfig = securityHeadersConfig;
    }

    private ResponseHeadersPolicyConfigArgs() {
        this.comment = Input.empty();
        this.corsConfig = Input.empty();
        this.customHeadersConfig = Input.empty();
        this.name = Input.empty();
        this.securityHeadersConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResponseHeadersPolicyConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> comment;
        private @Nullable Input<ResponseHeadersPolicyCorsConfigArgs> corsConfig;
        private @Nullable Input<ResponseHeadersPolicyCustomHeadersConfigArgs> customHeadersConfig;
        private Input<String> name;
        private @Nullable Input<ResponseHeadersPolicySecurityHeadersConfigArgs> securityHeadersConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ResponseHeadersPolicyConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.corsConfig = defaults.corsConfig;
    	      this.customHeadersConfig = defaults.customHeadersConfig;
    	      this.name = defaults.name;
    	      this.securityHeadersConfig = defaults.securityHeadersConfig;
        }

        public Builder setComment(@Nullable Input<String> comment) {
            this.comment = comment;
            return this;
        }

        public Builder setComment(@Nullable String comment) {
            this.comment = Input.ofNullable(comment);
            return this;
        }

        public Builder setCorsConfig(@Nullable Input<ResponseHeadersPolicyCorsConfigArgs> corsConfig) {
            this.corsConfig = corsConfig;
            return this;
        }

        public Builder setCorsConfig(@Nullable ResponseHeadersPolicyCorsConfigArgs corsConfig) {
            this.corsConfig = Input.ofNullable(corsConfig);
            return this;
        }

        public Builder setCustomHeadersConfig(@Nullable Input<ResponseHeadersPolicyCustomHeadersConfigArgs> customHeadersConfig) {
            this.customHeadersConfig = customHeadersConfig;
            return this;
        }

        public Builder setCustomHeadersConfig(@Nullable ResponseHeadersPolicyCustomHeadersConfigArgs customHeadersConfig) {
            this.customHeadersConfig = Input.ofNullable(customHeadersConfig);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setSecurityHeadersConfig(@Nullable Input<ResponseHeadersPolicySecurityHeadersConfigArgs> securityHeadersConfig) {
            this.securityHeadersConfig = securityHeadersConfig;
            return this;
        }

        public Builder setSecurityHeadersConfig(@Nullable ResponseHeadersPolicySecurityHeadersConfigArgs securityHeadersConfig) {
            this.securityHeadersConfig = Input.ofNullable(securityHeadersConfig);
            return this;
        }

        public ResponseHeadersPolicyConfigArgs build() {
            return new ResponseHeadersPolicyConfigArgs(comment, corsConfig, customHeadersConfig, name, securityHeadersConfig);
        }
    }
}
