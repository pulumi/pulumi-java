// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetScheduleResult {
    /**
     * Schedule cron
     * 
     */
    private final @Nullable String cronExpression;
    private final @Nullable List<String> jobNames;

    @OutputCustomType.Constructor({"cronExpression","jobNames"})
    private GetScheduleResult(
        @Nullable String cronExpression,
        @Nullable List<String> jobNames) {
        this.cronExpression = cronExpression;
        this.jobNames = jobNames;
    }

    /**
     * Schedule cron
     * 
    */
    public Optional<String> getCronExpression() {
        return Optional.ofNullable(this.cronExpression);
    }
    public List<String> getJobNames() {
        return this.jobNames == null ? List.of() : this.jobNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cronExpression;
        private @Nullable List<String> jobNames;

        public Builder() {
    	      // Empty
        }

        public Builder(GetScheduleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cronExpression = defaults.cronExpression;
    	      this.jobNames = defaults.jobNames;
        }

        public Builder setCronExpression(@Nullable String cronExpression) {
            this.cronExpression = cronExpression;
            return this;
        }

        public Builder setJobNames(@Nullable List<String> jobNames) {
            this.jobNames = jobNames;
            return this;
        }
        public GetScheduleResult build() {
            return new GetScheduleResult(cronExpression, jobNames);
        }
    }
}
