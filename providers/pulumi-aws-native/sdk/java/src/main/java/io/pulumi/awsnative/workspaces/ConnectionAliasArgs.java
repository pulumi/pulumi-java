// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.workspaces;

import io.pulumi.awsnative.workspaces.inputs.ConnectionAliasTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConnectionAliasArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConnectionAliasArgs Empty = new ConnectionAliasArgs();

    @InputImport(name="connectionString", required=true)
    private final Input<String> connectionString;

    public Input<String> getConnectionString() {
        return this.connectionString;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<ConnectionAliasTagArgs>> tags;

    public Input<List<ConnectionAliasTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public ConnectionAliasArgs(
        Input<String> connectionString,
        @Nullable Input<List<ConnectionAliasTagArgs>> tags) {
        this.connectionString = Objects.requireNonNull(connectionString, "expected parameter 'connectionString' to be non-null");
        this.tags = tags;
    }

    private ConnectionAliasArgs() {
        this.connectionString = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionAliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> connectionString;
        private @Nullable Input<List<ConnectionAliasTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionAliasArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionString = defaults.connectionString;
    	      this.tags = defaults.tags;
        }

        public Builder setConnectionString(Input<String> connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }

        public Builder setConnectionString(String connectionString) {
            this.connectionString = Input.of(Objects.requireNonNull(connectionString));
            return this;
        }

        public Builder setTags(@Nullable Input<List<ConnectionAliasTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<ConnectionAliasTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public ConnectionAliasArgs build() {
            return new ConnectionAliasArgs(connectionString, tags);
        }
    }
}
