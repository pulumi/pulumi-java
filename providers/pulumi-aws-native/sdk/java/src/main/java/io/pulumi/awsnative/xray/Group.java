// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.xray;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.xray.GroupArgs;
import io.pulumi.awsnative.xray.outputs.GroupInsightsConfiguration;
import io.pulumi.awsnative.xray.outputs.TagsItemProperties;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This schema provides construct and validation rules for AWS-XRay Group resource parameters.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var testGrpResource = new AwsNative.XRay.Group("testGrpResource", new AwsNative.XRay.GroupArgs
 *         {
 *             GroupName = "MyGroup",
 *             FilterExpression = "duration > 10",
 *             InsightsConfiguration = new AwsNative.XRay.Inputs.GroupInsightsConfigurationArgs
 *             {
 *                 InsightsEnabled = false,
 *                 NotificationsEnabled = false,
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/xray"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := xray.NewGroup(ctx, "testGrpResource", &xray.GroupArgs{
 * 			GroupName:        pulumi.String("MyGroup"),
 * 			FilterExpression: pulumi.String("duration > 10"),
 * 			InsightsConfiguration: &xray.GroupInsightsConfigurationArgs{
 * 				InsightsEnabled:      pulumi.Bool(false),
 * 				NotificationsEnabled: pulumi.Bool(false),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const testGrpResource = new aws_native.xray.Group("testGrpResource", {
 *     groupName: "MyGroup",
 *     filterExpression: "duration > 10",
 *     insightsConfiguration: {
 *         insightsEnabled: "false",
 *         notificationsEnabled: "false",
 *     },
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * test_grp_resource = aws_native.xray.Group("testGrpResource",
 *     group_name="MyGroup",
 *     filter_expression="duration > 10",
 *     insights_configuration=aws_native.xray.GroupInsightsConfigurationArgs(
 *         insights_enabled=False,
 *         notifications_enabled=False,
 *     ))
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var @group = new AwsNative.XRay.Group("group", new AwsNative.XRay.GroupArgs
 *         {
 *             GroupName = "MyGroup",
 *             FilterExpression = "duration > 10",
 *             InsightsConfiguration = new AwsNative.XRay.Inputs.GroupInsightsConfigurationArgs
 *             {
 *                 InsightsEnabled = false,
 *                 NotificationsEnabled = false,
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/xray"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := xray.NewGroup(ctx, "group", &xray.GroupArgs{
 * 			GroupName:        pulumi.String("MyGroup"),
 * 			FilterExpression: pulumi.String("duration > 10"),
 * 			InsightsConfiguration: &xray.GroupInsightsConfigurationArgs{
 * 				InsightsEnabled:      pulumi.Bool(false),
 * 				NotificationsEnabled: pulumi.Bool(false),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const group = new aws_native.xray.Group("group", {
 *     groupName: "MyGroup",
 *     filterExpression: "duration > 10",
 *     insightsConfiguration: {
 *         insightsEnabled: false,
 *         notificationsEnabled: false,
 *     },
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * group = aws_native.xray.Group("group",
 *     group_name="MyGroup",
 *     filter_expression="duration > 10",
 *     insights_configuration=aws_native.xray.GroupInsightsConfigurationArgs(
 *         insights_enabled=False,
 *         notifications_enabled=False,
 *     ))
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 */
@ResourceType(type="aws-native:xray:Group")
public class Group extends io.pulumi.resources.CustomResource {
    /**
     * The filter expression defining criteria by which to group traces.
     */
    @Export(name="filterExpression", type=String.class, parameters={})
    private Output</* @Nullable */ String> filterExpression;

    /**
     * @return The filter expression defining criteria by which to group traces.
     */
    public Output</* @Nullable */ String> getFilterExpression() {
        return this.filterExpression;
    }
    /**
     * The ARN of the group that was generated on creation.
     */
    @Export(name="groupARN", type=String.class, parameters={})
    private Output<String> groupARN;

    /**
     * @return The ARN of the group that was generated on creation.
     */
    public Output<String> getGroupARN() {
        return this.groupARN;
    }
    /**
     * The case-sensitive name of the new group. Names must be unique.
     */
    @Export(name="groupName", type=String.class, parameters={})
    private Output</* @Nullable */ String> groupName;

    /**
     * @return The case-sensitive name of the new group. Names must be unique.
     */
    public Output</* @Nullable */ String> getGroupName() {
        return this.groupName;
    }
    @Export(name="insightsConfiguration", type=GroupInsightsConfiguration.class, parameters={})
    private Output</* @Nullable */ GroupInsightsConfiguration> insightsConfiguration;

    public Output</* @Nullable */ GroupInsightsConfiguration> getInsightsConfiguration() {
        return this.insightsConfiguration;
    }
    @Export(name="tags", type=List.class, parameters={TagsItemProperties.class})
    private Output</* @Nullable */ List<TagsItemProperties>> tags;

    public Output</* @Nullable */ List<TagsItemProperties>> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Group(String name) {
        this(name, GroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Group(String name, @Nullable GroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Group(String name, @Nullable GroupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:xray:Group", name, args == null ? GroupArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Group(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:xray:Group", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Group get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Group(name, id, options);
    }
}
