// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.quicksight.DataSourceArgs;
import io.pulumi.awsnative.quicksight.enums.DataSourceResourceStatus;
import io.pulumi.awsnative.quicksight.enums.DataSourceType;
import io.pulumi.awsnative.quicksight.outputs.DataSourceCredentials;
import io.pulumi.awsnative.quicksight.outputs.DataSourceErrorInfo;
import io.pulumi.awsnative.quicksight.outputs.DataSourceParameters;
import io.pulumi.awsnative.quicksight.outputs.DataSourceResourcePermission;
import io.pulumi.awsnative.quicksight.outputs.DataSourceSslProperties;
import io.pulumi.awsnative.quicksight.outputs.DataSourceTag;
import io.pulumi.awsnative.quicksight.outputs.DataSourceVpcConnectionProperties;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="aws-native:quicksight:DataSource")
public class DataSource extends io.pulumi.resources.CustomResource {
    @OutputExport(name="alternateDataSourceParameters", type=List.class, parameters={DataSourceParameters.class})
    private Output</* @Nullable */ List<DataSourceParameters>> alternateDataSourceParameters;

    public Output</* @Nullable */ List<DataSourceParameters>> getAlternateDataSourceParameters() {
        return this.alternateDataSourceParameters;
    }
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    @OutputExport(name="awsAccountId", type=String.class, parameters={})
    private Output</* @Nullable */ String> awsAccountId;

    public Output</* @Nullable */ String> getAwsAccountId() {
        return this.awsAccountId;
    }
    @OutputExport(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    public Output<String> getCreatedTime() {
        return this.createdTime;
    }
    @OutputExport(name="credentials", type=DataSourceCredentials.class, parameters={})
    private Output</* @Nullable */ DataSourceCredentials> credentials;

    public Output</* @Nullable */ DataSourceCredentials> getCredentials() {
        return this.credentials;
    }
    @OutputExport(name="dataSourceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> dataSourceId;

    public Output</* @Nullable */ String> getDataSourceId() {
        return this.dataSourceId;
    }
    @OutputExport(name="dataSourceParameters", type=DataSourceParameters.class, parameters={})
    private Output</* @Nullable */ DataSourceParameters> dataSourceParameters;

    public Output</* @Nullable */ DataSourceParameters> getDataSourceParameters() {
        return this.dataSourceParameters;
    }
    @OutputExport(name="errorInfo", type=DataSourceErrorInfo.class, parameters={})
    private Output</* @Nullable */ DataSourceErrorInfo> errorInfo;

    public Output</* @Nullable */ DataSourceErrorInfo> getErrorInfo() {
        return this.errorInfo;
    }
    @OutputExport(name="lastUpdatedTime", type=String.class, parameters={})
    private Output<String> lastUpdatedTime;

    public Output<String> getLastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    public Output</* @Nullable */ String> getName() {
        return this.name;
    }
    @OutputExport(name="permissions", type=List.class, parameters={DataSourceResourcePermission.class})
    private Output</* @Nullable */ List<DataSourceResourcePermission>> permissions;

    public Output</* @Nullable */ List<DataSourceResourcePermission>> getPermissions() {
        return this.permissions;
    }
    @OutputExport(name="sslProperties", type=DataSourceSslProperties.class, parameters={})
    private Output</* @Nullable */ DataSourceSslProperties> sslProperties;

    public Output</* @Nullable */ DataSourceSslProperties> getSslProperties() {
        return this.sslProperties;
    }
    @OutputExport(name="status", type=DataSourceResourceStatus.class, parameters={})
    private Output<DataSourceResourceStatus> status;

    public Output<DataSourceResourceStatus> getStatus() {
        return this.status;
    }
    @OutputExport(name="tags", type=List.class, parameters={DataSourceTag.class})
    private Output</* @Nullable */ List<DataSourceTag>> tags;

    public Output</* @Nullable */ List<DataSourceTag>> getTags() {
        return this.tags;
    }
    @OutputExport(name="type", type=DataSourceType.class, parameters={})
    private Output</* @Nullable */ DataSourceType> type;

    public Output</* @Nullable */ DataSourceType> getType() {
        return this.type;
    }
    @OutputExport(name="vpcConnectionProperties", type=DataSourceVpcConnectionProperties.class, parameters={})
    private Output</* @Nullable */ DataSourceVpcConnectionProperties> vpcConnectionProperties;

    public Output</* @Nullable */ DataSourceVpcConnectionProperties> getVpcConnectionProperties() {
        return this.vpcConnectionProperties;
    }

    public DataSource(String name, @Nullable DataSourceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:DataSource", name, args == null ? DataSourceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private DataSource(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:DataSource", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static DataSource get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DataSource(name, id, options);
    }
}
