// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iot.inputs;

import io.pulumi.awsnative.iot.inputs.TopicRuleHttpActionHeaderArgs;
import io.pulumi.awsnative.iot.inputs.TopicRuleHttpAuthorizationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TopicRuleHttpActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final TopicRuleHttpActionArgs Empty = new TopicRuleHttpActionArgs();

    @Import(name="auth")
      private final @Nullable Output<TopicRuleHttpAuthorizationArgs> auth;

    public Output<TopicRuleHttpAuthorizationArgs> getAuth() {
        return this.auth == null ? Output.empty() : this.auth;
    }

    @Import(name="confirmationUrl")
      private final @Nullable Output<String> confirmationUrl;

    public Output<String> getConfirmationUrl() {
        return this.confirmationUrl == null ? Output.empty() : this.confirmationUrl;
    }

    @Import(name="headers")
      private final @Nullable Output<List<TopicRuleHttpActionHeaderArgs>> headers;

    public Output<List<TopicRuleHttpActionHeaderArgs>> getHeaders() {
        return this.headers == null ? Output.empty() : this.headers;
    }

    @Import(name="url", required=true)
      private final Output<String> url;

    public Output<String> getUrl() {
        return this.url;
    }

    public TopicRuleHttpActionArgs(
        @Nullable Output<TopicRuleHttpAuthorizationArgs> auth,
        @Nullable Output<String> confirmationUrl,
        @Nullable Output<List<TopicRuleHttpActionHeaderArgs>> headers,
        Output<String> url) {
        this.auth = auth;
        this.confirmationUrl = confirmationUrl;
        this.headers = headers;
        this.url = Objects.requireNonNull(url, "expected parameter 'url' to be non-null");
    }

    private TopicRuleHttpActionArgs() {
        this.auth = Output.empty();
        this.confirmationUrl = Output.empty();
        this.headers = Output.empty();
        this.url = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TopicRuleHttpActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<TopicRuleHttpAuthorizationArgs> auth;
        private @Nullable Output<String> confirmationUrl;
        private @Nullable Output<List<TopicRuleHttpActionHeaderArgs>> headers;
        private Output<String> url;

        public Builder() {
    	      // Empty
        }

        public Builder(TopicRuleHttpActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auth = defaults.auth;
    	      this.confirmationUrl = defaults.confirmationUrl;
    	      this.headers = defaults.headers;
    	      this.url = defaults.url;
        }

        public Builder auth(@Nullable Output<TopicRuleHttpAuthorizationArgs> auth) {
            this.auth = auth;
            return this;
        }

        public Builder auth(@Nullable TopicRuleHttpAuthorizationArgs auth) {
            this.auth = Output.ofNullable(auth);
            return this;
        }

        public Builder confirmationUrl(@Nullable Output<String> confirmationUrl) {
            this.confirmationUrl = confirmationUrl;
            return this;
        }

        public Builder confirmationUrl(@Nullable String confirmationUrl) {
            this.confirmationUrl = Output.ofNullable(confirmationUrl);
            return this;
        }

        public Builder headers(@Nullable Output<List<TopicRuleHttpActionHeaderArgs>> headers) {
            this.headers = headers;
            return this;
        }

        public Builder headers(@Nullable List<TopicRuleHttpActionHeaderArgs> headers) {
            this.headers = Output.ofNullable(headers);
            return this;
        }

        public Builder url(Output<String> url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }

        public Builder url(String url) {
            this.url = Output.of(Objects.requireNonNull(url));
            return this;
        }
        public TopicRuleHttpActionArgs build() {
            return new TopicRuleHttpActionArgs(auth, confirmationUrl, headers, url);
        }
    }
}
