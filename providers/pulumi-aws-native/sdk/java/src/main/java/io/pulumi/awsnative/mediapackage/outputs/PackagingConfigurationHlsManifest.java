// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediapackage.outputs;

import io.pulumi.awsnative.mediapackage.enums.PackagingConfigurationHlsManifestAdMarkers;
import io.pulumi.awsnative.mediapackage.outputs.PackagingConfigurationStreamSelection;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class PackagingConfigurationHlsManifest {
    private final @Nullable PackagingConfigurationHlsManifestAdMarkers adMarkers;
    private final @Nullable Boolean includeIframeOnlyStream;
    private final @Nullable String manifestName;
    private final @Nullable Integer programDateTimeIntervalSeconds;
    private final @Nullable Boolean repeatExtXKey;
    private final @Nullable PackagingConfigurationStreamSelection streamSelection;

    @OutputCustomType.Constructor({"adMarkers","includeIframeOnlyStream","manifestName","programDateTimeIntervalSeconds","repeatExtXKey","streamSelection"})
    private PackagingConfigurationHlsManifest(
        @Nullable PackagingConfigurationHlsManifestAdMarkers adMarkers,
        @Nullable Boolean includeIframeOnlyStream,
        @Nullable String manifestName,
        @Nullable Integer programDateTimeIntervalSeconds,
        @Nullable Boolean repeatExtXKey,
        @Nullable PackagingConfigurationStreamSelection streamSelection) {
        this.adMarkers = adMarkers;
        this.includeIframeOnlyStream = includeIframeOnlyStream;
        this.manifestName = manifestName;
        this.programDateTimeIntervalSeconds = programDateTimeIntervalSeconds;
        this.repeatExtXKey = repeatExtXKey;
        this.streamSelection = streamSelection;
    }

    public Optional<PackagingConfigurationHlsManifestAdMarkers> getAdMarkers() {
        return Optional.ofNullable(this.adMarkers);
    }
    public Optional<Boolean> getIncludeIframeOnlyStream() {
        return Optional.ofNullable(this.includeIframeOnlyStream);
    }
    public Optional<String> getManifestName() {
        return Optional.ofNullable(this.manifestName);
    }
    public Optional<Integer> getProgramDateTimeIntervalSeconds() {
        return Optional.ofNullable(this.programDateTimeIntervalSeconds);
    }
    public Optional<Boolean> getRepeatExtXKey() {
        return Optional.ofNullable(this.repeatExtXKey);
    }
    public Optional<PackagingConfigurationStreamSelection> getStreamSelection() {
        return Optional.ofNullable(this.streamSelection);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PackagingConfigurationHlsManifest defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable PackagingConfigurationHlsManifestAdMarkers adMarkers;
        private @Nullable Boolean includeIframeOnlyStream;
        private @Nullable String manifestName;
        private @Nullable Integer programDateTimeIntervalSeconds;
        private @Nullable Boolean repeatExtXKey;
        private @Nullable PackagingConfigurationStreamSelection streamSelection;

        public Builder() {
    	      // Empty
        }

        public Builder(PackagingConfigurationHlsManifest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adMarkers = defaults.adMarkers;
    	      this.includeIframeOnlyStream = defaults.includeIframeOnlyStream;
    	      this.manifestName = defaults.manifestName;
    	      this.programDateTimeIntervalSeconds = defaults.programDateTimeIntervalSeconds;
    	      this.repeatExtXKey = defaults.repeatExtXKey;
    	      this.streamSelection = defaults.streamSelection;
        }

        public Builder setAdMarkers(@Nullable PackagingConfigurationHlsManifestAdMarkers adMarkers) {
            this.adMarkers = adMarkers;
            return this;
        }

        public Builder setIncludeIframeOnlyStream(@Nullable Boolean includeIframeOnlyStream) {
            this.includeIframeOnlyStream = includeIframeOnlyStream;
            return this;
        }

        public Builder setManifestName(@Nullable String manifestName) {
            this.manifestName = manifestName;
            return this;
        }

        public Builder setProgramDateTimeIntervalSeconds(@Nullable Integer programDateTimeIntervalSeconds) {
            this.programDateTimeIntervalSeconds = programDateTimeIntervalSeconds;
            return this;
        }

        public Builder setRepeatExtXKey(@Nullable Boolean repeatExtXKey) {
            this.repeatExtXKey = repeatExtXKey;
            return this;
        }

        public Builder setStreamSelection(@Nullable PackagingConfigurationStreamSelection streamSelection) {
            this.streamSelection = streamSelection;
            return this;
        }

        public PackagingConfigurationHlsManifest build() {
            return new PackagingConfigurationHlsManifest(adMarkers, includeIframeOnlyStream, manifestName, programDateTimeIntervalSeconds, repeatExtXKey, streamSelection);
        }
    }
}
