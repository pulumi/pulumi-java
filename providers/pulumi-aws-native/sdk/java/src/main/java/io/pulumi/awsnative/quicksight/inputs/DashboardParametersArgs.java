// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight.inputs;

import io.pulumi.awsnative.quicksight.inputs.DashboardDateTimeParameterArgs;
import io.pulumi.awsnative.quicksight.inputs.DashboardDecimalParameterArgs;
import io.pulumi.awsnative.quicksight.inputs.DashboardIntegerParameterArgs;
import io.pulumi.awsnative.quicksight.inputs.DashboardStringParameterArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * <p>A list of QuickSight parameters and the list's override values.</p>
 * 
 */
public final class DashboardParametersArgs extends io.pulumi.resources.ResourceArgs {

    public static final DashboardParametersArgs Empty = new DashboardParametersArgs();

    /**
     * <p>Date-time parameters.</p>
     * 
     */
    @InputImport(name="dateTimeParameters")
      private final @Nullable Input<List<DashboardDateTimeParameterArgs>> dateTimeParameters;

    public Input<List<DashboardDateTimeParameterArgs>> getDateTimeParameters() {
        return this.dateTimeParameters == null ? Input.empty() : this.dateTimeParameters;
    }

    /**
     * <p>Decimal parameters.</p>
     * 
     */
    @InputImport(name="decimalParameters")
      private final @Nullable Input<List<DashboardDecimalParameterArgs>> decimalParameters;

    public Input<List<DashboardDecimalParameterArgs>> getDecimalParameters() {
        return this.decimalParameters == null ? Input.empty() : this.decimalParameters;
    }

    /**
     * <p>Integer parameters.</p>
     * 
     */
    @InputImport(name="integerParameters")
      private final @Nullable Input<List<DashboardIntegerParameterArgs>> integerParameters;

    public Input<List<DashboardIntegerParameterArgs>> getIntegerParameters() {
        return this.integerParameters == null ? Input.empty() : this.integerParameters;
    }

    /**
     * <p>String parameters.</p>
     * 
     */
    @InputImport(name="stringParameters")
      private final @Nullable Input<List<DashboardStringParameterArgs>> stringParameters;

    public Input<List<DashboardStringParameterArgs>> getStringParameters() {
        return this.stringParameters == null ? Input.empty() : this.stringParameters;
    }

    public DashboardParametersArgs(
        @Nullable Input<List<DashboardDateTimeParameterArgs>> dateTimeParameters,
        @Nullable Input<List<DashboardDecimalParameterArgs>> decimalParameters,
        @Nullable Input<List<DashboardIntegerParameterArgs>> integerParameters,
        @Nullable Input<List<DashboardStringParameterArgs>> stringParameters) {
        this.dateTimeParameters = dateTimeParameters;
        this.decimalParameters = decimalParameters;
        this.integerParameters = integerParameters;
        this.stringParameters = stringParameters;
    }

    private DashboardParametersArgs() {
        this.dateTimeParameters = Input.empty();
        this.decimalParameters = Input.empty();
        this.integerParameters = Input.empty();
        this.stringParameters = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<DashboardDateTimeParameterArgs>> dateTimeParameters;
        private @Nullable Input<List<DashboardDecimalParameterArgs>> decimalParameters;
        private @Nullable Input<List<DashboardIntegerParameterArgs>> integerParameters;
        private @Nullable Input<List<DashboardStringParameterArgs>> stringParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(DashboardParametersArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dateTimeParameters = defaults.dateTimeParameters;
    	      this.decimalParameters = defaults.decimalParameters;
    	      this.integerParameters = defaults.integerParameters;
    	      this.stringParameters = defaults.stringParameters;
        }

        public Builder setDateTimeParameters(@Nullable Input<List<DashboardDateTimeParameterArgs>> dateTimeParameters) {
            this.dateTimeParameters = dateTimeParameters;
            return this;
        }

        public Builder setDateTimeParameters(@Nullable List<DashboardDateTimeParameterArgs> dateTimeParameters) {
            this.dateTimeParameters = Input.ofNullable(dateTimeParameters);
            return this;
        }

        public Builder setDecimalParameters(@Nullable Input<List<DashboardDecimalParameterArgs>> decimalParameters) {
            this.decimalParameters = decimalParameters;
            return this;
        }

        public Builder setDecimalParameters(@Nullable List<DashboardDecimalParameterArgs> decimalParameters) {
            this.decimalParameters = Input.ofNullable(decimalParameters);
            return this;
        }

        public Builder setIntegerParameters(@Nullable Input<List<DashboardIntegerParameterArgs>> integerParameters) {
            this.integerParameters = integerParameters;
            return this;
        }

        public Builder setIntegerParameters(@Nullable List<DashboardIntegerParameterArgs> integerParameters) {
            this.integerParameters = Input.ofNullable(integerParameters);
            return this;
        }

        public Builder setStringParameters(@Nullable Input<List<DashboardStringParameterArgs>> stringParameters) {
            this.stringParameters = stringParameters;
            return this;
        }

        public Builder setStringParameters(@Nullable List<DashboardStringParameterArgs> stringParameters) {
            this.stringParameters = Input.ofNullable(stringParameters);
            return this;
        }
        public DashboardParametersArgs build() {
            return new DashboardParametersArgs(dateTimeParameters, decimalParameters, integerParameters, stringParameters);
        }
    }
}
