// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.backup.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class BackupVaultNotificationObjectTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final BackupVaultNotificationObjectTypeArgs Empty = new BackupVaultNotificationObjectTypeArgs();

    @InputImport(name="backupVaultEvents", required=true)
        private final Input<List<String>> backupVaultEvents;

    public Input<List<String>> getBackupVaultEvents() {
        return this.backupVaultEvents;
    }

    @InputImport(name="sNSTopicArn", required=true)
        private final Input<String> sNSTopicArn;

    public Input<String> getSNSTopicArn() {
        return this.sNSTopicArn;
    }

    public BackupVaultNotificationObjectTypeArgs(
        Input<List<String>> backupVaultEvents,
        Input<String> sNSTopicArn) {
        this.backupVaultEvents = Objects.requireNonNull(backupVaultEvents, "expected parameter 'backupVaultEvents' to be non-null");
        this.sNSTopicArn = Objects.requireNonNull(sNSTopicArn, "expected parameter 'sNSTopicArn' to be non-null");
    }

    private BackupVaultNotificationObjectTypeArgs() {
        this.backupVaultEvents = Input.empty();
        this.sNSTopicArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupVaultNotificationObjectTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> backupVaultEvents;
        private Input<String> sNSTopicArn;

        public Builder() {
    	      // Empty
        }

        public Builder(BackupVaultNotificationObjectTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupVaultEvents = defaults.backupVaultEvents;
    	      this.sNSTopicArn = defaults.sNSTopicArn;
        }

        public Builder setBackupVaultEvents(Input<List<String>> backupVaultEvents) {
            this.backupVaultEvents = Objects.requireNonNull(backupVaultEvents);
            return this;
        }

        public Builder setBackupVaultEvents(List<String> backupVaultEvents) {
            this.backupVaultEvents = Input.of(Objects.requireNonNull(backupVaultEvents));
            return this;
        }

        public Builder setSNSTopicArn(Input<String> sNSTopicArn) {
            this.sNSTopicArn = Objects.requireNonNull(sNSTopicArn);
            return this;
        }

        public Builder setSNSTopicArn(String sNSTopicArn) {
            this.sNSTopicArn = Input.of(Objects.requireNonNull(sNSTopicArn));
            return this;
        }
        public BackupVaultNotificationObjectTypeArgs build() {
            return new BackupVaultNotificationObjectTypeArgs(backupVaultEvents, sNSTopicArn);
        }
    }
}
