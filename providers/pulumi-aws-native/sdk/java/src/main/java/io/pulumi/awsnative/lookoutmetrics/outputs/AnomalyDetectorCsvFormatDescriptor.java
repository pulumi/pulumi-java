// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lookoutmetrics.outputs;

import io.pulumi.awsnative.lookoutmetrics.enums.AnomalyDetectorCsvFormatDescriptorFileCompression;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AnomalyDetectorCsvFormatDescriptor {
    private final @Nullable String charset;
    private final @Nullable Boolean containsHeader;
    private final @Nullable String delimiter;
    private final @Nullable AnomalyDetectorCsvFormatDescriptorFileCompression fileCompression;
    private final @Nullable List<String> headerList;
    private final @Nullable String quoteSymbol;

    @OutputCustomType.Constructor({"charset","containsHeader","delimiter","fileCompression","headerList","quoteSymbol"})
    private AnomalyDetectorCsvFormatDescriptor(
        @Nullable String charset,
        @Nullable Boolean containsHeader,
        @Nullable String delimiter,
        @Nullable AnomalyDetectorCsvFormatDescriptorFileCompression fileCompression,
        @Nullable List<String> headerList,
        @Nullable String quoteSymbol) {
        this.charset = charset;
        this.containsHeader = containsHeader;
        this.delimiter = delimiter;
        this.fileCompression = fileCompression;
        this.headerList = headerList;
        this.quoteSymbol = quoteSymbol;
    }

    public Optional<String> getCharset() {
        return Optional.ofNullable(this.charset);
    }
    public Optional<Boolean> getContainsHeader() {
        return Optional.ofNullable(this.containsHeader);
    }
    public Optional<String> getDelimiter() {
        return Optional.ofNullable(this.delimiter);
    }
    public Optional<AnomalyDetectorCsvFormatDescriptorFileCompression> getFileCompression() {
        return Optional.ofNullable(this.fileCompression);
    }
    public List<String> getHeaderList() {
        return this.headerList == null ? List.of() : this.headerList;
    }
    public Optional<String> getQuoteSymbol() {
        return Optional.ofNullable(this.quoteSymbol);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnomalyDetectorCsvFormatDescriptor defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String charset;
        private @Nullable Boolean containsHeader;
        private @Nullable String delimiter;
        private @Nullable AnomalyDetectorCsvFormatDescriptorFileCompression fileCompression;
        private @Nullable List<String> headerList;
        private @Nullable String quoteSymbol;

        public Builder() {
    	      // Empty
        }

        public Builder(AnomalyDetectorCsvFormatDescriptor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.charset = defaults.charset;
    	      this.containsHeader = defaults.containsHeader;
    	      this.delimiter = defaults.delimiter;
    	      this.fileCompression = defaults.fileCompression;
    	      this.headerList = defaults.headerList;
    	      this.quoteSymbol = defaults.quoteSymbol;
        }

        public Builder setCharset(@Nullable String charset) {
            this.charset = charset;
            return this;
        }

        public Builder setContainsHeader(@Nullable Boolean containsHeader) {
            this.containsHeader = containsHeader;
            return this;
        }

        public Builder setDelimiter(@Nullable String delimiter) {
            this.delimiter = delimiter;
            return this;
        }

        public Builder setFileCompression(@Nullable AnomalyDetectorCsvFormatDescriptorFileCompression fileCompression) {
            this.fileCompression = fileCompression;
            return this;
        }

        public Builder setHeaderList(@Nullable List<String> headerList) {
            this.headerList = headerList;
            return this;
        }

        public Builder setQuoteSymbol(@Nullable String quoteSymbol) {
            this.quoteSymbol = quoteSymbol;
            return this;
        }
        public AnomalyDetectorCsvFormatDescriptor build() {
            return new AnomalyDetectorCsvFormatDescriptor(charset, containsHeader, delimiter, fileCompression, headerList, quoteSymbol);
        }
    }
}
