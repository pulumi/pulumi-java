// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.redshift.outputs;

import io.pulumi.awsnative.redshift.outputs.ClusterEndpoint;
import io.pulumi.awsnative.redshift.outputs.ClusterLoggingProperties;
import io.pulumi.awsnative.redshift.outputs.ClusterTag;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterResult {
    /**
     * Major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default value is True
     * 
     */
    private final @Nullable Boolean allowVersionUpgrade;
    /**
     * The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values include the following.
     * 
     * enabled - Use AQUA if it is available for the current Region and Amazon Redshift node type.
     * disabled - Don't use AQUA.
     * auto - Amazon Redshift determines whether to use AQUA.
     * 
     */
    private final @Nullable String aquaConfigurationStatus;
    /**
     * The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Default value is 1
     * 
     */
    private final @Nullable Integer automatedSnapshotRetentionPeriod;
    /**
     * The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint
     * 
     */
    private final @Nullable String availabilityZone;
    /**
     * The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete.
     * 
     */
    private final @Nullable Boolean availabilityZoneRelocation;
    /**
     * The availability zone relocation status of the cluster
     * 
     */
    private final @Nullable String availabilityZoneRelocationStatus;
    /**
     * A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to false , the resize type is elastic.
     * 
     */
    private final @Nullable Boolean classic;
    /**
     * The name of the parameter group to be associated with this cluster.
     * 
     */
    private final @Nullable String clusterParameterGroupName;
    /**
     * A list of security groups to be associated with this cluster.
     * 
     */
    private final @Nullable List<String> clusterSecurityGroups;
    /**
     * The type of the cluster. When cluster type is specified as single-node, the NumberOfNodes parameter is not required and if multi-node, the NumberOfNodes parameter is required
     * 
     */
    private final @Nullable String clusterType;
    /**
     * The version of the Amazon Redshift engine software that you want to deploy on the cluster.The version selected runs on all the nodes in the cluster.
     * 
     */
    private final @Nullable String clusterVersion;
    /**
     * A boolean indicating whether to enable the deferred maintenance window.
     * 
     */
    private final @Nullable Boolean deferMaintenance;
    /**
     * An integer indicating the duration of the maintenance window in days. If you specify a duration, you can't specify an end time. The duration must be 45 days or less.
     * 
     */
    private final @Nullable Integer deferMaintenanceDuration;
    /**
     * A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can't specify a duration.
     * 
     */
    private final @Nullable String deferMaintenanceEndTime;
    /**
     * A unique identifier for the deferred maintenance window.
     * 
     */
    private final @Nullable String deferMaintenanceIdentifier;
    /**
     * A timestamp indicating the start time for the deferred maintenance window.
     * 
     */
    private final @Nullable String deferMaintenanceStartTime;
    /**
     * The destination AWS Region that you want to copy snapshots to. Constraints: Must be the name of a valid AWS Region. For more information, see Regions and Endpoints in the Amazon Web Services [https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region] General Reference
     * 
     */
    private final @Nullable String destinationRegion;
    /**
     * The Elastic IP (EIP) address for the cluster.
     * 
     */
    private final @Nullable String elasticIp;
    /**
     * If true, the data in the cluster is encrypted at rest.
     * 
     */
    private final @Nullable Boolean encrypted;
    private final @Nullable ClusterEndpoint endpoint;
    /**
     * An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.
     * 
     * If this option is true , enhanced VPC routing is enabled.
     * 
     * Default: false
     * 
     */
    private final @Nullable Boolean enhancedVpcRouting;
    /**
     * Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM
     * 
     */
    private final @Nullable String hsmClientCertificateIdentifier;
    /**
     * Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
     * 
     */
    private final @Nullable String hsmConfigurationIdentifier;
    /**
     * A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request
     * 
     */
    private final @Nullable List<String> iamRoles;
    private final @Nullable String id;
    /**
     * The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.
     * 
     */
    private final @Nullable String kmsKeyId;
    private final @Nullable ClusterLoggingProperties loggingProperties;
    /**
     * The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the PendingModifiedValues for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied.
     * 
     */
    private final @Nullable String maintenanceTrackName;
    /**
     * The number of days to retain newly copied snapshots in the destination AWS Region after they are copied from the source AWS Region. If the value is -1, the manual snapshot is retained indefinitely.
     * 
     * The value must be either -1 or an integer between 1 and 3,653.
     * 
     */
    private final @Nullable Integer manualSnapshotRetentionPeriod;
    /**
     * The node type to be provisioned for the cluster.Valid Values: ds2.xlarge | ds2.8xlarge | dc1.large | dc1.8xlarge | dc2.large | dc2.8xlarge | ra3.4xlarge | ra3.16xlarge
     * 
     */
    private final @Nullable String nodeType;
    /**
     * The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node.
     * 
     */
    private final @Nullable Integer numberOfNodes;
    /**
     * The port number on which the cluster accepts incoming connections. The cluster is accessible only via the JDBC and ODBC connection strings
     * 
     */
    private final @Nullable Integer port;
    /**
     * The weekly time range (in UTC) during which automated cluster maintenance can occur.
     * 
     */
    private final @Nullable String preferredMaintenanceWindow;
    /**
     * If true, the cluster can be accessed from a public network.
     * 
     */
    private final @Nullable Boolean publiclyAccessible;
    /**
     * The Redshift operation to be performed. Resource Action supports pause-cluster, resume-cluster APIs
     * 
     */
    private final @Nullable String resourceAction;
    /**
     * The identifier of the database revision. You can retrieve this value from the response to the DescribeClusterDbRevisions request.
     * 
     */
    private final @Nullable String revisionTarget;
    /**
     * A boolean indicating if we want to rotate Encryption Keys.
     * 
     */
    private final @Nullable Boolean rotateEncryptionKey;
    /**
     * The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.
     * 
     */
    private final @Nullable String snapshotCopyGrantName;
    /**
     * Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots.
     * 
     */
    private final @Nullable Boolean snapshotCopyManual;
    /**
     * The number of days to retain automated snapshots in the destination region after they are copied from the source region.
     * 
     *  Default is 7.
     * 
     *  Constraints: Must be at least 1 and no more than 35.
     * 
     */
    private final @Nullable Integer snapshotCopyRetentionPeriod;
    /**
     * The list of tags for the cluster parameter group.
     * 
     */
    private final @Nullable List<ClusterTag> tags;
    /**
     * A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
     * 
     */
    private final @Nullable List<String> vpcSecurityGroupIds;

    @CustomType.Constructor
    private GetClusterResult(
        @CustomType.Parameter("allowVersionUpgrade") @Nullable Boolean allowVersionUpgrade,
        @CustomType.Parameter("aquaConfigurationStatus") @Nullable String aquaConfigurationStatus,
        @CustomType.Parameter("automatedSnapshotRetentionPeriod") @Nullable Integer automatedSnapshotRetentionPeriod,
        @CustomType.Parameter("availabilityZone") @Nullable String availabilityZone,
        @CustomType.Parameter("availabilityZoneRelocation") @Nullable Boolean availabilityZoneRelocation,
        @CustomType.Parameter("availabilityZoneRelocationStatus") @Nullable String availabilityZoneRelocationStatus,
        @CustomType.Parameter("classic") @Nullable Boolean classic,
        @CustomType.Parameter("clusterParameterGroupName") @Nullable String clusterParameterGroupName,
        @CustomType.Parameter("clusterSecurityGroups") @Nullable List<String> clusterSecurityGroups,
        @CustomType.Parameter("clusterType") @Nullable String clusterType,
        @CustomType.Parameter("clusterVersion") @Nullable String clusterVersion,
        @CustomType.Parameter("deferMaintenance") @Nullable Boolean deferMaintenance,
        @CustomType.Parameter("deferMaintenanceDuration") @Nullable Integer deferMaintenanceDuration,
        @CustomType.Parameter("deferMaintenanceEndTime") @Nullable String deferMaintenanceEndTime,
        @CustomType.Parameter("deferMaintenanceIdentifier") @Nullable String deferMaintenanceIdentifier,
        @CustomType.Parameter("deferMaintenanceStartTime") @Nullable String deferMaintenanceStartTime,
        @CustomType.Parameter("destinationRegion") @Nullable String destinationRegion,
        @CustomType.Parameter("elasticIp") @Nullable String elasticIp,
        @CustomType.Parameter("encrypted") @Nullable Boolean encrypted,
        @CustomType.Parameter("endpoint") @Nullable ClusterEndpoint endpoint,
        @CustomType.Parameter("enhancedVpcRouting") @Nullable Boolean enhancedVpcRouting,
        @CustomType.Parameter("hsmClientCertificateIdentifier") @Nullable String hsmClientCertificateIdentifier,
        @CustomType.Parameter("hsmConfigurationIdentifier") @Nullable String hsmConfigurationIdentifier,
        @CustomType.Parameter("iamRoles") @Nullable List<String> iamRoles,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("kmsKeyId") @Nullable String kmsKeyId,
        @CustomType.Parameter("loggingProperties") @Nullable ClusterLoggingProperties loggingProperties,
        @CustomType.Parameter("maintenanceTrackName") @Nullable String maintenanceTrackName,
        @CustomType.Parameter("manualSnapshotRetentionPeriod") @Nullable Integer manualSnapshotRetentionPeriod,
        @CustomType.Parameter("nodeType") @Nullable String nodeType,
        @CustomType.Parameter("numberOfNodes") @Nullable Integer numberOfNodes,
        @CustomType.Parameter("port") @Nullable Integer port,
        @CustomType.Parameter("preferredMaintenanceWindow") @Nullable String preferredMaintenanceWindow,
        @CustomType.Parameter("publiclyAccessible") @Nullable Boolean publiclyAccessible,
        @CustomType.Parameter("resourceAction") @Nullable String resourceAction,
        @CustomType.Parameter("revisionTarget") @Nullable String revisionTarget,
        @CustomType.Parameter("rotateEncryptionKey") @Nullable Boolean rotateEncryptionKey,
        @CustomType.Parameter("snapshotCopyGrantName") @Nullable String snapshotCopyGrantName,
        @CustomType.Parameter("snapshotCopyManual") @Nullable Boolean snapshotCopyManual,
        @CustomType.Parameter("snapshotCopyRetentionPeriod") @Nullable Integer snapshotCopyRetentionPeriod,
        @CustomType.Parameter("tags") @Nullable List<ClusterTag> tags,
        @CustomType.Parameter("vpcSecurityGroupIds") @Nullable List<String> vpcSecurityGroupIds) {
        this.allowVersionUpgrade = allowVersionUpgrade;
        this.aquaConfigurationStatus = aquaConfigurationStatus;
        this.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod;
        this.availabilityZone = availabilityZone;
        this.availabilityZoneRelocation = availabilityZoneRelocation;
        this.availabilityZoneRelocationStatus = availabilityZoneRelocationStatus;
        this.classic = classic;
        this.clusterParameterGroupName = clusterParameterGroupName;
        this.clusterSecurityGroups = clusterSecurityGroups;
        this.clusterType = clusterType;
        this.clusterVersion = clusterVersion;
        this.deferMaintenance = deferMaintenance;
        this.deferMaintenanceDuration = deferMaintenanceDuration;
        this.deferMaintenanceEndTime = deferMaintenanceEndTime;
        this.deferMaintenanceIdentifier = deferMaintenanceIdentifier;
        this.deferMaintenanceStartTime = deferMaintenanceStartTime;
        this.destinationRegion = destinationRegion;
        this.elasticIp = elasticIp;
        this.encrypted = encrypted;
        this.endpoint = endpoint;
        this.enhancedVpcRouting = enhancedVpcRouting;
        this.hsmClientCertificateIdentifier = hsmClientCertificateIdentifier;
        this.hsmConfigurationIdentifier = hsmConfigurationIdentifier;
        this.iamRoles = iamRoles;
        this.id = id;
        this.kmsKeyId = kmsKeyId;
        this.loggingProperties = loggingProperties;
        this.maintenanceTrackName = maintenanceTrackName;
        this.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod;
        this.nodeType = nodeType;
        this.numberOfNodes = numberOfNodes;
        this.port = port;
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        this.publiclyAccessible = publiclyAccessible;
        this.resourceAction = resourceAction;
        this.revisionTarget = revisionTarget;
        this.rotateEncryptionKey = rotateEncryptionKey;
        this.snapshotCopyGrantName = snapshotCopyGrantName;
        this.snapshotCopyManual = snapshotCopyManual;
        this.snapshotCopyRetentionPeriod = snapshotCopyRetentionPeriod;
        this.tags = tags;
        this.vpcSecurityGroupIds = vpcSecurityGroupIds;
    }

    /**
     * Major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default value is True
     * 
    */
    public Optional<Boolean> getAllowVersionUpgrade() {
        return Optional.ofNullable(this.allowVersionUpgrade);
    }
    /**
     * The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values include the following.
     * 
     * enabled - Use AQUA if it is available for the current Region and Amazon Redshift node type.
     * disabled - Don't use AQUA.
     * auto - Amazon Redshift determines whether to use AQUA.
     * 
    */
    public Optional<String> getAquaConfigurationStatus() {
        return Optional.ofNullable(this.aquaConfigurationStatus);
    }
    /**
     * The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Default value is 1
     * 
    */
    public Optional<Integer> getAutomatedSnapshotRetentionPeriod() {
        return Optional.ofNullable(this.automatedSnapshotRetentionPeriod);
    }
    /**
     * The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint
     * 
    */
    public Optional<String> getAvailabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }
    /**
     * The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete.
     * 
    */
    public Optional<Boolean> getAvailabilityZoneRelocation() {
        return Optional.ofNullable(this.availabilityZoneRelocation);
    }
    /**
     * The availability zone relocation status of the cluster
     * 
    */
    public Optional<String> getAvailabilityZoneRelocationStatus() {
        return Optional.ofNullable(this.availabilityZoneRelocationStatus);
    }
    /**
     * A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to false , the resize type is elastic.
     * 
    */
    public Optional<Boolean> getClassic() {
        return Optional.ofNullable(this.classic);
    }
    /**
     * The name of the parameter group to be associated with this cluster.
     * 
    */
    public Optional<String> getClusterParameterGroupName() {
        return Optional.ofNullable(this.clusterParameterGroupName);
    }
    /**
     * A list of security groups to be associated with this cluster.
     * 
    */
    public List<String> getClusterSecurityGroups() {
        return this.clusterSecurityGroups == null ? List.of() : this.clusterSecurityGroups;
    }
    /**
     * The type of the cluster. When cluster type is specified as single-node, the NumberOfNodes parameter is not required and if multi-node, the NumberOfNodes parameter is required
     * 
    */
    public Optional<String> getClusterType() {
        return Optional.ofNullable(this.clusterType);
    }
    /**
     * The version of the Amazon Redshift engine software that you want to deploy on the cluster.The version selected runs on all the nodes in the cluster.
     * 
    */
    public Optional<String> getClusterVersion() {
        return Optional.ofNullable(this.clusterVersion);
    }
    /**
     * A boolean indicating whether to enable the deferred maintenance window.
     * 
    */
    public Optional<Boolean> getDeferMaintenance() {
        return Optional.ofNullable(this.deferMaintenance);
    }
    /**
     * An integer indicating the duration of the maintenance window in days. If you specify a duration, you can't specify an end time. The duration must be 45 days or less.
     * 
    */
    public Optional<Integer> getDeferMaintenanceDuration() {
        return Optional.ofNullable(this.deferMaintenanceDuration);
    }
    /**
     * A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can't specify a duration.
     * 
    */
    public Optional<String> getDeferMaintenanceEndTime() {
        return Optional.ofNullable(this.deferMaintenanceEndTime);
    }
    /**
     * A unique identifier for the deferred maintenance window.
     * 
    */
    public Optional<String> getDeferMaintenanceIdentifier() {
        return Optional.ofNullable(this.deferMaintenanceIdentifier);
    }
    /**
     * A timestamp indicating the start time for the deferred maintenance window.
     * 
    */
    public Optional<String> getDeferMaintenanceStartTime() {
        return Optional.ofNullable(this.deferMaintenanceStartTime);
    }
    /**
     * The destination AWS Region that you want to copy snapshots to. Constraints: Must be the name of a valid AWS Region. For more information, see Regions and Endpoints in the Amazon Web Services [https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region] General Reference
     * 
    */
    public Optional<String> getDestinationRegion() {
        return Optional.ofNullable(this.destinationRegion);
    }
    /**
     * The Elastic IP (EIP) address for the cluster.
     * 
    */
    public Optional<String> getElasticIp() {
        return Optional.ofNullable(this.elasticIp);
    }
    /**
     * If true, the data in the cluster is encrypted at rest.
     * 
    */
    public Optional<Boolean> getEncrypted() {
        return Optional.ofNullable(this.encrypted);
    }
    public Optional<ClusterEndpoint> getEndpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    /**
     * An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.
     * 
     * If this option is true , enhanced VPC routing is enabled.
     * 
     * Default: false
     * 
    */
    public Optional<Boolean> getEnhancedVpcRouting() {
        return Optional.ofNullable(this.enhancedVpcRouting);
    }
    /**
     * Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM
     * 
    */
    public Optional<String> getHsmClientCertificateIdentifier() {
        return Optional.ofNullable(this.hsmClientCertificateIdentifier);
    }
    /**
     * Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
     * 
    */
    public Optional<String> getHsmConfigurationIdentifier() {
        return Optional.ofNullable(this.hsmConfigurationIdentifier);
    }
    /**
     * A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request
     * 
    */
    public List<String> getIamRoles() {
        return this.iamRoles == null ? List.of() : this.iamRoles;
    }
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    /**
     * The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.
     * 
    */
    public Optional<String> getKmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    public Optional<ClusterLoggingProperties> getLoggingProperties() {
        return Optional.ofNullable(this.loggingProperties);
    }
    /**
     * The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the PendingModifiedValues for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied.
     * 
    */
    public Optional<String> getMaintenanceTrackName() {
        return Optional.ofNullable(this.maintenanceTrackName);
    }
    /**
     * The number of days to retain newly copied snapshots in the destination AWS Region after they are copied from the source AWS Region. If the value is -1, the manual snapshot is retained indefinitely.
     * 
     * The value must be either -1 or an integer between 1 and 3,653.
     * 
    */
    public Optional<Integer> getManualSnapshotRetentionPeriod() {
        return Optional.ofNullable(this.manualSnapshotRetentionPeriod);
    }
    /**
     * The node type to be provisioned for the cluster.Valid Values: ds2.xlarge | ds2.8xlarge | dc1.large | dc1.8xlarge | dc2.large | dc2.8xlarge | ra3.4xlarge | ra3.16xlarge
     * 
    */
    public Optional<String> getNodeType() {
        return Optional.ofNullable(this.nodeType);
    }
    /**
     * The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node.
     * 
    */
    public Optional<Integer> getNumberOfNodes() {
        return Optional.ofNullable(this.numberOfNodes);
    }
    /**
     * The port number on which the cluster accepts incoming connections. The cluster is accessible only via the JDBC and ODBC connection strings
     * 
    */
    public Optional<Integer> getPort() {
        return Optional.ofNullable(this.port);
    }
    /**
     * The weekly time range (in UTC) during which automated cluster maintenance can occur.
     * 
    */
    public Optional<String> getPreferredMaintenanceWindow() {
        return Optional.ofNullable(this.preferredMaintenanceWindow);
    }
    /**
     * If true, the cluster can be accessed from a public network.
     * 
    */
    public Optional<Boolean> getPubliclyAccessible() {
        return Optional.ofNullable(this.publiclyAccessible);
    }
    /**
     * The Redshift operation to be performed. Resource Action supports pause-cluster, resume-cluster APIs
     * 
    */
    public Optional<String> getResourceAction() {
        return Optional.ofNullable(this.resourceAction);
    }
    /**
     * The identifier of the database revision. You can retrieve this value from the response to the DescribeClusterDbRevisions request.
     * 
    */
    public Optional<String> getRevisionTarget() {
        return Optional.ofNullable(this.revisionTarget);
    }
    /**
     * A boolean indicating if we want to rotate Encryption Keys.
     * 
    */
    public Optional<Boolean> getRotateEncryptionKey() {
        return Optional.ofNullable(this.rotateEncryptionKey);
    }
    /**
     * The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.
     * 
    */
    public Optional<String> getSnapshotCopyGrantName() {
        return Optional.ofNullable(this.snapshotCopyGrantName);
    }
    /**
     * Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots.
     * 
    */
    public Optional<Boolean> getSnapshotCopyManual() {
        return Optional.ofNullable(this.snapshotCopyManual);
    }
    /**
     * The number of days to retain automated snapshots in the destination region after they are copied from the source region.
     * 
     *  Default is 7.
     * 
     *  Constraints: Must be at least 1 and no more than 35.
     * 
    */
    public Optional<Integer> getSnapshotCopyRetentionPeriod() {
        return Optional.ofNullable(this.snapshotCopyRetentionPeriod);
    }
    /**
     * The list of tags for the cluster parameter group.
     * 
    */
    public List<ClusterTag> getTags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
     * 
    */
    public List<String> getVpcSecurityGroupIds() {
        return this.vpcSecurityGroupIds == null ? List.of() : this.vpcSecurityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowVersionUpgrade;
        private @Nullable String aquaConfigurationStatus;
        private @Nullable Integer automatedSnapshotRetentionPeriod;
        private @Nullable String availabilityZone;
        private @Nullable Boolean availabilityZoneRelocation;
        private @Nullable String availabilityZoneRelocationStatus;
        private @Nullable Boolean classic;
        private @Nullable String clusterParameterGroupName;
        private @Nullable List<String> clusterSecurityGroups;
        private @Nullable String clusterType;
        private @Nullable String clusterVersion;
        private @Nullable Boolean deferMaintenance;
        private @Nullable Integer deferMaintenanceDuration;
        private @Nullable String deferMaintenanceEndTime;
        private @Nullable String deferMaintenanceIdentifier;
        private @Nullable String deferMaintenanceStartTime;
        private @Nullable String destinationRegion;
        private @Nullable String elasticIp;
        private @Nullable Boolean encrypted;
        private @Nullable ClusterEndpoint endpoint;
        private @Nullable Boolean enhancedVpcRouting;
        private @Nullable String hsmClientCertificateIdentifier;
        private @Nullable String hsmConfigurationIdentifier;
        private @Nullable List<String> iamRoles;
        private @Nullable String id;
        private @Nullable String kmsKeyId;
        private @Nullable ClusterLoggingProperties loggingProperties;
        private @Nullable String maintenanceTrackName;
        private @Nullable Integer manualSnapshotRetentionPeriod;
        private @Nullable String nodeType;
        private @Nullable Integer numberOfNodes;
        private @Nullable Integer port;
        private @Nullable String preferredMaintenanceWindow;
        private @Nullable Boolean publiclyAccessible;
        private @Nullable String resourceAction;
        private @Nullable String revisionTarget;
        private @Nullable Boolean rotateEncryptionKey;
        private @Nullable String snapshotCopyGrantName;
        private @Nullable Boolean snapshotCopyManual;
        private @Nullable Integer snapshotCopyRetentionPeriod;
        private @Nullable List<ClusterTag> tags;
        private @Nullable List<String> vpcSecurityGroupIds;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowVersionUpgrade = defaults.allowVersionUpgrade;
    	      this.aquaConfigurationStatus = defaults.aquaConfigurationStatus;
    	      this.automatedSnapshotRetentionPeriod = defaults.automatedSnapshotRetentionPeriod;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.availabilityZoneRelocation = defaults.availabilityZoneRelocation;
    	      this.availabilityZoneRelocationStatus = defaults.availabilityZoneRelocationStatus;
    	      this.classic = defaults.classic;
    	      this.clusterParameterGroupName = defaults.clusterParameterGroupName;
    	      this.clusterSecurityGroups = defaults.clusterSecurityGroups;
    	      this.clusterType = defaults.clusterType;
    	      this.clusterVersion = defaults.clusterVersion;
    	      this.deferMaintenance = defaults.deferMaintenance;
    	      this.deferMaintenanceDuration = defaults.deferMaintenanceDuration;
    	      this.deferMaintenanceEndTime = defaults.deferMaintenanceEndTime;
    	      this.deferMaintenanceIdentifier = defaults.deferMaintenanceIdentifier;
    	      this.deferMaintenanceStartTime = defaults.deferMaintenanceStartTime;
    	      this.destinationRegion = defaults.destinationRegion;
    	      this.elasticIp = defaults.elasticIp;
    	      this.encrypted = defaults.encrypted;
    	      this.endpoint = defaults.endpoint;
    	      this.enhancedVpcRouting = defaults.enhancedVpcRouting;
    	      this.hsmClientCertificateIdentifier = defaults.hsmClientCertificateIdentifier;
    	      this.hsmConfigurationIdentifier = defaults.hsmConfigurationIdentifier;
    	      this.iamRoles = defaults.iamRoles;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.loggingProperties = defaults.loggingProperties;
    	      this.maintenanceTrackName = defaults.maintenanceTrackName;
    	      this.manualSnapshotRetentionPeriod = defaults.manualSnapshotRetentionPeriod;
    	      this.nodeType = defaults.nodeType;
    	      this.numberOfNodes = defaults.numberOfNodes;
    	      this.port = defaults.port;
    	      this.preferredMaintenanceWindow = defaults.preferredMaintenanceWindow;
    	      this.publiclyAccessible = defaults.publiclyAccessible;
    	      this.resourceAction = defaults.resourceAction;
    	      this.revisionTarget = defaults.revisionTarget;
    	      this.rotateEncryptionKey = defaults.rotateEncryptionKey;
    	      this.snapshotCopyGrantName = defaults.snapshotCopyGrantName;
    	      this.snapshotCopyManual = defaults.snapshotCopyManual;
    	      this.snapshotCopyRetentionPeriod = defaults.snapshotCopyRetentionPeriod;
    	      this.tags = defaults.tags;
    	      this.vpcSecurityGroupIds = defaults.vpcSecurityGroupIds;
        }

        public Builder allowVersionUpgrade(@Nullable Boolean allowVersionUpgrade) {
            this.allowVersionUpgrade = allowVersionUpgrade;
            return this;
        }
        public Builder aquaConfigurationStatus(@Nullable String aquaConfigurationStatus) {
            this.aquaConfigurationStatus = aquaConfigurationStatus;
            return this;
        }
        public Builder automatedSnapshotRetentionPeriod(@Nullable Integer automatedSnapshotRetentionPeriod) {
            this.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod;
            return this;
        }
        public Builder availabilityZone(@Nullable String availabilityZone) {
            this.availabilityZone = availabilityZone;
            return this;
        }
        public Builder availabilityZoneRelocation(@Nullable Boolean availabilityZoneRelocation) {
            this.availabilityZoneRelocation = availabilityZoneRelocation;
            return this;
        }
        public Builder availabilityZoneRelocationStatus(@Nullable String availabilityZoneRelocationStatus) {
            this.availabilityZoneRelocationStatus = availabilityZoneRelocationStatus;
            return this;
        }
        public Builder classic(@Nullable Boolean classic) {
            this.classic = classic;
            return this;
        }
        public Builder clusterParameterGroupName(@Nullable String clusterParameterGroupName) {
            this.clusterParameterGroupName = clusterParameterGroupName;
            return this;
        }
        public Builder clusterSecurityGroups(@Nullable List<String> clusterSecurityGroups) {
            this.clusterSecurityGroups = clusterSecurityGroups;
            return this;
        }
        public Builder clusterSecurityGroups(String... clusterSecurityGroups) {
            return clusterSecurityGroups(List.of(clusterSecurityGroups));
        }
        public Builder clusterType(@Nullable String clusterType) {
            this.clusterType = clusterType;
            return this;
        }
        public Builder clusterVersion(@Nullable String clusterVersion) {
            this.clusterVersion = clusterVersion;
            return this;
        }
        public Builder deferMaintenance(@Nullable Boolean deferMaintenance) {
            this.deferMaintenance = deferMaintenance;
            return this;
        }
        public Builder deferMaintenanceDuration(@Nullable Integer deferMaintenanceDuration) {
            this.deferMaintenanceDuration = deferMaintenanceDuration;
            return this;
        }
        public Builder deferMaintenanceEndTime(@Nullable String deferMaintenanceEndTime) {
            this.deferMaintenanceEndTime = deferMaintenanceEndTime;
            return this;
        }
        public Builder deferMaintenanceIdentifier(@Nullable String deferMaintenanceIdentifier) {
            this.deferMaintenanceIdentifier = deferMaintenanceIdentifier;
            return this;
        }
        public Builder deferMaintenanceStartTime(@Nullable String deferMaintenanceStartTime) {
            this.deferMaintenanceStartTime = deferMaintenanceStartTime;
            return this;
        }
        public Builder destinationRegion(@Nullable String destinationRegion) {
            this.destinationRegion = destinationRegion;
            return this;
        }
        public Builder elasticIp(@Nullable String elasticIp) {
            this.elasticIp = elasticIp;
            return this;
        }
        public Builder encrypted(@Nullable Boolean encrypted) {
            this.encrypted = encrypted;
            return this;
        }
        public Builder endpoint(@Nullable ClusterEndpoint endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        public Builder enhancedVpcRouting(@Nullable Boolean enhancedVpcRouting) {
            this.enhancedVpcRouting = enhancedVpcRouting;
            return this;
        }
        public Builder hsmClientCertificateIdentifier(@Nullable String hsmClientCertificateIdentifier) {
            this.hsmClientCertificateIdentifier = hsmClientCertificateIdentifier;
            return this;
        }
        public Builder hsmConfigurationIdentifier(@Nullable String hsmConfigurationIdentifier) {
            this.hsmConfigurationIdentifier = hsmConfigurationIdentifier;
            return this;
        }
        public Builder iamRoles(@Nullable List<String> iamRoles) {
            this.iamRoles = iamRoles;
            return this;
        }
        public Builder iamRoles(String... iamRoles) {
            return iamRoles(List.of(iamRoles));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        public Builder loggingProperties(@Nullable ClusterLoggingProperties loggingProperties) {
            this.loggingProperties = loggingProperties;
            return this;
        }
        public Builder maintenanceTrackName(@Nullable String maintenanceTrackName) {
            this.maintenanceTrackName = maintenanceTrackName;
            return this;
        }
        public Builder manualSnapshotRetentionPeriod(@Nullable Integer manualSnapshotRetentionPeriod) {
            this.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod;
            return this;
        }
        public Builder nodeType(@Nullable String nodeType) {
            this.nodeType = nodeType;
            return this;
        }
        public Builder numberOfNodes(@Nullable Integer numberOfNodes) {
            this.numberOfNodes = numberOfNodes;
            return this;
        }
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        public Builder preferredMaintenanceWindow(@Nullable String preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = preferredMaintenanceWindow;
            return this;
        }
        public Builder publiclyAccessible(@Nullable Boolean publiclyAccessible) {
            this.publiclyAccessible = publiclyAccessible;
            return this;
        }
        public Builder resourceAction(@Nullable String resourceAction) {
            this.resourceAction = resourceAction;
            return this;
        }
        public Builder revisionTarget(@Nullable String revisionTarget) {
            this.revisionTarget = revisionTarget;
            return this;
        }
        public Builder rotateEncryptionKey(@Nullable Boolean rotateEncryptionKey) {
            this.rotateEncryptionKey = rotateEncryptionKey;
            return this;
        }
        public Builder snapshotCopyGrantName(@Nullable String snapshotCopyGrantName) {
            this.snapshotCopyGrantName = snapshotCopyGrantName;
            return this;
        }
        public Builder snapshotCopyManual(@Nullable Boolean snapshotCopyManual) {
            this.snapshotCopyManual = snapshotCopyManual;
            return this;
        }
        public Builder snapshotCopyRetentionPeriod(@Nullable Integer snapshotCopyRetentionPeriod) {
            this.snapshotCopyRetentionPeriod = snapshotCopyRetentionPeriod;
            return this;
        }
        public Builder tags(@Nullable List<ClusterTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(ClusterTag... tags) {
            return tags(List.of(tags));
        }
        public Builder vpcSecurityGroupIds(@Nullable List<String> vpcSecurityGroupIds) {
            this.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return this;
        }
        public Builder vpcSecurityGroupIds(String... vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(List.of(vpcSecurityGroupIds));
        }        public GetClusterResult build() {
            return new GetClusterResult(allowVersionUpgrade, aquaConfigurationStatus, automatedSnapshotRetentionPeriod, availabilityZone, availabilityZoneRelocation, availabilityZoneRelocationStatus, classic, clusterParameterGroupName, clusterSecurityGroups, clusterType, clusterVersion, deferMaintenance, deferMaintenanceDuration, deferMaintenanceEndTime, deferMaintenanceIdentifier, deferMaintenanceStartTime, destinationRegion, elasticIp, encrypted, endpoint, enhancedVpcRouting, hsmClientCertificateIdentifier, hsmConfigurationIdentifier, iamRoles, id, kmsKeyId, loggingProperties, maintenanceTrackName, manualSnapshotRetentionPeriod, nodeType, numberOfNodes, port, preferredMaintenanceWindow, publiclyAccessible, resourceAction, revisionTarget, rotateEncryptionKey, snapshotCopyGrantName, snapshotCopyManual, snapshotCopyRetentionPeriod, tags, vpcSecurityGroupIds);
        }
    }
}
