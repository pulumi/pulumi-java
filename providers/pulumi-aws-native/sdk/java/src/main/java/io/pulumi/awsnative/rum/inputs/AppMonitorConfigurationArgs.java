// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.rum.inputs;

import io.pulumi.awsnative.rum.enums.AppMonitorTelemetry;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppMonitorConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppMonitorConfigurationArgs Empty = new AppMonitorConfigurationArgs();

    @InputImport(name="allowCookies")
    private final @Nullable Input<Boolean> allowCookies;

    public Input<Boolean> getAllowCookies() {
        return this.allowCookies == null ? Input.empty() : this.allowCookies;
    }

    @InputImport(name="enableXRay")
    private final @Nullable Input<Boolean> enableXRay;

    public Input<Boolean> getEnableXRay() {
        return this.enableXRay == null ? Input.empty() : this.enableXRay;
    }

    @InputImport(name="excludedPages")
    private final @Nullable Input<List<String>> excludedPages;

    public Input<List<String>> getExcludedPages() {
        return this.excludedPages == null ? Input.empty() : this.excludedPages;
    }

    @InputImport(name="favoritePages")
    private final @Nullable Input<List<String>> favoritePages;

    public Input<List<String>> getFavoritePages() {
        return this.favoritePages == null ? Input.empty() : this.favoritePages;
    }

    @InputImport(name="guestRoleArn")
    private final @Nullable Input<String> guestRoleArn;

    public Input<String> getGuestRoleArn() {
        return this.guestRoleArn == null ? Input.empty() : this.guestRoleArn;
    }

    @InputImport(name="identityPoolId")
    private final @Nullable Input<String> identityPoolId;

    public Input<String> getIdentityPoolId() {
        return this.identityPoolId == null ? Input.empty() : this.identityPoolId;
    }

    @InputImport(name="includedPages")
    private final @Nullable Input<List<String>> includedPages;

    public Input<List<String>> getIncludedPages() {
        return this.includedPages == null ? Input.empty() : this.includedPages;
    }

    @InputImport(name="sessionSampleRate")
    private final @Nullable Input<Double> sessionSampleRate;

    public Input<Double> getSessionSampleRate() {
        return this.sessionSampleRate == null ? Input.empty() : this.sessionSampleRate;
    }

    @InputImport(name="telemetries")
    private final @Nullable Input<List<AppMonitorTelemetry>> telemetries;

    public Input<List<AppMonitorTelemetry>> getTelemetries() {
        return this.telemetries == null ? Input.empty() : this.telemetries;
    }

    public AppMonitorConfigurationArgs(
        @Nullable Input<Boolean> allowCookies,
        @Nullable Input<Boolean> enableXRay,
        @Nullable Input<List<String>> excludedPages,
        @Nullable Input<List<String>> favoritePages,
        @Nullable Input<String> guestRoleArn,
        @Nullable Input<String> identityPoolId,
        @Nullable Input<List<String>> includedPages,
        @Nullable Input<Double> sessionSampleRate,
        @Nullable Input<List<AppMonitorTelemetry>> telemetries) {
        this.allowCookies = allowCookies;
        this.enableXRay = enableXRay;
        this.excludedPages = excludedPages;
        this.favoritePages = favoritePages;
        this.guestRoleArn = guestRoleArn;
        this.identityPoolId = identityPoolId;
        this.includedPages = includedPages;
        this.sessionSampleRate = sessionSampleRate;
        this.telemetries = telemetries;
    }

    private AppMonitorConfigurationArgs() {
        this.allowCookies = Input.empty();
        this.enableXRay = Input.empty();
        this.excludedPages = Input.empty();
        this.favoritePages = Input.empty();
        this.guestRoleArn = Input.empty();
        this.identityPoolId = Input.empty();
        this.includedPages = Input.empty();
        this.sessionSampleRate = Input.empty();
        this.telemetries = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppMonitorConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> allowCookies;
        private @Nullable Input<Boolean> enableXRay;
        private @Nullable Input<List<String>> excludedPages;
        private @Nullable Input<List<String>> favoritePages;
        private @Nullable Input<String> guestRoleArn;
        private @Nullable Input<String> identityPoolId;
        private @Nullable Input<List<String>> includedPages;
        private @Nullable Input<Double> sessionSampleRate;
        private @Nullable Input<List<AppMonitorTelemetry>> telemetries;

        public Builder() {
    	      // Empty
        }

        public Builder(AppMonitorConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowCookies = defaults.allowCookies;
    	      this.enableXRay = defaults.enableXRay;
    	      this.excludedPages = defaults.excludedPages;
    	      this.favoritePages = defaults.favoritePages;
    	      this.guestRoleArn = defaults.guestRoleArn;
    	      this.identityPoolId = defaults.identityPoolId;
    	      this.includedPages = defaults.includedPages;
    	      this.sessionSampleRate = defaults.sessionSampleRate;
    	      this.telemetries = defaults.telemetries;
        }

        public Builder setAllowCookies(@Nullable Input<Boolean> allowCookies) {
            this.allowCookies = allowCookies;
            return this;
        }

        public Builder setAllowCookies(@Nullable Boolean allowCookies) {
            this.allowCookies = Input.ofNullable(allowCookies);
            return this;
        }

        public Builder setEnableXRay(@Nullable Input<Boolean> enableXRay) {
            this.enableXRay = enableXRay;
            return this;
        }

        public Builder setEnableXRay(@Nullable Boolean enableXRay) {
            this.enableXRay = Input.ofNullable(enableXRay);
            return this;
        }

        public Builder setExcludedPages(@Nullable Input<List<String>> excludedPages) {
            this.excludedPages = excludedPages;
            return this;
        }

        public Builder setExcludedPages(@Nullable List<String> excludedPages) {
            this.excludedPages = Input.ofNullable(excludedPages);
            return this;
        }

        public Builder setFavoritePages(@Nullable Input<List<String>> favoritePages) {
            this.favoritePages = favoritePages;
            return this;
        }

        public Builder setFavoritePages(@Nullable List<String> favoritePages) {
            this.favoritePages = Input.ofNullable(favoritePages);
            return this;
        }

        public Builder setGuestRoleArn(@Nullable Input<String> guestRoleArn) {
            this.guestRoleArn = guestRoleArn;
            return this;
        }

        public Builder setGuestRoleArn(@Nullable String guestRoleArn) {
            this.guestRoleArn = Input.ofNullable(guestRoleArn);
            return this;
        }

        public Builder setIdentityPoolId(@Nullable Input<String> identityPoolId) {
            this.identityPoolId = identityPoolId;
            return this;
        }

        public Builder setIdentityPoolId(@Nullable String identityPoolId) {
            this.identityPoolId = Input.ofNullable(identityPoolId);
            return this;
        }

        public Builder setIncludedPages(@Nullable Input<List<String>> includedPages) {
            this.includedPages = includedPages;
            return this;
        }

        public Builder setIncludedPages(@Nullable List<String> includedPages) {
            this.includedPages = Input.ofNullable(includedPages);
            return this;
        }

        public Builder setSessionSampleRate(@Nullable Input<Double> sessionSampleRate) {
            this.sessionSampleRate = sessionSampleRate;
            return this;
        }

        public Builder setSessionSampleRate(@Nullable Double sessionSampleRate) {
            this.sessionSampleRate = Input.ofNullable(sessionSampleRate);
            return this;
        }

        public Builder setTelemetries(@Nullable Input<List<AppMonitorTelemetry>> telemetries) {
            this.telemetries = telemetries;
            return this;
        }

        public Builder setTelemetries(@Nullable List<AppMonitorTelemetry> telemetries) {
            this.telemetries = Input.ofNullable(telemetries);
            return this;
        }

        public AppMonitorConfigurationArgs build() {
            return new AppMonitorConfigurationArgs(allowCookies, enableXRay, excludedPages, favoritePages, guestRoleArn, identityPoolId, includedPages, sessionSampleRate, telemetries);
        }
    }
}
