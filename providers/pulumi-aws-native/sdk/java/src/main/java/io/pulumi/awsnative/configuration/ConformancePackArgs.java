// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.configuration;

import io.pulumi.awsnative.configuration.inputs.ConformancePackInputParameterArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConformancePackArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConformancePackArgs Empty = new ConformancePackArgs();

    /**
     * A list of ConformancePackInputParameter objects.
     * 
     */
    @InputImport(name="conformancePackInputParameters")
    private final @Nullable Input<List<ConformancePackInputParameterArgs>> conformancePackInputParameters;

    public Input<List<ConformancePackInputParameterArgs>> getConformancePackInputParameters() {
        return this.conformancePackInputParameters == null ? Input.empty() : this.conformancePackInputParameters;
    }

    /**
     * Name of the conformance pack which will be assigned as the unique identifier.
     * 
     */
    @InputImport(name="conformancePackName")
    private final @Nullable Input<String> conformancePackName;

    public Input<String> getConformancePackName() {
        return this.conformancePackName == null ? Input.empty() : this.conformancePackName;
    }

    /**
     * AWS Config stores intermediate files while processing conformance pack template.
     * 
     */
    @InputImport(name="deliveryS3Bucket")
    private final @Nullable Input<String> deliveryS3Bucket;

    public Input<String> getDeliveryS3Bucket() {
        return this.deliveryS3Bucket == null ? Input.empty() : this.deliveryS3Bucket;
    }

    /**
     * The prefix for delivery S3 bucket.
     * 
     */
    @InputImport(name="deliveryS3KeyPrefix")
    private final @Nullable Input<String> deliveryS3KeyPrefix;

    public Input<String> getDeliveryS3KeyPrefix() {
        return this.deliveryS3KeyPrefix == null ? Input.empty() : this.deliveryS3KeyPrefix;
    }

    /**
     * A string containing full conformance pack template body. You can only specify one of the template body or template S3Uri fields.
     * 
     */
    @InputImport(name="templateBody")
    private final @Nullable Input<String> templateBody;

    public Input<String> getTemplateBody() {
        return this.templateBody == null ? Input.empty() : this.templateBody;
    }

    /**
     * Location of file containing the template body which points to the conformance pack template that is located in an Amazon S3 bucket. You can only specify one of the template body or template S3Uri fields.
     * 
     */
    @InputImport(name="templateS3Uri")
    private final @Nullable Input<String> templateS3Uri;

    public Input<String> getTemplateS3Uri() {
        return this.templateS3Uri == null ? Input.empty() : this.templateS3Uri;
    }

    public ConformancePackArgs(
        @Nullable Input<List<ConformancePackInputParameterArgs>> conformancePackInputParameters,
        @Nullable Input<String> conformancePackName,
        @Nullable Input<String> deliveryS3Bucket,
        @Nullable Input<String> deliveryS3KeyPrefix,
        @Nullable Input<String> templateBody,
        @Nullable Input<String> templateS3Uri) {
        this.conformancePackInputParameters = conformancePackInputParameters;
        this.conformancePackName = conformancePackName;
        this.deliveryS3Bucket = deliveryS3Bucket;
        this.deliveryS3KeyPrefix = deliveryS3KeyPrefix;
        this.templateBody = templateBody;
        this.templateS3Uri = templateS3Uri;
    }

    private ConformancePackArgs() {
        this.conformancePackInputParameters = Input.empty();
        this.conformancePackName = Input.empty();
        this.deliveryS3Bucket = Input.empty();
        this.deliveryS3KeyPrefix = Input.empty();
        this.templateBody = Input.empty();
        this.templateS3Uri = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConformancePackArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<ConformancePackInputParameterArgs>> conformancePackInputParameters;
        private @Nullable Input<String> conformancePackName;
        private @Nullable Input<String> deliveryS3Bucket;
        private @Nullable Input<String> deliveryS3KeyPrefix;
        private @Nullable Input<String> templateBody;
        private @Nullable Input<String> templateS3Uri;

        public Builder() {
    	      // Empty
        }

        public Builder(ConformancePackArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conformancePackInputParameters = defaults.conformancePackInputParameters;
    	      this.conformancePackName = defaults.conformancePackName;
    	      this.deliveryS3Bucket = defaults.deliveryS3Bucket;
    	      this.deliveryS3KeyPrefix = defaults.deliveryS3KeyPrefix;
    	      this.templateBody = defaults.templateBody;
    	      this.templateS3Uri = defaults.templateS3Uri;
        }

        public Builder setConformancePackInputParameters(@Nullable Input<List<ConformancePackInputParameterArgs>> conformancePackInputParameters) {
            this.conformancePackInputParameters = conformancePackInputParameters;
            return this;
        }

        public Builder setConformancePackInputParameters(@Nullable List<ConformancePackInputParameterArgs> conformancePackInputParameters) {
            this.conformancePackInputParameters = Input.ofNullable(conformancePackInputParameters);
            return this;
        }

        public Builder setConformancePackName(@Nullable Input<String> conformancePackName) {
            this.conformancePackName = conformancePackName;
            return this;
        }

        public Builder setConformancePackName(@Nullable String conformancePackName) {
            this.conformancePackName = Input.ofNullable(conformancePackName);
            return this;
        }

        public Builder setDeliveryS3Bucket(@Nullable Input<String> deliveryS3Bucket) {
            this.deliveryS3Bucket = deliveryS3Bucket;
            return this;
        }

        public Builder setDeliveryS3Bucket(@Nullable String deliveryS3Bucket) {
            this.deliveryS3Bucket = Input.ofNullable(deliveryS3Bucket);
            return this;
        }

        public Builder setDeliveryS3KeyPrefix(@Nullable Input<String> deliveryS3KeyPrefix) {
            this.deliveryS3KeyPrefix = deliveryS3KeyPrefix;
            return this;
        }

        public Builder setDeliveryS3KeyPrefix(@Nullable String deliveryS3KeyPrefix) {
            this.deliveryS3KeyPrefix = Input.ofNullable(deliveryS3KeyPrefix);
            return this;
        }

        public Builder setTemplateBody(@Nullable Input<String> templateBody) {
            this.templateBody = templateBody;
            return this;
        }

        public Builder setTemplateBody(@Nullable String templateBody) {
            this.templateBody = Input.ofNullable(templateBody);
            return this;
        }

        public Builder setTemplateS3Uri(@Nullable Input<String> templateS3Uri) {
            this.templateS3Uri = templateS3Uri;
            return this;
        }

        public Builder setTemplateS3Uri(@Nullable String templateS3Uri) {
            this.templateS3Uri = Input.ofNullable(templateS3Uri);
            return this;
        }

        public ConformancePackArgs build() {
            return new ConformancePackArgs(conformancePackInputParameters, conformancePackName, deliveryS3Bucket, deliveryS3KeyPrefix, templateBody, templateS3Uri);
        }
    }
}
