// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.configuration;

import io.pulumi.awsnative.configuration.inputs.ConformancePackInputParameterArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConformancePackArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConformancePackArgs Empty = new ConformancePackArgs();

    /**
     * A list of ConformancePackInputParameter objects.
     * 
     */
    @Import(name="conformancePackInputParameters")
      private final @Nullable Output<List<ConformancePackInputParameterArgs>> conformancePackInputParameters;

    public Output<List<ConformancePackInputParameterArgs>> getConformancePackInputParameters() {
        return this.conformancePackInputParameters == null ? Output.empty() : this.conformancePackInputParameters;
    }

    /**
     * Name of the conformance pack which will be assigned as the unique identifier.
     * 
     */
    @Import(name="conformancePackName")
      private final @Nullable Output<String> conformancePackName;

    public Output<String> getConformancePackName() {
        return this.conformancePackName == null ? Output.empty() : this.conformancePackName;
    }

    /**
     * AWS Config stores intermediate files while processing conformance pack template.
     * 
     */
    @Import(name="deliveryS3Bucket")
      private final @Nullable Output<String> deliveryS3Bucket;

    public Output<String> getDeliveryS3Bucket() {
        return this.deliveryS3Bucket == null ? Output.empty() : this.deliveryS3Bucket;
    }

    /**
     * The prefix for delivery S3 bucket.
     * 
     */
    @Import(name="deliveryS3KeyPrefix")
      private final @Nullable Output<String> deliveryS3KeyPrefix;

    public Output<String> getDeliveryS3KeyPrefix() {
        return this.deliveryS3KeyPrefix == null ? Output.empty() : this.deliveryS3KeyPrefix;
    }

    /**
     * A string containing full conformance pack template body. You can only specify one of the template body or template S3Uri fields.
     * 
     */
    @Import(name="templateBody")
      private final @Nullable Output<String> templateBody;

    public Output<String> getTemplateBody() {
        return this.templateBody == null ? Output.empty() : this.templateBody;
    }

    /**
     * Location of file containing the template body which points to the conformance pack template that is located in an Amazon S3 bucket. You can only specify one of the template body or template S3Uri fields.
     * 
     */
    @Import(name="templateS3Uri")
      private final @Nullable Output<String> templateS3Uri;

    public Output<String> getTemplateS3Uri() {
        return this.templateS3Uri == null ? Output.empty() : this.templateS3Uri;
    }

    public ConformancePackArgs(
        @Nullable Output<List<ConformancePackInputParameterArgs>> conformancePackInputParameters,
        @Nullable Output<String> conformancePackName,
        @Nullable Output<String> deliveryS3Bucket,
        @Nullable Output<String> deliveryS3KeyPrefix,
        @Nullable Output<String> templateBody,
        @Nullable Output<String> templateS3Uri) {
        this.conformancePackInputParameters = conformancePackInputParameters;
        this.conformancePackName = conformancePackName;
        this.deliveryS3Bucket = deliveryS3Bucket;
        this.deliveryS3KeyPrefix = deliveryS3KeyPrefix;
        this.templateBody = templateBody;
        this.templateS3Uri = templateS3Uri;
    }

    private ConformancePackArgs() {
        this.conformancePackInputParameters = Output.empty();
        this.conformancePackName = Output.empty();
        this.deliveryS3Bucket = Output.empty();
        this.deliveryS3KeyPrefix = Output.empty();
        this.templateBody = Output.empty();
        this.templateS3Uri = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConformancePackArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ConformancePackInputParameterArgs>> conformancePackInputParameters;
        private @Nullable Output<String> conformancePackName;
        private @Nullable Output<String> deliveryS3Bucket;
        private @Nullable Output<String> deliveryS3KeyPrefix;
        private @Nullable Output<String> templateBody;
        private @Nullable Output<String> templateS3Uri;

        public Builder() {
    	      // Empty
        }

        public Builder(ConformancePackArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conformancePackInputParameters = defaults.conformancePackInputParameters;
    	      this.conformancePackName = defaults.conformancePackName;
    	      this.deliveryS3Bucket = defaults.deliveryS3Bucket;
    	      this.deliveryS3KeyPrefix = defaults.deliveryS3KeyPrefix;
    	      this.templateBody = defaults.templateBody;
    	      this.templateS3Uri = defaults.templateS3Uri;
        }

        public Builder conformancePackInputParameters(@Nullable Output<List<ConformancePackInputParameterArgs>> conformancePackInputParameters) {
            this.conformancePackInputParameters = conformancePackInputParameters;
            return this;
        }

        public Builder conformancePackInputParameters(@Nullable List<ConformancePackInputParameterArgs> conformancePackInputParameters) {
            this.conformancePackInputParameters = Output.ofNullable(conformancePackInputParameters);
            return this;
        }

        public Builder conformancePackName(@Nullable Output<String> conformancePackName) {
            this.conformancePackName = conformancePackName;
            return this;
        }

        public Builder conformancePackName(@Nullable String conformancePackName) {
            this.conformancePackName = Output.ofNullable(conformancePackName);
            return this;
        }

        public Builder deliveryS3Bucket(@Nullable Output<String> deliveryS3Bucket) {
            this.deliveryS3Bucket = deliveryS3Bucket;
            return this;
        }

        public Builder deliveryS3Bucket(@Nullable String deliveryS3Bucket) {
            this.deliveryS3Bucket = Output.ofNullable(deliveryS3Bucket);
            return this;
        }

        public Builder deliveryS3KeyPrefix(@Nullable Output<String> deliveryS3KeyPrefix) {
            this.deliveryS3KeyPrefix = deliveryS3KeyPrefix;
            return this;
        }

        public Builder deliveryS3KeyPrefix(@Nullable String deliveryS3KeyPrefix) {
            this.deliveryS3KeyPrefix = Output.ofNullable(deliveryS3KeyPrefix);
            return this;
        }

        public Builder templateBody(@Nullable Output<String> templateBody) {
            this.templateBody = templateBody;
            return this;
        }

        public Builder templateBody(@Nullable String templateBody) {
            this.templateBody = Output.ofNullable(templateBody);
            return this;
        }

        public Builder templateS3Uri(@Nullable Output<String> templateS3Uri) {
            this.templateS3Uri = templateS3Uri;
            return this;
        }

        public Builder templateS3Uri(@Nullable String templateS3Uri) {
            this.templateS3Uri = Output.ofNullable(templateS3Uri);
            return this;
        }
        public ConformancePackArgs build() {
            return new ConformancePackArgs(conformancePackInputParameters, conformancePackName, deliveryS3Bucket, deliveryS3KeyPrefix, templateBody, templateS3Uri);
        }
    }
}
