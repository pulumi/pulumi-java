// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.inputs.RecipeActionArgs;
import io.pulumi.awsnative.databrew.inputs.RecipeConditionExpressionArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RecipeStepArgs extends io.pulumi.resources.ResourceArgs {

    public static final RecipeStepArgs Empty = new RecipeStepArgs();

    @InputImport(name="action", required=true)
    private final Input<RecipeActionArgs> action;

    public Input<RecipeActionArgs> getAction() {
        return this.action;
    }

    /**
     * Condition expressions applied to the step action
     * 
     */
    @InputImport(name="conditionExpressions")
    private final @Nullable Input<List<RecipeConditionExpressionArgs>> conditionExpressions;

    public Input<List<RecipeConditionExpressionArgs>> getConditionExpressions() {
        return this.conditionExpressions == null ? Input.empty() : this.conditionExpressions;
    }

    public RecipeStepArgs(
        Input<RecipeActionArgs> action,
        @Nullable Input<List<RecipeConditionExpressionArgs>> conditionExpressions) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
        this.conditionExpressions = conditionExpressions;
    }

    private RecipeStepArgs() {
        this.action = Input.empty();
        this.conditionExpressions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecipeStepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<RecipeActionArgs> action;
        private @Nullable Input<List<RecipeConditionExpressionArgs>> conditionExpressions;

        public Builder() {
    	      // Empty
        }

        public Builder(RecipeStepArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.conditionExpressions = defaults.conditionExpressions;
        }

        public Builder setAction(Input<RecipeActionArgs> action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder setAction(RecipeActionArgs action) {
            this.action = Input.of(Objects.requireNonNull(action));
            return this;
        }

        public Builder setConditionExpressions(@Nullable Input<List<RecipeConditionExpressionArgs>> conditionExpressions) {
            this.conditionExpressions = conditionExpressions;
            return this;
        }

        public Builder setConditionExpressions(@Nullable List<RecipeConditionExpressionArgs> conditionExpressions) {
            this.conditionExpressions = Input.ofNullable(conditionExpressions);
            return this;
        }

        public RecipeStepArgs build() {
            return new RecipeStepArgs(action, conditionExpressions);
        }
    }
}
