// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.timestream.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * S3 configuration for location to store rejections from magnetic store writes
 * 
 */
public final class MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationPropertiesS3ConfigurationPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationPropertiesS3ConfigurationPropertiesArgs Empty = new MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationPropertiesS3ConfigurationPropertiesArgs();

    /**
     * The bucket name used to store the data.
     * 
     */
    @Import(name="bucketName", required=true)
      private final Output<String> bucketName;

    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * Either SSE_KMS or SSE_S3.
     * 
     */
    @Import(name="encryptionOption", required=true)
      private final Output<String> encryptionOption;

    public Output<String> encryptionOption() {
        return this.encryptionOption;
    }

    /**
     * Must be provided if SSE_KMS is specified as the encryption option
     * 
     */
    @Import(name="kmsKeyId")
      private final @Nullable Output<String> kmsKeyId;

    public Output<String> kmsKeyId() {
        return this.kmsKeyId == null ? Codegen.empty() : this.kmsKeyId;
    }

    /**
     * String used to prefix all data in the bucket.
     * 
     */
    @Import(name="objectKeyPrefix")
      private final @Nullable Output<String> objectKeyPrefix;

    public Output<String> objectKeyPrefix() {
        return this.objectKeyPrefix == null ? Codegen.empty() : this.objectKeyPrefix;
    }

    public MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationPropertiesS3ConfigurationPropertiesArgs(
        Output<String> bucketName,
        Output<String> encryptionOption,
        @Nullable Output<String> kmsKeyId,
        @Nullable Output<String> objectKeyPrefix) {
        this.bucketName = Objects.requireNonNull(bucketName, "expected parameter 'bucketName' to be non-null");
        this.encryptionOption = Objects.requireNonNull(encryptionOption, "expected parameter 'encryptionOption' to be non-null");
        this.kmsKeyId = kmsKeyId;
        this.objectKeyPrefix = objectKeyPrefix;
    }

    private MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationPropertiesS3ConfigurationPropertiesArgs() {
        this.bucketName = Codegen.empty();
        this.encryptionOption = Codegen.empty();
        this.kmsKeyId = Codegen.empty();
        this.objectKeyPrefix = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationPropertiesS3ConfigurationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> bucketName;
        private Output<String> encryptionOption;
        private @Nullable Output<String> kmsKeyId;
        private @Nullable Output<String> objectKeyPrefix;

        public Builder() {
    	      // Empty
        }

        public Builder(MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationPropertiesS3ConfigurationPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.encryptionOption = defaults.encryptionOption;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.objectKeyPrefix = defaults.objectKeyPrefix;
        }

        public Builder bucketName(Output<String> bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        public Builder bucketName(String bucketName) {
            this.bucketName = Output.of(Objects.requireNonNull(bucketName));
            return this;
        }
        public Builder encryptionOption(Output<String> encryptionOption) {
            this.encryptionOption = Objects.requireNonNull(encryptionOption);
            return this;
        }
        public Builder encryptionOption(String encryptionOption) {
            this.encryptionOption = Output.of(Objects.requireNonNull(encryptionOption));
            return this;
        }
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Codegen.ofNullable(kmsKeyId);
            return this;
        }
        public Builder objectKeyPrefix(@Nullable Output<String> objectKeyPrefix) {
            this.objectKeyPrefix = objectKeyPrefix;
            return this;
        }
        public Builder objectKeyPrefix(@Nullable String objectKeyPrefix) {
            this.objectKeyPrefix = Codegen.ofNullable(objectKeyPrefix);
            return this;
        }        public MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationPropertiesS3ConfigurationPropertiesArgs build() {
            return new MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationPropertiesS3ConfigurationPropertiesArgs(bucketName, encryptionOption, kmsKeyId, objectKeyPrefix);
        }
    }
}
