// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.appflow.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorProfileRedshiftConnectorProfileProperties {
    /**
     * The name of the Amazon S3 bucket associated with Redshift.
     * 
     */
    private final String bucketName;
    /**
     * The object key for the destination bucket in which Amazon AppFlow will place the ﬁles.
     * 
     */
    private final @Nullable String bucketPrefix;
    /**
     * The JDBC URL of the Amazon Redshift cluster.
     * 
     */
    private final String databaseUrl;
    /**
     * The Amazon Resource Name (ARN) of the IAM role.
     * 
     */
    private final String roleArn;

    @CustomType.Constructor
    private ConnectorProfileRedshiftConnectorProfileProperties(
        @CustomType.Parameter("bucketName") String bucketName,
        @CustomType.Parameter("bucketPrefix") @Nullable String bucketPrefix,
        @CustomType.Parameter("databaseUrl") String databaseUrl,
        @CustomType.Parameter("roleArn") String roleArn) {
        this.bucketName = bucketName;
        this.bucketPrefix = bucketPrefix;
        this.databaseUrl = databaseUrl;
        this.roleArn = roleArn;
    }

    /**
     * The name of the Amazon S3 bucket associated with Redshift.
     * 
    */
    public String getBucketName() {
        return this.bucketName;
    }
    /**
     * The object key for the destination bucket in which Amazon AppFlow will place the ﬁles.
     * 
    */
    public Optional<String> getBucketPrefix() {
        return Optional.ofNullable(this.bucketPrefix);
    }
    /**
     * The JDBC URL of the Amazon Redshift cluster.
     * 
    */
    public String getDatabaseUrl() {
        return this.databaseUrl;
    }
    /**
     * The Amazon Resource Name (ARN) of the IAM role.
     * 
    */
    public String getRoleArn() {
        return this.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorProfileRedshiftConnectorProfileProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bucketName;
        private @Nullable String bucketPrefix;
        private String databaseUrl;
        private String roleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectorProfileRedshiftConnectorProfileProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.bucketPrefix = defaults.bucketPrefix;
    	      this.databaseUrl = defaults.databaseUrl;
    	      this.roleArn = defaults.roleArn;
        }

        public Builder bucketName(String bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }

        public Builder bucketPrefix(@Nullable String bucketPrefix) {
            this.bucketPrefix = bucketPrefix;
            return this;
        }

        public Builder databaseUrl(String databaseUrl) {
            this.databaseUrl = Objects.requireNonNull(databaseUrl);
            return this;
        }

        public Builder roleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        public ConnectorProfileRedshiftConnectorProfileProperties build() {
            return new ConnectorProfileRedshiftConnectorProfileProperties(bucketName, bucketPrefix, databaseUrl, roleArn);
        }
    }
}
