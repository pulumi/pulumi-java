// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediapackage.inputs;

import io.pulumi.awsnative.mediapackage.inputs.PackagingConfigurationCmafEncryption;
import io.pulumi.awsnative.mediapackage.inputs.PackagingConfigurationHlsManifest;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A CMAF packaging configuration.
 * 
 */
public final class PackagingConfigurationCmafPackage extends io.pulumi.resources.InvokeArgs {

    public static final PackagingConfigurationCmafPackage Empty = new PackagingConfigurationCmafPackage();

    @InputImport(name="encryption")
    private final @Nullable PackagingConfigurationCmafEncryption encryption;

    public Optional<PackagingConfigurationCmafEncryption> getEncryption() {
        return this.encryption == null ? Optional.empty() : Optional.ofNullable(this.encryption);
    }

    /**
     * A list of HLS manifest configurations.
     * 
     */
    @InputImport(name="hlsManifests", required=true)
    private final List<PackagingConfigurationHlsManifest> hlsManifests;

    public List<PackagingConfigurationHlsManifest> getHlsManifests() {
        return this.hlsManifests;
    }

    /**
     * When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
     * 
     */
    @InputImport(name="includeEncoderConfigurationInSegments")
    private final @Nullable Boolean includeEncoderConfigurationInSegments;

    public Optional<Boolean> getIncludeEncoderConfigurationInSegments() {
        return this.includeEncoderConfigurationInSegments == null ? Optional.empty() : Optional.ofNullable(this.includeEncoderConfigurationInSegments);
    }

    @InputImport(name="segmentDurationSeconds")
    private final @Nullable Integer segmentDurationSeconds;

    public Optional<Integer> getSegmentDurationSeconds() {
        return this.segmentDurationSeconds == null ? Optional.empty() : Optional.ofNullable(this.segmentDurationSeconds);
    }

    public PackagingConfigurationCmafPackage(
        @Nullable PackagingConfigurationCmafEncryption encryption,
        List<PackagingConfigurationHlsManifest> hlsManifests,
        @Nullable Boolean includeEncoderConfigurationInSegments,
        @Nullable Integer segmentDurationSeconds) {
        this.encryption = encryption;
        this.hlsManifests = Objects.requireNonNull(hlsManifests, "expected parameter 'hlsManifests' to be non-null");
        this.includeEncoderConfigurationInSegments = includeEncoderConfigurationInSegments;
        this.segmentDurationSeconds = segmentDurationSeconds;
    }

    private PackagingConfigurationCmafPackage() {
        this.encryption = null;
        this.hlsManifests = List.of();
        this.includeEncoderConfigurationInSegments = null;
        this.segmentDurationSeconds = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PackagingConfigurationCmafPackage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable PackagingConfigurationCmafEncryption encryption;
        private List<PackagingConfigurationHlsManifest> hlsManifests;
        private @Nullable Boolean includeEncoderConfigurationInSegments;
        private @Nullable Integer segmentDurationSeconds;

        public Builder() {
    	      // Empty
        }

        public Builder(PackagingConfigurationCmafPackage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryption = defaults.encryption;
    	      this.hlsManifests = defaults.hlsManifests;
    	      this.includeEncoderConfigurationInSegments = defaults.includeEncoderConfigurationInSegments;
    	      this.segmentDurationSeconds = defaults.segmentDurationSeconds;
        }

        public Builder setEncryption(@Nullable PackagingConfigurationCmafEncryption encryption) {
            this.encryption = encryption;
            return this;
        }

        public Builder setHlsManifests(List<PackagingConfigurationHlsManifest> hlsManifests) {
            this.hlsManifests = Objects.requireNonNull(hlsManifests);
            return this;
        }

        public Builder setIncludeEncoderConfigurationInSegments(@Nullable Boolean includeEncoderConfigurationInSegments) {
            this.includeEncoderConfigurationInSegments = includeEncoderConfigurationInSegments;
            return this;
        }

        public Builder setSegmentDurationSeconds(@Nullable Integer segmentDurationSeconds) {
            this.segmentDurationSeconds = segmentDurationSeconds;
            return this;
        }

        public PackagingConfigurationCmafPackage build() {
            return new PackagingConfigurationCmafPackage(encryption, hlsManifests, includeEncoderConfigurationInSegments, segmentDurationSeconds);
        }
    }
}
