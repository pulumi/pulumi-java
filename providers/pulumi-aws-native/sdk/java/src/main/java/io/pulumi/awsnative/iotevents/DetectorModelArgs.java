// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotevents;

import io.pulumi.awsnative.iotevents.enums.DetectorModelEvaluationMethod;
import io.pulumi.awsnative.iotevents.inputs.DetectorModelDefinitionArgs;
import io.pulumi.awsnative.iotevents.inputs.DetectorModelTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DetectorModelArgs extends io.pulumi.resources.ResourceArgs {

    public static final DetectorModelArgs Empty = new DetectorModelArgs();

    @InputImport(name="detectorModelDefinition", required=true)
      private final Input<DetectorModelDefinitionArgs> detectorModelDefinition;

    public Input<DetectorModelDefinitionArgs> getDetectorModelDefinition() {
        return this.detectorModelDefinition;
    }

    /**
     * A brief description of the detector model.
     * 
     */
    @InputImport(name="detectorModelDescription")
      private final @Nullable Input<String> detectorModelDescription;

    public Input<String> getDetectorModelDescription() {
        return this.detectorModelDescription == null ? Input.empty() : this.detectorModelDescription;
    }

    /**
     * The name of the detector model.
     * 
     */
    @InputImport(name="detectorModelName")
      private final @Nullable Input<String> detectorModelName;

    public Input<String> getDetectorModelName() {
        return this.detectorModelName == null ? Input.empty() : this.detectorModelName;
    }

    /**
     * Information about the order in which events are evaluated and how actions are executed.
     * 
     */
    @InputImport(name="evaluationMethod")
      private final @Nullable Input<DetectorModelEvaluationMethod> evaluationMethod;

    public Input<DetectorModelEvaluationMethod> getEvaluationMethod() {
        return this.evaluationMethod == null ? Input.empty() : this.evaluationMethod;
    }

    /**
     * The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.
     * 
     * This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.
     * 
     */
    @InputImport(name="key")
      private final @Nullable Input<String> key;

    public Input<String> getKey() {
        return this.key == null ? Input.empty() : this.key;
    }

    /**
     * The ARN of the role that grants permission to AWS IoT Events to perform its operations.
     * 
     */
    @InputImport(name="roleArn", required=true)
      private final Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<List<DetectorModelTagArgs>> tags;

    public Input<List<DetectorModelTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public DetectorModelArgs(
        Input<DetectorModelDefinitionArgs> detectorModelDefinition,
        @Nullable Input<String> detectorModelDescription,
        @Nullable Input<String> detectorModelName,
        @Nullable Input<DetectorModelEvaluationMethod> evaluationMethod,
        @Nullable Input<String> key,
        Input<String> roleArn,
        @Nullable Input<List<DetectorModelTagArgs>> tags) {
        this.detectorModelDefinition = Objects.requireNonNull(detectorModelDefinition, "expected parameter 'detectorModelDefinition' to be non-null");
        this.detectorModelDescription = detectorModelDescription;
        this.detectorModelName = detectorModelName;
        this.evaluationMethod = evaluationMethod;
        this.key = key;
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.tags = tags;
    }

    private DetectorModelArgs() {
        this.detectorModelDefinition = Input.empty();
        this.detectorModelDescription = Input.empty();
        this.detectorModelName = Input.empty();
        this.evaluationMethod = Input.empty();
        this.key = Input.empty();
        this.roleArn = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DetectorModelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<DetectorModelDefinitionArgs> detectorModelDefinition;
        private @Nullable Input<String> detectorModelDescription;
        private @Nullable Input<String> detectorModelName;
        private @Nullable Input<DetectorModelEvaluationMethod> evaluationMethod;
        private @Nullable Input<String> key;
        private Input<String> roleArn;
        private @Nullable Input<List<DetectorModelTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DetectorModelArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detectorModelDefinition = defaults.detectorModelDefinition;
    	      this.detectorModelDescription = defaults.detectorModelDescription;
    	      this.detectorModelName = defaults.detectorModelName;
    	      this.evaluationMethod = defaults.evaluationMethod;
    	      this.key = defaults.key;
    	      this.roleArn = defaults.roleArn;
    	      this.tags = defaults.tags;
        }

        public Builder detectorModelDefinition(Input<DetectorModelDefinitionArgs> detectorModelDefinition) {
            this.detectorModelDefinition = Objects.requireNonNull(detectorModelDefinition);
            return this;
        }

        public Builder detectorModelDefinition(DetectorModelDefinitionArgs detectorModelDefinition) {
            this.detectorModelDefinition = Input.of(Objects.requireNonNull(detectorModelDefinition));
            return this;
        }

        public Builder detectorModelDescription(@Nullable Input<String> detectorModelDescription) {
            this.detectorModelDescription = detectorModelDescription;
            return this;
        }

        public Builder detectorModelDescription(@Nullable String detectorModelDescription) {
            this.detectorModelDescription = Input.ofNullable(detectorModelDescription);
            return this;
        }

        public Builder detectorModelName(@Nullable Input<String> detectorModelName) {
            this.detectorModelName = detectorModelName;
            return this;
        }

        public Builder detectorModelName(@Nullable String detectorModelName) {
            this.detectorModelName = Input.ofNullable(detectorModelName);
            return this;
        }

        public Builder evaluationMethod(@Nullable Input<DetectorModelEvaluationMethod> evaluationMethod) {
            this.evaluationMethod = evaluationMethod;
            return this;
        }

        public Builder evaluationMethod(@Nullable DetectorModelEvaluationMethod evaluationMethod) {
            this.evaluationMethod = Input.ofNullable(evaluationMethod);
            return this;
        }

        public Builder key(@Nullable Input<String> key) {
            this.key = key;
            return this;
        }

        public Builder key(@Nullable String key) {
            this.key = Input.ofNullable(key);
            return this;
        }

        public Builder roleArn(Input<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder roleArn(String roleArn) {
            this.roleArn = Input.of(Objects.requireNonNull(roleArn));
            return this;
        }

        public Builder tags(@Nullable Input<List<DetectorModelTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<DetectorModelTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public DetectorModelArgs build() {
            return new DetectorModelArgs(detectorModelDefinition, detectorModelDescription, detectorModelName, evaluationMethod, key, roleArn, tags);
        }
    }
}
