// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.applicationinsights.inputs;

import io.pulumi.awsnative.applicationinsights.enums.ApplicationComponentMonitoringSettingComponentConfigurationMode;
import io.pulumi.awsnative.applicationinsights.inputs.ApplicationComponentConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The monitoring setting of the component.
 * 
 */
public final class ApplicationComponentMonitoringSettingArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApplicationComponentMonitoringSettingArgs Empty = new ApplicationComponentMonitoringSettingArgs();

    /**
     * The ARN of the compnonent.
     * 
     */
    @InputImport(name="componentARN")
    private final @Nullable Input<String> componentARN;

    public Input<String> getComponentARN() {
        return this.componentARN == null ? Input.empty() : this.componentARN;
    }

    /**
     * The component monitoring configuration mode.
     * 
     */
    @InputImport(name="componentConfigurationMode", required=true)
    private final Input<ApplicationComponentMonitoringSettingComponentConfigurationMode> componentConfigurationMode;

    public Input<ApplicationComponentMonitoringSettingComponentConfigurationMode> getComponentConfigurationMode() {
        return this.componentConfigurationMode;
    }

    /**
     * The name of the component.
     * 
     */
    @InputImport(name="componentName")
    private final @Nullable Input<String> componentName;

    public Input<String> getComponentName() {
        return this.componentName == null ? Input.empty() : this.componentName;
    }

    /**
     * The monitoring configuration of the component.
     * 
     */
    @InputImport(name="customComponentConfiguration")
    private final @Nullable Input<ApplicationComponentConfigurationArgs> customComponentConfiguration;

    public Input<ApplicationComponentConfigurationArgs> getCustomComponentConfiguration() {
        return this.customComponentConfiguration == null ? Input.empty() : this.customComponentConfiguration;
    }

    /**
     * The overwritten settings on default component monitoring configuration.
     * 
     */
    @InputImport(name="defaultOverwriteComponentConfiguration")
    private final @Nullable Input<ApplicationComponentConfigurationArgs> defaultOverwriteComponentConfiguration;

    public Input<ApplicationComponentConfigurationArgs> getDefaultOverwriteComponentConfiguration() {
        return this.defaultOverwriteComponentConfiguration == null ? Input.empty() : this.defaultOverwriteComponentConfiguration;
    }

    /**
     * The tier of the application component.
     * 
     */
    @InputImport(name="tier", required=true)
    private final Input<String> tier;

    public Input<String> getTier() {
        return this.tier;
    }

    public ApplicationComponentMonitoringSettingArgs(
        @Nullable Input<String> componentARN,
        Input<ApplicationComponentMonitoringSettingComponentConfigurationMode> componentConfigurationMode,
        @Nullable Input<String> componentName,
        @Nullable Input<ApplicationComponentConfigurationArgs> customComponentConfiguration,
        @Nullable Input<ApplicationComponentConfigurationArgs> defaultOverwriteComponentConfiguration,
        Input<String> tier) {
        this.componentARN = componentARN;
        this.componentConfigurationMode = Objects.requireNonNull(componentConfigurationMode, "expected parameter 'componentConfigurationMode' to be non-null");
        this.componentName = componentName;
        this.customComponentConfiguration = customComponentConfiguration;
        this.defaultOverwriteComponentConfiguration = defaultOverwriteComponentConfiguration;
        this.tier = Objects.requireNonNull(tier, "expected parameter 'tier' to be non-null");
    }

    private ApplicationComponentMonitoringSettingArgs() {
        this.componentARN = Input.empty();
        this.componentConfigurationMode = Input.empty();
        this.componentName = Input.empty();
        this.customComponentConfiguration = Input.empty();
        this.defaultOverwriteComponentConfiguration = Input.empty();
        this.tier = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationComponentMonitoringSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> componentARN;
        private Input<ApplicationComponentMonitoringSettingComponentConfigurationMode> componentConfigurationMode;
        private @Nullable Input<String> componentName;
        private @Nullable Input<ApplicationComponentConfigurationArgs> customComponentConfiguration;
        private @Nullable Input<ApplicationComponentConfigurationArgs> defaultOverwriteComponentConfiguration;
        private Input<String> tier;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationComponentMonitoringSettingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.componentARN = defaults.componentARN;
    	      this.componentConfigurationMode = defaults.componentConfigurationMode;
    	      this.componentName = defaults.componentName;
    	      this.customComponentConfiguration = defaults.customComponentConfiguration;
    	      this.defaultOverwriteComponentConfiguration = defaults.defaultOverwriteComponentConfiguration;
    	      this.tier = defaults.tier;
        }

        public Builder setComponentARN(@Nullable Input<String> componentARN) {
            this.componentARN = componentARN;
            return this;
        }

        public Builder setComponentARN(@Nullable String componentARN) {
            this.componentARN = Input.ofNullable(componentARN);
            return this;
        }

        public Builder setComponentConfigurationMode(Input<ApplicationComponentMonitoringSettingComponentConfigurationMode> componentConfigurationMode) {
            this.componentConfigurationMode = Objects.requireNonNull(componentConfigurationMode);
            return this;
        }

        public Builder setComponentConfigurationMode(ApplicationComponentMonitoringSettingComponentConfigurationMode componentConfigurationMode) {
            this.componentConfigurationMode = Input.of(Objects.requireNonNull(componentConfigurationMode));
            return this;
        }

        public Builder setComponentName(@Nullable Input<String> componentName) {
            this.componentName = componentName;
            return this;
        }

        public Builder setComponentName(@Nullable String componentName) {
            this.componentName = Input.ofNullable(componentName);
            return this;
        }

        public Builder setCustomComponentConfiguration(@Nullable Input<ApplicationComponentConfigurationArgs> customComponentConfiguration) {
            this.customComponentConfiguration = customComponentConfiguration;
            return this;
        }

        public Builder setCustomComponentConfiguration(@Nullable ApplicationComponentConfigurationArgs customComponentConfiguration) {
            this.customComponentConfiguration = Input.ofNullable(customComponentConfiguration);
            return this;
        }

        public Builder setDefaultOverwriteComponentConfiguration(@Nullable Input<ApplicationComponentConfigurationArgs> defaultOverwriteComponentConfiguration) {
            this.defaultOverwriteComponentConfiguration = defaultOverwriteComponentConfiguration;
            return this;
        }

        public Builder setDefaultOverwriteComponentConfiguration(@Nullable ApplicationComponentConfigurationArgs defaultOverwriteComponentConfiguration) {
            this.defaultOverwriteComponentConfiguration = Input.ofNullable(defaultOverwriteComponentConfiguration);
            return this;
        }

        public Builder setTier(Input<String> tier) {
            this.tier = Objects.requireNonNull(tier);
            return this;
        }

        public Builder setTier(String tier) {
            this.tier = Input.of(Objects.requireNonNull(tier));
            return this;
        }

        public ApplicationComponentMonitoringSettingArgs build() {
            return new ApplicationComponentMonitoringSettingArgs(componentARN, componentConfigurationMode, componentName, customComponentConfiguration, defaultOverwriteComponentConfiguration, tier);
        }
    }
}
