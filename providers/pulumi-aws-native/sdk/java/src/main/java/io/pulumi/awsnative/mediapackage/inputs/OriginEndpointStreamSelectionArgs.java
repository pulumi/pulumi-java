// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediapackage.inputs;

import io.pulumi.awsnative.mediapackage.enums.OriginEndpointStreamSelectionStreamOrder;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A StreamSelection configuration.
 * 
 */
public final class OriginEndpointStreamSelectionArgs extends io.pulumi.resources.ResourceArgs {

    public static final OriginEndpointStreamSelectionArgs Empty = new OriginEndpointStreamSelectionArgs();

    /**
     * The maximum video bitrate (bps) to include in output.
     * 
     */
    @Import(name="maxVideoBitsPerSecond")
      private final @Nullable Output<Integer> maxVideoBitsPerSecond;

    public Output<Integer> getMaxVideoBitsPerSecond() {
        return this.maxVideoBitsPerSecond == null ? Output.empty() : this.maxVideoBitsPerSecond;
    }

    /**
     * The minimum video bitrate (bps) to include in output.
     * 
     */
    @Import(name="minVideoBitsPerSecond")
      private final @Nullable Output<Integer> minVideoBitsPerSecond;

    public Output<Integer> getMinVideoBitsPerSecond() {
        return this.minVideoBitsPerSecond == null ? Output.empty() : this.minVideoBitsPerSecond;
    }

    /**
     * A directive that determines the order of streams in the output.
     * 
     */
    @Import(name="streamOrder")
      private final @Nullable Output<OriginEndpointStreamSelectionStreamOrder> streamOrder;

    public Output<OriginEndpointStreamSelectionStreamOrder> getStreamOrder() {
        return this.streamOrder == null ? Output.empty() : this.streamOrder;
    }

    public OriginEndpointStreamSelectionArgs(
        @Nullable Output<Integer> maxVideoBitsPerSecond,
        @Nullable Output<Integer> minVideoBitsPerSecond,
        @Nullable Output<OriginEndpointStreamSelectionStreamOrder> streamOrder) {
        this.maxVideoBitsPerSecond = maxVideoBitsPerSecond;
        this.minVideoBitsPerSecond = minVideoBitsPerSecond;
        this.streamOrder = streamOrder;
    }

    private OriginEndpointStreamSelectionArgs() {
        this.maxVideoBitsPerSecond = Output.empty();
        this.minVideoBitsPerSecond = Output.empty();
        this.streamOrder = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OriginEndpointStreamSelectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> maxVideoBitsPerSecond;
        private @Nullable Output<Integer> minVideoBitsPerSecond;
        private @Nullable Output<OriginEndpointStreamSelectionStreamOrder> streamOrder;

        public Builder() {
    	      // Empty
        }

        public Builder(OriginEndpointStreamSelectionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxVideoBitsPerSecond = defaults.maxVideoBitsPerSecond;
    	      this.minVideoBitsPerSecond = defaults.minVideoBitsPerSecond;
    	      this.streamOrder = defaults.streamOrder;
        }

        public Builder maxVideoBitsPerSecond(@Nullable Output<Integer> maxVideoBitsPerSecond) {
            this.maxVideoBitsPerSecond = maxVideoBitsPerSecond;
            return this;
        }

        public Builder maxVideoBitsPerSecond(@Nullable Integer maxVideoBitsPerSecond) {
            this.maxVideoBitsPerSecond = Output.ofNullable(maxVideoBitsPerSecond);
            return this;
        }

        public Builder minVideoBitsPerSecond(@Nullable Output<Integer> minVideoBitsPerSecond) {
            this.minVideoBitsPerSecond = minVideoBitsPerSecond;
            return this;
        }

        public Builder minVideoBitsPerSecond(@Nullable Integer minVideoBitsPerSecond) {
            this.minVideoBitsPerSecond = Output.ofNullable(minVideoBitsPerSecond);
            return this;
        }

        public Builder streamOrder(@Nullable Output<OriginEndpointStreamSelectionStreamOrder> streamOrder) {
            this.streamOrder = streamOrder;
            return this;
        }

        public Builder streamOrder(@Nullable OriginEndpointStreamSelectionStreamOrder streamOrder) {
            this.streamOrder = Output.ofNullable(streamOrder);
            return this;
        }
        public OriginEndpointStreamSelectionArgs build() {
            return new OriginEndpointStreamSelectionArgs(maxVideoBitsPerSecond, minVideoBitsPerSecond, streamOrder);
        }
    }
}
