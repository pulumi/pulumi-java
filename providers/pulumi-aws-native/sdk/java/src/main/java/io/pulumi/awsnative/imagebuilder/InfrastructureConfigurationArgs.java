// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.imagebuilder;

import io.pulumi.awsnative.imagebuilder.inputs.InfrastructureConfigurationInstanceMetadataOptionsArgs;
import io.pulumi.awsnative.imagebuilder.inputs.InfrastructureConfigurationLoggingArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InfrastructureConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final InfrastructureConfigurationArgs Empty = new InfrastructureConfigurationArgs();

    /**
     * The description of the infrastructure configuration.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The instance metadata option settings for the infrastructure configuration.
     * 
     */
    @InputImport(name="instanceMetadataOptions")
    private final @Nullable Input<InfrastructureConfigurationInstanceMetadataOptionsArgs> instanceMetadataOptions;

    public Input<InfrastructureConfigurationInstanceMetadataOptionsArgs> getInstanceMetadataOptions() {
        return this.instanceMetadataOptions == null ? Input.empty() : this.instanceMetadataOptions;
    }

    /**
     * The instance profile of the infrastructure configuration.
     * 
     */
    @InputImport(name="instanceProfileName", required=true)
    private final Input<String> instanceProfileName;

    public Input<String> getInstanceProfileName() {
        return this.instanceProfileName;
    }

    /**
     * The instance types of the infrastructure configuration.
     * 
     */
    @InputImport(name="instanceTypes")
    private final @Nullable Input<List<String>> instanceTypes;

    public Input<List<String>> getInstanceTypes() {
        return this.instanceTypes == null ? Input.empty() : this.instanceTypes;
    }

    /**
     * The EC2 key pair of the infrastructure configuration..
     * 
     */
    @InputImport(name="keyPair")
    private final @Nullable Input<String> keyPair;

    public Input<String> getKeyPair() {
        return this.keyPair == null ? Input.empty() : this.keyPair;
    }

    /**
     * The logging configuration of the infrastructure configuration.
     * 
     */
    @InputImport(name="logging")
    private final @Nullable Input<InfrastructureConfigurationLoggingArgs> logging;

    public Input<InfrastructureConfigurationLoggingArgs> getLogging() {
        return this.logging == null ? Input.empty() : this.logging;
    }

    /**
     * The name of the infrastructure configuration.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The tags attached to the resource created by Image Builder.
     * 
     */
    @InputImport(name="resourceTags")
    private final @Nullable Input<Object> resourceTags;

    public Input<Object> getResourceTags() {
        return this.resourceTags == null ? Input.empty() : this.resourceTags;
    }

    /**
     * The security group IDs of the infrastructure configuration.
     * 
     */
    @InputImport(name="securityGroupIds")
    private final @Nullable Input<List<String>> securityGroupIds;

    public Input<List<String>> getSecurityGroupIds() {
        return this.securityGroupIds == null ? Input.empty() : this.securityGroupIds;
    }

    /**
     * The SNS Topic Amazon Resource Name (ARN) of the infrastructure configuration.
     * 
     */
    @InputImport(name="snsTopicArn")
    private final @Nullable Input<String> snsTopicArn;

    public Input<String> getSnsTopicArn() {
        return this.snsTopicArn == null ? Input.empty() : this.snsTopicArn;
    }

    /**
     * The subnet ID of the infrastructure configuration.
     * 
     */
    @InputImport(name="subnetId")
    private final @Nullable Input<String> subnetId;

    public Input<String> getSubnetId() {
        return this.subnetId == null ? Input.empty() : this.subnetId;
    }

    /**
     * The tags associated with the component.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Object> tags;

    public Input<Object> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The terminate instance on failure configuration of the infrastructure configuration.
     * 
     */
    @InputImport(name="terminateInstanceOnFailure")
    private final @Nullable Input<Boolean> terminateInstanceOnFailure;

    public Input<Boolean> getTerminateInstanceOnFailure() {
        return this.terminateInstanceOnFailure == null ? Input.empty() : this.terminateInstanceOnFailure;
    }

    public InfrastructureConfigurationArgs(
        @Nullable Input<String> description,
        @Nullable Input<InfrastructureConfigurationInstanceMetadataOptionsArgs> instanceMetadataOptions,
        Input<String> instanceProfileName,
        @Nullable Input<List<String>> instanceTypes,
        @Nullable Input<String> keyPair,
        @Nullable Input<InfrastructureConfigurationLoggingArgs> logging,
        @Nullable Input<String> name,
        @Nullable Input<Object> resourceTags,
        @Nullable Input<List<String>> securityGroupIds,
        @Nullable Input<String> snsTopicArn,
        @Nullable Input<String> subnetId,
        @Nullable Input<Object> tags,
        @Nullable Input<Boolean> terminateInstanceOnFailure) {
        this.description = description;
        this.instanceMetadataOptions = instanceMetadataOptions;
        this.instanceProfileName = Objects.requireNonNull(instanceProfileName, "expected parameter 'instanceProfileName' to be non-null");
        this.instanceTypes = instanceTypes;
        this.keyPair = keyPair;
        this.logging = logging;
        this.name = name;
        this.resourceTags = resourceTags;
        this.securityGroupIds = securityGroupIds;
        this.snsTopicArn = snsTopicArn;
        this.subnetId = subnetId;
        this.tags = tags;
        this.terminateInstanceOnFailure = terminateInstanceOnFailure;
    }

    private InfrastructureConfigurationArgs() {
        this.description = Input.empty();
        this.instanceMetadataOptions = Input.empty();
        this.instanceProfileName = Input.empty();
        this.instanceTypes = Input.empty();
        this.keyPair = Input.empty();
        this.logging = Input.empty();
        this.name = Input.empty();
        this.resourceTags = Input.empty();
        this.securityGroupIds = Input.empty();
        this.snsTopicArn = Input.empty();
        this.subnetId = Input.empty();
        this.tags = Input.empty();
        this.terminateInstanceOnFailure = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InfrastructureConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<InfrastructureConfigurationInstanceMetadataOptionsArgs> instanceMetadataOptions;
        private Input<String> instanceProfileName;
        private @Nullable Input<List<String>> instanceTypes;
        private @Nullable Input<String> keyPair;
        private @Nullable Input<InfrastructureConfigurationLoggingArgs> logging;
        private @Nullable Input<String> name;
        private @Nullable Input<Object> resourceTags;
        private @Nullable Input<List<String>> securityGroupIds;
        private @Nullable Input<String> snsTopicArn;
        private @Nullable Input<String> subnetId;
        private @Nullable Input<Object> tags;
        private @Nullable Input<Boolean> terminateInstanceOnFailure;

        public Builder() {
    	      // Empty
        }

        public Builder(InfrastructureConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.instanceMetadataOptions = defaults.instanceMetadataOptions;
    	      this.instanceProfileName = defaults.instanceProfileName;
    	      this.instanceTypes = defaults.instanceTypes;
    	      this.keyPair = defaults.keyPair;
    	      this.logging = defaults.logging;
    	      this.name = defaults.name;
    	      this.resourceTags = defaults.resourceTags;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.snsTopicArn = defaults.snsTopicArn;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.terminateInstanceOnFailure = defaults.terminateInstanceOnFailure;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setInstanceMetadataOptions(@Nullable Input<InfrastructureConfigurationInstanceMetadataOptionsArgs> instanceMetadataOptions) {
            this.instanceMetadataOptions = instanceMetadataOptions;
            return this;
        }

        public Builder setInstanceMetadataOptions(@Nullable InfrastructureConfigurationInstanceMetadataOptionsArgs instanceMetadataOptions) {
            this.instanceMetadataOptions = Input.ofNullable(instanceMetadataOptions);
            return this;
        }

        public Builder setInstanceProfileName(Input<String> instanceProfileName) {
            this.instanceProfileName = Objects.requireNonNull(instanceProfileName);
            return this;
        }

        public Builder setInstanceProfileName(String instanceProfileName) {
            this.instanceProfileName = Input.of(Objects.requireNonNull(instanceProfileName));
            return this;
        }

        public Builder setInstanceTypes(@Nullable Input<List<String>> instanceTypes) {
            this.instanceTypes = instanceTypes;
            return this;
        }

        public Builder setInstanceTypes(@Nullable List<String> instanceTypes) {
            this.instanceTypes = Input.ofNullable(instanceTypes);
            return this;
        }

        public Builder setKeyPair(@Nullable Input<String> keyPair) {
            this.keyPair = keyPair;
            return this;
        }

        public Builder setKeyPair(@Nullable String keyPair) {
            this.keyPair = Input.ofNullable(keyPair);
            return this;
        }

        public Builder setLogging(@Nullable Input<InfrastructureConfigurationLoggingArgs> logging) {
            this.logging = logging;
            return this;
        }

        public Builder setLogging(@Nullable InfrastructureConfigurationLoggingArgs logging) {
            this.logging = Input.ofNullable(logging);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setResourceTags(@Nullable Input<Object> resourceTags) {
            this.resourceTags = resourceTags;
            return this;
        }

        public Builder setResourceTags(@Nullable Object resourceTags) {
            this.resourceTags = Input.ofNullable(resourceTags);
            return this;
        }

        public Builder setSecurityGroupIds(@Nullable Input<List<String>> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder setSecurityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = Input.ofNullable(securityGroupIds);
            return this;
        }

        public Builder setSnsTopicArn(@Nullable Input<String> snsTopicArn) {
            this.snsTopicArn = snsTopicArn;
            return this;
        }

        public Builder setSnsTopicArn(@Nullable String snsTopicArn) {
            this.snsTopicArn = Input.ofNullable(snsTopicArn);
            return this;
        }

        public Builder setSubnetId(@Nullable Input<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }

        public Builder setSubnetId(@Nullable String subnetId) {
            this.subnetId = Input.ofNullable(subnetId);
            return this;
        }

        public Builder setTags(@Nullable Input<Object> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Object tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTerminateInstanceOnFailure(@Nullable Input<Boolean> terminateInstanceOnFailure) {
            this.terminateInstanceOnFailure = terminateInstanceOnFailure;
            return this;
        }

        public Builder setTerminateInstanceOnFailure(@Nullable Boolean terminateInstanceOnFailure) {
            this.terminateInstanceOnFailure = Input.ofNullable(terminateInstanceOnFailure);
            return this;
        }

        public InfrastructureConfigurationArgs build() {
            return new InfrastructureConfigurationArgs(description, instanceMetadataOptions, instanceProfileName, instanceTypes, keyPair, logging, name, resourceTags, securityGroupIds, snsTopicArn, subnetId, tags, terminateInstanceOnFailure);
        }
    }
}
