// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kendra.inputs;

import io.pulumi.awsnative.kendra.inputs.DataSourceProxyConfigurationArgs;
import io.pulumi.awsnative.kendra.inputs.DataSourceWebCrawlerAuthenticationConfigurationArgs;
import io.pulumi.awsnative.kendra.inputs.DataSourceWebCrawlerUrlsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DataSourceWebCrawlerConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataSourceWebCrawlerConfigurationArgs Empty = new DataSourceWebCrawlerConfigurationArgs();

    @InputImport(name="authenticationConfiguration")
    private final @Nullable Input<DataSourceWebCrawlerAuthenticationConfigurationArgs> authenticationConfiguration;

    public Input<DataSourceWebCrawlerAuthenticationConfigurationArgs> getAuthenticationConfiguration() {
        return this.authenticationConfiguration == null ? Input.empty() : this.authenticationConfiguration;
    }

    @InputImport(name="crawlDepth")
    private final @Nullable Input<Integer> crawlDepth;

    public Input<Integer> getCrawlDepth() {
        return this.crawlDepth == null ? Input.empty() : this.crawlDepth;
    }

    @InputImport(name="maxContentSizePerPageInMegaBytes")
    private final @Nullable Input<Double> maxContentSizePerPageInMegaBytes;

    public Input<Double> getMaxContentSizePerPageInMegaBytes() {
        return this.maxContentSizePerPageInMegaBytes == null ? Input.empty() : this.maxContentSizePerPageInMegaBytes;
    }

    @InputImport(name="maxLinksPerPage")
    private final @Nullable Input<Integer> maxLinksPerPage;

    public Input<Integer> getMaxLinksPerPage() {
        return this.maxLinksPerPage == null ? Input.empty() : this.maxLinksPerPage;
    }

    @InputImport(name="maxUrlsPerMinuteCrawlRate")
    private final @Nullable Input<Integer> maxUrlsPerMinuteCrawlRate;

    public Input<Integer> getMaxUrlsPerMinuteCrawlRate() {
        return this.maxUrlsPerMinuteCrawlRate == null ? Input.empty() : this.maxUrlsPerMinuteCrawlRate;
    }

    @InputImport(name="proxyConfiguration")
    private final @Nullable Input<DataSourceProxyConfigurationArgs> proxyConfiguration;

    public Input<DataSourceProxyConfigurationArgs> getProxyConfiguration() {
        return this.proxyConfiguration == null ? Input.empty() : this.proxyConfiguration;
    }

    @InputImport(name="urlExclusionPatterns")
    private final @Nullable Input<List<String>> urlExclusionPatterns;

    public Input<List<String>> getUrlExclusionPatterns() {
        return this.urlExclusionPatterns == null ? Input.empty() : this.urlExclusionPatterns;
    }

    @InputImport(name="urlInclusionPatterns")
    private final @Nullable Input<List<String>> urlInclusionPatterns;

    public Input<List<String>> getUrlInclusionPatterns() {
        return this.urlInclusionPatterns == null ? Input.empty() : this.urlInclusionPatterns;
    }

    @InputImport(name="urls", required=true)
    private final Input<DataSourceWebCrawlerUrlsArgs> urls;

    public Input<DataSourceWebCrawlerUrlsArgs> getUrls() {
        return this.urls;
    }

    public DataSourceWebCrawlerConfigurationArgs(
        @Nullable Input<DataSourceWebCrawlerAuthenticationConfigurationArgs> authenticationConfiguration,
        @Nullable Input<Integer> crawlDepth,
        @Nullable Input<Double> maxContentSizePerPageInMegaBytes,
        @Nullable Input<Integer> maxLinksPerPage,
        @Nullable Input<Integer> maxUrlsPerMinuteCrawlRate,
        @Nullable Input<DataSourceProxyConfigurationArgs> proxyConfiguration,
        @Nullable Input<List<String>> urlExclusionPatterns,
        @Nullable Input<List<String>> urlInclusionPatterns,
        Input<DataSourceWebCrawlerUrlsArgs> urls) {
        this.authenticationConfiguration = authenticationConfiguration;
        this.crawlDepth = crawlDepth;
        this.maxContentSizePerPageInMegaBytes = maxContentSizePerPageInMegaBytes;
        this.maxLinksPerPage = maxLinksPerPage;
        this.maxUrlsPerMinuteCrawlRate = maxUrlsPerMinuteCrawlRate;
        this.proxyConfiguration = proxyConfiguration;
        this.urlExclusionPatterns = urlExclusionPatterns;
        this.urlInclusionPatterns = urlInclusionPatterns;
        this.urls = Objects.requireNonNull(urls, "expected parameter 'urls' to be non-null");
    }

    private DataSourceWebCrawlerConfigurationArgs() {
        this.authenticationConfiguration = Input.empty();
        this.crawlDepth = Input.empty();
        this.maxContentSizePerPageInMegaBytes = Input.empty();
        this.maxLinksPerPage = Input.empty();
        this.maxUrlsPerMinuteCrawlRate = Input.empty();
        this.proxyConfiguration = Input.empty();
        this.urlExclusionPatterns = Input.empty();
        this.urlInclusionPatterns = Input.empty();
        this.urls = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceWebCrawlerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DataSourceWebCrawlerAuthenticationConfigurationArgs> authenticationConfiguration;
        private @Nullable Input<Integer> crawlDepth;
        private @Nullable Input<Double> maxContentSizePerPageInMegaBytes;
        private @Nullable Input<Integer> maxLinksPerPage;
        private @Nullable Input<Integer> maxUrlsPerMinuteCrawlRate;
        private @Nullable Input<DataSourceProxyConfigurationArgs> proxyConfiguration;
        private @Nullable Input<List<String>> urlExclusionPatterns;
        private @Nullable Input<List<String>> urlInclusionPatterns;
        private Input<DataSourceWebCrawlerUrlsArgs> urls;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceWebCrawlerConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationConfiguration = defaults.authenticationConfiguration;
    	      this.crawlDepth = defaults.crawlDepth;
    	      this.maxContentSizePerPageInMegaBytes = defaults.maxContentSizePerPageInMegaBytes;
    	      this.maxLinksPerPage = defaults.maxLinksPerPage;
    	      this.maxUrlsPerMinuteCrawlRate = defaults.maxUrlsPerMinuteCrawlRate;
    	      this.proxyConfiguration = defaults.proxyConfiguration;
    	      this.urlExclusionPatterns = defaults.urlExclusionPatterns;
    	      this.urlInclusionPatterns = defaults.urlInclusionPatterns;
    	      this.urls = defaults.urls;
        }

        public Builder setAuthenticationConfiguration(@Nullable Input<DataSourceWebCrawlerAuthenticationConfigurationArgs> authenticationConfiguration) {
            this.authenticationConfiguration = authenticationConfiguration;
            return this;
        }

        public Builder setAuthenticationConfiguration(@Nullable DataSourceWebCrawlerAuthenticationConfigurationArgs authenticationConfiguration) {
            this.authenticationConfiguration = Input.ofNullable(authenticationConfiguration);
            return this;
        }

        public Builder setCrawlDepth(@Nullable Input<Integer> crawlDepth) {
            this.crawlDepth = crawlDepth;
            return this;
        }

        public Builder setCrawlDepth(@Nullable Integer crawlDepth) {
            this.crawlDepth = Input.ofNullable(crawlDepth);
            return this;
        }

        public Builder setMaxContentSizePerPageInMegaBytes(@Nullable Input<Double> maxContentSizePerPageInMegaBytes) {
            this.maxContentSizePerPageInMegaBytes = maxContentSizePerPageInMegaBytes;
            return this;
        }

        public Builder setMaxContentSizePerPageInMegaBytes(@Nullable Double maxContentSizePerPageInMegaBytes) {
            this.maxContentSizePerPageInMegaBytes = Input.ofNullable(maxContentSizePerPageInMegaBytes);
            return this;
        }

        public Builder setMaxLinksPerPage(@Nullable Input<Integer> maxLinksPerPage) {
            this.maxLinksPerPage = maxLinksPerPage;
            return this;
        }

        public Builder setMaxLinksPerPage(@Nullable Integer maxLinksPerPage) {
            this.maxLinksPerPage = Input.ofNullable(maxLinksPerPage);
            return this;
        }

        public Builder setMaxUrlsPerMinuteCrawlRate(@Nullable Input<Integer> maxUrlsPerMinuteCrawlRate) {
            this.maxUrlsPerMinuteCrawlRate = maxUrlsPerMinuteCrawlRate;
            return this;
        }

        public Builder setMaxUrlsPerMinuteCrawlRate(@Nullable Integer maxUrlsPerMinuteCrawlRate) {
            this.maxUrlsPerMinuteCrawlRate = Input.ofNullable(maxUrlsPerMinuteCrawlRate);
            return this;
        }

        public Builder setProxyConfiguration(@Nullable Input<DataSourceProxyConfigurationArgs> proxyConfiguration) {
            this.proxyConfiguration = proxyConfiguration;
            return this;
        }

        public Builder setProxyConfiguration(@Nullable DataSourceProxyConfigurationArgs proxyConfiguration) {
            this.proxyConfiguration = Input.ofNullable(proxyConfiguration);
            return this;
        }

        public Builder setUrlExclusionPatterns(@Nullable Input<List<String>> urlExclusionPatterns) {
            this.urlExclusionPatterns = urlExclusionPatterns;
            return this;
        }

        public Builder setUrlExclusionPatterns(@Nullable List<String> urlExclusionPatterns) {
            this.urlExclusionPatterns = Input.ofNullable(urlExclusionPatterns);
            return this;
        }

        public Builder setUrlInclusionPatterns(@Nullable Input<List<String>> urlInclusionPatterns) {
            this.urlInclusionPatterns = urlInclusionPatterns;
            return this;
        }

        public Builder setUrlInclusionPatterns(@Nullable List<String> urlInclusionPatterns) {
            this.urlInclusionPatterns = Input.ofNullable(urlInclusionPatterns);
            return this;
        }

        public Builder setUrls(Input<DataSourceWebCrawlerUrlsArgs> urls) {
            this.urls = Objects.requireNonNull(urls);
            return this;
        }

        public Builder setUrls(DataSourceWebCrawlerUrlsArgs urls) {
            this.urls = Input.of(Objects.requireNonNull(urls));
            return this;
        }

        public DataSourceWebCrawlerConfigurationArgs build() {
            return new DataSourceWebCrawlerConfigurationArgs(authenticationConfiguration, crawlDepth, maxContentSizePerPageInMegaBytes, maxLinksPerPage, maxUrlsPerMinuteCrawlRate, proxyConfiguration, urlExclusionPatterns, urlInclusionPatterns, urls);
        }
    }
}
