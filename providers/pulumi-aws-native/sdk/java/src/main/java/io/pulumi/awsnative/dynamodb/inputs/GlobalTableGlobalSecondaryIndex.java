// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.dynamodb.inputs;

import io.pulumi.awsnative.dynamodb.inputs.GlobalTableKeySchema;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableProjection;
import io.pulumi.awsnative.dynamodb.inputs.GlobalTableWriteProvisionedThroughputSettings;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalTableGlobalSecondaryIndex extends io.pulumi.resources.InvokeArgs {

    public static final GlobalTableGlobalSecondaryIndex Empty = new GlobalTableGlobalSecondaryIndex();

    @Import(name="indexName", required=true)
      private final String indexName;

    public String indexName() {
        return this.indexName;
    }

    @Import(name="keySchema", required=true)
      private final List<GlobalTableKeySchema> keySchema;

    public List<GlobalTableKeySchema> keySchema() {
        return this.keySchema;
    }

    @Import(name="projection", required=true)
      private final GlobalTableProjection projection;

    public GlobalTableProjection projection() {
        return this.projection;
    }

    @Import(name="writeProvisionedThroughputSettings")
      private final @Nullable GlobalTableWriteProvisionedThroughputSettings writeProvisionedThroughputSettings;

    public Optional<GlobalTableWriteProvisionedThroughputSettings> writeProvisionedThroughputSettings() {
        return this.writeProvisionedThroughputSettings == null ? Optional.empty() : Optional.ofNullable(this.writeProvisionedThroughputSettings);
    }

    public GlobalTableGlobalSecondaryIndex(
        String indexName,
        List<GlobalTableKeySchema> keySchema,
        GlobalTableProjection projection,
        @Nullable GlobalTableWriteProvisionedThroughputSettings writeProvisionedThroughputSettings) {
        this.indexName = Objects.requireNonNull(indexName, "expected parameter 'indexName' to be non-null");
        this.keySchema = Objects.requireNonNull(keySchema, "expected parameter 'keySchema' to be non-null");
        this.projection = Objects.requireNonNull(projection, "expected parameter 'projection' to be non-null");
        this.writeProvisionedThroughputSettings = writeProvisionedThroughputSettings;
    }

    private GlobalTableGlobalSecondaryIndex() {
        this.indexName = null;
        this.keySchema = List.of();
        this.projection = null;
        this.writeProvisionedThroughputSettings = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GlobalTableGlobalSecondaryIndex defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String indexName;
        private List<GlobalTableKeySchema> keySchema;
        private GlobalTableProjection projection;
        private @Nullable GlobalTableWriteProvisionedThroughputSettings writeProvisionedThroughputSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(GlobalTableGlobalSecondaryIndex defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.indexName = defaults.indexName;
    	      this.keySchema = defaults.keySchema;
    	      this.projection = defaults.projection;
    	      this.writeProvisionedThroughputSettings = defaults.writeProvisionedThroughputSettings;
        }

        public Builder indexName(String indexName) {
            this.indexName = Objects.requireNonNull(indexName);
            return this;
        }
        public Builder keySchema(List<GlobalTableKeySchema> keySchema) {
            this.keySchema = Objects.requireNonNull(keySchema);
            return this;
        }
        public Builder keySchema(GlobalTableKeySchema... keySchema) {
            return keySchema(List.of(keySchema));
        }
        public Builder projection(GlobalTableProjection projection) {
            this.projection = Objects.requireNonNull(projection);
            return this;
        }
        public Builder writeProvisionedThroughputSettings(@Nullable GlobalTableWriteProvisionedThroughputSettings writeProvisionedThroughputSettings) {
            this.writeProvisionedThroughputSettings = writeProvisionedThroughputSettings;
            return this;
        }        public GlobalTableGlobalSecondaryIndex build() {
            return new GlobalTableGlobalSecondaryIndex(indexName, keySchema, projection, writeProvisionedThroughputSettings);
        }
    }
}
