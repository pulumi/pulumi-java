// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.appflow.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConnectorProfileSnowflakeConnectorProfilePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConnectorProfileSnowflakeConnectorProfilePropertiesArgs Empty = new ConnectorProfileSnowflakeConnectorProfilePropertiesArgs();

    /**
     * The name of the account.
     * 
     */
    @Import(name="accountName")
      private final @Nullable Output<String> accountName;

    public Output<String> accountName() {
        return this.accountName == null ? Codegen.empty() : this.accountName;
    }

    /**
     * The name of the Amazon S3 bucket associated with Snowﬂake.
     * 
     */
    @Import(name="bucketName", required=true)
      private final Output<String> bucketName;

    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * The bucket prefix that refers to the Amazon S3 bucket associated with Snowﬂake.
     * 
     */
    @Import(name="bucketPrefix")
      private final @Nullable Output<String> bucketPrefix;

    public Output<String> bucketPrefix() {
        return this.bucketPrefix == null ? Codegen.empty() : this.bucketPrefix;
    }

    /**
     * The Snowﬂake Private Link service name to be used for private data transfers.
     * 
     */
    @Import(name="privateLinkServiceName")
      private final @Nullable Output<String> privateLinkServiceName;

    public Output<String> privateLinkServiceName() {
        return this.privateLinkServiceName == null ? Codegen.empty() : this.privateLinkServiceName;
    }

    /**
     * The region of the Snowﬂake account.
     * 
     */
    @Import(name="region")
      private final @Nullable Output<String> region;

    public Output<String> region() {
        return this.region == null ? Codegen.empty() : this.region;
    }

    /**
     * The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the
     * Snowﬂake account. This is written in the following format: < Database>< Schema><Stage Name>.
     * 
     */
    @Import(name="stage", required=true)
      private final Output<String> stage;

    public Output<String> stage() {
        return this.stage;
    }

    /**
     * The name of the Snowﬂake warehouse.
     * 
     */
    @Import(name="warehouse", required=true)
      private final Output<String> warehouse;

    public Output<String> warehouse() {
        return this.warehouse;
    }

    public ConnectorProfileSnowflakeConnectorProfilePropertiesArgs(
        @Nullable Output<String> accountName,
        Output<String> bucketName,
        @Nullable Output<String> bucketPrefix,
        @Nullable Output<String> privateLinkServiceName,
        @Nullable Output<String> region,
        Output<String> stage,
        Output<String> warehouse) {
        this.accountName = accountName;
        this.bucketName = Objects.requireNonNull(bucketName, "expected parameter 'bucketName' to be non-null");
        this.bucketPrefix = bucketPrefix;
        this.privateLinkServiceName = privateLinkServiceName;
        this.region = region;
        this.stage = Objects.requireNonNull(stage, "expected parameter 'stage' to be non-null");
        this.warehouse = Objects.requireNonNull(warehouse, "expected parameter 'warehouse' to be non-null");
    }

    private ConnectorProfileSnowflakeConnectorProfilePropertiesArgs() {
        this.accountName = Codegen.empty();
        this.bucketName = Codegen.empty();
        this.bucketPrefix = Codegen.empty();
        this.privateLinkServiceName = Codegen.empty();
        this.region = Codegen.empty();
        this.stage = Codegen.empty();
        this.warehouse = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorProfileSnowflakeConnectorProfilePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountName;
        private Output<String> bucketName;
        private @Nullable Output<String> bucketPrefix;
        private @Nullable Output<String> privateLinkServiceName;
        private @Nullable Output<String> region;
        private Output<String> stage;
        private Output<String> warehouse;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectorProfileSnowflakeConnectorProfilePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.bucketName = defaults.bucketName;
    	      this.bucketPrefix = defaults.bucketPrefix;
    	      this.privateLinkServiceName = defaults.privateLinkServiceName;
    	      this.region = defaults.region;
    	      this.stage = defaults.stage;
    	      this.warehouse = defaults.warehouse;
        }

        public Builder accountName(@Nullable Output<String> accountName) {
            this.accountName = accountName;
            return this;
        }
        public Builder accountName(@Nullable String accountName) {
            this.accountName = Codegen.ofNullable(accountName);
            return this;
        }
        public Builder bucketName(Output<String> bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        public Builder bucketName(String bucketName) {
            this.bucketName = Output.of(Objects.requireNonNull(bucketName));
            return this;
        }
        public Builder bucketPrefix(@Nullable Output<String> bucketPrefix) {
            this.bucketPrefix = bucketPrefix;
            return this;
        }
        public Builder bucketPrefix(@Nullable String bucketPrefix) {
            this.bucketPrefix = Codegen.ofNullable(bucketPrefix);
            return this;
        }
        public Builder privateLinkServiceName(@Nullable Output<String> privateLinkServiceName) {
            this.privateLinkServiceName = privateLinkServiceName;
            return this;
        }
        public Builder privateLinkServiceName(@Nullable String privateLinkServiceName) {
            this.privateLinkServiceName = Codegen.ofNullable(privateLinkServiceName);
            return this;
        }
        public Builder region(@Nullable Output<String> region) {
            this.region = region;
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = Codegen.ofNullable(region);
            return this;
        }
        public Builder stage(Output<String> stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }
        public Builder stage(String stage) {
            this.stage = Output.of(Objects.requireNonNull(stage));
            return this;
        }
        public Builder warehouse(Output<String> warehouse) {
            this.warehouse = Objects.requireNonNull(warehouse);
            return this;
        }
        public Builder warehouse(String warehouse) {
            this.warehouse = Output.of(Objects.requireNonNull(warehouse));
            return this;
        }        public ConnectorProfileSnowflakeConnectorProfilePropertiesArgs build() {
            return new ConnectorProfileSnowflakeConnectorProfilePropertiesArgs(accountName, bucketName, bucketPrefix, privateLinkServiceName, region, stage, warehouse);
        }
    }
}
