// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotsitewise.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.
 * 
 */
public final class AssetModelTumblingWindowArgs extends io.pulumi.resources.ResourceArgs {

    public static final AssetModelTumblingWindowArgs Empty = new AssetModelTumblingWindowArgs();

    @InputImport(name="interval", required=true)
      private final Input<String> interval;

    public Input<String> getInterval() {
        return this.interval;
    }

    @InputImport(name="offset")
      private final @Nullable Input<String> offset;

    public Input<String> getOffset() {
        return this.offset == null ? Input.empty() : this.offset;
    }

    public AssetModelTumblingWindowArgs(
        Input<String> interval,
        @Nullable Input<String> offset) {
        this.interval = Objects.requireNonNull(interval, "expected parameter 'interval' to be non-null");
        this.offset = offset;
    }

    private AssetModelTumblingWindowArgs() {
        this.interval = Input.empty();
        this.offset = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetModelTumblingWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> interval;
        private @Nullable Input<String> offset;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetModelTumblingWindowArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interval = defaults.interval;
    	      this.offset = defaults.offset;
        }

        public Builder setInterval(Input<String> interval) {
            this.interval = Objects.requireNonNull(interval);
            return this;
        }

        public Builder setInterval(String interval) {
            this.interval = Input.of(Objects.requireNonNull(interval));
            return this;
        }

        public Builder setOffset(@Nullable Input<String> offset) {
            this.offset = offset;
            return this;
        }

        public Builder setOffset(@Nullable String offset) {
            this.offset = Input.ofNullable(offset);
            return this;
        }
        public AssetModelTumblingWindowArgs build() {
            return new AssetModelTumblingWindowArgs(interval, offset);
        }
    }
}
