// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.stepfunctions;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.stepfunctions.StateMachineArgs;
import io.pulumi.awsnative.stepfunctions.enums.StateMachineType;
import io.pulumi.awsnative.stepfunctions.outputs.StateMachineDefinition;
import io.pulumi.awsnative.stepfunctions.outputs.StateMachineDefinitionSubstitutions;
import io.pulumi.awsnative.stepfunctions.outputs.StateMachineLoggingConfiguration;
import io.pulumi.awsnative.stepfunctions.outputs.StateMachineS3Location;
import io.pulumi.awsnative.stepfunctions.outputs.StateMachineTagsEntry;
import io.pulumi.awsnative.stepfunctions.outputs.StateMachineTracingConfiguration;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Resource schema for StateMachine
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myStateMachine = new AwsNative.StepFunctions.StateMachine("myStateMachine", new AwsNative.StepFunctions.StateMachineArgs
 *         {
 *             StateMachineName = "HelloWorld-StateMachine",
 *             StateMachineType = "STANDARD",
 *             DefinitionString = "{\"StartAt\": \"HelloWorld\",  \"States\": {\"HelloWorld\": {\"Type\": \"Task\", \"Resource\":  \"arn:aws:lambda:us-east-1:111122223333;:function:HelloFunction\", \"End\": true}}}",
 *             RoleArn = "arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1;",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/stepfunctions"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := stepfunctions.NewStateMachine(ctx, "myStateMachine", &stepfunctions.StateMachineArgs{
 * 			StateMachineName: pulumi.String("HelloWorld-StateMachine"),
 * 			StateMachineType: "STANDARD",
 * 			DefinitionString: pulumi.String("{\"StartAt\": \"HelloWorld\",  \"States\": {\"HelloWorld\": {\"Type\": \"Task\", \"Resource\":  \"arn:aws:lambda:us-east-1:111122223333;:function:HelloFunction\", \"End\": true}}}"),
 * 			RoleArn:          pulumi.String("arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1;"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myStateMachine = new aws_native.stepfunctions.StateMachine("myStateMachine", {
 *     stateMachineName: "HelloWorld-StateMachine",
 *     stateMachineType: "STANDARD",
 *     definitionString: "{\"StartAt\": \"HelloWorld\",  \"States\": {\"HelloWorld\": {\"Type\": \"Task\", \"Resource\":  \"arn:aws:lambda:us-east-1:111122223333;:function:HelloFunction\", \"End\": true}}}",
 *     roleArn: "arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1;",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_state_machine = aws_native.stepfunctions.StateMachine("myStateMachine",
 *     state_machine_name="HelloWorld-StateMachine",
 *     state_machine_type="STANDARD",
 *     definition_string="{\"StartAt\": \"HelloWorld\",  \"States\": {\"HelloWorld\": {\"Type\": \"Task\", \"Resource\":  \"arn:aws:lambda:us-east-1:111122223333;:function:HelloFunction\", \"End\": true}}}",
 *     role_arn="arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1;")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myStateMachine = new AwsNative.StepFunctions.StateMachine("myStateMachine", new AwsNative.StepFunctions.StateMachineArgs
 *         {
 *             StateMachineName = "HelloWorld-StateMachine",
 *             StateMachineType = "STANDARD",
 *             DefinitionString = @"{
 *     ""StartAt"": ""HelloWorld"",
 *     ""States"" : {
 *         ""HelloWorld"" : {
 *             ""Type"" : ""Task"", 
 *             ""Resource"" : ""arn:aws:lambda:us-east-1:111122223333:function:HelloFunction"",
 *             ""End"" : true
 *         }
 *     }
 * }",
 *             RoleArn = "arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1",
 *             Tags = 
 *             {
 *                 new AwsNative.StepFunctions.Inputs.StateMachineTagsEntryArgs
 *                 {
 *                     Key = "keyname1",
 *                     Value = "value1",
 *                 },
 *                 new AwsNative.StepFunctions.Inputs.StateMachineTagsEntryArgs
 *                 {
 *                     Key = "keyname2",
 *                     Value = "value2",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/stepfunctions"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := stepfunctions.NewStateMachine(ctx, "myStateMachine", &stepfunctions.StateMachineArgs{
 * 			StateMachineName: pulumi.String("HelloWorld-StateMachine"),
 * 			StateMachineType: "STANDARD",
 * 			DefinitionString: pulumi.String("{\n    \"StartAt\": \"HelloWorld\",\n    \"States\" : {\n        \"HelloWorld\" : {\n            \"Type\" : \"Task\", \n            \"Resource\" : \"arn:aws:lambda:us-east-1:111122223333:function:HelloFunction\",\n            \"End\" : true\n        }\n    }\n}"),
 * 			RoleArn:          pulumi.String("arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1"),
 * 			Tags: []stepfunctions.StateMachineTagsEntryArgs{
 * 				&stepfunctions.StateMachineTagsEntryArgs{
 * 					Key:   pulumi.String("keyname1"),
 * 					Value: pulumi.String("value1"),
 * 				},
 * 				&stepfunctions.StateMachineTagsEntryArgs{
 * 					Key:   pulumi.String("keyname2"),
 * 					Value: pulumi.String("value2"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myStateMachine = new aws_native.stepfunctions.StateMachine("myStateMachine", {
 *     stateMachineName: "HelloWorld-StateMachine",
 *     stateMachineType: "STANDARD",
 *     definitionString: `{
 *     "StartAt": "HelloWorld",
 *     "States" : {
 *         "HelloWorld" : {
 *             "Type" : "Task", 
 *             "Resource" : "arn:aws:lambda:us-east-1:111122223333:function:HelloFunction",
 *             "End" : true
 *         }
 *     }
 * }`,
 *     roleArn: "arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1",
 *     tags: [
 *         {
 *             key: "keyname1",
 *             value: "value1",
 *         },
 *         {
 *             key: "keyname2",
 *             value: "value2",
 *         },
 *     ],
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_state_machine = aws_native.stepfunctions.StateMachine("myStateMachine",
 *     state_machine_name="HelloWorld-StateMachine",
 *     state_machine_type="STANDARD",
 *     definition_string="""{
 *     "StartAt": "HelloWorld",
 *     "States" : {
 *         "HelloWorld" : {
 *             "Type" : "Task", 
 *             "Resource" : "arn:aws:lambda:us-east-1:111122223333:function:HelloFunction",
 *             "End" : true
 *         }
 *     }
 * }""",
 *     role_arn="arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1",
 *     tags=[
 *         aws_native.stepfunctions.StateMachineTagsEntryArgs(
 *             key="keyname1",
 *             value="value1",
 *         ),
 *         aws_native.stepfunctions.StateMachineTagsEntryArgs(
 *             key="keyname2",
 *             value="value2",
 *         ),
 *     ])
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myStateMachine = new AwsNative.StepFunctions.StateMachine("myStateMachine", new AwsNative.StepFunctions.StateMachineArgs
 *         {
 *             StateMachineName = "HelloWorld-StateMachine",
 *             DefinitionString = @"{
 *   ""StartAt"": ""HelloWorld"",
 *   ""States"": {
 *     ""HelloWorld"": {
 *       ""Type"": ""Task"",
 *       ""Resource"": ""arn:aws:lambda:us-east-1:111122223333:function:HelloFunction"",
 *       ""End"": true
 *     }
 *   }
 * }",
 *             RoleArn = "arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1",
 *             Tags = 
 *             {
 *                 new AwsNative.StepFunctions.Inputs.StateMachineTagsEntryArgs
 *                 {
 *                     Key = "keyname1",
 *                     Value = "value1",
 *                 },
 *                 new AwsNative.StepFunctions.Inputs.StateMachineTagsEntryArgs
 *                 {
 *                     Key = "keyname2",
 *                     Value = "value2",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/stepfunctions"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := stepfunctions.NewStateMachine(ctx, "myStateMachine", &stepfunctions.StateMachineArgs{
 * 			StateMachineName: pulumi.String("HelloWorld-StateMachine"),
 * 			DefinitionString: pulumi.String("{\n  \"StartAt\": \"HelloWorld\",\n  \"States\": {\n    \"HelloWorld\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-east-1:111122223333:function:HelloFunction\",\n      \"End\": true\n    }\n  }\n}"),
 * 			RoleArn:          pulumi.String("arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1"),
 * 			Tags: []stepfunctions.StateMachineTagsEntryArgs{
 * 				&stepfunctions.StateMachineTagsEntryArgs{
 * 					Key:   pulumi.String("keyname1"),
 * 					Value: pulumi.String("value1"),
 * 				},
 * 				&stepfunctions.StateMachineTagsEntryArgs{
 * 					Key:   pulumi.String("keyname2"),
 * 					Value: pulumi.String("value2"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myStateMachine = new aws_native.stepfunctions.StateMachine("myStateMachine", {
 *     stateMachineName: "HelloWorld-StateMachine",
 *     definitionString: `{
 *   "StartAt": "HelloWorld",
 *   "States": {
 *     "HelloWorld": {
 *       "Type": "Task",
 *       "Resource": "arn:aws:lambda:us-east-1:111122223333:function:HelloFunction",
 *       "End": true
 *     }
 *   }
 * }`,
 *     roleArn: "arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1",
 *     tags: [
 *         {
 *             key: "keyname1",
 *             value: "value1",
 *         },
 *         {
 *             key: "keyname2",
 *             value: "value2",
 *         },
 *     ],
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_state_machine = aws_native.stepfunctions.StateMachine("myStateMachine",
 *     state_machine_name="HelloWorld-StateMachine",
 *     definition_string="""{
 *   "StartAt": "HelloWorld",
 *   "States": {
 *     "HelloWorld": {
 *       "Type": "Task",
 *       "Resource": "arn:aws:lambda:us-east-1:111122223333:function:HelloFunction",
 *       "End": true
 *     }
 *   }
 * }""",
 *     role_arn="arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1",
 *     tags=[
 *         aws_native.stepfunctions.StateMachineTagsEntryArgs(
 *             key="keyname1",
 *             value="value1",
 *         ),
 *         aws_native.stepfunctions.StateMachineTagsEntryArgs(
 *             key="keyname2",
 *             value="value2",
 *         ),
 *     ])
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myStateMachine = new AwsNative.StepFunctions.StateMachine("myStateMachine", new AwsNative.StepFunctions.StateMachineArgs
 *         {
 *             StateMachineName = "HelloWorld-StateMachine",
 *             DefinitionS3Location = new AwsNative.StepFunctions.Inputs.StateMachineS3LocationArgs
 *             {
 *                 Bucket = "example_bucket",
 *                 Key = "hello_world.json",
 *             },
 *             DefinitionSubstitutions = new AwsNative.StepFunctions.Inputs.StateMachineDefinitionSubstitutionsArgs
 *             {
 *                 HelloFunction = "arn:aws:lambda:us-east-1:111122223333:function:HelloFunction",
 *             },
 *             RoleArn = "arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/stepfunctions"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := stepfunctions.NewStateMachine(ctx, "myStateMachine", &stepfunctions.StateMachineArgs{
 * 			StateMachineName: pulumi.String("HelloWorld-StateMachine"),
 * 			DefinitionS3Location: &stepfunctions.StateMachineS3LocationArgs{
 * 				Bucket: pulumi.String("example_bucket"),
 * 				Key:    pulumi.String("hello_world.json"),
 * 			},
 * 			DefinitionSubstitutions: &stepfunctions.StateMachineDefinitionSubstitutionsArgs{
 * 				HelloFunction: "arn:aws:lambda:us-east-1:111122223333:function:HelloFunction",
 * 			},
 * 			RoleArn: pulumi.String("arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myStateMachine = new aws_native.stepfunctions.StateMachine("myStateMachine", {
 *     stateMachineName: "HelloWorld-StateMachine",
 *     definitionS3Location: {
 *         bucket: "example_bucket",
 *         key: "hello_world.json",
 *     },
 *     definitionSubstitutions: {
 *         helloFunction: "arn:aws:lambda:us-east-1:111122223333:function:HelloFunction",
 *     },
 *     roleArn: "arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_state_machine = aws_native.stepfunctions.StateMachine("myStateMachine",
 *     state_machine_name="HelloWorld-StateMachine",
 *     definition_s3_location=aws_native.stepfunctions.StateMachineS3LocationArgs(
 *         bucket="example_bucket",
 *         key="hello_world.json",
 *     ),
 *     definition_substitutions=aws_native.stepfunctions.StateMachineDefinitionSubstitutionsArgs(
 *         hello_function="arn:aws:lambda:us-east-1:111122223333:function:HelloFunction",
 *     ),
 *     role_arn="arn:aws:iam::111122223333:role/service-role/StatesExecutionRole-us-east-1")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 */
@ResourceType(type="aws-native:stepfunctions:StateMachine")
public class StateMachine extends io.pulumi.resources.CustomResource {
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    @Export(name="definition", type=StateMachineDefinition.class, parameters={})
    private Output</* @Nullable */ StateMachineDefinition> definition;

    public Output</* @Nullable */ StateMachineDefinition> getDefinition() {
        return this.definition;
    }
    @Export(name="definitionS3Location", type=StateMachineS3Location.class, parameters={})
    private Output</* @Nullable */ StateMachineS3Location> definitionS3Location;

    public Output</* @Nullable */ StateMachineS3Location> getDefinitionS3Location() {
        return this.definitionS3Location;
    }
    @Export(name="definitionString", type=String.class, parameters={})
    private Output</* @Nullable */ String> definitionString;

    public Output</* @Nullable */ String> getDefinitionString() {
        return this.definitionString;
    }
    @Export(name="definitionSubstitutions", type=StateMachineDefinitionSubstitutions.class, parameters={})
    private Output</* @Nullable */ StateMachineDefinitionSubstitutions> definitionSubstitutions;

    public Output</* @Nullable */ StateMachineDefinitionSubstitutions> getDefinitionSubstitutions() {
        return this.definitionSubstitutions;
    }
    @Export(name="loggingConfiguration", type=StateMachineLoggingConfiguration.class, parameters={})
    private Output</* @Nullable */ StateMachineLoggingConfiguration> loggingConfiguration;

    public Output</* @Nullable */ StateMachineLoggingConfiguration> getLoggingConfiguration() {
        return this.loggingConfiguration;
    }
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @Export(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn;
    }
    @Export(name="stateMachineName", type=String.class, parameters={})
    private Output</* @Nullable */ String> stateMachineName;

    public Output</* @Nullable */ String> getStateMachineName() {
        return this.stateMachineName;
    }
    @Export(name="stateMachineType", type=StateMachineType.class, parameters={})
    private Output</* @Nullable */ StateMachineType> stateMachineType;

    public Output</* @Nullable */ StateMachineType> getStateMachineType() {
        return this.stateMachineType;
    }
    @Export(name="tags", type=List.class, parameters={StateMachineTagsEntry.class})
    private Output</* @Nullable */ List<StateMachineTagsEntry>> tags;

    public Output</* @Nullable */ List<StateMachineTagsEntry>> getTags() {
        return this.tags;
    }
    @Export(name="tracingConfiguration", type=StateMachineTracingConfiguration.class, parameters={})
    private Output</* @Nullable */ StateMachineTracingConfiguration> tracingConfiguration;

    public Output</* @Nullable */ StateMachineTracingConfiguration> getTracingConfiguration() {
        return this.tracingConfiguration;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StateMachine(String name) {
        this(name, StateMachineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StateMachine(String name, StateMachineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StateMachine(String name, StateMachineArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:stepfunctions:StateMachine", name, args == null ? StateMachineArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private StateMachine(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:stepfunctions:StateMachine", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StateMachine get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new StateMachine(name, id, options);
    }
}
