// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.connect.inputs;

import io.pulumi.awsnative.connect.enums.UserPhoneType;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserPhoneConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserPhoneConfigArgs Empty = new UserPhoneConfigArgs();

    @InputImport(name="afterContactWorkTimeLimit")
    private final @Nullable Input<Integer> afterContactWorkTimeLimit;

    public Input<Integer> getAfterContactWorkTimeLimit() {
        return this.afterContactWorkTimeLimit == null ? Input.empty() : this.afterContactWorkTimeLimit;
    }

    @InputImport(name="autoAccept")
    private final @Nullable Input<Boolean> autoAccept;

    public Input<Boolean> getAutoAccept() {
        return this.autoAccept == null ? Input.empty() : this.autoAccept;
    }

    @InputImport(name="deskPhoneNumber")
    private final @Nullable Input<String> deskPhoneNumber;

    public Input<String> getDeskPhoneNumber() {
        return this.deskPhoneNumber == null ? Input.empty() : this.deskPhoneNumber;
    }

    @InputImport(name="phoneType", required=true)
    private final Input<UserPhoneType> phoneType;

    public Input<UserPhoneType> getPhoneType() {
        return this.phoneType;
    }

    public UserPhoneConfigArgs(
        @Nullable Input<Integer> afterContactWorkTimeLimit,
        @Nullable Input<Boolean> autoAccept,
        @Nullable Input<String> deskPhoneNumber,
        Input<UserPhoneType> phoneType) {
        this.afterContactWorkTimeLimit = afterContactWorkTimeLimit;
        this.autoAccept = autoAccept;
        this.deskPhoneNumber = deskPhoneNumber;
        this.phoneType = Objects.requireNonNull(phoneType, "expected parameter 'phoneType' to be non-null");
    }

    private UserPhoneConfigArgs() {
        this.afterContactWorkTimeLimit = Input.empty();
        this.autoAccept = Input.empty();
        this.deskPhoneNumber = Input.empty();
        this.phoneType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserPhoneConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> afterContactWorkTimeLimit;
        private @Nullable Input<Boolean> autoAccept;
        private @Nullable Input<String> deskPhoneNumber;
        private Input<UserPhoneType> phoneType;

        public Builder() {
    	      // Empty
        }

        public Builder(UserPhoneConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.afterContactWorkTimeLimit = defaults.afterContactWorkTimeLimit;
    	      this.autoAccept = defaults.autoAccept;
    	      this.deskPhoneNumber = defaults.deskPhoneNumber;
    	      this.phoneType = defaults.phoneType;
        }

        public Builder setAfterContactWorkTimeLimit(@Nullable Input<Integer> afterContactWorkTimeLimit) {
            this.afterContactWorkTimeLimit = afterContactWorkTimeLimit;
            return this;
        }

        public Builder setAfterContactWorkTimeLimit(@Nullable Integer afterContactWorkTimeLimit) {
            this.afterContactWorkTimeLimit = Input.ofNullable(afterContactWorkTimeLimit);
            return this;
        }

        public Builder setAutoAccept(@Nullable Input<Boolean> autoAccept) {
            this.autoAccept = autoAccept;
            return this;
        }

        public Builder setAutoAccept(@Nullable Boolean autoAccept) {
            this.autoAccept = Input.ofNullable(autoAccept);
            return this;
        }

        public Builder setDeskPhoneNumber(@Nullable Input<String> deskPhoneNumber) {
            this.deskPhoneNumber = deskPhoneNumber;
            return this;
        }

        public Builder setDeskPhoneNumber(@Nullable String deskPhoneNumber) {
            this.deskPhoneNumber = Input.ofNullable(deskPhoneNumber);
            return this;
        }

        public Builder setPhoneType(Input<UserPhoneType> phoneType) {
            this.phoneType = Objects.requireNonNull(phoneType);
            return this;
        }

        public Builder setPhoneType(UserPhoneType phoneType) {
            this.phoneType = Input.of(Objects.requireNonNull(phoneType));
            return this;
        }

        public UserPhoneConfigArgs build() {
            return new UserPhoneConfigArgs(afterContactWorkTimeLimit, autoAccept, deskPhoneNumber, phoneType);
        }
    }
}
