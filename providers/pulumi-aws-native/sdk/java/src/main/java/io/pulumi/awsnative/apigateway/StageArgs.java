// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apigateway;

import io.pulumi.awsnative.apigateway.inputs.StageAccessLogSettingArgs;
import io.pulumi.awsnative.apigateway.inputs.StageCanarySettingArgs;
import io.pulumi.awsnative.apigateway.inputs.StageMethodSettingArgs;
import io.pulumi.awsnative.apigateway.inputs.StageTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StageArgs extends io.pulumi.resources.ResourceArgs {

    public static final StageArgs Empty = new StageArgs();

    /**
     * Specifies settings for logging access in this stage.
     * 
     */
    @InputImport(name="accessLogSetting")
    private final @Nullable Input<StageAccessLogSettingArgs> accessLogSetting;

    public Input<StageAccessLogSettingArgs> getAccessLogSetting() {
        return this.accessLogSetting == null ? Input.empty() : this.accessLogSetting;
    }

    /**
     * Indicates whether cache clustering is enabled for the stage.
     * 
     */
    @InputImport(name="cacheClusterEnabled")
    private final @Nullable Input<Boolean> cacheClusterEnabled;

    public Input<Boolean> getCacheClusterEnabled() {
        return this.cacheClusterEnabled == null ? Input.empty() : this.cacheClusterEnabled;
    }

    /**
     * The stage's cache cluster size.
     * 
     */
    @InputImport(name="cacheClusterSize")
    private final @Nullable Input<String> cacheClusterSize;

    public Input<String> getCacheClusterSize() {
        return this.cacheClusterSize == null ? Input.empty() : this.cacheClusterSize;
    }

    /**
     * Specifies settings for the canary deployment in this stage.
     * 
     */
    @InputImport(name="canarySetting")
    private final @Nullable Input<StageCanarySettingArgs> canarySetting;

    public Input<StageCanarySettingArgs> getCanarySetting() {
        return this.canarySetting == null ? Input.empty() : this.canarySetting;
    }

    /**
     * The ID of the client certificate that API Gateway uses to call your integration endpoints in the stage.
     * 
     */
    @InputImport(name="clientCertificateId")
    private final @Nullable Input<String> clientCertificateId;

    public Input<String> getClientCertificateId() {
        return this.clientCertificateId == null ? Input.empty() : this.clientCertificateId;
    }

    /**
     * The ID of the deployment that the stage is associated with. This parameter is required to create a stage.
     * 
     */
    @InputImport(name="deploymentId")
    private final @Nullable Input<String> deploymentId;

    public Input<String> getDeploymentId() {
        return this.deploymentId == null ? Input.empty() : this.deploymentId;
    }

    /**
     * A description of the stage.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The version ID of the API documentation snapshot.
     * 
     */
    @InputImport(name="documentationVersion")
    private final @Nullable Input<String> documentationVersion;

    public Input<String> getDocumentationVersion() {
        return this.documentationVersion == null ? Input.empty() : this.documentationVersion;
    }

    /**
     * Settings for all methods in the stage.
     * 
     */
    @InputImport(name="methodSettings")
    private final @Nullable Input<List<StageMethodSettingArgs>> methodSettings;

    public Input<List<StageMethodSettingArgs>> getMethodSettings() {
        return this.methodSettings == null ? Input.empty() : this.methodSettings;
    }

    /**
     * The ID of the RestApi resource that you're deploying with this stage.
     * 
     */
    @InputImport(name="restApiId", required=true)
    private final Input<String> restApiId;

    public Input<String> getRestApiId() {
        return this.restApiId;
    }

    /**
     * The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI).
     * 
     */
    @InputImport(name="stageName")
    private final @Nullable Input<String> stageName;

    public Input<String> getStageName() {
        return this.stageName == null ? Input.empty() : this.stageName;
    }

    /**
     * An array of arbitrary tags (key-value pairs) to associate with the stage.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<List<StageTagArgs>> tags;

    public Input<List<StageTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Specifies whether active X-Ray tracing is enabled for this stage.
     * 
     */
    @InputImport(name="tracingEnabled")
    private final @Nullable Input<Boolean> tracingEnabled;

    public Input<Boolean> getTracingEnabled() {
        return this.tracingEnabled == null ? Input.empty() : this.tracingEnabled;
    }

    /**
     * A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value.
     * 
     */
    @InputImport(name="variables")
    private final @Nullable Input<Object> variables;

    public Input<Object> getVariables() {
        return this.variables == null ? Input.empty() : this.variables;
    }

    public StageArgs(
        @Nullable Input<StageAccessLogSettingArgs> accessLogSetting,
        @Nullable Input<Boolean> cacheClusterEnabled,
        @Nullable Input<String> cacheClusterSize,
        @Nullable Input<StageCanarySettingArgs> canarySetting,
        @Nullable Input<String> clientCertificateId,
        @Nullable Input<String> deploymentId,
        @Nullable Input<String> description,
        @Nullable Input<String> documentationVersion,
        @Nullable Input<List<StageMethodSettingArgs>> methodSettings,
        Input<String> restApiId,
        @Nullable Input<String> stageName,
        @Nullable Input<List<StageTagArgs>> tags,
        @Nullable Input<Boolean> tracingEnabled,
        @Nullable Input<Object> variables) {
        this.accessLogSetting = accessLogSetting;
        this.cacheClusterEnabled = cacheClusterEnabled;
        this.cacheClusterSize = cacheClusterSize;
        this.canarySetting = canarySetting;
        this.clientCertificateId = clientCertificateId;
        this.deploymentId = deploymentId;
        this.description = description;
        this.documentationVersion = documentationVersion;
        this.methodSettings = methodSettings;
        this.restApiId = Objects.requireNonNull(restApiId, "expected parameter 'restApiId' to be non-null");
        this.stageName = stageName;
        this.tags = tags;
        this.tracingEnabled = tracingEnabled;
        this.variables = variables;
    }

    private StageArgs() {
        this.accessLogSetting = Input.empty();
        this.cacheClusterEnabled = Input.empty();
        this.cacheClusterSize = Input.empty();
        this.canarySetting = Input.empty();
        this.clientCertificateId = Input.empty();
        this.deploymentId = Input.empty();
        this.description = Input.empty();
        this.documentationVersion = Input.empty();
        this.methodSettings = Input.empty();
        this.restApiId = Input.empty();
        this.stageName = Input.empty();
        this.tags = Input.empty();
        this.tracingEnabled = Input.empty();
        this.variables = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<StageAccessLogSettingArgs> accessLogSetting;
        private @Nullable Input<Boolean> cacheClusterEnabled;
        private @Nullable Input<String> cacheClusterSize;
        private @Nullable Input<StageCanarySettingArgs> canarySetting;
        private @Nullable Input<String> clientCertificateId;
        private @Nullable Input<String> deploymentId;
        private @Nullable Input<String> description;
        private @Nullable Input<String> documentationVersion;
        private @Nullable Input<List<StageMethodSettingArgs>> methodSettings;
        private Input<String> restApiId;
        private @Nullable Input<String> stageName;
        private @Nullable Input<List<StageTagArgs>> tags;
        private @Nullable Input<Boolean> tracingEnabled;
        private @Nullable Input<Object> variables;

        public Builder() {
    	      // Empty
        }

        public Builder(StageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLogSetting = defaults.accessLogSetting;
    	      this.cacheClusterEnabled = defaults.cacheClusterEnabled;
    	      this.cacheClusterSize = defaults.cacheClusterSize;
    	      this.canarySetting = defaults.canarySetting;
    	      this.clientCertificateId = defaults.clientCertificateId;
    	      this.deploymentId = defaults.deploymentId;
    	      this.description = defaults.description;
    	      this.documentationVersion = defaults.documentationVersion;
    	      this.methodSettings = defaults.methodSettings;
    	      this.restApiId = defaults.restApiId;
    	      this.stageName = defaults.stageName;
    	      this.tags = defaults.tags;
    	      this.tracingEnabled = defaults.tracingEnabled;
    	      this.variables = defaults.variables;
        }

        public Builder setAccessLogSetting(@Nullable Input<StageAccessLogSettingArgs> accessLogSetting) {
            this.accessLogSetting = accessLogSetting;
            return this;
        }

        public Builder setAccessLogSetting(@Nullable StageAccessLogSettingArgs accessLogSetting) {
            this.accessLogSetting = Input.ofNullable(accessLogSetting);
            return this;
        }

        public Builder setCacheClusterEnabled(@Nullable Input<Boolean> cacheClusterEnabled) {
            this.cacheClusterEnabled = cacheClusterEnabled;
            return this;
        }

        public Builder setCacheClusterEnabled(@Nullable Boolean cacheClusterEnabled) {
            this.cacheClusterEnabled = Input.ofNullable(cacheClusterEnabled);
            return this;
        }

        public Builder setCacheClusterSize(@Nullable Input<String> cacheClusterSize) {
            this.cacheClusterSize = cacheClusterSize;
            return this;
        }

        public Builder setCacheClusterSize(@Nullable String cacheClusterSize) {
            this.cacheClusterSize = Input.ofNullable(cacheClusterSize);
            return this;
        }

        public Builder setCanarySetting(@Nullable Input<StageCanarySettingArgs> canarySetting) {
            this.canarySetting = canarySetting;
            return this;
        }

        public Builder setCanarySetting(@Nullable StageCanarySettingArgs canarySetting) {
            this.canarySetting = Input.ofNullable(canarySetting);
            return this;
        }

        public Builder setClientCertificateId(@Nullable Input<String> clientCertificateId) {
            this.clientCertificateId = clientCertificateId;
            return this;
        }

        public Builder setClientCertificateId(@Nullable String clientCertificateId) {
            this.clientCertificateId = Input.ofNullable(clientCertificateId);
            return this;
        }

        public Builder setDeploymentId(@Nullable Input<String> deploymentId) {
            this.deploymentId = deploymentId;
            return this;
        }

        public Builder setDeploymentId(@Nullable String deploymentId) {
            this.deploymentId = Input.ofNullable(deploymentId);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDocumentationVersion(@Nullable Input<String> documentationVersion) {
            this.documentationVersion = documentationVersion;
            return this;
        }

        public Builder setDocumentationVersion(@Nullable String documentationVersion) {
            this.documentationVersion = Input.ofNullable(documentationVersion);
            return this;
        }

        public Builder setMethodSettings(@Nullable Input<List<StageMethodSettingArgs>> methodSettings) {
            this.methodSettings = methodSettings;
            return this;
        }

        public Builder setMethodSettings(@Nullable List<StageMethodSettingArgs> methodSettings) {
            this.methodSettings = Input.ofNullable(methodSettings);
            return this;
        }

        public Builder setRestApiId(Input<String> restApiId) {
            this.restApiId = Objects.requireNonNull(restApiId);
            return this;
        }

        public Builder setRestApiId(String restApiId) {
            this.restApiId = Input.of(Objects.requireNonNull(restApiId));
            return this;
        }

        public Builder setStageName(@Nullable Input<String> stageName) {
            this.stageName = stageName;
            return this;
        }

        public Builder setStageName(@Nullable String stageName) {
            this.stageName = Input.ofNullable(stageName);
            return this;
        }

        public Builder setTags(@Nullable Input<List<StageTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<StageTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTracingEnabled(@Nullable Input<Boolean> tracingEnabled) {
            this.tracingEnabled = tracingEnabled;
            return this;
        }

        public Builder setTracingEnabled(@Nullable Boolean tracingEnabled) {
            this.tracingEnabled = Input.ofNullable(tracingEnabled);
            return this;
        }

        public Builder setVariables(@Nullable Input<Object> variables) {
            this.variables = variables;
            return this;
        }

        public Builder setVariables(@Nullable Object variables) {
            this.variables = Input.ofNullable(variables);
            return this;
        }

        public StageArgs build() {
            return new StageArgs(accessLogSetting, cacheClusterEnabled, cacheClusterSize, canarySetting, clientCertificateId, deploymentId, description, documentationVersion, methodSettings, restApiId, stageName, tags, tracingEnabled, variables);
        }
    }
}
