// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3objectlambda.outputs;

import io.pulumi.awsnative.s3objectlambda.outputs.AccessPointTransformationConfiguration;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AccessPointObjectLambdaConfiguration {
    private final @Nullable List<String> allowedFeatures;
    private final @Nullable Boolean cloudWatchMetricsEnabled;
    private final String supportingAccessPoint;
    private final List<AccessPointTransformationConfiguration> transformationConfigurations;

    @OutputCustomType.Constructor({"allowedFeatures","cloudWatchMetricsEnabled","supportingAccessPoint","transformationConfigurations"})
    private AccessPointObjectLambdaConfiguration(
        @Nullable List<String> allowedFeatures,
        @Nullable Boolean cloudWatchMetricsEnabled,
        String supportingAccessPoint,
        List<AccessPointTransformationConfiguration> transformationConfigurations) {
        this.allowedFeatures = allowedFeatures;
        this.cloudWatchMetricsEnabled = cloudWatchMetricsEnabled;
        this.supportingAccessPoint = Objects.requireNonNull(supportingAccessPoint);
        this.transformationConfigurations = Objects.requireNonNull(transformationConfigurations);
    }

    public List<String> getAllowedFeatures() {
        return this.allowedFeatures == null ? List.of() : this.allowedFeatures;
    }
    public Optional<Boolean> getCloudWatchMetricsEnabled() {
        return Optional.ofNullable(this.cloudWatchMetricsEnabled);
    }
    public String getSupportingAccessPoint() {
        return this.supportingAccessPoint;
    }
    public List<AccessPointTransformationConfiguration> getTransformationConfigurations() {
        return this.transformationConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPointObjectLambdaConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> allowedFeatures;
        private @Nullable Boolean cloudWatchMetricsEnabled;
        private String supportingAccessPoint;
        private List<AccessPointTransformationConfiguration> transformationConfigurations;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessPointObjectLambdaConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedFeatures = defaults.allowedFeatures;
    	      this.cloudWatchMetricsEnabled = defaults.cloudWatchMetricsEnabled;
    	      this.supportingAccessPoint = defaults.supportingAccessPoint;
    	      this.transformationConfigurations = defaults.transformationConfigurations;
        }

        public Builder setAllowedFeatures(@Nullable List<String> allowedFeatures) {
            this.allowedFeatures = allowedFeatures;
            return this;
        }

        public Builder setCloudWatchMetricsEnabled(@Nullable Boolean cloudWatchMetricsEnabled) {
            this.cloudWatchMetricsEnabled = cloudWatchMetricsEnabled;
            return this;
        }

        public Builder setSupportingAccessPoint(String supportingAccessPoint) {
            this.supportingAccessPoint = Objects.requireNonNull(supportingAccessPoint);
            return this;
        }

        public Builder setTransformationConfigurations(List<AccessPointTransformationConfiguration> transformationConfigurations) {
            this.transformationConfigurations = Objects.requireNonNull(transformationConfigurations);
            return this;
        }

        public AccessPointObjectLambdaConfiguration build() {
            return new AccessPointObjectLambdaConfiguration(allowedFeatures, cloudWatchMetricsEnabled, supportingAccessPoint, transformationConfigurations);
        }
    }
}
