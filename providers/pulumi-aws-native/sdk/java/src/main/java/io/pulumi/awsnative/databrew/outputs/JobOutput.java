// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.outputs;

import io.pulumi.awsnative.databrew.enums.JobOutputCompressionFormat;
import io.pulumi.awsnative.databrew.enums.JobOutputFormat;
import io.pulumi.awsnative.databrew.outputs.JobOutputFormatOptions;
import io.pulumi.awsnative.databrew.outputs.JobS3Location;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class JobOutput {
    private final @Nullable JobOutputCompressionFormat compressionFormat;
    private final @Nullable JobOutputFormat format;
    private final @Nullable JobOutputFormatOptions formatOptions;
    private final JobS3Location location;
    private final @Nullable Boolean overwrite;
    private final @Nullable List<String> partitionColumns;

    @OutputCustomType.Constructor
    private JobOutput(
        @OutputCustomType.Parameter("compressionFormat") @Nullable JobOutputCompressionFormat compressionFormat,
        @OutputCustomType.Parameter("format") @Nullable JobOutputFormat format,
        @OutputCustomType.Parameter("formatOptions") @Nullable JobOutputFormatOptions formatOptions,
        @OutputCustomType.Parameter("location") JobS3Location location,
        @OutputCustomType.Parameter("overwrite") @Nullable Boolean overwrite,
        @OutputCustomType.Parameter("partitionColumns") @Nullable List<String> partitionColumns) {
        this.compressionFormat = compressionFormat;
        this.format = format;
        this.formatOptions = formatOptions;
        this.location = location;
        this.overwrite = overwrite;
        this.partitionColumns = partitionColumns;
    }

    public Optional<JobOutputCompressionFormat> getCompressionFormat() {
        return Optional.ofNullable(this.compressionFormat);
    }
    public Optional<JobOutputFormat> getFormat() {
        return Optional.ofNullable(this.format);
    }
    public Optional<JobOutputFormatOptions> getFormatOptions() {
        return Optional.ofNullable(this.formatOptions);
    }
    public JobS3Location getLocation() {
        return this.location;
    }
    public Optional<Boolean> getOverwrite() {
        return Optional.ofNullable(this.overwrite);
    }
    public List<String> getPartitionColumns() {
        return this.partitionColumns == null ? List.of() : this.partitionColumns;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobOutput defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable JobOutputCompressionFormat compressionFormat;
        private @Nullable JobOutputFormat format;
        private @Nullable JobOutputFormatOptions formatOptions;
        private JobS3Location location;
        private @Nullable Boolean overwrite;
        private @Nullable List<String> partitionColumns;

        public Builder() {
    	      // Empty
        }

        public Builder(JobOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compressionFormat = defaults.compressionFormat;
    	      this.format = defaults.format;
    	      this.formatOptions = defaults.formatOptions;
    	      this.location = defaults.location;
    	      this.overwrite = defaults.overwrite;
    	      this.partitionColumns = defaults.partitionColumns;
        }

        public Builder setCompressionFormat(@Nullable JobOutputCompressionFormat compressionFormat) {
            this.compressionFormat = compressionFormat;
            return this;
        }

        public Builder setFormat(@Nullable JobOutputFormat format) {
            this.format = format;
            return this;
        }

        public Builder setFormatOptions(@Nullable JobOutputFormatOptions formatOptions) {
            this.formatOptions = formatOptions;
            return this;
        }

        public Builder setLocation(JobS3Location location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setOverwrite(@Nullable Boolean overwrite) {
            this.overwrite = overwrite;
            return this;
        }

        public Builder setPartitionColumns(@Nullable List<String> partitionColumns) {
            this.partitionColumns = partitionColumns;
            return this;
        }
        public JobOutput build() {
            return new JobOutput(compressionFormat, format, formatOptions, location, overwrite, partitionColumns);
        }
    }
}
