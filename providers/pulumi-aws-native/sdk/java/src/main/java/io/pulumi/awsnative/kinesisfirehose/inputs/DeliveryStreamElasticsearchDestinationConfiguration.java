// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kinesisfirehose.inputs;

import io.pulumi.awsnative.kinesisfirehose.enums.DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod;
import io.pulumi.awsnative.kinesisfirehose.enums.DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptions;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamElasticsearchBufferingHints;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamElasticsearchRetryOptions;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamProcessingConfiguration;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamS3DestinationConfiguration;
import io.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamVpcConfiguration;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryStreamElasticsearchDestinationConfiguration extends io.pulumi.resources.InvokeArgs {

    public static final DeliveryStreamElasticsearchDestinationConfiguration Empty = new DeliveryStreamElasticsearchDestinationConfiguration();

    @Import(name="bufferingHints")
      private final @Nullable DeliveryStreamElasticsearchBufferingHints bufferingHints;

    public Optional<DeliveryStreamElasticsearchBufferingHints> getBufferingHints() {
        return this.bufferingHints == null ? Optional.empty() : Optional.ofNullable(this.bufferingHints);
    }

    @Import(name="cloudWatchLoggingOptions")
      private final @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions;

    public Optional<DeliveryStreamCloudWatchLoggingOptions> getCloudWatchLoggingOptions() {
        return this.cloudWatchLoggingOptions == null ? Optional.empty() : Optional.ofNullable(this.cloudWatchLoggingOptions);
    }

    @Import(name="clusterEndpoint")
      private final @Nullable String clusterEndpoint;

    public Optional<String> getClusterEndpoint() {
        return this.clusterEndpoint == null ? Optional.empty() : Optional.ofNullable(this.clusterEndpoint);
    }

    @Import(name="domainARN")
      private final @Nullable String domainARN;

    public Optional<String> getDomainARN() {
        return this.domainARN == null ? Optional.empty() : Optional.ofNullable(this.domainARN);
    }

    @Import(name="indexName", required=true)
      private final String indexName;

    public String getIndexName() {
        return this.indexName;
    }

    @Import(name="indexRotationPeriod")
      private final @Nullable DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod indexRotationPeriod;

    public Optional<DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod> getIndexRotationPeriod() {
        return this.indexRotationPeriod == null ? Optional.empty() : Optional.ofNullable(this.indexRotationPeriod);
    }

    @Import(name="processingConfiguration")
      private final @Nullable DeliveryStreamProcessingConfiguration processingConfiguration;

    public Optional<DeliveryStreamProcessingConfiguration> getProcessingConfiguration() {
        return this.processingConfiguration == null ? Optional.empty() : Optional.ofNullable(this.processingConfiguration);
    }

    @Import(name="retryOptions")
      private final @Nullable DeliveryStreamElasticsearchRetryOptions retryOptions;

    public Optional<DeliveryStreamElasticsearchRetryOptions> getRetryOptions() {
        return this.retryOptions == null ? Optional.empty() : Optional.ofNullable(this.retryOptions);
    }

    @Import(name="roleARN", required=true)
      private final String roleARN;

    public String getRoleARN() {
        return this.roleARN;
    }

    @Import(name="s3BackupMode")
      private final @Nullable DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode s3BackupMode;

    public Optional<DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode> getS3BackupMode() {
        return this.s3BackupMode == null ? Optional.empty() : Optional.ofNullable(this.s3BackupMode);
    }

    @Import(name="s3Configuration", required=true)
      private final DeliveryStreamS3DestinationConfiguration s3Configuration;

    public DeliveryStreamS3DestinationConfiguration getS3Configuration() {
        return this.s3Configuration;
    }

    @Import(name="typeName")
      private final @Nullable String typeName;

    public Optional<String> getTypeName() {
        return this.typeName == null ? Optional.empty() : Optional.ofNullable(this.typeName);
    }

    @Import(name="vpcConfiguration")
      private final @Nullable DeliveryStreamVpcConfiguration vpcConfiguration;

    public Optional<DeliveryStreamVpcConfiguration> getVpcConfiguration() {
        return this.vpcConfiguration == null ? Optional.empty() : Optional.ofNullable(this.vpcConfiguration);
    }

    public DeliveryStreamElasticsearchDestinationConfiguration(
        @Nullable DeliveryStreamElasticsearchBufferingHints bufferingHints,
        @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions,
        @Nullable String clusterEndpoint,
        @Nullable String domainARN,
        String indexName,
        @Nullable DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod indexRotationPeriod,
        @Nullable DeliveryStreamProcessingConfiguration processingConfiguration,
        @Nullable DeliveryStreamElasticsearchRetryOptions retryOptions,
        String roleARN,
        @Nullable DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode s3BackupMode,
        DeliveryStreamS3DestinationConfiguration s3Configuration,
        @Nullable String typeName,
        @Nullable DeliveryStreamVpcConfiguration vpcConfiguration) {
        this.bufferingHints = bufferingHints;
        this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
        this.clusterEndpoint = clusterEndpoint;
        this.domainARN = domainARN;
        this.indexName = Objects.requireNonNull(indexName, "expected parameter 'indexName' to be non-null");
        this.indexRotationPeriod = indexRotationPeriod;
        this.processingConfiguration = processingConfiguration;
        this.retryOptions = retryOptions;
        this.roleARN = Objects.requireNonNull(roleARN, "expected parameter 'roleARN' to be non-null");
        this.s3BackupMode = s3BackupMode;
        this.s3Configuration = Objects.requireNonNull(s3Configuration, "expected parameter 's3Configuration' to be non-null");
        this.typeName = typeName;
        this.vpcConfiguration = vpcConfiguration;
    }

    private DeliveryStreamElasticsearchDestinationConfiguration() {
        this.bufferingHints = null;
        this.cloudWatchLoggingOptions = null;
        this.clusterEndpoint = null;
        this.domainARN = null;
        this.indexName = null;
        this.indexRotationPeriod = null;
        this.processingConfiguration = null;
        this.retryOptions = null;
        this.roleARN = null;
        this.s3BackupMode = null;
        this.s3Configuration = null;
        this.typeName = null;
        this.vpcConfiguration = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryStreamElasticsearchDestinationConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DeliveryStreamElasticsearchBufferingHints bufferingHints;
        private @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions;
        private @Nullable String clusterEndpoint;
        private @Nullable String domainARN;
        private String indexName;
        private @Nullable DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod indexRotationPeriod;
        private @Nullable DeliveryStreamProcessingConfiguration processingConfiguration;
        private @Nullable DeliveryStreamElasticsearchRetryOptions retryOptions;
        private String roleARN;
        private @Nullable DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode s3BackupMode;
        private DeliveryStreamS3DestinationConfiguration s3Configuration;
        private @Nullable String typeName;
        private @Nullable DeliveryStreamVpcConfiguration vpcConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(DeliveryStreamElasticsearchDestinationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bufferingHints = defaults.bufferingHints;
    	      this.cloudWatchLoggingOptions = defaults.cloudWatchLoggingOptions;
    	      this.clusterEndpoint = defaults.clusterEndpoint;
    	      this.domainARN = defaults.domainARN;
    	      this.indexName = defaults.indexName;
    	      this.indexRotationPeriod = defaults.indexRotationPeriod;
    	      this.processingConfiguration = defaults.processingConfiguration;
    	      this.retryOptions = defaults.retryOptions;
    	      this.roleARN = defaults.roleARN;
    	      this.s3BackupMode = defaults.s3BackupMode;
    	      this.s3Configuration = defaults.s3Configuration;
    	      this.typeName = defaults.typeName;
    	      this.vpcConfiguration = defaults.vpcConfiguration;
        }

        public Builder bufferingHints(@Nullable DeliveryStreamElasticsearchBufferingHints bufferingHints) {
            this.bufferingHints = bufferingHints;
            return this;
        }

        public Builder cloudWatchLoggingOptions(@Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions) {
            this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder clusterEndpoint(@Nullable String clusterEndpoint) {
            this.clusterEndpoint = clusterEndpoint;
            return this;
        }

        public Builder domainARN(@Nullable String domainARN) {
            this.domainARN = domainARN;
            return this;
        }

        public Builder indexName(String indexName) {
            this.indexName = Objects.requireNonNull(indexName);
            return this;
        }

        public Builder indexRotationPeriod(@Nullable DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod indexRotationPeriod) {
            this.indexRotationPeriod = indexRotationPeriod;
            return this;
        }

        public Builder processingConfiguration(@Nullable DeliveryStreamProcessingConfiguration processingConfiguration) {
            this.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder retryOptions(@Nullable DeliveryStreamElasticsearchRetryOptions retryOptions) {
            this.retryOptions = retryOptions;
            return this;
        }

        public Builder roleARN(String roleARN) {
            this.roleARN = Objects.requireNonNull(roleARN);
            return this;
        }

        public Builder s3BackupMode(@Nullable DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode s3BackupMode) {
            this.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder s3Configuration(DeliveryStreamS3DestinationConfiguration s3Configuration) {
            this.s3Configuration = Objects.requireNonNull(s3Configuration);
            return this;
        }

        public Builder typeName(@Nullable String typeName) {
            this.typeName = typeName;
            return this;
        }

        public Builder vpcConfiguration(@Nullable DeliveryStreamVpcConfiguration vpcConfiguration) {
            this.vpcConfiguration = vpcConfiguration;
            return this;
        }
        public DeliveryStreamElasticsearchDestinationConfiguration build() {
            return new DeliveryStreamElasticsearchDestinationConfiguration(bufferingHints, cloudWatchLoggingOptions, clusterEndpoint, domainARN, indexName, indexRotationPeriod, processingConfiguration, retryOptions, roleARN, s3BackupMode, s3Configuration, typeName, vpcConfiguration);
        }
    }
}
