// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.sagemaker;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.sagemaker.PipelineArgs;
import io.pulumi.awsnative.sagemaker.outputs.ParallelismConfigurationProperties;
import io.pulumi.awsnative.sagemaker.outputs.PipelineTag;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::SageMaker::Pipeline
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myPipeline = new AwsNative.SageMaker.Pipeline("myPipeline", new AwsNative.SageMaker.PipelineArgs
 *         {
 *             PipelineName = "<pipeline-name>",
 *             PipelineDisplayName = "<pipeline-display-name>",
 *             PipelineDescription = "<pipeline-description>",
 *             PipelineDefinition = 
 *             {
 *                 { "pipelineDefinitionBody", "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}" },
 *             },
 *             RoleArn = "arn:aws:iam::<account-id>:root",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/sagemaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := sagemaker.NewPipeline(ctx, "myPipeline", &sagemaker.PipelineArgs{
 * 			PipelineName:        pulumi.String("<pipeline-name>"),
 * 			PipelineDisplayName: pulumi.String("<pipeline-display-name>"),
 * 			PipelineDescription: pulumi.String("<pipeline-description>"),
 * 			PipelineDefinition: pulumi.Any{
 * 				PipelineDefinitionBody: "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}",
 * 			},
 * 			RoleArn: pulumi.String("arn:aws:iam::<account-id>:root"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myPipeline = new aws_native.sagemaker.Pipeline("myPipeline", {
 *     pipelineName: "<pipeline-name>",
 *     pipelineDisplayName: "<pipeline-display-name>",
 *     pipelineDescription: "<pipeline-description>",
 *     pipelineDefinition: {
 *         pipelineDefinitionBody: "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}",
 *     },
 *     roleArn: "arn:aws:iam::<account-id>:root",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_pipeline = aws_native.sagemaker.Pipeline("myPipeline",
 *     pipeline_name="<pipeline-name>",
 *     pipeline_display_name="<pipeline-display-name>",
 *     pipeline_description="<pipeline-description>",
 *     pipeline_definition={
 *         "pipelineDefinitionBody": "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}",
 *     },
 *     role_arn="arn:aws:iam::<account-id>:root")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myPipeline = new AwsNative.SageMaker.Pipeline("myPipeline", new AwsNative.SageMaker.PipelineArgs
 *         {
 *             PipelineName = "<pipeline-name>",
 *             PipelineDisplayName = "<pipeline-display-name>",
 *             PipelineDescription = "<pipeline-description>",
 *             PipelineDefinition = 
 *             {
 *                 { "pipelineDefinitionS3Location", 
 *                 {
 *                     { "bucket", "<S3-bucket-location>" },
 *                     { "key", "<S3-bucket-key>" },
 *                 } },
 *             },
 *             RoleArn = "arn:aws:iam::<account-id>:root",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/sagemaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := sagemaker.NewPipeline(ctx, "myPipeline", &sagemaker.PipelineArgs{
 * 			PipelineName:        pulumi.String("<pipeline-name>"),
 * 			PipelineDisplayName: pulumi.String("<pipeline-display-name>"),
 * 			PipelineDescription: pulumi.String("<pipeline-description>"),
 * 			PipelineDefinition: pulumi.Any{
 * 				PipelineDefinitionS3Location: map[string]interface{}{
 * 					"bucket": "<S3-bucket-location>",
 * 					"key":    "<S3-bucket-key>",
 * 				},
 * 			},
 * 			RoleArn: pulumi.String("arn:aws:iam::<account-id>:root"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myPipeline = new aws_native.sagemaker.Pipeline("myPipeline", {
 *     pipelineName: "<pipeline-name>",
 *     pipelineDisplayName: "<pipeline-display-name>",
 *     pipelineDescription: "<pipeline-description>",
 *     pipelineDefinition: {
 *         pipelineDefinitionS3Location: {
 *             bucket: "<S3-bucket-location>",
 *             key: "<S3-bucket-key>",
 *         },
 *     },
 *     roleArn: "arn:aws:iam::<account-id>:root",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_pipeline = aws_native.sagemaker.Pipeline("myPipeline",
 *     pipeline_name="<pipeline-name>",
 *     pipeline_display_name="<pipeline-display-name>",
 *     pipeline_description="<pipeline-description>",
 *     pipeline_definition={
 *         "pipelineDefinitionS3Location": {
 *             "bucket": "<S3-bucket-location>",
 *             "key": "<S3-bucket-key>",
 *         },
 *     },
 *     role_arn="arn:aws:iam::<account-id>:root")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myAwesomePipeline = new AwsNative.SageMaker.Pipeline("myAwesomePipeline", new AwsNative.SageMaker.PipelineArgs
 *         {
 *             PipelineName = "<pipeline-name>",
 *             PipelineDisplayName = "<pipeline-display-name>",
 *             PipelineDescription = "<pipeline-description>",
 *             PipelineDefinition = 
 *             {
 *                 { "pipelineDefinitionBody", "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}" },
 *             },
 *             RoleArn = "arn:aws:iam::<account-id>:root",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/sagemaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := sagemaker.NewPipeline(ctx, "myAwesomePipeline", &sagemaker.PipelineArgs{
 * 			PipelineName:        pulumi.String("<pipeline-name>"),
 * 			PipelineDisplayName: pulumi.String("<pipeline-display-name>"),
 * 			PipelineDescription: pulumi.String("<pipeline-description>"),
 * 			PipelineDefinition: pulumi.Any{
 * 				PipelineDefinitionBody: "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}",
 * 			},
 * 			RoleArn: pulumi.String("arn:aws:iam::<account-id>:root"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myAwesomePipeline = new aws_native.sagemaker.Pipeline("myAwesomePipeline", {
 *     pipelineName: "<pipeline-name>",
 *     pipelineDisplayName: "<pipeline-display-name>",
 *     pipelineDescription: "<pipeline-description>",
 *     pipelineDefinition: {
 *         pipelineDefinitionBody: "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}",
 *     },
 *     roleArn: "arn:aws:iam::<account-id>:root",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_awesome_pipeline = aws_native.sagemaker.Pipeline("myAwesomePipeline",
 *     pipeline_name="<pipeline-name>",
 *     pipeline_display_name="<pipeline-display-name>",
 *     pipeline_description="<pipeline-description>",
 *     pipeline_definition={
 *         "pipelineDefinitionBody": "{\"Version\":\"2020-12-01\",\"Parameters\":[{\"Name\":\"InputDataSource\",\"DefaultValue\":\"\"},{\"Name\":\"InstanceCount\",\"Type\":\"Integer\",\"DefaultValue\":1}],\"Steps\":[{\"Name\":\"Training1\",\"Type\":\"Training\",\"Arguments\":{\"InputDataConfig\":[{\"DataSource\":{\"S3DataSource\":{\"S3Uri\":{\"Get\":\"Parameters.InputDataSource\"}}}}],\"OutputDataConfig\":{\"S3OutputPath\":\"s3://my-s3-bucket/\"},\"ResourceConfig\":{\"InstanceType\":\"ml.m5.large\",\"InstanceCount\":{\"Get\":\"Parameters.InstanceCount\"},\"VolumeSizeInGB\":1024}}}]}",
 *     },
 *     role_arn="arn:aws:iam::<account-id>:root")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myAwesomePipeline = new AwsNative.SageMaker.Pipeline("myAwesomePipeline", new AwsNative.SageMaker.PipelineArgs
 *         {
 *             PipelineName = "<pipeline-name>",
 *             PipelineDisplayName = "<pipeline-display-name>",
 *             PipelineDescription = "<pipeline-description>",
 *             PipelineDefinition = 
 *             {
 *                 { "pipelineDefinitionS3Location", 
 *                 {
 *                     { "bucket", "<S3-bucket-location>" },
 *                     { "key", "<S3-bucket-key>" },
 *                 } },
 *             },
 *             RoleArn = "arn:aws:iam::<account-id>:root",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/sagemaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := sagemaker.NewPipeline(ctx, "myAwesomePipeline", &sagemaker.PipelineArgs{
 * 			PipelineName:        pulumi.String("<pipeline-name>"),
 * 			PipelineDisplayName: pulumi.String("<pipeline-display-name>"),
 * 			PipelineDescription: pulumi.String("<pipeline-description>"),
 * 			PipelineDefinition: pulumi.Any{
 * 				PipelineDefinitionS3Location: map[string]interface{}{
 * 					"bucket": "<S3-bucket-location>",
 * 					"key":    "<S3-bucket-key>",
 * 				},
 * 			},
 * 			RoleArn: pulumi.String("arn:aws:iam::<account-id>:root"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myAwesomePipeline = new aws_native.sagemaker.Pipeline("myAwesomePipeline", {
 *     pipelineName: "<pipeline-name>",
 *     pipelineDisplayName: "<pipeline-display-name>",
 *     pipelineDescription: "<pipeline-description>",
 *     pipelineDefinition: {
 *         pipelineDefinitionS3Location: {
 *             bucket: "<S3-bucket-location>",
 *             key: "<S3-bucket-key>",
 *         },
 *     },
 *     roleArn: "arn:aws:iam::<account-id>:root",
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_awesome_pipeline = aws_native.sagemaker.Pipeline("myAwesomePipeline",
 *     pipeline_name="<pipeline-name>",
 *     pipeline_display_name="<pipeline-display-name>",
 *     pipeline_description="<pipeline-description>",
 *     pipeline_definition={
 *         "pipelineDefinitionS3Location": {
 *             "bucket": "<S3-bucket-location>",
 *             "key": "<S3-bucket-key>",
 *         },
 *     },
 *     role_arn="arn:aws:iam::<account-id>:root")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 */
@ResourceType(type="aws-native:sagemaker:Pipeline")
public class Pipeline extends io.pulumi.resources.CustomResource {
    @Export(name="parallelismConfiguration", type=ParallelismConfigurationProperties.class, parameters={})
    private Output</* @Nullable */ ParallelismConfigurationProperties> parallelismConfiguration;

    public Output</* @Nullable */ ParallelismConfigurationProperties> getParallelismConfiguration() {
        return this.parallelismConfiguration;
    }
    @Export(name="pipelineDefinition", type=Object.class, parameters={})
    private Output<Object> pipelineDefinition;

    public Output<Object> getPipelineDefinition() {
        return this.pipelineDefinition;
    }
    /**
     * The description of the Pipeline.
     */
    @Export(name="pipelineDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> pipelineDescription;

    /**
     * @return The description of the Pipeline.
     */
    public Output</* @Nullable */ String> getPipelineDescription() {
        return this.pipelineDescription;
    }
    /**
     * The display name of the Pipeline.
     */
    @Export(name="pipelineDisplayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> pipelineDisplayName;

    /**
     * @return The display name of the Pipeline.
     */
    public Output</* @Nullable */ String> getPipelineDisplayName() {
        return this.pipelineDisplayName;
    }
    /**
     * The name of the Pipeline.
     */
    @Export(name="pipelineName", type=String.class, parameters={})
    private Output<String> pipelineName;

    /**
     * @return The name of the Pipeline.
     */
    public Output<String> getPipelineName() {
        return this.pipelineName;
    }
    /**
     * Role Arn
     */
    @Export(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    /**
     * @return Role Arn
     */
    public Output<String> getRoleArn() {
        return this.roleArn;
    }
    @Export(name="tags", type=List.class, parameters={PipelineTag.class})
    private Output</* @Nullable */ List<PipelineTag>> tags;

    public Output</* @Nullable */ List<PipelineTag>> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Pipeline(String name) {
        this(name, PipelineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Pipeline(String name, PipelineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Pipeline(String name, PipelineArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:sagemaker:Pipeline", name, args == null ? PipelineArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Pipeline(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:sagemaker:Pipeline", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Pipeline get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Pipeline(name, id, options);
    }
}
