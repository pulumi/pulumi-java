// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The configuration for for customizing service endpoints.
 * 
 */
public final class ProviderEndpointArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProviderEndpointArgs Empty = new ProviderEndpointArgs();

    /**
     * Override the default endpoint for AWS Access Analyzer
     * 
     */
    @InputImport(name="accessanalyzer")
    private final @Nullable Input<String> accessanalyzer;

    public Input<String> getAccessanalyzer() {
        return this.accessanalyzer == null ? Input.empty() : this.accessanalyzer;
    }

    /**
     * Override the default endpoint for AWS Certificate Manager
     * 
     */
    @InputImport(name="acm")
    private final @Nullable Input<String> acm;

    public Input<String> getAcm() {
        return this.acm == null ? Input.empty() : this.acm;
    }

    /**
     * Override the default endpoint for AWS Certificate Manager Private Certificate Authority
     * 
     */
    @InputImport(name="acmpca")
    private final @Nullable Input<String> acmpca;

    public Input<String> getAcmpca() {
        return this.acmpca == null ? Input.empty() : this.acmpca;
    }

    /**
     * Override the default endpoint for AWS Amplify Console
     * 
     */
    @InputImport(name="amplify")
    private final @Nullable Input<String> amplify;

    public Input<String> getAmplify() {
        return this.amplify == null ? Input.empty() : this.amplify;
    }

    /**
     * Override the default endpoint for AWS AppConfig
     * 
     */
    @InputImport(name="appconfig")
    private final @Nullable Input<String> appconfig;

    public Input<String> getAppconfig() {
        return this.appconfig == null ? Input.empty() : this.appconfig;
    }

    /**
     * Override the default endpoint for AWS Application Auto Scaling
     * 
     */
    @InputImport(name="applicationautoscaling")
    private final @Nullable Input<String> applicationautoscaling;

    public Input<String> getApplicationautoscaling() {
        return this.applicationautoscaling == null ? Input.empty() : this.applicationautoscaling;
    }

    /**
     * Override the default endpoint for AWS CloudWatch Application Insights
     * 
     */
    @InputImport(name="applicationinsights")
    private final @Nullable Input<String> applicationinsights;

    public Input<String> getApplicationinsights() {
        return this.applicationinsights == null ? Input.empty() : this.applicationinsights;
    }

    /**
     * Override the default endpoint for AWS App Mesh
     * 
     */
    @InputImport(name="appmesh")
    private final @Nullable Input<String> appmesh;

    public Input<String> getAppmesh() {
        return this.appmesh == null ? Input.empty() : this.appmesh;
    }

    /**
     * Override the default endpoint for AWS App Runner
     * 
     */
    @InputImport(name="apprunner")
    private final @Nullable Input<String> apprunner;

    public Input<String> getApprunner() {
        return this.apprunner == null ? Input.empty() : this.apprunner;
    }

    /**
     * Override the default endpoint for AWS AppStream 2.0
     * 
     */
    @InputImport(name="appstream")
    private final @Nullable Input<String> appstream;

    public Input<String> getAppstream() {
        return this.appstream == null ? Input.empty() : this.appstream;
    }

    /**
     * Override the default endpoint for AWS AppSync
     * 
     */
    @InputImport(name="appsync")
    private final @Nullable Input<String> appsync;

    public Input<String> getAppsync() {
        return this.appsync == null ? Input.empty() : this.appsync;
    }

    /**
     * Override the default endpoint for AWS Athena
     * 
     */
    @InputImport(name="athena")
    private final @Nullable Input<String> athena;

    public Input<String> getAthena() {
        return this.athena == null ? Input.empty() : this.athena;
    }

    /**
     * Override the default endpoint for AWS Audit Manager
     * 
     */
    @InputImport(name="auditmanager")
    private final @Nullable Input<String> auditmanager;

    public Input<String> getAuditmanager() {
        return this.auditmanager == null ? Input.empty() : this.auditmanager;
    }

    /**
     * Override the default endpoint for AWS Auto Scaling
     * 
     */
    @InputImport(name="autoscaling")
    private final @Nullable Input<String> autoscaling;

    public Input<String> getAutoscaling() {
        return this.autoscaling == null ? Input.empty() : this.autoscaling;
    }

    /**
     * Override the default endpoint for AWS Backup
     * 
     */
    @InputImport(name="backup")
    private final @Nullable Input<String> backup;

    public Input<String> getBackup() {
        return this.backup == null ? Input.empty() : this.backup;
    }

    /**
     * Override the default endpoint for AWS Batch
     * 
     */
    @InputImport(name="batch")
    private final @Nullable Input<String> batch;

    public Input<String> getBatch() {
        return this.batch == null ? Input.empty() : this.batch;
    }

    /**
     * Override the default endpoint for AWS Budgets
     * 
     */
    @InputImport(name="budgets")
    private final @Nullable Input<String> budgets;

    public Input<String> getBudgets() {
        return this.budgets == null ? Input.empty() : this.budgets;
    }

    /**
     * Override the default endpoint for Amazon Chime
     * 
     */
    @InputImport(name="chime")
    private final @Nullable Input<String> chime;

    public Input<String> getChime() {
        return this.chime == null ? Input.empty() : this.chime;
    }

    /**
     * Override the default endpoint for AWS Cloud9
     * 
     */
    @InputImport(name="cloud9")
    private final @Nullable Input<String> cloud9;

    public Input<String> getCloud9() {
        return this.cloud9 == null ? Input.empty() : this.cloud9;
    }

    /**
     * Override the default endpoint for AWS CloudFormation
     * 
     */
    @InputImport(name="cloudformation")
    private final @Nullable Input<String> cloudformation;

    public Input<String> getCloudformation() {
        return this.cloudformation == null ? Input.empty() : this.cloudformation;
    }

    /**
     * Override the default endpoint for AWS CloudFront
     * 
     */
    @InputImport(name="cloudfront")
    private final @Nullable Input<String> cloudfront;

    public Input<String> getCloudfront() {
        return this.cloudfront == null ? Input.empty() : this.cloudfront;
    }

    /**
     * Override the default endpoint for AWS CloudHSM
     * 
     */
    @InputImport(name="cloudhsm")
    private final @Nullable Input<String> cloudhsm;

    public Input<String> getCloudhsm() {
        return this.cloudhsm == null ? Input.empty() : this.cloudhsm;
    }

    /**
     * Override the default endpoint for AWS CloudSearch
     * 
     */
    @InputImport(name="cloudsearch")
    private final @Nullable Input<String> cloudsearch;

    public Input<String> getCloudsearch() {
        return this.cloudsearch == null ? Input.empty() : this.cloudsearch;
    }

    /**
     * Override the default endpoint for AWS CloudTrail
     * 
     */
    @InputImport(name="cloudtrail")
    private final @Nullable Input<String> cloudtrail;

    public Input<String> getCloudtrail() {
        return this.cloudtrail == null ? Input.empty() : this.cloudtrail;
    }

    /**
     * Override the default endpoint for AWS CloudWatch
     * 
     */
    @InputImport(name="cloudwatch")
    private final @Nullable Input<String> cloudwatch;

    public Input<String> getCloudwatch() {
        return this.cloudwatch == null ? Input.empty() : this.cloudwatch;
    }

    /**
     * Override the default endpoint for AWS CloudWatch Events
     * 
     */
    @InputImport(name="cloudwatchevents")
    private final @Nullable Input<String> cloudwatchevents;

    public Input<String> getCloudwatchevents() {
        return this.cloudwatchevents == null ? Input.empty() : this.cloudwatchevents;
    }

    /**
     * Override the default endpoint for AWS CloudWatch Logs
     * 
     */
    @InputImport(name="cloudwatchlogs")
    private final @Nullable Input<String> cloudwatchlogs;

    public Input<String> getCloudwatchlogs() {
        return this.cloudwatchlogs == null ? Input.empty() : this.cloudwatchlogs;
    }

    /**
     * Override the default endpoint for AWS CodeArtifact
     * 
     */
    @InputImport(name="codeartifact")
    private final @Nullable Input<String> codeartifact;

    public Input<String> getCodeartifact() {
        return this.codeartifact == null ? Input.empty() : this.codeartifact;
    }

    /**
     * Override the default endpoint for AWS CodeBuild
     * 
     */
    @InputImport(name="codebuild")
    private final @Nullable Input<String> codebuild;

    public Input<String> getCodebuild() {
        return this.codebuild == null ? Input.empty() : this.codebuild;
    }

    /**
     * Override the default endpoint for AWS CodeCommit
     * 
     */
    @InputImport(name="codecommit")
    private final @Nullable Input<String> codecommit;

    public Input<String> getCodecommit() {
        return this.codecommit == null ? Input.empty() : this.codecommit;
    }

    /**
     * Override the default endpoint for AWS CodeDeploy
     * 
     */
    @InputImport(name="codedeploy")
    private final @Nullable Input<String> codedeploy;

    public Input<String> getCodedeploy() {
        return this.codedeploy == null ? Input.empty() : this.codedeploy;
    }

    /**
     * Override the default endpoint for AWS CodePipeline
     * 
     */
    @InputImport(name="codepipeline")
    private final @Nullable Input<String> codepipeline;

    public Input<String> getCodepipeline() {
        return this.codepipeline == null ? Input.empty() : this.codepipeline;
    }

    /**
     * Override the default endpoint for AWS CodeStart Connections
     * 
     */
    @InputImport(name="codestarconnections")
    private final @Nullable Input<String> codestarconnections;

    public Input<String> getCodestarconnections() {
        return this.codestarconnections == null ? Input.empty() : this.codestarconnections;
    }

    /**
     * Override the default endpoint for Amazon Cognito
     * 
     */
    @InputImport(name="cognitoidentity")
    private final @Nullable Input<String> cognitoidentity;

    public Input<String> getCognitoidentity() {
        return this.cognitoidentity == null ? Input.empty() : this.cognitoidentity;
    }

    /**
     * Override the default endpoint for AWS Config
     * 
     */
    @InputImport(name="configservice")
    private final @Nullable Input<String> configservice;

    public Input<String> getConfigservice() {
        return this.configservice == null ? Input.empty() : this.configservice;
    }

    /**
     * Override the default endpoint for Amazon Connect
     * 
     */
    @InputImport(name="connect")
    private final @Nullable Input<String> connect;

    public Input<String> getConnect() {
        return this.connect == null ? Input.empty() : this.connect;
    }

    /**
     * Override the default endpoint for AWS Cost and Usage Reports
     * 
     */
    @InputImport(name="cur")
    private final @Nullable Input<String> cur;

    public Input<String> getCur() {
        return this.cur == null ? Input.empty() : this.cur;
    }

    /**
     * Override the default endpoint for AWS Data Exchange
     * 
     */
    @InputImport(name="dataexchange")
    private final @Nullable Input<String> dataexchange;

    public Input<String> getDataexchange() {
        return this.dataexchange == null ? Input.empty() : this.dataexchange;
    }

    /**
     * Override the default endpoint for AWS Data Pipeline
     * 
     */
    @InputImport(name="datapipeline")
    private final @Nullable Input<String> datapipeline;

    public Input<String> getDatapipeline() {
        return this.datapipeline == null ? Input.empty() : this.datapipeline;
    }

    /**
     * Override the default endpoint for AWS DataSync
     * 
     */
    @InputImport(name="datasync")
    private final @Nullable Input<String> datasync;

    public Input<String> getDatasync() {
        return this.datasync == null ? Input.empty() : this.datasync;
    }

    /**
     * Override the default endpoint for AWS DynamoDB Accelerator
     * 
     */
    @InputImport(name="dax")
    private final @Nullable Input<String> dax;

    public Input<String> getDax() {
        return this.dax == null ? Input.empty() : this.dax;
    }

    /**
     * Override the default endpoint for AWS Detective
     * 
     */
    @InputImport(name="detective")
    private final @Nullable Input<String> detective;

    public Input<String> getDetective() {
        return this.detective == null ? Input.empty() : this.detective;
    }

    /**
     * Override the default endpoint for AWS Device Farm
     * 
     */
    @InputImport(name="devicefarm")
    private final @Nullable Input<String> devicefarm;

    public Input<String> getDevicefarm() {
        return this.devicefarm == null ? Input.empty() : this.devicefarm;
    }

    /**
     * Override the default endpoint for AWS Direct Connect
     * 
     */
    @InputImport(name="directconnect")
    private final @Nullable Input<String> directconnect;

    public Input<String> getDirectconnect() {
        return this.directconnect == null ? Input.empty() : this.directconnect;
    }

    /**
     * Override the default endpoint for AWS Data Lifecycle Manager
     * 
     */
    @InputImport(name="dlm")
    private final @Nullable Input<String> dlm;

    public Input<String> getDlm() {
        return this.dlm == null ? Input.empty() : this.dlm;
    }

    /**
     * Override the default endpoint for AWS Database Migration Service
     * 
     */
    @InputImport(name="dms")
    private final @Nullable Input<String> dms;

    public Input<String> getDms() {
        return this.dms == null ? Input.empty() : this.dms;
    }

    /**
     * Override the default endpoint for AWS DocumentDB
     * 
     */
    @InputImport(name="docdb")
    private final @Nullable Input<String> docdb;

    public Input<String> getDocdb() {
        return this.docdb == null ? Input.empty() : this.docdb;
    }

    /**
     * Override the default endpoint for AWS Directory Service
     * 
     */
    @InputImport(name="ds")
    private final @Nullable Input<String> ds;

    public Input<String> getDs() {
        return this.ds == null ? Input.empty() : this.ds;
    }

    /**
     * Override the default endpoint for AWS DynamoDB
     * 
     */
    @InputImport(name="dynamodb")
    private final @Nullable Input<String> dynamodb;

    public Input<String> getDynamodb() {
        return this.dynamodb == null ? Input.empty() : this.dynamodb;
    }

    /**
     * Override the default endpoint for AWS Elastic Compute Cloud (EC2)
     * 
     */
    @InputImport(name="ec2")
    private final @Nullable Input<String> ec2;

    public Input<String> getEc2() {
        return this.ec2 == null ? Input.empty() : this.ec2;
    }

    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR)
     * 
     */
    @InputImport(name="ecr")
    private final @Nullable Input<String> ecr;

    public Input<String> getEcr() {
        return this.ecr == null ? Input.empty() : this.ecr;
    }

    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR) Public
     * 
     */
    @InputImport(name="ecrpublic")
    private final @Nullable Input<String> ecrpublic;

    public Input<String> getEcrpublic() {
        return this.ecrpublic == null ? Input.empty() : this.ecrpublic;
    }

    /**
     * Override the default endpoint for AWS Elastic Container Service (ECS)
     * 
     */
    @InputImport(name="ecs")
    private final @Nullable Input<String> ecs;

    public Input<String> getEcs() {
        return this.ecs == null ? Input.empty() : this.ecs;
    }

    /**
     * Override the default endpoint for AWS Elastic File System (EFS)
     * 
     */
    @InputImport(name="efs")
    private final @Nullable Input<String> efs;

    public Input<String> getEfs() {
        return this.efs == null ? Input.empty() : this.efs;
    }

    /**
     * Override the default endpoint for AWS Elastic Kubernetes Service (EKS)
     * 
     */
    @InputImport(name="eks")
    private final @Nullable Input<String> eks;

    public Input<String> getEks() {
        return this.eks == null ? Input.empty() : this.eks;
    }

    /**
     * Override the default endpoint for AWS ElastiCache
     * 
     */
    @InputImport(name="elasticache")
    private final @Nullable Input<String> elasticache;

    public Input<String> getElasticache() {
        return this.elasticache == null ? Input.empty() : this.elasticache;
    }

    /**
     * Override the default endpoint for AWS Elastic Beanstalk
     * 
     */
    @InputImport(name="elasticbeanstalk")
    private final @Nullable Input<String> elasticbeanstalk;

    public Input<String> getElasticbeanstalk() {
        return this.elasticbeanstalk == null ? Input.empty() : this.elasticbeanstalk;
    }

    /**
     * Override the default endpoint for AWS Elastic Transcoder
     * 
     */
    @InputImport(name="elastictranscoder")
    private final @Nullable Input<String> elastictranscoder;

    public Input<String> getElastictranscoder() {
        return this.elastictranscoder == null ? Input.empty() : this.elastictranscoder;
    }

    /**
     * Override the default endpoint for AWS Elastic Load Balancing
     * 
     */
    @InputImport(name="elb")
    private final @Nullable Input<String> elb;

    public Input<String> getElb() {
        return this.elb == null ? Input.empty() : this.elb;
    }

    /**
     * Override the default endpoint for AWS Elastic Load Balancing V2
     * 
     */
    @InputImport(name="elbv2")
    private final @Nullable Input<String> elbv2;

    public Input<String> getElbv2() {
        return this.elbv2 == null ? Input.empty() : this.elbv2;
    }

    /**
     * Override the default endpoint for AWS EMR
     * 
     */
    @InputImport(name="emr")
    private final @Nullable Input<String> emr;

    public Input<String> getEmr() {
        return this.emr == null ? Input.empty() : this.emr;
    }

    /**
     * Override the default endpoint for AWS EMR on EKS
     * 
     */
    @InputImport(name="emrcontainers")
    private final @Nullable Input<String> emrcontainers;

    public Input<String> getEmrcontainers() {
        return this.emrcontainers == null ? Input.empty() : this.emrcontainers;
    }

    /**
     * Override the default endpoint for AWS OpenSearch Service (formerly Elasticsearch)
     * 
     */
    @InputImport(name="es")
    private final @Nullable Input<String> es;

    public Input<String> getEs() {
        return this.es == null ? Input.empty() : this.es;
    }

    /**
     * Override the default endpoint for AWS Kinesis Data Firehose
     * 
     */
    @InputImport(name="firehose")
    private final @Nullable Input<String> firehose;

    public Input<String> getFirehose() {
        return this.firehose == null ? Input.empty() : this.firehose;
    }

    /**
     * Override the default endpoint for AWS Firewall Manager
     * 
     */
    @InputImport(name="fms")
    private final @Nullable Input<String> fms;

    public Input<String> getFms() {
        return this.fms == null ? Input.empty() : this.fms;
    }

    /**
     * Override the default endpoint for Amazon Forecast
     * 
     */
    @InputImport(name="forecast")
    private final @Nullable Input<String> forecast;

    public Input<String> getForecast() {
        return this.forecast == null ? Input.empty() : this.forecast;
    }

    /**
     * Override the default endpoint for AWS FSx
     * 
     */
    @InputImport(name="fsx")
    private final @Nullable Input<String> fsx;

    public Input<String> getFsx() {
        return this.fsx == null ? Input.empty() : this.fsx;
    }

    /**
     * Override the default endpoint for AWS GameLift
     * 
     */
    @InputImport(name="gamelift")
    private final @Nullable Input<String> gamelift;

    public Input<String> getGamelift() {
        return this.gamelift == null ? Input.empty() : this.gamelift;
    }

    /**
     * Override the default endpoint for Amazon S3 Glacier
     * 
     */
    @InputImport(name="glacier")
    private final @Nullable Input<String> glacier;

    public Input<String> getGlacier() {
        return this.glacier == null ? Input.empty() : this.glacier;
    }

    /**
     * Override the default endpoint for AWS Global Accelerator
     * 
     */
    @InputImport(name="globalaccelerator")
    private final @Nullable Input<String> globalaccelerator;

    public Input<String> getGlobalaccelerator() {
        return this.globalaccelerator == null ? Input.empty() : this.globalaccelerator;
    }

    /**
     * Override the default endpoint for AWS Glue
     * 
     */
    @InputImport(name="glue")
    private final @Nullable Input<String> glue;

    public Input<String> getGlue() {
        return this.glue == null ? Input.empty() : this.glue;
    }

    /**
     * Override the default endpoint for AWS IoT Greengrass
     * 
     */
    @InputImport(name="greengrass")
    private final @Nullable Input<String> greengrass;

    public Input<String> getGreengrass() {
        return this.greengrass == null ? Input.empty() : this.greengrass;
    }

    /**
     * Override the default endpoint for AWS GuardDuty
     * 
     */
    @InputImport(name="guardduty")
    private final @Nullable Input<String> guardduty;

    public Input<String> getGuardduty() {
        return this.guardduty == null ? Input.empty() : this.guardduty;
    }

    /**
     * Override the default endpoint for AWS Identity and Access Management
     * 
     */
    @InputImport(name="iam")
    private final @Nullable Input<String> iam;

    public Input<String> getIam() {
        return this.iam == null ? Input.empty() : this.iam;
    }

    /**
     * Override the default endpoint for AWS Single Sign-On (SSO) Identity Store
     * 
     */
    @InputImport(name="identitystore")
    private final @Nullable Input<String> identitystore;

    public Input<String> getIdentitystore() {
        return this.identitystore == null ? Input.empty() : this.identitystore;
    }

    /**
     * Override the default endpoint for AWS Image Builder
     * 
     */
    @InputImport(name="imagebuilder")
    private final @Nullable Input<String> imagebuilder;

    public Input<String> getImagebuilder() {
        return this.imagebuilder == null ? Input.empty() : this.imagebuilder;
    }

    /**
     * Override the default endpoint for Amazon Inspector
     * 
     */
    @InputImport(name="inspector")
    private final @Nullable Input<String> inspector;

    public Input<String> getInspector() {
        return this.inspector == null ? Input.empty() : this.inspector;
    }

    /**
     * Override the default endpoint for AWS IoT
     * 
     */
    @InputImport(name="iot")
    private final @Nullable Input<String> iot;

    public Input<String> getIot() {
        return this.iot == null ? Input.empty() : this.iot;
    }

    /**
     * Override the default endpoint for AWS IoT Analytics
     * 
     */
    @InputImport(name="iotanalytics")
    private final @Nullable Input<String> iotanalytics;

    public Input<String> getIotanalytics() {
        return this.iotanalytics == null ? Input.empty() : this.iotanalytics;
    }

    /**
     * Override the default endpoint for AWS IoT Events
     * 
     */
    @InputImport(name="iotevents")
    private final @Nullable Input<String> iotevents;

    public Input<String> getIotevents() {
        return this.iotevents == null ? Input.empty() : this.iotevents;
    }

    /**
     * Override the default endpoint for Amazon Managed Streaming for Apache Kafka (MSK)
     * 
     */
    @InputImport(name="kafka")
    private final @Nullable Input<String> kafka;

    public Input<String> getKafka() {
        return this.kafka == null ? Input.empty() : this.kafka;
    }

    /**
     * Override the default endpoint for Amazon Kinesis
     * 
     */
    @InputImport(name="kinesis")
    private final @Nullable Input<String> kinesis;

    public Input<String> getKinesis() {
        return this.kinesis == null ? Input.empty() : this.kinesis;
    }

    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics
     * 
     */
    @InputImport(name="kinesisanalytics")
    private final @Nullable Input<String> kinesisanalytics;

    public Input<String> getKinesisanalytics() {
        return this.kinesisanalytics == null ? Input.empty() : this.kinesisanalytics;
    }

    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics V2
     * 
     */
    @InputImport(name="kinesisanalyticsv2")
    private final @Nullable Input<String> kinesisanalyticsv2;

    public Input<String> getKinesisanalyticsv2() {
        return this.kinesisanalyticsv2 == null ? Input.empty() : this.kinesisanalyticsv2;
    }

    /**
     * Override the default endpoint for Amazon Kinesis Video Streams
     * 
     */
    @InputImport(name="kinesisvideo")
    private final @Nullable Input<String> kinesisvideo;

    public Input<String> getKinesisvideo() {
        return this.kinesisvideo == null ? Input.empty() : this.kinesisvideo;
    }

    /**
     * Override the default endpoint for AWS Key Management Service
     * 
     */
    @InputImport(name="kms")
    private final @Nullable Input<String> kms;

    public Input<String> getKms() {
        return this.kms == null ? Input.empty() : this.kms;
    }

    /**
     * Override the default endpoint for AWS Lake Formation
     * 
     */
    @InputImport(name="lakeformation")
    private final @Nullable Input<String> lakeformation;

    public Input<String> getLakeformation() {
        return this.lakeformation == null ? Input.empty() : this.lakeformation;
    }

    /**
     * Override the default endpoint for AWS Lambda
     * 
     */
    @InputImport(name="lambda")
    private final @Nullable Input<String> lambda;

    public Input<String> getLambda() {
        return this.lambda == null ? Input.empty() : this.lambda;
    }

    /**
     * Override the default endpoint for Amazon Lex
     * 
     */
    @InputImport(name="lexmodels")
    private final @Nullable Input<String> lexmodels;

    public Input<String> getLexmodels() {
        return this.lexmodels == null ? Input.empty() : this.lexmodels;
    }

    /**
     * Override the default endpoint for AWS License Manager
     * 
     */
    @InputImport(name="licensemanager")
    private final @Nullable Input<String> licensemanager;

    public Input<String> getLicensemanager() {
        return this.licensemanager == null ? Input.empty() : this.licensemanager;
    }

    /**
     * Override the default endpoint for Amazon Lightsail
     * 
     */
    @InputImport(name="lightsail")
    private final @Nullable Input<String> lightsail;

    public Input<String> getLightsail() {
        return this.lightsail == null ? Input.empty() : this.lightsail;
    }

    /**
     * Override the default endpoint for Amazon Location
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Override the default endpoint for Amazon Macie
     * 
     */
    @InputImport(name="macie")
    private final @Nullable Input<String> macie;

    public Input<String> getMacie() {
        return this.macie == null ? Input.empty() : this.macie;
    }

    /**
     * Override the default endpoint for Amazon Macie V2
     * 
     */
    @InputImport(name="macie2")
    private final @Nullable Input<String> macie2;

    public Input<String> getMacie2() {
        return this.macie2 == null ? Input.empty() : this.macie2;
    }

    /**
     * Override the default endpoint for Amazon Managed Blockchain
     * 
     */
    @InputImport(name="managedblockchain")
    private final @Nullable Input<String> managedblockchain;

    public Input<String> getManagedblockchain() {
        return this.managedblockchain == null ? Input.empty() : this.managedblockchain;
    }

    /**
     * Override the default endpoint for AWS Marketplace Catalog
     * 
     */
    @InputImport(name="marketplacecatalog")
    private final @Nullable Input<String> marketplacecatalog;

    public Input<String> getMarketplacecatalog() {
        return this.marketplacecatalog == null ? Input.empty() : this.marketplacecatalog;
    }

    /**
     * Override the default endpoint for AWS MediaConnect
     * 
     */
    @InputImport(name="mediaconnect")
    private final @Nullable Input<String> mediaconnect;

    public Input<String> getMediaconnect() {
        return this.mediaconnect == null ? Input.empty() : this.mediaconnect;
    }

    /**
     * Override the default endpoint for AWS MediaConvert
     * 
     */
    @InputImport(name="mediaconvert")
    private final @Nullable Input<String> mediaconvert;

    public Input<String> getMediaconvert() {
        return this.mediaconvert == null ? Input.empty() : this.mediaconvert;
    }

    /**
     * Override the default endpoint for AWS MediaLive
     * 
     */
    @InputImport(name="medialive")
    private final @Nullable Input<String> medialive;

    public Input<String> getMedialive() {
        return this.medialive == null ? Input.empty() : this.medialive;
    }

    /**
     * Override the default endpoint for AWS MediaPackage
     * 
     */
    @InputImport(name="mediapackage")
    private final @Nullable Input<String> mediapackage;

    public Input<String> getMediapackage() {
        return this.mediapackage == null ? Input.empty() : this.mediapackage;
    }

    /**
     * Override the default endpoint for AWS Elemental MediaStore container
     * 
     */
    @InputImport(name="mediastore")
    private final @Nullable Input<String> mediastore;

    public Input<String> getMediastore() {
        return this.mediastore == null ? Input.empty() : this.mediastore;
    }

    /**
     * Override the default endpoint for AWS Elemental MediaStore asset
     * 
     */
    @InputImport(name="mediastoredata")
    private final @Nullable Input<String> mediastoredata;

    public Input<String> getMediastoredata() {
        return this.mediastoredata == null ? Input.empty() : this.mediastoredata;
    }

    /**
     * Override the default endpoint for AWS MemoryDB for Redis
     * 
     */
    @InputImport(name="memorydb")
    private final @Nullable Input<String> memorydb;

    public Input<String> getMemorydb() {
        return this.memorydb == null ? Input.empty() : this.memorydb;
    }

    /**
     * Override the default endpoint for Amazon MQ
     * 
     */
    @InputImport(name="mq")
    private final @Nullable Input<String> mq;

    public Input<String> getMq() {
        return this.mq == null ? Input.empty() : this.mq;
    }

    /**
     * Override the default endpoint for Amazon Managed Workflows for Apache Airflow
     * 
     */
    @InputImport(name="mwaa")
    private final @Nullable Input<String> mwaa;

    public Input<String> getMwaa() {
        return this.mwaa == null ? Input.empty() : this.mwaa;
    }

    /**
     * Override the default endpoint for Amazon Neptune
     * 
     */
    @InputImport(name="neptune")
    private final @Nullable Input<String> neptune;

    public Input<String> getNeptune() {
        return this.neptune == null ? Input.empty() : this.neptune;
    }

    /**
     * Override the default endpoint for AWS Network Firewall
     * 
     */
    @InputImport(name="networkfirewall")
    private final @Nullable Input<String> networkfirewall;

    public Input<String> getNetworkfirewall() {
        return this.networkfirewall == null ? Input.empty() : this.networkfirewall;
    }

    /**
     * Override the default endpoint for AWS Network Manager
     * 
     */
    @InputImport(name="networkmanager")
    private final @Nullable Input<String> networkmanager;

    public Input<String> getNetworkmanager() {
        return this.networkmanager == null ? Input.empty() : this.networkmanager;
    }

    /**
     * Override the default endpoint for AWS OpsWorks
     * 
     */
    @InputImport(name="opsworks")
    private final @Nullable Input<String> opsworks;

    public Input<String> getOpsworks() {
        return this.opsworks == null ? Input.empty() : this.opsworks;
    }

    /**
     * Override the default endpoint for AWS Organizations
     * 
     */
    @InputImport(name="organizations")
    private final @Nullable Input<String> organizations;

    public Input<String> getOrganizations() {
        return this.organizations == null ? Input.empty() : this.organizations;
    }

    /**
     * Override the default endpoint for AWS Outposts
     * 
     */
    @InputImport(name="outposts")
    private final @Nullable Input<String> outposts;

    public Input<String> getOutposts() {
        return this.outposts == null ? Input.empty() : this.outposts;
    }

    /**
     * Override the default endpoint for Amazon Personalize
     * 
     */
    @InputImport(name="personalize")
    private final @Nullable Input<String> personalize;

    public Input<String> getPersonalize() {
        return this.personalize == null ? Input.empty() : this.personalize;
    }

    /**
     * Override the default endpoint for Amazon Pinpoint
     * 
     */
    @InputImport(name="pinpoint")
    private final @Nullable Input<String> pinpoint;

    public Input<String> getPinpoint() {
        return this.pinpoint == null ? Input.empty() : this.pinpoint;
    }

    /**
     * Override the default endpoint for Amazon Web Services Price List Service
     * 
     */
    @InputImport(name="pricing")
    private final @Nullable Input<String> pricing;

    public Input<String> getPricing() {
        return this.pricing == null ? Input.empty() : this.pricing;
    }

    /**
     * Override the default endpoint for Amazon QLDB
     * 
     */
    @InputImport(name="qldb")
    private final @Nullable Input<String> qldb;

    public Input<String> getQldb() {
        return this.qldb == null ? Input.empty() : this.qldb;
    }

    /**
     * Override the default endpoint for Amazon QuickSight
     * 
     */
    @InputImport(name="quicksight")
    private final @Nullable Input<String> quicksight;

    public Input<String> getQuicksight() {
        return this.quicksight == null ? Input.empty() : this.quicksight;
    }

    /**
     * Override the default endpoint for AWS Resource Access Manager
     * 
     */
    @InputImport(name="ram")
    private final @Nullable Input<String> ram;

    public Input<String> getRam() {
        return this.ram == null ? Input.empty() : this.ram;
    }

    /**
     * Override the default endpoint for Amazon Relational Database Service
     * 
     */
    @InputImport(name="rds")
    private final @Nullable Input<String> rds;

    public Input<String> getRds() {
        return this.rds == null ? Input.empty() : this.rds;
    }

    /**
     * Override the default endpoint for Amazon Redshift
     * 
     */
    @InputImport(name="redshift")
    private final @Nullable Input<String> redshift;

    public Input<String> getRedshift() {
        return this.redshift == null ? Input.empty() : this.redshift;
    }

    /**
     * Override the default endpoint for AWS Resource Groups
     * 
     */
    @InputImport(name="resourcegroups")
    private final @Nullable Input<String> resourcegroups;

    public Input<String> getResourcegroups() {
        return this.resourcegroups == null ? Input.empty() : this.resourcegroups;
    }

    /**
     * Override the default endpoint for AWS Resource Groups Tagging API
     * 
     */
    @InputImport(name="resourcegroupstaggingapi")
    private final @Nullable Input<String> resourcegroupstaggingapi;

    public Input<String> getResourcegroupstaggingapi() {
        return this.resourcegroupstaggingapi == null ? Input.empty() : this.resourcegroupstaggingapi;
    }

    /**
     * Override the default endpoint for Amazon Route 53
     * 
     */
    @InputImport(name="route53")
    private final @Nullable Input<String> route53;

    public Input<String> getRoute53() {
        return this.route53 == null ? Input.empty() : this.route53;
    }

    /**
     * Override the default endpoint for Amazon Route 53 Domains
     * 
     */
    @InputImport(name="route53domains")
    private final @Nullable Input<String> route53domains;

    public Input<String> getRoute53domains() {
        return this.route53domains == null ? Input.empty() : this.route53domains;
    }

    /**
     * Override the default endpoint for Amazon Route 53 Recovery Control
     * 
     */
    @InputImport(name="route53recoverycontrolconfig")
    private final @Nullable Input<String> route53recoverycontrolconfig;

    public Input<String> getRoute53recoverycontrolconfig() {
        return this.route53recoverycontrolconfig == null ? Input.empty() : this.route53recoverycontrolconfig;
    }

    /**
     * Override the default endpoint for Amazon Route 53 Recovery Readiness
     * 
     */
    @InputImport(name="route53recoveryreadiness")
    private final @Nullable Input<String> route53recoveryreadiness;

    public Input<String> getRoute53recoveryreadiness() {
        return this.route53recoveryreadiness == null ? Input.empty() : this.route53recoveryreadiness;
    }

    /**
     * Override the default endpoint for Amazon Route 53 Resolver
     * 
     */
    @InputImport(name="route53resolver")
    private final @Nullable Input<String> route53resolver;

    public Input<String> getRoute53resolver() {
        return this.route53resolver == null ? Input.empty() : this.route53resolver;
    }

    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3)
     * 
     */
    @InputImport(name="s3")
    private final @Nullable Input<String> s3;

    public Input<String> getS3() {
        return this.s3 == null ? Input.empty() : this.s3;
    }

    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3) Control
     * 
     */
    @InputImport(name="s3control")
    private final @Nullable Input<String> s3control;

    public Input<String> getS3control() {
        return this.s3control == null ? Input.empty() : this.s3control;
    }

    /**
     * Override the default endpoint for Amazon S3 on Outposts
     * 
     */
    @InputImport(name="s3outposts")
    private final @Nullable Input<String> s3outposts;

    public Input<String> getS3outposts() {
        return this.s3outposts == null ? Input.empty() : this.s3outposts;
    }

    /**
     * Override the default endpoint for AWS SageMaker
     * 
     */
    @InputImport(name="sagemaker")
    private final @Nullable Input<String> sagemaker;

    public Input<String> getSagemaker() {
        return this.sagemaker == null ? Input.empty() : this.sagemaker;
    }

    /**
     * Override the default endpoint for Amazon EventBridge Schema Registry
     * 
     */
    @InputImport(name="schemas")
    private final @Nullable Input<String> schemas;

    public Input<String> getSchemas() {
        return this.schemas == null ? Input.empty() : this.schemas;
    }

    /**
     * Override the default endpoint for Amazon SimpleDB
     * 
     */
    @InputImport(name="sdb")
    private final @Nullable Input<String> sdb;

    public Input<String> getSdb() {
        return this.sdb == null ? Input.empty() : this.sdb;
    }

    /**
     * Override the default endpoint for AWS Secrets Manager
     * 
     */
    @InputImport(name="secretsmanager")
    private final @Nullable Input<String> secretsmanager;

    public Input<String> getSecretsmanager() {
        return this.secretsmanager == null ? Input.empty() : this.secretsmanager;
    }

    /**
     * Override the default endpoint for AWS Security Hub
     * 
     */
    @InputImport(name="securityhub")
    private final @Nullable Input<String> securityhub;

    public Input<String> getSecurityhub() {
        return this.securityhub == null ? Input.empty() : this.securityhub;
    }

    /**
     * Override the default endpoint for AWS Serverless Application Repository
     * 
     */
    @InputImport(name="serverlessrepo")
    private final @Nullable Input<String> serverlessrepo;

    public Input<String> getServerlessrepo() {
        return this.serverlessrepo == null ? Input.empty() : this.serverlessrepo;
    }

    /**
     * Override the default endpoint for AWS Service Catalog
     * 
     */
    @InputImport(name="servicecatalog")
    private final @Nullable Input<String> servicecatalog;

    public Input<String> getServicecatalog() {
        return this.servicecatalog == null ? Input.empty() : this.servicecatalog;
    }

    /**
     * Override the default endpoint for AWS Cloud Map
     * 
     */
    @InputImport(name="servicediscovery")
    private final @Nullable Input<String> servicediscovery;

    public Input<String> getServicediscovery() {
        return this.servicediscovery == null ? Input.empty() : this.servicediscovery;
    }

    /**
     * Override the default endpoint for AWS Service Quotas
     * 
     */
    @InputImport(name="servicequotas")
    private final @Nullable Input<String> servicequotas;

    public Input<String> getServicequotas() {
        return this.servicequotas == null ? Input.empty() : this.servicequotas;
    }

    /**
     * Override the default endpoint for Amazon Simple Email Service (SES)
     * 
     */
    @InputImport(name="ses")
    private final @Nullable Input<String> ses;

    public Input<String> getSes() {
        return this.ses == null ? Input.empty() : this.ses;
    }

    /**
     * Override the default endpoint for AWS Shield Advanced API
     * 
     */
    @InputImport(name="shield")
    private final @Nullable Input<String> shield;

    public Input<String> getShield() {
        return this.shield == null ? Input.empty() : this.shield;
    }

    /**
     * Override the default endpoint for AWS Signer
     * 
     */
    @InputImport(name="signer")
    private final @Nullable Input<String> signer;

    public Input<String> getSigner() {
        return this.signer == null ? Input.empty() : this.signer;
    }

    /**
     * Override the default endpoint for Amazon Simple Notification Service (SNS)
     * 
     */
    @InputImport(name="sns")
    private final @Nullable Input<String> sns;

    public Input<String> getSns() {
        return this.sns == null ? Input.empty() : this.sns;
    }

    /**
     * Override the default endpoint for Amazon Simple Queue Service (SQS)
     * 
     */
    @InputImport(name="sqs")
    private final @Nullable Input<String> sqs;

    public Input<String> getSqs() {
        return this.sqs == null ? Input.empty() : this.sqs;
    }

    /**
     * Override the default endpoint for AWS Systems Manager
     * 
     */
    @InputImport(name="ssm")
    private final @Nullable Input<String> ssm;

    public Input<String> getSsm() {
        return this.ssm == null ? Input.empty() : this.ssm;
    }

    /**
     * Override the default endpoint for AWS Single Sign On (SSO)
     * 
     */
    @InputImport(name="ssoadmin")
    private final @Nullable Input<String> ssoadmin;

    public Input<String> getSsoadmin() {
        return this.ssoadmin == null ? Input.empty() : this.ssoadmin;
    }

    /**
     * Override the default endpoint for AWS Step Functions
     * 
     */
    @InputImport(name="stepfunctions")
    private final @Nullable Input<String> stepfunctions;

    public Input<String> getStepfunctions() {
        return this.stepfunctions == null ? Input.empty() : this.stepfunctions;
    }

    /**
     * Override the default endpoint for AWS Storage Gateway
     * 
     */
    @InputImport(name="storagegateway")
    private final @Nullable Input<String> storagegateway;

    public Input<String> getStoragegateway() {
        return this.storagegateway == null ? Input.empty() : this.storagegateway;
    }

    /**
     * Override the default endpoint for AWS Security Token Service (STS)
     * 
     */
    @InputImport(name="sts")
    private final @Nullable Input<String> sts;

    public Input<String> getSts() {
        return this.sts == null ? Input.empty() : this.sts;
    }

    /**
     * Override the default endpoint for Amazon Simple Workflow Service (SWF)
     * 
     */
    @InputImport(name="swf")
    private final @Nullable Input<String> swf;

    public Input<String> getSwf() {
        return this.swf == null ? Input.empty() : this.swf;
    }

    /**
     * Override the default endpoint for Amazon CloudWatch Synthetics
     * 
     */
    @InputImport(name="synthetics")
    private final @Nullable Input<String> synthetics;

    public Input<String> getSynthetics() {
        return this.synthetics == null ? Input.empty() : this.synthetics;
    }

    /**
     * Override the default endpoint for Amazon Timestream
     * 
     */
    @InputImport(name="timestreamwrite")
    private final @Nullable Input<String> timestreamwrite;

    public Input<String> getTimestreamwrite() {
        return this.timestreamwrite == null ? Input.empty() : this.timestreamwrite;
    }

    /**
     * Override the default endpoint for AWS Transfer Family
     * 
     */
    @InputImport(name="transfer")
    private final @Nullable Input<String> transfer;

    public Input<String> getTransfer() {
        return this.transfer == null ? Input.empty() : this.transfer;
    }

    /**
     * Override the default endpoint for AWS WAF Classic
     * 
     */
    @InputImport(name="waf")
    private final @Nullable Input<String> waf;

    public Input<String> getWaf() {
        return this.waf == null ? Input.empty() : this.waf;
    }

    /**
     * Override the default endpoint for AWS WAF Regional Classic
     * 
     */
    @InputImport(name="wafregional")
    private final @Nullable Input<String> wafregional;

    public Input<String> getWafregional() {
        return this.wafregional == null ? Input.empty() : this.wafregional;
    }

    /**
     * Override the default endpoint for AWS WAF V2
     * 
     */
    @InputImport(name="wafv2")
    private final @Nullable Input<String> wafv2;

    public Input<String> getWafv2() {
        return this.wafv2 == null ? Input.empty() : this.wafv2;
    }

    /**
     * Override the default endpoint for Amazon WorkLink
     * 
     */
    @InputImport(name="worklink")
    private final @Nullable Input<String> worklink;

    public Input<String> getWorklink() {
        return this.worklink == null ? Input.empty() : this.worklink;
    }

    /**
     * Override the default endpoint for Amazon WorkMail
     * 
     */
    @InputImport(name="workmail")
    private final @Nullable Input<String> workmail;

    public Input<String> getWorkmail() {
        return this.workmail == null ? Input.empty() : this.workmail;
    }

    /**
     * Override the default endpoint for Amazon WorkSpaces
     * 
     */
    @InputImport(name="workspaces")
    private final @Nullable Input<String> workspaces;

    public Input<String> getWorkspaces() {
        return this.workspaces == null ? Input.empty() : this.workspaces;
    }

    /**
     * Override the default endpoint for AWS X-Ray
     * 
     */
    @InputImport(name="xray")
    private final @Nullable Input<String> xray;

    public Input<String> getXray() {
        return this.xray == null ? Input.empty() : this.xray;
    }

    public ProviderEndpointArgs(
        @Nullable Input<String> accessanalyzer,
        @Nullable Input<String> acm,
        @Nullable Input<String> acmpca,
        @Nullable Input<String> amplify,
        @Nullable Input<String> appconfig,
        @Nullable Input<String> applicationautoscaling,
        @Nullable Input<String> applicationinsights,
        @Nullable Input<String> appmesh,
        @Nullable Input<String> apprunner,
        @Nullable Input<String> appstream,
        @Nullable Input<String> appsync,
        @Nullable Input<String> athena,
        @Nullable Input<String> auditmanager,
        @Nullable Input<String> autoscaling,
        @Nullable Input<String> backup,
        @Nullable Input<String> batch,
        @Nullable Input<String> budgets,
        @Nullable Input<String> chime,
        @Nullable Input<String> cloud9,
        @Nullable Input<String> cloudformation,
        @Nullable Input<String> cloudfront,
        @Nullable Input<String> cloudhsm,
        @Nullable Input<String> cloudsearch,
        @Nullable Input<String> cloudtrail,
        @Nullable Input<String> cloudwatch,
        @Nullable Input<String> cloudwatchevents,
        @Nullable Input<String> cloudwatchlogs,
        @Nullable Input<String> codeartifact,
        @Nullable Input<String> codebuild,
        @Nullable Input<String> codecommit,
        @Nullable Input<String> codedeploy,
        @Nullable Input<String> codepipeline,
        @Nullable Input<String> codestarconnections,
        @Nullable Input<String> cognitoidentity,
        @Nullable Input<String> configservice,
        @Nullable Input<String> connect,
        @Nullable Input<String> cur,
        @Nullable Input<String> dataexchange,
        @Nullable Input<String> datapipeline,
        @Nullable Input<String> datasync,
        @Nullable Input<String> dax,
        @Nullable Input<String> detective,
        @Nullable Input<String> devicefarm,
        @Nullable Input<String> directconnect,
        @Nullable Input<String> dlm,
        @Nullable Input<String> dms,
        @Nullable Input<String> docdb,
        @Nullable Input<String> ds,
        @Nullable Input<String> dynamodb,
        @Nullable Input<String> ec2,
        @Nullable Input<String> ecr,
        @Nullable Input<String> ecrpublic,
        @Nullable Input<String> ecs,
        @Nullable Input<String> efs,
        @Nullable Input<String> eks,
        @Nullable Input<String> elasticache,
        @Nullable Input<String> elasticbeanstalk,
        @Nullable Input<String> elastictranscoder,
        @Nullable Input<String> elb,
        @Nullable Input<String> elbv2,
        @Nullable Input<String> emr,
        @Nullable Input<String> emrcontainers,
        @Nullable Input<String> es,
        @Nullable Input<String> firehose,
        @Nullable Input<String> fms,
        @Nullable Input<String> forecast,
        @Nullable Input<String> fsx,
        @Nullable Input<String> gamelift,
        @Nullable Input<String> glacier,
        @Nullable Input<String> globalaccelerator,
        @Nullable Input<String> glue,
        @Nullable Input<String> greengrass,
        @Nullable Input<String> guardduty,
        @Nullable Input<String> iam,
        @Nullable Input<String> identitystore,
        @Nullable Input<String> imagebuilder,
        @Nullable Input<String> inspector,
        @Nullable Input<String> iot,
        @Nullable Input<String> iotanalytics,
        @Nullable Input<String> iotevents,
        @Nullable Input<String> kafka,
        @Nullable Input<String> kinesis,
        @Nullable Input<String> kinesisanalytics,
        @Nullable Input<String> kinesisanalyticsv2,
        @Nullable Input<String> kinesisvideo,
        @Nullable Input<String> kms,
        @Nullable Input<String> lakeformation,
        @Nullable Input<String> lambda,
        @Nullable Input<String> lexmodels,
        @Nullable Input<String> licensemanager,
        @Nullable Input<String> lightsail,
        @Nullable Input<String> location,
        @Nullable Input<String> macie,
        @Nullable Input<String> macie2,
        @Nullable Input<String> managedblockchain,
        @Nullable Input<String> marketplacecatalog,
        @Nullable Input<String> mediaconnect,
        @Nullable Input<String> mediaconvert,
        @Nullable Input<String> medialive,
        @Nullable Input<String> mediapackage,
        @Nullable Input<String> mediastore,
        @Nullable Input<String> mediastoredata,
        @Nullable Input<String> memorydb,
        @Nullable Input<String> mq,
        @Nullable Input<String> mwaa,
        @Nullable Input<String> neptune,
        @Nullable Input<String> networkfirewall,
        @Nullable Input<String> networkmanager,
        @Nullable Input<String> opsworks,
        @Nullable Input<String> organizations,
        @Nullable Input<String> outposts,
        @Nullable Input<String> personalize,
        @Nullable Input<String> pinpoint,
        @Nullable Input<String> pricing,
        @Nullable Input<String> qldb,
        @Nullable Input<String> quicksight,
        @Nullable Input<String> ram,
        @Nullable Input<String> rds,
        @Nullable Input<String> redshift,
        @Nullable Input<String> resourcegroups,
        @Nullable Input<String> resourcegroupstaggingapi,
        @Nullable Input<String> route53,
        @Nullable Input<String> route53domains,
        @Nullable Input<String> route53recoverycontrolconfig,
        @Nullable Input<String> route53recoveryreadiness,
        @Nullable Input<String> route53resolver,
        @Nullable Input<String> s3,
        @Nullable Input<String> s3control,
        @Nullable Input<String> s3outposts,
        @Nullable Input<String> sagemaker,
        @Nullable Input<String> schemas,
        @Nullable Input<String> sdb,
        @Nullable Input<String> secretsmanager,
        @Nullable Input<String> securityhub,
        @Nullable Input<String> serverlessrepo,
        @Nullable Input<String> servicecatalog,
        @Nullable Input<String> servicediscovery,
        @Nullable Input<String> servicequotas,
        @Nullable Input<String> ses,
        @Nullable Input<String> shield,
        @Nullable Input<String> signer,
        @Nullable Input<String> sns,
        @Nullable Input<String> sqs,
        @Nullable Input<String> ssm,
        @Nullable Input<String> ssoadmin,
        @Nullable Input<String> stepfunctions,
        @Nullable Input<String> storagegateway,
        @Nullable Input<String> sts,
        @Nullable Input<String> swf,
        @Nullable Input<String> synthetics,
        @Nullable Input<String> timestreamwrite,
        @Nullable Input<String> transfer,
        @Nullable Input<String> waf,
        @Nullable Input<String> wafregional,
        @Nullable Input<String> wafv2,
        @Nullable Input<String> worklink,
        @Nullable Input<String> workmail,
        @Nullable Input<String> workspaces,
        @Nullable Input<String> xray) {
        this.accessanalyzer = accessanalyzer;
        this.acm = acm;
        this.acmpca = acmpca;
        this.amplify = amplify;
        this.appconfig = appconfig;
        this.applicationautoscaling = applicationautoscaling;
        this.applicationinsights = applicationinsights;
        this.appmesh = appmesh;
        this.apprunner = apprunner;
        this.appstream = appstream;
        this.appsync = appsync;
        this.athena = athena;
        this.auditmanager = auditmanager;
        this.autoscaling = autoscaling;
        this.backup = backup;
        this.batch = batch;
        this.budgets = budgets;
        this.chime = chime;
        this.cloud9 = cloud9;
        this.cloudformation = cloudformation;
        this.cloudfront = cloudfront;
        this.cloudhsm = cloudhsm;
        this.cloudsearch = cloudsearch;
        this.cloudtrail = cloudtrail;
        this.cloudwatch = cloudwatch;
        this.cloudwatchevents = cloudwatchevents;
        this.cloudwatchlogs = cloudwatchlogs;
        this.codeartifact = codeartifact;
        this.codebuild = codebuild;
        this.codecommit = codecommit;
        this.codedeploy = codedeploy;
        this.codepipeline = codepipeline;
        this.codestarconnections = codestarconnections;
        this.cognitoidentity = cognitoidentity;
        this.configservice = configservice;
        this.connect = connect;
        this.cur = cur;
        this.dataexchange = dataexchange;
        this.datapipeline = datapipeline;
        this.datasync = datasync;
        this.dax = dax;
        this.detective = detective;
        this.devicefarm = devicefarm;
        this.directconnect = directconnect;
        this.dlm = dlm;
        this.dms = dms;
        this.docdb = docdb;
        this.ds = ds;
        this.dynamodb = dynamodb;
        this.ec2 = ec2;
        this.ecr = ecr;
        this.ecrpublic = ecrpublic;
        this.ecs = ecs;
        this.efs = efs;
        this.eks = eks;
        this.elasticache = elasticache;
        this.elasticbeanstalk = elasticbeanstalk;
        this.elastictranscoder = elastictranscoder;
        this.elb = elb;
        this.elbv2 = elbv2;
        this.emr = emr;
        this.emrcontainers = emrcontainers;
        this.es = es;
        this.firehose = firehose;
        this.fms = fms;
        this.forecast = forecast;
        this.fsx = fsx;
        this.gamelift = gamelift;
        this.glacier = glacier;
        this.globalaccelerator = globalaccelerator;
        this.glue = glue;
        this.greengrass = greengrass;
        this.guardduty = guardduty;
        this.iam = iam;
        this.identitystore = identitystore;
        this.imagebuilder = imagebuilder;
        this.inspector = inspector;
        this.iot = iot;
        this.iotanalytics = iotanalytics;
        this.iotevents = iotevents;
        this.kafka = kafka;
        this.kinesis = kinesis;
        this.kinesisanalytics = kinesisanalytics;
        this.kinesisanalyticsv2 = kinesisanalyticsv2;
        this.kinesisvideo = kinesisvideo;
        this.kms = kms;
        this.lakeformation = lakeformation;
        this.lambda = lambda;
        this.lexmodels = lexmodels;
        this.licensemanager = licensemanager;
        this.lightsail = lightsail;
        this.location = location;
        this.macie = macie;
        this.macie2 = macie2;
        this.managedblockchain = managedblockchain;
        this.marketplacecatalog = marketplacecatalog;
        this.mediaconnect = mediaconnect;
        this.mediaconvert = mediaconvert;
        this.medialive = medialive;
        this.mediapackage = mediapackage;
        this.mediastore = mediastore;
        this.mediastoredata = mediastoredata;
        this.memorydb = memorydb;
        this.mq = mq;
        this.mwaa = mwaa;
        this.neptune = neptune;
        this.networkfirewall = networkfirewall;
        this.networkmanager = networkmanager;
        this.opsworks = opsworks;
        this.organizations = organizations;
        this.outposts = outposts;
        this.personalize = personalize;
        this.pinpoint = pinpoint;
        this.pricing = pricing;
        this.qldb = qldb;
        this.quicksight = quicksight;
        this.ram = ram;
        this.rds = rds;
        this.redshift = redshift;
        this.resourcegroups = resourcegroups;
        this.resourcegroupstaggingapi = resourcegroupstaggingapi;
        this.route53 = route53;
        this.route53domains = route53domains;
        this.route53recoverycontrolconfig = route53recoverycontrolconfig;
        this.route53recoveryreadiness = route53recoveryreadiness;
        this.route53resolver = route53resolver;
        this.s3 = s3;
        this.s3control = s3control;
        this.s3outposts = s3outposts;
        this.sagemaker = sagemaker;
        this.schemas = schemas;
        this.sdb = sdb;
        this.secretsmanager = secretsmanager;
        this.securityhub = securityhub;
        this.serverlessrepo = serverlessrepo;
        this.servicecatalog = servicecatalog;
        this.servicediscovery = servicediscovery;
        this.servicequotas = servicequotas;
        this.ses = ses;
        this.shield = shield;
        this.signer = signer;
        this.sns = sns;
        this.sqs = sqs;
        this.ssm = ssm;
        this.ssoadmin = ssoadmin;
        this.stepfunctions = stepfunctions;
        this.storagegateway = storagegateway;
        this.sts = sts;
        this.swf = swf;
        this.synthetics = synthetics;
        this.timestreamwrite = timestreamwrite;
        this.transfer = transfer;
        this.waf = waf;
        this.wafregional = wafregional;
        this.wafv2 = wafv2;
        this.worklink = worklink;
        this.workmail = workmail;
        this.workspaces = workspaces;
        this.xray = xray;
    }

    private ProviderEndpointArgs() {
        this.accessanalyzer = Input.empty();
        this.acm = Input.empty();
        this.acmpca = Input.empty();
        this.amplify = Input.empty();
        this.appconfig = Input.empty();
        this.applicationautoscaling = Input.empty();
        this.applicationinsights = Input.empty();
        this.appmesh = Input.empty();
        this.apprunner = Input.empty();
        this.appstream = Input.empty();
        this.appsync = Input.empty();
        this.athena = Input.empty();
        this.auditmanager = Input.empty();
        this.autoscaling = Input.empty();
        this.backup = Input.empty();
        this.batch = Input.empty();
        this.budgets = Input.empty();
        this.chime = Input.empty();
        this.cloud9 = Input.empty();
        this.cloudformation = Input.empty();
        this.cloudfront = Input.empty();
        this.cloudhsm = Input.empty();
        this.cloudsearch = Input.empty();
        this.cloudtrail = Input.empty();
        this.cloudwatch = Input.empty();
        this.cloudwatchevents = Input.empty();
        this.cloudwatchlogs = Input.empty();
        this.codeartifact = Input.empty();
        this.codebuild = Input.empty();
        this.codecommit = Input.empty();
        this.codedeploy = Input.empty();
        this.codepipeline = Input.empty();
        this.codestarconnections = Input.empty();
        this.cognitoidentity = Input.empty();
        this.configservice = Input.empty();
        this.connect = Input.empty();
        this.cur = Input.empty();
        this.dataexchange = Input.empty();
        this.datapipeline = Input.empty();
        this.datasync = Input.empty();
        this.dax = Input.empty();
        this.detective = Input.empty();
        this.devicefarm = Input.empty();
        this.directconnect = Input.empty();
        this.dlm = Input.empty();
        this.dms = Input.empty();
        this.docdb = Input.empty();
        this.ds = Input.empty();
        this.dynamodb = Input.empty();
        this.ec2 = Input.empty();
        this.ecr = Input.empty();
        this.ecrpublic = Input.empty();
        this.ecs = Input.empty();
        this.efs = Input.empty();
        this.eks = Input.empty();
        this.elasticache = Input.empty();
        this.elasticbeanstalk = Input.empty();
        this.elastictranscoder = Input.empty();
        this.elb = Input.empty();
        this.elbv2 = Input.empty();
        this.emr = Input.empty();
        this.emrcontainers = Input.empty();
        this.es = Input.empty();
        this.firehose = Input.empty();
        this.fms = Input.empty();
        this.forecast = Input.empty();
        this.fsx = Input.empty();
        this.gamelift = Input.empty();
        this.glacier = Input.empty();
        this.globalaccelerator = Input.empty();
        this.glue = Input.empty();
        this.greengrass = Input.empty();
        this.guardduty = Input.empty();
        this.iam = Input.empty();
        this.identitystore = Input.empty();
        this.imagebuilder = Input.empty();
        this.inspector = Input.empty();
        this.iot = Input.empty();
        this.iotanalytics = Input.empty();
        this.iotevents = Input.empty();
        this.kafka = Input.empty();
        this.kinesis = Input.empty();
        this.kinesisanalytics = Input.empty();
        this.kinesisanalyticsv2 = Input.empty();
        this.kinesisvideo = Input.empty();
        this.kms = Input.empty();
        this.lakeformation = Input.empty();
        this.lambda = Input.empty();
        this.lexmodels = Input.empty();
        this.licensemanager = Input.empty();
        this.lightsail = Input.empty();
        this.location = Input.empty();
        this.macie = Input.empty();
        this.macie2 = Input.empty();
        this.managedblockchain = Input.empty();
        this.marketplacecatalog = Input.empty();
        this.mediaconnect = Input.empty();
        this.mediaconvert = Input.empty();
        this.medialive = Input.empty();
        this.mediapackage = Input.empty();
        this.mediastore = Input.empty();
        this.mediastoredata = Input.empty();
        this.memorydb = Input.empty();
        this.mq = Input.empty();
        this.mwaa = Input.empty();
        this.neptune = Input.empty();
        this.networkfirewall = Input.empty();
        this.networkmanager = Input.empty();
        this.opsworks = Input.empty();
        this.organizations = Input.empty();
        this.outposts = Input.empty();
        this.personalize = Input.empty();
        this.pinpoint = Input.empty();
        this.pricing = Input.empty();
        this.qldb = Input.empty();
        this.quicksight = Input.empty();
        this.ram = Input.empty();
        this.rds = Input.empty();
        this.redshift = Input.empty();
        this.resourcegroups = Input.empty();
        this.resourcegroupstaggingapi = Input.empty();
        this.route53 = Input.empty();
        this.route53domains = Input.empty();
        this.route53recoverycontrolconfig = Input.empty();
        this.route53recoveryreadiness = Input.empty();
        this.route53resolver = Input.empty();
        this.s3 = Input.empty();
        this.s3control = Input.empty();
        this.s3outposts = Input.empty();
        this.sagemaker = Input.empty();
        this.schemas = Input.empty();
        this.sdb = Input.empty();
        this.secretsmanager = Input.empty();
        this.securityhub = Input.empty();
        this.serverlessrepo = Input.empty();
        this.servicecatalog = Input.empty();
        this.servicediscovery = Input.empty();
        this.servicequotas = Input.empty();
        this.ses = Input.empty();
        this.shield = Input.empty();
        this.signer = Input.empty();
        this.sns = Input.empty();
        this.sqs = Input.empty();
        this.ssm = Input.empty();
        this.ssoadmin = Input.empty();
        this.stepfunctions = Input.empty();
        this.storagegateway = Input.empty();
        this.sts = Input.empty();
        this.swf = Input.empty();
        this.synthetics = Input.empty();
        this.timestreamwrite = Input.empty();
        this.transfer = Input.empty();
        this.waf = Input.empty();
        this.wafregional = Input.empty();
        this.wafv2 = Input.empty();
        this.worklink = Input.empty();
        this.workmail = Input.empty();
        this.workspaces = Input.empty();
        this.xray = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProviderEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> accessanalyzer;
        private @Nullable Input<String> acm;
        private @Nullable Input<String> acmpca;
        private @Nullable Input<String> amplify;
        private @Nullable Input<String> appconfig;
        private @Nullable Input<String> applicationautoscaling;
        private @Nullable Input<String> applicationinsights;
        private @Nullable Input<String> appmesh;
        private @Nullable Input<String> apprunner;
        private @Nullable Input<String> appstream;
        private @Nullable Input<String> appsync;
        private @Nullable Input<String> athena;
        private @Nullable Input<String> auditmanager;
        private @Nullable Input<String> autoscaling;
        private @Nullable Input<String> backup;
        private @Nullable Input<String> batch;
        private @Nullable Input<String> budgets;
        private @Nullable Input<String> chime;
        private @Nullable Input<String> cloud9;
        private @Nullable Input<String> cloudformation;
        private @Nullable Input<String> cloudfront;
        private @Nullable Input<String> cloudhsm;
        private @Nullable Input<String> cloudsearch;
        private @Nullable Input<String> cloudtrail;
        private @Nullable Input<String> cloudwatch;
        private @Nullable Input<String> cloudwatchevents;
        private @Nullable Input<String> cloudwatchlogs;
        private @Nullable Input<String> codeartifact;
        private @Nullable Input<String> codebuild;
        private @Nullable Input<String> codecommit;
        private @Nullable Input<String> codedeploy;
        private @Nullable Input<String> codepipeline;
        private @Nullable Input<String> codestarconnections;
        private @Nullable Input<String> cognitoidentity;
        private @Nullable Input<String> configservice;
        private @Nullable Input<String> connect;
        private @Nullable Input<String> cur;
        private @Nullable Input<String> dataexchange;
        private @Nullable Input<String> datapipeline;
        private @Nullable Input<String> datasync;
        private @Nullable Input<String> dax;
        private @Nullable Input<String> detective;
        private @Nullable Input<String> devicefarm;
        private @Nullable Input<String> directconnect;
        private @Nullable Input<String> dlm;
        private @Nullable Input<String> dms;
        private @Nullable Input<String> docdb;
        private @Nullable Input<String> ds;
        private @Nullable Input<String> dynamodb;
        private @Nullable Input<String> ec2;
        private @Nullable Input<String> ecr;
        private @Nullable Input<String> ecrpublic;
        private @Nullable Input<String> ecs;
        private @Nullable Input<String> efs;
        private @Nullable Input<String> eks;
        private @Nullable Input<String> elasticache;
        private @Nullable Input<String> elasticbeanstalk;
        private @Nullable Input<String> elastictranscoder;
        private @Nullable Input<String> elb;
        private @Nullable Input<String> elbv2;
        private @Nullable Input<String> emr;
        private @Nullable Input<String> emrcontainers;
        private @Nullable Input<String> es;
        private @Nullable Input<String> firehose;
        private @Nullable Input<String> fms;
        private @Nullable Input<String> forecast;
        private @Nullable Input<String> fsx;
        private @Nullable Input<String> gamelift;
        private @Nullable Input<String> glacier;
        private @Nullable Input<String> globalaccelerator;
        private @Nullable Input<String> glue;
        private @Nullable Input<String> greengrass;
        private @Nullable Input<String> guardduty;
        private @Nullable Input<String> iam;
        private @Nullable Input<String> identitystore;
        private @Nullable Input<String> imagebuilder;
        private @Nullable Input<String> inspector;
        private @Nullable Input<String> iot;
        private @Nullable Input<String> iotanalytics;
        private @Nullable Input<String> iotevents;
        private @Nullable Input<String> kafka;
        private @Nullable Input<String> kinesis;
        private @Nullable Input<String> kinesisanalytics;
        private @Nullable Input<String> kinesisanalyticsv2;
        private @Nullable Input<String> kinesisvideo;
        private @Nullable Input<String> kms;
        private @Nullable Input<String> lakeformation;
        private @Nullable Input<String> lambda;
        private @Nullable Input<String> lexmodels;
        private @Nullable Input<String> licensemanager;
        private @Nullable Input<String> lightsail;
        private @Nullable Input<String> location;
        private @Nullable Input<String> macie;
        private @Nullable Input<String> macie2;
        private @Nullable Input<String> managedblockchain;
        private @Nullable Input<String> marketplacecatalog;
        private @Nullable Input<String> mediaconnect;
        private @Nullable Input<String> mediaconvert;
        private @Nullable Input<String> medialive;
        private @Nullable Input<String> mediapackage;
        private @Nullable Input<String> mediastore;
        private @Nullable Input<String> mediastoredata;
        private @Nullable Input<String> memorydb;
        private @Nullable Input<String> mq;
        private @Nullable Input<String> mwaa;
        private @Nullable Input<String> neptune;
        private @Nullable Input<String> networkfirewall;
        private @Nullable Input<String> networkmanager;
        private @Nullable Input<String> opsworks;
        private @Nullable Input<String> organizations;
        private @Nullable Input<String> outposts;
        private @Nullable Input<String> personalize;
        private @Nullable Input<String> pinpoint;
        private @Nullable Input<String> pricing;
        private @Nullable Input<String> qldb;
        private @Nullable Input<String> quicksight;
        private @Nullable Input<String> ram;
        private @Nullable Input<String> rds;
        private @Nullable Input<String> redshift;
        private @Nullable Input<String> resourcegroups;
        private @Nullable Input<String> resourcegroupstaggingapi;
        private @Nullable Input<String> route53;
        private @Nullable Input<String> route53domains;
        private @Nullable Input<String> route53recoverycontrolconfig;
        private @Nullable Input<String> route53recoveryreadiness;
        private @Nullable Input<String> route53resolver;
        private @Nullable Input<String> s3;
        private @Nullable Input<String> s3control;
        private @Nullable Input<String> s3outposts;
        private @Nullable Input<String> sagemaker;
        private @Nullable Input<String> schemas;
        private @Nullable Input<String> sdb;
        private @Nullable Input<String> secretsmanager;
        private @Nullable Input<String> securityhub;
        private @Nullable Input<String> serverlessrepo;
        private @Nullable Input<String> servicecatalog;
        private @Nullable Input<String> servicediscovery;
        private @Nullable Input<String> servicequotas;
        private @Nullable Input<String> ses;
        private @Nullable Input<String> shield;
        private @Nullable Input<String> signer;
        private @Nullable Input<String> sns;
        private @Nullable Input<String> sqs;
        private @Nullable Input<String> ssm;
        private @Nullable Input<String> ssoadmin;
        private @Nullable Input<String> stepfunctions;
        private @Nullable Input<String> storagegateway;
        private @Nullable Input<String> sts;
        private @Nullable Input<String> swf;
        private @Nullable Input<String> synthetics;
        private @Nullable Input<String> timestreamwrite;
        private @Nullable Input<String> transfer;
        private @Nullable Input<String> waf;
        private @Nullable Input<String> wafregional;
        private @Nullable Input<String> wafv2;
        private @Nullable Input<String> worklink;
        private @Nullable Input<String> workmail;
        private @Nullable Input<String> workspaces;
        private @Nullable Input<String> xray;

        public Builder() {
    	      // Empty
        }

        public Builder(ProviderEndpointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessanalyzer = defaults.accessanalyzer;
    	      this.acm = defaults.acm;
    	      this.acmpca = defaults.acmpca;
    	      this.amplify = defaults.amplify;
    	      this.appconfig = defaults.appconfig;
    	      this.applicationautoscaling = defaults.applicationautoscaling;
    	      this.applicationinsights = defaults.applicationinsights;
    	      this.appmesh = defaults.appmesh;
    	      this.apprunner = defaults.apprunner;
    	      this.appstream = defaults.appstream;
    	      this.appsync = defaults.appsync;
    	      this.athena = defaults.athena;
    	      this.auditmanager = defaults.auditmanager;
    	      this.autoscaling = defaults.autoscaling;
    	      this.backup = defaults.backup;
    	      this.batch = defaults.batch;
    	      this.budgets = defaults.budgets;
    	      this.chime = defaults.chime;
    	      this.cloud9 = defaults.cloud9;
    	      this.cloudformation = defaults.cloudformation;
    	      this.cloudfront = defaults.cloudfront;
    	      this.cloudhsm = defaults.cloudhsm;
    	      this.cloudsearch = defaults.cloudsearch;
    	      this.cloudtrail = defaults.cloudtrail;
    	      this.cloudwatch = defaults.cloudwatch;
    	      this.cloudwatchevents = defaults.cloudwatchevents;
    	      this.cloudwatchlogs = defaults.cloudwatchlogs;
    	      this.codeartifact = defaults.codeartifact;
    	      this.codebuild = defaults.codebuild;
    	      this.codecommit = defaults.codecommit;
    	      this.codedeploy = defaults.codedeploy;
    	      this.codepipeline = defaults.codepipeline;
    	      this.codestarconnections = defaults.codestarconnections;
    	      this.cognitoidentity = defaults.cognitoidentity;
    	      this.configservice = defaults.configservice;
    	      this.connect = defaults.connect;
    	      this.cur = defaults.cur;
    	      this.dataexchange = defaults.dataexchange;
    	      this.datapipeline = defaults.datapipeline;
    	      this.datasync = defaults.datasync;
    	      this.dax = defaults.dax;
    	      this.detective = defaults.detective;
    	      this.devicefarm = defaults.devicefarm;
    	      this.directconnect = defaults.directconnect;
    	      this.dlm = defaults.dlm;
    	      this.dms = defaults.dms;
    	      this.docdb = defaults.docdb;
    	      this.ds = defaults.ds;
    	      this.dynamodb = defaults.dynamodb;
    	      this.ec2 = defaults.ec2;
    	      this.ecr = defaults.ecr;
    	      this.ecrpublic = defaults.ecrpublic;
    	      this.ecs = defaults.ecs;
    	      this.efs = defaults.efs;
    	      this.eks = defaults.eks;
    	      this.elasticache = defaults.elasticache;
    	      this.elasticbeanstalk = defaults.elasticbeanstalk;
    	      this.elastictranscoder = defaults.elastictranscoder;
    	      this.elb = defaults.elb;
    	      this.elbv2 = defaults.elbv2;
    	      this.emr = defaults.emr;
    	      this.emrcontainers = defaults.emrcontainers;
    	      this.es = defaults.es;
    	      this.firehose = defaults.firehose;
    	      this.fms = defaults.fms;
    	      this.forecast = defaults.forecast;
    	      this.fsx = defaults.fsx;
    	      this.gamelift = defaults.gamelift;
    	      this.glacier = defaults.glacier;
    	      this.globalaccelerator = defaults.globalaccelerator;
    	      this.glue = defaults.glue;
    	      this.greengrass = defaults.greengrass;
    	      this.guardduty = defaults.guardduty;
    	      this.iam = defaults.iam;
    	      this.identitystore = defaults.identitystore;
    	      this.imagebuilder = defaults.imagebuilder;
    	      this.inspector = defaults.inspector;
    	      this.iot = defaults.iot;
    	      this.iotanalytics = defaults.iotanalytics;
    	      this.iotevents = defaults.iotevents;
    	      this.kafka = defaults.kafka;
    	      this.kinesis = defaults.kinesis;
    	      this.kinesisanalytics = defaults.kinesisanalytics;
    	      this.kinesisanalyticsv2 = defaults.kinesisanalyticsv2;
    	      this.kinesisvideo = defaults.kinesisvideo;
    	      this.kms = defaults.kms;
    	      this.lakeformation = defaults.lakeformation;
    	      this.lambda = defaults.lambda;
    	      this.lexmodels = defaults.lexmodels;
    	      this.licensemanager = defaults.licensemanager;
    	      this.lightsail = defaults.lightsail;
    	      this.location = defaults.location;
    	      this.macie = defaults.macie;
    	      this.macie2 = defaults.macie2;
    	      this.managedblockchain = defaults.managedblockchain;
    	      this.marketplacecatalog = defaults.marketplacecatalog;
    	      this.mediaconnect = defaults.mediaconnect;
    	      this.mediaconvert = defaults.mediaconvert;
    	      this.medialive = defaults.medialive;
    	      this.mediapackage = defaults.mediapackage;
    	      this.mediastore = defaults.mediastore;
    	      this.mediastoredata = defaults.mediastoredata;
    	      this.memorydb = defaults.memorydb;
    	      this.mq = defaults.mq;
    	      this.mwaa = defaults.mwaa;
    	      this.neptune = defaults.neptune;
    	      this.networkfirewall = defaults.networkfirewall;
    	      this.networkmanager = defaults.networkmanager;
    	      this.opsworks = defaults.opsworks;
    	      this.organizations = defaults.organizations;
    	      this.outposts = defaults.outposts;
    	      this.personalize = defaults.personalize;
    	      this.pinpoint = defaults.pinpoint;
    	      this.pricing = defaults.pricing;
    	      this.qldb = defaults.qldb;
    	      this.quicksight = defaults.quicksight;
    	      this.ram = defaults.ram;
    	      this.rds = defaults.rds;
    	      this.redshift = defaults.redshift;
    	      this.resourcegroups = defaults.resourcegroups;
    	      this.resourcegroupstaggingapi = defaults.resourcegroupstaggingapi;
    	      this.route53 = defaults.route53;
    	      this.route53domains = defaults.route53domains;
    	      this.route53recoverycontrolconfig = defaults.route53recoverycontrolconfig;
    	      this.route53recoveryreadiness = defaults.route53recoveryreadiness;
    	      this.route53resolver = defaults.route53resolver;
    	      this.s3 = defaults.s3;
    	      this.s3control = defaults.s3control;
    	      this.s3outposts = defaults.s3outposts;
    	      this.sagemaker = defaults.sagemaker;
    	      this.schemas = defaults.schemas;
    	      this.sdb = defaults.sdb;
    	      this.secretsmanager = defaults.secretsmanager;
    	      this.securityhub = defaults.securityhub;
    	      this.serverlessrepo = defaults.serverlessrepo;
    	      this.servicecatalog = defaults.servicecatalog;
    	      this.servicediscovery = defaults.servicediscovery;
    	      this.servicequotas = defaults.servicequotas;
    	      this.ses = defaults.ses;
    	      this.shield = defaults.shield;
    	      this.signer = defaults.signer;
    	      this.sns = defaults.sns;
    	      this.sqs = defaults.sqs;
    	      this.ssm = defaults.ssm;
    	      this.ssoadmin = defaults.ssoadmin;
    	      this.stepfunctions = defaults.stepfunctions;
    	      this.storagegateway = defaults.storagegateway;
    	      this.sts = defaults.sts;
    	      this.swf = defaults.swf;
    	      this.synthetics = defaults.synthetics;
    	      this.timestreamwrite = defaults.timestreamwrite;
    	      this.transfer = defaults.transfer;
    	      this.waf = defaults.waf;
    	      this.wafregional = defaults.wafregional;
    	      this.wafv2 = defaults.wafv2;
    	      this.worklink = defaults.worklink;
    	      this.workmail = defaults.workmail;
    	      this.workspaces = defaults.workspaces;
    	      this.xray = defaults.xray;
        }

        public Builder setAccessanalyzer(@Nullable Input<String> accessanalyzer) {
            this.accessanalyzer = accessanalyzer;
            return this;
        }

        public Builder setAccessanalyzer(@Nullable String accessanalyzer) {
            this.accessanalyzer = Input.ofNullable(accessanalyzer);
            return this;
        }

        public Builder setAcm(@Nullable Input<String> acm) {
            this.acm = acm;
            return this;
        }

        public Builder setAcm(@Nullable String acm) {
            this.acm = Input.ofNullable(acm);
            return this;
        }

        public Builder setAcmpca(@Nullable Input<String> acmpca) {
            this.acmpca = acmpca;
            return this;
        }

        public Builder setAcmpca(@Nullable String acmpca) {
            this.acmpca = Input.ofNullable(acmpca);
            return this;
        }

        public Builder setAmplify(@Nullable Input<String> amplify) {
            this.amplify = amplify;
            return this;
        }

        public Builder setAmplify(@Nullable String amplify) {
            this.amplify = Input.ofNullable(amplify);
            return this;
        }

        public Builder setAppconfig(@Nullable Input<String> appconfig) {
            this.appconfig = appconfig;
            return this;
        }

        public Builder setAppconfig(@Nullable String appconfig) {
            this.appconfig = Input.ofNullable(appconfig);
            return this;
        }

        public Builder setApplicationautoscaling(@Nullable Input<String> applicationautoscaling) {
            this.applicationautoscaling = applicationautoscaling;
            return this;
        }

        public Builder setApplicationautoscaling(@Nullable String applicationautoscaling) {
            this.applicationautoscaling = Input.ofNullable(applicationautoscaling);
            return this;
        }

        public Builder setApplicationinsights(@Nullable Input<String> applicationinsights) {
            this.applicationinsights = applicationinsights;
            return this;
        }

        public Builder setApplicationinsights(@Nullable String applicationinsights) {
            this.applicationinsights = Input.ofNullable(applicationinsights);
            return this;
        }

        public Builder setAppmesh(@Nullable Input<String> appmesh) {
            this.appmesh = appmesh;
            return this;
        }

        public Builder setAppmesh(@Nullable String appmesh) {
            this.appmesh = Input.ofNullable(appmesh);
            return this;
        }

        public Builder setApprunner(@Nullable Input<String> apprunner) {
            this.apprunner = apprunner;
            return this;
        }

        public Builder setApprunner(@Nullable String apprunner) {
            this.apprunner = Input.ofNullable(apprunner);
            return this;
        }

        public Builder setAppstream(@Nullable Input<String> appstream) {
            this.appstream = appstream;
            return this;
        }

        public Builder setAppstream(@Nullable String appstream) {
            this.appstream = Input.ofNullable(appstream);
            return this;
        }

        public Builder setAppsync(@Nullable Input<String> appsync) {
            this.appsync = appsync;
            return this;
        }

        public Builder setAppsync(@Nullable String appsync) {
            this.appsync = Input.ofNullable(appsync);
            return this;
        }

        public Builder setAthena(@Nullable Input<String> athena) {
            this.athena = athena;
            return this;
        }

        public Builder setAthena(@Nullable String athena) {
            this.athena = Input.ofNullable(athena);
            return this;
        }

        public Builder setAuditmanager(@Nullable Input<String> auditmanager) {
            this.auditmanager = auditmanager;
            return this;
        }

        public Builder setAuditmanager(@Nullable String auditmanager) {
            this.auditmanager = Input.ofNullable(auditmanager);
            return this;
        }

        public Builder setAutoscaling(@Nullable Input<String> autoscaling) {
            this.autoscaling = autoscaling;
            return this;
        }

        public Builder setAutoscaling(@Nullable String autoscaling) {
            this.autoscaling = Input.ofNullable(autoscaling);
            return this;
        }

        public Builder setBackup(@Nullable Input<String> backup) {
            this.backup = backup;
            return this;
        }

        public Builder setBackup(@Nullable String backup) {
            this.backup = Input.ofNullable(backup);
            return this;
        }

        public Builder setBatch(@Nullable Input<String> batch) {
            this.batch = batch;
            return this;
        }

        public Builder setBatch(@Nullable String batch) {
            this.batch = Input.ofNullable(batch);
            return this;
        }

        public Builder setBudgets(@Nullable Input<String> budgets) {
            this.budgets = budgets;
            return this;
        }

        public Builder setBudgets(@Nullable String budgets) {
            this.budgets = Input.ofNullable(budgets);
            return this;
        }

        public Builder setChime(@Nullable Input<String> chime) {
            this.chime = chime;
            return this;
        }

        public Builder setChime(@Nullable String chime) {
            this.chime = Input.ofNullable(chime);
            return this;
        }

        public Builder setCloud9(@Nullable Input<String> cloud9) {
            this.cloud9 = cloud9;
            return this;
        }

        public Builder setCloud9(@Nullable String cloud9) {
            this.cloud9 = Input.ofNullable(cloud9);
            return this;
        }

        public Builder setCloudformation(@Nullable Input<String> cloudformation) {
            this.cloudformation = cloudformation;
            return this;
        }

        public Builder setCloudformation(@Nullable String cloudformation) {
            this.cloudformation = Input.ofNullable(cloudformation);
            return this;
        }

        public Builder setCloudfront(@Nullable Input<String> cloudfront) {
            this.cloudfront = cloudfront;
            return this;
        }

        public Builder setCloudfront(@Nullable String cloudfront) {
            this.cloudfront = Input.ofNullable(cloudfront);
            return this;
        }

        public Builder setCloudhsm(@Nullable Input<String> cloudhsm) {
            this.cloudhsm = cloudhsm;
            return this;
        }

        public Builder setCloudhsm(@Nullable String cloudhsm) {
            this.cloudhsm = Input.ofNullable(cloudhsm);
            return this;
        }

        public Builder setCloudsearch(@Nullable Input<String> cloudsearch) {
            this.cloudsearch = cloudsearch;
            return this;
        }

        public Builder setCloudsearch(@Nullable String cloudsearch) {
            this.cloudsearch = Input.ofNullable(cloudsearch);
            return this;
        }

        public Builder setCloudtrail(@Nullable Input<String> cloudtrail) {
            this.cloudtrail = cloudtrail;
            return this;
        }

        public Builder setCloudtrail(@Nullable String cloudtrail) {
            this.cloudtrail = Input.ofNullable(cloudtrail);
            return this;
        }

        public Builder setCloudwatch(@Nullable Input<String> cloudwatch) {
            this.cloudwatch = cloudwatch;
            return this;
        }

        public Builder setCloudwatch(@Nullable String cloudwatch) {
            this.cloudwatch = Input.ofNullable(cloudwatch);
            return this;
        }

        public Builder setCloudwatchevents(@Nullable Input<String> cloudwatchevents) {
            this.cloudwatchevents = cloudwatchevents;
            return this;
        }

        public Builder setCloudwatchevents(@Nullable String cloudwatchevents) {
            this.cloudwatchevents = Input.ofNullable(cloudwatchevents);
            return this;
        }

        public Builder setCloudwatchlogs(@Nullable Input<String> cloudwatchlogs) {
            this.cloudwatchlogs = cloudwatchlogs;
            return this;
        }

        public Builder setCloudwatchlogs(@Nullable String cloudwatchlogs) {
            this.cloudwatchlogs = Input.ofNullable(cloudwatchlogs);
            return this;
        }

        public Builder setCodeartifact(@Nullable Input<String> codeartifact) {
            this.codeartifact = codeartifact;
            return this;
        }

        public Builder setCodeartifact(@Nullable String codeartifact) {
            this.codeartifact = Input.ofNullable(codeartifact);
            return this;
        }

        public Builder setCodebuild(@Nullable Input<String> codebuild) {
            this.codebuild = codebuild;
            return this;
        }

        public Builder setCodebuild(@Nullable String codebuild) {
            this.codebuild = Input.ofNullable(codebuild);
            return this;
        }

        public Builder setCodecommit(@Nullable Input<String> codecommit) {
            this.codecommit = codecommit;
            return this;
        }

        public Builder setCodecommit(@Nullable String codecommit) {
            this.codecommit = Input.ofNullable(codecommit);
            return this;
        }

        public Builder setCodedeploy(@Nullable Input<String> codedeploy) {
            this.codedeploy = codedeploy;
            return this;
        }

        public Builder setCodedeploy(@Nullable String codedeploy) {
            this.codedeploy = Input.ofNullable(codedeploy);
            return this;
        }

        public Builder setCodepipeline(@Nullable Input<String> codepipeline) {
            this.codepipeline = codepipeline;
            return this;
        }

        public Builder setCodepipeline(@Nullable String codepipeline) {
            this.codepipeline = Input.ofNullable(codepipeline);
            return this;
        }

        public Builder setCodestarconnections(@Nullable Input<String> codestarconnections) {
            this.codestarconnections = codestarconnections;
            return this;
        }

        public Builder setCodestarconnections(@Nullable String codestarconnections) {
            this.codestarconnections = Input.ofNullable(codestarconnections);
            return this;
        }

        public Builder setCognitoidentity(@Nullable Input<String> cognitoidentity) {
            this.cognitoidentity = cognitoidentity;
            return this;
        }

        public Builder setCognitoidentity(@Nullable String cognitoidentity) {
            this.cognitoidentity = Input.ofNullable(cognitoidentity);
            return this;
        }

        public Builder setConfigservice(@Nullable Input<String> configservice) {
            this.configservice = configservice;
            return this;
        }

        public Builder setConfigservice(@Nullable String configservice) {
            this.configservice = Input.ofNullable(configservice);
            return this;
        }

        public Builder setConnect(@Nullable Input<String> connect) {
            this.connect = connect;
            return this;
        }

        public Builder setConnect(@Nullable String connect) {
            this.connect = Input.ofNullable(connect);
            return this;
        }

        public Builder setCur(@Nullable Input<String> cur) {
            this.cur = cur;
            return this;
        }

        public Builder setCur(@Nullable String cur) {
            this.cur = Input.ofNullable(cur);
            return this;
        }

        public Builder setDataexchange(@Nullable Input<String> dataexchange) {
            this.dataexchange = dataexchange;
            return this;
        }

        public Builder setDataexchange(@Nullable String dataexchange) {
            this.dataexchange = Input.ofNullable(dataexchange);
            return this;
        }

        public Builder setDatapipeline(@Nullable Input<String> datapipeline) {
            this.datapipeline = datapipeline;
            return this;
        }

        public Builder setDatapipeline(@Nullable String datapipeline) {
            this.datapipeline = Input.ofNullable(datapipeline);
            return this;
        }

        public Builder setDatasync(@Nullable Input<String> datasync) {
            this.datasync = datasync;
            return this;
        }

        public Builder setDatasync(@Nullable String datasync) {
            this.datasync = Input.ofNullable(datasync);
            return this;
        }

        public Builder setDax(@Nullable Input<String> dax) {
            this.dax = dax;
            return this;
        }

        public Builder setDax(@Nullable String dax) {
            this.dax = Input.ofNullable(dax);
            return this;
        }

        public Builder setDetective(@Nullable Input<String> detective) {
            this.detective = detective;
            return this;
        }

        public Builder setDetective(@Nullable String detective) {
            this.detective = Input.ofNullable(detective);
            return this;
        }

        public Builder setDevicefarm(@Nullable Input<String> devicefarm) {
            this.devicefarm = devicefarm;
            return this;
        }

        public Builder setDevicefarm(@Nullable String devicefarm) {
            this.devicefarm = Input.ofNullable(devicefarm);
            return this;
        }

        public Builder setDirectconnect(@Nullable Input<String> directconnect) {
            this.directconnect = directconnect;
            return this;
        }

        public Builder setDirectconnect(@Nullable String directconnect) {
            this.directconnect = Input.ofNullable(directconnect);
            return this;
        }

        public Builder setDlm(@Nullable Input<String> dlm) {
            this.dlm = dlm;
            return this;
        }

        public Builder setDlm(@Nullable String dlm) {
            this.dlm = Input.ofNullable(dlm);
            return this;
        }

        public Builder setDms(@Nullable Input<String> dms) {
            this.dms = dms;
            return this;
        }

        public Builder setDms(@Nullable String dms) {
            this.dms = Input.ofNullable(dms);
            return this;
        }

        public Builder setDocdb(@Nullable Input<String> docdb) {
            this.docdb = docdb;
            return this;
        }

        public Builder setDocdb(@Nullable String docdb) {
            this.docdb = Input.ofNullable(docdb);
            return this;
        }

        public Builder setDs(@Nullable Input<String> ds) {
            this.ds = ds;
            return this;
        }

        public Builder setDs(@Nullable String ds) {
            this.ds = Input.ofNullable(ds);
            return this;
        }

        public Builder setDynamodb(@Nullable Input<String> dynamodb) {
            this.dynamodb = dynamodb;
            return this;
        }

        public Builder setDynamodb(@Nullable String dynamodb) {
            this.dynamodb = Input.ofNullable(dynamodb);
            return this;
        }

        public Builder setEc2(@Nullable Input<String> ec2) {
            this.ec2 = ec2;
            return this;
        }

        public Builder setEc2(@Nullable String ec2) {
            this.ec2 = Input.ofNullable(ec2);
            return this;
        }

        public Builder setEcr(@Nullable Input<String> ecr) {
            this.ecr = ecr;
            return this;
        }

        public Builder setEcr(@Nullable String ecr) {
            this.ecr = Input.ofNullable(ecr);
            return this;
        }

        public Builder setEcrpublic(@Nullable Input<String> ecrpublic) {
            this.ecrpublic = ecrpublic;
            return this;
        }

        public Builder setEcrpublic(@Nullable String ecrpublic) {
            this.ecrpublic = Input.ofNullable(ecrpublic);
            return this;
        }

        public Builder setEcs(@Nullable Input<String> ecs) {
            this.ecs = ecs;
            return this;
        }

        public Builder setEcs(@Nullable String ecs) {
            this.ecs = Input.ofNullable(ecs);
            return this;
        }

        public Builder setEfs(@Nullable Input<String> efs) {
            this.efs = efs;
            return this;
        }

        public Builder setEfs(@Nullable String efs) {
            this.efs = Input.ofNullable(efs);
            return this;
        }

        public Builder setEks(@Nullable Input<String> eks) {
            this.eks = eks;
            return this;
        }

        public Builder setEks(@Nullable String eks) {
            this.eks = Input.ofNullable(eks);
            return this;
        }

        public Builder setElasticache(@Nullable Input<String> elasticache) {
            this.elasticache = elasticache;
            return this;
        }

        public Builder setElasticache(@Nullable String elasticache) {
            this.elasticache = Input.ofNullable(elasticache);
            return this;
        }

        public Builder setElasticbeanstalk(@Nullable Input<String> elasticbeanstalk) {
            this.elasticbeanstalk = elasticbeanstalk;
            return this;
        }

        public Builder setElasticbeanstalk(@Nullable String elasticbeanstalk) {
            this.elasticbeanstalk = Input.ofNullable(elasticbeanstalk);
            return this;
        }

        public Builder setElastictranscoder(@Nullable Input<String> elastictranscoder) {
            this.elastictranscoder = elastictranscoder;
            return this;
        }

        public Builder setElastictranscoder(@Nullable String elastictranscoder) {
            this.elastictranscoder = Input.ofNullable(elastictranscoder);
            return this;
        }

        public Builder setElb(@Nullable Input<String> elb) {
            this.elb = elb;
            return this;
        }

        public Builder setElb(@Nullable String elb) {
            this.elb = Input.ofNullable(elb);
            return this;
        }

        public Builder setElbv2(@Nullable Input<String> elbv2) {
            this.elbv2 = elbv2;
            return this;
        }

        public Builder setElbv2(@Nullable String elbv2) {
            this.elbv2 = Input.ofNullable(elbv2);
            return this;
        }

        public Builder setEmr(@Nullable Input<String> emr) {
            this.emr = emr;
            return this;
        }

        public Builder setEmr(@Nullable String emr) {
            this.emr = Input.ofNullable(emr);
            return this;
        }

        public Builder setEmrcontainers(@Nullable Input<String> emrcontainers) {
            this.emrcontainers = emrcontainers;
            return this;
        }

        public Builder setEmrcontainers(@Nullable String emrcontainers) {
            this.emrcontainers = Input.ofNullable(emrcontainers);
            return this;
        }

        public Builder setEs(@Nullable Input<String> es) {
            this.es = es;
            return this;
        }

        public Builder setEs(@Nullable String es) {
            this.es = Input.ofNullable(es);
            return this;
        }

        public Builder setFirehose(@Nullable Input<String> firehose) {
            this.firehose = firehose;
            return this;
        }

        public Builder setFirehose(@Nullable String firehose) {
            this.firehose = Input.ofNullable(firehose);
            return this;
        }

        public Builder setFms(@Nullable Input<String> fms) {
            this.fms = fms;
            return this;
        }

        public Builder setFms(@Nullable String fms) {
            this.fms = Input.ofNullable(fms);
            return this;
        }

        public Builder setForecast(@Nullable Input<String> forecast) {
            this.forecast = forecast;
            return this;
        }

        public Builder setForecast(@Nullable String forecast) {
            this.forecast = Input.ofNullable(forecast);
            return this;
        }

        public Builder setFsx(@Nullable Input<String> fsx) {
            this.fsx = fsx;
            return this;
        }

        public Builder setFsx(@Nullable String fsx) {
            this.fsx = Input.ofNullable(fsx);
            return this;
        }

        public Builder setGamelift(@Nullable Input<String> gamelift) {
            this.gamelift = gamelift;
            return this;
        }

        public Builder setGamelift(@Nullable String gamelift) {
            this.gamelift = Input.ofNullable(gamelift);
            return this;
        }

        public Builder setGlacier(@Nullable Input<String> glacier) {
            this.glacier = glacier;
            return this;
        }

        public Builder setGlacier(@Nullable String glacier) {
            this.glacier = Input.ofNullable(glacier);
            return this;
        }

        public Builder setGlobalaccelerator(@Nullable Input<String> globalaccelerator) {
            this.globalaccelerator = globalaccelerator;
            return this;
        }

        public Builder setGlobalaccelerator(@Nullable String globalaccelerator) {
            this.globalaccelerator = Input.ofNullable(globalaccelerator);
            return this;
        }

        public Builder setGlue(@Nullable Input<String> glue) {
            this.glue = glue;
            return this;
        }

        public Builder setGlue(@Nullable String glue) {
            this.glue = Input.ofNullable(glue);
            return this;
        }

        public Builder setGreengrass(@Nullable Input<String> greengrass) {
            this.greengrass = greengrass;
            return this;
        }

        public Builder setGreengrass(@Nullable String greengrass) {
            this.greengrass = Input.ofNullable(greengrass);
            return this;
        }

        public Builder setGuardduty(@Nullable Input<String> guardduty) {
            this.guardduty = guardduty;
            return this;
        }

        public Builder setGuardduty(@Nullable String guardduty) {
            this.guardduty = Input.ofNullable(guardduty);
            return this;
        }

        public Builder setIam(@Nullable Input<String> iam) {
            this.iam = iam;
            return this;
        }

        public Builder setIam(@Nullable String iam) {
            this.iam = Input.ofNullable(iam);
            return this;
        }

        public Builder setIdentitystore(@Nullable Input<String> identitystore) {
            this.identitystore = identitystore;
            return this;
        }

        public Builder setIdentitystore(@Nullable String identitystore) {
            this.identitystore = Input.ofNullable(identitystore);
            return this;
        }

        public Builder setImagebuilder(@Nullable Input<String> imagebuilder) {
            this.imagebuilder = imagebuilder;
            return this;
        }

        public Builder setImagebuilder(@Nullable String imagebuilder) {
            this.imagebuilder = Input.ofNullable(imagebuilder);
            return this;
        }

        public Builder setInspector(@Nullable Input<String> inspector) {
            this.inspector = inspector;
            return this;
        }

        public Builder setInspector(@Nullable String inspector) {
            this.inspector = Input.ofNullable(inspector);
            return this;
        }

        public Builder setIot(@Nullable Input<String> iot) {
            this.iot = iot;
            return this;
        }

        public Builder setIot(@Nullable String iot) {
            this.iot = Input.ofNullable(iot);
            return this;
        }

        public Builder setIotanalytics(@Nullable Input<String> iotanalytics) {
            this.iotanalytics = iotanalytics;
            return this;
        }

        public Builder setIotanalytics(@Nullable String iotanalytics) {
            this.iotanalytics = Input.ofNullable(iotanalytics);
            return this;
        }

        public Builder setIotevents(@Nullable Input<String> iotevents) {
            this.iotevents = iotevents;
            return this;
        }

        public Builder setIotevents(@Nullable String iotevents) {
            this.iotevents = Input.ofNullable(iotevents);
            return this;
        }

        public Builder setKafka(@Nullable Input<String> kafka) {
            this.kafka = kafka;
            return this;
        }

        public Builder setKafka(@Nullable String kafka) {
            this.kafka = Input.ofNullable(kafka);
            return this;
        }

        public Builder setKinesis(@Nullable Input<String> kinesis) {
            this.kinesis = kinesis;
            return this;
        }

        public Builder setKinesis(@Nullable String kinesis) {
            this.kinesis = Input.ofNullable(kinesis);
            return this;
        }

        public Builder setKinesisanalytics(@Nullable Input<String> kinesisanalytics) {
            this.kinesisanalytics = kinesisanalytics;
            return this;
        }

        public Builder setKinesisanalytics(@Nullable String kinesisanalytics) {
            this.kinesisanalytics = Input.ofNullable(kinesisanalytics);
            return this;
        }

        public Builder setKinesisanalyticsv2(@Nullable Input<String> kinesisanalyticsv2) {
            this.kinesisanalyticsv2 = kinesisanalyticsv2;
            return this;
        }

        public Builder setKinesisanalyticsv2(@Nullable String kinesisanalyticsv2) {
            this.kinesisanalyticsv2 = Input.ofNullable(kinesisanalyticsv2);
            return this;
        }

        public Builder setKinesisvideo(@Nullable Input<String> kinesisvideo) {
            this.kinesisvideo = kinesisvideo;
            return this;
        }

        public Builder setKinesisvideo(@Nullable String kinesisvideo) {
            this.kinesisvideo = Input.ofNullable(kinesisvideo);
            return this;
        }

        public Builder setKms(@Nullable Input<String> kms) {
            this.kms = kms;
            return this;
        }

        public Builder setKms(@Nullable String kms) {
            this.kms = Input.ofNullable(kms);
            return this;
        }

        public Builder setLakeformation(@Nullable Input<String> lakeformation) {
            this.lakeformation = lakeformation;
            return this;
        }

        public Builder setLakeformation(@Nullable String lakeformation) {
            this.lakeformation = Input.ofNullable(lakeformation);
            return this;
        }

        public Builder setLambda(@Nullable Input<String> lambda) {
            this.lambda = lambda;
            return this;
        }

        public Builder setLambda(@Nullable String lambda) {
            this.lambda = Input.ofNullable(lambda);
            return this;
        }

        public Builder setLexmodels(@Nullable Input<String> lexmodels) {
            this.lexmodels = lexmodels;
            return this;
        }

        public Builder setLexmodels(@Nullable String lexmodels) {
            this.lexmodels = Input.ofNullable(lexmodels);
            return this;
        }

        public Builder setLicensemanager(@Nullable Input<String> licensemanager) {
            this.licensemanager = licensemanager;
            return this;
        }

        public Builder setLicensemanager(@Nullable String licensemanager) {
            this.licensemanager = Input.ofNullable(licensemanager);
            return this;
        }

        public Builder setLightsail(@Nullable Input<String> lightsail) {
            this.lightsail = lightsail;
            return this;
        }

        public Builder setLightsail(@Nullable String lightsail) {
            this.lightsail = Input.ofNullable(lightsail);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setMacie(@Nullable Input<String> macie) {
            this.macie = macie;
            return this;
        }

        public Builder setMacie(@Nullable String macie) {
            this.macie = Input.ofNullable(macie);
            return this;
        }

        public Builder setMacie2(@Nullable Input<String> macie2) {
            this.macie2 = macie2;
            return this;
        }

        public Builder setMacie2(@Nullable String macie2) {
            this.macie2 = Input.ofNullable(macie2);
            return this;
        }

        public Builder setManagedblockchain(@Nullable Input<String> managedblockchain) {
            this.managedblockchain = managedblockchain;
            return this;
        }

        public Builder setManagedblockchain(@Nullable String managedblockchain) {
            this.managedblockchain = Input.ofNullable(managedblockchain);
            return this;
        }

        public Builder setMarketplacecatalog(@Nullable Input<String> marketplacecatalog) {
            this.marketplacecatalog = marketplacecatalog;
            return this;
        }

        public Builder setMarketplacecatalog(@Nullable String marketplacecatalog) {
            this.marketplacecatalog = Input.ofNullable(marketplacecatalog);
            return this;
        }

        public Builder setMediaconnect(@Nullable Input<String> mediaconnect) {
            this.mediaconnect = mediaconnect;
            return this;
        }

        public Builder setMediaconnect(@Nullable String mediaconnect) {
            this.mediaconnect = Input.ofNullable(mediaconnect);
            return this;
        }

        public Builder setMediaconvert(@Nullable Input<String> mediaconvert) {
            this.mediaconvert = mediaconvert;
            return this;
        }

        public Builder setMediaconvert(@Nullable String mediaconvert) {
            this.mediaconvert = Input.ofNullable(mediaconvert);
            return this;
        }

        public Builder setMedialive(@Nullable Input<String> medialive) {
            this.medialive = medialive;
            return this;
        }

        public Builder setMedialive(@Nullable String medialive) {
            this.medialive = Input.ofNullable(medialive);
            return this;
        }

        public Builder setMediapackage(@Nullable Input<String> mediapackage) {
            this.mediapackage = mediapackage;
            return this;
        }

        public Builder setMediapackage(@Nullable String mediapackage) {
            this.mediapackage = Input.ofNullable(mediapackage);
            return this;
        }

        public Builder setMediastore(@Nullable Input<String> mediastore) {
            this.mediastore = mediastore;
            return this;
        }

        public Builder setMediastore(@Nullable String mediastore) {
            this.mediastore = Input.ofNullable(mediastore);
            return this;
        }

        public Builder setMediastoredata(@Nullable Input<String> mediastoredata) {
            this.mediastoredata = mediastoredata;
            return this;
        }

        public Builder setMediastoredata(@Nullable String mediastoredata) {
            this.mediastoredata = Input.ofNullable(mediastoredata);
            return this;
        }

        public Builder setMemorydb(@Nullable Input<String> memorydb) {
            this.memorydb = memorydb;
            return this;
        }

        public Builder setMemorydb(@Nullable String memorydb) {
            this.memorydb = Input.ofNullable(memorydb);
            return this;
        }

        public Builder setMq(@Nullable Input<String> mq) {
            this.mq = mq;
            return this;
        }

        public Builder setMq(@Nullable String mq) {
            this.mq = Input.ofNullable(mq);
            return this;
        }

        public Builder setMwaa(@Nullable Input<String> mwaa) {
            this.mwaa = mwaa;
            return this;
        }

        public Builder setMwaa(@Nullable String mwaa) {
            this.mwaa = Input.ofNullable(mwaa);
            return this;
        }

        public Builder setNeptune(@Nullable Input<String> neptune) {
            this.neptune = neptune;
            return this;
        }

        public Builder setNeptune(@Nullable String neptune) {
            this.neptune = Input.ofNullable(neptune);
            return this;
        }

        public Builder setNetworkfirewall(@Nullable Input<String> networkfirewall) {
            this.networkfirewall = networkfirewall;
            return this;
        }

        public Builder setNetworkfirewall(@Nullable String networkfirewall) {
            this.networkfirewall = Input.ofNullable(networkfirewall);
            return this;
        }

        public Builder setNetworkmanager(@Nullable Input<String> networkmanager) {
            this.networkmanager = networkmanager;
            return this;
        }

        public Builder setNetworkmanager(@Nullable String networkmanager) {
            this.networkmanager = Input.ofNullable(networkmanager);
            return this;
        }

        public Builder setOpsworks(@Nullable Input<String> opsworks) {
            this.opsworks = opsworks;
            return this;
        }

        public Builder setOpsworks(@Nullable String opsworks) {
            this.opsworks = Input.ofNullable(opsworks);
            return this;
        }

        public Builder setOrganizations(@Nullable Input<String> organizations) {
            this.organizations = organizations;
            return this;
        }

        public Builder setOrganizations(@Nullable String organizations) {
            this.organizations = Input.ofNullable(organizations);
            return this;
        }

        public Builder setOutposts(@Nullable Input<String> outposts) {
            this.outposts = outposts;
            return this;
        }

        public Builder setOutposts(@Nullable String outposts) {
            this.outposts = Input.ofNullable(outposts);
            return this;
        }

        public Builder setPersonalize(@Nullable Input<String> personalize) {
            this.personalize = personalize;
            return this;
        }

        public Builder setPersonalize(@Nullable String personalize) {
            this.personalize = Input.ofNullable(personalize);
            return this;
        }

        public Builder setPinpoint(@Nullable Input<String> pinpoint) {
            this.pinpoint = pinpoint;
            return this;
        }

        public Builder setPinpoint(@Nullable String pinpoint) {
            this.pinpoint = Input.ofNullable(pinpoint);
            return this;
        }

        public Builder setPricing(@Nullable Input<String> pricing) {
            this.pricing = pricing;
            return this;
        }

        public Builder setPricing(@Nullable String pricing) {
            this.pricing = Input.ofNullable(pricing);
            return this;
        }

        public Builder setQldb(@Nullable Input<String> qldb) {
            this.qldb = qldb;
            return this;
        }

        public Builder setQldb(@Nullable String qldb) {
            this.qldb = Input.ofNullable(qldb);
            return this;
        }

        public Builder setQuicksight(@Nullable Input<String> quicksight) {
            this.quicksight = quicksight;
            return this;
        }

        public Builder setQuicksight(@Nullable String quicksight) {
            this.quicksight = Input.ofNullable(quicksight);
            return this;
        }

        public Builder setRam(@Nullable Input<String> ram) {
            this.ram = ram;
            return this;
        }

        public Builder setRam(@Nullable String ram) {
            this.ram = Input.ofNullable(ram);
            return this;
        }

        public Builder setRds(@Nullable Input<String> rds) {
            this.rds = rds;
            return this;
        }

        public Builder setRds(@Nullable String rds) {
            this.rds = Input.ofNullable(rds);
            return this;
        }

        public Builder setRedshift(@Nullable Input<String> redshift) {
            this.redshift = redshift;
            return this;
        }

        public Builder setRedshift(@Nullable String redshift) {
            this.redshift = Input.ofNullable(redshift);
            return this;
        }

        public Builder setResourcegroups(@Nullable Input<String> resourcegroups) {
            this.resourcegroups = resourcegroups;
            return this;
        }

        public Builder setResourcegroups(@Nullable String resourcegroups) {
            this.resourcegroups = Input.ofNullable(resourcegroups);
            return this;
        }

        public Builder setResourcegroupstaggingapi(@Nullable Input<String> resourcegroupstaggingapi) {
            this.resourcegroupstaggingapi = resourcegroupstaggingapi;
            return this;
        }

        public Builder setResourcegroupstaggingapi(@Nullable String resourcegroupstaggingapi) {
            this.resourcegroupstaggingapi = Input.ofNullable(resourcegroupstaggingapi);
            return this;
        }

        public Builder setRoute53(@Nullable Input<String> route53) {
            this.route53 = route53;
            return this;
        }

        public Builder setRoute53(@Nullable String route53) {
            this.route53 = Input.ofNullable(route53);
            return this;
        }

        public Builder setRoute53domains(@Nullable Input<String> route53domains) {
            this.route53domains = route53domains;
            return this;
        }

        public Builder setRoute53domains(@Nullable String route53domains) {
            this.route53domains = Input.ofNullable(route53domains);
            return this;
        }

        public Builder setRoute53recoverycontrolconfig(@Nullable Input<String> route53recoverycontrolconfig) {
            this.route53recoverycontrolconfig = route53recoverycontrolconfig;
            return this;
        }

        public Builder setRoute53recoverycontrolconfig(@Nullable String route53recoverycontrolconfig) {
            this.route53recoverycontrolconfig = Input.ofNullable(route53recoverycontrolconfig);
            return this;
        }

        public Builder setRoute53recoveryreadiness(@Nullable Input<String> route53recoveryreadiness) {
            this.route53recoveryreadiness = route53recoveryreadiness;
            return this;
        }

        public Builder setRoute53recoveryreadiness(@Nullable String route53recoveryreadiness) {
            this.route53recoveryreadiness = Input.ofNullable(route53recoveryreadiness);
            return this;
        }

        public Builder setRoute53resolver(@Nullable Input<String> route53resolver) {
            this.route53resolver = route53resolver;
            return this;
        }

        public Builder setRoute53resolver(@Nullable String route53resolver) {
            this.route53resolver = Input.ofNullable(route53resolver);
            return this;
        }

        public Builder setS3(@Nullable Input<String> s3) {
            this.s3 = s3;
            return this;
        }

        public Builder setS3(@Nullable String s3) {
            this.s3 = Input.ofNullable(s3);
            return this;
        }

        public Builder setS3control(@Nullable Input<String> s3control) {
            this.s3control = s3control;
            return this;
        }

        public Builder setS3control(@Nullable String s3control) {
            this.s3control = Input.ofNullable(s3control);
            return this;
        }

        public Builder setS3outposts(@Nullable Input<String> s3outposts) {
            this.s3outposts = s3outposts;
            return this;
        }

        public Builder setS3outposts(@Nullable String s3outposts) {
            this.s3outposts = Input.ofNullable(s3outposts);
            return this;
        }

        public Builder setSagemaker(@Nullable Input<String> sagemaker) {
            this.sagemaker = sagemaker;
            return this;
        }

        public Builder setSagemaker(@Nullable String sagemaker) {
            this.sagemaker = Input.ofNullable(sagemaker);
            return this;
        }

        public Builder setSchemas(@Nullable Input<String> schemas) {
            this.schemas = schemas;
            return this;
        }

        public Builder setSchemas(@Nullable String schemas) {
            this.schemas = Input.ofNullable(schemas);
            return this;
        }

        public Builder setSdb(@Nullable Input<String> sdb) {
            this.sdb = sdb;
            return this;
        }

        public Builder setSdb(@Nullable String sdb) {
            this.sdb = Input.ofNullable(sdb);
            return this;
        }

        public Builder setSecretsmanager(@Nullable Input<String> secretsmanager) {
            this.secretsmanager = secretsmanager;
            return this;
        }

        public Builder setSecretsmanager(@Nullable String secretsmanager) {
            this.secretsmanager = Input.ofNullable(secretsmanager);
            return this;
        }

        public Builder setSecurityhub(@Nullable Input<String> securityhub) {
            this.securityhub = securityhub;
            return this;
        }

        public Builder setSecurityhub(@Nullable String securityhub) {
            this.securityhub = Input.ofNullable(securityhub);
            return this;
        }

        public Builder setServerlessrepo(@Nullable Input<String> serverlessrepo) {
            this.serverlessrepo = serverlessrepo;
            return this;
        }

        public Builder setServerlessrepo(@Nullable String serverlessrepo) {
            this.serverlessrepo = Input.ofNullable(serverlessrepo);
            return this;
        }

        public Builder setServicecatalog(@Nullable Input<String> servicecatalog) {
            this.servicecatalog = servicecatalog;
            return this;
        }

        public Builder setServicecatalog(@Nullable String servicecatalog) {
            this.servicecatalog = Input.ofNullable(servicecatalog);
            return this;
        }

        public Builder setServicediscovery(@Nullable Input<String> servicediscovery) {
            this.servicediscovery = servicediscovery;
            return this;
        }

        public Builder setServicediscovery(@Nullable String servicediscovery) {
            this.servicediscovery = Input.ofNullable(servicediscovery);
            return this;
        }

        public Builder setServicequotas(@Nullable Input<String> servicequotas) {
            this.servicequotas = servicequotas;
            return this;
        }

        public Builder setServicequotas(@Nullable String servicequotas) {
            this.servicequotas = Input.ofNullable(servicequotas);
            return this;
        }

        public Builder setSes(@Nullable Input<String> ses) {
            this.ses = ses;
            return this;
        }

        public Builder setSes(@Nullable String ses) {
            this.ses = Input.ofNullable(ses);
            return this;
        }

        public Builder setShield(@Nullable Input<String> shield) {
            this.shield = shield;
            return this;
        }

        public Builder setShield(@Nullable String shield) {
            this.shield = Input.ofNullable(shield);
            return this;
        }

        public Builder setSigner(@Nullable Input<String> signer) {
            this.signer = signer;
            return this;
        }

        public Builder setSigner(@Nullable String signer) {
            this.signer = Input.ofNullable(signer);
            return this;
        }

        public Builder setSns(@Nullable Input<String> sns) {
            this.sns = sns;
            return this;
        }

        public Builder setSns(@Nullable String sns) {
            this.sns = Input.ofNullable(sns);
            return this;
        }

        public Builder setSqs(@Nullable Input<String> sqs) {
            this.sqs = sqs;
            return this;
        }

        public Builder setSqs(@Nullable String sqs) {
            this.sqs = Input.ofNullable(sqs);
            return this;
        }

        public Builder setSsm(@Nullable Input<String> ssm) {
            this.ssm = ssm;
            return this;
        }

        public Builder setSsm(@Nullable String ssm) {
            this.ssm = Input.ofNullable(ssm);
            return this;
        }

        public Builder setSsoadmin(@Nullable Input<String> ssoadmin) {
            this.ssoadmin = ssoadmin;
            return this;
        }

        public Builder setSsoadmin(@Nullable String ssoadmin) {
            this.ssoadmin = Input.ofNullable(ssoadmin);
            return this;
        }

        public Builder setStepfunctions(@Nullable Input<String> stepfunctions) {
            this.stepfunctions = stepfunctions;
            return this;
        }

        public Builder setStepfunctions(@Nullable String stepfunctions) {
            this.stepfunctions = Input.ofNullable(stepfunctions);
            return this;
        }

        public Builder setStoragegateway(@Nullable Input<String> storagegateway) {
            this.storagegateway = storagegateway;
            return this;
        }

        public Builder setStoragegateway(@Nullable String storagegateway) {
            this.storagegateway = Input.ofNullable(storagegateway);
            return this;
        }

        public Builder setSts(@Nullable Input<String> sts) {
            this.sts = sts;
            return this;
        }

        public Builder setSts(@Nullable String sts) {
            this.sts = Input.ofNullable(sts);
            return this;
        }

        public Builder setSwf(@Nullable Input<String> swf) {
            this.swf = swf;
            return this;
        }

        public Builder setSwf(@Nullable String swf) {
            this.swf = Input.ofNullable(swf);
            return this;
        }

        public Builder setSynthetics(@Nullable Input<String> synthetics) {
            this.synthetics = synthetics;
            return this;
        }

        public Builder setSynthetics(@Nullable String synthetics) {
            this.synthetics = Input.ofNullable(synthetics);
            return this;
        }

        public Builder setTimestreamwrite(@Nullable Input<String> timestreamwrite) {
            this.timestreamwrite = timestreamwrite;
            return this;
        }

        public Builder setTimestreamwrite(@Nullable String timestreamwrite) {
            this.timestreamwrite = Input.ofNullable(timestreamwrite);
            return this;
        }

        public Builder setTransfer(@Nullable Input<String> transfer) {
            this.transfer = transfer;
            return this;
        }

        public Builder setTransfer(@Nullable String transfer) {
            this.transfer = Input.ofNullable(transfer);
            return this;
        }

        public Builder setWaf(@Nullable Input<String> waf) {
            this.waf = waf;
            return this;
        }

        public Builder setWaf(@Nullable String waf) {
            this.waf = Input.ofNullable(waf);
            return this;
        }

        public Builder setWafregional(@Nullable Input<String> wafregional) {
            this.wafregional = wafregional;
            return this;
        }

        public Builder setWafregional(@Nullable String wafregional) {
            this.wafregional = Input.ofNullable(wafregional);
            return this;
        }

        public Builder setWafv2(@Nullable Input<String> wafv2) {
            this.wafv2 = wafv2;
            return this;
        }

        public Builder setWafv2(@Nullable String wafv2) {
            this.wafv2 = Input.ofNullable(wafv2);
            return this;
        }

        public Builder setWorklink(@Nullable Input<String> worklink) {
            this.worklink = worklink;
            return this;
        }

        public Builder setWorklink(@Nullable String worklink) {
            this.worklink = Input.ofNullable(worklink);
            return this;
        }

        public Builder setWorkmail(@Nullable Input<String> workmail) {
            this.workmail = workmail;
            return this;
        }

        public Builder setWorkmail(@Nullable String workmail) {
            this.workmail = Input.ofNullable(workmail);
            return this;
        }

        public Builder setWorkspaces(@Nullable Input<String> workspaces) {
            this.workspaces = workspaces;
            return this;
        }

        public Builder setWorkspaces(@Nullable String workspaces) {
            this.workspaces = Input.ofNullable(workspaces);
            return this;
        }

        public Builder setXray(@Nullable Input<String> xray) {
            this.xray = xray;
            return this;
        }

        public Builder setXray(@Nullable String xray) {
            this.xray = Input.ofNullable(xray);
            return this;
        }

        public ProviderEndpointArgs build() {
            return new ProviderEndpointArgs(accessanalyzer, acm, acmpca, amplify, appconfig, applicationautoscaling, applicationinsights, appmesh, apprunner, appstream, appsync, athena, auditmanager, autoscaling, backup, batch, budgets, chime, cloud9, cloudformation, cloudfront, cloudhsm, cloudsearch, cloudtrail, cloudwatch, cloudwatchevents, cloudwatchlogs, codeartifact, codebuild, codecommit, codedeploy, codepipeline, codestarconnections, cognitoidentity, configservice, connect, cur, dataexchange, datapipeline, datasync, dax, detective, devicefarm, directconnect, dlm, dms, docdb, ds, dynamodb, ec2, ecr, ecrpublic, ecs, efs, eks, elasticache, elasticbeanstalk, elastictranscoder, elb, elbv2, emr, emrcontainers, es, firehose, fms, forecast, fsx, gamelift, glacier, globalaccelerator, glue, greengrass, guardduty, iam, identitystore, imagebuilder, inspector, iot, iotanalytics, iotevents, kafka, kinesis, kinesisanalytics, kinesisanalyticsv2, kinesisvideo, kms, lakeformation, lambda, lexmodels, licensemanager, lightsail, location, macie, macie2, managedblockchain, marketplacecatalog, mediaconnect, mediaconvert, medialive, mediapackage, mediastore, mediastoredata, memorydb, mq, mwaa, neptune, networkfirewall, networkmanager, opsworks, organizations, outposts, personalize, pinpoint, pricing, qldb, quicksight, ram, rds, redshift, resourcegroups, resourcegroupstaggingapi, route53, route53domains, route53recoverycontrolconfig, route53recoveryreadiness, route53resolver, s3, s3control, s3outposts, sagemaker, schemas, sdb, secretsmanager, securityhub, serverlessrepo, servicecatalog, servicediscovery, servicequotas, ses, shield, signer, sns, sqs, ssm, ssoadmin, stepfunctions, storagegateway, sts, swf, synthetics, timestreamwrite, transfer, waf, wafregional, wafv2, worklink, workmail, workspaces, xray);
        }
    }
}
