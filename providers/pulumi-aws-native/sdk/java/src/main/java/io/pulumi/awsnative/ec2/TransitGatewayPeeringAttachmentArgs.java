// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ec2;

import io.pulumi.awsnative.ec2.inputs.TransitGatewayPeeringAttachmentOptionsArgs;
import io.pulumi.awsnative.ec2.inputs.TransitGatewayPeeringAttachmentTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TransitGatewayPeeringAttachmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final TransitGatewayPeeringAttachmentArgs Empty = new TransitGatewayPeeringAttachmentArgs();

    /**
     * Options for transit gateway peering attachment
     * 
     */
    @InputImport(name="options")
      private final @Nullable Input<TransitGatewayPeeringAttachmentOptionsArgs> options;

    public Input<TransitGatewayPeeringAttachmentOptionsArgs> getOptions() {
        return this.options == null ? Input.empty() : this.options;
    }

    /**
     * The ID of the peer account
     * 
     */
    @InputImport(name="peerAccountId", required=true)
      private final Input<String> peerAccountId;

    public Input<String> getPeerAccountId() {
        return this.peerAccountId;
    }

    /**
     * Peer Region
     * 
     */
    @InputImport(name="peerRegion", required=true)
      private final Input<String> peerRegion;

    public Input<String> getPeerRegion() {
        return this.peerRegion;
    }

    /**
     * The ID of the peer transit gateway.
     * 
     */
    @InputImport(name="peerTransitGatewayId", required=true)
      private final Input<String> peerTransitGatewayId;

    public Input<String> getPeerTransitGatewayId() {
        return this.peerTransitGatewayId;
    }

    /**
     * The tags for the transit gateway peering attachment.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<List<TransitGatewayPeeringAttachmentTagArgs>> tags;

    public Input<List<TransitGatewayPeeringAttachmentTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The ID of the transit gateway.
     * 
     */
    @InputImport(name="transitGatewayId", required=true)
      private final Input<String> transitGatewayId;

    public Input<String> getTransitGatewayId() {
        return this.transitGatewayId;
    }

    public TransitGatewayPeeringAttachmentArgs(
        @Nullable Input<TransitGatewayPeeringAttachmentOptionsArgs> options,
        Input<String> peerAccountId,
        Input<String> peerRegion,
        Input<String> peerTransitGatewayId,
        @Nullable Input<List<TransitGatewayPeeringAttachmentTagArgs>> tags,
        Input<String> transitGatewayId) {
        this.options = options;
        this.peerAccountId = Objects.requireNonNull(peerAccountId, "expected parameter 'peerAccountId' to be non-null");
        this.peerRegion = Objects.requireNonNull(peerRegion, "expected parameter 'peerRegion' to be non-null");
        this.peerTransitGatewayId = Objects.requireNonNull(peerTransitGatewayId, "expected parameter 'peerTransitGatewayId' to be non-null");
        this.tags = tags;
        this.transitGatewayId = Objects.requireNonNull(transitGatewayId, "expected parameter 'transitGatewayId' to be non-null");
    }

    private TransitGatewayPeeringAttachmentArgs() {
        this.options = Input.empty();
        this.peerAccountId = Input.empty();
        this.peerRegion = Input.empty();
        this.peerTransitGatewayId = Input.empty();
        this.tags = Input.empty();
        this.transitGatewayId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransitGatewayPeeringAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<TransitGatewayPeeringAttachmentOptionsArgs> options;
        private Input<String> peerAccountId;
        private Input<String> peerRegion;
        private Input<String> peerTransitGatewayId;
        private @Nullable Input<List<TransitGatewayPeeringAttachmentTagArgs>> tags;
        private Input<String> transitGatewayId;

        public Builder() {
    	      // Empty
        }

        public Builder(TransitGatewayPeeringAttachmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.options = defaults.options;
    	      this.peerAccountId = defaults.peerAccountId;
    	      this.peerRegion = defaults.peerRegion;
    	      this.peerTransitGatewayId = defaults.peerTransitGatewayId;
    	      this.tags = defaults.tags;
    	      this.transitGatewayId = defaults.transitGatewayId;
        }

        public Builder options(@Nullable Input<TransitGatewayPeeringAttachmentOptionsArgs> options) {
            this.options = options;
            return this;
        }

        public Builder options(@Nullable TransitGatewayPeeringAttachmentOptionsArgs options) {
            this.options = Input.ofNullable(options);
            return this;
        }

        public Builder peerAccountId(Input<String> peerAccountId) {
            this.peerAccountId = Objects.requireNonNull(peerAccountId);
            return this;
        }

        public Builder peerAccountId(String peerAccountId) {
            this.peerAccountId = Input.of(Objects.requireNonNull(peerAccountId));
            return this;
        }

        public Builder peerRegion(Input<String> peerRegion) {
            this.peerRegion = Objects.requireNonNull(peerRegion);
            return this;
        }

        public Builder peerRegion(String peerRegion) {
            this.peerRegion = Input.of(Objects.requireNonNull(peerRegion));
            return this;
        }

        public Builder peerTransitGatewayId(Input<String> peerTransitGatewayId) {
            this.peerTransitGatewayId = Objects.requireNonNull(peerTransitGatewayId);
            return this;
        }

        public Builder peerTransitGatewayId(String peerTransitGatewayId) {
            this.peerTransitGatewayId = Input.of(Objects.requireNonNull(peerTransitGatewayId));
            return this;
        }

        public Builder tags(@Nullable Input<List<TransitGatewayPeeringAttachmentTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<TransitGatewayPeeringAttachmentTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder transitGatewayId(Input<String> transitGatewayId) {
            this.transitGatewayId = Objects.requireNonNull(transitGatewayId);
            return this;
        }

        public Builder transitGatewayId(String transitGatewayId) {
            this.transitGatewayId = Input.of(Objects.requireNonNull(transitGatewayId));
            return this;
        }
        public TransitGatewayPeeringAttachmentArgs build() {
            return new TransitGatewayPeeringAttachmentArgs(options, peerAccountId, peerRegion, peerTransitGatewayId, tags, transitGatewayId);
        }
    }
}
