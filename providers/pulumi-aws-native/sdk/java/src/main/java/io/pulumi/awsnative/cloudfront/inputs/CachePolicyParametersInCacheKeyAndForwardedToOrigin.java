// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudfront.inputs;

import io.pulumi.awsnative.cloudfront.inputs.CachePolicyCookiesConfig;
import io.pulumi.awsnative.cloudfront.inputs.CachePolicyHeadersConfig;
import io.pulumi.awsnative.cloudfront.inputs.CachePolicyQueryStringsConfig;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CachePolicyParametersInCacheKeyAndForwardedToOrigin extends io.pulumi.resources.InvokeArgs {

    public static final CachePolicyParametersInCacheKeyAndForwardedToOrigin Empty = new CachePolicyParametersInCacheKeyAndForwardedToOrigin();

    @InputImport(name="cookiesConfig", required=true)
    private final CachePolicyCookiesConfig cookiesConfig;

    public CachePolicyCookiesConfig getCookiesConfig() {
        return this.cookiesConfig;
    }

    @InputImport(name="enableAcceptEncodingBrotli")
    private final @Nullable Boolean enableAcceptEncodingBrotli;

    public Optional<Boolean> getEnableAcceptEncodingBrotli() {
        return this.enableAcceptEncodingBrotli == null ? Optional.empty() : Optional.ofNullable(this.enableAcceptEncodingBrotli);
    }

    @InputImport(name="enableAcceptEncodingGzip", required=true)
    private final Boolean enableAcceptEncodingGzip;

    public Boolean getEnableAcceptEncodingGzip() {
        return this.enableAcceptEncodingGzip;
    }

    @InputImport(name="headersConfig", required=true)
    private final CachePolicyHeadersConfig headersConfig;

    public CachePolicyHeadersConfig getHeadersConfig() {
        return this.headersConfig;
    }

    @InputImport(name="queryStringsConfig", required=true)
    private final CachePolicyQueryStringsConfig queryStringsConfig;

    public CachePolicyQueryStringsConfig getQueryStringsConfig() {
        return this.queryStringsConfig;
    }

    public CachePolicyParametersInCacheKeyAndForwardedToOrigin(
        CachePolicyCookiesConfig cookiesConfig,
        @Nullable Boolean enableAcceptEncodingBrotli,
        Boolean enableAcceptEncodingGzip,
        CachePolicyHeadersConfig headersConfig,
        CachePolicyQueryStringsConfig queryStringsConfig) {
        this.cookiesConfig = Objects.requireNonNull(cookiesConfig, "expected parameter 'cookiesConfig' to be non-null");
        this.enableAcceptEncodingBrotli = enableAcceptEncodingBrotli;
        this.enableAcceptEncodingGzip = Objects.requireNonNull(enableAcceptEncodingGzip, "expected parameter 'enableAcceptEncodingGzip' to be non-null");
        this.headersConfig = Objects.requireNonNull(headersConfig, "expected parameter 'headersConfig' to be non-null");
        this.queryStringsConfig = Objects.requireNonNull(queryStringsConfig, "expected parameter 'queryStringsConfig' to be non-null");
    }

    private CachePolicyParametersInCacheKeyAndForwardedToOrigin() {
        this.cookiesConfig = null;
        this.enableAcceptEncodingBrotli = null;
        this.enableAcceptEncodingGzip = null;
        this.headersConfig = null;
        this.queryStringsConfig = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CachePolicyParametersInCacheKeyAndForwardedToOrigin defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CachePolicyCookiesConfig cookiesConfig;
        private @Nullable Boolean enableAcceptEncodingBrotli;
        private Boolean enableAcceptEncodingGzip;
        private CachePolicyHeadersConfig headersConfig;
        private CachePolicyQueryStringsConfig queryStringsConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(CachePolicyParametersInCacheKeyAndForwardedToOrigin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cookiesConfig = defaults.cookiesConfig;
    	      this.enableAcceptEncodingBrotli = defaults.enableAcceptEncodingBrotli;
    	      this.enableAcceptEncodingGzip = defaults.enableAcceptEncodingGzip;
    	      this.headersConfig = defaults.headersConfig;
    	      this.queryStringsConfig = defaults.queryStringsConfig;
        }

        public Builder setCookiesConfig(CachePolicyCookiesConfig cookiesConfig) {
            this.cookiesConfig = Objects.requireNonNull(cookiesConfig);
            return this;
        }

        public Builder setEnableAcceptEncodingBrotli(@Nullable Boolean enableAcceptEncodingBrotli) {
            this.enableAcceptEncodingBrotli = enableAcceptEncodingBrotli;
            return this;
        }

        public Builder setEnableAcceptEncodingGzip(Boolean enableAcceptEncodingGzip) {
            this.enableAcceptEncodingGzip = Objects.requireNonNull(enableAcceptEncodingGzip);
            return this;
        }

        public Builder setHeadersConfig(CachePolicyHeadersConfig headersConfig) {
            this.headersConfig = Objects.requireNonNull(headersConfig);
            return this;
        }

        public Builder setQueryStringsConfig(CachePolicyQueryStringsConfig queryStringsConfig) {
            this.queryStringsConfig = Objects.requireNonNull(queryStringsConfig);
            return this;
        }

        public CachePolicyParametersInCacheKeyAndForwardedToOrigin build() {
            return new CachePolicyParametersInCacheKeyAndForwardedToOrigin(cookiesConfig, enableAcceptEncodingBrotli, enableAcceptEncodingGzip, headersConfig, queryStringsConfig);
        }
    }
}
