// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.outputs;

import io.pulumi.awsnative.s3.outputs.BucketStorageClassAnalysis;
import io.pulumi.awsnative.s3.outputs.BucketTagFilter;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class BucketAnalyticsConfiguration {
    /**
     * The ID that identifies the analytics configuration.
     * 
     */
    private final String id;
    /**
     * The prefix that an object must have to be included in the analytics results.
     * 
     */
    private final @Nullable String prefix;
    private final BucketStorageClassAnalysis storageClassAnalysis;
    private final @Nullable List<BucketTagFilter> tagFilters;

    @OutputCustomType.Constructor({"id","prefix","storageClassAnalysis","tagFilters"})
    private BucketAnalyticsConfiguration(
        String id,
        @Nullable String prefix,
        BucketStorageClassAnalysis storageClassAnalysis,
        @Nullable List<BucketTagFilter> tagFilters) {
        this.id = Objects.requireNonNull(id);
        this.prefix = prefix;
        this.storageClassAnalysis = Objects.requireNonNull(storageClassAnalysis);
        this.tagFilters = tagFilters;
    }

    /**
     * The ID that identifies the analytics configuration.
     * 
     */
    public String getId() {
        return this.id;
    }
    /**
     * The prefix that an object must have to be included in the analytics results.
     * 
     */
    public Optional<String> getPrefix() {
        return Optional.ofNullable(this.prefix);
    }
    public BucketStorageClassAnalysis getStorageClassAnalysis() {
        return this.storageClassAnalysis;
    }
    public List<BucketTagFilter> getTagFilters() {
        return this.tagFilters == null ? List.of() : this.tagFilters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketAnalyticsConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private @Nullable String prefix;
        private BucketStorageClassAnalysis storageClassAnalysis;
        private @Nullable List<BucketTagFilter> tagFilters;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketAnalyticsConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.prefix = defaults.prefix;
    	      this.storageClassAnalysis = defaults.storageClassAnalysis;
    	      this.tagFilters = defaults.tagFilters;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setPrefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }

        public Builder setStorageClassAnalysis(BucketStorageClassAnalysis storageClassAnalysis) {
            this.storageClassAnalysis = Objects.requireNonNull(storageClassAnalysis);
            return this;
        }

        public Builder setTagFilters(@Nullable List<BucketTagFilter> tagFilters) {
            this.tagFilters = tagFilters;
            return this;
        }
        public BucketAnalyticsConfiguration build() {
            return new BucketAnalyticsConfiguration(id, prefix, storageClassAnalysis, tagFilters);
        }
    }
}
