// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.enums.DatasetFilesLimitOrder;
import io.pulumi.awsnative.databrew.enums.DatasetFilesLimitOrderedBy;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetFilesLimit extends io.pulumi.resources.InvokeArgs {

    public static final DatasetFilesLimit Empty = new DatasetFilesLimit();

    /**
     * Maximum number of files
     * 
     */
    @Import(name="maxFiles", required=true)
      private final Integer maxFiles;

    public Integer getMaxFiles() {
        return this.maxFiles;
    }

    /**
     * Order
     * 
     */
    @Import(name="order")
      private final @Nullable DatasetFilesLimitOrder order;

    public Optional<DatasetFilesLimitOrder> getOrder() {
        return this.order == null ? Optional.empty() : Optional.ofNullable(this.order);
    }

    /**
     * Ordered by
     * 
     */
    @Import(name="orderedBy")
      private final @Nullable DatasetFilesLimitOrderedBy orderedBy;

    public Optional<DatasetFilesLimitOrderedBy> getOrderedBy() {
        return this.orderedBy == null ? Optional.empty() : Optional.ofNullable(this.orderedBy);
    }

    public DatasetFilesLimit(
        Integer maxFiles,
        @Nullable DatasetFilesLimitOrder order,
        @Nullable DatasetFilesLimitOrderedBy orderedBy) {
        this.maxFiles = Objects.requireNonNull(maxFiles, "expected parameter 'maxFiles' to be non-null");
        this.order = order;
        this.orderedBy = orderedBy;
    }

    private DatasetFilesLimit() {
        this.maxFiles = null;
        this.order = null;
        this.orderedBy = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetFilesLimit defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer maxFiles;
        private @Nullable DatasetFilesLimitOrder order;
        private @Nullable DatasetFilesLimitOrderedBy orderedBy;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetFilesLimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxFiles = defaults.maxFiles;
    	      this.order = defaults.order;
    	      this.orderedBy = defaults.orderedBy;
        }

        public Builder maxFiles(Integer maxFiles) {
            this.maxFiles = Objects.requireNonNull(maxFiles);
            return this;
        }
        public Builder order(@Nullable DatasetFilesLimitOrder order) {
            this.order = order;
            return this;
        }
        public Builder orderedBy(@Nullable DatasetFilesLimitOrderedBy orderedBy) {
            this.orderedBy = orderedBy;
            return this;
        }        public DatasetFilesLimit build() {
            return new DatasetFilesLimit(maxFiles, order, orderedBy);
        }
    }
}
