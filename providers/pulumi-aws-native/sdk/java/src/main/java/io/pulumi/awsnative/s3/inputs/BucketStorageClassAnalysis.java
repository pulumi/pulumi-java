// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.awsnative.s3.inputs.BucketDataExport;
import io.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.
 * 
 */
public final class BucketStorageClassAnalysis extends io.pulumi.resources.InvokeArgs {

    public static final BucketStorageClassAnalysis Empty = new BucketStorageClassAnalysis();

    @Import(name="dataExport")
      private final @Nullable BucketDataExport dataExport;

    public Optional<BucketDataExport> getDataExport() {
        return this.dataExport == null ? Optional.empty() : Optional.ofNullable(this.dataExport);
    }

    public BucketStorageClassAnalysis(@Nullable BucketDataExport dataExport) {
        this.dataExport = dataExport;
    }

    private BucketStorageClassAnalysis() {
        this.dataExport = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketStorageClassAnalysis defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable BucketDataExport dataExport;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketStorageClassAnalysis defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataExport = defaults.dataExport;
        }

        public Builder dataExport(@Nullable BucketDataExport dataExport) {
            this.dataExport = dataExport;
            return this;
        }
        public BucketStorageClassAnalysis build() {
            return new BucketStorageClassAnalysis(dataExport);
        }
    }
}
