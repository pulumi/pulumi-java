// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iot.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class SecurityProfileMetricValue {
    /**
     * If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
     * 
     */
    private final @Nullable List<String> cidrs;
    /**
     * If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
     * 
     */
    private final @Nullable String count;
    /**
     * The numeral value of a metric.
     * 
     */
    private final @Nullable Double number;
    /**
     * The numeral values of a metric.
     * 
     */
    private final @Nullable List<Double> numbers;
    /**
     * If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
     * 
     */
    private final @Nullable List<Integer> ports;
    /**
     * The string values of a metric.
     * 
     */
    private final @Nullable List<String> strings;

    @OutputCustomType.Constructor({"cidrs","count","number","numbers","ports","strings"})
    private SecurityProfileMetricValue(
        @Nullable List<String> cidrs,
        @Nullable String count,
        @Nullable Double number,
        @Nullable List<Double> numbers,
        @Nullable List<Integer> ports,
        @Nullable List<String> strings) {
        this.cidrs = cidrs;
        this.count = count;
        this.number = number;
        this.numbers = numbers;
        this.ports = ports;
        this.strings = strings;
    }

    /**
     * If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
     * 
     */
    public List<String> getCidrs() {
        return this.cidrs == null ? List.of() : this.cidrs;
    }
    /**
     * If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
     * 
     */
    public Optional<String> getCount() {
        return Optional.ofNullable(this.count);
    }
    /**
     * The numeral value of a metric.
     * 
     */
    public Optional<Double> getNumber() {
        return Optional.ofNullable(this.number);
    }
    /**
     * The numeral values of a metric.
     * 
     */
    public List<Double> getNumbers() {
        return this.numbers == null ? List.of() : this.numbers;
    }
    /**
     * If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
     * 
     */
    public List<Integer> getPorts() {
        return this.ports == null ? List.of() : this.ports;
    }
    /**
     * The string values of a metric.
     * 
     */
    public List<String> getStrings() {
        return this.strings == null ? List.of() : this.strings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityProfileMetricValue defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> cidrs;
        private @Nullable String count;
        private @Nullable Double number;
        private @Nullable List<Double> numbers;
        private @Nullable List<Integer> ports;
        private @Nullable List<String> strings;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityProfileMetricValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrs = defaults.cidrs;
    	      this.count = defaults.count;
    	      this.number = defaults.number;
    	      this.numbers = defaults.numbers;
    	      this.ports = defaults.ports;
    	      this.strings = defaults.strings;
        }

        public Builder setCidrs(@Nullable List<String> cidrs) {
            this.cidrs = cidrs;
            return this;
        }

        public Builder setCount(@Nullable String count) {
            this.count = count;
            return this;
        }

        public Builder setNumber(@Nullable Double number) {
            this.number = number;
            return this;
        }

        public Builder setNumbers(@Nullable List<Double> numbers) {
            this.numbers = numbers;
            return this;
        }

        public Builder setPorts(@Nullable List<Integer> ports) {
            this.ports = ports;
            return this;
        }

        public Builder setStrings(@Nullable List<String> strings) {
            this.strings = strings;
            return this;
        }

        public SecurityProfileMetricValue build() {
            return new SecurityProfileMetricValue(cidrs, count, number, numbers, ports, strings);
        }
    }
}
