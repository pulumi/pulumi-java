// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.customerprofiles.inputs;

import io.pulumi.awsnative.customerprofiles.enums.IntegrationTaskType;
import io.pulumi.awsnative.customerprofiles.inputs.IntegrationConnectorOperatorArgs;
import io.pulumi.awsnative.customerprofiles.inputs.IntegrationTaskPropertiesMapArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IntegrationTaskArgs extends io.pulumi.resources.ResourceArgs {

    public static final IntegrationTaskArgs Empty = new IntegrationTaskArgs();

    @InputImport(name="connectorOperator")
      private final @Nullable Output<IntegrationConnectorOperatorArgs> connectorOperator;

    public Output<IntegrationConnectorOperatorArgs> getConnectorOperator() {
        return this.connectorOperator == null ? Output.empty() : this.connectorOperator;
    }

    @InputImport(name="destinationField")
      private final @Nullable Output<String> destinationField;

    public Output<String> getDestinationField() {
        return this.destinationField == null ? Output.empty() : this.destinationField;
    }

    @InputImport(name="sourceFields", required=true)
      private final Output<List<String>> sourceFields;

    public Output<List<String>> getSourceFields() {
        return this.sourceFields;
    }

    @InputImport(name="taskProperties")
      private final @Nullable Output<List<IntegrationTaskPropertiesMapArgs>> taskProperties;

    public Output<List<IntegrationTaskPropertiesMapArgs>> getTaskProperties() {
        return this.taskProperties == null ? Output.empty() : this.taskProperties;
    }

    @InputImport(name="taskType", required=true)
      private final Output<IntegrationTaskType> taskType;

    public Output<IntegrationTaskType> getTaskType() {
        return this.taskType;
    }

    public IntegrationTaskArgs(
        @Nullable Output<IntegrationConnectorOperatorArgs> connectorOperator,
        @Nullable Output<String> destinationField,
        Output<List<String>> sourceFields,
        @Nullable Output<List<IntegrationTaskPropertiesMapArgs>> taskProperties,
        Output<IntegrationTaskType> taskType) {
        this.connectorOperator = connectorOperator;
        this.destinationField = destinationField;
        this.sourceFields = Objects.requireNonNull(sourceFields, "expected parameter 'sourceFields' to be non-null");
        this.taskProperties = taskProperties;
        this.taskType = Objects.requireNonNull(taskType, "expected parameter 'taskType' to be non-null");
    }

    private IntegrationTaskArgs() {
        this.connectorOperator = Output.empty();
        this.destinationField = Output.empty();
        this.sourceFields = Output.empty();
        this.taskProperties = Output.empty();
        this.taskType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationTaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<IntegrationConnectorOperatorArgs> connectorOperator;
        private @Nullable Output<String> destinationField;
        private Output<List<String>> sourceFields;
        private @Nullable Output<List<IntegrationTaskPropertiesMapArgs>> taskProperties;
        private Output<IntegrationTaskType> taskType;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationTaskArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectorOperator = defaults.connectorOperator;
    	      this.destinationField = defaults.destinationField;
    	      this.sourceFields = defaults.sourceFields;
    	      this.taskProperties = defaults.taskProperties;
    	      this.taskType = defaults.taskType;
        }

        public Builder connectorOperator(@Nullable Output<IntegrationConnectorOperatorArgs> connectorOperator) {
            this.connectorOperator = connectorOperator;
            return this;
        }

        public Builder connectorOperator(@Nullable IntegrationConnectorOperatorArgs connectorOperator) {
            this.connectorOperator = Output.ofNullable(connectorOperator);
            return this;
        }

        public Builder destinationField(@Nullable Output<String> destinationField) {
            this.destinationField = destinationField;
            return this;
        }

        public Builder destinationField(@Nullable String destinationField) {
            this.destinationField = Output.ofNullable(destinationField);
            return this;
        }

        public Builder sourceFields(Output<List<String>> sourceFields) {
            this.sourceFields = Objects.requireNonNull(sourceFields);
            return this;
        }

        public Builder sourceFields(List<String> sourceFields) {
            this.sourceFields = Output.of(Objects.requireNonNull(sourceFields));
            return this;
        }

        public Builder taskProperties(@Nullable Output<List<IntegrationTaskPropertiesMapArgs>> taskProperties) {
            this.taskProperties = taskProperties;
            return this;
        }

        public Builder taskProperties(@Nullable List<IntegrationTaskPropertiesMapArgs> taskProperties) {
            this.taskProperties = Output.ofNullable(taskProperties);
            return this;
        }

        public Builder taskType(Output<IntegrationTaskType> taskType) {
            this.taskType = Objects.requireNonNull(taskType);
            return this;
        }

        public Builder taskType(IntegrationTaskType taskType) {
            this.taskType = Output.of(Objects.requireNonNull(taskType));
            return this;
        }
        public IntegrationTaskArgs build() {
            return new IntegrationTaskArgs(connectorOperator, destinationField, sourceFields, taskProperties, taskType);
        }
    }
}
