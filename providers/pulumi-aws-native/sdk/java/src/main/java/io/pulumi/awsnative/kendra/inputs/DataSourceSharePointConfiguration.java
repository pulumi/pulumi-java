// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kendra.inputs;

import io.pulumi.awsnative.kendra.enums.DataSourceSharePointConfigurationSharePointVersion;
import io.pulumi.awsnative.kendra.inputs.DataSourceS3Path;
import io.pulumi.awsnative.kendra.inputs.DataSourceToIndexFieldMapping;
import io.pulumi.awsnative.kendra.inputs.DataSourceVpcConfiguration;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SharePoint configuration
 * 
 */
public final class DataSourceSharePointConfiguration extends io.pulumi.resources.InvokeArgs {

    public static final DataSourceSharePointConfiguration Empty = new DataSourceSharePointConfiguration();

    @InputImport(name="crawlAttachments")
      private final @Nullable Boolean crawlAttachments;

    public Optional<Boolean> getCrawlAttachments() {
        return this.crawlAttachments == null ? Optional.empty() : Optional.ofNullable(this.crawlAttachments);
    }

    @InputImport(name="disableLocalGroups")
      private final @Nullable Boolean disableLocalGroups;

    public Optional<Boolean> getDisableLocalGroups() {
        return this.disableLocalGroups == null ? Optional.empty() : Optional.ofNullable(this.disableLocalGroups);
    }

    @InputImport(name="documentTitleFieldName")
      private final @Nullable String documentTitleFieldName;

    public Optional<String> getDocumentTitleFieldName() {
        return this.documentTitleFieldName == null ? Optional.empty() : Optional.ofNullable(this.documentTitleFieldName);
    }

    @InputImport(name="exclusionPatterns")
      private final @Nullable List<String> exclusionPatterns;

    public List<String> getExclusionPatterns() {
        return this.exclusionPatterns == null ? List.of() : this.exclusionPatterns;
    }

    @InputImport(name="fieldMappings")
      private final @Nullable List<DataSourceToIndexFieldMapping> fieldMappings;

    public List<DataSourceToIndexFieldMapping> getFieldMappings() {
        return this.fieldMappings == null ? List.of() : this.fieldMappings;
    }

    @InputImport(name="inclusionPatterns")
      private final @Nullable List<String> inclusionPatterns;

    public List<String> getInclusionPatterns() {
        return this.inclusionPatterns == null ? List.of() : this.inclusionPatterns;
    }

    @InputImport(name="secretArn", required=true)
      private final String secretArn;

    public String getSecretArn() {
        return this.secretArn;
    }

    @InputImport(name="sharePointVersion", required=true)
      private final DataSourceSharePointConfigurationSharePointVersion sharePointVersion;

    public DataSourceSharePointConfigurationSharePointVersion getSharePointVersion() {
        return this.sharePointVersion;
    }

    @InputImport(name="sslCertificateS3Path")
      private final @Nullable DataSourceS3Path sslCertificateS3Path;

    public Optional<DataSourceS3Path> getSslCertificateS3Path() {
        return this.sslCertificateS3Path == null ? Optional.empty() : Optional.ofNullable(this.sslCertificateS3Path);
    }

    @InputImport(name="urls", required=true)
      private final List<String> urls;

    public List<String> getUrls() {
        return this.urls;
    }

    @InputImport(name="useChangeLog")
      private final @Nullable Boolean useChangeLog;

    public Optional<Boolean> getUseChangeLog() {
        return this.useChangeLog == null ? Optional.empty() : Optional.ofNullable(this.useChangeLog);
    }

    @InputImport(name="vpcConfiguration")
      private final @Nullable DataSourceVpcConfiguration vpcConfiguration;

    public Optional<DataSourceVpcConfiguration> getVpcConfiguration() {
        return this.vpcConfiguration == null ? Optional.empty() : Optional.ofNullable(this.vpcConfiguration);
    }

    public DataSourceSharePointConfiguration(
        @Nullable Boolean crawlAttachments,
        @Nullable Boolean disableLocalGroups,
        @Nullable String documentTitleFieldName,
        @Nullable List<String> exclusionPatterns,
        @Nullable List<DataSourceToIndexFieldMapping> fieldMappings,
        @Nullable List<String> inclusionPatterns,
        String secretArn,
        DataSourceSharePointConfigurationSharePointVersion sharePointVersion,
        @Nullable DataSourceS3Path sslCertificateS3Path,
        List<String> urls,
        @Nullable Boolean useChangeLog,
        @Nullable DataSourceVpcConfiguration vpcConfiguration) {
        this.crawlAttachments = crawlAttachments;
        this.disableLocalGroups = disableLocalGroups;
        this.documentTitleFieldName = documentTitleFieldName;
        this.exclusionPatterns = exclusionPatterns;
        this.fieldMappings = fieldMappings;
        this.inclusionPatterns = inclusionPatterns;
        this.secretArn = Objects.requireNonNull(secretArn, "expected parameter 'secretArn' to be non-null");
        this.sharePointVersion = Objects.requireNonNull(sharePointVersion, "expected parameter 'sharePointVersion' to be non-null");
        this.sslCertificateS3Path = sslCertificateS3Path;
        this.urls = Objects.requireNonNull(urls, "expected parameter 'urls' to be non-null");
        this.useChangeLog = useChangeLog;
        this.vpcConfiguration = vpcConfiguration;
    }

    private DataSourceSharePointConfiguration() {
        this.crawlAttachments = null;
        this.disableLocalGroups = null;
        this.documentTitleFieldName = null;
        this.exclusionPatterns = List.of();
        this.fieldMappings = List.of();
        this.inclusionPatterns = List.of();
        this.secretArn = null;
        this.sharePointVersion = null;
        this.sslCertificateS3Path = null;
        this.urls = List.of();
        this.useChangeLog = null;
        this.vpcConfiguration = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceSharePointConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean crawlAttachments;
        private @Nullable Boolean disableLocalGroups;
        private @Nullable String documentTitleFieldName;
        private @Nullable List<String> exclusionPatterns;
        private @Nullable List<DataSourceToIndexFieldMapping> fieldMappings;
        private @Nullable List<String> inclusionPatterns;
        private String secretArn;
        private DataSourceSharePointConfigurationSharePointVersion sharePointVersion;
        private @Nullable DataSourceS3Path sslCertificateS3Path;
        private List<String> urls;
        private @Nullable Boolean useChangeLog;
        private @Nullable DataSourceVpcConfiguration vpcConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceSharePointConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.crawlAttachments = defaults.crawlAttachments;
    	      this.disableLocalGroups = defaults.disableLocalGroups;
    	      this.documentTitleFieldName = defaults.documentTitleFieldName;
    	      this.exclusionPatterns = defaults.exclusionPatterns;
    	      this.fieldMappings = defaults.fieldMappings;
    	      this.inclusionPatterns = defaults.inclusionPatterns;
    	      this.secretArn = defaults.secretArn;
    	      this.sharePointVersion = defaults.sharePointVersion;
    	      this.sslCertificateS3Path = defaults.sslCertificateS3Path;
    	      this.urls = defaults.urls;
    	      this.useChangeLog = defaults.useChangeLog;
    	      this.vpcConfiguration = defaults.vpcConfiguration;
        }

        public Builder setCrawlAttachments(@Nullable Boolean crawlAttachments) {
            this.crawlAttachments = crawlAttachments;
            return this;
        }

        public Builder setDisableLocalGroups(@Nullable Boolean disableLocalGroups) {
            this.disableLocalGroups = disableLocalGroups;
            return this;
        }

        public Builder setDocumentTitleFieldName(@Nullable String documentTitleFieldName) {
            this.documentTitleFieldName = documentTitleFieldName;
            return this;
        }

        public Builder setExclusionPatterns(@Nullable List<String> exclusionPatterns) {
            this.exclusionPatterns = exclusionPatterns;
            return this;
        }

        public Builder setFieldMappings(@Nullable List<DataSourceToIndexFieldMapping> fieldMappings) {
            this.fieldMappings = fieldMappings;
            return this;
        }

        public Builder setInclusionPatterns(@Nullable List<String> inclusionPatterns) {
            this.inclusionPatterns = inclusionPatterns;
            return this;
        }

        public Builder setSecretArn(String secretArn) {
            this.secretArn = Objects.requireNonNull(secretArn);
            return this;
        }

        public Builder setSharePointVersion(DataSourceSharePointConfigurationSharePointVersion sharePointVersion) {
            this.sharePointVersion = Objects.requireNonNull(sharePointVersion);
            return this;
        }

        public Builder setSslCertificateS3Path(@Nullable DataSourceS3Path sslCertificateS3Path) {
            this.sslCertificateS3Path = sslCertificateS3Path;
            return this;
        }

        public Builder setUrls(List<String> urls) {
            this.urls = Objects.requireNonNull(urls);
            return this;
        }

        public Builder setUseChangeLog(@Nullable Boolean useChangeLog) {
            this.useChangeLog = useChangeLog;
            return this;
        }

        public Builder setVpcConfiguration(@Nullable DataSourceVpcConfiguration vpcConfiguration) {
            this.vpcConfiguration = vpcConfiguration;
            return this;
        }
        public DataSourceSharePointConfiguration build() {
            return new DataSourceSharePointConfiguration(crawlAttachments, disableLocalGroups, documentTitleFieldName, exclusionPatterns, fieldMappings, inclusionPatterns, secretArn, sharePointVersion, sslCertificateS3Path, urls, useChangeLog, vpcConfiguration);
        }
    }
}
