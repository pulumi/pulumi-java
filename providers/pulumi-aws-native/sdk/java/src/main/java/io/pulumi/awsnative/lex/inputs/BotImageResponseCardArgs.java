// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lex.inputs;

import io.pulumi.awsnative.lex.inputs.BotButtonArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A message that defines a response card that the client application can show to the user.
 * 
 */
public final class BotImageResponseCardArgs extends io.pulumi.resources.ResourceArgs {

    public static final BotImageResponseCardArgs Empty = new BotImageResponseCardArgs();

    /**
     * A list of buttons that should be displayed on the response card.
     * 
     */
    @InputImport(name="buttons")
    private final @Nullable Input<List<BotButtonArgs>> buttons;

    public Input<List<BotButtonArgs>> getButtons() {
        return this.buttons == null ? Input.empty() : this.buttons;
    }

    /**
     * The URL of an image to display on the response card.
     * 
     */
    @InputImport(name="imageUrl")
    private final @Nullable Input<String> imageUrl;

    public Input<String> getImageUrl() {
        return this.imageUrl == null ? Input.empty() : this.imageUrl;
    }

    /**
     * The subtitle to display on the response card.
     * 
     */
    @InputImport(name="subtitle")
    private final @Nullable Input<String> subtitle;

    public Input<String> getSubtitle() {
        return this.subtitle == null ? Input.empty() : this.subtitle;
    }

    /**
     * The title to display on the response card.
     * 
     */
    @InputImport(name="title", required=true)
    private final Input<String> title;

    public Input<String> getTitle() {
        return this.title;
    }

    public BotImageResponseCardArgs(
        @Nullable Input<List<BotButtonArgs>> buttons,
        @Nullable Input<String> imageUrl,
        @Nullable Input<String> subtitle,
        Input<String> title) {
        this.buttons = buttons;
        this.imageUrl = imageUrl;
        this.subtitle = subtitle;
        this.title = Objects.requireNonNull(title, "expected parameter 'title' to be non-null");
    }

    private BotImageResponseCardArgs() {
        this.buttons = Input.empty();
        this.imageUrl = Input.empty();
        this.subtitle = Input.empty();
        this.title = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BotImageResponseCardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<BotButtonArgs>> buttons;
        private @Nullable Input<String> imageUrl;
        private @Nullable Input<String> subtitle;
        private Input<String> title;

        public Builder() {
    	      // Empty
        }

        public Builder(BotImageResponseCardArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buttons = defaults.buttons;
    	      this.imageUrl = defaults.imageUrl;
    	      this.subtitle = defaults.subtitle;
    	      this.title = defaults.title;
        }

        public Builder setButtons(@Nullable Input<List<BotButtonArgs>> buttons) {
            this.buttons = buttons;
            return this;
        }

        public Builder setButtons(@Nullable List<BotButtonArgs> buttons) {
            this.buttons = Input.ofNullable(buttons);
            return this;
        }

        public Builder setImageUrl(@Nullable Input<String> imageUrl) {
            this.imageUrl = imageUrl;
            return this;
        }

        public Builder setImageUrl(@Nullable String imageUrl) {
            this.imageUrl = Input.ofNullable(imageUrl);
            return this;
        }

        public Builder setSubtitle(@Nullable Input<String> subtitle) {
            this.subtitle = subtitle;
            return this;
        }

        public Builder setSubtitle(@Nullable String subtitle) {
            this.subtitle = Input.ofNullable(subtitle);
            return this;
        }

        public Builder setTitle(Input<String> title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }

        public Builder setTitle(String title) {
            this.title = Input.of(Objects.requireNonNull(title));
            return this;
        }

        public BotImageResponseCardArgs build() {
            return new BotImageResponseCardArgs(buttons, imageUrl, subtitle, title);
        }
    }
}
