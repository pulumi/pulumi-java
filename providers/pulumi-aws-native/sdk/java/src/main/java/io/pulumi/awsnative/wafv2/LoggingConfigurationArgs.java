// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2;

import io.pulumi.awsnative.wafv2.inputs.LoggingConfigurationFieldToMatchArgs;
import io.pulumi.awsnative.wafv2.inputs.LoggingFilterPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LoggingConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final LoggingConfigurationArgs Empty = new LoggingConfigurationArgs();

    /**
     * The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
     * 
     */
    @InputImport(name="logDestinationConfigs", required=true)
    private final Input<List<String>> logDestinationConfigs;

    public Input<List<String>> getLogDestinationConfigs() {
        return this.logDestinationConfigs;
    }

    /**
     * Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
     * 
     */
    @InputImport(name="loggingFilter")
    private final @Nullable Input<LoggingFilterPropertiesArgs> loggingFilter;

    public Input<LoggingFilterPropertiesArgs> getLoggingFilter() {
        return this.loggingFilter == null ? Input.empty() : this.loggingFilter;
    }

    /**
     * The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
     * 
     */
    @InputImport(name="redactedFields")
    private final @Nullable Input<List<LoggingConfigurationFieldToMatchArgs>> redactedFields;

    public Input<List<LoggingConfigurationFieldToMatchArgs>> getRedactedFields() {
        return this.redactedFields == null ? Input.empty() : this.redactedFields;
    }

    /**
     * The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
     * 
     */
    @InputImport(name="resourceArn", required=true)
    private final Input<String> resourceArn;

    public Input<String> getResourceArn() {
        return this.resourceArn;
    }

    public LoggingConfigurationArgs(
        Input<List<String>> logDestinationConfigs,
        @Nullable Input<LoggingFilterPropertiesArgs> loggingFilter,
        @Nullable Input<List<LoggingConfigurationFieldToMatchArgs>> redactedFields,
        Input<String> resourceArn) {
        this.logDestinationConfigs = Objects.requireNonNull(logDestinationConfigs, "expected parameter 'logDestinationConfigs' to be non-null");
        this.loggingFilter = loggingFilter;
        this.redactedFields = redactedFields;
        this.resourceArn = Objects.requireNonNull(resourceArn, "expected parameter 'resourceArn' to be non-null");
    }

    private LoggingConfigurationArgs() {
        this.logDestinationConfigs = Input.empty();
        this.loggingFilter = Input.empty();
        this.redactedFields = Input.empty();
        this.resourceArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoggingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> logDestinationConfigs;
        private @Nullable Input<LoggingFilterPropertiesArgs> loggingFilter;
        private @Nullable Input<List<LoggingConfigurationFieldToMatchArgs>> redactedFields;
        private Input<String> resourceArn;

        public Builder() {
    	      // Empty
        }

        public Builder(LoggingConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logDestinationConfigs = defaults.logDestinationConfigs;
    	      this.loggingFilter = defaults.loggingFilter;
    	      this.redactedFields = defaults.redactedFields;
    	      this.resourceArn = defaults.resourceArn;
        }

        public Builder setLogDestinationConfigs(Input<List<String>> logDestinationConfigs) {
            this.logDestinationConfigs = Objects.requireNonNull(logDestinationConfigs);
            return this;
        }

        public Builder setLogDestinationConfigs(List<String> logDestinationConfigs) {
            this.logDestinationConfigs = Input.of(Objects.requireNonNull(logDestinationConfigs));
            return this;
        }

        public Builder setLoggingFilter(@Nullable Input<LoggingFilterPropertiesArgs> loggingFilter) {
            this.loggingFilter = loggingFilter;
            return this;
        }

        public Builder setLoggingFilter(@Nullable LoggingFilterPropertiesArgs loggingFilter) {
            this.loggingFilter = Input.ofNullable(loggingFilter);
            return this;
        }

        public Builder setRedactedFields(@Nullable Input<List<LoggingConfigurationFieldToMatchArgs>> redactedFields) {
            this.redactedFields = redactedFields;
            return this;
        }

        public Builder setRedactedFields(@Nullable List<LoggingConfigurationFieldToMatchArgs> redactedFields) {
            this.redactedFields = Input.ofNullable(redactedFields);
            return this;
        }

        public Builder setResourceArn(Input<String> resourceArn) {
            this.resourceArn = Objects.requireNonNull(resourceArn);
            return this;
        }

        public Builder setResourceArn(String resourceArn) {
            this.resourceArn = Input.of(Objects.requireNonNull(resourceArn));
            return this;
        }

        public LoggingConfigurationArgs build() {
            return new LoggingConfigurationArgs(logDestinationConfigs, loggingFilter, redactedFields, resourceArn);
        }
    }
}
