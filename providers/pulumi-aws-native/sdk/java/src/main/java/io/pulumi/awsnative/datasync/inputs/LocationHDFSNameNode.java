// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.datasync.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class LocationHDFSNameNode extends io.pulumi.resources.InvokeArgs {

    public static final LocationHDFSNameNode Empty = new LocationHDFSNameNode();

    @InputImport(name="hostname", required=true)
    private final String hostname;

    public String getHostname() {
        return this.hostname;
    }

    @InputImport(name="port", required=true)
    private final Integer port;

    public Integer getPort() {
        return this.port;
    }

    public LocationHDFSNameNode(
        String hostname,
        Integer port) {
        this.hostname = Objects.requireNonNull(hostname, "expected parameter 'hostname' to be non-null");
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
    }

    private LocationHDFSNameNode() {
        this.hostname = null;
        this.port = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocationHDFSNameNode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String hostname;
        private Integer port;

        public Builder() {
    	      // Empty
        }

        public Builder(LocationHDFSNameNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.port = defaults.port;
        }

        public Builder setHostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }

        public Builder setPort(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public LocationHDFSNameNode build() {
            return new LocationHDFSNameNode(hostname, port);
        }
    }
}
