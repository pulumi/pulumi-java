// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Selection criteria for prefix-level metrics.
 * 
 */
public final class StorageLensSelectionCriteriaArgs extends io.pulumi.resources.ResourceArgs {

    public static final StorageLensSelectionCriteriaArgs Empty = new StorageLensSelectionCriteriaArgs();

    /**
     * Delimiter to divide S3 key into hierarchy of prefixes.
     * 
     */
    @InputImport(name="delimiter")
        private final @Nullable Input<String> delimiter;

    public Input<String> getDelimiter() {
        return this.delimiter == null ? Input.empty() : this.delimiter;
    }

    /**
     * Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.
     * 
     */
    @InputImport(name="maxDepth")
        private final @Nullable Input<Integer> maxDepth;

    public Input<Integer> getMaxDepth() {
        return this.maxDepth == null ? Input.empty() : this.maxDepth;
    }

    /**
     * The minimum storage bytes threshold for the prefixes to be included in the analysis.
     * 
     */
    @InputImport(name="minStorageBytesPercentage")
        private final @Nullable Input<Double> minStorageBytesPercentage;

    public Input<Double> getMinStorageBytesPercentage() {
        return this.minStorageBytesPercentage == null ? Input.empty() : this.minStorageBytesPercentage;
    }

    public StorageLensSelectionCriteriaArgs(
        @Nullable Input<String> delimiter,
        @Nullable Input<Integer> maxDepth,
        @Nullable Input<Double> minStorageBytesPercentage) {
        this.delimiter = delimiter;
        this.maxDepth = maxDepth;
        this.minStorageBytesPercentage = minStorageBytesPercentage;
    }

    private StorageLensSelectionCriteriaArgs() {
        this.delimiter = Input.empty();
        this.maxDepth = Input.empty();
        this.minStorageBytesPercentage = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageLensSelectionCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> delimiter;
        private @Nullable Input<Integer> maxDepth;
        private @Nullable Input<Double> minStorageBytesPercentage;

        public Builder() {
    	      // Empty
        }

        public Builder(StorageLensSelectionCriteriaArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delimiter = defaults.delimiter;
    	      this.maxDepth = defaults.maxDepth;
    	      this.minStorageBytesPercentage = defaults.minStorageBytesPercentage;
        }

        public Builder setDelimiter(@Nullable Input<String> delimiter) {
            this.delimiter = delimiter;
            return this;
        }

        public Builder setDelimiter(@Nullable String delimiter) {
            this.delimiter = Input.ofNullable(delimiter);
            return this;
        }

        public Builder setMaxDepth(@Nullable Input<Integer> maxDepth) {
            this.maxDepth = maxDepth;
            return this;
        }

        public Builder setMaxDepth(@Nullable Integer maxDepth) {
            this.maxDepth = Input.ofNullable(maxDepth);
            return this;
        }

        public Builder setMinStorageBytesPercentage(@Nullable Input<Double> minStorageBytesPercentage) {
            this.minStorageBytesPercentage = minStorageBytesPercentage;
            return this;
        }

        public Builder setMinStorageBytesPercentage(@Nullable Double minStorageBytesPercentage) {
            this.minStorageBytesPercentage = Input.ofNullable(minStorageBytesPercentage);
            return this;
        }
        public StorageLensSelectionCriteriaArgs build() {
            return new StorageLensSelectionCriteriaArgs(delimiter, maxDepth, minStorageBytesPercentage);
        }
    }
}
