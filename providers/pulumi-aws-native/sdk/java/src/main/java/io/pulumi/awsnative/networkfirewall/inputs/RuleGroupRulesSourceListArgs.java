// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.networkfirewall.inputs;

import io.pulumi.awsnative.networkfirewall.enums.RuleGroupGeneratedRulesType;
import io.pulumi.awsnative.networkfirewall.enums.RuleGroupTargetType;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RuleGroupRulesSourceListArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleGroupRulesSourceListArgs Empty = new RuleGroupRulesSourceListArgs();

    @InputImport(name="generatedRulesType", required=true)
    private final Input<RuleGroupGeneratedRulesType> generatedRulesType;

    public Input<RuleGroupGeneratedRulesType> getGeneratedRulesType() {
        return this.generatedRulesType;
    }

    @InputImport(name="targetTypes", required=true)
    private final Input<List<RuleGroupTargetType>> targetTypes;

    public Input<List<RuleGroupTargetType>> getTargetTypes() {
        return this.targetTypes;
    }

    @InputImport(name="targets", required=true)
    private final Input<List<String>> targets;

    public Input<List<String>> getTargets() {
        return this.targets;
    }

    public RuleGroupRulesSourceListArgs(
        Input<RuleGroupGeneratedRulesType> generatedRulesType,
        Input<List<RuleGroupTargetType>> targetTypes,
        Input<List<String>> targets) {
        this.generatedRulesType = Objects.requireNonNull(generatedRulesType, "expected parameter 'generatedRulesType' to be non-null");
        this.targetTypes = Objects.requireNonNull(targetTypes, "expected parameter 'targetTypes' to be non-null");
        this.targets = Objects.requireNonNull(targets, "expected parameter 'targets' to be non-null");
    }

    private RuleGroupRulesSourceListArgs() {
        this.generatedRulesType = Input.empty();
        this.targetTypes = Input.empty();
        this.targets = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleGroupRulesSourceListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<RuleGroupGeneratedRulesType> generatedRulesType;
        private Input<List<RuleGroupTargetType>> targetTypes;
        private Input<List<String>> targets;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleGroupRulesSourceListArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.generatedRulesType = defaults.generatedRulesType;
    	      this.targetTypes = defaults.targetTypes;
    	      this.targets = defaults.targets;
        }

        public Builder setGeneratedRulesType(Input<RuleGroupGeneratedRulesType> generatedRulesType) {
            this.generatedRulesType = Objects.requireNonNull(generatedRulesType);
            return this;
        }

        public Builder setGeneratedRulesType(RuleGroupGeneratedRulesType generatedRulesType) {
            this.generatedRulesType = Input.of(Objects.requireNonNull(generatedRulesType));
            return this;
        }

        public Builder setTargetTypes(Input<List<RuleGroupTargetType>> targetTypes) {
            this.targetTypes = Objects.requireNonNull(targetTypes);
            return this;
        }

        public Builder setTargetTypes(List<RuleGroupTargetType> targetTypes) {
            this.targetTypes = Input.of(Objects.requireNonNull(targetTypes));
            return this;
        }

        public Builder setTargets(Input<List<String>> targets) {
            this.targets = Objects.requireNonNull(targets);
            return this;
        }

        public Builder setTargets(List<String> targets) {
            this.targets = Input.of(Objects.requireNonNull(targets));
            return this;
        }

        public RuleGroupRulesSourceListArgs build() {
            return new RuleGroupRulesSourceListArgs(generatedRulesType, targetTypes, targets);
        }
    }
}
