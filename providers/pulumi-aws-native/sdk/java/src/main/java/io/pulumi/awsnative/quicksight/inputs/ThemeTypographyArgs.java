// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight.inputs;

import io.pulumi.awsnative.quicksight.inputs.ThemeFontArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * <p>The typeface for the theme.</p>
 * 
 */
public final class ThemeTypographyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ThemeTypographyArgs Empty = new ThemeTypographyArgs();

    @Import(name="fontFamilies")
      private final @Nullable Output<List<ThemeFontArgs>> fontFamilies;

    public Output<List<ThemeFontArgs>> getFontFamilies() {
        return this.fontFamilies == null ? Output.empty() : this.fontFamilies;
    }

    public ThemeTypographyArgs(@Nullable Output<List<ThemeFontArgs>> fontFamilies) {
        this.fontFamilies = fontFamilies;
    }

    private ThemeTypographyArgs() {
        this.fontFamilies = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThemeTypographyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ThemeFontArgs>> fontFamilies;

        public Builder() {
    	      // Empty
        }

        public Builder(ThemeTypographyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fontFamilies = defaults.fontFamilies;
        }

        public Builder fontFamilies(@Nullable Output<List<ThemeFontArgs>> fontFamilies) {
            this.fontFamilies = fontFamilies;
            return this;
        }
        public Builder fontFamilies(@Nullable List<ThemeFontArgs> fontFamilies) {
            this.fontFamilies = Output.ofNullable(fontFamilies);
            return this;
        }
        public Builder fontFamilies(ThemeFontArgs... fontFamilies) {
            return fontFamilies(List.of(fontFamilies));
        }        public ThemeTypographyArgs build() {
            return new ThemeTypographyArgs(fontFamilies);
        }
    }
}
