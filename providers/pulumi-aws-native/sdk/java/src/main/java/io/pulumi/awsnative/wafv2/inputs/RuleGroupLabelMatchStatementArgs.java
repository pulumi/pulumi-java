// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2.inputs;

import io.pulumi.awsnative.wafv2.enums.RuleGroupLabelMatchScope;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class RuleGroupLabelMatchStatementArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleGroupLabelMatchStatementArgs Empty = new RuleGroupLabelMatchStatementArgs();

    @InputImport(name="key", required=true)
      private final Input<String> key;

    public Input<String> getKey() {
        return this.key;
    }

    @InputImport(name="scope", required=true)
      private final Input<RuleGroupLabelMatchScope> scope;

    public Input<RuleGroupLabelMatchScope> getScope() {
        return this.scope;
    }

    public RuleGroupLabelMatchStatementArgs(
        Input<String> key,
        Input<RuleGroupLabelMatchScope> scope) {
        this.key = Objects.requireNonNull(key, "expected parameter 'key' to be non-null");
        this.scope = Objects.requireNonNull(scope, "expected parameter 'scope' to be non-null");
    }

    private RuleGroupLabelMatchStatementArgs() {
        this.key = Input.empty();
        this.scope = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleGroupLabelMatchStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> key;
        private Input<RuleGroupLabelMatchScope> scope;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleGroupLabelMatchStatementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.scope = defaults.scope;
        }

        public Builder key(Input<String> key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }

        public Builder key(String key) {
            this.key = Input.of(Objects.requireNonNull(key));
            return this;
        }

        public Builder scope(Input<RuleGroupLabelMatchScope> scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }

        public Builder scope(RuleGroupLabelMatchScope scope) {
            this.scope = Input.of(Objects.requireNonNull(scope));
            return this;
        }
        public RuleGroupLabelMatchStatementArgs build() {
            return new RuleGroupLabelMatchStatementArgs(key, scope);
        }
    }
}
