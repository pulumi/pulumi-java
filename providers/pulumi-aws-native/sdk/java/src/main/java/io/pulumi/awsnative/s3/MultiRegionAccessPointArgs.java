// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3;

import io.pulumi.awsnative.s3.inputs.MultiRegionAccessPointPublicAccessBlockConfigurationArgs;
import io.pulumi.awsnative.s3.inputs.MultiRegionAccessPointRegionArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MultiRegionAccessPointArgs extends io.pulumi.resources.ResourceArgs {

    public static final MultiRegionAccessPointArgs Empty = new MultiRegionAccessPointArgs();

    /**
     * The name you want to assign to this Multi Region Access Point.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The PublicAccessBlock configuration that you want to apply to this Multi Region Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
     * 
     */
    @InputImport(name="publicAccessBlockConfiguration")
    private final @Nullable Input<MultiRegionAccessPointPublicAccessBlockConfigurationArgs> publicAccessBlockConfiguration;

    public Input<MultiRegionAccessPointPublicAccessBlockConfigurationArgs> getPublicAccessBlockConfiguration() {
        return this.publicAccessBlockConfiguration == null ? Input.empty() : this.publicAccessBlockConfiguration;
    }

    /**
     * The list of buckets that you want to associate this Multi Region Access Point with.
     * 
     */
    @InputImport(name="regions", required=true)
    private final Input<List<MultiRegionAccessPointRegionArgs>> regions;

    public Input<List<MultiRegionAccessPointRegionArgs>> getRegions() {
        return this.regions;
    }

    public MultiRegionAccessPointArgs(
        @Nullable Input<String> name,
        @Nullable Input<MultiRegionAccessPointPublicAccessBlockConfigurationArgs> publicAccessBlockConfiguration,
        Input<List<MultiRegionAccessPointRegionArgs>> regions) {
        this.name = name;
        this.publicAccessBlockConfiguration = publicAccessBlockConfiguration;
        this.regions = Objects.requireNonNull(regions, "expected parameter 'regions' to be non-null");
    }

    private MultiRegionAccessPointArgs() {
        this.name = Input.empty();
        this.publicAccessBlockConfiguration = Input.empty();
        this.regions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MultiRegionAccessPointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> name;
        private @Nullable Input<MultiRegionAccessPointPublicAccessBlockConfigurationArgs> publicAccessBlockConfiguration;
        private Input<List<MultiRegionAccessPointRegionArgs>> regions;

        public Builder() {
    	      // Empty
        }

        public Builder(MultiRegionAccessPointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.publicAccessBlockConfiguration = defaults.publicAccessBlockConfiguration;
    	      this.regions = defaults.regions;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPublicAccessBlockConfiguration(@Nullable Input<MultiRegionAccessPointPublicAccessBlockConfigurationArgs> publicAccessBlockConfiguration) {
            this.publicAccessBlockConfiguration = publicAccessBlockConfiguration;
            return this;
        }

        public Builder setPublicAccessBlockConfiguration(@Nullable MultiRegionAccessPointPublicAccessBlockConfigurationArgs publicAccessBlockConfiguration) {
            this.publicAccessBlockConfiguration = Input.ofNullable(publicAccessBlockConfiguration);
            return this;
        }

        public Builder setRegions(Input<List<MultiRegionAccessPointRegionArgs>> regions) {
            this.regions = Objects.requireNonNull(regions);
            return this;
        }

        public Builder setRegions(List<MultiRegionAccessPointRegionArgs> regions) {
            this.regions = Input.of(Objects.requireNonNull(regions));
            return this;
        }

        public MultiRegionAccessPointArgs build() {
            return new MultiRegionAccessPointArgs(name, publicAccessBlockConfiguration, regions);
        }
    }
}
