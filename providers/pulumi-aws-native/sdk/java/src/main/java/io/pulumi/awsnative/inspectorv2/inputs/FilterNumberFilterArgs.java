// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.inspectorv2.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FilterNumberFilterArgs extends io.pulumi.resources.ResourceArgs {

    public static final FilterNumberFilterArgs Empty = new FilterNumberFilterArgs();

    @Import(name="lowerInclusive")
      private final @Nullable Output<Double> lowerInclusive;

    public Output<Double> lowerInclusive() {
        return this.lowerInclusive == null ? Codegen.empty() : this.lowerInclusive;
    }

    @Import(name="upperInclusive")
      private final @Nullable Output<Double> upperInclusive;

    public Output<Double> upperInclusive() {
        return this.upperInclusive == null ? Codegen.empty() : this.upperInclusive;
    }

    public FilterNumberFilterArgs(
        @Nullable Output<Double> lowerInclusive,
        @Nullable Output<Double> upperInclusive) {
        this.lowerInclusive = lowerInclusive;
        this.upperInclusive = upperInclusive;
    }

    private FilterNumberFilterArgs() {
        this.lowerInclusive = Codegen.empty();
        this.upperInclusive = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FilterNumberFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Double> lowerInclusive;
        private @Nullable Output<Double> upperInclusive;

        public Builder() {
    	      // Empty
        }

        public Builder(FilterNumberFilterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lowerInclusive = defaults.lowerInclusive;
    	      this.upperInclusive = defaults.upperInclusive;
        }

        public Builder lowerInclusive(@Nullable Output<Double> lowerInclusive) {
            this.lowerInclusive = lowerInclusive;
            return this;
        }
        public Builder lowerInclusive(@Nullable Double lowerInclusive) {
            this.lowerInclusive = Codegen.ofNullable(lowerInclusive);
            return this;
        }
        public Builder upperInclusive(@Nullable Output<Double> upperInclusive) {
            this.upperInclusive = upperInclusive;
            return this;
        }
        public Builder upperInclusive(@Nullable Double upperInclusive) {
            this.upperInclusive = Codegen.ofNullable(upperInclusive);
            return this;
        }        public FilterNumberFilterArgs build() {
            return new FilterNumberFilterArgs(lowerInclusive, upperInclusive);
        }
    }
}
