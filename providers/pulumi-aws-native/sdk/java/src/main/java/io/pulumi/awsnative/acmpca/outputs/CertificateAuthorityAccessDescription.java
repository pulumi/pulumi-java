// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.acmpca.outputs;

import io.pulumi.awsnative.acmpca.outputs.CertificateAuthorityAccessMethod;
import io.pulumi.awsnative.acmpca.outputs.CertificateAuthorityGeneralName;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.util.Objects;

@OutputCustomType
public final class CertificateAuthorityAccessDescription {
    private final CertificateAuthorityGeneralName accessLocation;
    private final CertificateAuthorityAccessMethod accessMethod;

    @OutputCustomType.Constructor({"accessLocation","accessMethod"})
    private CertificateAuthorityAccessDescription(
        CertificateAuthorityGeneralName accessLocation,
        CertificateAuthorityAccessMethod accessMethod) {
        this.accessLocation = Objects.requireNonNull(accessLocation);
        this.accessMethod = Objects.requireNonNull(accessMethod);
    }

    public CertificateAuthorityGeneralName getAccessLocation() {
        return this.accessLocation;
    }
    public CertificateAuthorityAccessMethod getAccessMethod() {
        return this.accessMethod;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateAuthorityAccessDescription defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateAuthorityGeneralName accessLocation;
        private CertificateAuthorityAccessMethod accessMethod;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateAuthorityAccessDescription defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLocation = defaults.accessLocation;
    	      this.accessMethod = defaults.accessMethod;
        }

        public Builder setAccessLocation(CertificateAuthorityGeneralName accessLocation) {
            this.accessLocation = Objects.requireNonNull(accessLocation);
            return this;
        }

        public Builder setAccessMethod(CertificateAuthorityAccessMethod accessMethod) {
            this.accessMethod = Objects.requireNonNull(accessMethod);
            return this;
        }

        public CertificateAuthorityAccessDescription build() {
            return new CertificateAuthorityAccessDescription(accessLocation, accessMethod);
        }
    }
}
