// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lex.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;


public final class SentimentAnalysisSettingsPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final SentimentAnalysisSettingsPropertiesArgs Empty = new SentimentAnalysisSettingsPropertiesArgs();

    @InputImport(name="detectSentiment", required=true)
    private final Input<Boolean> detectSentiment;

    public Input<Boolean> getDetectSentiment() {
        return this.detectSentiment;
    }

    public SentimentAnalysisSettingsPropertiesArgs(Input<Boolean> detectSentiment) {
        this.detectSentiment = Objects.requireNonNull(detectSentiment, "expected parameter 'detectSentiment' to be non-null");
    }

    private SentimentAnalysisSettingsPropertiesArgs() {
        this.detectSentiment = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SentimentAnalysisSettingsPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Boolean> detectSentiment;

        public Builder() {
    	      // Empty
        }

        public Builder(SentimentAnalysisSettingsPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detectSentiment = defaults.detectSentiment;
        }

        public Builder setDetectSentiment(Input<Boolean> detectSentiment) {
            this.detectSentiment = Objects.requireNonNull(detectSentiment);
            return this;
        }

        public Builder setDetectSentiment(Boolean detectSentiment) {
            this.detectSentiment = Input.of(Objects.requireNonNull(detectSentiment));
            return this;
        }

        public SentimentAnalysisSettingsPropertiesArgs build() {
            return new SentimentAnalysisSettingsPropertiesArgs(detectSentiment);
        }
    }
}
