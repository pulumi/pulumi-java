// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lex.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
 * 
 */
public final class SentimentAnalysisSettingsPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final SentimentAnalysisSettingsPropertiesArgs Empty = new SentimentAnalysisSettingsPropertiesArgs();

    /**
     * Enable to call Amazon Comprehend for Sentiment natively within Lex
     * 
     */
    @InputImport(name="detectSentiment", required=true)
      private final Output<Boolean> detectSentiment;

    public Output<Boolean> getDetectSentiment() {
        return this.detectSentiment;
    }

    public SentimentAnalysisSettingsPropertiesArgs(Output<Boolean> detectSentiment) {
        this.detectSentiment = Objects.requireNonNull(detectSentiment, "expected parameter 'detectSentiment' to be non-null");
    }

    private SentimentAnalysisSettingsPropertiesArgs() {
        this.detectSentiment = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SentimentAnalysisSettingsPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> detectSentiment;

        public Builder() {
    	      // Empty
        }

        public Builder(SentimentAnalysisSettingsPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detectSentiment = defaults.detectSentiment;
        }

        public Builder detectSentiment(Output<Boolean> detectSentiment) {
            this.detectSentiment = Objects.requireNonNull(detectSentiment);
            return this;
        }

        public Builder detectSentiment(Boolean detectSentiment) {
            this.detectSentiment = Output.of(Objects.requireNonNull(detectSentiment));
            return this;
        }
        public SentimentAnalysisSettingsPropertiesArgs build() {
            return new SentimentAnalysisSettingsPropertiesArgs(detectSentiment);
        }
    }
}
