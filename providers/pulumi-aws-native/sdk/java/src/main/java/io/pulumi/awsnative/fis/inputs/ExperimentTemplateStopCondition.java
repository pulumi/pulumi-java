// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.fis.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExperimentTemplateStopCondition extends io.pulumi.resources.InvokeArgs {

    public static final ExperimentTemplateStopCondition Empty = new ExperimentTemplateStopCondition();

    @InputImport(name="source", required=true)
        private final String source;

    public String getSource() {
        return this.source;
    }

    @InputImport(name="value")
        private final @Nullable String value;

    public Optional<String> getValue() {
        return this.value == null ? Optional.empty() : Optional.ofNullable(this.value);
    }

    public ExperimentTemplateStopCondition(
        String source,
        @Nullable String value) {
        this.source = Objects.requireNonNull(source, "expected parameter 'source' to be non-null");
        this.value = value;
    }

    private ExperimentTemplateStopCondition() {
        this.source = null;
        this.value = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExperimentTemplateStopCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String source;
        private @Nullable String value;

        public Builder() {
    	      // Empty
        }

        public Builder(ExperimentTemplateStopCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.source = defaults.source;
    	      this.value = defaults.value;
        }

        public Builder setSource(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder setValue(@Nullable String value) {
            this.value = value;
            return this;
        }
        public ExperimentTemplateStopCondition build() {
            return new ExperimentTemplateStopCondition(source, value);
        }
    }
}
