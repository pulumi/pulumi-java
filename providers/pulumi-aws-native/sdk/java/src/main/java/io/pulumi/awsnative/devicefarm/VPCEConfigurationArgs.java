// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.devicefarm;

import io.pulumi.awsnative.devicefarm.inputs.VPCEConfigurationTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VPCEConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final VPCEConfigurationArgs Empty = new VPCEConfigurationArgs();

    @InputImport(name="serviceDnsName", required=true)
    private final Input<String> serviceDnsName;

    public Input<String> getServiceDnsName() {
        return this.serviceDnsName;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<VPCEConfigurationTagArgs>> tags;

    public Input<List<VPCEConfigurationTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="vpceConfigurationDescription")
    private final @Nullable Input<String> vpceConfigurationDescription;

    public Input<String> getVpceConfigurationDescription() {
        return this.vpceConfigurationDescription == null ? Input.empty() : this.vpceConfigurationDescription;
    }

    @InputImport(name="vpceConfigurationName", required=true)
    private final Input<String> vpceConfigurationName;

    public Input<String> getVpceConfigurationName() {
        return this.vpceConfigurationName;
    }

    @InputImport(name="vpceServiceName", required=true)
    private final Input<String> vpceServiceName;

    public Input<String> getVpceServiceName() {
        return this.vpceServiceName;
    }

    public VPCEConfigurationArgs(
        Input<String> serviceDnsName,
        @Nullable Input<List<VPCEConfigurationTagArgs>> tags,
        @Nullable Input<String> vpceConfigurationDescription,
        Input<String> vpceConfigurationName,
        Input<String> vpceServiceName) {
        this.serviceDnsName = Objects.requireNonNull(serviceDnsName, "expected parameter 'serviceDnsName' to be non-null");
        this.tags = tags;
        this.vpceConfigurationDescription = vpceConfigurationDescription;
        this.vpceConfigurationName = Objects.requireNonNull(vpceConfigurationName, "expected parameter 'vpceConfigurationName' to be non-null");
        this.vpceServiceName = Objects.requireNonNull(vpceServiceName, "expected parameter 'vpceServiceName' to be non-null");
    }

    private VPCEConfigurationArgs() {
        this.serviceDnsName = Input.empty();
        this.tags = Input.empty();
        this.vpceConfigurationDescription = Input.empty();
        this.vpceConfigurationName = Input.empty();
        this.vpceServiceName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VPCEConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> serviceDnsName;
        private @Nullable Input<List<VPCEConfigurationTagArgs>> tags;
        private @Nullable Input<String> vpceConfigurationDescription;
        private Input<String> vpceConfigurationName;
        private Input<String> vpceServiceName;

        public Builder() {
    	      // Empty
        }

        public Builder(VPCEConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.serviceDnsName = defaults.serviceDnsName;
    	      this.tags = defaults.tags;
    	      this.vpceConfigurationDescription = defaults.vpceConfigurationDescription;
    	      this.vpceConfigurationName = defaults.vpceConfigurationName;
    	      this.vpceServiceName = defaults.vpceServiceName;
        }

        public Builder setServiceDnsName(Input<String> serviceDnsName) {
            this.serviceDnsName = Objects.requireNonNull(serviceDnsName);
            return this;
        }

        public Builder setServiceDnsName(String serviceDnsName) {
            this.serviceDnsName = Input.of(Objects.requireNonNull(serviceDnsName));
            return this;
        }

        public Builder setTags(@Nullable Input<List<VPCEConfigurationTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<VPCEConfigurationTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVpceConfigurationDescription(@Nullable Input<String> vpceConfigurationDescription) {
            this.vpceConfigurationDescription = vpceConfigurationDescription;
            return this;
        }

        public Builder setVpceConfigurationDescription(@Nullable String vpceConfigurationDescription) {
            this.vpceConfigurationDescription = Input.ofNullable(vpceConfigurationDescription);
            return this;
        }

        public Builder setVpceConfigurationName(Input<String> vpceConfigurationName) {
            this.vpceConfigurationName = Objects.requireNonNull(vpceConfigurationName);
            return this;
        }

        public Builder setVpceConfigurationName(String vpceConfigurationName) {
            this.vpceConfigurationName = Input.of(Objects.requireNonNull(vpceConfigurationName));
            return this;
        }

        public Builder setVpceServiceName(Input<String> vpceServiceName) {
            this.vpceServiceName = Objects.requireNonNull(vpceServiceName);
            return this;
        }

        public Builder setVpceServiceName(String vpceServiceName) {
            this.vpceServiceName = Input.of(Objects.requireNonNull(vpceServiceName));
            return this;
        }

        public VPCEConfigurationArgs build() {
            return new VPCEConfigurationArgs(serviceDnsName, tags, vpceConfigurationDescription, vpceConfigurationName, vpceServiceName);
        }
    }
}
