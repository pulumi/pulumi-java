// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotcoredeviceadvisor.inputs;

import io.pulumi.awsnative.iotcoredeviceadvisor.inputs.SuiteDefinitionDeviceUnderTestArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SuiteDefinitionConfigurationPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final SuiteDefinitionConfigurationPropertiesArgs Empty = new SuiteDefinitionConfigurationPropertiesArgs();

    @InputImport(name="devicePermissionRoleArn", required=true)
      private final Input<String> devicePermissionRoleArn;

    public Input<String> getDevicePermissionRoleArn() {
        return this.devicePermissionRoleArn;
    }

    @InputImport(name="devices")
      private final @Nullable Input<List<SuiteDefinitionDeviceUnderTestArgs>> devices;

    public Input<List<SuiteDefinitionDeviceUnderTestArgs>> getDevices() {
        return this.devices == null ? Input.empty() : this.devices;
    }

    @InputImport(name="intendedForQualification")
      private final @Nullable Input<Boolean> intendedForQualification;

    public Input<Boolean> getIntendedForQualification() {
        return this.intendedForQualification == null ? Input.empty() : this.intendedForQualification;
    }

    @InputImport(name="rootGroup", required=true)
      private final Input<String> rootGroup;

    public Input<String> getRootGroup() {
        return this.rootGroup;
    }

    @InputImport(name="suiteDefinitionName")
      private final @Nullable Input<String> suiteDefinitionName;

    public Input<String> getSuiteDefinitionName() {
        return this.suiteDefinitionName == null ? Input.empty() : this.suiteDefinitionName;
    }

    public SuiteDefinitionConfigurationPropertiesArgs(
        Input<String> devicePermissionRoleArn,
        @Nullable Input<List<SuiteDefinitionDeviceUnderTestArgs>> devices,
        @Nullable Input<Boolean> intendedForQualification,
        Input<String> rootGroup,
        @Nullable Input<String> suiteDefinitionName) {
        this.devicePermissionRoleArn = Objects.requireNonNull(devicePermissionRoleArn, "expected parameter 'devicePermissionRoleArn' to be non-null");
        this.devices = devices;
        this.intendedForQualification = intendedForQualification;
        this.rootGroup = Objects.requireNonNull(rootGroup, "expected parameter 'rootGroup' to be non-null");
        this.suiteDefinitionName = suiteDefinitionName;
    }

    private SuiteDefinitionConfigurationPropertiesArgs() {
        this.devicePermissionRoleArn = Input.empty();
        this.devices = Input.empty();
        this.intendedForQualification = Input.empty();
        this.rootGroup = Input.empty();
        this.suiteDefinitionName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SuiteDefinitionConfigurationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> devicePermissionRoleArn;
        private @Nullable Input<List<SuiteDefinitionDeviceUnderTestArgs>> devices;
        private @Nullable Input<Boolean> intendedForQualification;
        private Input<String> rootGroup;
        private @Nullable Input<String> suiteDefinitionName;

        public Builder() {
    	      // Empty
        }

        public Builder(SuiteDefinitionConfigurationPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.devicePermissionRoleArn = defaults.devicePermissionRoleArn;
    	      this.devices = defaults.devices;
    	      this.intendedForQualification = defaults.intendedForQualification;
    	      this.rootGroup = defaults.rootGroup;
    	      this.suiteDefinitionName = defaults.suiteDefinitionName;
        }

        public Builder devicePermissionRoleArn(Input<String> devicePermissionRoleArn) {
            this.devicePermissionRoleArn = Objects.requireNonNull(devicePermissionRoleArn);
            return this;
        }

        public Builder devicePermissionRoleArn(String devicePermissionRoleArn) {
            this.devicePermissionRoleArn = Input.of(Objects.requireNonNull(devicePermissionRoleArn));
            return this;
        }

        public Builder devices(@Nullable Input<List<SuiteDefinitionDeviceUnderTestArgs>> devices) {
            this.devices = devices;
            return this;
        }

        public Builder devices(@Nullable List<SuiteDefinitionDeviceUnderTestArgs> devices) {
            this.devices = Input.ofNullable(devices);
            return this;
        }

        public Builder intendedForQualification(@Nullable Input<Boolean> intendedForQualification) {
            this.intendedForQualification = intendedForQualification;
            return this;
        }

        public Builder intendedForQualification(@Nullable Boolean intendedForQualification) {
            this.intendedForQualification = Input.ofNullable(intendedForQualification);
            return this;
        }

        public Builder rootGroup(Input<String> rootGroup) {
            this.rootGroup = Objects.requireNonNull(rootGroup);
            return this;
        }

        public Builder rootGroup(String rootGroup) {
            this.rootGroup = Input.of(Objects.requireNonNull(rootGroup));
            return this;
        }

        public Builder suiteDefinitionName(@Nullable Input<String> suiteDefinitionName) {
            this.suiteDefinitionName = suiteDefinitionName;
            return this;
        }

        public Builder suiteDefinitionName(@Nullable String suiteDefinitionName) {
            this.suiteDefinitionName = Input.ofNullable(suiteDefinitionName);
            return this;
        }
        public SuiteDefinitionConfigurationPropertiesArgs build() {
            return new SuiteDefinitionConfigurationPropertiesArgs(devicePermissionRoleArn, devices, intendedForQualification, rootGroup, suiteDefinitionName);
        }
    }
}
