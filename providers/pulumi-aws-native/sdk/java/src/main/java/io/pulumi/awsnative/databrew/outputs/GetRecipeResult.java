// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.outputs;

import io.pulumi.awsnative.databrew.outputs.RecipeStep;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRecipeResult {
    /**
     * Description of the recipe
     * 
     */
    private final @Nullable String description;
    private final @Nullable List<RecipeStep> steps;

    @CustomType.Constructor
    private GetRecipeResult(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("steps") @Nullable List<RecipeStep> steps) {
        this.description = description;
        this.steps = steps;
    }

    /**
     * Description of the recipe
     * 
    */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public List<RecipeStep> steps() {
        return this.steps == null ? List.of() : this.steps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecipeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private @Nullable List<RecipeStep> steps;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRecipeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.steps = defaults.steps;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder steps(@Nullable List<RecipeStep> steps) {
            this.steps = steps;
            return this;
        }
        public Builder steps(RecipeStep... steps) {
            return steps(List.of(steps));
        }        public GetRecipeResult build() {
            return new GetRecipeResult(description, steps);
        }
    }
}
