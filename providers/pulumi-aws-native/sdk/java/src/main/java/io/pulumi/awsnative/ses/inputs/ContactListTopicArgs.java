// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ses.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContactListTopicArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContactListTopicArgs Empty = new ContactListTopicArgs();

    @InputImport(name="defaultSubscriptionStatus", required=true)
        private final Input<String> defaultSubscriptionStatus;

    public Input<String> getDefaultSubscriptionStatus() {
        return this.defaultSubscriptionStatus;
    }

    /**
     * The description of the topic.
     * 
     */
    @InputImport(name="description")
        private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The display name of the topic.
     * 
     */
    @InputImport(name="displayName", required=true)
        private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    /**
     * The name of the topic.
     * 
     */
    @InputImport(name="topicName", required=true)
        private final Input<String> topicName;

    public Input<String> getTopicName() {
        return this.topicName;
    }

    public ContactListTopicArgs(
        Input<String> defaultSubscriptionStatus,
        @Nullable Input<String> description,
        Input<String> displayName,
        Input<String> topicName) {
        this.defaultSubscriptionStatus = Objects.requireNonNull(defaultSubscriptionStatus, "expected parameter 'defaultSubscriptionStatus' to be non-null");
        this.description = description;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.topicName = Objects.requireNonNull(topicName, "expected parameter 'topicName' to be non-null");
    }

    private ContactListTopicArgs() {
        this.defaultSubscriptionStatus = Input.empty();
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.topicName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactListTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> defaultSubscriptionStatus;
        private @Nullable Input<String> description;
        private Input<String> displayName;
        private Input<String> topicName;

        public Builder() {
    	      // Empty
        }

        public Builder(ContactListTopicArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultSubscriptionStatus = defaults.defaultSubscriptionStatus;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.topicName = defaults.topicName;
        }

        public Builder setDefaultSubscriptionStatus(Input<String> defaultSubscriptionStatus) {
            this.defaultSubscriptionStatus = Objects.requireNonNull(defaultSubscriptionStatus);
            return this;
        }

        public Builder setDefaultSubscriptionStatus(String defaultSubscriptionStatus) {
            this.defaultSubscriptionStatus = Input.of(Objects.requireNonNull(defaultSubscriptionStatus));
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisplayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder setTopicName(Input<String> topicName) {
            this.topicName = Objects.requireNonNull(topicName);
            return this;
        }

        public Builder setTopicName(String topicName) {
            this.topicName = Input.of(Objects.requireNonNull(topicName));
            return this;
        }
        public ContactListTopicArgs build() {
            return new ContactListTopicArgs(defaultSubscriptionStatus, description, displayName, topicName);
        }
    }
}
