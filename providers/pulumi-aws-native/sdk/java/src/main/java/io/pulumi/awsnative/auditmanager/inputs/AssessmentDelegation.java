// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.auditmanager.inputs;

import io.pulumi.awsnative.auditmanager.enums.AssessmentDelegationStatus;
import io.pulumi.awsnative.auditmanager.enums.AssessmentRoleType;
import io.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The assignment of a control set to a delegate for review.
 * 
 */
public final class AssessmentDelegation extends io.pulumi.resources.InvokeArgs {

    public static final AssessmentDelegation Empty = new AssessmentDelegation();

    @Import(name="assessmentId")
      private final @Nullable String assessmentId;

    public Optional<String> getAssessmentId() {
        return this.assessmentId == null ? Optional.empty() : Optional.ofNullable(this.assessmentId);
    }

    @Import(name="assessmentName")
      private final @Nullable String assessmentName;

    public Optional<String> getAssessmentName() {
        return this.assessmentName == null ? Optional.empty() : Optional.ofNullable(this.assessmentName);
    }

    @Import(name="comment")
      private final @Nullable String comment;

    public Optional<String> getComment() {
        return this.comment == null ? Optional.empty() : Optional.ofNullable(this.comment);
    }

    @Import(name="controlSetId")
      private final @Nullable String controlSetId;

    public Optional<String> getControlSetId() {
        return this.controlSetId == null ? Optional.empty() : Optional.ofNullable(this.controlSetId);
    }

    @Import(name="createdBy")
      private final @Nullable String createdBy;

    public Optional<String> getCreatedBy() {
        return this.createdBy == null ? Optional.empty() : Optional.ofNullable(this.createdBy);
    }

    @Import(name="creationTime")
      private final @Nullable Double creationTime;

    public Optional<Double> getCreationTime() {
        return this.creationTime == null ? Optional.empty() : Optional.ofNullable(this.creationTime);
    }

    @Import(name="id")
      private final @Nullable String id;

    public Optional<String> getId() {
        return this.id == null ? Optional.empty() : Optional.ofNullable(this.id);
    }

    @Import(name="lastUpdated")
      private final @Nullable Double lastUpdated;

    public Optional<Double> getLastUpdated() {
        return this.lastUpdated == null ? Optional.empty() : Optional.ofNullable(this.lastUpdated);
    }

    @Import(name="roleArn")
      private final @Nullable String roleArn;

    public Optional<String> getRoleArn() {
        return this.roleArn == null ? Optional.empty() : Optional.ofNullable(this.roleArn);
    }

    @Import(name="roleType")
      private final @Nullable AssessmentRoleType roleType;

    public Optional<AssessmentRoleType> getRoleType() {
        return this.roleType == null ? Optional.empty() : Optional.ofNullable(this.roleType);
    }

    @Import(name="status")
      private final @Nullable AssessmentDelegationStatus status;

    public Optional<AssessmentDelegationStatus> getStatus() {
        return this.status == null ? Optional.empty() : Optional.ofNullable(this.status);
    }

    public AssessmentDelegation(
        @Nullable String assessmentId,
        @Nullable String assessmentName,
        @Nullable String comment,
        @Nullable String controlSetId,
        @Nullable String createdBy,
        @Nullable Double creationTime,
        @Nullable String id,
        @Nullable Double lastUpdated,
        @Nullable String roleArn,
        @Nullable AssessmentRoleType roleType,
        @Nullable AssessmentDelegationStatus status) {
        this.assessmentId = assessmentId;
        this.assessmentName = assessmentName;
        this.comment = comment;
        this.controlSetId = controlSetId;
        this.createdBy = createdBy;
        this.creationTime = creationTime;
        this.id = id;
        this.lastUpdated = lastUpdated;
        this.roleArn = roleArn;
        this.roleType = roleType;
        this.status = status;
    }

    private AssessmentDelegation() {
        this.assessmentId = null;
        this.assessmentName = null;
        this.comment = null;
        this.controlSetId = null;
        this.createdBy = null;
        this.creationTime = null;
        this.id = null;
        this.lastUpdated = null;
        this.roleArn = null;
        this.roleType = null;
        this.status = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssessmentDelegation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String assessmentId;
        private @Nullable String assessmentName;
        private @Nullable String comment;
        private @Nullable String controlSetId;
        private @Nullable String createdBy;
        private @Nullable Double creationTime;
        private @Nullable String id;
        private @Nullable Double lastUpdated;
        private @Nullable String roleArn;
        private @Nullable AssessmentRoleType roleType;
        private @Nullable AssessmentDelegationStatus status;

        public Builder() {
    	      // Empty
        }

        public Builder(AssessmentDelegation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assessmentId = defaults.assessmentId;
    	      this.assessmentName = defaults.assessmentName;
    	      this.comment = defaults.comment;
    	      this.controlSetId = defaults.controlSetId;
    	      this.createdBy = defaults.createdBy;
    	      this.creationTime = defaults.creationTime;
    	      this.id = defaults.id;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.roleArn = defaults.roleArn;
    	      this.roleType = defaults.roleType;
    	      this.status = defaults.status;
        }

        public Builder assessmentId(@Nullable String assessmentId) {
            this.assessmentId = assessmentId;
            return this;
        }

        public Builder assessmentName(@Nullable String assessmentName) {
            this.assessmentName = assessmentName;
            return this;
        }

        public Builder comment(@Nullable String comment) {
            this.comment = comment;
            return this;
        }

        public Builder controlSetId(@Nullable String controlSetId) {
            this.controlSetId = controlSetId;
            return this;
        }

        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = createdBy;
            return this;
        }

        public Builder creationTime(@Nullable Double creationTime) {
            this.creationTime = creationTime;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder lastUpdated(@Nullable Double lastUpdated) {
            this.lastUpdated = lastUpdated;
            return this;
        }

        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }

        public Builder roleType(@Nullable AssessmentRoleType roleType) {
            this.roleType = roleType;
            return this;
        }

        public Builder status(@Nullable AssessmentDelegationStatus status) {
            this.status = status;
            return this;
        }
        public AssessmentDelegation build() {
            return new AssessmentDelegation(assessmentId, assessmentName, comment, controlSetId, createdBy, creationTime, id, lastUpdated, roleArn, roleType, status);
        }
    }
}
