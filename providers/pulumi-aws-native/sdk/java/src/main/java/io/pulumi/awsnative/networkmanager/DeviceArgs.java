// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.networkmanager;

import io.pulumi.awsnative.networkmanager.inputs.DeviceLocationArgs;
import io.pulumi.awsnative.networkmanager.inputs.DeviceTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeviceArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeviceArgs Empty = new DeviceArgs();

    /**
     * The description of the device.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The ID of the global network.
     * 
     */
    @Import(name="globalNetworkId", required=true)
      private final Output<String> globalNetworkId;

    public Output<String> getGlobalNetworkId() {
        return this.globalNetworkId;
    }

    /**
     * The site location.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<DeviceLocationArgs> location;

    public Output<DeviceLocationArgs> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The device model
     * 
     */
    @Import(name="model")
      private final @Nullable Output<String> model;

    public Output<String> getModel() {
        return this.model == null ? Output.empty() : this.model;
    }

    /**
     * The device serial number.
     * 
     */
    @Import(name="serialNumber")
      private final @Nullable Output<String> serialNumber;

    public Output<String> getSerialNumber() {
        return this.serialNumber == null ? Output.empty() : this.serialNumber;
    }

    /**
     * The site ID.
     * 
     */
    @Import(name="siteId")
      private final @Nullable Output<String> siteId;

    public Output<String> getSiteId() {
        return this.siteId == null ? Output.empty() : this.siteId;
    }

    /**
     * The tags for the device.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<DeviceTagArgs>> tags;

    public Output<List<DeviceTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * The device type.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<String> type;

    public Output<String> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    /**
     * The device vendor.
     * 
     */
    @Import(name="vendor")
      private final @Nullable Output<String> vendor;

    public Output<String> getVendor() {
        return this.vendor == null ? Output.empty() : this.vendor;
    }

    public DeviceArgs(
        @Nullable Output<String> description,
        Output<String> globalNetworkId,
        @Nullable Output<DeviceLocationArgs> location,
        @Nullable Output<String> model,
        @Nullable Output<String> serialNumber,
        @Nullable Output<String> siteId,
        @Nullable Output<List<DeviceTagArgs>> tags,
        @Nullable Output<String> type,
        @Nullable Output<String> vendor) {
        this.description = description;
        this.globalNetworkId = Objects.requireNonNull(globalNetworkId, "expected parameter 'globalNetworkId' to be non-null");
        this.location = location;
        this.model = model;
        this.serialNumber = serialNumber;
        this.siteId = siteId;
        this.tags = tags;
        this.type = type;
        this.vendor = vendor;
    }

    private DeviceArgs() {
        this.description = Output.empty();
        this.globalNetworkId = Output.empty();
        this.location = Output.empty();
        this.model = Output.empty();
        this.serialNumber = Output.empty();
        this.siteId = Output.empty();
        this.tags = Output.empty();
        this.type = Output.empty();
        this.vendor = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private Output<String> globalNetworkId;
        private @Nullable Output<DeviceLocationArgs> location;
        private @Nullable Output<String> model;
        private @Nullable Output<String> serialNumber;
        private @Nullable Output<String> siteId;
        private @Nullable Output<List<DeviceTagArgs>> tags;
        private @Nullable Output<String> type;
        private @Nullable Output<String> vendor;

        public Builder() {
    	      // Empty
        }

        public Builder(DeviceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.globalNetworkId = defaults.globalNetworkId;
    	      this.location = defaults.location;
    	      this.model = defaults.model;
    	      this.serialNumber = defaults.serialNumber;
    	      this.siteId = defaults.siteId;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vendor = defaults.vendor;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder globalNetworkId(Output<String> globalNetworkId) {
            this.globalNetworkId = Objects.requireNonNull(globalNetworkId);
            return this;
        }

        public Builder globalNetworkId(String globalNetworkId) {
            this.globalNetworkId = Output.of(Objects.requireNonNull(globalNetworkId));
            return this;
        }

        public Builder location(@Nullable Output<DeviceLocationArgs> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable DeviceLocationArgs location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder model(@Nullable Output<String> model) {
            this.model = model;
            return this;
        }

        public Builder model(@Nullable String model) {
            this.model = Output.ofNullable(model);
            return this;
        }

        public Builder serialNumber(@Nullable Output<String> serialNumber) {
            this.serialNumber = serialNumber;
            return this;
        }

        public Builder serialNumber(@Nullable String serialNumber) {
            this.serialNumber = Output.ofNullable(serialNumber);
            return this;
        }

        public Builder siteId(@Nullable Output<String> siteId) {
            this.siteId = siteId;
            return this;
        }

        public Builder siteId(@Nullable String siteId) {
            this.siteId = Output.ofNullable(siteId);
            return this;
        }

        public Builder tags(@Nullable Output<List<DeviceTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<DeviceTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder type(@Nullable Output<String> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable String type) {
            this.type = Output.ofNullable(type);
            return this;
        }

        public Builder vendor(@Nullable Output<String> vendor) {
            this.vendor = vendor;
            return this;
        }

        public Builder vendor(@Nullable String vendor) {
            this.vendor = Output.ofNullable(vendor);
            return this;
        }
        public DeviceArgs build() {
            return new DeviceArgs(description, globalNetworkId, location, model, serialNumber, siteId, tags, type, vendor);
        }
    }
}
