// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotanalytics;

import io.pulumi.awsnative.iotanalytics.inputs.DatastoreFileFormatConfigurationArgs;
import io.pulumi.awsnative.iotanalytics.inputs.DatastorePartitionsArgs;
import io.pulumi.awsnative.iotanalytics.inputs.DatastoreRetentionPeriodArgs;
import io.pulumi.awsnative.iotanalytics.inputs.DatastoreStorageArgs;
import io.pulumi.awsnative.iotanalytics.inputs.DatastoreTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatastoreArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatastoreArgs Empty = new DatastoreArgs();

    @Import(name="datastoreName")
      private final @Nullable Output<String> datastoreName;

    public Output<String> getDatastoreName() {
        return this.datastoreName == null ? Output.empty() : this.datastoreName;
    }

    @Import(name="datastorePartitions")
      private final @Nullable Output<DatastorePartitionsArgs> datastorePartitions;

    public Output<DatastorePartitionsArgs> getDatastorePartitions() {
        return this.datastorePartitions == null ? Output.empty() : this.datastorePartitions;
    }

    @Import(name="datastoreStorage")
      private final @Nullable Output<DatastoreStorageArgs> datastoreStorage;

    public Output<DatastoreStorageArgs> getDatastoreStorage() {
        return this.datastoreStorage == null ? Output.empty() : this.datastoreStorage;
    }

    @Import(name="fileFormatConfiguration")
      private final @Nullable Output<DatastoreFileFormatConfigurationArgs> fileFormatConfiguration;

    public Output<DatastoreFileFormatConfigurationArgs> getFileFormatConfiguration() {
        return this.fileFormatConfiguration == null ? Output.empty() : this.fileFormatConfiguration;
    }

    @Import(name="retentionPeriod")
      private final @Nullable Output<DatastoreRetentionPeriodArgs> retentionPeriod;

    public Output<DatastoreRetentionPeriodArgs> getRetentionPeriod() {
        return this.retentionPeriod == null ? Output.empty() : this.retentionPeriod;
    }

    @Import(name="tags")
      private final @Nullable Output<List<DatastoreTagArgs>> tags;

    public Output<List<DatastoreTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public DatastoreArgs(
        @Nullable Output<String> datastoreName,
        @Nullable Output<DatastorePartitionsArgs> datastorePartitions,
        @Nullable Output<DatastoreStorageArgs> datastoreStorage,
        @Nullable Output<DatastoreFileFormatConfigurationArgs> fileFormatConfiguration,
        @Nullable Output<DatastoreRetentionPeriodArgs> retentionPeriod,
        @Nullable Output<List<DatastoreTagArgs>> tags) {
        this.datastoreName = datastoreName;
        this.datastorePartitions = datastorePartitions;
        this.datastoreStorage = datastoreStorage;
        this.fileFormatConfiguration = fileFormatConfiguration;
        this.retentionPeriod = retentionPeriod;
        this.tags = tags;
    }

    private DatastoreArgs() {
        this.datastoreName = Output.empty();
        this.datastorePartitions = Output.empty();
        this.datastoreStorage = Output.empty();
        this.fileFormatConfiguration = Output.empty();
        this.retentionPeriod = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatastoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> datastoreName;
        private @Nullable Output<DatastorePartitionsArgs> datastorePartitions;
        private @Nullable Output<DatastoreStorageArgs> datastoreStorage;
        private @Nullable Output<DatastoreFileFormatConfigurationArgs> fileFormatConfiguration;
        private @Nullable Output<DatastoreRetentionPeriodArgs> retentionPeriod;
        private @Nullable Output<List<DatastoreTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DatastoreArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datastoreName = defaults.datastoreName;
    	      this.datastorePartitions = defaults.datastorePartitions;
    	      this.datastoreStorage = defaults.datastoreStorage;
    	      this.fileFormatConfiguration = defaults.fileFormatConfiguration;
    	      this.retentionPeriod = defaults.retentionPeriod;
    	      this.tags = defaults.tags;
        }

        public Builder datastoreName(@Nullable Output<String> datastoreName) {
            this.datastoreName = datastoreName;
            return this;
        }

        public Builder datastoreName(@Nullable String datastoreName) {
            this.datastoreName = Output.ofNullable(datastoreName);
            return this;
        }

        public Builder datastorePartitions(@Nullable Output<DatastorePartitionsArgs> datastorePartitions) {
            this.datastorePartitions = datastorePartitions;
            return this;
        }

        public Builder datastorePartitions(@Nullable DatastorePartitionsArgs datastorePartitions) {
            this.datastorePartitions = Output.ofNullable(datastorePartitions);
            return this;
        }

        public Builder datastoreStorage(@Nullable Output<DatastoreStorageArgs> datastoreStorage) {
            this.datastoreStorage = datastoreStorage;
            return this;
        }

        public Builder datastoreStorage(@Nullable DatastoreStorageArgs datastoreStorage) {
            this.datastoreStorage = Output.ofNullable(datastoreStorage);
            return this;
        }

        public Builder fileFormatConfiguration(@Nullable Output<DatastoreFileFormatConfigurationArgs> fileFormatConfiguration) {
            this.fileFormatConfiguration = fileFormatConfiguration;
            return this;
        }

        public Builder fileFormatConfiguration(@Nullable DatastoreFileFormatConfigurationArgs fileFormatConfiguration) {
            this.fileFormatConfiguration = Output.ofNullable(fileFormatConfiguration);
            return this;
        }

        public Builder retentionPeriod(@Nullable Output<DatastoreRetentionPeriodArgs> retentionPeriod) {
            this.retentionPeriod = retentionPeriod;
            return this;
        }

        public Builder retentionPeriod(@Nullable DatastoreRetentionPeriodArgs retentionPeriod) {
            this.retentionPeriod = Output.ofNullable(retentionPeriod);
            return this;
        }

        public Builder tags(@Nullable Output<List<DatastoreTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<DatastoreTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public DatastoreArgs build() {
            return new DatastoreArgs(datastoreName, datastorePartitions, datastoreStorage, fileFormatConfiguration, retentionPeriod, tags);
        }
    }
}
