// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.panorama;

import io.pulumi.awsnative.panorama.enums.ApplicationInstanceStatusFilter;
import io.pulumi.awsnative.panorama.inputs.ApplicationInstanceManifestOverridesPayloadArgs;
import io.pulumi.awsnative.panorama.inputs.ApplicationInstanceManifestPayloadArgs;
import io.pulumi.awsnative.panorama.inputs.ApplicationInstanceTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApplicationInstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApplicationInstanceArgs Empty = new ApplicationInstanceArgs();

    @Import(name="applicationInstanceIdToReplace")
      private final @Nullable Output<String> applicationInstanceIdToReplace;

    public Output<String> applicationInstanceIdToReplace() {
        return this.applicationInstanceIdToReplace == null ? Codegen.empty() : this.applicationInstanceIdToReplace;
    }

    @Import(name="defaultRuntimeContextDevice", required=true)
      private final Output<String> defaultRuntimeContextDevice;

    public Output<String> defaultRuntimeContextDevice() {
        return this.defaultRuntimeContextDevice;
    }

    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    @Import(name="deviceId")
      private final @Nullable Output<String> deviceId;

    public Output<String> deviceId() {
        return this.deviceId == null ? Codegen.empty() : this.deviceId;
    }

    @Import(name="manifestOverridesPayload")
      private final @Nullable Output<ApplicationInstanceManifestOverridesPayloadArgs> manifestOverridesPayload;

    public Output<ApplicationInstanceManifestOverridesPayloadArgs> manifestOverridesPayload() {
        return this.manifestOverridesPayload == null ? Codegen.empty() : this.manifestOverridesPayload;
    }

    @Import(name="manifestPayload", required=true)
      private final Output<ApplicationInstanceManifestPayloadArgs> manifestPayload;

    public Output<ApplicationInstanceManifestPayloadArgs> manifestPayload() {
        return this.manifestPayload;
    }

    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="runtimeRoleArn")
      private final @Nullable Output<String> runtimeRoleArn;

    public Output<String> runtimeRoleArn() {
        return this.runtimeRoleArn == null ? Codegen.empty() : this.runtimeRoleArn;
    }

    @Import(name="statusFilter")
      private final @Nullable Output<ApplicationInstanceStatusFilter> statusFilter;

    public Output<ApplicationInstanceStatusFilter> statusFilter() {
        return this.statusFilter == null ? Codegen.empty() : this.statusFilter;
    }

    @Import(name="tags")
      private final @Nullable Output<List<ApplicationInstanceTagArgs>> tags;

    public Output<List<ApplicationInstanceTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public ApplicationInstanceArgs(
        @Nullable Output<String> applicationInstanceIdToReplace,
        Output<String> defaultRuntimeContextDevice,
        @Nullable Output<String> description,
        @Nullable Output<String> deviceId,
        @Nullable Output<ApplicationInstanceManifestOverridesPayloadArgs> manifestOverridesPayload,
        Output<ApplicationInstanceManifestPayloadArgs> manifestPayload,
        @Nullable Output<String> name,
        @Nullable Output<String> runtimeRoleArn,
        @Nullable Output<ApplicationInstanceStatusFilter> statusFilter,
        @Nullable Output<List<ApplicationInstanceTagArgs>> tags) {
        this.applicationInstanceIdToReplace = applicationInstanceIdToReplace;
        this.defaultRuntimeContextDevice = Objects.requireNonNull(defaultRuntimeContextDevice, "expected parameter 'defaultRuntimeContextDevice' to be non-null");
        this.description = description;
        this.deviceId = deviceId;
        this.manifestOverridesPayload = manifestOverridesPayload;
        this.manifestPayload = Objects.requireNonNull(manifestPayload, "expected parameter 'manifestPayload' to be non-null");
        this.name = name;
        this.runtimeRoleArn = runtimeRoleArn;
        this.statusFilter = statusFilter;
        this.tags = tags;
    }

    private ApplicationInstanceArgs() {
        this.applicationInstanceIdToReplace = Codegen.empty();
        this.defaultRuntimeContextDevice = Codegen.empty();
        this.description = Codegen.empty();
        this.deviceId = Codegen.empty();
        this.manifestOverridesPayload = Codegen.empty();
        this.manifestPayload = Codegen.empty();
        this.name = Codegen.empty();
        this.runtimeRoleArn = Codegen.empty();
        this.statusFilter = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> applicationInstanceIdToReplace;
        private Output<String> defaultRuntimeContextDevice;
        private @Nullable Output<String> description;
        private @Nullable Output<String> deviceId;
        private @Nullable Output<ApplicationInstanceManifestOverridesPayloadArgs> manifestOverridesPayload;
        private Output<ApplicationInstanceManifestPayloadArgs> manifestPayload;
        private @Nullable Output<String> name;
        private @Nullable Output<String> runtimeRoleArn;
        private @Nullable Output<ApplicationInstanceStatusFilter> statusFilter;
        private @Nullable Output<List<ApplicationInstanceTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationInstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationInstanceIdToReplace = defaults.applicationInstanceIdToReplace;
    	      this.defaultRuntimeContextDevice = defaults.defaultRuntimeContextDevice;
    	      this.description = defaults.description;
    	      this.deviceId = defaults.deviceId;
    	      this.manifestOverridesPayload = defaults.manifestOverridesPayload;
    	      this.manifestPayload = defaults.manifestPayload;
    	      this.name = defaults.name;
    	      this.runtimeRoleArn = defaults.runtimeRoleArn;
    	      this.statusFilter = defaults.statusFilter;
    	      this.tags = defaults.tags;
        }

        public Builder applicationInstanceIdToReplace(@Nullable Output<String> applicationInstanceIdToReplace) {
            this.applicationInstanceIdToReplace = applicationInstanceIdToReplace;
            return this;
        }
        public Builder applicationInstanceIdToReplace(@Nullable String applicationInstanceIdToReplace) {
            this.applicationInstanceIdToReplace = Codegen.ofNullable(applicationInstanceIdToReplace);
            return this;
        }
        public Builder defaultRuntimeContextDevice(Output<String> defaultRuntimeContextDevice) {
            this.defaultRuntimeContextDevice = Objects.requireNonNull(defaultRuntimeContextDevice);
            return this;
        }
        public Builder defaultRuntimeContextDevice(String defaultRuntimeContextDevice) {
            this.defaultRuntimeContextDevice = Output.of(Objects.requireNonNull(defaultRuntimeContextDevice));
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder deviceId(@Nullable Output<String> deviceId) {
            this.deviceId = deviceId;
            return this;
        }
        public Builder deviceId(@Nullable String deviceId) {
            this.deviceId = Codegen.ofNullable(deviceId);
            return this;
        }
        public Builder manifestOverridesPayload(@Nullable Output<ApplicationInstanceManifestOverridesPayloadArgs> manifestOverridesPayload) {
            this.manifestOverridesPayload = manifestOverridesPayload;
            return this;
        }
        public Builder manifestOverridesPayload(@Nullable ApplicationInstanceManifestOverridesPayloadArgs manifestOverridesPayload) {
            this.manifestOverridesPayload = Codegen.ofNullable(manifestOverridesPayload);
            return this;
        }
        public Builder manifestPayload(Output<ApplicationInstanceManifestPayloadArgs> manifestPayload) {
            this.manifestPayload = Objects.requireNonNull(manifestPayload);
            return this;
        }
        public Builder manifestPayload(ApplicationInstanceManifestPayloadArgs manifestPayload) {
            this.manifestPayload = Output.of(Objects.requireNonNull(manifestPayload));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder runtimeRoleArn(@Nullable Output<String> runtimeRoleArn) {
            this.runtimeRoleArn = runtimeRoleArn;
            return this;
        }
        public Builder runtimeRoleArn(@Nullable String runtimeRoleArn) {
            this.runtimeRoleArn = Codegen.ofNullable(runtimeRoleArn);
            return this;
        }
        public Builder statusFilter(@Nullable Output<ApplicationInstanceStatusFilter> statusFilter) {
            this.statusFilter = statusFilter;
            return this;
        }
        public Builder statusFilter(@Nullable ApplicationInstanceStatusFilter statusFilter) {
            this.statusFilter = Codegen.ofNullable(statusFilter);
            return this;
        }
        public Builder tags(@Nullable Output<List<ApplicationInstanceTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<ApplicationInstanceTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(ApplicationInstanceTagArgs... tags) {
            return tags(List.of(tags));
        }        public ApplicationInstanceArgs build() {
            return new ApplicationInstanceArgs(applicationInstanceIdToReplace, defaultRuntimeContextDevice, description, deviceId, manifestOverridesPayload, manifestPayload, name, runtimeRoleArn, statusFilter, tags);
        }
    }
}
