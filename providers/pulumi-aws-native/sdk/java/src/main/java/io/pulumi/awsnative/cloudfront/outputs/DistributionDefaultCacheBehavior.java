// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudfront.outputs;

import io.pulumi.awsnative.cloudfront.outputs.DistributionForwardedValues;
import io.pulumi.awsnative.cloudfront.outputs.DistributionFunctionAssociation;
import io.pulumi.awsnative.cloudfront.outputs.DistributionLambdaFunctionAssociation;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DistributionDefaultCacheBehavior {
    private final @Nullable List<String> allowedMethods;
    private final @Nullable String cachePolicyId;
    private final @Nullable List<String> cachedMethods;
    private final @Nullable Boolean compress;
    private final @Nullable Double defaultTTL;
    private final @Nullable String fieldLevelEncryptionId;
    private final @Nullable DistributionForwardedValues forwardedValues;
    private final @Nullable List<DistributionFunctionAssociation> functionAssociations;
    private final @Nullable List<DistributionLambdaFunctionAssociation> lambdaFunctionAssociations;
    private final @Nullable Double maxTTL;
    private final @Nullable Double minTTL;
    private final @Nullable String originRequestPolicyId;
    private final @Nullable String realtimeLogConfigArn;
    private final @Nullable String responseHeadersPolicyId;
    private final @Nullable Boolean smoothStreaming;
    private final String targetOriginId;
    private final @Nullable List<String> trustedKeyGroups;
    private final @Nullable List<String> trustedSigners;
    private final String viewerProtocolPolicy;

    @CustomType.Constructor
    private DistributionDefaultCacheBehavior(
        @CustomType.Parameter("allowedMethods") @Nullable List<String> allowedMethods,
        @CustomType.Parameter("cachePolicyId") @Nullable String cachePolicyId,
        @CustomType.Parameter("cachedMethods") @Nullable List<String> cachedMethods,
        @CustomType.Parameter("compress") @Nullable Boolean compress,
        @CustomType.Parameter("defaultTTL") @Nullable Double defaultTTL,
        @CustomType.Parameter("fieldLevelEncryptionId") @Nullable String fieldLevelEncryptionId,
        @CustomType.Parameter("forwardedValues") @Nullable DistributionForwardedValues forwardedValues,
        @CustomType.Parameter("functionAssociations") @Nullable List<DistributionFunctionAssociation> functionAssociations,
        @CustomType.Parameter("lambdaFunctionAssociations") @Nullable List<DistributionLambdaFunctionAssociation> lambdaFunctionAssociations,
        @CustomType.Parameter("maxTTL") @Nullable Double maxTTL,
        @CustomType.Parameter("minTTL") @Nullable Double minTTL,
        @CustomType.Parameter("originRequestPolicyId") @Nullable String originRequestPolicyId,
        @CustomType.Parameter("realtimeLogConfigArn") @Nullable String realtimeLogConfigArn,
        @CustomType.Parameter("responseHeadersPolicyId") @Nullable String responseHeadersPolicyId,
        @CustomType.Parameter("smoothStreaming") @Nullable Boolean smoothStreaming,
        @CustomType.Parameter("targetOriginId") String targetOriginId,
        @CustomType.Parameter("trustedKeyGroups") @Nullable List<String> trustedKeyGroups,
        @CustomType.Parameter("trustedSigners") @Nullable List<String> trustedSigners,
        @CustomType.Parameter("viewerProtocolPolicy") String viewerProtocolPolicy) {
        this.allowedMethods = allowedMethods;
        this.cachePolicyId = cachePolicyId;
        this.cachedMethods = cachedMethods;
        this.compress = compress;
        this.defaultTTL = defaultTTL;
        this.fieldLevelEncryptionId = fieldLevelEncryptionId;
        this.forwardedValues = forwardedValues;
        this.functionAssociations = functionAssociations;
        this.lambdaFunctionAssociations = lambdaFunctionAssociations;
        this.maxTTL = maxTTL;
        this.minTTL = minTTL;
        this.originRequestPolicyId = originRequestPolicyId;
        this.realtimeLogConfigArn = realtimeLogConfigArn;
        this.responseHeadersPolicyId = responseHeadersPolicyId;
        this.smoothStreaming = smoothStreaming;
        this.targetOriginId = targetOriginId;
        this.trustedKeyGroups = trustedKeyGroups;
        this.trustedSigners = trustedSigners;
        this.viewerProtocolPolicy = viewerProtocolPolicy;
    }

    public List<String> allowedMethods() {
        return this.allowedMethods == null ? List.of() : this.allowedMethods;
    }
    public Optional<String> cachePolicyId() {
        return Optional.ofNullable(this.cachePolicyId);
    }
    public List<String> cachedMethods() {
        return this.cachedMethods == null ? List.of() : this.cachedMethods;
    }
    public Optional<Boolean> compress() {
        return Optional.ofNullable(this.compress);
    }
    public Optional<Double> defaultTTL() {
        return Optional.ofNullable(this.defaultTTL);
    }
    public Optional<String> fieldLevelEncryptionId() {
        return Optional.ofNullable(this.fieldLevelEncryptionId);
    }
    public Optional<DistributionForwardedValues> forwardedValues() {
        return Optional.ofNullable(this.forwardedValues);
    }
    public List<DistributionFunctionAssociation> functionAssociations() {
        return this.functionAssociations == null ? List.of() : this.functionAssociations;
    }
    public List<DistributionLambdaFunctionAssociation> lambdaFunctionAssociations() {
        return this.lambdaFunctionAssociations == null ? List.of() : this.lambdaFunctionAssociations;
    }
    public Optional<Double> maxTTL() {
        return Optional.ofNullable(this.maxTTL);
    }
    public Optional<Double> minTTL() {
        return Optional.ofNullable(this.minTTL);
    }
    public Optional<String> originRequestPolicyId() {
        return Optional.ofNullable(this.originRequestPolicyId);
    }
    public Optional<String> realtimeLogConfigArn() {
        return Optional.ofNullable(this.realtimeLogConfigArn);
    }
    public Optional<String> responseHeadersPolicyId() {
        return Optional.ofNullable(this.responseHeadersPolicyId);
    }
    public Optional<Boolean> smoothStreaming() {
        return Optional.ofNullable(this.smoothStreaming);
    }
    public String targetOriginId() {
        return this.targetOriginId;
    }
    public List<String> trustedKeyGroups() {
        return this.trustedKeyGroups == null ? List.of() : this.trustedKeyGroups;
    }
    public List<String> trustedSigners() {
        return this.trustedSigners == null ? List.of() : this.trustedSigners;
    }
    public String viewerProtocolPolicy() {
        return this.viewerProtocolPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionDefaultCacheBehavior defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> allowedMethods;
        private @Nullable String cachePolicyId;
        private @Nullable List<String> cachedMethods;
        private @Nullable Boolean compress;
        private @Nullable Double defaultTTL;
        private @Nullable String fieldLevelEncryptionId;
        private @Nullable DistributionForwardedValues forwardedValues;
        private @Nullable List<DistributionFunctionAssociation> functionAssociations;
        private @Nullable List<DistributionLambdaFunctionAssociation> lambdaFunctionAssociations;
        private @Nullable Double maxTTL;
        private @Nullable Double minTTL;
        private @Nullable String originRequestPolicyId;
        private @Nullable String realtimeLogConfigArn;
        private @Nullable String responseHeadersPolicyId;
        private @Nullable Boolean smoothStreaming;
        private String targetOriginId;
        private @Nullable List<String> trustedKeyGroups;
        private @Nullable List<String> trustedSigners;
        private String viewerProtocolPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(DistributionDefaultCacheBehavior defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedMethods = defaults.allowedMethods;
    	      this.cachePolicyId = defaults.cachePolicyId;
    	      this.cachedMethods = defaults.cachedMethods;
    	      this.compress = defaults.compress;
    	      this.defaultTTL = defaults.defaultTTL;
    	      this.fieldLevelEncryptionId = defaults.fieldLevelEncryptionId;
    	      this.forwardedValues = defaults.forwardedValues;
    	      this.functionAssociations = defaults.functionAssociations;
    	      this.lambdaFunctionAssociations = defaults.lambdaFunctionAssociations;
    	      this.maxTTL = defaults.maxTTL;
    	      this.minTTL = defaults.minTTL;
    	      this.originRequestPolicyId = defaults.originRequestPolicyId;
    	      this.realtimeLogConfigArn = defaults.realtimeLogConfigArn;
    	      this.responseHeadersPolicyId = defaults.responseHeadersPolicyId;
    	      this.smoothStreaming = defaults.smoothStreaming;
    	      this.targetOriginId = defaults.targetOriginId;
    	      this.trustedKeyGroups = defaults.trustedKeyGroups;
    	      this.trustedSigners = defaults.trustedSigners;
    	      this.viewerProtocolPolicy = defaults.viewerProtocolPolicy;
        }

        public Builder allowedMethods(@Nullable List<String> allowedMethods) {
            this.allowedMethods = allowedMethods;
            return this;
        }
        public Builder allowedMethods(String... allowedMethods) {
            return allowedMethods(List.of(allowedMethods));
        }
        public Builder cachePolicyId(@Nullable String cachePolicyId) {
            this.cachePolicyId = cachePolicyId;
            return this;
        }
        public Builder cachedMethods(@Nullable List<String> cachedMethods) {
            this.cachedMethods = cachedMethods;
            return this;
        }
        public Builder cachedMethods(String... cachedMethods) {
            return cachedMethods(List.of(cachedMethods));
        }
        public Builder compress(@Nullable Boolean compress) {
            this.compress = compress;
            return this;
        }
        public Builder defaultTTL(@Nullable Double defaultTTL) {
            this.defaultTTL = defaultTTL;
            return this;
        }
        public Builder fieldLevelEncryptionId(@Nullable String fieldLevelEncryptionId) {
            this.fieldLevelEncryptionId = fieldLevelEncryptionId;
            return this;
        }
        public Builder forwardedValues(@Nullable DistributionForwardedValues forwardedValues) {
            this.forwardedValues = forwardedValues;
            return this;
        }
        public Builder functionAssociations(@Nullable List<DistributionFunctionAssociation> functionAssociations) {
            this.functionAssociations = functionAssociations;
            return this;
        }
        public Builder functionAssociations(DistributionFunctionAssociation... functionAssociations) {
            return functionAssociations(List.of(functionAssociations));
        }
        public Builder lambdaFunctionAssociations(@Nullable List<DistributionLambdaFunctionAssociation> lambdaFunctionAssociations) {
            this.lambdaFunctionAssociations = lambdaFunctionAssociations;
            return this;
        }
        public Builder lambdaFunctionAssociations(DistributionLambdaFunctionAssociation... lambdaFunctionAssociations) {
            return lambdaFunctionAssociations(List.of(lambdaFunctionAssociations));
        }
        public Builder maxTTL(@Nullable Double maxTTL) {
            this.maxTTL = maxTTL;
            return this;
        }
        public Builder minTTL(@Nullable Double minTTL) {
            this.minTTL = minTTL;
            return this;
        }
        public Builder originRequestPolicyId(@Nullable String originRequestPolicyId) {
            this.originRequestPolicyId = originRequestPolicyId;
            return this;
        }
        public Builder realtimeLogConfigArn(@Nullable String realtimeLogConfigArn) {
            this.realtimeLogConfigArn = realtimeLogConfigArn;
            return this;
        }
        public Builder responseHeadersPolicyId(@Nullable String responseHeadersPolicyId) {
            this.responseHeadersPolicyId = responseHeadersPolicyId;
            return this;
        }
        public Builder smoothStreaming(@Nullable Boolean smoothStreaming) {
            this.smoothStreaming = smoothStreaming;
            return this;
        }
        public Builder targetOriginId(String targetOriginId) {
            this.targetOriginId = Objects.requireNonNull(targetOriginId);
            return this;
        }
        public Builder trustedKeyGroups(@Nullable List<String> trustedKeyGroups) {
            this.trustedKeyGroups = trustedKeyGroups;
            return this;
        }
        public Builder trustedKeyGroups(String... trustedKeyGroups) {
            return trustedKeyGroups(List.of(trustedKeyGroups));
        }
        public Builder trustedSigners(@Nullable List<String> trustedSigners) {
            this.trustedSigners = trustedSigners;
            return this;
        }
        public Builder trustedSigners(String... trustedSigners) {
            return trustedSigners(List.of(trustedSigners));
        }
        public Builder viewerProtocolPolicy(String viewerProtocolPolicy) {
            this.viewerProtocolPolicy = Objects.requireNonNull(viewerProtocolPolicy);
            return this;
        }        public DistributionDefaultCacheBehavior build() {
            return new DistributionDefaultCacheBehavior(allowedMethods, cachePolicyId, cachedMethods, compress, defaultTTL, fieldLevelEncryptionId, forwardedValues, functionAssociations, lambdaFunctionAssociations, maxTTL, minTTL, originRequestPolicyId, realtimeLogConfigArn, responseHeadersPolicyId, smoothStreaming, targetOriginId, trustedKeyGroups, trustedSigners, viewerProtocolPolicy);
        }
    }
}
