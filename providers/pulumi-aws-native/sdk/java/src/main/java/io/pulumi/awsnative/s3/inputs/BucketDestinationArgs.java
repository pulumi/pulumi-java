// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.awsnative.s3.enums.BucketDestinationFormat;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket and S3 Replication Time Control (S3 RTC).
 * 
 */
public final class BucketDestinationArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketDestinationArgs Empty = new BucketDestinationArgs();

    /**
     * The account ID that owns the destination S3 bucket.
     * 
     */
    @InputImport(name="bucketAccountId")
        private final @Nullable Input<String> bucketAccountId;

    public Input<String> getBucketAccountId() {
        return this.bucketAccountId == null ? Input.empty() : this.bucketAccountId;
    }

    /**
     * The Amazon Resource Name (ARN) of the bucket to which data is exported.
     * 
     */
    @InputImport(name="bucketArn", required=true)
        private final Input<String> bucketArn;

    public Input<String> getBucketArn() {
        return this.bucketArn;
    }

    /**
     * Specifies the file format used when exporting data to Amazon S3.
     * 
     */
    @InputImport(name="format", required=true)
        private final Input<BucketDestinationFormat> format;

    public Input<BucketDestinationFormat> getFormat() {
        return this.format;
    }

    /**
     * The prefix to use when exporting data. The prefix is prepended to all results.
     * 
     */
    @InputImport(name="prefix")
        private final @Nullable Input<String> prefix;

    public Input<String> getPrefix() {
        return this.prefix == null ? Input.empty() : this.prefix;
    }

    public BucketDestinationArgs(
        @Nullable Input<String> bucketAccountId,
        Input<String> bucketArn,
        Input<BucketDestinationFormat> format,
        @Nullable Input<String> prefix) {
        this.bucketAccountId = bucketAccountId;
        this.bucketArn = Objects.requireNonNull(bucketArn, "expected parameter 'bucketArn' to be non-null");
        this.format = Objects.requireNonNull(format, "expected parameter 'format' to be non-null");
        this.prefix = prefix;
    }

    private BucketDestinationArgs() {
        this.bucketAccountId = Input.empty();
        this.bucketArn = Input.empty();
        this.format = Input.empty();
        this.prefix = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> bucketAccountId;
        private Input<String> bucketArn;
        private Input<BucketDestinationFormat> format;
        private @Nullable Input<String> prefix;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketDestinationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketAccountId = defaults.bucketAccountId;
    	      this.bucketArn = defaults.bucketArn;
    	      this.format = defaults.format;
    	      this.prefix = defaults.prefix;
        }

        public Builder setBucketAccountId(@Nullable Input<String> bucketAccountId) {
            this.bucketAccountId = bucketAccountId;
            return this;
        }

        public Builder setBucketAccountId(@Nullable String bucketAccountId) {
            this.bucketAccountId = Input.ofNullable(bucketAccountId);
            return this;
        }

        public Builder setBucketArn(Input<String> bucketArn) {
            this.bucketArn = Objects.requireNonNull(bucketArn);
            return this;
        }

        public Builder setBucketArn(String bucketArn) {
            this.bucketArn = Input.of(Objects.requireNonNull(bucketArn));
            return this;
        }

        public Builder setFormat(Input<BucketDestinationFormat> format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }

        public Builder setFormat(BucketDestinationFormat format) {
            this.format = Input.of(Objects.requireNonNull(format));
            return this;
        }

        public Builder setPrefix(@Nullable Input<String> prefix) {
            this.prefix = prefix;
            return this;
        }

        public Builder setPrefix(@Nullable String prefix) {
            this.prefix = Input.ofNullable(prefix);
            return this;
        }
        public BucketDestinationArgs build() {
            return new BucketDestinationArgs(bucketAccountId, bucketArn, format, prefix);
        }
    }
}
