// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight.inputs;

import io.pulumi.awsnative.quicksight.inputs.ThemeTileLayoutStyle;
import io.pulumi.awsnative.quicksight.inputs.ThemeTileStyle;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * <p>The theme display options for sheets. </p>
 * 
 */
public final class ThemeSheetStyle extends io.pulumi.resources.InvokeArgs {

    public static final ThemeSheetStyle Empty = new ThemeSheetStyle();

    @InputImport(name="tile")
    private final @Nullable ThemeTileStyle tile;

    public Optional<ThemeTileStyle> getTile() {
        return this.tile == null ? Optional.empty() : Optional.ofNullable(this.tile);
    }

    @InputImport(name="tileLayout")
    private final @Nullable ThemeTileLayoutStyle tileLayout;

    public Optional<ThemeTileLayoutStyle> getTileLayout() {
        return this.tileLayout == null ? Optional.empty() : Optional.ofNullable(this.tileLayout);
    }

    public ThemeSheetStyle(
        @Nullable ThemeTileStyle tile,
        @Nullable ThemeTileLayoutStyle tileLayout) {
        this.tile = tile;
        this.tileLayout = tileLayout;
    }

    private ThemeSheetStyle() {
        this.tile = null;
        this.tileLayout = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThemeSheetStyle defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ThemeTileStyle tile;
        private @Nullable ThemeTileLayoutStyle tileLayout;

        public Builder() {
    	      // Empty
        }

        public Builder(ThemeSheetStyle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.tile = defaults.tile;
    	      this.tileLayout = defaults.tileLayout;
        }

        public Builder setTile(@Nullable ThemeTileStyle tile) {
            this.tile = tile;
            return this;
        }

        public Builder setTileLayout(@Nullable ThemeTileLayoutStyle tileLayout) {
            this.tileLayout = tileLayout;
            return this;
        }

        public ThemeSheetStyle build() {
            return new ThemeSheetStyle(tile, tileLayout);
        }
    }
}
