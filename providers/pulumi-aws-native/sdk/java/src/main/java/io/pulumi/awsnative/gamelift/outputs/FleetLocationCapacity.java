// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.gamelift.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;

@OutputCustomType
public final class FleetLocationCapacity {
    private final Integer desiredEC2Instances;
    private final Integer maxSize;
    private final Integer minSize;

    @OutputCustomType.Constructor({"desiredEC2Instances","maxSize","minSize"})
    private FleetLocationCapacity(
        Integer desiredEC2Instances,
        Integer maxSize,
        Integer minSize) {
        this.desiredEC2Instances = Objects.requireNonNull(desiredEC2Instances);
        this.maxSize = Objects.requireNonNull(maxSize);
        this.minSize = Objects.requireNonNull(minSize);
    }

    public Integer getDesiredEC2Instances() {
        return this.desiredEC2Instances;
    }
    public Integer getMaxSize() {
        return this.maxSize;
    }
    public Integer getMinSize() {
        return this.minSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FleetLocationCapacity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer desiredEC2Instances;
        private Integer maxSize;
        private Integer minSize;

        public Builder() {
    	      // Empty
        }

        public Builder(FleetLocationCapacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.desiredEC2Instances = defaults.desiredEC2Instances;
    	      this.maxSize = defaults.maxSize;
    	      this.minSize = defaults.minSize;
        }

        public Builder setDesiredEC2Instances(Integer desiredEC2Instances) {
            this.desiredEC2Instances = Objects.requireNonNull(desiredEC2Instances);
            return this;
        }

        public Builder setMaxSize(Integer maxSize) {
            this.maxSize = Objects.requireNonNull(maxSize);
            return this;
        }

        public Builder setMinSize(Integer minSize) {
            this.minSize = Objects.requireNonNull(minSize);
            return this;
        }

        public FleetLocationCapacity build() {
            return new FleetLocationCapacity(desiredEC2Instances, maxSize, minSize);
        }
    }
}
