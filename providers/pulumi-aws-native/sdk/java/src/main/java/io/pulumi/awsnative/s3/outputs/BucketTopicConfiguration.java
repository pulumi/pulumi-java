// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.outputs;

import io.pulumi.awsnative.s3.outputs.BucketNotificationFilter;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class BucketTopicConfiguration {
    /**
     * The Amazon S3 bucket event about which to send notifications.
     * 
     */
    private final String event;
    /**
     * The filtering rules that determine for which objects to send notifications.
     * 
     */
    private final @Nullable BucketNotificationFilter filter;
    /**
     * The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
     * 
     */
    private final String topic;

    @OutputCustomType.Constructor
    private BucketTopicConfiguration(
        @OutputCustomType.Parameter("event") String event,
        @OutputCustomType.Parameter("filter") @Nullable BucketNotificationFilter filter,
        @OutputCustomType.Parameter("topic") String topic) {
        this.event = event;
        this.filter = filter;
        this.topic = topic;
    }

    /**
     * The Amazon S3 bucket event about which to send notifications.
     * 
    */
    public String getEvent() {
        return this.event;
    }
    /**
     * The filtering rules that determine for which objects to send notifications.
     * 
    */
    public Optional<BucketNotificationFilter> getFilter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
     * 
    */
    public String getTopic() {
        return this.topic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketTopicConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String event;
        private @Nullable BucketNotificationFilter filter;
        private String topic;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketTopicConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.event = defaults.event;
    	      this.filter = defaults.filter;
    	      this.topic = defaults.topic;
        }

        public Builder event(String event) {
            this.event = Objects.requireNonNull(event);
            return this;
        }

        public Builder filter(@Nullable BucketNotificationFilter filter) {
            this.filter = filter;
            return this;
        }

        public Builder topic(String topic) {
            this.topic = Objects.requireNonNull(topic);
            return this;
        }
        public BucketTopicConfiguration build() {
            return new BucketTopicConfiguration(event, filter, topic);
        }
    }
}
