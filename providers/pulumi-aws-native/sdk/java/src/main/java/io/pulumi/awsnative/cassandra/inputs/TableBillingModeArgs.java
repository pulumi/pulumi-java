// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cassandra.inputs;

import io.pulumi.awsnative.cassandra.enums.TableMode;
import io.pulumi.awsnative.cassandra.inputs.TableProvisionedThroughputArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TableBillingModeArgs extends io.pulumi.resources.ResourceArgs {

    public static final TableBillingModeArgs Empty = new TableBillingModeArgs();

    @Import(name="mode", required=true)
      private final Output<TableMode> mode;

    public Output<TableMode> getMode() {
        return this.mode;
    }

    @Import(name="provisionedThroughput")
      private final @Nullable Output<TableProvisionedThroughputArgs> provisionedThroughput;

    public Output<TableProvisionedThroughputArgs> getProvisionedThroughput() {
        return this.provisionedThroughput == null ? Output.empty() : this.provisionedThroughput;
    }

    public TableBillingModeArgs(
        Output<TableMode> mode,
        @Nullable Output<TableProvisionedThroughputArgs> provisionedThroughput) {
        this.mode = Objects.requireNonNull(mode, "expected parameter 'mode' to be non-null");
        this.provisionedThroughput = provisionedThroughput;
    }

    private TableBillingModeArgs() {
        this.mode = Output.empty();
        this.provisionedThroughput = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableBillingModeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<TableMode> mode;
        private @Nullable Output<TableProvisionedThroughputArgs> provisionedThroughput;

        public Builder() {
    	      // Empty
        }

        public Builder(TableBillingModeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.provisionedThroughput = defaults.provisionedThroughput;
        }

        public Builder mode(Output<TableMode> mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder mode(TableMode mode) {
            this.mode = Output.of(Objects.requireNonNull(mode));
            return this;
        }
        public Builder provisionedThroughput(@Nullable Output<TableProvisionedThroughputArgs> provisionedThroughput) {
            this.provisionedThroughput = provisionedThroughput;
            return this;
        }
        public Builder provisionedThroughput(@Nullable TableProvisionedThroughputArgs provisionedThroughput) {
            this.provisionedThroughput = Output.ofNullable(provisionedThroughput);
            return this;
        }        public TableBillingModeArgs build() {
            return new TableBillingModeArgs(mode, provisionedThroughput);
        }
    }
}
