// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2;

import io.pulumi.awsnative.wafv2.enums.RegexPatternSetScope;
import io.pulumi.awsnative.wafv2.inputs.RegexPatternSetTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RegexPatternSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final RegexPatternSetArgs Empty = new RegexPatternSetArgs();

    /**
     * Description of the entity.
     * 
     */
    @InputImport(name="description")
        private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Name of the RegexPatternSet.
     * 
     */
    @InputImport(name="name")
        private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="regularExpressionList", required=true)
        private final Input<List<String>> regularExpressionList;

    public Input<List<String>> getRegularExpressionList() {
        return this.regularExpressionList;
    }

    /**
     * Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway.
     * 
     */
    @InputImport(name="scope", required=true)
        private final Input<RegexPatternSetScope> scope;

    public Input<RegexPatternSetScope> getScope() {
        return this.scope;
    }

    @InputImport(name="tags")
        private final @Nullable Input<List<RegexPatternSetTagArgs>> tags;

    public Input<List<RegexPatternSetTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public RegexPatternSetArgs(
        @Nullable Input<String> description,
        @Nullable Input<String> name,
        Input<List<String>> regularExpressionList,
        Input<RegexPatternSetScope> scope,
        @Nullable Input<List<RegexPatternSetTagArgs>> tags) {
        this.description = description;
        this.name = name;
        this.regularExpressionList = Objects.requireNonNull(regularExpressionList, "expected parameter 'regularExpressionList' to be non-null");
        this.scope = Objects.requireNonNull(scope, "expected parameter 'scope' to be non-null");
        this.tags = tags;
    }

    private RegexPatternSetArgs() {
        this.description = Input.empty();
        this.name = Input.empty();
        this.regularExpressionList = Input.empty();
        this.scope = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegexPatternSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> name;
        private Input<List<String>> regularExpressionList;
        private Input<RegexPatternSetScope> scope;
        private @Nullable Input<List<RegexPatternSetTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(RegexPatternSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.regularExpressionList = defaults.regularExpressionList;
    	      this.scope = defaults.scope;
    	      this.tags = defaults.tags;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setRegularExpressionList(Input<List<String>> regularExpressionList) {
            this.regularExpressionList = Objects.requireNonNull(regularExpressionList);
            return this;
        }

        public Builder setRegularExpressionList(List<String> regularExpressionList) {
            this.regularExpressionList = Input.of(Objects.requireNonNull(regularExpressionList));
            return this;
        }

        public Builder setScope(Input<RegexPatternSetScope> scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }

        public Builder setScope(RegexPatternSetScope scope) {
            this.scope = Input.of(Objects.requireNonNull(scope));
            return this;
        }

        public Builder setTags(@Nullable Input<List<RegexPatternSetTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<RegexPatternSetTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public RegexPatternSetArgs build() {
            return new RegexPatternSetArgs(description, name, regularExpressionList, scope, tags);
        }
    }
}
