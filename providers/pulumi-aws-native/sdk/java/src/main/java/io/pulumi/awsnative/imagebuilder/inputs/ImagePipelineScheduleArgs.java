// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.imagebuilder.inputs;

import io.pulumi.awsnative.imagebuilder.enums.ImagePipelineSchedulePipelineExecutionStartCondition;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The schedule of the image pipeline.
 * 
 */
public final class ImagePipelineScheduleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ImagePipelineScheduleArgs Empty = new ImagePipelineScheduleArgs();

    /**
     * The condition configures when the pipeline should trigger a new image build.
     * 
     */
    @InputImport(name="pipelineExecutionStartCondition")
    private final @Nullable Input<ImagePipelineSchedulePipelineExecutionStartCondition> pipelineExecutionStartCondition;

    public Input<ImagePipelineSchedulePipelineExecutionStartCondition> getPipelineExecutionStartCondition() {
        return this.pipelineExecutionStartCondition == null ? Input.empty() : this.pipelineExecutionStartCondition;
    }

    /**
     * The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
     * 
     */
    @InputImport(name="scheduleExpression")
    private final @Nullable Input<String> scheduleExpression;

    public Input<String> getScheduleExpression() {
        return this.scheduleExpression == null ? Input.empty() : this.scheduleExpression;
    }

    public ImagePipelineScheduleArgs(
        @Nullable Input<ImagePipelineSchedulePipelineExecutionStartCondition> pipelineExecutionStartCondition,
        @Nullable Input<String> scheduleExpression) {
        this.pipelineExecutionStartCondition = pipelineExecutionStartCondition;
        this.scheduleExpression = scheduleExpression;
    }

    private ImagePipelineScheduleArgs() {
        this.pipelineExecutionStartCondition = Input.empty();
        this.scheduleExpression = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImagePipelineScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ImagePipelineSchedulePipelineExecutionStartCondition> pipelineExecutionStartCondition;
        private @Nullable Input<String> scheduleExpression;

        public Builder() {
    	      // Empty
        }

        public Builder(ImagePipelineScheduleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pipelineExecutionStartCondition = defaults.pipelineExecutionStartCondition;
    	      this.scheduleExpression = defaults.scheduleExpression;
        }

        public Builder setPipelineExecutionStartCondition(@Nullable Input<ImagePipelineSchedulePipelineExecutionStartCondition> pipelineExecutionStartCondition) {
            this.pipelineExecutionStartCondition = pipelineExecutionStartCondition;
            return this;
        }

        public Builder setPipelineExecutionStartCondition(@Nullable ImagePipelineSchedulePipelineExecutionStartCondition pipelineExecutionStartCondition) {
            this.pipelineExecutionStartCondition = Input.ofNullable(pipelineExecutionStartCondition);
            return this;
        }

        public Builder setScheduleExpression(@Nullable Input<String> scheduleExpression) {
            this.scheduleExpression = scheduleExpression;
            return this;
        }

        public Builder setScheduleExpression(@Nullable String scheduleExpression) {
            this.scheduleExpression = Input.ofNullable(scheduleExpression);
            return this;
        }

        public ImagePipelineScheduleArgs build() {
            return new ImagePipelineScheduleArgs(pipelineExecutionStartCondition, scheduleExpression);
        }
    }
}
