// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.greengrassv2.inputs;

import io.pulumi.awsnative.greengrassv2.enums.ComponentVersionLambdaExecutionParametersInputPayloadEncodingType;
import io.pulumi.awsnative.greengrassv2.inputs.ComponentVersionLambdaEventSourceArgs;
import io.pulumi.awsnative.greengrassv2.inputs.ComponentVersionLambdaLinuxProcessParamsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ComponentVersionLambdaExecutionParametersArgs extends io.pulumi.resources.ResourceArgs {

    public static final ComponentVersionLambdaExecutionParametersArgs Empty = new ComponentVersionLambdaExecutionParametersArgs();

    @Import(name="environmentVariables")
      private final @Nullable Output<Object> environmentVariables;

    public Output<Object> getEnvironmentVariables() {
        return this.environmentVariables == null ? Codegen.empty() : this.environmentVariables;
    }

    @Import(name="eventSources")
      private final @Nullable Output<List<ComponentVersionLambdaEventSourceArgs>> eventSources;

    public Output<List<ComponentVersionLambdaEventSourceArgs>> getEventSources() {
        return this.eventSources == null ? Codegen.empty() : this.eventSources;
    }

    @Import(name="execArgs")
      private final @Nullable Output<List<String>> execArgs;

    public Output<List<String>> getExecArgs() {
        return this.execArgs == null ? Codegen.empty() : this.execArgs;
    }

    @Import(name="inputPayloadEncodingType")
      private final @Nullable Output<ComponentVersionLambdaExecutionParametersInputPayloadEncodingType> inputPayloadEncodingType;

    public Output<ComponentVersionLambdaExecutionParametersInputPayloadEncodingType> getInputPayloadEncodingType() {
        return this.inputPayloadEncodingType == null ? Codegen.empty() : this.inputPayloadEncodingType;
    }

    @Import(name="linuxProcessParams")
      private final @Nullable Output<ComponentVersionLambdaLinuxProcessParamsArgs> linuxProcessParams;

    public Output<ComponentVersionLambdaLinuxProcessParamsArgs> getLinuxProcessParams() {
        return this.linuxProcessParams == null ? Codegen.empty() : this.linuxProcessParams;
    }

    @Import(name="maxIdleTimeInSeconds")
      private final @Nullable Output<Integer> maxIdleTimeInSeconds;

    public Output<Integer> getMaxIdleTimeInSeconds() {
        return this.maxIdleTimeInSeconds == null ? Codegen.empty() : this.maxIdleTimeInSeconds;
    }

    @Import(name="maxInstancesCount")
      private final @Nullable Output<Integer> maxInstancesCount;

    public Output<Integer> getMaxInstancesCount() {
        return this.maxInstancesCount == null ? Codegen.empty() : this.maxInstancesCount;
    }

    @Import(name="maxQueueSize")
      private final @Nullable Output<Integer> maxQueueSize;

    public Output<Integer> getMaxQueueSize() {
        return this.maxQueueSize == null ? Codegen.empty() : this.maxQueueSize;
    }

    @Import(name="pinned")
      private final @Nullable Output<Boolean> pinned;

    public Output<Boolean> getPinned() {
        return this.pinned == null ? Codegen.empty() : this.pinned;
    }

    @Import(name="statusTimeoutInSeconds")
      private final @Nullable Output<Integer> statusTimeoutInSeconds;

    public Output<Integer> getStatusTimeoutInSeconds() {
        return this.statusTimeoutInSeconds == null ? Codegen.empty() : this.statusTimeoutInSeconds;
    }

    @Import(name="timeoutInSeconds")
      private final @Nullable Output<Integer> timeoutInSeconds;

    public Output<Integer> getTimeoutInSeconds() {
        return this.timeoutInSeconds == null ? Codegen.empty() : this.timeoutInSeconds;
    }

    public ComponentVersionLambdaExecutionParametersArgs(
        @Nullable Output<Object> environmentVariables,
        @Nullable Output<List<ComponentVersionLambdaEventSourceArgs>> eventSources,
        @Nullable Output<List<String>> execArgs,
        @Nullable Output<ComponentVersionLambdaExecutionParametersInputPayloadEncodingType> inputPayloadEncodingType,
        @Nullable Output<ComponentVersionLambdaLinuxProcessParamsArgs> linuxProcessParams,
        @Nullable Output<Integer> maxIdleTimeInSeconds,
        @Nullable Output<Integer> maxInstancesCount,
        @Nullable Output<Integer> maxQueueSize,
        @Nullable Output<Boolean> pinned,
        @Nullable Output<Integer> statusTimeoutInSeconds,
        @Nullable Output<Integer> timeoutInSeconds) {
        this.environmentVariables = environmentVariables;
        this.eventSources = eventSources;
        this.execArgs = execArgs;
        this.inputPayloadEncodingType = inputPayloadEncodingType;
        this.linuxProcessParams = linuxProcessParams;
        this.maxIdleTimeInSeconds = maxIdleTimeInSeconds;
        this.maxInstancesCount = maxInstancesCount;
        this.maxQueueSize = maxQueueSize;
        this.pinned = pinned;
        this.statusTimeoutInSeconds = statusTimeoutInSeconds;
        this.timeoutInSeconds = timeoutInSeconds;
    }

    private ComponentVersionLambdaExecutionParametersArgs() {
        this.environmentVariables = Codegen.empty();
        this.eventSources = Codegen.empty();
        this.execArgs = Codegen.empty();
        this.inputPayloadEncodingType = Codegen.empty();
        this.linuxProcessParams = Codegen.empty();
        this.maxIdleTimeInSeconds = Codegen.empty();
        this.maxInstancesCount = Codegen.empty();
        this.maxQueueSize = Codegen.empty();
        this.pinned = Codegen.empty();
        this.statusTimeoutInSeconds = Codegen.empty();
        this.timeoutInSeconds = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComponentVersionLambdaExecutionParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> environmentVariables;
        private @Nullable Output<List<ComponentVersionLambdaEventSourceArgs>> eventSources;
        private @Nullable Output<List<String>> execArgs;
        private @Nullable Output<ComponentVersionLambdaExecutionParametersInputPayloadEncodingType> inputPayloadEncodingType;
        private @Nullable Output<ComponentVersionLambdaLinuxProcessParamsArgs> linuxProcessParams;
        private @Nullable Output<Integer> maxIdleTimeInSeconds;
        private @Nullable Output<Integer> maxInstancesCount;
        private @Nullable Output<Integer> maxQueueSize;
        private @Nullable Output<Boolean> pinned;
        private @Nullable Output<Integer> statusTimeoutInSeconds;
        private @Nullable Output<Integer> timeoutInSeconds;

        public Builder() {
    	      // Empty
        }

        public Builder(ComponentVersionLambdaExecutionParametersArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.eventSources = defaults.eventSources;
    	      this.execArgs = defaults.execArgs;
    	      this.inputPayloadEncodingType = defaults.inputPayloadEncodingType;
    	      this.linuxProcessParams = defaults.linuxProcessParams;
    	      this.maxIdleTimeInSeconds = defaults.maxIdleTimeInSeconds;
    	      this.maxInstancesCount = defaults.maxInstancesCount;
    	      this.maxQueueSize = defaults.maxQueueSize;
    	      this.pinned = defaults.pinned;
    	      this.statusTimeoutInSeconds = defaults.statusTimeoutInSeconds;
    	      this.timeoutInSeconds = defaults.timeoutInSeconds;
        }

        public Builder environmentVariables(@Nullable Output<Object> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }
        public Builder environmentVariables(@Nullable Object environmentVariables) {
            this.environmentVariables = Codegen.ofNullable(environmentVariables);
            return this;
        }
        public Builder eventSources(@Nullable Output<List<ComponentVersionLambdaEventSourceArgs>> eventSources) {
            this.eventSources = eventSources;
            return this;
        }
        public Builder eventSources(@Nullable List<ComponentVersionLambdaEventSourceArgs> eventSources) {
            this.eventSources = Codegen.ofNullable(eventSources);
            return this;
        }
        public Builder eventSources(ComponentVersionLambdaEventSourceArgs... eventSources) {
            return eventSources(List.of(eventSources));
        }
        public Builder execArgs(@Nullable Output<List<String>> execArgs) {
            this.execArgs = execArgs;
            return this;
        }
        public Builder execArgs(@Nullable List<String> execArgs) {
            this.execArgs = Codegen.ofNullable(execArgs);
            return this;
        }
        public Builder execArgs(String... execArgs) {
            return execArgs(List.of(execArgs));
        }
        public Builder inputPayloadEncodingType(@Nullable Output<ComponentVersionLambdaExecutionParametersInputPayloadEncodingType> inputPayloadEncodingType) {
            this.inputPayloadEncodingType = inputPayloadEncodingType;
            return this;
        }
        public Builder inputPayloadEncodingType(@Nullable ComponentVersionLambdaExecutionParametersInputPayloadEncodingType inputPayloadEncodingType) {
            this.inputPayloadEncodingType = Codegen.ofNullable(inputPayloadEncodingType);
            return this;
        }
        public Builder linuxProcessParams(@Nullable Output<ComponentVersionLambdaLinuxProcessParamsArgs> linuxProcessParams) {
            this.linuxProcessParams = linuxProcessParams;
            return this;
        }
        public Builder linuxProcessParams(@Nullable ComponentVersionLambdaLinuxProcessParamsArgs linuxProcessParams) {
            this.linuxProcessParams = Codegen.ofNullable(linuxProcessParams);
            return this;
        }
        public Builder maxIdleTimeInSeconds(@Nullable Output<Integer> maxIdleTimeInSeconds) {
            this.maxIdleTimeInSeconds = maxIdleTimeInSeconds;
            return this;
        }
        public Builder maxIdleTimeInSeconds(@Nullable Integer maxIdleTimeInSeconds) {
            this.maxIdleTimeInSeconds = Codegen.ofNullable(maxIdleTimeInSeconds);
            return this;
        }
        public Builder maxInstancesCount(@Nullable Output<Integer> maxInstancesCount) {
            this.maxInstancesCount = maxInstancesCount;
            return this;
        }
        public Builder maxInstancesCount(@Nullable Integer maxInstancesCount) {
            this.maxInstancesCount = Codegen.ofNullable(maxInstancesCount);
            return this;
        }
        public Builder maxQueueSize(@Nullable Output<Integer> maxQueueSize) {
            this.maxQueueSize = maxQueueSize;
            return this;
        }
        public Builder maxQueueSize(@Nullable Integer maxQueueSize) {
            this.maxQueueSize = Codegen.ofNullable(maxQueueSize);
            return this;
        }
        public Builder pinned(@Nullable Output<Boolean> pinned) {
            this.pinned = pinned;
            return this;
        }
        public Builder pinned(@Nullable Boolean pinned) {
            this.pinned = Codegen.ofNullable(pinned);
            return this;
        }
        public Builder statusTimeoutInSeconds(@Nullable Output<Integer> statusTimeoutInSeconds) {
            this.statusTimeoutInSeconds = statusTimeoutInSeconds;
            return this;
        }
        public Builder statusTimeoutInSeconds(@Nullable Integer statusTimeoutInSeconds) {
            this.statusTimeoutInSeconds = Codegen.ofNullable(statusTimeoutInSeconds);
            return this;
        }
        public Builder timeoutInSeconds(@Nullable Output<Integer> timeoutInSeconds) {
            this.timeoutInSeconds = timeoutInSeconds;
            return this;
        }
        public Builder timeoutInSeconds(@Nullable Integer timeoutInSeconds) {
            this.timeoutInSeconds = Codegen.ofNullable(timeoutInSeconds);
            return this;
        }        public ComponentVersionLambdaExecutionParametersArgs build() {
            return new ComponentVersionLambdaExecutionParametersArgs(environmentVariables, eventSources, execArgs, inputPayloadEncodingType, linuxProcessParams, maxIdleTimeInSeconds, maxInstancesCount, maxQueueSize, pinned, statusTimeoutInSeconds, timeoutInSeconds);
        }
    }
}
