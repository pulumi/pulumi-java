// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iot;

import io.pulumi.awsnative.iot.enums.CertificateMode;
import io.pulumi.awsnative.iot.enums.CertificateStatus;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CertificateArgs extends io.pulumi.resources.ResourceArgs {

    public static final CertificateArgs Empty = new CertificateArgs();

    @InputImport(name="cACertificatePem")
    private final @Nullable Input<String> cACertificatePem;

    public Input<String> getCACertificatePem() {
        return this.cACertificatePem == null ? Input.empty() : this.cACertificatePem;
    }

    @InputImport(name="certificateMode")
    private final @Nullable Input<CertificateMode> certificateMode;

    public Input<CertificateMode> getCertificateMode() {
        return this.certificateMode == null ? Input.empty() : this.certificateMode;
    }

    @InputImport(name="certificatePem")
    private final @Nullable Input<String> certificatePem;

    public Input<String> getCertificatePem() {
        return this.certificatePem == null ? Input.empty() : this.certificatePem;
    }

    @InputImport(name="certificateSigningRequest")
    private final @Nullable Input<String> certificateSigningRequest;

    public Input<String> getCertificateSigningRequest() {
        return this.certificateSigningRequest == null ? Input.empty() : this.certificateSigningRequest;
    }

    @InputImport(name="status", required=true)
    private final Input<CertificateStatus> status;

    public Input<CertificateStatus> getStatus() {
        return this.status;
    }

    public CertificateArgs(
        @Nullable Input<String> cACertificatePem,
        @Nullable Input<CertificateMode> certificateMode,
        @Nullable Input<String> certificatePem,
        @Nullable Input<String> certificateSigningRequest,
        Input<CertificateStatus> status) {
        this.cACertificatePem = cACertificatePem;
        this.certificateMode = certificateMode;
        this.certificatePem = certificatePem;
        this.certificateSigningRequest = certificateSigningRequest;
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
    }

    private CertificateArgs() {
        this.cACertificatePem = Input.empty();
        this.certificateMode = Input.empty();
        this.certificatePem = Input.empty();
        this.certificateSigningRequest = Input.empty();
        this.status = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> cACertificatePem;
        private @Nullable Input<CertificateMode> certificateMode;
        private @Nullable Input<String> certificatePem;
        private @Nullable Input<String> certificateSigningRequest;
        private Input<CertificateStatus> status;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cACertificatePem = defaults.cACertificatePem;
    	      this.certificateMode = defaults.certificateMode;
    	      this.certificatePem = defaults.certificatePem;
    	      this.certificateSigningRequest = defaults.certificateSigningRequest;
    	      this.status = defaults.status;
        }

        public Builder setCACertificatePem(@Nullable Input<String> cACertificatePem) {
            this.cACertificatePem = cACertificatePem;
            return this;
        }

        public Builder setCACertificatePem(@Nullable String cACertificatePem) {
            this.cACertificatePem = Input.ofNullable(cACertificatePem);
            return this;
        }

        public Builder setCertificateMode(@Nullable Input<CertificateMode> certificateMode) {
            this.certificateMode = certificateMode;
            return this;
        }

        public Builder setCertificateMode(@Nullable CertificateMode certificateMode) {
            this.certificateMode = Input.ofNullable(certificateMode);
            return this;
        }

        public Builder setCertificatePem(@Nullable Input<String> certificatePem) {
            this.certificatePem = certificatePem;
            return this;
        }

        public Builder setCertificatePem(@Nullable String certificatePem) {
            this.certificatePem = Input.ofNullable(certificatePem);
            return this;
        }

        public Builder setCertificateSigningRequest(@Nullable Input<String> certificateSigningRequest) {
            this.certificateSigningRequest = certificateSigningRequest;
            return this;
        }

        public Builder setCertificateSigningRequest(@Nullable String certificateSigningRequest) {
            this.certificateSigningRequest = Input.ofNullable(certificateSigningRequest);
            return this;
        }

        public Builder setStatus(Input<CertificateStatus> status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setStatus(CertificateStatus status) {
            this.status = Input.of(Objects.requireNonNull(status));
            return this;
        }

        public CertificateArgs build() {
            return new CertificateArgs(cACertificatePem, certificateMode, certificatePem, certificateSigningRequest, status);
        }
    }
}
