// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.outputs;

import io.pulumi.awsnative.s3.enums.BucketTieringAccessTier;
import io.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class BucketTiering {
    /**
     * S3 Intelligent-Tiering access tier. See Storage class for automatically optimizing frequently and infrequently accessed objects for a list of access tiers in the S3 Intelligent-Tiering storage class.
     * 
     */
    private final BucketTieringAccessTier accessTier;
    /**
     * The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
     * 
     */
    private final Integer days;

    @CustomType.Constructor
    private BucketTiering(
        @CustomType.Parameter("accessTier") BucketTieringAccessTier accessTier,
        @CustomType.Parameter("days") Integer days) {
        this.accessTier = accessTier;
        this.days = days;
    }

    /**
     * S3 Intelligent-Tiering access tier. See Storage class for automatically optimizing frequently and infrequently accessed objects for a list of access tiers in the S3 Intelligent-Tiering storage class.
     * 
    */
    public BucketTieringAccessTier getAccessTier() {
        return this.accessTier;
    }
    /**
     * The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
     * 
    */
    public Integer getDays() {
        return this.days;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketTiering defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketTieringAccessTier accessTier;
        private Integer days;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketTiering defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessTier = defaults.accessTier;
    	      this.days = defaults.days;
        }

        public Builder accessTier(BucketTieringAccessTier accessTier) {
            this.accessTier = Objects.requireNonNull(accessTier);
            return this;
        }
        public Builder days(Integer days) {
            this.days = Objects.requireNonNull(days);
            return this;
        }        public BucketTiering build() {
            return new BucketTiering(accessTier, days);
        }
    }
}
