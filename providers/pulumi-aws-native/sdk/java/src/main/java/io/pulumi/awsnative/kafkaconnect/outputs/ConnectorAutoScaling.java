// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kafkaconnect.outputs;

import io.pulumi.awsnative.kafkaconnect.outputs.ConnectorScaleInPolicy;
import io.pulumi.awsnative.kafkaconnect.outputs.ConnectorScaleOutPolicy;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.util.Objects;

@OutputCustomType
public final class ConnectorAutoScaling {
    /**
     * The maximum number of workers for a connector.
     * 
     */
    private final Integer maxWorkerCount;
    /**
     * Specifies how many MSK Connect Units (MCU) as the minimum scaling unit.
     * 
     */
    private final Integer mcuCount;
    /**
     * The minimum number of workers for a connector.
     * 
     */
    private final Integer minWorkerCount;
    private final ConnectorScaleInPolicy scaleInPolicy;
    private final ConnectorScaleOutPolicy scaleOutPolicy;

    @OutputCustomType.Constructor({"maxWorkerCount","mcuCount","minWorkerCount","scaleInPolicy","scaleOutPolicy"})
    private ConnectorAutoScaling(
        Integer maxWorkerCount,
        Integer mcuCount,
        Integer minWorkerCount,
        ConnectorScaleInPolicy scaleInPolicy,
        ConnectorScaleOutPolicy scaleOutPolicy) {
        this.maxWorkerCount = Objects.requireNonNull(maxWorkerCount);
        this.mcuCount = Objects.requireNonNull(mcuCount);
        this.minWorkerCount = Objects.requireNonNull(minWorkerCount);
        this.scaleInPolicy = Objects.requireNonNull(scaleInPolicy);
        this.scaleOutPolicy = Objects.requireNonNull(scaleOutPolicy);
    }

    /**
     * The maximum number of workers for a connector.
     * 
    */
    public Integer getMaxWorkerCount() {
        return this.maxWorkerCount;
    }
    /**
     * Specifies how many MSK Connect Units (MCU) as the minimum scaling unit.
     * 
    */
    public Integer getMcuCount() {
        return this.mcuCount;
    }
    /**
     * The minimum number of workers for a connector.
     * 
    */
    public Integer getMinWorkerCount() {
        return this.minWorkerCount;
    }
    public ConnectorScaleInPolicy getScaleInPolicy() {
        return this.scaleInPolicy;
    }
    public ConnectorScaleOutPolicy getScaleOutPolicy() {
        return this.scaleOutPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorAutoScaling defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer maxWorkerCount;
        private Integer mcuCount;
        private Integer minWorkerCount;
        private ConnectorScaleInPolicy scaleInPolicy;
        private ConnectorScaleOutPolicy scaleOutPolicy;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectorAutoScaling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxWorkerCount = defaults.maxWorkerCount;
    	      this.mcuCount = defaults.mcuCount;
    	      this.minWorkerCount = defaults.minWorkerCount;
    	      this.scaleInPolicy = defaults.scaleInPolicy;
    	      this.scaleOutPolicy = defaults.scaleOutPolicy;
        }

        public Builder setMaxWorkerCount(Integer maxWorkerCount) {
            this.maxWorkerCount = Objects.requireNonNull(maxWorkerCount);
            return this;
        }

        public Builder setMcuCount(Integer mcuCount) {
            this.mcuCount = Objects.requireNonNull(mcuCount);
            return this;
        }

        public Builder setMinWorkerCount(Integer minWorkerCount) {
            this.minWorkerCount = Objects.requireNonNull(minWorkerCount);
            return this;
        }

        public Builder setScaleInPolicy(ConnectorScaleInPolicy scaleInPolicy) {
            this.scaleInPolicy = Objects.requireNonNull(scaleInPolicy);
            return this;
        }

        public Builder setScaleOutPolicy(ConnectorScaleOutPolicy scaleOutPolicy) {
            this.scaleOutPolicy = Objects.requireNonNull(scaleOutPolicy);
            return this;
        }
        public ConnectorAutoScaling build() {
            return new ConnectorAutoScaling(maxWorkerCount, mcuCount, minWorkerCount, scaleInPolicy, scaleOutPolicy);
        }
    }
}
