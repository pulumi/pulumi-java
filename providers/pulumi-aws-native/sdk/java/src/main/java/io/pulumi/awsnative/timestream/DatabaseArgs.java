// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.timestream;

import io.pulumi.awsnative.timestream.inputs.DatabaseTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatabaseArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatabaseArgs Empty = new DatabaseArgs();

    /**
     * The name for the database. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the database name.
     * 
     */
    @InputImport(name="databaseName")
        private final @Nullable Input<String> databaseName;

    public Input<String> getDatabaseName() {
        return this.databaseName == null ? Input.empty() : this.databaseName;
    }

    /**
     * The KMS key for the database. If the KMS key is not specified, the database will be encrypted with a Timestream managed KMS key located in your account.
     * 
     */
    @InputImport(name="kmsKeyId")
        private final @Nullable Input<String> kmsKeyId;

    public Input<String> getKmsKeyId() {
        return this.kmsKeyId == null ? Input.empty() : this.kmsKeyId;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @InputImport(name="tags")
        private final @Nullable Input<List<DatabaseTagArgs>> tags;

    public Input<List<DatabaseTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public DatabaseArgs(
        @Nullable Input<String> databaseName,
        @Nullable Input<String> kmsKeyId,
        @Nullable Input<List<DatabaseTagArgs>> tags) {
        this.databaseName = databaseName;
        this.kmsKeyId = kmsKeyId;
        this.tags = tags;
    }

    private DatabaseArgs() {
        this.databaseName = Input.empty();
        this.kmsKeyId = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> databaseName;
        private @Nullable Input<String> kmsKeyId;
        private @Nullable Input<List<DatabaseTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.tags = defaults.tags;
        }

        public Builder setDatabaseName(@Nullable Input<String> databaseName) {
            this.databaseName = databaseName;
            return this;
        }

        public Builder setDatabaseName(@Nullable String databaseName) {
            this.databaseName = Input.ofNullable(databaseName);
            return this;
        }

        public Builder setKmsKeyId(@Nullable Input<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }

        public Builder setKmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Input.ofNullable(kmsKeyId);
            return this;
        }

        public Builder setTags(@Nullable Input<List<DatabaseTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<DatabaseTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public DatabaseArgs build() {
            return new DatabaseArgs(databaseName, kmsKeyId, tags);
        }
    }
}
