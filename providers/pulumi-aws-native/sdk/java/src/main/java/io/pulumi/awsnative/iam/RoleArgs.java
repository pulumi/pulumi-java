// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iam;

import io.pulumi.awsnative.iam.inputs.RolePolicyArgs;
import io.pulumi.awsnative.iam.inputs.RoleTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RoleArgs extends io.pulumi.resources.ResourceArgs {

    public static final RoleArgs Empty = new RoleArgs();

    @InputImport(name="assumeRolePolicyDocument", required=true)
    private final Input<Object> assumeRolePolicyDocument;

    public Input<Object> getAssumeRolePolicyDocument() {
        return this.assumeRolePolicyDocument;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="managedPolicyArns")
    private final @Nullable Input<List<String>> managedPolicyArns;

    public Input<List<String>> getManagedPolicyArns() {
        return this.managedPolicyArns == null ? Input.empty() : this.managedPolicyArns;
    }

    @InputImport(name="maxSessionDuration")
    private final @Nullable Input<Integer> maxSessionDuration;

    public Input<Integer> getMaxSessionDuration() {
        return this.maxSessionDuration == null ? Input.empty() : this.maxSessionDuration;
    }

    @InputImport(name="path")
    private final @Nullable Input<String> path;

    public Input<String> getPath() {
        return this.path == null ? Input.empty() : this.path;
    }

    @InputImport(name="permissionsBoundary")
    private final @Nullable Input<String> permissionsBoundary;

    public Input<String> getPermissionsBoundary() {
        return this.permissionsBoundary == null ? Input.empty() : this.permissionsBoundary;
    }

    @InputImport(name="policies")
    private final @Nullable Input<List<RolePolicyArgs>> policies;

    public Input<List<RolePolicyArgs>> getPolicies() {
        return this.policies == null ? Input.empty() : this.policies;
    }

    @InputImport(name="roleName")
    private final @Nullable Input<String> roleName;

    public Input<String> getRoleName() {
        return this.roleName == null ? Input.empty() : this.roleName;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<RoleTagArgs>> tags;

    public Input<List<RoleTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public RoleArgs(
        Input<Object> assumeRolePolicyDocument,
        @Nullable Input<String> description,
        @Nullable Input<List<String>> managedPolicyArns,
        @Nullable Input<Integer> maxSessionDuration,
        @Nullable Input<String> path,
        @Nullable Input<String> permissionsBoundary,
        @Nullable Input<List<RolePolicyArgs>> policies,
        @Nullable Input<String> roleName,
        @Nullable Input<List<RoleTagArgs>> tags) {
        this.assumeRolePolicyDocument = Objects.requireNonNull(assumeRolePolicyDocument, "expected parameter 'assumeRolePolicyDocument' to be non-null");
        this.description = description;
        this.managedPolicyArns = managedPolicyArns;
        this.maxSessionDuration = maxSessionDuration;
        this.path = path;
        this.permissionsBoundary = permissionsBoundary;
        this.policies = policies;
        this.roleName = roleName;
        this.tags = tags;
    }

    private RoleArgs() {
        this.assumeRolePolicyDocument = Input.empty();
        this.description = Input.empty();
        this.managedPolicyArns = Input.empty();
        this.maxSessionDuration = Input.empty();
        this.path = Input.empty();
        this.permissionsBoundary = Input.empty();
        this.policies = Input.empty();
        this.roleName = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Object> assumeRolePolicyDocument;
        private @Nullable Input<String> description;
        private @Nullable Input<List<String>> managedPolicyArns;
        private @Nullable Input<Integer> maxSessionDuration;
        private @Nullable Input<String> path;
        private @Nullable Input<String> permissionsBoundary;
        private @Nullable Input<List<RolePolicyArgs>> policies;
        private @Nullable Input<String> roleName;
        private @Nullable Input<List<RoleTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(RoleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assumeRolePolicyDocument = defaults.assumeRolePolicyDocument;
    	      this.description = defaults.description;
    	      this.managedPolicyArns = defaults.managedPolicyArns;
    	      this.maxSessionDuration = defaults.maxSessionDuration;
    	      this.path = defaults.path;
    	      this.permissionsBoundary = defaults.permissionsBoundary;
    	      this.policies = defaults.policies;
    	      this.roleName = defaults.roleName;
    	      this.tags = defaults.tags;
        }

        public Builder setAssumeRolePolicyDocument(Input<Object> assumeRolePolicyDocument) {
            this.assumeRolePolicyDocument = Objects.requireNonNull(assumeRolePolicyDocument);
            return this;
        }

        public Builder setAssumeRolePolicyDocument(Object assumeRolePolicyDocument) {
            this.assumeRolePolicyDocument = Input.of(Objects.requireNonNull(assumeRolePolicyDocument));
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setManagedPolicyArns(@Nullable Input<List<String>> managedPolicyArns) {
            this.managedPolicyArns = managedPolicyArns;
            return this;
        }

        public Builder setManagedPolicyArns(@Nullable List<String> managedPolicyArns) {
            this.managedPolicyArns = Input.ofNullable(managedPolicyArns);
            return this;
        }

        public Builder setMaxSessionDuration(@Nullable Input<Integer> maxSessionDuration) {
            this.maxSessionDuration = maxSessionDuration;
            return this;
        }

        public Builder setMaxSessionDuration(@Nullable Integer maxSessionDuration) {
            this.maxSessionDuration = Input.ofNullable(maxSessionDuration);
            return this;
        }

        public Builder setPath(@Nullable Input<String> path) {
            this.path = path;
            return this;
        }

        public Builder setPath(@Nullable String path) {
            this.path = Input.ofNullable(path);
            return this;
        }

        public Builder setPermissionsBoundary(@Nullable Input<String> permissionsBoundary) {
            this.permissionsBoundary = permissionsBoundary;
            return this;
        }

        public Builder setPermissionsBoundary(@Nullable String permissionsBoundary) {
            this.permissionsBoundary = Input.ofNullable(permissionsBoundary);
            return this;
        }

        public Builder setPolicies(@Nullable Input<List<RolePolicyArgs>> policies) {
            this.policies = policies;
            return this;
        }

        public Builder setPolicies(@Nullable List<RolePolicyArgs> policies) {
            this.policies = Input.ofNullable(policies);
            return this;
        }

        public Builder setRoleName(@Nullable Input<String> roleName) {
            this.roleName = roleName;
            return this;
        }

        public Builder setRoleName(@Nullable String roleName) {
            this.roleName = Input.ofNullable(roleName);
            return this;
        }

        public Builder setTags(@Nullable Input<List<RoleTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<RoleTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public RoleArgs build() {
            return new RoleArgs(assumeRolePolicyDocument, description, managedPolicyArns, maxSessionDuration, path, permissionsBoundary, policies, roleName, tags);
        }
    }
}
