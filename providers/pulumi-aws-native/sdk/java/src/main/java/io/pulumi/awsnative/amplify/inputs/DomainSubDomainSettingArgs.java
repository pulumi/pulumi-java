// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.amplify.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class DomainSubDomainSettingArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainSubDomainSettingArgs Empty = new DomainSubDomainSettingArgs();

    @InputImport(name="branchName", required=true)
    private final Input<String> branchName;

    public Input<String> getBranchName() {
        return this.branchName;
    }

    @InputImport(name="prefix", required=true)
    private final Input<String> prefix;

    public Input<String> getPrefix() {
        return this.prefix;
    }

    public DomainSubDomainSettingArgs(
        Input<String> branchName,
        Input<String> prefix) {
        this.branchName = Objects.requireNonNull(branchName, "expected parameter 'branchName' to be non-null");
        this.prefix = Objects.requireNonNull(prefix, "expected parameter 'prefix' to be non-null");
    }

    private DomainSubDomainSettingArgs() {
        this.branchName = Input.empty();
        this.prefix = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainSubDomainSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> branchName;
        private Input<String> prefix;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainSubDomainSettingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchName = defaults.branchName;
    	      this.prefix = defaults.prefix;
        }

        public Builder setBranchName(Input<String> branchName) {
            this.branchName = Objects.requireNonNull(branchName);
            return this;
        }

        public Builder setBranchName(String branchName) {
            this.branchName = Input.of(Objects.requireNonNull(branchName));
            return this;
        }

        public Builder setPrefix(Input<String> prefix) {
            this.prefix = Objects.requireNonNull(prefix);
            return this;
        }

        public Builder setPrefix(String prefix) {
            this.prefix = Input.of(Objects.requireNonNull(prefix));
            return this;
        }

        public DomainSubDomainSettingArgs build() {
            return new DomainSubDomainSettingArgs(branchName, prefix);
        }
    }
}
