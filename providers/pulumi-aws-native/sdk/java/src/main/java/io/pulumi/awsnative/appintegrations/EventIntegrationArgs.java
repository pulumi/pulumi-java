// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.appintegrations;

import io.pulumi.awsnative.appintegrations.inputs.EventIntegrationEventFilterArgs;
import io.pulumi.awsnative.appintegrations.inputs.EventIntegrationTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EventIntegrationArgs extends io.pulumi.resources.ResourceArgs {

    public static final EventIntegrationArgs Empty = new EventIntegrationArgs();

    /**
     * The event integration description.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The Amazon Eventbridge bus for the event integration.
     * 
     */
    @Import(name="eventBridgeBus", required=true)
      private final Output<String> eventBridgeBus;

    public Output<String> getEventBridgeBus() {
        return this.eventBridgeBus;
    }

    /**
     * The EventFilter (source) associated with the event integration.
     * 
     */
    @Import(name="eventFilter", required=true)
      private final Output<EventIntegrationEventFilterArgs> eventFilter;

    public Output<EventIntegrationEventFilterArgs> getEventFilter() {
        return this.eventFilter;
    }

    /**
     * The name of the event integration.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The tags (keys and values) associated with the event integration.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<EventIntegrationTagArgs>> tags;

    public Output<List<EventIntegrationTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public EventIntegrationArgs(
        @Nullable Output<String> description,
        Output<String> eventBridgeBus,
        Output<EventIntegrationEventFilterArgs> eventFilter,
        @Nullable Output<String> name,
        @Nullable Output<List<EventIntegrationTagArgs>> tags) {
        this.description = description;
        this.eventBridgeBus = Objects.requireNonNull(eventBridgeBus, "expected parameter 'eventBridgeBus' to be non-null");
        this.eventFilter = Objects.requireNonNull(eventFilter, "expected parameter 'eventFilter' to be non-null");
        this.name = name;
        this.tags = tags;
    }

    private EventIntegrationArgs() {
        this.description = Output.empty();
        this.eventBridgeBus = Output.empty();
        this.eventFilter = Output.empty();
        this.name = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private Output<String> eventBridgeBus;
        private Output<EventIntegrationEventFilterArgs> eventFilter;
        private @Nullable Output<String> name;
        private @Nullable Output<List<EventIntegrationTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(EventIntegrationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.eventBridgeBus = defaults.eventBridgeBus;
    	      this.eventFilter = defaults.eventFilter;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder eventBridgeBus(Output<String> eventBridgeBus) {
            this.eventBridgeBus = Objects.requireNonNull(eventBridgeBus);
            return this;
        }
        public Builder eventBridgeBus(String eventBridgeBus) {
            this.eventBridgeBus = Output.of(Objects.requireNonNull(eventBridgeBus));
            return this;
        }
        public Builder eventFilter(Output<EventIntegrationEventFilterArgs> eventFilter) {
            this.eventFilter = Objects.requireNonNull(eventFilter);
            return this;
        }
        public Builder eventFilter(EventIntegrationEventFilterArgs eventFilter) {
            this.eventFilter = Output.of(Objects.requireNonNull(eventFilter));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder tags(@Nullable Output<List<EventIntegrationTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<EventIntegrationTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tags(EventIntegrationTagArgs... tags) {
            return tags(List.of(tags));
        }        public EventIntegrationArgs build() {
            return new EventIntegrationArgs(description, eventBridgeBus, eventFilter, name, tags);
        }
    }
}
