// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.quicksight.inputs;

import io.pulumi.awsnative.quicksight.inputs.TemplateDataSetReferenceArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * <p>The source analysis of the template.</p>
 * 
 */
public final class TemplateSourceAnalysisArgs extends io.pulumi.resources.ResourceArgs {

    public static final TemplateSourceAnalysisArgs Empty = new TemplateSourceAnalysisArgs();

    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     * 
     */
    @InputImport(name="arn", required=true)
    private final Input<String> arn;

    public Input<String> getArn() {
        return this.arn;
    }

    /**
     * <p>A structure containing information about the dataset references used as placeholders
     *             in the template.</p>
     * 
     */
    @InputImport(name="dataSetReferences", required=true)
    private final Input<List<TemplateDataSetReferenceArgs>> dataSetReferences;

    public Input<List<TemplateDataSetReferenceArgs>> getDataSetReferences() {
        return this.dataSetReferences;
    }

    public TemplateSourceAnalysisArgs(
        Input<String> arn,
        Input<List<TemplateDataSetReferenceArgs>> dataSetReferences) {
        this.arn = Objects.requireNonNull(arn, "expected parameter 'arn' to be non-null");
        this.dataSetReferences = Objects.requireNonNull(dataSetReferences, "expected parameter 'dataSetReferences' to be non-null");
    }

    private TemplateSourceAnalysisArgs() {
        this.arn = Input.empty();
        this.dataSetReferences = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TemplateSourceAnalysisArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> arn;
        private Input<List<TemplateDataSetReferenceArgs>> dataSetReferences;

        public Builder() {
    	      // Empty
        }

        public Builder(TemplateSourceAnalysisArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.dataSetReferences = defaults.dataSetReferences;
        }

        public Builder setArn(Input<String> arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setArn(String arn) {
            this.arn = Input.of(Objects.requireNonNull(arn));
            return this;
        }

        public Builder setDataSetReferences(Input<List<TemplateDataSetReferenceArgs>> dataSetReferences) {
            this.dataSetReferences = Objects.requireNonNull(dataSetReferences);
            return this;
        }

        public Builder setDataSetReferences(List<TemplateDataSetReferenceArgs> dataSetReferences) {
            this.dataSetReferences = Input.of(Objects.requireNonNull(dataSetReferences));
            return this;
        }

        public TemplateSourceAnalysisArgs build() {
            return new TemplateSourceAnalysisArgs(arn, dataSetReferences);
        }
    }
}
