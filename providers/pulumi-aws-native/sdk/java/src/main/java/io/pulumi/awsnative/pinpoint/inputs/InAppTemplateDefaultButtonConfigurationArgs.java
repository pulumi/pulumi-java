// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.pinpoint.inputs;

import io.pulumi.awsnative.pinpoint.enums.InAppTemplateButtonAction;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InAppTemplateDefaultButtonConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final InAppTemplateDefaultButtonConfigurationArgs Empty = new InAppTemplateDefaultButtonConfigurationArgs();

    @Import(name="backgroundColor")
      private final @Nullable Output<String> backgroundColor;

    public Output<String> getBackgroundColor() {
        return this.backgroundColor == null ? Output.empty() : this.backgroundColor;
    }

    @Import(name="borderRadius")
      private final @Nullable Output<Integer> borderRadius;

    public Output<Integer> getBorderRadius() {
        return this.borderRadius == null ? Output.empty() : this.borderRadius;
    }

    @Import(name="buttonAction")
      private final @Nullable Output<InAppTemplateButtonAction> buttonAction;

    public Output<InAppTemplateButtonAction> getButtonAction() {
        return this.buttonAction == null ? Output.empty() : this.buttonAction;
    }

    @Import(name="link")
      private final @Nullable Output<String> link;

    public Output<String> getLink() {
        return this.link == null ? Output.empty() : this.link;
    }

    @Import(name="text")
      private final @Nullable Output<String> text;

    public Output<String> getText() {
        return this.text == null ? Output.empty() : this.text;
    }

    @Import(name="textColor")
      private final @Nullable Output<String> textColor;

    public Output<String> getTextColor() {
        return this.textColor == null ? Output.empty() : this.textColor;
    }

    public InAppTemplateDefaultButtonConfigurationArgs(
        @Nullable Output<String> backgroundColor,
        @Nullable Output<Integer> borderRadius,
        @Nullable Output<InAppTemplateButtonAction> buttonAction,
        @Nullable Output<String> link,
        @Nullable Output<String> text,
        @Nullable Output<String> textColor) {
        this.backgroundColor = backgroundColor;
        this.borderRadius = borderRadius;
        this.buttonAction = buttonAction;
        this.link = link;
        this.text = text;
        this.textColor = textColor;
    }

    private InAppTemplateDefaultButtonConfigurationArgs() {
        this.backgroundColor = Output.empty();
        this.borderRadius = Output.empty();
        this.buttonAction = Output.empty();
        this.link = Output.empty();
        this.text = Output.empty();
        this.textColor = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InAppTemplateDefaultButtonConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> backgroundColor;
        private @Nullable Output<Integer> borderRadius;
        private @Nullable Output<InAppTemplateButtonAction> buttonAction;
        private @Nullable Output<String> link;
        private @Nullable Output<String> text;
        private @Nullable Output<String> textColor;

        public Builder() {
    	      // Empty
        }

        public Builder(InAppTemplateDefaultButtonConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backgroundColor = defaults.backgroundColor;
    	      this.borderRadius = defaults.borderRadius;
    	      this.buttonAction = defaults.buttonAction;
    	      this.link = defaults.link;
    	      this.text = defaults.text;
    	      this.textColor = defaults.textColor;
        }

        public Builder backgroundColor(@Nullable Output<String> backgroundColor) {
            this.backgroundColor = backgroundColor;
            return this;
        }
        public Builder backgroundColor(@Nullable String backgroundColor) {
            this.backgroundColor = Output.ofNullable(backgroundColor);
            return this;
        }
        public Builder borderRadius(@Nullable Output<Integer> borderRadius) {
            this.borderRadius = borderRadius;
            return this;
        }
        public Builder borderRadius(@Nullable Integer borderRadius) {
            this.borderRadius = Output.ofNullable(borderRadius);
            return this;
        }
        public Builder buttonAction(@Nullable Output<InAppTemplateButtonAction> buttonAction) {
            this.buttonAction = buttonAction;
            return this;
        }
        public Builder buttonAction(@Nullable InAppTemplateButtonAction buttonAction) {
            this.buttonAction = Output.ofNullable(buttonAction);
            return this;
        }
        public Builder link(@Nullable Output<String> link) {
            this.link = link;
            return this;
        }
        public Builder link(@Nullable String link) {
            this.link = Output.ofNullable(link);
            return this;
        }
        public Builder text(@Nullable Output<String> text) {
            this.text = text;
            return this;
        }
        public Builder text(@Nullable String text) {
            this.text = Output.ofNullable(text);
            return this;
        }
        public Builder textColor(@Nullable Output<String> textColor) {
            this.textColor = textColor;
            return this;
        }
        public Builder textColor(@Nullable String textColor) {
            this.textColor = Output.ofNullable(textColor);
            return this;
        }        public InAppTemplateDefaultButtonConfigurationArgs build() {
            return new InAppTemplateDefaultButtonConfigurationArgs(backgroundColor, borderRadius, buttonAction, link, text, textColor);
        }
    }
}
