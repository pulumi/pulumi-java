// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotanalytics.inputs;

import io.pulumi.awsnative.iotanalytics.inputs.DatasetGlueConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatasetS3DestinationConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetS3DestinationConfigurationArgs Empty = new DatasetS3DestinationConfigurationArgs();

    @InputImport(name="bucket", required=true)
      private final Input<String> bucket;

    public Input<String> getBucket() {
        return this.bucket;
    }

    @InputImport(name="glueConfiguration")
      private final @Nullable Input<DatasetGlueConfigurationArgs> glueConfiguration;

    public Input<DatasetGlueConfigurationArgs> getGlueConfiguration() {
        return this.glueConfiguration == null ? Input.empty() : this.glueConfiguration;
    }

    @InputImport(name="key", required=true)
      private final Input<String> key;

    public Input<String> getKey() {
        return this.key;
    }

    @InputImport(name="roleArn", required=true)
      private final Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn;
    }

    public DatasetS3DestinationConfigurationArgs(
        Input<String> bucket,
        @Nullable Input<DatasetGlueConfigurationArgs> glueConfiguration,
        Input<String> key,
        Input<String> roleArn) {
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.glueConfiguration = glueConfiguration;
        this.key = Objects.requireNonNull(key, "expected parameter 'key' to be non-null");
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
    }

    private DatasetS3DestinationConfigurationArgs() {
        this.bucket = Input.empty();
        this.glueConfiguration = Input.empty();
        this.key = Input.empty();
        this.roleArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetS3DestinationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> bucket;
        private @Nullable Input<DatasetGlueConfigurationArgs> glueConfiguration;
        private Input<String> key;
        private Input<String> roleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetS3DestinationConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.glueConfiguration = defaults.glueConfiguration;
    	      this.key = defaults.key;
    	      this.roleArn = defaults.roleArn;
        }

        public Builder bucket(Input<String> bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }

        public Builder bucket(String bucket) {
            this.bucket = Input.of(Objects.requireNonNull(bucket));
            return this;
        }

        public Builder glueConfiguration(@Nullable Input<DatasetGlueConfigurationArgs> glueConfiguration) {
            this.glueConfiguration = glueConfiguration;
            return this;
        }

        public Builder glueConfiguration(@Nullable DatasetGlueConfigurationArgs glueConfiguration) {
            this.glueConfiguration = Input.ofNullable(glueConfiguration);
            return this;
        }

        public Builder key(Input<String> key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }

        public Builder key(String key) {
            this.key = Input.of(Objects.requireNonNull(key));
            return this;
        }

        public Builder roleArn(Input<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder roleArn(String roleArn) {
            this.roleArn = Input.of(Objects.requireNonNull(roleArn));
            return this;
        }
        public DatasetS3DestinationConfigurationArgs build() {
            return new DatasetS3DestinationConfigurationArgs(bucket, glueConfiguration, key, roleArn);
        }
    }
}
