// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.qldb;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.qldb.StreamArgs;
import io.pulumi.awsnative.qldb.outputs.StreamKinesisConfiguration;
import io.pulumi.awsnative.qldb.outputs.StreamTag;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::QLDB::Stream.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myQLDBStream = new AwsNative.QLDB.Stream("myQLDBStream", new AwsNative.QLDB.StreamArgs
 *         {
 *             ExclusiveEndTime = "2020-05-29T22:59:59Z",
 *             InclusiveStartTime = "2020-05-29T00:00:00Z",
 *             KinesisConfiguration = new AwsNative.QLDB.Inputs.StreamKinesisConfigurationArgs
 *             {
 *                 AggregationEnabled = true,
 *                 StreamArn = "arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb",
 *             },
 *             LedgerName = "exampleLedger",
 *             RoleArn = "arn:aws:iam::123456789012:role/my-kinesis-stream-role",
 *             StreamName = "exampleLedger-stream",
 *             Tags = 
 *             {
 *                 new AwsNative.QLDB.Inputs.StreamTagArgs
 *                 {
 *                     Key = "Domain",
 *                     Value = "Test",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/qldb"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := qldb.NewStream(ctx, "myQLDBStream", &qldb.StreamArgs{
 * 			ExclusiveEndTime:   pulumi.String("2020-05-29T22:59:59Z"),
 * 			InclusiveStartTime: pulumi.String("2020-05-29T00:00:00Z"),
 * 			KinesisConfiguration: &qldb.StreamKinesisConfigurationArgs{
 * 				AggregationEnabled: pulumi.Bool(true),
 * 				StreamArn:          pulumi.String("arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb"),
 * 			},
 * 			LedgerName: pulumi.String("exampleLedger"),
 * 			RoleArn:    pulumi.String("arn:aws:iam::123456789012:role/my-kinesis-stream-role"),
 * 			StreamName: pulumi.String("exampleLedger-stream"),
 * 			Tags: []qldb.StreamTagArgs{
 * 				&qldb.StreamTagArgs{
 * 					Key:   pulumi.String("Domain"),
 * 					Value: pulumi.String("Test"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myQLDBStream = new aws_native.qldb.Stream("myQLDBStream", {
 *     exclusiveEndTime: "2020-05-29T22:59:59Z",
 *     inclusiveStartTime: "2020-05-29T00:00:00Z",
 *     kinesisConfiguration: {
 *         aggregationEnabled: true,
 *         streamArn: "arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb",
 *     },
 *     ledgerName: "exampleLedger",
 *     roleArn: "arn:aws:iam::123456789012:role/my-kinesis-stream-role",
 *     streamName: "exampleLedger-stream",
 *     tags: [{
 *         key: "Domain",
 *         value: "Test",
 *     }],
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_qldb_stream = aws_native.qldb.Stream("myQLDBStream",
 *     exclusive_end_time="2020-05-29T22:59:59Z",
 *     inclusive_start_time="2020-05-29T00:00:00Z",
 *     kinesis_configuration=aws_native.qldb.StreamKinesisConfigurationArgs(
 *         aggregation_enabled=True,
 *         stream_arn="arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb",
 *     ),
 *     ledger_name="exampleLedger",
 *     role_arn="arn:aws:iam::123456789012:role/my-kinesis-stream-role",
 *     stream_name="exampleLedger-stream",
 *     tags=[aws_native.qldb.StreamTagArgs(
 *         key="Domain",
 *         value="Test",
 *     )])
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myQLDBStream = new AwsNative.QLDB.Stream("myQLDBStream", new AwsNative.QLDB.StreamArgs
 *         {
 *             ExclusiveEndTime = "2020-05-29T22:59:59Z",
 *             InclusiveStartTime = "2020-05-29T00:00:00Z",
 *             KinesisConfiguration = new AwsNative.QLDB.Inputs.StreamKinesisConfigurationArgs
 *             {
 *                 AggregationEnabled = true,
 *                 StreamArn = "arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb",
 *             },
 *             LedgerName = "exampleLedger",
 *             RoleArn = "arn:aws:iam::123456789012:role/my-kinesis-stream-role",
 *             StreamName = "exampleLedger-stream",
 *             Tags = 
 *             {
 *                 new AwsNative.QLDB.Inputs.StreamTagArgs
 *                 {
 *                     Key = "Domain",
 *                     Value = "Test",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/qldb"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := qldb.NewStream(ctx, "myQLDBStream", &qldb.StreamArgs{
 * 			ExclusiveEndTime:   pulumi.String("2020-05-29T22:59:59Z"),
 * 			InclusiveStartTime: pulumi.String("2020-05-29T00:00:00Z"),
 * 			KinesisConfiguration: &qldb.StreamKinesisConfigurationArgs{
 * 				AggregationEnabled: pulumi.Bool(true),
 * 				StreamArn:          pulumi.String("arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb"),
 * 			},
 * 			LedgerName: pulumi.String("exampleLedger"),
 * 			RoleArn:    pulumi.String("arn:aws:iam::123456789012:role/my-kinesis-stream-role"),
 * 			StreamName: pulumi.String("exampleLedger-stream"),
 * 			Tags: []qldb.StreamTagArgs{
 * 				&qldb.StreamTagArgs{
 * 					Key:   pulumi.String("Domain"),
 * 					Value: pulumi.String("Test"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const myQLDBStream = new aws_native.qldb.Stream("myQLDBStream", {
 *     exclusiveEndTime: "2020-05-29T22:59:59Z",
 *     inclusiveStartTime: "2020-05-29T00:00:00Z",
 *     kinesisConfiguration: {
 *         aggregationEnabled: true,
 *         streamArn: "arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb",
 *     },
 *     ledgerName: "exampleLedger",
 *     roleArn: "arn:aws:iam::123456789012:role/my-kinesis-stream-role",
 *     streamName: "exampleLedger-stream",
 *     tags: [{
 *         key: "Domain",
 *         value: "Test",
 *     }],
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * my_qldb_stream = aws_native.qldb.Stream("myQLDBStream",
 *     exclusive_end_time="2020-05-29T22:59:59Z",
 *     inclusive_start_time="2020-05-29T00:00:00Z",
 *     kinesis_configuration=aws_native.qldb.StreamKinesisConfigurationArgs(
 *         aggregation_enabled=True,
 *         stream_arn="arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb",
 *     ),
 *     ledger_name="exampleLedger",
 *     role_arn="arn:aws:iam::123456789012:role/my-kinesis-stream-role",
 *     stream_name="exampleLedger-stream",
 *     tags=[aws_native.qldb.StreamTagArgs(
 *         key="Domain",
 *         value="Test",
 *     )])
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 */
@ResourceType(type="aws-native:qldb:Stream")
public class Stream extends io.pulumi.resources.CustomResource {
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    @Export(name="exclusiveEndTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> exclusiveEndTime;

    public Output</* @Nullable */ String> getExclusiveEndTime() {
        return this.exclusiveEndTime;
    }
    @Export(name="inclusiveStartTime", type=String.class, parameters={})
    private Output<String> inclusiveStartTime;

    public Output<String> getInclusiveStartTime() {
        return this.inclusiveStartTime;
    }
    @Export(name="kinesisConfiguration", type=StreamKinesisConfiguration.class, parameters={})
    private Output<StreamKinesisConfiguration> kinesisConfiguration;

    public Output<StreamKinesisConfiguration> getKinesisConfiguration() {
        return this.kinesisConfiguration;
    }
    @Export(name="ledgerName", type=String.class, parameters={})
    private Output<String> ledgerName;

    public Output<String> getLedgerName() {
        return this.ledgerName;
    }
    @Export(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn;
    }
    @Export(name="streamName", type=String.class, parameters={})
    private Output<String> streamName;

    public Output<String> getStreamName() {
        return this.streamName;
    }
    /**
     * An array of key-value pairs to apply to this resource.
     */
    @Export(name="tags", type=List.class, parameters={StreamTag.class})
    private Output</* @Nullable */ List<StreamTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     */
    public Output</* @Nullable */ List<StreamTag>> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Stream(String name) {
        this(name, StreamArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Stream(String name, StreamArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Stream(String name, StreamArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:qldb:Stream", name, args == null ? StreamArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Stream(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:qldb:Stream", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Stream get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Stream(name, id, options);
    }
}
