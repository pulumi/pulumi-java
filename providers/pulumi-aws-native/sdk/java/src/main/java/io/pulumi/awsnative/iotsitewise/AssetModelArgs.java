// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotsitewise;

import io.pulumi.awsnative.iotsitewise.inputs.AssetModelCompositeModelArgs;
import io.pulumi.awsnative.iotsitewise.inputs.AssetModelHierarchyArgs;
import io.pulumi.awsnative.iotsitewise.inputs.AssetModelPropertyArgs;
import io.pulumi.awsnative.iotsitewise.inputs.AssetModelTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AssetModelArgs extends io.pulumi.resources.ResourceArgs {

    public static final AssetModelArgs Empty = new AssetModelArgs();

    /**
     * The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties.
     * 
     */
    @InputImport(name="assetModelCompositeModels")
      private final @Nullable Input<List<AssetModelCompositeModelArgs>> assetModelCompositeModels;

    public Input<List<AssetModelCompositeModelArgs>> getAssetModelCompositeModels() {
        return this.assetModelCompositeModels == null ? Input.empty() : this.assetModelCompositeModels;
    }

    /**
     * A description for the asset model.
     * 
     */
    @InputImport(name="assetModelDescription")
      private final @Nullable Input<String> assetModelDescription;

    public Input<String> getAssetModelDescription() {
        return this.assetModelDescription == null ? Input.empty() : this.assetModelDescription;
    }

    /**
     * The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. You can specify up to 10 hierarchies per asset model.
     * 
     */
    @InputImport(name="assetModelHierarchies")
      private final @Nullable Input<List<AssetModelHierarchyArgs>> assetModelHierarchies;

    public Input<List<AssetModelHierarchyArgs>> getAssetModelHierarchies() {
        return this.assetModelHierarchies == null ? Input.empty() : this.assetModelHierarchies;
    }

    /**
     * A unique, friendly name for the asset model.
     * 
     */
    @InputImport(name="assetModelName")
      private final @Nullable Input<String> assetModelName;

    public Input<String> getAssetModelName() {
        return this.assetModelName == null ? Input.empty() : this.assetModelName;
    }

    /**
     * The property definitions of the asset model. You can specify up to 200 properties per asset model.
     * 
     */
    @InputImport(name="assetModelProperties")
      private final @Nullable Input<List<AssetModelPropertyArgs>> assetModelProperties;

    public Input<List<AssetModelPropertyArgs>> getAssetModelProperties() {
        return this.assetModelProperties == null ? Input.empty() : this.assetModelProperties;
    }

    /**
     * A list of key-value pairs that contain metadata for the asset model.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<List<AssetModelTagArgs>> tags;

    public Input<List<AssetModelTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public AssetModelArgs(
        @Nullable Input<List<AssetModelCompositeModelArgs>> assetModelCompositeModels,
        @Nullable Input<String> assetModelDescription,
        @Nullable Input<List<AssetModelHierarchyArgs>> assetModelHierarchies,
        @Nullable Input<String> assetModelName,
        @Nullable Input<List<AssetModelPropertyArgs>> assetModelProperties,
        @Nullable Input<List<AssetModelTagArgs>> tags) {
        this.assetModelCompositeModels = assetModelCompositeModels;
        this.assetModelDescription = assetModelDescription;
        this.assetModelHierarchies = assetModelHierarchies;
        this.assetModelName = assetModelName;
        this.assetModelProperties = assetModelProperties;
        this.tags = tags;
    }

    private AssetModelArgs() {
        this.assetModelCompositeModels = Input.empty();
        this.assetModelDescription = Input.empty();
        this.assetModelHierarchies = Input.empty();
        this.assetModelName = Input.empty();
        this.assetModelProperties = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetModelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<AssetModelCompositeModelArgs>> assetModelCompositeModels;
        private @Nullable Input<String> assetModelDescription;
        private @Nullable Input<List<AssetModelHierarchyArgs>> assetModelHierarchies;
        private @Nullable Input<String> assetModelName;
        private @Nullable Input<List<AssetModelPropertyArgs>> assetModelProperties;
        private @Nullable Input<List<AssetModelTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetModelArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetModelCompositeModels = defaults.assetModelCompositeModels;
    	      this.assetModelDescription = defaults.assetModelDescription;
    	      this.assetModelHierarchies = defaults.assetModelHierarchies;
    	      this.assetModelName = defaults.assetModelName;
    	      this.assetModelProperties = defaults.assetModelProperties;
    	      this.tags = defaults.tags;
        }

        public Builder setAssetModelCompositeModels(@Nullable Input<List<AssetModelCompositeModelArgs>> assetModelCompositeModels) {
            this.assetModelCompositeModels = assetModelCompositeModels;
            return this;
        }

        public Builder setAssetModelCompositeModels(@Nullable List<AssetModelCompositeModelArgs> assetModelCompositeModels) {
            this.assetModelCompositeModels = Input.ofNullable(assetModelCompositeModels);
            return this;
        }

        public Builder setAssetModelDescription(@Nullable Input<String> assetModelDescription) {
            this.assetModelDescription = assetModelDescription;
            return this;
        }

        public Builder setAssetModelDescription(@Nullable String assetModelDescription) {
            this.assetModelDescription = Input.ofNullable(assetModelDescription);
            return this;
        }

        public Builder setAssetModelHierarchies(@Nullable Input<List<AssetModelHierarchyArgs>> assetModelHierarchies) {
            this.assetModelHierarchies = assetModelHierarchies;
            return this;
        }

        public Builder setAssetModelHierarchies(@Nullable List<AssetModelHierarchyArgs> assetModelHierarchies) {
            this.assetModelHierarchies = Input.ofNullable(assetModelHierarchies);
            return this;
        }

        public Builder setAssetModelName(@Nullable Input<String> assetModelName) {
            this.assetModelName = assetModelName;
            return this;
        }

        public Builder setAssetModelName(@Nullable String assetModelName) {
            this.assetModelName = Input.ofNullable(assetModelName);
            return this;
        }

        public Builder setAssetModelProperties(@Nullable Input<List<AssetModelPropertyArgs>> assetModelProperties) {
            this.assetModelProperties = assetModelProperties;
            return this;
        }

        public Builder setAssetModelProperties(@Nullable List<AssetModelPropertyArgs> assetModelProperties) {
            this.assetModelProperties = Input.ofNullable(assetModelProperties);
            return this;
        }

        public Builder setTags(@Nullable Input<List<AssetModelTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<AssetModelTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public AssetModelArgs build() {
            return new AssetModelArgs(assetModelCompositeModels, assetModelDescription, assetModelHierarchies, assetModelName, assetModelProperties, tags);
        }
    }
}
