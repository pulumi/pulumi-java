// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.events;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ArchiveArgs extends io.pulumi.resources.ResourceArgs {

    public static final ArchiveArgs Empty = new ArchiveArgs();

    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    @Import(name="eventPattern")
      private final @Nullable Output<Object> eventPattern;

    public Output<Object> eventPattern() {
        return this.eventPattern == null ? Codegen.empty() : this.eventPattern;
    }

    @Import(name="retentionDays")
      private final @Nullable Output<Integer> retentionDays;

    public Output<Integer> retentionDays() {
        return this.retentionDays == null ? Codegen.empty() : this.retentionDays;
    }

    @Import(name="sourceArn", required=true)
      private final Output<String> sourceArn;

    public Output<String> sourceArn() {
        return this.sourceArn;
    }

    public ArchiveArgs(
        @Nullable Output<String> description,
        @Nullable Output<Object> eventPattern,
        @Nullable Output<Integer> retentionDays,
        Output<String> sourceArn) {
        this.description = description;
        this.eventPattern = eventPattern;
        this.retentionDays = retentionDays;
        this.sourceArn = Objects.requireNonNull(sourceArn, "expected parameter 'sourceArn' to be non-null");
    }

    private ArchiveArgs() {
        this.description = Codegen.empty();
        this.eventPattern = Codegen.empty();
        this.retentionDays = Codegen.empty();
        this.sourceArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ArchiveArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<Object> eventPattern;
        private @Nullable Output<Integer> retentionDays;
        private Output<String> sourceArn;

        public Builder() {
    	      // Empty
        }

        public Builder(ArchiveArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.eventPattern = defaults.eventPattern;
    	      this.retentionDays = defaults.retentionDays;
    	      this.sourceArn = defaults.sourceArn;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder eventPattern(@Nullable Output<Object> eventPattern) {
            this.eventPattern = eventPattern;
            return this;
        }
        public Builder eventPattern(@Nullable Object eventPattern) {
            this.eventPattern = Codegen.ofNullable(eventPattern);
            return this;
        }
        public Builder retentionDays(@Nullable Output<Integer> retentionDays) {
            this.retentionDays = retentionDays;
            return this;
        }
        public Builder retentionDays(@Nullable Integer retentionDays) {
            this.retentionDays = Codegen.ofNullable(retentionDays);
            return this;
        }
        public Builder sourceArn(Output<String> sourceArn) {
            this.sourceArn = Objects.requireNonNull(sourceArn);
            return this;
        }
        public Builder sourceArn(String sourceArn) {
            this.sourceArn = Output.of(Objects.requireNonNull(sourceArn));
            return this;
        }        public ArchiveArgs build() {
            return new ArchiveArgs(description, eventPattern, retentionDays, sourceArn);
        }
    }
}
