// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ecs.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskDefinitionHealthCheckArgs extends io.pulumi.resources.ResourceArgs {

    public static final TaskDefinitionHealthCheckArgs Empty = new TaskDefinitionHealthCheckArgs();

    @InputImport(name="command")
    private final @Nullable Input<List<String>> command;

    public Input<List<String>> getCommand() {
        return this.command == null ? Input.empty() : this.command;
    }

    @InputImport(name="interval")
    private final @Nullable Input<Integer> interval;

    public Input<Integer> getInterval() {
        return this.interval == null ? Input.empty() : this.interval;
    }

    @InputImport(name="retries")
    private final @Nullable Input<Integer> retries;

    public Input<Integer> getRetries() {
        return this.retries == null ? Input.empty() : this.retries;
    }

    @InputImport(name="startPeriod")
    private final @Nullable Input<Integer> startPeriod;

    public Input<Integer> getStartPeriod() {
        return this.startPeriod == null ? Input.empty() : this.startPeriod;
    }

    @InputImport(name="timeout")
    private final @Nullable Input<Integer> timeout;

    public Input<Integer> getTimeout() {
        return this.timeout == null ? Input.empty() : this.timeout;
    }

    public TaskDefinitionHealthCheckArgs(
        @Nullable Input<List<String>> command,
        @Nullable Input<Integer> interval,
        @Nullable Input<Integer> retries,
        @Nullable Input<Integer> startPeriod,
        @Nullable Input<Integer> timeout) {
        this.command = command;
        this.interval = interval;
        this.retries = retries;
        this.startPeriod = startPeriod;
        this.timeout = timeout;
    }

    private TaskDefinitionHealthCheckArgs() {
        this.command = Input.empty();
        this.interval = Input.empty();
        this.retries = Input.empty();
        this.startPeriod = Input.empty();
        this.timeout = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskDefinitionHealthCheckArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> command;
        private @Nullable Input<Integer> interval;
        private @Nullable Input<Integer> retries;
        private @Nullable Input<Integer> startPeriod;
        private @Nullable Input<Integer> timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskDefinitionHealthCheckArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.command = defaults.command;
    	      this.interval = defaults.interval;
    	      this.retries = defaults.retries;
    	      this.startPeriod = defaults.startPeriod;
    	      this.timeout = defaults.timeout;
        }

        public Builder setCommand(@Nullable Input<List<String>> command) {
            this.command = command;
            return this;
        }

        public Builder setCommand(@Nullable List<String> command) {
            this.command = Input.ofNullable(command);
            return this;
        }

        public Builder setInterval(@Nullable Input<Integer> interval) {
            this.interval = interval;
            return this;
        }

        public Builder setInterval(@Nullable Integer interval) {
            this.interval = Input.ofNullable(interval);
            return this;
        }

        public Builder setRetries(@Nullable Input<Integer> retries) {
            this.retries = retries;
            return this;
        }

        public Builder setRetries(@Nullable Integer retries) {
            this.retries = Input.ofNullable(retries);
            return this;
        }

        public Builder setStartPeriod(@Nullable Input<Integer> startPeriod) {
            this.startPeriod = startPeriod;
            return this;
        }

        public Builder setStartPeriod(@Nullable Integer startPeriod) {
            this.startPeriod = Input.ofNullable(startPeriod);
            return this;
        }

        public Builder setTimeout(@Nullable Input<Integer> timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setTimeout(@Nullable Integer timeout) {
            this.timeout = Input.ofNullable(timeout);
            return this;
        }

        public TaskDefinitionHealthCheckArgs build() {
            return new TaskDefinitionHealthCheckArgs(command, interval, retries, startPeriod, timeout);
        }
    }
}
