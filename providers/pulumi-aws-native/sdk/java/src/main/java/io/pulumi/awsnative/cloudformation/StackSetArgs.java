// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudformation;

import io.pulumi.awsnative.cloudformation.enums.StackSetCallAs;
import io.pulumi.awsnative.cloudformation.enums.StackSetCapability;
import io.pulumi.awsnative.cloudformation.enums.StackSetPermissionModel;
import io.pulumi.awsnative.cloudformation.inputs.ManagedExecutionPropertiesArgs;
import io.pulumi.awsnative.cloudformation.inputs.StackSetAutoDeploymentArgs;
import io.pulumi.awsnative.cloudformation.inputs.StackSetOperationPreferencesArgs;
import io.pulumi.awsnative.cloudformation.inputs.StackSetParameterArgs;
import io.pulumi.awsnative.cloudformation.inputs.StackSetStackInstancesArgs;
import io.pulumi.awsnative.cloudformation.inputs.StackSetTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StackSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final StackSetArgs Empty = new StackSetArgs();

    @InputImport(name="administrationRoleARN")
    private final @Nullable Input<String> administrationRoleARN;

    public Input<String> getAdministrationRoleARN() {
        return this.administrationRoleARN == null ? Input.empty() : this.administrationRoleARN;
    }

    @InputImport(name="autoDeployment")
    private final @Nullable Input<StackSetAutoDeploymentArgs> autoDeployment;

    public Input<StackSetAutoDeploymentArgs> getAutoDeployment() {
        return this.autoDeployment == null ? Input.empty() : this.autoDeployment;
    }

    @InputImport(name="callAs")
    private final @Nullable Input<StackSetCallAs> callAs;

    public Input<StackSetCallAs> getCallAs() {
        return this.callAs == null ? Input.empty() : this.callAs;
    }

    @InputImport(name="capabilities")
    private final @Nullable Input<List<StackSetCapability>> capabilities;

    public Input<List<StackSetCapability>> getCapabilities() {
        return this.capabilities == null ? Input.empty() : this.capabilities;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="executionRoleName")
    private final @Nullable Input<String> executionRoleName;

    public Input<String> getExecutionRoleName() {
        return this.executionRoleName == null ? Input.empty() : this.executionRoleName;
    }

    @InputImport(name="managedExecution")
    private final @Nullable Input<ManagedExecutionPropertiesArgs> managedExecution;

    public Input<ManagedExecutionPropertiesArgs> getManagedExecution() {
        return this.managedExecution == null ? Input.empty() : this.managedExecution;
    }

    @InputImport(name="operationPreferences")
    private final @Nullable Input<StackSetOperationPreferencesArgs> operationPreferences;

    public Input<StackSetOperationPreferencesArgs> getOperationPreferences() {
        return this.operationPreferences == null ? Input.empty() : this.operationPreferences;
    }

    @InputImport(name="parameters")
    private final @Nullable Input<List<StackSetParameterArgs>> parameters;

    public Input<List<StackSetParameterArgs>> getParameters() {
        return this.parameters == null ? Input.empty() : this.parameters;
    }

    @InputImport(name="permissionModel", required=true)
    private final Input<StackSetPermissionModel> permissionModel;

    public Input<StackSetPermissionModel> getPermissionModel() {
        return this.permissionModel;
    }

    @InputImport(name="stackInstancesGroup")
    private final @Nullable Input<List<StackSetStackInstancesArgs>> stackInstancesGroup;

    public Input<List<StackSetStackInstancesArgs>> getStackInstancesGroup() {
        return this.stackInstancesGroup == null ? Input.empty() : this.stackInstancesGroup;
    }

    @InputImport(name="stackSetName")
    private final @Nullable Input<String> stackSetName;

    public Input<String> getStackSetName() {
        return this.stackSetName == null ? Input.empty() : this.stackSetName;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<StackSetTagArgs>> tags;

    public Input<List<StackSetTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="templateBody")
    private final @Nullable Input<String> templateBody;

    public Input<String> getTemplateBody() {
        return this.templateBody == null ? Input.empty() : this.templateBody;
    }

    @InputImport(name="templateURL")
    private final @Nullable Input<String> templateURL;

    public Input<String> getTemplateURL() {
        return this.templateURL == null ? Input.empty() : this.templateURL;
    }

    public StackSetArgs(
        @Nullable Input<String> administrationRoleARN,
        @Nullable Input<StackSetAutoDeploymentArgs> autoDeployment,
        @Nullable Input<StackSetCallAs> callAs,
        @Nullable Input<List<StackSetCapability>> capabilities,
        @Nullable Input<String> description,
        @Nullable Input<String> executionRoleName,
        @Nullable Input<ManagedExecutionPropertiesArgs> managedExecution,
        @Nullable Input<StackSetOperationPreferencesArgs> operationPreferences,
        @Nullable Input<List<StackSetParameterArgs>> parameters,
        Input<StackSetPermissionModel> permissionModel,
        @Nullable Input<List<StackSetStackInstancesArgs>> stackInstancesGroup,
        @Nullable Input<String> stackSetName,
        @Nullable Input<List<StackSetTagArgs>> tags,
        @Nullable Input<String> templateBody,
        @Nullable Input<String> templateURL) {
        this.administrationRoleARN = administrationRoleARN;
        this.autoDeployment = autoDeployment;
        this.callAs = callAs;
        this.capabilities = capabilities;
        this.description = description;
        this.executionRoleName = executionRoleName;
        this.managedExecution = managedExecution;
        this.operationPreferences = operationPreferences;
        this.parameters = parameters;
        this.permissionModel = Objects.requireNonNull(permissionModel, "expected parameter 'permissionModel' to be non-null");
        this.stackInstancesGroup = stackInstancesGroup;
        this.stackSetName = stackSetName;
        this.tags = tags;
        this.templateBody = templateBody;
        this.templateURL = templateURL;
    }

    private StackSetArgs() {
        this.administrationRoleARN = Input.empty();
        this.autoDeployment = Input.empty();
        this.callAs = Input.empty();
        this.capabilities = Input.empty();
        this.description = Input.empty();
        this.executionRoleName = Input.empty();
        this.managedExecution = Input.empty();
        this.operationPreferences = Input.empty();
        this.parameters = Input.empty();
        this.permissionModel = Input.empty();
        this.stackInstancesGroup = Input.empty();
        this.stackSetName = Input.empty();
        this.tags = Input.empty();
        this.templateBody = Input.empty();
        this.templateURL = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StackSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> administrationRoleARN;
        private @Nullable Input<StackSetAutoDeploymentArgs> autoDeployment;
        private @Nullable Input<StackSetCallAs> callAs;
        private @Nullable Input<List<StackSetCapability>> capabilities;
        private @Nullable Input<String> description;
        private @Nullable Input<String> executionRoleName;
        private @Nullable Input<ManagedExecutionPropertiesArgs> managedExecution;
        private @Nullable Input<StackSetOperationPreferencesArgs> operationPreferences;
        private @Nullable Input<List<StackSetParameterArgs>> parameters;
        private Input<StackSetPermissionModel> permissionModel;
        private @Nullable Input<List<StackSetStackInstancesArgs>> stackInstancesGroup;
        private @Nullable Input<String> stackSetName;
        private @Nullable Input<List<StackSetTagArgs>> tags;
        private @Nullable Input<String> templateBody;
        private @Nullable Input<String> templateURL;

        public Builder() {
    	      // Empty
        }

        public Builder(StackSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administrationRoleARN = defaults.administrationRoleARN;
    	      this.autoDeployment = defaults.autoDeployment;
    	      this.callAs = defaults.callAs;
    	      this.capabilities = defaults.capabilities;
    	      this.description = defaults.description;
    	      this.executionRoleName = defaults.executionRoleName;
    	      this.managedExecution = defaults.managedExecution;
    	      this.operationPreferences = defaults.operationPreferences;
    	      this.parameters = defaults.parameters;
    	      this.permissionModel = defaults.permissionModel;
    	      this.stackInstancesGroup = defaults.stackInstancesGroup;
    	      this.stackSetName = defaults.stackSetName;
    	      this.tags = defaults.tags;
    	      this.templateBody = defaults.templateBody;
    	      this.templateURL = defaults.templateURL;
        }

        public Builder setAdministrationRoleARN(@Nullable Input<String> administrationRoleARN) {
            this.administrationRoleARN = administrationRoleARN;
            return this;
        }

        public Builder setAdministrationRoleARN(@Nullable String administrationRoleARN) {
            this.administrationRoleARN = Input.ofNullable(administrationRoleARN);
            return this;
        }

        public Builder setAutoDeployment(@Nullable Input<StackSetAutoDeploymentArgs> autoDeployment) {
            this.autoDeployment = autoDeployment;
            return this;
        }

        public Builder setAutoDeployment(@Nullable StackSetAutoDeploymentArgs autoDeployment) {
            this.autoDeployment = Input.ofNullable(autoDeployment);
            return this;
        }

        public Builder setCallAs(@Nullable Input<StackSetCallAs> callAs) {
            this.callAs = callAs;
            return this;
        }

        public Builder setCallAs(@Nullable StackSetCallAs callAs) {
            this.callAs = Input.ofNullable(callAs);
            return this;
        }

        public Builder setCapabilities(@Nullable Input<List<StackSetCapability>> capabilities) {
            this.capabilities = capabilities;
            return this;
        }

        public Builder setCapabilities(@Nullable List<StackSetCapability> capabilities) {
            this.capabilities = Input.ofNullable(capabilities);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setExecutionRoleName(@Nullable Input<String> executionRoleName) {
            this.executionRoleName = executionRoleName;
            return this;
        }

        public Builder setExecutionRoleName(@Nullable String executionRoleName) {
            this.executionRoleName = Input.ofNullable(executionRoleName);
            return this;
        }

        public Builder setManagedExecution(@Nullable Input<ManagedExecutionPropertiesArgs> managedExecution) {
            this.managedExecution = managedExecution;
            return this;
        }

        public Builder setManagedExecution(@Nullable ManagedExecutionPropertiesArgs managedExecution) {
            this.managedExecution = Input.ofNullable(managedExecution);
            return this;
        }

        public Builder setOperationPreferences(@Nullable Input<StackSetOperationPreferencesArgs> operationPreferences) {
            this.operationPreferences = operationPreferences;
            return this;
        }

        public Builder setOperationPreferences(@Nullable StackSetOperationPreferencesArgs operationPreferences) {
            this.operationPreferences = Input.ofNullable(operationPreferences);
            return this;
        }

        public Builder setParameters(@Nullable Input<List<StackSetParameterArgs>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setParameters(@Nullable List<StackSetParameterArgs> parameters) {
            this.parameters = Input.ofNullable(parameters);
            return this;
        }

        public Builder setPermissionModel(Input<StackSetPermissionModel> permissionModel) {
            this.permissionModel = Objects.requireNonNull(permissionModel);
            return this;
        }

        public Builder setPermissionModel(StackSetPermissionModel permissionModel) {
            this.permissionModel = Input.of(Objects.requireNonNull(permissionModel));
            return this;
        }

        public Builder setStackInstancesGroup(@Nullable Input<List<StackSetStackInstancesArgs>> stackInstancesGroup) {
            this.stackInstancesGroup = stackInstancesGroup;
            return this;
        }

        public Builder setStackInstancesGroup(@Nullable List<StackSetStackInstancesArgs> stackInstancesGroup) {
            this.stackInstancesGroup = Input.ofNullable(stackInstancesGroup);
            return this;
        }

        public Builder setStackSetName(@Nullable Input<String> stackSetName) {
            this.stackSetName = stackSetName;
            return this;
        }

        public Builder setStackSetName(@Nullable String stackSetName) {
            this.stackSetName = Input.ofNullable(stackSetName);
            return this;
        }

        public Builder setTags(@Nullable Input<List<StackSetTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<StackSetTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTemplateBody(@Nullable Input<String> templateBody) {
            this.templateBody = templateBody;
            return this;
        }

        public Builder setTemplateBody(@Nullable String templateBody) {
            this.templateBody = Input.ofNullable(templateBody);
            return this;
        }

        public Builder setTemplateURL(@Nullable Input<String> templateURL) {
            this.templateURL = templateURL;
            return this;
        }

        public Builder setTemplateURL(@Nullable String templateURL) {
            this.templateURL = Input.ofNullable(templateURL);
            return this;
        }

        public StackSetArgs build() {
            return new StackSetArgs(administrationRoleARN, autoDeployment, callAs, capabilities, description, executionRoleName, managedExecution, operationPreferences, parameters, permissionModel, stackInstancesGroup, stackSetName, tags, templateBody, templateURL);
        }
    }
}
