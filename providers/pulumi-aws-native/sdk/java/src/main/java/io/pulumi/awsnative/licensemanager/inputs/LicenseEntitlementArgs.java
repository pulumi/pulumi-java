// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.licensemanager.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LicenseEntitlementArgs extends io.pulumi.resources.ResourceArgs {

    public static final LicenseEntitlementArgs Empty = new LicenseEntitlementArgs();

    @Import(name="allowCheckIn")
      private final @Nullable Output<Boolean> allowCheckIn;

    public Output<Boolean> getAllowCheckIn() {
        return this.allowCheckIn == null ? Output.empty() : this.allowCheckIn;
    }

    @Import(name="maxCount")
      private final @Nullable Output<Integer> maxCount;

    public Output<Integer> getMaxCount() {
        return this.maxCount == null ? Output.empty() : this.maxCount;
    }

    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    @Import(name="overage")
      private final @Nullable Output<Boolean> overage;

    public Output<Boolean> getOverage() {
        return this.overage == null ? Output.empty() : this.overage;
    }

    @Import(name="unit", required=true)
      private final Output<String> unit;

    public Output<String> getUnit() {
        return this.unit;
    }

    @Import(name="value")
      private final @Nullable Output<String> value;

    public Output<String> getValue() {
        return this.value == null ? Output.empty() : this.value;
    }

    public LicenseEntitlementArgs(
        @Nullable Output<Boolean> allowCheckIn,
        @Nullable Output<Integer> maxCount,
        Output<String> name,
        @Nullable Output<Boolean> overage,
        Output<String> unit,
        @Nullable Output<String> value) {
        this.allowCheckIn = allowCheckIn;
        this.maxCount = maxCount;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.overage = overage;
        this.unit = Objects.requireNonNull(unit, "expected parameter 'unit' to be non-null");
        this.value = value;
    }

    private LicenseEntitlementArgs() {
        this.allowCheckIn = Output.empty();
        this.maxCount = Output.empty();
        this.name = Output.empty();
        this.overage = Output.empty();
        this.unit = Output.empty();
        this.value = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LicenseEntitlementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> allowCheckIn;
        private @Nullable Output<Integer> maxCount;
        private Output<String> name;
        private @Nullable Output<Boolean> overage;
        private Output<String> unit;
        private @Nullable Output<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(LicenseEntitlementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowCheckIn = defaults.allowCheckIn;
    	      this.maxCount = defaults.maxCount;
    	      this.name = defaults.name;
    	      this.overage = defaults.overage;
    	      this.unit = defaults.unit;
    	      this.value = defaults.value;
        }

        public Builder allowCheckIn(@Nullable Output<Boolean> allowCheckIn) {
            this.allowCheckIn = allowCheckIn;
            return this;
        }

        public Builder allowCheckIn(@Nullable Boolean allowCheckIn) {
            this.allowCheckIn = Output.ofNullable(allowCheckIn);
            return this;
        }

        public Builder maxCount(@Nullable Output<Integer> maxCount) {
            this.maxCount = maxCount;
            return this;
        }

        public Builder maxCount(@Nullable Integer maxCount) {
            this.maxCount = Output.ofNullable(maxCount);
            return this;
        }

        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder overage(@Nullable Output<Boolean> overage) {
            this.overage = overage;
            return this;
        }

        public Builder overage(@Nullable Boolean overage) {
            this.overage = Output.ofNullable(overage);
            return this;
        }

        public Builder unit(Output<String> unit) {
            this.unit = Objects.requireNonNull(unit);
            return this;
        }

        public Builder unit(String unit) {
            this.unit = Output.of(Objects.requireNonNull(unit));
            return this;
        }

        public Builder value(@Nullable Output<String> value) {
            this.value = value;
            return this;
        }

        public Builder value(@Nullable String value) {
            this.value = Output.ofNullable(value);
            return this;
        }
        public LicenseEntitlementArgs build() {
            return new LicenseEntitlementArgs(allowCheckIn, maxCount, name, overage, unit, value);
        }
    }
}
