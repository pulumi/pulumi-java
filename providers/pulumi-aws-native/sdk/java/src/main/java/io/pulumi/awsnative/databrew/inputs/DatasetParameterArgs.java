// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.enums.DatasetParameterType;
import io.pulumi.awsnative.databrew.inputs.DatasetDatetimeOptionsArgs;
import io.pulumi.awsnative.databrew.inputs.DatasetFilterExpressionArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatasetParameterArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetParameterArgs Empty = new DatasetParameterArgs();

    /**
     * Add the value of this parameter as a column in a dataset.
     * 
     */
    @InputImport(name="createColumn")
    private final @Nullable Input<Boolean> createColumn;

    public Input<Boolean> getCreateColumn() {
        return this.createColumn == null ? Input.empty() : this.createColumn;
    }

    @InputImport(name="datetimeOptions")
    private final @Nullable Input<DatasetDatetimeOptionsArgs> datetimeOptions;

    public Input<DatasetDatetimeOptionsArgs> getDatetimeOptions() {
        return this.datetimeOptions == null ? Input.empty() : this.datetimeOptions;
    }

    @InputImport(name="filter")
    private final @Nullable Input<DatasetFilterExpressionArgs> filter;

    public Input<DatasetFilterExpressionArgs> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    /**
     * Parameter type
     * 
     */
    @InputImport(name="type", required=true)
    private final Input<DatasetParameterType> type;

    public Input<DatasetParameterType> getType() {
        return this.type;
    }

    public DatasetParameterArgs(
        @Nullable Input<Boolean> createColumn,
        @Nullable Input<DatasetDatetimeOptionsArgs> datetimeOptions,
        @Nullable Input<DatasetFilterExpressionArgs> filter,
        Input<String> name,
        Input<DatasetParameterType> type) {
        this.createColumn = createColumn;
        this.datetimeOptions = datetimeOptions;
        this.filter = filter;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private DatasetParameterArgs() {
        this.createColumn = Input.empty();
        this.datetimeOptions = Input.empty();
        this.filter = Input.empty();
        this.name = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> createColumn;
        private @Nullable Input<DatasetDatetimeOptionsArgs> datetimeOptions;
        private @Nullable Input<DatasetFilterExpressionArgs> filter;
        private Input<String> name;
        private Input<DatasetParameterType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetParameterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createColumn = defaults.createColumn;
    	      this.datetimeOptions = defaults.datetimeOptions;
    	      this.filter = defaults.filter;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        public Builder setCreateColumn(@Nullable Input<Boolean> createColumn) {
            this.createColumn = createColumn;
            return this;
        }

        public Builder setCreateColumn(@Nullable Boolean createColumn) {
            this.createColumn = Input.ofNullable(createColumn);
            return this;
        }

        public Builder setDatetimeOptions(@Nullable Input<DatasetDatetimeOptionsArgs> datetimeOptions) {
            this.datetimeOptions = datetimeOptions;
            return this;
        }

        public Builder setDatetimeOptions(@Nullable DatasetDatetimeOptionsArgs datetimeOptions) {
            this.datetimeOptions = Input.ofNullable(datetimeOptions);
            return this;
        }

        public Builder setFilter(@Nullable Input<DatasetFilterExpressionArgs> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable DatasetFilterExpressionArgs filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setType(Input<DatasetParameterType> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(DatasetParameterType type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public DatasetParameterArgs build() {
            return new DatasetParameterArgs(createColumn, datetimeOptions, filter, name, type);
        }
    }
}
