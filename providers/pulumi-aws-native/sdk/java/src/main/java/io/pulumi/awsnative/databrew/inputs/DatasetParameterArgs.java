// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.enums.DatasetParameterType;
import io.pulumi.awsnative.databrew.inputs.DatasetDatetimeOptionsArgs;
import io.pulumi.awsnative.databrew.inputs.DatasetFilterExpressionArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatasetParameterArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetParameterArgs Empty = new DatasetParameterArgs();

    /**
     * Add the value of this parameter as a column in a dataset.
     * 
     */
    @Import(name="createColumn")
      private final @Nullable Output<Boolean> createColumn;

    public Output<Boolean> createColumn() {
        return this.createColumn == null ? Codegen.empty() : this.createColumn;
    }

    @Import(name="datetimeOptions")
      private final @Nullable Output<DatasetDatetimeOptionsArgs> datetimeOptions;

    public Output<DatasetDatetimeOptionsArgs> datetimeOptions() {
        return this.datetimeOptions == null ? Codegen.empty() : this.datetimeOptions;
    }

    @Import(name="filter")
      private final @Nullable Output<DatasetFilterExpressionArgs> filter;

    public Output<DatasetFilterExpressionArgs> filter() {
        return this.filter == null ? Codegen.empty() : this.filter;
    }

    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Parameter type
     * 
     */
    @Import(name="type", required=true)
      private final Output<DatasetParameterType> type;

    public Output<DatasetParameterType> type() {
        return this.type;
    }

    public DatasetParameterArgs(
        @Nullable Output<Boolean> createColumn,
        @Nullable Output<DatasetDatetimeOptionsArgs> datetimeOptions,
        @Nullable Output<DatasetFilterExpressionArgs> filter,
        Output<String> name,
        Output<DatasetParameterType> type) {
        this.createColumn = createColumn;
        this.datetimeOptions = datetimeOptions;
        this.filter = filter;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private DatasetParameterArgs() {
        this.createColumn = Codegen.empty();
        this.datetimeOptions = Codegen.empty();
        this.filter = Codegen.empty();
        this.name = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> createColumn;
        private @Nullable Output<DatasetDatetimeOptionsArgs> datetimeOptions;
        private @Nullable Output<DatasetFilterExpressionArgs> filter;
        private Output<String> name;
        private Output<DatasetParameterType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetParameterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createColumn = defaults.createColumn;
    	      this.datetimeOptions = defaults.datetimeOptions;
    	      this.filter = defaults.filter;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        public Builder createColumn(@Nullable Output<Boolean> createColumn) {
            this.createColumn = createColumn;
            return this;
        }
        public Builder createColumn(@Nullable Boolean createColumn) {
            this.createColumn = Codegen.ofNullable(createColumn);
            return this;
        }
        public Builder datetimeOptions(@Nullable Output<DatasetDatetimeOptionsArgs> datetimeOptions) {
            this.datetimeOptions = datetimeOptions;
            return this;
        }
        public Builder datetimeOptions(@Nullable DatasetDatetimeOptionsArgs datetimeOptions) {
            this.datetimeOptions = Codegen.ofNullable(datetimeOptions);
            return this;
        }
        public Builder filter(@Nullable Output<DatasetFilterExpressionArgs> filter) {
            this.filter = filter;
            return this;
        }
        public Builder filter(@Nullable DatasetFilterExpressionArgs filter) {
            this.filter = Codegen.ofNullable(filter);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder type(Output<DatasetParameterType> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(DatasetParameterType type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public DatasetParameterArgs build() {
            return new DatasetParameterArgs(createColumn, datetimeOptions, filter, name, type);
        }
    }
}
