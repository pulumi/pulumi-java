// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.devicefarm;

import io.pulumi.awsnative.devicefarm.inputs.InstanceProfileTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceProfileArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceProfileArgs Empty = new InstanceProfileArgs();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="excludeAppPackagesFromCleanup")
    private final @Nullable Input<List<String>> excludeAppPackagesFromCleanup;

    public Input<List<String>> getExcludeAppPackagesFromCleanup() {
        return this.excludeAppPackagesFromCleanup == null ? Input.empty() : this.excludeAppPackagesFromCleanup;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="packageCleanup")
    private final @Nullable Input<Boolean> packageCleanup;

    public Input<Boolean> getPackageCleanup() {
        return this.packageCleanup == null ? Input.empty() : this.packageCleanup;
    }

    @InputImport(name="rebootAfterUse")
    private final @Nullable Input<Boolean> rebootAfterUse;

    public Input<Boolean> getRebootAfterUse() {
        return this.rebootAfterUse == null ? Input.empty() : this.rebootAfterUse;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<InstanceProfileTagArgs>> tags;

    public Input<List<InstanceProfileTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public InstanceProfileArgs(
        @Nullable Input<String> description,
        @Nullable Input<List<String>> excludeAppPackagesFromCleanup,
        @Nullable Input<String> name,
        @Nullable Input<Boolean> packageCleanup,
        @Nullable Input<Boolean> rebootAfterUse,
        @Nullable Input<List<InstanceProfileTagArgs>> tags) {
        this.description = description;
        this.excludeAppPackagesFromCleanup = excludeAppPackagesFromCleanup;
        this.name = name;
        this.packageCleanup = packageCleanup;
        this.rebootAfterUse = rebootAfterUse;
        this.tags = tags;
    }

    private InstanceProfileArgs() {
        this.description = Input.empty();
        this.excludeAppPackagesFromCleanup = Input.empty();
        this.name = Input.empty();
        this.packageCleanup = Input.empty();
        this.rebootAfterUse = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<List<String>> excludeAppPackagesFromCleanup;
        private @Nullable Input<String> name;
        private @Nullable Input<Boolean> packageCleanup;
        private @Nullable Input<Boolean> rebootAfterUse;
        private @Nullable Input<List<InstanceProfileTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceProfileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.excludeAppPackagesFromCleanup = defaults.excludeAppPackagesFromCleanup;
    	      this.name = defaults.name;
    	      this.packageCleanup = defaults.packageCleanup;
    	      this.rebootAfterUse = defaults.rebootAfterUse;
    	      this.tags = defaults.tags;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setExcludeAppPackagesFromCleanup(@Nullable Input<List<String>> excludeAppPackagesFromCleanup) {
            this.excludeAppPackagesFromCleanup = excludeAppPackagesFromCleanup;
            return this;
        }

        public Builder setExcludeAppPackagesFromCleanup(@Nullable List<String> excludeAppPackagesFromCleanup) {
            this.excludeAppPackagesFromCleanup = Input.ofNullable(excludeAppPackagesFromCleanup);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPackageCleanup(@Nullable Input<Boolean> packageCleanup) {
            this.packageCleanup = packageCleanup;
            return this;
        }

        public Builder setPackageCleanup(@Nullable Boolean packageCleanup) {
            this.packageCleanup = Input.ofNullable(packageCleanup);
            return this;
        }

        public Builder setRebootAfterUse(@Nullable Input<Boolean> rebootAfterUse) {
            this.rebootAfterUse = rebootAfterUse;
            return this;
        }

        public Builder setRebootAfterUse(@Nullable Boolean rebootAfterUse) {
            this.rebootAfterUse = Input.ofNullable(rebootAfterUse);
            return this;
        }

        public Builder setTags(@Nullable Input<List<InstanceProfileTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<InstanceProfileTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public InstanceProfileArgs build() {
            return new InstanceProfileArgs(description, excludeAppPackagesFromCleanup, name, packageCleanup, rebootAfterUse, tags);
        }
    }
}
