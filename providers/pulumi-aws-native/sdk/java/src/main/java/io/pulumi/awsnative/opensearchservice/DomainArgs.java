// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.opensearchservice;

import io.pulumi.awsnative.opensearchservice.inputs.DomainAdvancedSecurityOptionsInputArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainClusterConfigArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainCognitoOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainEBSOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainEncryptionAtRestOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainEndpointOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainNodeToNodeEncryptionOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainSnapshotOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainTagArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainVPCOptionsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainArgs Empty = new DomainArgs();

    @InputImport(name="accessPolicies")
    private final @Nullable Input<Object> accessPolicies;

    public Input<Object> getAccessPolicies() {
        return this.accessPolicies == null ? Input.empty() : this.accessPolicies;
    }

    @InputImport(name="advancedOptions")
    private final @Nullable Input<Object> advancedOptions;

    public Input<Object> getAdvancedOptions() {
        return this.advancedOptions == null ? Input.empty() : this.advancedOptions;
    }

    @InputImport(name="advancedSecurityOptions")
    private final @Nullable Input<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions;

    public Input<DomainAdvancedSecurityOptionsInputArgs> getAdvancedSecurityOptions() {
        return this.advancedSecurityOptions == null ? Input.empty() : this.advancedSecurityOptions;
    }

    @InputImport(name="clusterConfig")
    private final @Nullable Input<DomainClusterConfigArgs> clusterConfig;

    public Input<DomainClusterConfigArgs> getClusterConfig() {
        return this.clusterConfig == null ? Input.empty() : this.clusterConfig;
    }

    @InputImport(name="cognitoOptions")
    private final @Nullable Input<DomainCognitoOptionsArgs> cognitoOptions;

    public Input<DomainCognitoOptionsArgs> getCognitoOptions() {
        return this.cognitoOptions == null ? Input.empty() : this.cognitoOptions;
    }

    @InputImport(name="domainEndpointOptions")
    private final @Nullable Input<DomainEndpointOptionsArgs> domainEndpointOptions;

    public Input<DomainEndpointOptionsArgs> getDomainEndpointOptions() {
        return this.domainEndpointOptions == null ? Input.empty() : this.domainEndpointOptions;
    }

    @InputImport(name="domainName")
    private final @Nullable Input<String> domainName;

    public Input<String> getDomainName() {
        return this.domainName == null ? Input.empty() : this.domainName;
    }

    @InputImport(name="eBSOptions")
    private final @Nullable Input<DomainEBSOptionsArgs> eBSOptions;

    public Input<DomainEBSOptionsArgs> getEBSOptions() {
        return this.eBSOptions == null ? Input.empty() : this.eBSOptions;
    }

    @InputImport(name="encryptionAtRestOptions")
    private final @Nullable Input<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions;

    public Input<DomainEncryptionAtRestOptionsArgs> getEncryptionAtRestOptions() {
        return this.encryptionAtRestOptions == null ? Input.empty() : this.encryptionAtRestOptions;
    }

    @InputImport(name="engineVersion")
    private final @Nullable Input<String> engineVersion;

    public Input<String> getEngineVersion() {
        return this.engineVersion == null ? Input.empty() : this.engineVersion;
    }

    @InputImport(name="logPublishingOptions")
    private final @Nullable Input<Object> logPublishingOptions;

    public Input<Object> getLogPublishingOptions() {
        return this.logPublishingOptions == null ? Input.empty() : this.logPublishingOptions;
    }

    @InputImport(name="nodeToNodeEncryptionOptions")
    private final @Nullable Input<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions;

    public Input<DomainNodeToNodeEncryptionOptionsArgs> getNodeToNodeEncryptionOptions() {
        return this.nodeToNodeEncryptionOptions == null ? Input.empty() : this.nodeToNodeEncryptionOptions;
    }

    @InputImport(name="snapshotOptions")
    private final @Nullable Input<DomainSnapshotOptionsArgs> snapshotOptions;

    public Input<DomainSnapshotOptionsArgs> getSnapshotOptions() {
        return this.snapshotOptions == null ? Input.empty() : this.snapshotOptions;
    }

    /**
     * An arbitrary set of tags (key-value pairs) for this Domain.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<List<DomainTagArgs>> tags;

    public Input<List<DomainTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="vPCOptions")
    private final @Nullable Input<DomainVPCOptionsArgs> vPCOptions;

    public Input<DomainVPCOptionsArgs> getVPCOptions() {
        return this.vPCOptions == null ? Input.empty() : this.vPCOptions;
    }

    public DomainArgs(
        @Nullable Input<Object> accessPolicies,
        @Nullable Input<Object> advancedOptions,
        @Nullable Input<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions,
        @Nullable Input<DomainClusterConfigArgs> clusterConfig,
        @Nullable Input<DomainCognitoOptionsArgs> cognitoOptions,
        @Nullable Input<DomainEndpointOptionsArgs> domainEndpointOptions,
        @Nullable Input<String> domainName,
        @Nullable Input<DomainEBSOptionsArgs> eBSOptions,
        @Nullable Input<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions,
        @Nullable Input<String> engineVersion,
        @Nullable Input<Object> logPublishingOptions,
        @Nullable Input<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions,
        @Nullable Input<DomainSnapshotOptionsArgs> snapshotOptions,
        @Nullable Input<List<DomainTagArgs>> tags,
        @Nullable Input<DomainVPCOptionsArgs> vPCOptions) {
        this.accessPolicies = accessPolicies;
        this.advancedOptions = advancedOptions;
        this.advancedSecurityOptions = advancedSecurityOptions;
        this.clusterConfig = clusterConfig;
        this.cognitoOptions = cognitoOptions;
        this.domainEndpointOptions = domainEndpointOptions;
        this.domainName = domainName;
        this.eBSOptions = eBSOptions;
        this.encryptionAtRestOptions = encryptionAtRestOptions;
        this.engineVersion = engineVersion;
        this.logPublishingOptions = logPublishingOptions;
        this.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions;
        this.snapshotOptions = snapshotOptions;
        this.tags = tags;
        this.vPCOptions = vPCOptions;
    }

    private DomainArgs() {
        this.accessPolicies = Input.empty();
        this.advancedOptions = Input.empty();
        this.advancedSecurityOptions = Input.empty();
        this.clusterConfig = Input.empty();
        this.cognitoOptions = Input.empty();
        this.domainEndpointOptions = Input.empty();
        this.domainName = Input.empty();
        this.eBSOptions = Input.empty();
        this.encryptionAtRestOptions = Input.empty();
        this.engineVersion = Input.empty();
        this.logPublishingOptions = Input.empty();
        this.nodeToNodeEncryptionOptions = Input.empty();
        this.snapshotOptions = Input.empty();
        this.tags = Input.empty();
        this.vPCOptions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Object> accessPolicies;
        private @Nullable Input<Object> advancedOptions;
        private @Nullable Input<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions;
        private @Nullable Input<DomainClusterConfigArgs> clusterConfig;
        private @Nullable Input<DomainCognitoOptionsArgs> cognitoOptions;
        private @Nullable Input<DomainEndpointOptionsArgs> domainEndpointOptions;
        private @Nullable Input<String> domainName;
        private @Nullable Input<DomainEBSOptionsArgs> eBSOptions;
        private @Nullable Input<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions;
        private @Nullable Input<String> engineVersion;
        private @Nullable Input<Object> logPublishingOptions;
        private @Nullable Input<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions;
        private @Nullable Input<DomainSnapshotOptionsArgs> snapshotOptions;
        private @Nullable Input<List<DomainTagArgs>> tags;
        private @Nullable Input<DomainVPCOptionsArgs> vPCOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicies = defaults.accessPolicies;
    	      this.advancedOptions = defaults.advancedOptions;
    	      this.advancedSecurityOptions = defaults.advancedSecurityOptions;
    	      this.clusterConfig = defaults.clusterConfig;
    	      this.cognitoOptions = defaults.cognitoOptions;
    	      this.domainEndpointOptions = defaults.domainEndpointOptions;
    	      this.domainName = defaults.domainName;
    	      this.eBSOptions = defaults.eBSOptions;
    	      this.encryptionAtRestOptions = defaults.encryptionAtRestOptions;
    	      this.engineVersion = defaults.engineVersion;
    	      this.logPublishingOptions = defaults.logPublishingOptions;
    	      this.nodeToNodeEncryptionOptions = defaults.nodeToNodeEncryptionOptions;
    	      this.snapshotOptions = defaults.snapshotOptions;
    	      this.tags = defaults.tags;
    	      this.vPCOptions = defaults.vPCOptions;
        }

        public Builder setAccessPolicies(@Nullable Input<Object> accessPolicies) {
            this.accessPolicies = accessPolicies;
            return this;
        }

        public Builder setAccessPolicies(@Nullable Object accessPolicies) {
            this.accessPolicies = Input.ofNullable(accessPolicies);
            return this;
        }

        public Builder setAdvancedOptions(@Nullable Input<Object> advancedOptions) {
            this.advancedOptions = advancedOptions;
            return this;
        }

        public Builder setAdvancedOptions(@Nullable Object advancedOptions) {
            this.advancedOptions = Input.ofNullable(advancedOptions);
            return this;
        }

        public Builder setAdvancedSecurityOptions(@Nullable Input<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions) {
            this.advancedSecurityOptions = advancedSecurityOptions;
            return this;
        }

        public Builder setAdvancedSecurityOptions(@Nullable DomainAdvancedSecurityOptionsInputArgs advancedSecurityOptions) {
            this.advancedSecurityOptions = Input.ofNullable(advancedSecurityOptions);
            return this;
        }

        public Builder setClusterConfig(@Nullable Input<DomainClusterConfigArgs> clusterConfig) {
            this.clusterConfig = clusterConfig;
            return this;
        }

        public Builder setClusterConfig(@Nullable DomainClusterConfigArgs clusterConfig) {
            this.clusterConfig = Input.ofNullable(clusterConfig);
            return this;
        }

        public Builder setCognitoOptions(@Nullable Input<DomainCognitoOptionsArgs> cognitoOptions) {
            this.cognitoOptions = cognitoOptions;
            return this;
        }

        public Builder setCognitoOptions(@Nullable DomainCognitoOptionsArgs cognitoOptions) {
            this.cognitoOptions = Input.ofNullable(cognitoOptions);
            return this;
        }

        public Builder setDomainEndpointOptions(@Nullable Input<DomainEndpointOptionsArgs> domainEndpointOptions) {
            this.domainEndpointOptions = domainEndpointOptions;
            return this;
        }

        public Builder setDomainEndpointOptions(@Nullable DomainEndpointOptionsArgs domainEndpointOptions) {
            this.domainEndpointOptions = Input.ofNullable(domainEndpointOptions);
            return this;
        }

        public Builder setDomainName(@Nullable Input<String> domainName) {
            this.domainName = domainName;
            return this;
        }

        public Builder setDomainName(@Nullable String domainName) {
            this.domainName = Input.ofNullable(domainName);
            return this;
        }

        public Builder setEBSOptions(@Nullable Input<DomainEBSOptionsArgs> eBSOptions) {
            this.eBSOptions = eBSOptions;
            return this;
        }

        public Builder setEBSOptions(@Nullable DomainEBSOptionsArgs eBSOptions) {
            this.eBSOptions = Input.ofNullable(eBSOptions);
            return this;
        }

        public Builder setEncryptionAtRestOptions(@Nullable Input<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions) {
            this.encryptionAtRestOptions = encryptionAtRestOptions;
            return this;
        }

        public Builder setEncryptionAtRestOptions(@Nullable DomainEncryptionAtRestOptionsArgs encryptionAtRestOptions) {
            this.encryptionAtRestOptions = Input.ofNullable(encryptionAtRestOptions);
            return this;
        }

        public Builder setEngineVersion(@Nullable Input<String> engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }

        public Builder setEngineVersion(@Nullable String engineVersion) {
            this.engineVersion = Input.ofNullable(engineVersion);
            return this;
        }

        public Builder setLogPublishingOptions(@Nullable Input<Object> logPublishingOptions) {
            this.logPublishingOptions = logPublishingOptions;
            return this;
        }

        public Builder setLogPublishingOptions(@Nullable Object logPublishingOptions) {
            this.logPublishingOptions = Input.ofNullable(logPublishingOptions);
            return this;
        }

        public Builder setNodeToNodeEncryptionOptions(@Nullable Input<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions) {
            this.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions;
            return this;
        }

        public Builder setNodeToNodeEncryptionOptions(@Nullable DomainNodeToNodeEncryptionOptionsArgs nodeToNodeEncryptionOptions) {
            this.nodeToNodeEncryptionOptions = Input.ofNullable(nodeToNodeEncryptionOptions);
            return this;
        }

        public Builder setSnapshotOptions(@Nullable Input<DomainSnapshotOptionsArgs> snapshotOptions) {
            this.snapshotOptions = snapshotOptions;
            return this;
        }

        public Builder setSnapshotOptions(@Nullable DomainSnapshotOptionsArgs snapshotOptions) {
            this.snapshotOptions = Input.ofNullable(snapshotOptions);
            return this;
        }

        public Builder setTags(@Nullable Input<List<DomainTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<DomainTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setVPCOptions(@Nullable Input<DomainVPCOptionsArgs> vPCOptions) {
            this.vPCOptions = vPCOptions;
            return this;
        }

        public Builder setVPCOptions(@Nullable DomainVPCOptionsArgs vPCOptions) {
            this.vPCOptions = Input.ofNullable(vPCOptions);
            return this;
        }

        public DomainArgs build() {
            return new DomainArgs(accessPolicies, advancedOptions, advancedSecurityOptions, clusterConfig, cognitoOptions, domainEndpointOptions, domainName, eBSOptions, encryptionAtRestOptions, engineVersion, logPublishingOptions, nodeToNodeEncryptionOptions, snapshotOptions, tags, vPCOptions);
        }
    }
}
