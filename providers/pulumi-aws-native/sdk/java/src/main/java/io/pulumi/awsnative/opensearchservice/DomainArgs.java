// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.opensearchservice;

import io.pulumi.awsnative.opensearchservice.inputs.DomainAdvancedSecurityOptionsInputArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainClusterConfigArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainCognitoOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainEBSOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainEncryptionAtRestOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainEndpointOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainNodeToNodeEncryptionOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainSnapshotOptionsArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainTagArgs;
import io.pulumi.awsnative.opensearchservice.inputs.DomainVPCOptionsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainArgs Empty = new DomainArgs();

    @Import(name="accessPolicies")
      private final @Nullable Output<Object> accessPolicies;

    public Output<Object> accessPolicies() {
        return this.accessPolicies == null ? Codegen.empty() : this.accessPolicies;
    }

    @Import(name="advancedOptions")
      private final @Nullable Output<Object> advancedOptions;

    public Output<Object> advancedOptions() {
        return this.advancedOptions == null ? Codegen.empty() : this.advancedOptions;
    }

    @Import(name="advancedSecurityOptions")
      private final @Nullable Output<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions;

    public Output<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions() {
        return this.advancedSecurityOptions == null ? Codegen.empty() : this.advancedSecurityOptions;
    }

    @Import(name="clusterConfig")
      private final @Nullable Output<DomainClusterConfigArgs> clusterConfig;

    public Output<DomainClusterConfigArgs> clusterConfig() {
        return this.clusterConfig == null ? Codegen.empty() : this.clusterConfig;
    }

    @Import(name="cognitoOptions")
      private final @Nullable Output<DomainCognitoOptionsArgs> cognitoOptions;

    public Output<DomainCognitoOptionsArgs> cognitoOptions() {
        return this.cognitoOptions == null ? Codegen.empty() : this.cognitoOptions;
    }

    @Import(name="domainEndpointOptions")
      private final @Nullable Output<DomainEndpointOptionsArgs> domainEndpointOptions;

    public Output<DomainEndpointOptionsArgs> domainEndpointOptions() {
        return this.domainEndpointOptions == null ? Codegen.empty() : this.domainEndpointOptions;
    }

    @Import(name="domainName")
      private final @Nullable Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName == null ? Codegen.empty() : this.domainName;
    }

    @Import(name="eBSOptions")
      private final @Nullable Output<DomainEBSOptionsArgs> eBSOptions;

    public Output<DomainEBSOptionsArgs> eBSOptions() {
        return this.eBSOptions == null ? Codegen.empty() : this.eBSOptions;
    }

    @Import(name="encryptionAtRestOptions")
      private final @Nullable Output<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions;

    public Output<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions() {
        return this.encryptionAtRestOptions == null ? Codegen.empty() : this.encryptionAtRestOptions;
    }

    @Import(name="engineVersion")
      private final @Nullable Output<String> engineVersion;

    public Output<String> engineVersion() {
        return this.engineVersion == null ? Codegen.empty() : this.engineVersion;
    }

    @Import(name="logPublishingOptions")
      private final @Nullable Output<Object> logPublishingOptions;

    public Output<Object> logPublishingOptions() {
        return this.logPublishingOptions == null ? Codegen.empty() : this.logPublishingOptions;
    }

    @Import(name="nodeToNodeEncryptionOptions")
      private final @Nullable Output<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions;

    public Output<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions() {
        return this.nodeToNodeEncryptionOptions == null ? Codegen.empty() : this.nodeToNodeEncryptionOptions;
    }

    @Import(name="snapshotOptions")
      private final @Nullable Output<DomainSnapshotOptionsArgs> snapshotOptions;

    public Output<DomainSnapshotOptionsArgs> snapshotOptions() {
        return this.snapshotOptions == null ? Codegen.empty() : this.snapshotOptions;
    }

    /**
     * An arbitrary set of tags (key-value pairs) for this Domain.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<DomainTagArgs>> tags;

    public Output<List<DomainTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    @Import(name="vPCOptions")
      private final @Nullable Output<DomainVPCOptionsArgs> vPCOptions;

    public Output<DomainVPCOptionsArgs> vPCOptions() {
        return this.vPCOptions == null ? Codegen.empty() : this.vPCOptions;
    }

    public DomainArgs(
        @Nullable Output<Object> accessPolicies,
        @Nullable Output<Object> advancedOptions,
        @Nullable Output<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions,
        @Nullable Output<DomainClusterConfigArgs> clusterConfig,
        @Nullable Output<DomainCognitoOptionsArgs> cognitoOptions,
        @Nullable Output<DomainEndpointOptionsArgs> domainEndpointOptions,
        @Nullable Output<String> domainName,
        @Nullable Output<DomainEBSOptionsArgs> eBSOptions,
        @Nullable Output<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions,
        @Nullable Output<String> engineVersion,
        @Nullable Output<Object> logPublishingOptions,
        @Nullable Output<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions,
        @Nullable Output<DomainSnapshotOptionsArgs> snapshotOptions,
        @Nullable Output<List<DomainTagArgs>> tags,
        @Nullable Output<DomainVPCOptionsArgs> vPCOptions) {
        this.accessPolicies = accessPolicies;
        this.advancedOptions = advancedOptions;
        this.advancedSecurityOptions = advancedSecurityOptions;
        this.clusterConfig = clusterConfig;
        this.cognitoOptions = cognitoOptions;
        this.domainEndpointOptions = domainEndpointOptions;
        this.domainName = domainName;
        this.eBSOptions = eBSOptions;
        this.encryptionAtRestOptions = encryptionAtRestOptions;
        this.engineVersion = engineVersion;
        this.logPublishingOptions = logPublishingOptions;
        this.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions;
        this.snapshotOptions = snapshotOptions;
        this.tags = tags;
        this.vPCOptions = vPCOptions;
    }

    private DomainArgs() {
        this.accessPolicies = Codegen.empty();
        this.advancedOptions = Codegen.empty();
        this.advancedSecurityOptions = Codegen.empty();
        this.clusterConfig = Codegen.empty();
        this.cognitoOptions = Codegen.empty();
        this.domainEndpointOptions = Codegen.empty();
        this.domainName = Codegen.empty();
        this.eBSOptions = Codegen.empty();
        this.encryptionAtRestOptions = Codegen.empty();
        this.engineVersion = Codegen.empty();
        this.logPublishingOptions = Codegen.empty();
        this.nodeToNodeEncryptionOptions = Codegen.empty();
        this.snapshotOptions = Codegen.empty();
        this.tags = Codegen.empty();
        this.vPCOptions = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Object> accessPolicies;
        private @Nullable Output<Object> advancedOptions;
        private @Nullable Output<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions;
        private @Nullable Output<DomainClusterConfigArgs> clusterConfig;
        private @Nullable Output<DomainCognitoOptionsArgs> cognitoOptions;
        private @Nullable Output<DomainEndpointOptionsArgs> domainEndpointOptions;
        private @Nullable Output<String> domainName;
        private @Nullable Output<DomainEBSOptionsArgs> eBSOptions;
        private @Nullable Output<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions;
        private @Nullable Output<String> engineVersion;
        private @Nullable Output<Object> logPublishingOptions;
        private @Nullable Output<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions;
        private @Nullable Output<DomainSnapshotOptionsArgs> snapshotOptions;
        private @Nullable Output<List<DomainTagArgs>> tags;
        private @Nullable Output<DomainVPCOptionsArgs> vPCOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicies = defaults.accessPolicies;
    	      this.advancedOptions = defaults.advancedOptions;
    	      this.advancedSecurityOptions = defaults.advancedSecurityOptions;
    	      this.clusterConfig = defaults.clusterConfig;
    	      this.cognitoOptions = defaults.cognitoOptions;
    	      this.domainEndpointOptions = defaults.domainEndpointOptions;
    	      this.domainName = defaults.domainName;
    	      this.eBSOptions = defaults.eBSOptions;
    	      this.encryptionAtRestOptions = defaults.encryptionAtRestOptions;
    	      this.engineVersion = defaults.engineVersion;
    	      this.logPublishingOptions = defaults.logPublishingOptions;
    	      this.nodeToNodeEncryptionOptions = defaults.nodeToNodeEncryptionOptions;
    	      this.snapshotOptions = defaults.snapshotOptions;
    	      this.tags = defaults.tags;
    	      this.vPCOptions = defaults.vPCOptions;
        }

        public Builder accessPolicies(@Nullable Output<Object> accessPolicies) {
            this.accessPolicies = accessPolicies;
            return this;
        }
        public Builder accessPolicies(@Nullable Object accessPolicies) {
            this.accessPolicies = Codegen.ofNullable(accessPolicies);
            return this;
        }
        public Builder advancedOptions(@Nullable Output<Object> advancedOptions) {
            this.advancedOptions = advancedOptions;
            return this;
        }
        public Builder advancedOptions(@Nullable Object advancedOptions) {
            this.advancedOptions = Codegen.ofNullable(advancedOptions);
            return this;
        }
        public Builder advancedSecurityOptions(@Nullable Output<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions) {
            this.advancedSecurityOptions = advancedSecurityOptions;
            return this;
        }
        public Builder advancedSecurityOptions(@Nullable DomainAdvancedSecurityOptionsInputArgs advancedSecurityOptions) {
            this.advancedSecurityOptions = Codegen.ofNullable(advancedSecurityOptions);
            return this;
        }
        public Builder clusterConfig(@Nullable Output<DomainClusterConfigArgs> clusterConfig) {
            this.clusterConfig = clusterConfig;
            return this;
        }
        public Builder clusterConfig(@Nullable DomainClusterConfigArgs clusterConfig) {
            this.clusterConfig = Codegen.ofNullable(clusterConfig);
            return this;
        }
        public Builder cognitoOptions(@Nullable Output<DomainCognitoOptionsArgs> cognitoOptions) {
            this.cognitoOptions = cognitoOptions;
            return this;
        }
        public Builder cognitoOptions(@Nullable DomainCognitoOptionsArgs cognitoOptions) {
            this.cognitoOptions = Codegen.ofNullable(cognitoOptions);
            return this;
        }
        public Builder domainEndpointOptions(@Nullable Output<DomainEndpointOptionsArgs> domainEndpointOptions) {
            this.domainEndpointOptions = domainEndpointOptions;
            return this;
        }
        public Builder domainEndpointOptions(@Nullable DomainEndpointOptionsArgs domainEndpointOptions) {
            this.domainEndpointOptions = Codegen.ofNullable(domainEndpointOptions);
            return this;
        }
        public Builder domainName(@Nullable Output<String> domainName) {
            this.domainName = domainName;
            return this;
        }
        public Builder domainName(@Nullable String domainName) {
            this.domainName = Codegen.ofNullable(domainName);
            return this;
        }
        public Builder eBSOptions(@Nullable Output<DomainEBSOptionsArgs> eBSOptions) {
            this.eBSOptions = eBSOptions;
            return this;
        }
        public Builder eBSOptions(@Nullable DomainEBSOptionsArgs eBSOptions) {
            this.eBSOptions = Codegen.ofNullable(eBSOptions);
            return this;
        }
        public Builder encryptionAtRestOptions(@Nullable Output<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions) {
            this.encryptionAtRestOptions = encryptionAtRestOptions;
            return this;
        }
        public Builder encryptionAtRestOptions(@Nullable DomainEncryptionAtRestOptionsArgs encryptionAtRestOptions) {
            this.encryptionAtRestOptions = Codegen.ofNullable(encryptionAtRestOptions);
            return this;
        }
        public Builder engineVersion(@Nullable Output<String> engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }
        public Builder engineVersion(@Nullable String engineVersion) {
            this.engineVersion = Codegen.ofNullable(engineVersion);
            return this;
        }
        public Builder logPublishingOptions(@Nullable Output<Object> logPublishingOptions) {
            this.logPublishingOptions = logPublishingOptions;
            return this;
        }
        public Builder logPublishingOptions(@Nullable Object logPublishingOptions) {
            this.logPublishingOptions = Codegen.ofNullable(logPublishingOptions);
            return this;
        }
        public Builder nodeToNodeEncryptionOptions(@Nullable Output<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions) {
            this.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions;
            return this;
        }
        public Builder nodeToNodeEncryptionOptions(@Nullable DomainNodeToNodeEncryptionOptionsArgs nodeToNodeEncryptionOptions) {
            this.nodeToNodeEncryptionOptions = Codegen.ofNullable(nodeToNodeEncryptionOptions);
            return this;
        }
        public Builder snapshotOptions(@Nullable Output<DomainSnapshotOptionsArgs> snapshotOptions) {
            this.snapshotOptions = snapshotOptions;
            return this;
        }
        public Builder snapshotOptions(@Nullable DomainSnapshotOptionsArgs snapshotOptions) {
            this.snapshotOptions = Codegen.ofNullable(snapshotOptions);
            return this;
        }
        public Builder tags(@Nullable Output<List<DomainTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<DomainTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(DomainTagArgs... tags) {
            return tags(List.of(tags));
        }
        public Builder vPCOptions(@Nullable Output<DomainVPCOptionsArgs> vPCOptions) {
            this.vPCOptions = vPCOptions;
            return this;
        }
        public Builder vPCOptions(@Nullable DomainVPCOptionsArgs vPCOptions) {
            this.vPCOptions = Codegen.ofNullable(vPCOptions);
            return this;
        }        public DomainArgs build() {
            return new DomainArgs(accessPolicies, advancedOptions, advancedSecurityOptions, clusterConfig, cognitoOptions, domainEndpointOptions, domainName, eBSOptions, encryptionAtRestOptions, engineVersion, logPublishingOptions, nodeToNodeEncryptionOptions, snapshotOptions, tags, vPCOptions);
        }
    }
}
