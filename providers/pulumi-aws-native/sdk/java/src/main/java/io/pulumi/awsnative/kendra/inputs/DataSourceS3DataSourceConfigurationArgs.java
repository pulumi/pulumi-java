// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kendra.inputs;

import io.pulumi.awsnative.kendra.inputs.DataSourceAccessControlListConfigurationArgs;
import io.pulumi.awsnative.kendra.inputs.DataSourceDocumentsMetadataConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DataSourceS3DataSourceConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataSourceS3DataSourceConfigurationArgs Empty = new DataSourceS3DataSourceConfigurationArgs();

    @InputImport(name="accessControlListConfiguration")
    private final @Nullable Input<DataSourceAccessControlListConfigurationArgs> accessControlListConfiguration;

    public Input<DataSourceAccessControlListConfigurationArgs> getAccessControlListConfiguration() {
        return this.accessControlListConfiguration == null ? Input.empty() : this.accessControlListConfiguration;
    }

    @InputImport(name="bucketName", required=true)
    private final Input<String> bucketName;

    public Input<String> getBucketName() {
        return this.bucketName;
    }

    @InputImport(name="documentsMetadataConfiguration")
    private final @Nullable Input<DataSourceDocumentsMetadataConfigurationArgs> documentsMetadataConfiguration;

    public Input<DataSourceDocumentsMetadataConfigurationArgs> getDocumentsMetadataConfiguration() {
        return this.documentsMetadataConfiguration == null ? Input.empty() : this.documentsMetadataConfiguration;
    }

    @InputImport(name="exclusionPatterns")
    private final @Nullable Input<List<String>> exclusionPatterns;

    public Input<List<String>> getExclusionPatterns() {
        return this.exclusionPatterns == null ? Input.empty() : this.exclusionPatterns;
    }

    @InputImport(name="inclusionPatterns")
    private final @Nullable Input<List<String>> inclusionPatterns;

    public Input<List<String>> getInclusionPatterns() {
        return this.inclusionPatterns == null ? Input.empty() : this.inclusionPatterns;
    }

    @InputImport(name="inclusionPrefixes")
    private final @Nullable Input<List<String>> inclusionPrefixes;

    public Input<List<String>> getInclusionPrefixes() {
        return this.inclusionPrefixes == null ? Input.empty() : this.inclusionPrefixes;
    }

    public DataSourceS3DataSourceConfigurationArgs(
        @Nullable Input<DataSourceAccessControlListConfigurationArgs> accessControlListConfiguration,
        Input<String> bucketName,
        @Nullable Input<DataSourceDocumentsMetadataConfigurationArgs> documentsMetadataConfiguration,
        @Nullable Input<List<String>> exclusionPatterns,
        @Nullable Input<List<String>> inclusionPatterns,
        @Nullable Input<List<String>> inclusionPrefixes) {
        this.accessControlListConfiguration = accessControlListConfiguration;
        this.bucketName = Objects.requireNonNull(bucketName, "expected parameter 'bucketName' to be non-null");
        this.documentsMetadataConfiguration = documentsMetadataConfiguration;
        this.exclusionPatterns = exclusionPatterns;
        this.inclusionPatterns = inclusionPatterns;
        this.inclusionPrefixes = inclusionPrefixes;
    }

    private DataSourceS3DataSourceConfigurationArgs() {
        this.accessControlListConfiguration = Input.empty();
        this.bucketName = Input.empty();
        this.documentsMetadataConfiguration = Input.empty();
        this.exclusionPatterns = Input.empty();
        this.inclusionPatterns = Input.empty();
        this.inclusionPrefixes = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceS3DataSourceConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DataSourceAccessControlListConfigurationArgs> accessControlListConfiguration;
        private Input<String> bucketName;
        private @Nullable Input<DataSourceDocumentsMetadataConfigurationArgs> documentsMetadataConfiguration;
        private @Nullable Input<List<String>> exclusionPatterns;
        private @Nullable Input<List<String>> inclusionPatterns;
        private @Nullable Input<List<String>> inclusionPrefixes;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceS3DataSourceConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlListConfiguration = defaults.accessControlListConfiguration;
    	      this.bucketName = defaults.bucketName;
    	      this.documentsMetadataConfiguration = defaults.documentsMetadataConfiguration;
    	      this.exclusionPatterns = defaults.exclusionPatterns;
    	      this.inclusionPatterns = defaults.inclusionPatterns;
    	      this.inclusionPrefixes = defaults.inclusionPrefixes;
        }

        public Builder setAccessControlListConfiguration(@Nullable Input<DataSourceAccessControlListConfigurationArgs> accessControlListConfiguration) {
            this.accessControlListConfiguration = accessControlListConfiguration;
            return this;
        }

        public Builder setAccessControlListConfiguration(@Nullable DataSourceAccessControlListConfigurationArgs accessControlListConfiguration) {
            this.accessControlListConfiguration = Input.ofNullable(accessControlListConfiguration);
            return this;
        }

        public Builder setBucketName(Input<String> bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }

        public Builder setBucketName(String bucketName) {
            this.bucketName = Input.of(Objects.requireNonNull(bucketName));
            return this;
        }

        public Builder setDocumentsMetadataConfiguration(@Nullable Input<DataSourceDocumentsMetadataConfigurationArgs> documentsMetadataConfiguration) {
            this.documentsMetadataConfiguration = documentsMetadataConfiguration;
            return this;
        }

        public Builder setDocumentsMetadataConfiguration(@Nullable DataSourceDocumentsMetadataConfigurationArgs documentsMetadataConfiguration) {
            this.documentsMetadataConfiguration = Input.ofNullable(documentsMetadataConfiguration);
            return this;
        }

        public Builder setExclusionPatterns(@Nullable Input<List<String>> exclusionPatterns) {
            this.exclusionPatterns = exclusionPatterns;
            return this;
        }

        public Builder setExclusionPatterns(@Nullable List<String> exclusionPatterns) {
            this.exclusionPatterns = Input.ofNullable(exclusionPatterns);
            return this;
        }

        public Builder setInclusionPatterns(@Nullable Input<List<String>> inclusionPatterns) {
            this.inclusionPatterns = inclusionPatterns;
            return this;
        }

        public Builder setInclusionPatterns(@Nullable List<String> inclusionPatterns) {
            this.inclusionPatterns = Input.ofNullable(inclusionPatterns);
            return this;
        }

        public Builder setInclusionPrefixes(@Nullable Input<List<String>> inclusionPrefixes) {
            this.inclusionPrefixes = inclusionPrefixes;
            return this;
        }

        public Builder setInclusionPrefixes(@Nullable List<String> inclusionPrefixes) {
            this.inclusionPrefixes = Input.ofNullable(inclusionPrefixes);
            return this;
        }

        public DataSourceS3DataSourceConfigurationArgs build() {
            return new DataSourceS3DataSourceConfigurationArgs(accessControlListConfiguration, bucketName, documentsMetadataConfiguration, exclusionPatterns, inclusionPatterns, inclusionPrefixes);
        }
    }
}
