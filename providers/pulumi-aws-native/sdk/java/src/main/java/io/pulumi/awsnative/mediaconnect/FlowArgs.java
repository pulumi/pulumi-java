// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediaconnect;

import io.pulumi.awsnative.mediaconnect.inputs.FlowFailoverConfigArgs;
import io.pulumi.awsnative.mediaconnect.inputs.FlowSourceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlowArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowArgs Empty = new FlowArgs();

    /**
     * The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
     * 
     */
    @Import(name="availabilityZone")
      private final @Nullable Output<String> availabilityZone;

    public Output<String> getAvailabilityZone() {
        return this.availabilityZone == null ? Output.empty() : this.availabilityZone;
    }

    /**
     * The name of the flow.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The source of the flow.
     * 
     */
    @Import(name="source", required=true)
      private final Output<FlowSourceArgs> source;

    public Output<FlowSourceArgs> getSource() {
        return this.source;
    }

    /**
     * The source failover config of the flow.
     * 
     */
    @Import(name="sourceFailoverConfig")
      private final @Nullable Output<FlowFailoverConfigArgs> sourceFailoverConfig;

    public Output<FlowFailoverConfigArgs> getSourceFailoverConfig() {
        return this.sourceFailoverConfig == null ? Output.empty() : this.sourceFailoverConfig;
    }

    public FlowArgs(
        @Nullable Output<String> availabilityZone,
        @Nullable Output<String> name,
        Output<FlowSourceArgs> source,
        @Nullable Output<FlowFailoverConfigArgs> sourceFailoverConfig) {
        this.availabilityZone = availabilityZone;
        this.name = name;
        this.source = Objects.requireNonNull(source, "expected parameter 'source' to be non-null");
        this.sourceFailoverConfig = sourceFailoverConfig;
    }

    private FlowArgs() {
        this.availabilityZone = Output.empty();
        this.name = Output.empty();
        this.source = Output.empty();
        this.sourceFailoverConfig = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> availabilityZone;
        private @Nullable Output<String> name;
        private Output<FlowSourceArgs> source;
        private @Nullable Output<FlowFailoverConfigArgs> sourceFailoverConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.name = defaults.name;
    	      this.source = defaults.source;
    	      this.sourceFailoverConfig = defaults.sourceFailoverConfig;
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            this.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(@Nullable String availabilityZone) {
            this.availabilityZone = Output.ofNullable(availabilityZone);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder source(Output<FlowSourceArgs> source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder source(FlowSourceArgs source) {
            this.source = Output.of(Objects.requireNonNull(source));
            return this;
        }

        public Builder sourceFailoverConfig(@Nullable Output<FlowFailoverConfigArgs> sourceFailoverConfig) {
            this.sourceFailoverConfig = sourceFailoverConfig;
            return this;
        }

        public Builder sourceFailoverConfig(@Nullable FlowFailoverConfigArgs sourceFailoverConfig) {
            this.sourceFailoverConfig = Output.ofNullable(sourceFailoverConfig);
            return this;
        }
        public FlowArgs build() {
            return new FlowArgs(availabilityZone, name, source, sourceFailoverConfig);
        }
    }
}
