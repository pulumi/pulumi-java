// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ssm;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.ssm.DocumentArgs;
import io.pulumi.awsnative.ssm.enums.DocumentFormat;
import io.pulumi.awsnative.ssm.enums.DocumentType;
import io.pulumi.awsnative.ssm.outputs.DocumentAttachmentsSource;
import io.pulumi.awsnative.ssm.outputs.DocumentRequires;
import io.pulumi.awsnative.ssm.outputs.DocumentTag;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="aws-native:ssm:Document")
public class Document extends io.pulumi.resources.CustomResource {
    @OutputExport(name="attachments", type=List.class, parameters={DocumentAttachmentsSource.class})
    private Output</* @Nullable */ List<DocumentAttachmentsSource>> attachments;

    public Output</* @Nullable */ List<DocumentAttachmentsSource>> getAttachments() {
        return this.attachments;
    }
    @OutputExport(name="content", type=Object.class, parameters={})
    private Output<Object> content;

    public Output<Object> getContent() {
        return this.content;
    }
    @OutputExport(name="documentFormat", type=DocumentFormat.class, parameters={})
    private Output</* @Nullable */ DocumentFormat> documentFormat;

    public Output</* @Nullable */ DocumentFormat> getDocumentFormat() {
        return this.documentFormat;
    }
    @OutputExport(name="documentType", type=DocumentType.class, parameters={})
    private Output</* @Nullable */ DocumentType> documentType;

    public Output</* @Nullable */ DocumentType> getDocumentType() {
        return this.documentType;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    public Output</* @Nullable */ String> getName() {
        return this.name;
    }
    @OutputExport(name="requires", type=List.class, parameters={DocumentRequires.class})
    private Output</* @Nullable */ List<DocumentRequires>> requires;

    public Output</* @Nullable */ List<DocumentRequires>> getRequires() {
        return this.requires;
    }
    @OutputExport(name="tags", type=List.class, parameters={DocumentTag.class})
    private Output</* @Nullable */ List<DocumentTag>> tags;

    public Output</* @Nullable */ List<DocumentTag>> getTags() {
        return this.tags;
    }
    @OutputExport(name="targetType", type=String.class, parameters={})
    private Output</* @Nullable */ String> targetType;

    public Output</* @Nullable */ String> getTargetType() {
        return this.targetType;
    }
    @OutputExport(name="versionName", type=String.class, parameters={})
    private Output</* @Nullable */ String> versionName;

    public Output</* @Nullable */ String> getVersionName() {
        return this.versionName;
    }

    public Document(String name, DocumentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ssm:Document", name, args == null ? DocumentArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Document(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ssm:Document", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Document get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Document(name, id, options);
    }
}
