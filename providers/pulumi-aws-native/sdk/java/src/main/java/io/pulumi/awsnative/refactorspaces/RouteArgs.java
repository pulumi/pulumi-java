// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.refactorspaces;

import io.pulumi.awsnative.refactorspaces.enums.RouteType;
import io.pulumi.awsnative.refactorspaces.inputs.RouteTagArgs;
import io.pulumi.awsnative.refactorspaces.inputs.RouteUriPathRouteInputArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RouteArgs extends io.pulumi.resources.ResourceArgs {

    public static final RouteArgs Empty = new RouteArgs();

    @InputImport(name="applicationIdentifier", required=true)
    private final Input<String> applicationIdentifier;

    public Input<String> getApplicationIdentifier() {
        return this.applicationIdentifier;
    }

    @InputImport(name="environmentIdentifier", required=true)
    private final Input<String> environmentIdentifier;

    public Input<String> getEnvironmentIdentifier() {
        return this.environmentIdentifier;
    }

    @InputImport(name="routeType")
    private final @Nullable Input<RouteType> routeType;

    public Input<RouteType> getRouteType() {
        return this.routeType == null ? Input.empty() : this.routeType;
    }

    @InputImport(name="serviceIdentifier", required=true)
    private final Input<String> serviceIdentifier;

    public Input<String> getServiceIdentifier() {
        return this.serviceIdentifier;
    }

    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<List<RouteTagArgs>> tags;

    public Input<List<RouteTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="uriPathRoute")
    private final @Nullable Input<RouteUriPathRouteInputArgs> uriPathRoute;

    public Input<RouteUriPathRouteInputArgs> getUriPathRoute() {
        return this.uriPathRoute == null ? Input.empty() : this.uriPathRoute;
    }

    public RouteArgs(
        Input<String> applicationIdentifier,
        Input<String> environmentIdentifier,
        @Nullable Input<RouteType> routeType,
        Input<String> serviceIdentifier,
        @Nullable Input<List<RouteTagArgs>> tags,
        @Nullable Input<RouteUriPathRouteInputArgs> uriPathRoute) {
        this.applicationIdentifier = Objects.requireNonNull(applicationIdentifier, "expected parameter 'applicationIdentifier' to be non-null");
        this.environmentIdentifier = Objects.requireNonNull(environmentIdentifier, "expected parameter 'environmentIdentifier' to be non-null");
        this.routeType = routeType;
        this.serviceIdentifier = Objects.requireNonNull(serviceIdentifier, "expected parameter 'serviceIdentifier' to be non-null");
        this.tags = tags;
        this.uriPathRoute = uriPathRoute;
    }

    private RouteArgs() {
        this.applicationIdentifier = Input.empty();
        this.environmentIdentifier = Input.empty();
        this.routeType = Input.empty();
        this.serviceIdentifier = Input.empty();
        this.tags = Input.empty();
        this.uriPathRoute = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> applicationIdentifier;
        private Input<String> environmentIdentifier;
        private @Nullable Input<RouteType> routeType;
        private Input<String> serviceIdentifier;
        private @Nullable Input<List<RouteTagArgs>> tags;
        private @Nullable Input<RouteUriPathRouteInputArgs> uriPathRoute;

        public Builder() {
    	      // Empty
        }

        public Builder(RouteArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationIdentifier = defaults.applicationIdentifier;
    	      this.environmentIdentifier = defaults.environmentIdentifier;
    	      this.routeType = defaults.routeType;
    	      this.serviceIdentifier = defaults.serviceIdentifier;
    	      this.tags = defaults.tags;
    	      this.uriPathRoute = defaults.uriPathRoute;
        }

        public Builder setApplicationIdentifier(Input<String> applicationIdentifier) {
            this.applicationIdentifier = Objects.requireNonNull(applicationIdentifier);
            return this;
        }

        public Builder setApplicationIdentifier(String applicationIdentifier) {
            this.applicationIdentifier = Input.of(Objects.requireNonNull(applicationIdentifier));
            return this;
        }

        public Builder setEnvironmentIdentifier(Input<String> environmentIdentifier) {
            this.environmentIdentifier = Objects.requireNonNull(environmentIdentifier);
            return this;
        }

        public Builder setEnvironmentIdentifier(String environmentIdentifier) {
            this.environmentIdentifier = Input.of(Objects.requireNonNull(environmentIdentifier));
            return this;
        }

        public Builder setRouteType(@Nullable Input<RouteType> routeType) {
            this.routeType = routeType;
            return this;
        }

        public Builder setRouteType(@Nullable RouteType routeType) {
            this.routeType = Input.ofNullable(routeType);
            return this;
        }

        public Builder setServiceIdentifier(Input<String> serviceIdentifier) {
            this.serviceIdentifier = Objects.requireNonNull(serviceIdentifier);
            return this;
        }

        public Builder setServiceIdentifier(String serviceIdentifier) {
            this.serviceIdentifier = Input.of(Objects.requireNonNull(serviceIdentifier));
            return this;
        }

        public Builder setTags(@Nullable Input<List<RouteTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<RouteTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setUriPathRoute(@Nullable Input<RouteUriPathRouteInputArgs> uriPathRoute) {
            this.uriPathRoute = uriPathRoute;
            return this;
        }

        public Builder setUriPathRoute(@Nullable RouteUriPathRouteInputArgs uriPathRoute) {
            this.uriPathRoute = Input.ofNullable(uriPathRoute);
            return this;
        }

        public RouteArgs build() {
            return new RouteArgs(applicationIdentifier, environmentIdentifier, routeType, serviceIdentifier, tags, uriPathRoute);
        }
    }
}
