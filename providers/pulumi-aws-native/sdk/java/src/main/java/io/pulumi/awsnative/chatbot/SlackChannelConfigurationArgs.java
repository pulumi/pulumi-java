// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.chatbot;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SlackChannelConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final SlackChannelConfigurationArgs Empty = new SlackChannelConfigurationArgs();

    /**
     * The name of the configuration
     * 
     */
    @InputImport(name="configurationName", required=true)
      private final Output<String> configurationName;

    public Output<String> getConfigurationName() {
        return this.configurationName;
    }

    /**
     * The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied as a default if this is not set.
     * 
     */
    @InputImport(name="guardrailPolicies")
      private final @Nullable Output<List<String>> guardrailPolicies;

    public Output<List<String>> getGuardrailPolicies() {
        return this.guardrailPolicies == null ? Output.empty() : this.guardrailPolicies;
    }

    /**
     * The ARN of the IAM role that defines the permissions for AWS Chatbot
     * 
     */
    @InputImport(name="iamRoleArn", required=true)
      private final Output<String> iamRoleArn;

    public Output<String> getIamRoleArn() {
        return this.iamRoleArn;
    }

    /**
     * Specifies the logging level for this configuration:ERROR,INFO or NONE. This property affects the log entries pushed to Amazon CloudWatch logs
     * 
     */
    @InputImport(name="loggingLevel")
      private final @Nullable Output<String> loggingLevel;

    public Output<String> getLoggingLevel() {
        return this.loggingLevel == null ? Output.empty() : this.loggingLevel;
    }

    /**
     * The id of the Slack channel
     * 
     */
    @InputImport(name="slackChannelId", required=true)
      private final Output<String> slackChannelId;

    public Output<String> getSlackChannelId() {
        return this.slackChannelId;
    }

    /**
     * The id of the Slack workspace
     * 
     */
    @InputImport(name="slackWorkspaceId", required=true)
      private final Output<String> slackWorkspaceId;

    public Output<String> getSlackWorkspaceId() {
        return this.slackWorkspaceId;
    }

    /**
     * ARNs of SNS topics which delivers notifications to AWS Chatbot, for example CloudWatch alarm notifications.
     * 
     */
    @InputImport(name="snsTopicArns")
      private final @Nullable Output<List<String>> snsTopicArns;

    public Output<List<String>> getSnsTopicArns() {
        return this.snsTopicArns == null ? Output.empty() : this.snsTopicArns;
    }

    /**
     * Enables use of a user role requirement in your chat configuration
     * 
     */
    @InputImport(name="userRoleRequired")
      private final @Nullable Output<Boolean> userRoleRequired;

    public Output<Boolean> getUserRoleRequired() {
        return this.userRoleRequired == null ? Output.empty() : this.userRoleRequired;
    }

    public SlackChannelConfigurationArgs(
        Output<String> configurationName,
        @Nullable Output<List<String>> guardrailPolicies,
        Output<String> iamRoleArn,
        @Nullable Output<String> loggingLevel,
        Output<String> slackChannelId,
        Output<String> slackWorkspaceId,
        @Nullable Output<List<String>> snsTopicArns,
        @Nullable Output<Boolean> userRoleRequired) {
        this.configurationName = Objects.requireNonNull(configurationName, "expected parameter 'configurationName' to be non-null");
        this.guardrailPolicies = guardrailPolicies;
        this.iamRoleArn = Objects.requireNonNull(iamRoleArn, "expected parameter 'iamRoleArn' to be non-null");
        this.loggingLevel = loggingLevel;
        this.slackChannelId = Objects.requireNonNull(slackChannelId, "expected parameter 'slackChannelId' to be non-null");
        this.slackWorkspaceId = Objects.requireNonNull(slackWorkspaceId, "expected parameter 'slackWorkspaceId' to be non-null");
        this.snsTopicArns = snsTopicArns;
        this.userRoleRequired = userRoleRequired;
    }

    private SlackChannelConfigurationArgs() {
        this.configurationName = Output.empty();
        this.guardrailPolicies = Output.empty();
        this.iamRoleArn = Output.empty();
        this.loggingLevel = Output.empty();
        this.slackChannelId = Output.empty();
        this.slackWorkspaceId = Output.empty();
        this.snsTopicArns = Output.empty();
        this.userRoleRequired = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SlackChannelConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> configurationName;
        private @Nullable Output<List<String>> guardrailPolicies;
        private Output<String> iamRoleArn;
        private @Nullable Output<String> loggingLevel;
        private Output<String> slackChannelId;
        private Output<String> slackWorkspaceId;
        private @Nullable Output<List<String>> snsTopicArns;
        private @Nullable Output<Boolean> userRoleRequired;

        public Builder() {
    	      // Empty
        }

        public Builder(SlackChannelConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationName = defaults.configurationName;
    	      this.guardrailPolicies = defaults.guardrailPolicies;
    	      this.iamRoleArn = defaults.iamRoleArn;
    	      this.loggingLevel = defaults.loggingLevel;
    	      this.slackChannelId = defaults.slackChannelId;
    	      this.slackWorkspaceId = defaults.slackWorkspaceId;
    	      this.snsTopicArns = defaults.snsTopicArns;
    	      this.userRoleRequired = defaults.userRoleRequired;
        }

        public Builder configurationName(Output<String> configurationName) {
            this.configurationName = Objects.requireNonNull(configurationName);
            return this;
        }

        public Builder configurationName(String configurationName) {
            this.configurationName = Output.of(Objects.requireNonNull(configurationName));
            return this;
        }

        public Builder guardrailPolicies(@Nullable Output<List<String>> guardrailPolicies) {
            this.guardrailPolicies = guardrailPolicies;
            return this;
        }

        public Builder guardrailPolicies(@Nullable List<String> guardrailPolicies) {
            this.guardrailPolicies = Output.ofNullable(guardrailPolicies);
            return this;
        }

        public Builder iamRoleArn(Output<String> iamRoleArn) {
            this.iamRoleArn = Objects.requireNonNull(iamRoleArn);
            return this;
        }

        public Builder iamRoleArn(String iamRoleArn) {
            this.iamRoleArn = Output.of(Objects.requireNonNull(iamRoleArn));
            return this;
        }

        public Builder loggingLevel(@Nullable Output<String> loggingLevel) {
            this.loggingLevel = loggingLevel;
            return this;
        }

        public Builder loggingLevel(@Nullable String loggingLevel) {
            this.loggingLevel = Output.ofNullable(loggingLevel);
            return this;
        }

        public Builder slackChannelId(Output<String> slackChannelId) {
            this.slackChannelId = Objects.requireNonNull(slackChannelId);
            return this;
        }

        public Builder slackChannelId(String slackChannelId) {
            this.slackChannelId = Output.of(Objects.requireNonNull(slackChannelId));
            return this;
        }

        public Builder slackWorkspaceId(Output<String> slackWorkspaceId) {
            this.slackWorkspaceId = Objects.requireNonNull(slackWorkspaceId);
            return this;
        }

        public Builder slackWorkspaceId(String slackWorkspaceId) {
            this.slackWorkspaceId = Output.of(Objects.requireNonNull(slackWorkspaceId));
            return this;
        }

        public Builder snsTopicArns(@Nullable Output<List<String>> snsTopicArns) {
            this.snsTopicArns = snsTopicArns;
            return this;
        }

        public Builder snsTopicArns(@Nullable List<String> snsTopicArns) {
            this.snsTopicArns = Output.ofNullable(snsTopicArns);
            return this;
        }

        public Builder userRoleRequired(@Nullable Output<Boolean> userRoleRequired) {
            this.userRoleRequired = userRoleRequired;
            return this;
        }

        public Builder userRoleRequired(@Nullable Boolean userRoleRequired) {
            this.userRoleRequired = Output.ofNullable(userRoleRequired);
            return this;
        }
        public SlackChannelConfigurationArgs build() {
            return new SlackChannelConfigurationArgs(configurationName, guardrailPolicies, iamRoleArn, loggingLevel, slackChannelId, slackWorkspaceId, snsTopicArns, userRoleRequired);
        }
    }
}
