// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediaconnect.inputs;

import io.pulumi.awsnative.mediaconnect.enums.FlowOutputEncryptionAlgorithm;
import io.pulumi.awsnative.mediaconnect.enums.FlowOutputEncryptionKeyType;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Information about the encryption of the flow.
 * 
 */
public final class FlowOutputEncryptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowOutputEncryptionArgs Empty = new FlowOutputEncryptionArgs();

    /**
     * The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
     * 
     */
    @Import(name="algorithm")
      private final @Nullable Output<FlowOutputEncryptionAlgorithm> algorithm;

    public Output<FlowOutputEncryptionAlgorithm> getAlgorithm() {
        return this.algorithm == null ? Output.empty() : this.algorithm;
    }

    /**
     * The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
     * 
     */
    @Import(name="keyType")
      private final @Nullable Output<FlowOutputEncryptionKeyType> keyType;

    public Output<FlowOutputEncryptionKeyType> getKeyType() {
        return this.keyType == null ? Output.empty() : this.keyType;
    }

    /**
     * The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).
     * 
     */
    @Import(name="roleArn", required=true)
      private final Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn;
    }

    /**
     *  The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.
     * 
     */
    @Import(name="secretArn", required=true)
      private final Output<String> secretArn;

    public Output<String> getSecretArn() {
        return this.secretArn;
    }

    public FlowOutputEncryptionArgs(
        @Nullable Output<FlowOutputEncryptionAlgorithm> algorithm,
        @Nullable Output<FlowOutputEncryptionKeyType> keyType,
        Output<String> roleArn,
        Output<String> secretArn) {
        this.algorithm = algorithm;
        this.keyType = keyType;
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.secretArn = Objects.requireNonNull(secretArn, "expected parameter 'secretArn' to be non-null");
    }

    private FlowOutputEncryptionArgs() {
        this.algorithm = Output.empty();
        this.keyType = Output.empty();
        this.roleArn = Output.empty();
        this.secretArn = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowOutputEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<FlowOutputEncryptionAlgorithm> algorithm;
        private @Nullable Output<FlowOutputEncryptionKeyType> keyType;
        private Output<String> roleArn;
        private Output<String> secretArn;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowOutputEncryptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.keyType = defaults.keyType;
    	      this.roleArn = defaults.roleArn;
    	      this.secretArn = defaults.secretArn;
        }

        public Builder algorithm(@Nullable Output<FlowOutputEncryptionAlgorithm> algorithm) {
            this.algorithm = algorithm;
            return this;
        }
        public Builder algorithm(@Nullable FlowOutputEncryptionAlgorithm algorithm) {
            this.algorithm = Output.ofNullable(algorithm);
            return this;
        }
        public Builder keyType(@Nullable Output<FlowOutputEncryptionKeyType> keyType) {
            this.keyType = keyType;
            return this;
        }
        public Builder keyType(@Nullable FlowOutputEncryptionKeyType keyType) {
            this.keyType = Output.ofNullable(keyType);
            return this;
        }
        public Builder roleArn(Output<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        public Builder roleArn(String roleArn) {
            this.roleArn = Output.of(Objects.requireNonNull(roleArn));
            return this;
        }
        public Builder secretArn(Output<String> secretArn) {
            this.secretArn = Objects.requireNonNull(secretArn);
            return this;
        }
        public Builder secretArn(String secretArn) {
            this.secretArn = Output.of(Objects.requireNonNull(secretArn));
            return this;
        }        public FlowOutputEncryptionArgs build() {
            return new FlowOutputEncryptionArgs(algorithm, keyType, roleArn, secretArn);
        }
    }
}
