// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.sagemaker.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class FeatureGroupDataCatalogConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final FeatureGroupDataCatalogConfigArgs Empty = new FeatureGroupDataCatalogConfigArgs();

    @InputImport(name="catalog", required=true)
      private final Input<String> catalog;

    public Input<String> getCatalog() {
        return this.catalog;
    }

    @InputImport(name="database", required=true)
      private final Input<String> database;

    public Input<String> getDatabase() {
        return this.database;
    }

    @InputImport(name="tableName", required=true)
      private final Input<String> tableName;

    public Input<String> getTableName() {
        return this.tableName;
    }

    public FeatureGroupDataCatalogConfigArgs(
        Input<String> catalog,
        Input<String> database,
        Input<String> tableName) {
        this.catalog = Objects.requireNonNull(catalog, "expected parameter 'catalog' to be non-null");
        this.database = Objects.requireNonNull(database, "expected parameter 'database' to be non-null");
        this.tableName = Objects.requireNonNull(tableName, "expected parameter 'tableName' to be non-null");
    }

    private FeatureGroupDataCatalogConfigArgs() {
        this.catalog = Input.empty();
        this.database = Input.empty();
        this.tableName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeatureGroupDataCatalogConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> catalog;
        private Input<String> database;
        private Input<String> tableName;

        public Builder() {
    	      // Empty
        }

        public Builder(FeatureGroupDataCatalogConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalog = defaults.catalog;
    	      this.database = defaults.database;
    	      this.tableName = defaults.tableName;
        }

        public Builder setCatalog(Input<String> catalog) {
            this.catalog = Objects.requireNonNull(catalog);
            return this;
        }

        public Builder setCatalog(String catalog) {
            this.catalog = Input.of(Objects.requireNonNull(catalog));
            return this;
        }

        public Builder setDatabase(Input<String> database) {
            this.database = Objects.requireNonNull(database);
            return this;
        }

        public Builder setDatabase(String database) {
            this.database = Input.of(Objects.requireNonNull(database));
            return this;
        }

        public Builder setTableName(Input<String> tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }

        public Builder setTableName(String tableName) {
            this.tableName = Input.of(Objects.requireNonNull(tableName));
            return this;
        }
        public FeatureGroupDataCatalogConfigArgs build() {
            return new FeatureGroupDataCatalogConfigArgs(catalog, database, tableName);
        }
    }
}
