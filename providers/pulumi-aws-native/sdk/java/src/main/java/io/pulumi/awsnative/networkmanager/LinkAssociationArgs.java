// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.networkmanager;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class LinkAssociationArgs extends io.pulumi.resources.ResourceArgs {

    public static final LinkAssociationArgs Empty = new LinkAssociationArgs();

    /**
     * The ID of the device
     * 
     */
    @Import(name="deviceId", required=true)
      private final Output<String> deviceId;

    public Output<String> getDeviceId() {
        return this.deviceId;
    }

    /**
     * The ID of the global network.
     * 
     */
    @Import(name="globalNetworkId", required=true)
      private final Output<String> globalNetworkId;

    public Output<String> getGlobalNetworkId() {
        return this.globalNetworkId;
    }

    /**
     * The ID of the link
     * 
     */
    @Import(name="linkId", required=true)
      private final Output<String> linkId;

    public Output<String> getLinkId() {
        return this.linkId;
    }

    public LinkAssociationArgs(
        Output<String> deviceId,
        Output<String> globalNetworkId,
        Output<String> linkId) {
        this.deviceId = Objects.requireNonNull(deviceId, "expected parameter 'deviceId' to be non-null");
        this.globalNetworkId = Objects.requireNonNull(globalNetworkId, "expected parameter 'globalNetworkId' to be non-null");
        this.linkId = Objects.requireNonNull(linkId, "expected parameter 'linkId' to be non-null");
    }

    private LinkAssociationArgs() {
        this.deviceId = Output.empty();
        this.globalNetworkId = Output.empty();
        this.linkId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinkAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> deviceId;
        private Output<String> globalNetworkId;
        private Output<String> linkId;

        public Builder() {
    	      // Empty
        }

        public Builder(LinkAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceId = defaults.deviceId;
    	      this.globalNetworkId = defaults.globalNetworkId;
    	      this.linkId = defaults.linkId;
        }

        public Builder deviceId(Output<String> deviceId) {
            this.deviceId = Objects.requireNonNull(deviceId);
            return this;
        }

        public Builder deviceId(String deviceId) {
            this.deviceId = Output.of(Objects.requireNonNull(deviceId));
            return this;
        }

        public Builder globalNetworkId(Output<String> globalNetworkId) {
            this.globalNetworkId = Objects.requireNonNull(globalNetworkId);
            return this;
        }

        public Builder globalNetworkId(String globalNetworkId) {
            this.globalNetworkId = Output.of(Objects.requireNonNull(globalNetworkId));
            return this;
        }

        public Builder linkId(Output<String> linkId) {
            this.linkId = Objects.requireNonNull(linkId);
            return this;
        }

        public Builder linkId(String linkId) {
            this.linkId = Output.of(Objects.requireNonNull(linkId));
            return this;
        }
        public LinkAssociationArgs build() {
            return new LinkAssociationArgs(deviceId, globalNetworkId, linkId);
        }
    }
}
