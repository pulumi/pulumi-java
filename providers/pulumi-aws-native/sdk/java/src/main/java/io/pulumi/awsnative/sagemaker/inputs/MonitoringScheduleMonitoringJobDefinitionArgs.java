// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.sagemaker.inputs;

import io.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleBaselineConfigArgs;
import io.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleMonitoringAppSpecificationArgs;
import io.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleMonitoringInputArgs;
import io.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleMonitoringOutputConfigArgs;
import io.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleMonitoringResourcesArgs;
import io.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleNetworkConfigArgs;
import io.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleStoppingConditionArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines the monitoring job.
 * 
 */
public final class MonitoringScheduleMonitoringJobDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final MonitoringScheduleMonitoringJobDefinitionArgs Empty = new MonitoringScheduleMonitoringJobDefinitionArgs();

    @InputImport(name="baselineConfig")
      private final @Nullable Output<MonitoringScheduleBaselineConfigArgs> baselineConfig;

    public Output<MonitoringScheduleBaselineConfigArgs> getBaselineConfig() {
        return this.baselineConfig == null ? Output.empty() : this.baselineConfig;
    }

    /**
     * Sets the environment variables in the Docker container
     * 
     */
    @InputImport(name="environment")
      private final @Nullable Output<Object> environment;

    public Output<Object> getEnvironment() {
        return this.environment == null ? Output.empty() : this.environment;
    }

    @InputImport(name="monitoringAppSpecification", required=true)
      private final Output<MonitoringScheduleMonitoringAppSpecificationArgs> monitoringAppSpecification;

    public Output<MonitoringScheduleMonitoringAppSpecificationArgs> getMonitoringAppSpecification() {
        return this.monitoringAppSpecification;
    }

    @InputImport(name="monitoringInputs", required=true)
      private final Output<List<MonitoringScheduleMonitoringInputArgs>> monitoringInputs;

    public Output<List<MonitoringScheduleMonitoringInputArgs>> getMonitoringInputs() {
        return this.monitoringInputs;
    }

    @InputImport(name="monitoringOutputConfig", required=true)
      private final Output<MonitoringScheduleMonitoringOutputConfigArgs> monitoringOutputConfig;

    public Output<MonitoringScheduleMonitoringOutputConfigArgs> getMonitoringOutputConfig() {
        return this.monitoringOutputConfig;
    }

    @InputImport(name="monitoringResources", required=true)
      private final Output<MonitoringScheduleMonitoringResourcesArgs> monitoringResources;

    public Output<MonitoringScheduleMonitoringResourcesArgs> getMonitoringResources() {
        return this.monitoringResources;
    }

    @InputImport(name="networkConfig")
      private final @Nullable Output<MonitoringScheduleNetworkConfigArgs> networkConfig;

    public Output<MonitoringScheduleNetworkConfigArgs> getNetworkConfig() {
        return this.networkConfig == null ? Output.empty() : this.networkConfig;
    }

    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     * 
     */
    @InputImport(name="roleArn", required=true)
      private final Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn;
    }

    @InputImport(name="stoppingCondition")
      private final @Nullable Output<MonitoringScheduleStoppingConditionArgs> stoppingCondition;

    public Output<MonitoringScheduleStoppingConditionArgs> getStoppingCondition() {
        return this.stoppingCondition == null ? Output.empty() : this.stoppingCondition;
    }

    public MonitoringScheduleMonitoringJobDefinitionArgs(
        @Nullable Output<MonitoringScheduleBaselineConfigArgs> baselineConfig,
        @Nullable Output<Object> environment,
        Output<MonitoringScheduleMonitoringAppSpecificationArgs> monitoringAppSpecification,
        Output<List<MonitoringScheduleMonitoringInputArgs>> monitoringInputs,
        Output<MonitoringScheduleMonitoringOutputConfigArgs> monitoringOutputConfig,
        Output<MonitoringScheduleMonitoringResourcesArgs> monitoringResources,
        @Nullable Output<MonitoringScheduleNetworkConfigArgs> networkConfig,
        Output<String> roleArn,
        @Nullable Output<MonitoringScheduleStoppingConditionArgs> stoppingCondition) {
        this.baselineConfig = baselineConfig;
        this.environment = environment;
        this.monitoringAppSpecification = Objects.requireNonNull(monitoringAppSpecification, "expected parameter 'monitoringAppSpecification' to be non-null");
        this.monitoringInputs = Objects.requireNonNull(monitoringInputs, "expected parameter 'monitoringInputs' to be non-null");
        this.monitoringOutputConfig = Objects.requireNonNull(monitoringOutputConfig, "expected parameter 'monitoringOutputConfig' to be non-null");
        this.monitoringResources = Objects.requireNonNull(monitoringResources, "expected parameter 'monitoringResources' to be non-null");
        this.networkConfig = networkConfig;
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.stoppingCondition = stoppingCondition;
    }

    private MonitoringScheduleMonitoringJobDefinitionArgs() {
        this.baselineConfig = Output.empty();
        this.environment = Output.empty();
        this.monitoringAppSpecification = Output.empty();
        this.monitoringInputs = Output.empty();
        this.monitoringOutputConfig = Output.empty();
        this.monitoringResources = Output.empty();
        this.networkConfig = Output.empty();
        this.roleArn = Output.empty();
        this.stoppingCondition = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringScheduleMonitoringJobDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<MonitoringScheduleBaselineConfigArgs> baselineConfig;
        private @Nullable Output<Object> environment;
        private Output<MonitoringScheduleMonitoringAppSpecificationArgs> monitoringAppSpecification;
        private Output<List<MonitoringScheduleMonitoringInputArgs>> monitoringInputs;
        private Output<MonitoringScheduleMonitoringOutputConfigArgs> monitoringOutputConfig;
        private Output<MonitoringScheduleMonitoringResourcesArgs> monitoringResources;
        private @Nullable Output<MonitoringScheduleNetworkConfigArgs> networkConfig;
        private Output<String> roleArn;
        private @Nullable Output<MonitoringScheduleStoppingConditionArgs> stoppingCondition;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoringScheduleMonitoringJobDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineConfig = defaults.baselineConfig;
    	      this.environment = defaults.environment;
    	      this.monitoringAppSpecification = defaults.monitoringAppSpecification;
    	      this.monitoringInputs = defaults.monitoringInputs;
    	      this.monitoringOutputConfig = defaults.monitoringOutputConfig;
    	      this.monitoringResources = defaults.monitoringResources;
    	      this.networkConfig = defaults.networkConfig;
    	      this.roleArn = defaults.roleArn;
    	      this.stoppingCondition = defaults.stoppingCondition;
        }

        public Builder baselineConfig(@Nullable Output<MonitoringScheduleBaselineConfigArgs> baselineConfig) {
            this.baselineConfig = baselineConfig;
            return this;
        }

        public Builder baselineConfig(@Nullable MonitoringScheduleBaselineConfigArgs baselineConfig) {
            this.baselineConfig = Output.ofNullable(baselineConfig);
            return this;
        }

        public Builder environment(@Nullable Output<Object> environment) {
            this.environment = environment;
            return this;
        }

        public Builder environment(@Nullable Object environment) {
            this.environment = Output.ofNullable(environment);
            return this;
        }

        public Builder monitoringAppSpecification(Output<MonitoringScheduleMonitoringAppSpecificationArgs> monitoringAppSpecification) {
            this.monitoringAppSpecification = Objects.requireNonNull(monitoringAppSpecification);
            return this;
        }

        public Builder monitoringAppSpecification(MonitoringScheduleMonitoringAppSpecificationArgs monitoringAppSpecification) {
            this.monitoringAppSpecification = Output.of(Objects.requireNonNull(monitoringAppSpecification));
            return this;
        }

        public Builder monitoringInputs(Output<List<MonitoringScheduleMonitoringInputArgs>> monitoringInputs) {
            this.monitoringInputs = Objects.requireNonNull(monitoringInputs);
            return this;
        }

        public Builder monitoringInputs(List<MonitoringScheduleMonitoringInputArgs> monitoringInputs) {
            this.monitoringInputs = Output.of(Objects.requireNonNull(monitoringInputs));
            return this;
        }

        public Builder monitoringOutputConfig(Output<MonitoringScheduleMonitoringOutputConfigArgs> monitoringOutputConfig) {
            this.monitoringOutputConfig = Objects.requireNonNull(monitoringOutputConfig);
            return this;
        }

        public Builder monitoringOutputConfig(MonitoringScheduleMonitoringOutputConfigArgs monitoringOutputConfig) {
            this.monitoringOutputConfig = Output.of(Objects.requireNonNull(monitoringOutputConfig));
            return this;
        }

        public Builder monitoringResources(Output<MonitoringScheduleMonitoringResourcesArgs> monitoringResources) {
            this.monitoringResources = Objects.requireNonNull(monitoringResources);
            return this;
        }

        public Builder monitoringResources(MonitoringScheduleMonitoringResourcesArgs monitoringResources) {
            this.monitoringResources = Output.of(Objects.requireNonNull(monitoringResources));
            return this;
        }

        public Builder networkConfig(@Nullable Output<MonitoringScheduleNetworkConfigArgs> networkConfig) {
            this.networkConfig = networkConfig;
            return this;
        }

        public Builder networkConfig(@Nullable MonitoringScheduleNetworkConfigArgs networkConfig) {
            this.networkConfig = Output.ofNullable(networkConfig);
            return this;
        }

        public Builder roleArn(Output<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder roleArn(String roleArn) {
            this.roleArn = Output.of(Objects.requireNonNull(roleArn));
            return this;
        }

        public Builder stoppingCondition(@Nullable Output<MonitoringScheduleStoppingConditionArgs> stoppingCondition) {
            this.stoppingCondition = stoppingCondition;
            return this;
        }

        public Builder stoppingCondition(@Nullable MonitoringScheduleStoppingConditionArgs stoppingCondition) {
            this.stoppingCondition = Output.ofNullable(stoppingCondition);
            return this;
        }
        public MonitoringScheduleMonitoringJobDefinitionArgs build() {
            return new MonitoringScheduleMonitoringJobDefinitionArgs(baselineConfig, environment, monitoringAppSpecification, monitoringInputs, monitoringOutputConfig, monitoringResources, networkConfig, roleArn, stoppingCondition);
        }
    }
}
