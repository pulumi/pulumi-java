// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lightsail.outputs;

import io.pulumi.awsnative.lightsail.outputs.InstanceAddOn;
import io.pulumi.awsnative.lightsail.outputs.InstanceHardware;
import io.pulumi.awsnative.lightsail.outputs.InstanceLocation;
import io.pulumi.awsnative.lightsail.outputs.InstanceNetworking;
import io.pulumi.awsnative.lightsail.outputs.InstanceState;
import io.pulumi.awsnative.lightsail.outputs.InstanceTag;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetInstanceResult {
    private final @Nullable List<InstanceAddOn> addOns;
    private final @Nullable InstanceHardware hardware;
    private final @Nullable String instanceArn;
    private final @Nullable Boolean isStaticIp;
    private final @Nullable String keyPairName;
    private final @Nullable InstanceLocation location;
    private final @Nullable InstanceNetworking networking;
    private final @Nullable String privateIpAddress;
    private final @Nullable String publicIpAddress;
    private final @Nullable String resourceType;
    private final @Nullable String sshKeyName;
    private final @Nullable InstanceState state;
    private final @Nullable String supportCode;
    private final @Nullable List<InstanceTag> tags;
    private final @Nullable String userData;
    private final @Nullable String userName;

    @OutputCustomType.Constructor({"addOns","hardware","instanceArn","isStaticIp","keyPairName","location","networking","privateIpAddress","publicIpAddress","resourceType","sshKeyName","state","supportCode","tags","userData","userName"})
    private GetInstanceResult(
        @Nullable List<InstanceAddOn> addOns,
        @Nullable InstanceHardware hardware,
        @Nullable String instanceArn,
        @Nullable Boolean isStaticIp,
        @Nullable String keyPairName,
        @Nullable InstanceLocation location,
        @Nullable InstanceNetworking networking,
        @Nullable String privateIpAddress,
        @Nullable String publicIpAddress,
        @Nullable String resourceType,
        @Nullable String sshKeyName,
        @Nullable InstanceState state,
        @Nullable String supportCode,
        @Nullable List<InstanceTag> tags,
        @Nullable String userData,
        @Nullable String userName) {
        this.addOns = addOns;
        this.hardware = hardware;
        this.instanceArn = instanceArn;
        this.isStaticIp = isStaticIp;
        this.keyPairName = keyPairName;
        this.location = location;
        this.networking = networking;
        this.privateIpAddress = privateIpAddress;
        this.publicIpAddress = publicIpAddress;
        this.resourceType = resourceType;
        this.sshKeyName = sshKeyName;
        this.state = state;
        this.supportCode = supportCode;
        this.tags = tags;
        this.userData = userData;
        this.userName = userName;
    }

    public List<InstanceAddOn> getAddOns() {
        return this.addOns == null ? List.of() : this.addOns;
    }
    public Optional<InstanceHardware> getHardware() {
        return Optional.ofNullable(this.hardware);
    }
    public Optional<String> getInstanceArn() {
        return Optional.ofNullable(this.instanceArn);
    }
    public Optional<Boolean> getIsStaticIp() {
        return Optional.ofNullable(this.isStaticIp);
    }
    public Optional<String> getKeyPairName() {
        return Optional.ofNullable(this.keyPairName);
    }
    public Optional<InstanceLocation> getLocation() {
        return Optional.ofNullable(this.location);
    }
    public Optional<InstanceNetworking> getNetworking() {
        return Optional.ofNullable(this.networking);
    }
    public Optional<String> getPrivateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }
    public Optional<String> getPublicIpAddress() {
        return Optional.ofNullable(this.publicIpAddress);
    }
    public Optional<String> getPropResourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    public Optional<String> getSshKeyName() {
        return Optional.ofNullable(this.sshKeyName);
    }
    public Optional<InstanceState> getState() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> getSupportCode() {
        return Optional.ofNullable(this.supportCode);
    }
    public List<InstanceTag> getTags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<String> getUserData() {
        return Optional.ofNullable(this.userData);
    }
    public Optional<String> getUserName() {
        return Optional.ofNullable(this.userName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<InstanceAddOn> addOns;
        private @Nullable InstanceHardware hardware;
        private @Nullable String instanceArn;
        private @Nullable Boolean isStaticIp;
        private @Nullable String keyPairName;
        private @Nullable InstanceLocation location;
        private @Nullable InstanceNetworking networking;
        private @Nullable String privateIpAddress;
        private @Nullable String publicIpAddress;
        private @Nullable String resourceType;
        private @Nullable String sshKeyName;
        private @Nullable InstanceState state;
        private @Nullable String supportCode;
        private @Nullable List<InstanceTag> tags;
        private @Nullable String userData;
        private @Nullable String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addOns = defaults.addOns;
    	      this.hardware = defaults.hardware;
    	      this.instanceArn = defaults.instanceArn;
    	      this.isStaticIp = defaults.isStaticIp;
    	      this.keyPairName = defaults.keyPairName;
    	      this.location = defaults.location;
    	      this.networking = defaults.networking;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.publicIpAddress = defaults.publicIpAddress;
    	      this.resourceType = defaults.resourceType;
    	      this.sshKeyName = defaults.sshKeyName;
    	      this.state = defaults.state;
    	      this.supportCode = defaults.supportCode;
    	      this.tags = defaults.tags;
    	      this.userData = defaults.userData;
    	      this.userName = defaults.userName;
        }

        public Builder setAddOns(@Nullable List<InstanceAddOn> addOns) {
            this.addOns = addOns;
            return this;
        }

        public Builder setHardware(@Nullable InstanceHardware hardware) {
            this.hardware = hardware;
            return this;
        }

        public Builder setInstanceArn(@Nullable String instanceArn) {
            this.instanceArn = instanceArn;
            return this;
        }

        public Builder setIsStaticIp(@Nullable Boolean isStaticIp) {
            this.isStaticIp = isStaticIp;
            return this;
        }

        public Builder setKeyPairName(@Nullable String keyPairName) {
            this.keyPairName = keyPairName;
            return this;
        }

        public Builder setLocation(@Nullable InstanceLocation location) {
            this.location = location;
            return this;
        }

        public Builder setNetworking(@Nullable InstanceNetworking networking) {
            this.networking = networking;
            return this;
        }

        public Builder setPrivateIpAddress(@Nullable String privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }

        public Builder setPublicIpAddress(@Nullable String publicIpAddress) {
            this.publicIpAddress = publicIpAddress;
            return this;
        }

        public Builder setResourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        public Builder setSshKeyName(@Nullable String sshKeyName) {
            this.sshKeyName = sshKeyName;
            return this;
        }

        public Builder setState(@Nullable InstanceState state) {
            this.state = state;
            return this;
        }

        public Builder setSupportCode(@Nullable String supportCode) {
            this.supportCode = supportCode;
            return this;
        }

        public Builder setTags(@Nullable List<InstanceTag> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setUserData(@Nullable String userData) {
            this.userData = userData;
            return this;
        }

        public Builder setUserName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }

        public GetInstanceResult build() {
            return new GetInstanceResult(addOns, hardware, instanceArn, isStaticIp, keyPairName, location, networking, privateIpAddress, publicIpAddress, resourceType, sshKeyName, state, supportCode, tags, userData, userName);
        }
    }
}
