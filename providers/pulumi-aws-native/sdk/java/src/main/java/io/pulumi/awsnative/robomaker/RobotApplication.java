// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.robomaker;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.robomaker.RobotApplicationArgs;
import io.pulumi.awsnative.robomaker.outputs.RobotApplicationRobotSoftwareSuite;
import io.pulumi.awsnative.robomaker.outputs.RobotApplicationSourceConfig;
import io.pulumi.awsnative.robomaker.outputs.RobotApplicationTags;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var basicRobotApplication = new AwsNative.RoboMaker.RobotApplication("basicRobotApplication", new AwsNative.RoboMaker.RobotApplicationArgs
 *         {
 *             Name = "MyRobotApplication",
 *             Sources = 
 *             {
 *                 new AwsNative.RoboMaker.Inputs.RobotApplicationSourceConfigArgs
 *                 {
 *                     S3Bucket = "my-bucket",
 *                     S3Key = "robot_bundle_x86.tar.gz",
 *                     Architecture = "ARMHF",
 *                 },
 *             },
 *             RobotSoftwareSuite = new AwsNative.RoboMaker.Inputs.RobotApplicationRobotSoftwareSuiteArgs
 *             {
 *                 Name = "ROS",
 *                 Version = "Kinetic",
 *             },
 *             Tags = new AwsNative.RoboMaker.Inputs.RobotApplicationTagsArgs
 *             {
 *                 Name = "BasicRobotApplication",
 *                 Type = "CFN",
 *             },
 *         });
 *         this.RobotApplication = "BasicRobotApplication";
 *     }
 * 
 *     [Output("robotApplication")]
 *     public Output<string> RobotApplication { get; set; }
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/robomaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := robomaker.NewRobotApplication(ctx, "basicRobotApplication", &robomaker.RobotApplicationArgs{
 * 			Name: pulumi.String("MyRobotApplication"),
 * 			Sources: []robomaker.RobotApplicationSourceConfigArgs{
 * 				&robomaker.RobotApplicationSourceConfigArgs{
 * 					S3Bucket:     pulumi.String("my-bucket"),
 * 					S3Key:        pulumi.String("robot_bundle_x86.tar.gz"),
 * 					Architecture: "ARMHF",
 * 				},
 * 			},
 * 			RobotSoftwareSuite: &robomaker.RobotApplicationRobotSoftwareSuiteArgs{
 * 				Name:    "ROS",
 * 				Version: "Kinetic",
 * 			},
 * 			Tags: &robomaker.RobotApplicationTagsArgs{
 * 				Name: "BasicRobotApplication",
 * 				Type: "CFN",
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		ctx.Export("robotApplication", "BasicRobotApplication")
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     sources: [{
 *         s3Bucket: "my-bucket",
 *         s3Key: "robot_bundle_x86.tar.gz",
 *         architecture: "ARMHF",
 *     }],
 *     robotSoftwareSuite: {
 *         name: "ROS",
 *         version: "Kinetic",
 *     },
 *     tags: {
 *         name: "BasicRobotApplication",
 *         type: "CFN",
 *     },
 * });
 * export const robotApplication = "BasicRobotApplication";
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * basic_robot_application = aws_native.robomaker.RobotApplication("basicRobotApplication",
 *     name="MyRobotApplication",
 *     sources=[aws_native.robomaker.RobotApplicationSourceConfigArgs(
 *         s3_bucket="my-bucket",
 *         s3_key="robot_bundle_x86.tar.gz",
 *         architecture="ARMHF",
 *     )],
 *     robot_software_suite=aws_native.robomaker.RobotApplicationRobotSoftwareSuiteArgs(
 *         name="ROS",
 *         version="Kinetic",
 *     ),
 *     tags=aws_native.robomaker.RobotApplicationTagsArgs(
 *         name="BasicRobotApplication",
 *         type="CFN",
 *     ))
 * pulumi.export("robotApplication", "BasicRobotApplication")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var basicRobotApplication = new AwsNative.RoboMaker.RobotApplication("basicRobotApplication", new AwsNative.RoboMaker.RobotApplicationArgs
 *         {
 *             Name = "MyRobotApplication",
 *             Sources = 
 *             {
 *                 new AwsNative.RoboMaker.Inputs.RobotApplicationSourceConfigArgs
 *                 {
 *                     S3Bucket = "my-bucket",
 *                     S3Key = "robot_bundle_x86.tar.gz",
 *                     Architecture = "ARMHF",
 *                 },
 *             },
 *             RobotSoftwareSuite = new AwsNative.RoboMaker.Inputs.RobotApplicationRobotSoftwareSuiteArgs
 *             {
 *                 Name = "ROS",
 *                 Version = "Kinetic",
 *             },
 *             Tags = new AwsNative.RoboMaker.Inputs.RobotApplicationTagsArgs
 *             {
 *                 Name = "BasicRobotApplication",
 *                 Type = "CFN",
 *             },
 *         });
 *         this.RobotApplication = basicRobotApplication.Id;
 *     }
 * 
 *     [Output("robotApplication")]
 *     public Output<string> RobotApplication { get; set; }
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/robomaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		basicRobotApplication, err := robomaker.NewRobotApplication(ctx, "basicRobotApplication", &robomaker.RobotApplicationArgs{
 * 			Name: pulumi.String("MyRobotApplication"),
 * 			Sources: []robomaker.RobotApplicationSourceConfigArgs{
 * 				&robomaker.RobotApplicationSourceConfigArgs{
 * 					S3Bucket:     pulumi.String("my-bucket"),
 * 					S3Key:        pulumi.String("robot_bundle_x86.tar.gz"),
 * 					Architecture: "ARMHF",
 * 				},
 * 			},
 * 			RobotSoftwareSuite: &robomaker.RobotApplicationRobotSoftwareSuiteArgs{
 * 				Name:    "ROS",
 * 				Version: "Kinetic",
 * 			},
 * 			Tags: &robomaker.RobotApplicationTagsArgs{
 * 				Name: "BasicRobotApplication",
 * 				Type: "CFN",
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		ctx.Export("robotApplication", basicRobotApplication.ID())
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     sources: [{
 *         s3Bucket: "my-bucket",
 *         s3Key: "robot_bundle_x86.tar.gz",
 *         architecture: "ARMHF",
 *     }],
 *     robotSoftwareSuite: {
 *         name: "ROS",
 *         version: "Kinetic",
 *     },
 *     tags: {
 *         name: "BasicRobotApplication",
 *         type: "CFN",
 *     },
 * });
 * export const robotApplication = basicRobotApplication.id;
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * basic_robot_application = aws_native.robomaker.RobotApplication("basicRobotApplication",
 *     name="MyRobotApplication",
 *     sources=[aws_native.robomaker.RobotApplicationSourceConfigArgs(
 *         s3_bucket="my-bucket",
 *         s3_key="robot_bundle_x86.tar.gz",
 *         architecture="ARMHF",
 *     )],
 *     robot_software_suite=aws_native.robomaker.RobotApplicationRobotSoftwareSuiteArgs(
 *         name="ROS",
 *         version="Kinetic",
 *     ),
 *     tags=aws_native.robomaker.RobotApplicationTagsArgs(
 *         name="BasicRobotApplication",
 *         type="CFN",
 *     ))
 * pulumi.export("robotApplication", basic_robot_application.id)
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var basicRobotApplication = new AwsNative.RoboMaker.RobotApplication("basicRobotApplication", new AwsNative.RoboMaker.RobotApplicationArgs
 *         {
 *             Name = "MyRobotApplication",
 *             Sources = 
 *             {
 *                 new AwsNative.RoboMaker.Inputs.RobotApplicationSourceConfigArgs
 *                 {
 *                     S3Bucket = "my-bucket",
 *                     S3Key = "robot_bundle_x86.tar.gz",
 *                     Architecture = "ARMHF",
 *                 },
 *             },
 *             RobotSoftwareSuite = new AwsNative.RoboMaker.Inputs.RobotApplicationRobotSoftwareSuiteArgs
 *             {
 *                 Name = "ROS",
 *                 Version = "Kinetic",
 *             },
 *         });
 *         var basicRobotApplicationVersion = new AwsNative.RoboMaker.RobotApplicationVersion("basicRobotApplicationVersion", new AwsNative.RoboMaker.RobotApplicationVersionArgs
 *         {
 *             Application = basicRobotApplication.Arn,
 *             CurrentRevisionId = basicRobotApplication.Current_revision_id,
 *         });
 *         this.RobotApplicationVersion = "BasicRobotApplicationVersion";
 *     }
 * 
 *     [Output("robotApplicationVersion")]
 *     public Output<string> RobotApplicationVersion { get; set; }
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/robomaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		basicRobotApplication, err := robomaker.NewRobotApplication(ctx, "basicRobotApplication", &robomaker.RobotApplicationArgs{
 * 			Name: pulumi.String("MyRobotApplication"),
 * 			Sources: []robomaker.RobotApplicationSourceConfigArgs{
 * 				&robomaker.RobotApplicationSourceConfigArgs{
 * 					S3Bucket:     pulumi.String("my-bucket"),
 * 					S3Key:        pulumi.String("robot_bundle_x86.tar.gz"),
 * 					Architecture: "ARMHF",
 * 				},
 * 			},
 * 			RobotSoftwareSuite: &robomaker.RobotApplicationRobotSoftwareSuiteArgs{
 * 				Name:    "ROS",
 * 				Version: "Kinetic",
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = robomaker.NewRobotApplicationVersion(ctx, "basicRobotApplicationVersion", &robomaker.RobotApplicationVersionArgs{
 * 			Application:       basicRobotApplication.Arn,
 * 			CurrentRevisionId: basicRobotApplication.Current_revision_id,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		ctx.Export("robotApplicationVersion", "BasicRobotApplicationVersion")
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     sources: [{
 *         s3Bucket: "my-bucket",
 *         s3Key: "robot_bundle_x86.tar.gz",
 *         architecture: "ARMHF",
 *     }],
 *     robotSoftwareSuite: {
 *         name: "ROS",
 *         version: "Kinetic",
 *     },
 * });
 * const basicRobotApplicationVersion = new aws_native.robomaker.RobotApplicationVersion("basicRobotApplicationVersion", {
 *     application: basicRobotApplication.arn,
 *     currentRevisionId: basicRobotApplication.currentRevisionId,
 * });
 * export const robotApplicationVersion = "BasicRobotApplicationVersion";
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * basic_robot_application = aws_native.robomaker.RobotApplication("basicRobotApplication",
 *     name="MyRobotApplication",
 *     sources=[aws_native.robomaker.RobotApplicationSourceConfigArgs(
 *         s3_bucket="my-bucket",
 *         s3_key="robot_bundle_x86.tar.gz",
 *         architecture="ARMHF",
 *     )],
 *     robot_software_suite=aws_native.robomaker.RobotApplicationRobotSoftwareSuiteArgs(
 *         name="ROS",
 *         version="Kinetic",
 *     ))
 * basic_robot_application_version = aws_native.robomaker.RobotApplicationVersion("basicRobotApplicationVersion",
 *     application=basic_robot_application.arn,
 *     current_revision_id=basic_robot_application.current_revision_id)
 * pulumi.export("robotApplicationVersion", "BasicRobotApplicationVersion")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var basicRobotApplication = new AwsNative.RoboMaker.RobotApplication("basicRobotApplication", new AwsNative.RoboMaker.RobotApplicationArgs
 *         {
 *             Name = "MyRobotApplication",
 *             Sources = 
 *             {
 *                 new AwsNative.RoboMaker.Inputs.RobotApplicationSourceConfigArgs
 *                 {
 *                     S3Bucket = "my-bucket",
 *                     S3Key = "robot_bundle_x86.tar.gz",
 *                     Architecture = "ARMHF",
 *                 },
 *             },
 *             RobotSoftwareSuite = new AwsNative.RoboMaker.Inputs.RobotApplicationRobotSoftwareSuiteArgs
 *             {
 *                 Name = "ROS",
 *                 Version = "Kinetic",
 *             },
 *         });
 *         var basicRobotApplicationVersion = new AwsNative.RoboMaker.RobotApplicationVersion("basicRobotApplicationVersion", new AwsNative.RoboMaker.RobotApplicationVersionArgs
 *         {
 *             Application = basicRobotApplication.Arn,
 *             CurrentRevisionId = basicRobotApplication.Current_revision_id,
 *         });
 *         this.RobotApplicationVersion = basicRobotApplicationVersion.Id;
 *     }
 * 
 *     [Output("robotApplicationVersion")]
 *     public Output<string> RobotApplicationVersion { get; set; }
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/robomaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		basicRobotApplication, err := robomaker.NewRobotApplication(ctx, "basicRobotApplication", &robomaker.RobotApplicationArgs{
 * 			Name: pulumi.String("MyRobotApplication"),
 * 			Sources: []robomaker.RobotApplicationSourceConfigArgs{
 * 				&robomaker.RobotApplicationSourceConfigArgs{
 * 					S3Bucket:     pulumi.String("my-bucket"),
 * 					S3Key:        pulumi.String("robot_bundle_x86.tar.gz"),
 * 					Architecture: "ARMHF",
 * 				},
 * 			},
 * 			RobotSoftwareSuite: &robomaker.RobotApplicationRobotSoftwareSuiteArgs{
 * 				Name:    "ROS",
 * 				Version: "Kinetic",
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		basicRobotApplicationVersion, err := robomaker.NewRobotApplicationVersion(ctx, "basicRobotApplicationVersion", &robomaker.RobotApplicationVersionArgs{
 * 			Application:       basicRobotApplication.Arn,
 * 			CurrentRevisionId: basicRobotApplication.Current_revision_id,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		ctx.Export("robotApplicationVersion", basicRobotApplicationVersion.ID())
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     sources: [{
 *         s3Bucket: "my-bucket",
 *         s3Key: "robot_bundle_x86.tar.gz",
 *         architecture: "ARMHF",
 *     }],
 *     robotSoftwareSuite: {
 *         name: "ROS",
 *         version: "Kinetic",
 *     },
 * });
 * const basicRobotApplicationVersion = new aws_native.robomaker.RobotApplicationVersion("basicRobotApplicationVersion", {
 *     application: basicRobotApplication.arn,
 *     currentRevisionId: basicRobotApplication.currentRevisionId,
 * });
 * export const robotApplicationVersion = basicRobotApplicationVersion.id;
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * basic_robot_application = aws_native.robomaker.RobotApplication("basicRobotApplication",
 *     name="MyRobotApplication",
 *     sources=[aws_native.robomaker.RobotApplicationSourceConfigArgs(
 *         s3_bucket="my-bucket",
 *         s3_key="robot_bundle_x86.tar.gz",
 *         architecture="ARMHF",
 *     )],
 *     robot_software_suite=aws_native.robomaker.RobotApplicationRobotSoftwareSuiteArgs(
 *         name="ROS",
 *         version="Kinetic",
 *     ))
 * basic_robot_application_version = aws_native.robomaker.RobotApplicationVersion("basicRobotApplicationVersion",
 *     application=basic_robot_application.arn,
 *     current_revision_id=basic_robot_application.current_revision_id)
 * pulumi.export("robotApplicationVersion", basic_robot_application_version.id)
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 */
@ResourceType(type="aws-native:robomaker:RobotApplication")
public class RobotApplication extends io.pulumi.resources.CustomResource {
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The revision ID of robot application.
     */
    @Export(name="currentRevisionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> currentRevisionId;

    /**
     * @return The revision ID of robot application.
     */
    public Output</* @Nullable */ String> getCurrentRevisionId() {
        return this.currentRevisionId;
    }
    /**
     * The URI of the Docker image for the robot application.
     */
    @Export(name="environment", type=String.class, parameters={})
    private Output</* @Nullable */ String> environment;

    /**
     * @return The URI of the Docker image for the robot application.
     */
    public Output</* @Nullable */ String> getEnvironment() {
        return this.environment;
    }
    /**
     * The name of the robot application.
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the robot application.
     */
    public Output</* @Nullable */ String> getName() {
        return this.name;
    }
    @Export(name="robotSoftwareSuite", type=RobotApplicationRobotSoftwareSuite.class, parameters={})
    private Output<RobotApplicationRobotSoftwareSuite> robotSoftwareSuite;

    public Output<RobotApplicationRobotSoftwareSuite> getRobotSoftwareSuite() {
        return this.robotSoftwareSuite;
    }
    /**
     * The sources of the robot application.
     */
    @Export(name="sources", type=List.class, parameters={RobotApplicationSourceConfig.class})
    private Output</* @Nullable */ List<RobotApplicationSourceConfig>> sources;

    /**
     * @return The sources of the robot application.
     */
    public Output</* @Nullable */ List<RobotApplicationSourceConfig>> getSources() {
        return this.sources;
    }
    @Export(name="tags", type=RobotApplicationTags.class, parameters={})
    private Output</* @Nullable */ RobotApplicationTags> tags;

    public Output</* @Nullable */ RobotApplicationTags> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RobotApplication(String name) {
        this(name, RobotApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RobotApplication(String name, RobotApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RobotApplication(String name, RobotApplicationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:robomaker:RobotApplication", name, args == null ? RobotApplicationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private RobotApplication(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:robomaker:RobotApplication", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RobotApplication get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RobotApplication(name, id, options);
    }
}
