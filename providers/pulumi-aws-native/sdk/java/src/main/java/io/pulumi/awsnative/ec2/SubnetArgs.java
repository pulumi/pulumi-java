// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ec2;

import io.pulumi.awsnative.ec2.inputs.SubnetTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SubnetArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubnetArgs Empty = new SubnetArgs();

    @Import(name="assignIpv6AddressOnCreation")
      private final @Nullable Output<Boolean> assignIpv6AddressOnCreation;

    public Output<Boolean> getAssignIpv6AddressOnCreation() {
        return this.assignIpv6AddressOnCreation == null ? Output.empty() : this.assignIpv6AddressOnCreation;
    }

    @Import(name="availabilityZone")
      private final @Nullable Output<String> availabilityZone;

    public Output<String> getAvailabilityZone() {
        return this.availabilityZone == null ? Output.empty() : this.availabilityZone;
    }

    @Import(name="cidrBlock", required=true)
      private final Output<String> cidrBlock;

    public Output<String> getCidrBlock() {
        return this.cidrBlock;
    }

    @Import(name="ipv6CidrBlock")
      private final @Nullable Output<String> ipv6CidrBlock;

    public Output<String> getIpv6CidrBlock() {
        return this.ipv6CidrBlock == null ? Output.empty() : this.ipv6CidrBlock;
    }

    @Import(name="mapPublicIpOnLaunch")
      private final @Nullable Output<Boolean> mapPublicIpOnLaunch;

    public Output<Boolean> getMapPublicIpOnLaunch() {
        return this.mapPublicIpOnLaunch == null ? Output.empty() : this.mapPublicIpOnLaunch;
    }

    @Import(name="outpostArn")
      private final @Nullable Output<String> outpostArn;

    public Output<String> getOutpostArn() {
        return this.outpostArn == null ? Output.empty() : this.outpostArn;
    }

    @Import(name="tags")
      private final @Nullable Output<List<SubnetTagArgs>> tags;

    public Output<List<SubnetTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    @Import(name="vpcId", required=true)
      private final Output<String> vpcId;

    public Output<String> getVpcId() {
        return this.vpcId;
    }

    public SubnetArgs(
        @Nullable Output<Boolean> assignIpv6AddressOnCreation,
        @Nullable Output<String> availabilityZone,
        Output<String> cidrBlock,
        @Nullable Output<String> ipv6CidrBlock,
        @Nullable Output<Boolean> mapPublicIpOnLaunch,
        @Nullable Output<String> outpostArn,
        @Nullable Output<List<SubnetTagArgs>> tags,
        Output<String> vpcId) {
        this.assignIpv6AddressOnCreation = assignIpv6AddressOnCreation;
        this.availabilityZone = availabilityZone;
        this.cidrBlock = Objects.requireNonNull(cidrBlock, "expected parameter 'cidrBlock' to be non-null");
        this.ipv6CidrBlock = ipv6CidrBlock;
        this.mapPublicIpOnLaunch = mapPublicIpOnLaunch;
        this.outpostArn = outpostArn;
        this.tags = tags;
        this.vpcId = Objects.requireNonNull(vpcId, "expected parameter 'vpcId' to be non-null");
    }

    private SubnetArgs() {
        this.assignIpv6AddressOnCreation = Output.empty();
        this.availabilityZone = Output.empty();
        this.cidrBlock = Output.empty();
        this.ipv6CidrBlock = Output.empty();
        this.mapPublicIpOnLaunch = Output.empty();
        this.outpostArn = Output.empty();
        this.tags = Output.empty();
        this.vpcId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubnetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> assignIpv6AddressOnCreation;
        private @Nullable Output<String> availabilityZone;
        private Output<String> cidrBlock;
        private @Nullable Output<String> ipv6CidrBlock;
        private @Nullable Output<Boolean> mapPublicIpOnLaunch;
        private @Nullable Output<String> outpostArn;
        private @Nullable Output<List<SubnetTagArgs>> tags;
        private Output<String> vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(SubnetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignIpv6AddressOnCreation = defaults.assignIpv6AddressOnCreation;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.ipv6CidrBlock = defaults.ipv6CidrBlock;
    	      this.mapPublicIpOnLaunch = defaults.mapPublicIpOnLaunch;
    	      this.outpostArn = defaults.outpostArn;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder assignIpv6AddressOnCreation(@Nullable Output<Boolean> assignIpv6AddressOnCreation) {
            this.assignIpv6AddressOnCreation = assignIpv6AddressOnCreation;
            return this;
        }

        public Builder assignIpv6AddressOnCreation(@Nullable Boolean assignIpv6AddressOnCreation) {
            this.assignIpv6AddressOnCreation = Output.ofNullable(assignIpv6AddressOnCreation);
            return this;
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            this.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(@Nullable String availabilityZone) {
            this.availabilityZone = Output.ofNullable(availabilityZone);
            return this;
        }

        public Builder cidrBlock(Output<String> cidrBlock) {
            this.cidrBlock = Objects.requireNonNull(cidrBlock);
            return this;
        }

        public Builder cidrBlock(String cidrBlock) {
            this.cidrBlock = Output.of(Objects.requireNonNull(cidrBlock));
            return this;
        }

        public Builder ipv6CidrBlock(@Nullable Output<String> ipv6CidrBlock) {
            this.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }

        public Builder ipv6CidrBlock(@Nullable String ipv6CidrBlock) {
            this.ipv6CidrBlock = Output.ofNullable(ipv6CidrBlock);
            return this;
        }

        public Builder mapPublicIpOnLaunch(@Nullable Output<Boolean> mapPublicIpOnLaunch) {
            this.mapPublicIpOnLaunch = mapPublicIpOnLaunch;
            return this;
        }

        public Builder mapPublicIpOnLaunch(@Nullable Boolean mapPublicIpOnLaunch) {
            this.mapPublicIpOnLaunch = Output.ofNullable(mapPublicIpOnLaunch);
            return this;
        }

        public Builder outpostArn(@Nullable Output<String> outpostArn) {
            this.outpostArn = outpostArn;
            return this;
        }

        public Builder outpostArn(@Nullable String outpostArn) {
            this.outpostArn = Output.ofNullable(outpostArn);
            return this;
        }

        public Builder tags(@Nullable Output<List<SubnetTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<SubnetTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder vpcId(Output<String> vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }

        public Builder vpcId(String vpcId) {
            this.vpcId = Output.of(Objects.requireNonNull(vpcId));
            return this;
        }
        public SubnetArgs build() {
            return new SubnetArgs(assignIpv6AddressOnCreation, availabilityZone, cidrBlock, ipv6CidrBlock, mapPublicIpOnLaunch, outpostArn, tags, vpcId);
        }
    }
}
