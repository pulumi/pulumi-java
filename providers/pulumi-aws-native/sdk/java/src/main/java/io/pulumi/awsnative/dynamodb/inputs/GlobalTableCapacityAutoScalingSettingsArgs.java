// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.dynamodb.inputs;

import io.pulumi.awsnative.dynamodb.inputs.GlobalTableTargetTrackingScalingPolicyConfigurationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GlobalTableCapacityAutoScalingSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final GlobalTableCapacityAutoScalingSettingsArgs Empty = new GlobalTableCapacityAutoScalingSettingsArgs();

    @InputImport(name="maxCapacity", required=true)
      private final Input<Integer> maxCapacity;

    public Input<Integer> getMaxCapacity() {
        return this.maxCapacity;
    }

    @InputImport(name="minCapacity", required=true)
      private final Input<Integer> minCapacity;

    public Input<Integer> getMinCapacity() {
        return this.minCapacity;
    }

    @InputImport(name="seedCapacity")
      private final @Nullable Input<Integer> seedCapacity;

    public Input<Integer> getSeedCapacity() {
        return this.seedCapacity == null ? Input.empty() : this.seedCapacity;
    }

    @InputImport(name="targetTrackingScalingPolicyConfiguration", required=true)
      private final Input<GlobalTableTargetTrackingScalingPolicyConfigurationArgs> targetTrackingScalingPolicyConfiguration;

    public Input<GlobalTableTargetTrackingScalingPolicyConfigurationArgs> getTargetTrackingScalingPolicyConfiguration() {
        return this.targetTrackingScalingPolicyConfiguration;
    }

    public GlobalTableCapacityAutoScalingSettingsArgs(
        Input<Integer> maxCapacity,
        Input<Integer> minCapacity,
        @Nullable Input<Integer> seedCapacity,
        Input<GlobalTableTargetTrackingScalingPolicyConfigurationArgs> targetTrackingScalingPolicyConfiguration) {
        this.maxCapacity = Objects.requireNonNull(maxCapacity, "expected parameter 'maxCapacity' to be non-null");
        this.minCapacity = Objects.requireNonNull(minCapacity, "expected parameter 'minCapacity' to be non-null");
        this.seedCapacity = seedCapacity;
        this.targetTrackingScalingPolicyConfiguration = Objects.requireNonNull(targetTrackingScalingPolicyConfiguration, "expected parameter 'targetTrackingScalingPolicyConfiguration' to be non-null");
    }

    private GlobalTableCapacityAutoScalingSettingsArgs() {
        this.maxCapacity = Input.empty();
        this.minCapacity = Input.empty();
        this.seedCapacity = Input.empty();
        this.targetTrackingScalingPolicyConfiguration = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GlobalTableCapacityAutoScalingSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> maxCapacity;
        private Input<Integer> minCapacity;
        private @Nullable Input<Integer> seedCapacity;
        private Input<GlobalTableTargetTrackingScalingPolicyConfigurationArgs> targetTrackingScalingPolicyConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(GlobalTableCapacityAutoScalingSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.minCapacity = defaults.minCapacity;
    	      this.seedCapacity = defaults.seedCapacity;
    	      this.targetTrackingScalingPolicyConfiguration = defaults.targetTrackingScalingPolicyConfiguration;
        }

        public Builder setMaxCapacity(Input<Integer> maxCapacity) {
            this.maxCapacity = Objects.requireNonNull(maxCapacity);
            return this;
        }

        public Builder setMaxCapacity(Integer maxCapacity) {
            this.maxCapacity = Input.of(Objects.requireNonNull(maxCapacity));
            return this;
        }

        public Builder setMinCapacity(Input<Integer> minCapacity) {
            this.minCapacity = Objects.requireNonNull(minCapacity);
            return this;
        }

        public Builder setMinCapacity(Integer minCapacity) {
            this.minCapacity = Input.of(Objects.requireNonNull(minCapacity));
            return this;
        }

        public Builder setSeedCapacity(@Nullable Input<Integer> seedCapacity) {
            this.seedCapacity = seedCapacity;
            return this;
        }

        public Builder setSeedCapacity(@Nullable Integer seedCapacity) {
            this.seedCapacity = Input.ofNullable(seedCapacity);
            return this;
        }

        public Builder setTargetTrackingScalingPolicyConfiguration(Input<GlobalTableTargetTrackingScalingPolicyConfigurationArgs> targetTrackingScalingPolicyConfiguration) {
            this.targetTrackingScalingPolicyConfiguration = Objects.requireNonNull(targetTrackingScalingPolicyConfiguration);
            return this;
        }

        public Builder setTargetTrackingScalingPolicyConfiguration(GlobalTableTargetTrackingScalingPolicyConfigurationArgs targetTrackingScalingPolicyConfiguration) {
            this.targetTrackingScalingPolicyConfiguration = Input.of(Objects.requireNonNull(targetTrackingScalingPolicyConfiguration));
            return this;
        }
        public GlobalTableCapacityAutoScalingSettingsArgs build() {
            return new GlobalTableCapacityAutoScalingSettingsArgs(maxCapacity, minCapacity, seedCapacity, targetTrackingScalingPolicyConfiguration);
        }
    }
}
