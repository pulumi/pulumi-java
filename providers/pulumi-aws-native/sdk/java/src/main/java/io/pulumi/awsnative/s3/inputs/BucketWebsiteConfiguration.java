// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.awsnative.s3.inputs.BucketRedirectAllRequestsTo;
import io.pulumi.awsnative.s3.inputs.BucketRoutingRule;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies website configuration parameters for an Amazon S3 bucket.
 * 
 */
public final class BucketWebsiteConfiguration extends io.pulumi.resources.InvokeArgs {

    public static final BucketWebsiteConfiguration Empty = new BucketWebsiteConfiguration();

    /**
     * The name of the error document for the website.
     * 
     */
    @InputImport(name="errorDocument")
    private final @Nullable String errorDocument;

    public Optional<String> getErrorDocument() {
        return this.errorDocument == null ? Optional.empty() : Optional.ofNullable(this.errorDocument);
    }

    /**
     * The name of the index document for the website.
     * 
     */
    @InputImport(name="indexDocument")
    private final @Nullable String indexDocument;

    public Optional<String> getIndexDocument() {
        return this.indexDocument == null ? Optional.empty() : Optional.ofNullable(this.indexDocument);
    }

    @InputImport(name="redirectAllRequestsTo")
    private final @Nullable BucketRedirectAllRequestsTo redirectAllRequestsTo;

    public Optional<BucketRedirectAllRequestsTo> getRedirectAllRequestsTo() {
        return this.redirectAllRequestsTo == null ? Optional.empty() : Optional.ofNullable(this.redirectAllRequestsTo);
    }

    @InputImport(name="routingRules")
    private final @Nullable List<BucketRoutingRule> routingRules;

    public List<BucketRoutingRule> getRoutingRules() {
        return this.routingRules == null ? List.of() : this.routingRules;
    }

    public BucketWebsiteConfiguration(
        @Nullable String errorDocument,
        @Nullable String indexDocument,
        @Nullable BucketRedirectAllRequestsTo redirectAllRequestsTo,
        @Nullable List<BucketRoutingRule> routingRules) {
        this.errorDocument = errorDocument;
        this.indexDocument = indexDocument;
        this.redirectAllRequestsTo = redirectAllRequestsTo;
        this.routingRules = routingRules;
    }

    private BucketWebsiteConfiguration() {
        this.errorDocument = null;
        this.indexDocument = null;
        this.redirectAllRequestsTo = null;
        this.routingRules = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketWebsiteConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String errorDocument;
        private @Nullable String indexDocument;
        private @Nullable BucketRedirectAllRequestsTo redirectAllRequestsTo;
        private @Nullable List<BucketRoutingRule> routingRules;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketWebsiteConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorDocument = defaults.errorDocument;
    	      this.indexDocument = defaults.indexDocument;
    	      this.redirectAllRequestsTo = defaults.redirectAllRequestsTo;
    	      this.routingRules = defaults.routingRules;
        }

        public Builder setErrorDocument(@Nullable String errorDocument) {
            this.errorDocument = errorDocument;
            return this;
        }

        public Builder setIndexDocument(@Nullable String indexDocument) {
            this.indexDocument = indexDocument;
            return this;
        }

        public Builder setRedirectAllRequestsTo(@Nullable BucketRedirectAllRequestsTo redirectAllRequestsTo) {
            this.redirectAllRequestsTo = redirectAllRequestsTo;
            return this;
        }

        public Builder setRoutingRules(@Nullable List<BucketRoutingRule> routingRules) {
            this.routingRules = routingRules;
            return this;
        }

        public BucketWebsiteConfiguration build() {
            return new BucketWebsiteConfiguration(errorDocument, indexDocument, redirectAllRequestsTo, routingRules);
        }
    }
}
