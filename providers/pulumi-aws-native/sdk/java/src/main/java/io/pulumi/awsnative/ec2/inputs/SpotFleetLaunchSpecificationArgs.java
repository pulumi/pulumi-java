// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ec2.inputs;

import io.pulumi.awsnative.ec2.inputs.SpotFleetBlockDeviceMappingArgs;
import io.pulumi.awsnative.ec2.inputs.SpotFleetGroupIdentifierArgs;
import io.pulumi.awsnative.ec2.inputs.SpotFleetIamInstanceProfileSpecificationArgs;
import io.pulumi.awsnative.ec2.inputs.SpotFleetInstanceNetworkInterfaceSpecificationArgs;
import io.pulumi.awsnative.ec2.inputs.SpotFleetInstanceRequirementsRequestArgs;
import io.pulumi.awsnative.ec2.inputs.SpotFleetMonitoringArgs;
import io.pulumi.awsnative.ec2.inputs.SpotFleetSpotPlacementArgs;
import io.pulumi.awsnative.ec2.inputs.SpotFleetTagSpecificationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SpotFleetLaunchSpecificationArgs extends io.pulumi.resources.ResourceArgs {

    public static final SpotFleetLaunchSpecificationArgs Empty = new SpotFleetLaunchSpecificationArgs();

    @InputImport(name="blockDeviceMappings")
      private final @Nullable Input<List<SpotFleetBlockDeviceMappingArgs>> blockDeviceMappings;

    public Input<List<SpotFleetBlockDeviceMappingArgs>> getBlockDeviceMappings() {
        return this.blockDeviceMappings == null ? Input.empty() : this.blockDeviceMappings;
    }

    @InputImport(name="ebsOptimized")
      private final @Nullable Input<Boolean> ebsOptimized;

    public Input<Boolean> getEbsOptimized() {
        return this.ebsOptimized == null ? Input.empty() : this.ebsOptimized;
    }

    @InputImport(name="iamInstanceProfile")
      private final @Nullable Input<SpotFleetIamInstanceProfileSpecificationArgs> iamInstanceProfile;

    public Input<SpotFleetIamInstanceProfileSpecificationArgs> getIamInstanceProfile() {
        return this.iamInstanceProfile == null ? Input.empty() : this.iamInstanceProfile;
    }

    @InputImport(name="imageId", required=true)
      private final Input<String> imageId;

    public Input<String> getImageId() {
        return this.imageId;
    }

    @InputImport(name="instanceRequirements")
      private final @Nullable Input<SpotFleetInstanceRequirementsRequestArgs> instanceRequirements;

    public Input<SpotFleetInstanceRequirementsRequestArgs> getInstanceRequirements() {
        return this.instanceRequirements == null ? Input.empty() : this.instanceRequirements;
    }

    @InputImport(name="instanceType")
      private final @Nullable Input<String> instanceType;

    public Input<String> getInstanceType() {
        return this.instanceType == null ? Input.empty() : this.instanceType;
    }

    @InputImport(name="kernelId")
      private final @Nullable Input<String> kernelId;

    public Input<String> getKernelId() {
        return this.kernelId == null ? Input.empty() : this.kernelId;
    }

    @InputImport(name="keyName")
      private final @Nullable Input<String> keyName;

    public Input<String> getKeyName() {
        return this.keyName == null ? Input.empty() : this.keyName;
    }

    @InputImport(name="monitoring")
      private final @Nullable Input<SpotFleetMonitoringArgs> monitoring;

    public Input<SpotFleetMonitoringArgs> getMonitoring() {
        return this.monitoring == null ? Input.empty() : this.monitoring;
    }

    @InputImport(name="networkInterfaces")
      private final @Nullable Input<List<SpotFleetInstanceNetworkInterfaceSpecificationArgs>> networkInterfaces;

    public Input<List<SpotFleetInstanceNetworkInterfaceSpecificationArgs>> getNetworkInterfaces() {
        return this.networkInterfaces == null ? Input.empty() : this.networkInterfaces;
    }

    @InputImport(name="placement")
      private final @Nullable Input<SpotFleetSpotPlacementArgs> placement;

    public Input<SpotFleetSpotPlacementArgs> getPlacement() {
        return this.placement == null ? Input.empty() : this.placement;
    }

    @InputImport(name="ramdiskId")
      private final @Nullable Input<String> ramdiskId;

    public Input<String> getRamdiskId() {
        return this.ramdiskId == null ? Input.empty() : this.ramdiskId;
    }

    @InputImport(name="securityGroups")
      private final @Nullable Input<List<SpotFleetGroupIdentifierArgs>> securityGroups;

    public Input<List<SpotFleetGroupIdentifierArgs>> getSecurityGroups() {
        return this.securityGroups == null ? Input.empty() : this.securityGroups;
    }

    @InputImport(name="spotPrice")
      private final @Nullable Input<String> spotPrice;

    public Input<String> getSpotPrice() {
        return this.spotPrice == null ? Input.empty() : this.spotPrice;
    }

    @InputImport(name="subnetId")
      private final @Nullable Input<String> subnetId;

    public Input<String> getSubnetId() {
        return this.subnetId == null ? Input.empty() : this.subnetId;
    }

    @InputImport(name="tagSpecifications")
      private final @Nullable Input<List<SpotFleetTagSpecificationArgs>> tagSpecifications;

    public Input<List<SpotFleetTagSpecificationArgs>> getTagSpecifications() {
        return this.tagSpecifications == null ? Input.empty() : this.tagSpecifications;
    }

    @InputImport(name="userData")
      private final @Nullable Input<String> userData;

    public Input<String> getUserData() {
        return this.userData == null ? Input.empty() : this.userData;
    }

    @InputImport(name="weightedCapacity")
      private final @Nullable Input<Double> weightedCapacity;

    public Input<Double> getWeightedCapacity() {
        return this.weightedCapacity == null ? Input.empty() : this.weightedCapacity;
    }

    public SpotFleetLaunchSpecificationArgs(
        @Nullable Input<List<SpotFleetBlockDeviceMappingArgs>> blockDeviceMappings,
        @Nullable Input<Boolean> ebsOptimized,
        @Nullable Input<SpotFleetIamInstanceProfileSpecificationArgs> iamInstanceProfile,
        Input<String> imageId,
        @Nullable Input<SpotFleetInstanceRequirementsRequestArgs> instanceRequirements,
        @Nullable Input<String> instanceType,
        @Nullable Input<String> kernelId,
        @Nullable Input<String> keyName,
        @Nullable Input<SpotFleetMonitoringArgs> monitoring,
        @Nullable Input<List<SpotFleetInstanceNetworkInterfaceSpecificationArgs>> networkInterfaces,
        @Nullable Input<SpotFleetSpotPlacementArgs> placement,
        @Nullable Input<String> ramdiskId,
        @Nullable Input<List<SpotFleetGroupIdentifierArgs>> securityGroups,
        @Nullable Input<String> spotPrice,
        @Nullable Input<String> subnetId,
        @Nullable Input<List<SpotFleetTagSpecificationArgs>> tagSpecifications,
        @Nullable Input<String> userData,
        @Nullable Input<Double> weightedCapacity) {
        this.blockDeviceMappings = blockDeviceMappings;
        this.ebsOptimized = ebsOptimized;
        this.iamInstanceProfile = iamInstanceProfile;
        this.imageId = Objects.requireNonNull(imageId, "expected parameter 'imageId' to be non-null");
        this.instanceRequirements = instanceRequirements;
        this.instanceType = instanceType;
        this.kernelId = kernelId;
        this.keyName = keyName;
        this.monitoring = monitoring;
        this.networkInterfaces = networkInterfaces;
        this.placement = placement;
        this.ramdiskId = ramdiskId;
        this.securityGroups = securityGroups;
        this.spotPrice = spotPrice;
        this.subnetId = subnetId;
        this.tagSpecifications = tagSpecifications;
        this.userData = userData;
        this.weightedCapacity = weightedCapacity;
    }

    private SpotFleetLaunchSpecificationArgs() {
        this.blockDeviceMappings = Input.empty();
        this.ebsOptimized = Input.empty();
        this.iamInstanceProfile = Input.empty();
        this.imageId = Input.empty();
        this.instanceRequirements = Input.empty();
        this.instanceType = Input.empty();
        this.kernelId = Input.empty();
        this.keyName = Input.empty();
        this.monitoring = Input.empty();
        this.networkInterfaces = Input.empty();
        this.placement = Input.empty();
        this.ramdiskId = Input.empty();
        this.securityGroups = Input.empty();
        this.spotPrice = Input.empty();
        this.subnetId = Input.empty();
        this.tagSpecifications = Input.empty();
        this.userData = Input.empty();
        this.weightedCapacity = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpotFleetLaunchSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<SpotFleetBlockDeviceMappingArgs>> blockDeviceMappings;
        private @Nullable Input<Boolean> ebsOptimized;
        private @Nullable Input<SpotFleetIamInstanceProfileSpecificationArgs> iamInstanceProfile;
        private Input<String> imageId;
        private @Nullable Input<SpotFleetInstanceRequirementsRequestArgs> instanceRequirements;
        private @Nullable Input<String> instanceType;
        private @Nullable Input<String> kernelId;
        private @Nullable Input<String> keyName;
        private @Nullable Input<SpotFleetMonitoringArgs> monitoring;
        private @Nullable Input<List<SpotFleetInstanceNetworkInterfaceSpecificationArgs>> networkInterfaces;
        private @Nullable Input<SpotFleetSpotPlacementArgs> placement;
        private @Nullable Input<String> ramdiskId;
        private @Nullable Input<List<SpotFleetGroupIdentifierArgs>> securityGroups;
        private @Nullable Input<String> spotPrice;
        private @Nullable Input<String> subnetId;
        private @Nullable Input<List<SpotFleetTagSpecificationArgs>> tagSpecifications;
        private @Nullable Input<String> userData;
        private @Nullable Input<Double> weightedCapacity;

        public Builder() {
    	      // Empty
        }

        public Builder(SpotFleetLaunchSpecificationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockDeviceMappings = defaults.blockDeviceMappings;
    	      this.ebsOptimized = defaults.ebsOptimized;
    	      this.iamInstanceProfile = defaults.iamInstanceProfile;
    	      this.imageId = defaults.imageId;
    	      this.instanceRequirements = defaults.instanceRequirements;
    	      this.instanceType = defaults.instanceType;
    	      this.kernelId = defaults.kernelId;
    	      this.keyName = defaults.keyName;
    	      this.monitoring = defaults.monitoring;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.placement = defaults.placement;
    	      this.ramdiskId = defaults.ramdiskId;
    	      this.securityGroups = defaults.securityGroups;
    	      this.spotPrice = defaults.spotPrice;
    	      this.subnetId = defaults.subnetId;
    	      this.tagSpecifications = defaults.tagSpecifications;
    	      this.userData = defaults.userData;
    	      this.weightedCapacity = defaults.weightedCapacity;
        }

        public Builder blockDeviceMappings(@Nullable Input<List<SpotFleetBlockDeviceMappingArgs>> blockDeviceMappings) {
            this.blockDeviceMappings = blockDeviceMappings;
            return this;
        }

        public Builder blockDeviceMappings(@Nullable List<SpotFleetBlockDeviceMappingArgs> blockDeviceMappings) {
            this.blockDeviceMappings = Input.ofNullable(blockDeviceMappings);
            return this;
        }

        public Builder ebsOptimized(@Nullable Input<Boolean> ebsOptimized) {
            this.ebsOptimized = ebsOptimized;
            return this;
        }

        public Builder ebsOptimized(@Nullable Boolean ebsOptimized) {
            this.ebsOptimized = Input.ofNullable(ebsOptimized);
            return this;
        }

        public Builder iamInstanceProfile(@Nullable Input<SpotFleetIamInstanceProfileSpecificationArgs> iamInstanceProfile) {
            this.iamInstanceProfile = iamInstanceProfile;
            return this;
        }

        public Builder iamInstanceProfile(@Nullable SpotFleetIamInstanceProfileSpecificationArgs iamInstanceProfile) {
            this.iamInstanceProfile = Input.ofNullable(iamInstanceProfile);
            return this;
        }

        public Builder imageId(Input<String> imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }

        public Builder imageId(String imageId) {
            this.imageId = Input.of(Objects.requireNonNull(imageId));
            return this;
        }

        public Builder instanceRequirements(@Nullable Input<SpotFleetInstanceRequirementsRequestArgs> instanceRequirements) {
            this.instanceRequirements = instanceRequirements;
            return this;
        }

        public Builder instanceRequirements(@Nullable SpotFleetInstanceRequirementsRequestArgs instanceRequirements) {
            this.instanceRequirements = Input.ofNullable(instanceRequirements);
            return this;
        }

        public Builder instanceType(@Nullable Input<String> instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = Input.ofNullable(instanceType);
            return this;
        }

        public Builder kernelId(@Nullable Input<String> kernelId) {
            this.kernelId = kernelId;
            return this;
        }

        public Builder kernelId(@Nullable String kernelId) {
            this.kernelId = Input.ofNullable(kernelId);
            return this;
        }

        public Builder keyName(@Nullable Input<String> keyName) {
            this.keyName = keyName;
            return this;
        }

        public Builder keyName(@Nullable String keyName) {
            this.keyName = Input.ofNullable(keyName);
            return this;
        }

        public Builder monitoring(@Nullable Input<SpotFleetMonitoringArgs> monitoring) {
            this.monitoring = monitoring;
            return this;
        }

        public Builder monitoring(@Nullable SpotFleetMonitoringArgs monitoring) {
            this.monitoring = Input.ofNullable(monitoring);
            return this;
        }

        public Builder networkInterfaces(@Nullable Input<List<SpotFleetInstanceNetworkInterfaceSpecificationArgs>> networkInterfaces) {
            this.networkInterfaces = networkInterfaces;
            return this;
        }

        public Builder networkInterfaces(@Nullable List<SpotFleetInstanceNetworkInterfaceSpecificationArgs> networkInterfaces) {
            this.networkInterfaces = Input.ofNullable(networkInterfaces);
            return this;
        }

        public Builder placement(@Nullable Input<SpotFleetSpotPlacementArgs> placement) {
            this.placement = placement;
            return this;
        }

        public Builder placement(@Nullable SpotFleetSpotPlacementArgs placement) {
            this.placement = Input.ofNullable(placement);
            return this;
        }

        public Builder ramdiskId(@Nullable Input<String> ramdiskId) {
            this.ramdiskId = ramdiskId;
            return this;
        }

        public Builder ramdiskId(@Nullable String ramdiskId) {
            this.ramdiskId = Input.ofNullable(ramdiskId);
            return this;
        }

        public Builder securityGroups(@Nullable Input<List<SpotFleetGroupIdentifierArgs>> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }

        public Builder securityGroups(@Nullable List<SpotFleetGroupIdentifierArgs> securityGroups) {
            this.securityGroups = Input.ofNullable(securityGroups);
            return this;
        }

        public Builder spotPrice(@Nullable Input<String> spotPrice) {
            this.spotPrice = spotPrice;
            return this;
        }

        public Builder spotPrice(@Nullable String spotPrice) {
            this.spotPrice = Input.ofNullable(spotPrice);
            return this;
        }

        public Builder subnetId(@Nullable Input<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = Input.ofNullable(subnetId);
            return this;
        }

        public Builder tagSpecifications(@Nullable Input<List<SpotFleetTagSpecificationArgs>> tagSpecifications) {
            this.tagSpecifications = tagSpecifications;
            return this;
        }

        public Builder tagSpecifications(@Nullable List<SpotFleetTagSpecificationArgs> tagSpecifications) {
            this.tagSpecifications = Input.ofNullable(tagSpecifications);
            return this;
        }

        public Builder userData(@Nullable Input<String> userData) {
            this.userData = userData;
            return this;
        }

        public Builder userData(@Nullable String userData) {
            this.userData = Input.ofNullable(userData);
            return this;
        }

        public Builder weightedCapacity(@Nullable Input<Double> weightedCapacity) {
            this.weightedCapacity = weightedCapacity;
            return this;
        }

        public Builder weightedCapacity(@Nullable Double weightedCapacity) {
            this.weightedCapacity = Input.ofNullable(weightedCapacity);
            return this;
        }
        public SpotFleetLaunchSpecificationArgs build() {
            return new SpotFleetLaunchSpecificationArgs(blockDeviceMappings, ebsOptimized, iamInstanceProfile, imageId, instanceRequirements, instanceType, kernelId, keyName, monitoring, networkInterfaces, placement, ramdiskId, securityGroups, spotPrice, subnetId, tagSpecifications, userData, weightedCapacity);
        }
    }
}
