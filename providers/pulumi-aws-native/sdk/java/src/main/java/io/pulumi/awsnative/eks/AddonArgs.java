// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.eks;

import io.pulumi.awsnative.eks.enums.AddonResolveConflicts;
import io.pulumi.awsnative.eks.inputs.AddonTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AddonArgs extends io.pulumi.resources.ResourceArgs {

    public static final AddonArgs Empty = new AddonArgs();

    /**
     * Name of Addon
     * 
     */
    @Import(name="addonName")
      private final @Nullable Output<String> addonName;

    public Output<String> getAddonName() {
        return this.addonName == null ? Output.empty() : this.addonName;
    }

    /**
     * Version of Addon
     * 
     */
    @Import(name="addonVersion")
      private final @Nullable Output<String> addonVersion;

    public Output<String> getAddonVersion() {
        return this.addonVersion == null ? Output.empty() : this.addonVersion;
    }

    /**
     * Name of Cluster
     * 
     */
    @Import(name="clusterName", required=true)
      private final Output<String> clusterName;

    public Output<String> getClusterName() {
        return this.clusterName;
    }

    /**
     * Resolve parameter value conflicts
     * 
     */
    @Import(name="resolveConflicts")
      private final @Nullable Output<AddonResolveConflicts> resolveConflicts;

    public Output<AddonResolveConflicts> getResolveConflicts() {
        return this.resolveConflicts == null ? Output.empty() : this.resolveConflicts;
    }

    /**
     * IAM role to bind to the add-on's service account
     * 
     */
    @Import(name="serviceAccountRoleArn")
      private final @Nullable Output<String> serviceAccountRoleArn;

    public Output<String> getServiceAccountRoleArn() {
        return this.serviceAccountRoleArn == null ? Output.empty() : this.serviceAccountRoleArn;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<AddonTagArgs>> tags;

    public Output<List<AddonTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public AddonArgs(
        @Nullable Output<String> addonName,
        @Nullable Output<String> addonVersion,
        Output<String> clusterName,
        @Nullable Output<AddonResolveConflicts> resolveConflicts,
        @Nullable Output<String> serviceAccountRoleArn,
        @Nullable Output<List<AddonTagArgs>> tags) {
        this.addonName = addonName;
        this.addonVersion = addonVersion;
        this.clusterName = Objects.requireNonNull(clusterName, "expected parameter 'clusterName' to be non-null");
        this.resolveConflicts = resolveConflicts;
        this.serviceAccountRoleArn = serviceAccountRoleArn;
        this.tags = tags;
    }

    private AddonArgs() {
        this.addonName = Output.empty();
        this.addonVersion = Output.empty();
        this.clusterName = Output.empty();
        this.resolveConflicts = Output.empty();
        this.serviceAccountRoleArn = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AddonArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> addonName;
        private @Nullable Output<String> addonVersion;
        private Output<String> clusterName;
        private @Nullable Output<AddonResolveConflicts> resolveConflicts;
        private @Nullable Output<String> serviceAccountRoleArn;
        private @Nullable Output<List<AddonTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AddonArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonName = defaults.addonName;
    	      this.addonVersion = defaults.addonVersion;
    	      this.clusterName = defaults.clusterName;
    	      this.resolveConflicts = defaults.resolveConflicts;
    	      this.serviceAccountRoleArn = defaults.serviceAccountRoleArn;
    	      this.tags = defaults.tags;
        }

        public Builder addonName(@Nullable Output<String> addonName) {
            this.addonName = addonName;
            return this;
        }

        public Builder addonName(@Nullable String addonName) {
            this.addonName = Output.ofNullable(addonName);
            return this;
        }

        public Builder addonVersion(@Nullable Output<String> addonVersion) {
            this.addonVersion = addonVersion;
            return this;
        }

        public Builder addonVersion(@Nullable String addonVersion) {
            this.addonVersion = Output.ofNullable(addonVersion);
            return this;
        }

        public Builder clusterName(Output<String> clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }

        public Builder clusterName(String clusterName) {
            this.clusterName = Output.of(Objects.requireNonNull(clusterName));
            return this;
        }

        public Builder resolveConflicts(@Nullable Output<AddonResolveConflicts> resolveConflicts) {
            this.resolveConflicts = resolveConflicts;
            return this;
        }

        public Builder resolveConflicts(@Nullable AddonResolveConflicts resolveConflicts) {
            this.resolveConflicts = Output.ofNullable(resolveConflicts);
            return this;
        }

        public Builder serviceAccountRoleArn(@Nullable Output<String> serviceAccountRoleArn) {
            this.serviceAccountRoleArn = serviceAccountRoleArn;
            return this;
        }

        public Builder serviceAccountRoleArn(@Nullable String serviceAccountRoleArn) {
            this.serviceAccountRoleArn = Output.ofNullable(serviceAccountRoleArn);
            return this;
        }

        public Builder tags(@Nullable Output<List<AddonTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<AddonTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public AddonArgs build() {
            return new AddonArgs(addonName, addonVersion, clusterName, resolveConflicts, serviceAccountRoleArn, tags);
        }
    }
}
