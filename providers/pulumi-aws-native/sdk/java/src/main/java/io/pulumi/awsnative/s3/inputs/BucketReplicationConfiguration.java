// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.awsnative.s3.inputs.BucketReplicationRule;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.
 * 
 */
public final class BucketReplicationConfiguration extends io.pulumi.resources.InvokeArgs {

    public static final BucketReplicationConfiguration Empty = new BucketReplicationConfiguration();

    /**
     * The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects.
     * 
     */
    @Import(name="role", required=true)
      private final String role;

    public String getRole() {
        return this.role;
    }

    /**
     * A container for one or more replication rules.
     * 
     */
    @Import(name="rules", required=true)
      private final List<BucketReplicationRule> rules;

    public List<BucketReplicationRule> getRules() {
        return this.rules;
    }

    public BucketReplicationConfiguration(
        String role,
        List<BucketReplicationRule> rules) {
        this.role = Objects.requireNonNull(role, "expected parameter 'role' to be non-null");
        this.rules = Objects.requireNonNull(rules, "expected parameter 'rules' to be non-null");
    }

    private BucketReplicationConfiguration() {
        this.role = null;
        this.rules = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String role;
        private List<BucketReplicationRule> rules;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketReplicationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.role = defaults.role;
    	      this.rules = defaults.rules;
        }

        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }

        public Builder rules(List<BucketReplicationRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public BucketReplicationConfiguration build() {
            return new BucketReplicationConfiguration(role, rules);
        }
    }
}
