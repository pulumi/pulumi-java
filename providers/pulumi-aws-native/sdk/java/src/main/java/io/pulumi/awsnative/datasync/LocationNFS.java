// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.datasync;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.datasync.LocationNFSArgs;
import io.pulumi.awsnative.datasync.outputs.LocationNFSMountOptions;
import io.pulumi.awsnative.datasync.outputs.LocationNFSOnPremConfig;
import io.pulumi.awsnative.datasync.outputs.LocationNFSTag;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::DataSync::LocationNFS
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws-native:datasync:LocationNFS")
public class LocationNFS extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the NFS location.
     * 
     */
    @Export(name="locationArn", type=String.class, parameters={})
    private Output<String> locationArn;

    /**
     * @return The Amazon Resource Name (ARN) of the NFS location.
     * 
     */
    public Output<String> getLocationArn() {
        return this.locationArn;
    }
    /**
     * The URL of the NFS location that was described.
     * 
     */
    @Export(name="locationUri", type=String.class, parameters={})
    private Output<String> locationUri;

    /**
     * @return The URL of the NFS location that was described.
     * 
     */
    public Output<String> getLocationUri() {
        return this.locationUri;
    }
    @Export(name="mountOptions", type=LocationNFSMountOptions.class, parameters={})
    private Output</* @Nullable */ LocationNFSMountOptions> mountOptions;

    public Output</* @Nullable */ LocationNFSMountOptions> getMountOptions() {
        return this.mountOptions;
    }
    @Export(name="onPremConfig", type=LocationNFSOnPremConfig.class, parameters={})
    private Output<LocationNFSOnPremConfig> onPremConfig;

    public Output<LocationNFSOnPremConfig> getOnPremConfig() {
        return this.onPremConfig;
    }
    /**
     * The name of the NFS server. This value is the IP address or DNS name of the NFS server.
     * 
     */
    @Export(name="serverHostname", type=String.class, parameters={})
    private Output<String> serverHostname;

    /**
     * @return The name of the NFS server. This value is the IP address or DNS name of the NFS server.
     * 
     */
    public Output<String> getServerHostname() {
        return this.serverHostname;
    }
    /**
     * The subdirectory in the NFS file system that is used to read data from the NFS source location or write data to the NFS destination.
     * 
     */
    @Export(name="subdirectory", type=String.class, parameters={})
    private Output<String> subdirectory;

    /**
     * @return The subdirectory in the NFS file system that is used to read data from the NFS source location or write data to the NFS destination.
     * 
     */
    public Output<String> getSubdirectory() {
        return this.subdirectory;
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Export(name="tags", type=List.class, parameters={LocationNFSTag.class})
    private Output</* @Nullable */ List<LocationNFSTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Output</* @Nullable */ List<LocationNFSTag>> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LocationNFS(String name) {
        this(name, LocationNFSArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LocationNFS(String name, LocationNFSArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LocationNFS(String name, LocationNFSArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:datasync:LocationNFS", name, args == null ? LocationNFSArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private LocationNFS(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:datasync:LocationNFS", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LocationNFS get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new LocationNFS(name, id, options);
    }
}
