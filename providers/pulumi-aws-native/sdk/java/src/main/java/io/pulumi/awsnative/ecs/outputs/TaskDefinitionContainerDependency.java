// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ecs.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class TaskDefinitionContainerDependency {
    private final @Nullable String condition;
    private final @Nullable String containerName;

    @OutputCustomType.Constructor({"condition","containerName"})
    private TaskDefinitionContainerDependency(
        @Nullable String condition,
        @Nullable String containerName) {
        this.condition = condition;
        this.containerName = containerName;
    }

    public Optional<String> getCondition() {
        return Optional.ofNullable(this.condition);
    }
    public Optional<String> getContainerName() {
        return Optional.ofNullable(this.containerName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskDefinitionContainerDependency defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String condition;
        private @Nullable String containerName;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskDefinitionContainerDependency defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
    	      this.containerName = defaults.containerName;
        }

        public Builder setCondition(@Nullable String condition) {
            this.condition = condition;
            return this;
        }

        public Builder setContainerName(@Nullable String containerName) {
            this.containerName = containerName;
            return this;
        }

        public TaskDefinitionContainerDependency build() {
            return new TaskDefinitionContainerDependency(condition, containerName);
        }
    }
}
