// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.refactorspaces;

import io.pulumi.awsnative.refactorspaces.enums.ServiceEndpointType;
import io.pulumi.awsnative.refactorspaces.inputs.ServiceLambdaEndpointInputArgs;
import io.pulumi.awsnative.refactorspaces.inputs.ServiceTagArgs;
import io.pulumi.awsnative.refactorspaces.inputs.ServiceUrlEndpointInputArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceArgs Empty = new ServiceArgs();

    @Import(name="applicationIdentifier", required=true)
      private final Output<String> applicationIdentifier;

    public Output<String> getApplicationIdentifier() {
        return this.applicationIdentifier;
    }

    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    @Import(name="endpointType")
      private final @Nullable Output<ServiceEndpointType> endpointType;

    public Output<ServiceEndpointType> getEndpointType() {
        return this.endpointType == null ? Output.empty() : this.endpointType;
    }

    @Import(name="environmentIdentifier", required=true)
      private final Output<String> environmentIdentifier;

    public Output<String> getEnvironmentIdentifier() {
        return this.environmentIdentifier;
    }

    @Import(name="lambdaEndpoint")
      private final @Nullable Output<ServiceLambdaEndpointInputArgs> lambdaEndpoint;

    public Output<ServiceLambdaEndpointInputArgs> getLambdaEndpoint() {
        return this.lambdaEndpoint == null ? Output.empty() : this.lambdaEndpoint;
    }

    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<ServiceTagArgs>> tags;

    public Output<List<ServiceTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    @Import(name="urlEndpoint")
      private final @Nullable Output<ServiceUrlEndpointInputArgs> urlEndpoint;

    public Output<ServiceUrlEndpointInputArgs> getUrlEndpoint() {
        return this.urlEndpoint == null ? Output.empty() : this.urlEndpoint;
    }

    @Import(name="vpcId")
      private final @Nullable Output<String> vpcId;

    public Output<String> getVpcId() {
        return this.vpcId == null ? Output.empty() : this.vpcId;
    }

    public ServiceArgs(
        Output<String> applicationIdentifier,
        @Nullable Output<String> description,
        @Nullable Output<ServiceEndpointType> endpointType,
        Output<String> environmentIdentifier,
        @Nullable Output<ServiceLambdaEndpointInputArgs> lambdaEndpoint,
        @Nullable Output<String> name,
        @Nullable Output<List<ServiceTagArgs>> tags,
        @Nullable Output<ServiceUrlEndpointInputArgs> urlEndpoint,
        @Nullable Output<String> vpcId) {
        this.applicationIdentifier = Objects.requireNonNull(applicationIdentifier, "expected parameter 'applicationIdentifier' to be non-null");
        this.description = description;
        this.endpointType = endpointType;
        this.environmentIdentifier = Objects.requireNonNull(environmentIdentifier, "expected parameter 'environmentIdentifier' to be non-null");
        this.lambdaEndpoint = lambdaEndpoint;
        this.name = name;
        this.tags = tags;
        this.urlEndpoint = urlEndpoint;
        this.vpcId = vpcId;
    }

    private ServiceArgs() {
        this.applicationIdentifier = Output.empty();
        this.description = Output.empty();
        this.endpointType = Output.empty();
        this.environmentIdentifier = Output.empty();
        this.lambdaEndpoint = Output.empty();
        this.name = Output.empty();
        this.tags = Output.empty();
        this.urlEndpoint = Output.empty();
        this.vpcId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> applicationIdentifier;
        private @Nullable Output<String> description;
        private @Nullable Output<ServiceEndpointType> endpointType;
        private Output<String> environmentIdentifier;
        private @Nullable Output<ServiceLambdaEndpointInputArgs> lambdaEndpoint;
        private @Nullable Output<String> name;
        private @Nullable Output<List<ServiceTagArgs>> tags;
        private @Nullable Output<ServiceUrlEndpointInputArgs> urlEndpoint;
        private @Nullable Output<String> vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationIdentifier = defaults.applicationIdentifier;
    	      this.description = defaults.description;
    	      this.endpointType = defaults.endpointType;
    	      this.environmentIdentifier = defaults.environmentIdentifier;
    	      this.lambdaEndpoint = defaults.lambdaEndpoint;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.urlEndpoint = defaults.urlEndpoint;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder applicationIdentifier(Output<String> applicationIdentifier) {
            this.applicationIdentifier = Objects.requireNonNull(applicationIdentifier);
            return this;
        }
        public Builder applicationIdentifier(String applicationIdentifier) {
            this.applicationIdentifier = Output.of(Objects.requireNonNull(applicationIdentifier));
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder endpointType(@Nullable Output<ServiceEndpointType> endpointType) {
            this.endpointType = endpointType;
            return this;
        }
        public Builder endpointType(@Nullable ServiceEndpointType endpointType) {
            this.endpointType = Output.ofNullable(endpointType);
            return this;
        }
        public Builder environmentIdentifier(Output<String> environmentIdentifier) {
            this.environmentIdentifier = Objects.requireNonNull(environmentIdentifier);
            return this;
        }
        public Builder environmentIdentifier(String environmentIdentifier) {
            this.environmentIdentifier = Output.of(Objects.requireNonNull(environmentIdentifier));
            return this;
        }
        public Builder lambdaEndpoint(@Nullable Output<ServiceLambdaEndpointInputArgs> lambdaEndpoint) {
            this.lambdaEndpoint = lambdaEndpoint;
            return this;
        }
        public Builder lambdaEndpoint(@Nullable ServiceLambdaEndpointInputArgs lambdaEndpoint) {
            this.lambdaEndpoint = Output.ofNullable(lambdaEndpoint);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder tags(@Nullable Output<List<ServiceTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<ServiceTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tags(ServiceTagArgs... tags) {
            return tags(List.of(tags));
        }
        public Builder urlEndpoint(@Nullable Output<ServiceUrlEndpointInputArgs> urlEndpoint) {
            this.urlEndpoint = urlEndpoint;
            return this;
        }
        public Builder urlEndpoint(@Nullable ServiceUrlEndpointInputArgs urlEndpoint) {
            this.urlEndpoint = Output.ofNullable(urlEndpoint);
            return this;
        }
        public Builder vpcId(@Nullable Output<String> vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = Output.ofNullable(vpcId);
            return this;
        }        public ServiceArgs build() {
            return new ServiceArgs(applicationIdentifier, description, endpointType, environmentIdentifier, lambdaEndpoint, name, tags, urlEndpoint, vpcId);
        }
    }
}
