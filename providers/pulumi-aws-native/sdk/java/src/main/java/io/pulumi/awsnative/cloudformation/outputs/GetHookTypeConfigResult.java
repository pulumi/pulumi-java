// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudformation.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHookTypeConfigResult {
    /**
     * The configuration data for the extension, in this account and region.
     * 
     */
    private final @Nullable String configuration;
    /**
     * The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     * 
     */
    private final @Nullable String configurationArn;
    /**
     * The name of the type being registered.
     * 
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     * 
     */
    private final @Nullable String typeName;

    @CustomType.Constructor
    private GetHookTypeConfigResult(
        @CustomType.Parameter("configuration") @Nullable String configuration,
        @CustomType.Parameter("configurationArn") @Nullable String configurationArn,
        @CustomType.Parameter("typeName") @Nullable String typeName) {
        this.configuration = configuration;
        this.configurationArn = configurationArn;
        this.typeName = typeName;
    }

    /**
     * The configuration data for the extension, in this account and region.
     * 
    */
    public Optional<String> getConfiguration() {
        return Optional.ofNullable(this.configuration);
    }
    /**
     * The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     * 
    */
    public Optional<String> getConfigurationArn() {
        return Optional.ofNullable(this.configurationArn);
    }
    /**
     * The name of the type being registered.
     * 
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     * 
    */
    public Optional<String> getTypeName() {
        return Optional.ofNullable(this.typeName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHookTypeConfigResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String configuration;
        private @Nullable String configurationArn;
        private @Nullable String typeName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHookTypeConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.configurationArn = defaults.configurationArn;
    	      this.typeName = defaults.typeName;
        }

        public Builder configuration(@Nullable String configuration) {
            this.configuration = configuration;
            return this;
        }
        public Builder configurationArn(@Nullable String configurationArn) {
            this.configurationArn = configurationArn;
            return this;
        }
        public Builder typeName(@Nullable String typeName) {
            this.typeName = typeName;
            return this;
        }        public GetHookTypeConfigResult build() {
            return new GetHookTypeConfigResult(configuration, configurationArn, typeName);
        }
    }
}
