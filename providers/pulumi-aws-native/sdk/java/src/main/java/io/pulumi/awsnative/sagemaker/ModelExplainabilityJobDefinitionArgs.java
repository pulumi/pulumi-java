// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.sagemaker;

import io.pulumi.awsnative.sagemaker.inputs.ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs;
import io.pulumi.awsnative.sagemaker.inputs.ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs;
import io.pulumi.awsnative.sagemaker.inputs.ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs;
import io.pulumi.awsnative.sagemaker.inputs.ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs;
import io.pulumi.awsnative.sagemaker.inputs.ModelExplainabilityJobDefinitionMonitoringResourcesArgs;
import io.pulumi.awsnative.sagemaker.inputs.ModelExplainabilityJobDefinitionNetworkConfigArgs;
import io.pulumi.awsnative.sagemaker.inputs.ModelExplainabilityJobDefinitionStoppingConditionArgs;
import io.pulumi.awsnative.sagemaker.inputs.ModelExplainabilityJobDefinitionTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ModelExplainabilityJobDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ModelExplainabilityJobDefinitionArgs Empty = new ModelExplainabilityJobDefinitionArgs();

    @InputImport(name="jobDefinitionName")
      private final @Nullable Output<String> jobDefinitionName;

    public Output<String> getJobDefinitionName() {
        return this.jobDefinitionName == null ? Output.empty() : this.jobDefinitionName;
    }

    @InputImport(name="jobResources", required=true)
      private final Output<ModelExplainabilityJobDefinitionMonitoringResourcesArgs> jobResources;

    public Output<ModelExplainabilityJobDefinitionMonitoringResourcesArgs> getJobResources() {
        return this.jobResources;
    }

    @InputImport(name="modelExplainabilityAppSpecification", required=true)
      private final Output<ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs> modelExplainabilityAppSpecification;

    public Output<ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs> getModelExplainabilityAppSpecification() {
        return this.modelExplainabilityAppSpecification;
    }

    @InputImport(name="modelExplainabilityBaselineConfig")
      private final @Nullable Output<ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs> modelExplainabilityBaselineConfig;

    public Output<ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs> getModelExplainabilityBaselineConfig() {
        return this.modelExplainabilityBaselineConfig == null ? Output.empty() : this.modelExplainabilityBaselineConfig;
    }

    @InputImport(name="modelExplainabilityJobInput", required=true)
      private final Output<ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs> modelExplainabilityJobInput;

    public Output<ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs> getModelExplainabilityJobInput() {
        return this.modelExplainabilityJobInput;
    }

    @InputImport(name="modelExplainabilityJobOutputConfig", required=true)
      private final Output<ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs> modelExplainabilityJobOutputConfig;

    public Output<ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs> getModelExplainabilityJobOutputConfig() {
        return this.modelExplainabilityJobOutputConfig;
    }

    @InputImport(name="networkConfig")
      private final @Nullable Output<ModelExplainabilityJobDefinitionNetworkConfigArgs> networkConfig;

    public Output<ModelExplainabilityJobDefinitionNetworkConfigArgs> getNetworkConfig() {
        return this.networkConfig == null ? Output.empty() : this.networkConfig;
    }

    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     * 
     */
    @InputImport(name="roleArn", required=true)
      private final Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn;
    }

    @InputImport(name="stoppingCondition")
      private final @Nullable Output<ModelExplainabilityJobDefinitionStoppingConditionArgs> stoppingCondition;

    public Output<ModelExplainabilityJobDefinitionStoppingConditionArgs> getStoppingCondition() {
        return this.stoppingCondition == null ? Output.empty() : this.stoppingCondition;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<List<ModelExplainabilityJobDefinitionTagArgs>> tags;

    public Output<List<ModelExplainabilityJobDefinitionTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ModelExplainabilityJobDefinitionArgs(
        @Nullable Output<String> jobDefinitionName,
        Output<ModelExplainabilityJobDefinitionMonitoringResourcesArgs> jobResources,
        Output<ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs> modelExplainabilityAppSpecification,
        @Nullable Output<ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs> modelExplainabilityBaselineConfig,
        Output<ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs> modelExplainabilityJobInput,
        Output<ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs> modelExplainabilityJobOutputConfig,
        @Nullable Output<ModelExplainabilityJobDefinitionNetworkConfigArgs> networkConfig,
        Output<String> roleArn,
        @Nullable Output<ModelExplainabilityJobDefinitionStoppingConditionArgs> stoppingCondition,
        @Nullable Output<List<ModelExplainabilityJobDefinitionTagArgs>> tags) {
        this.jobDefinitionName = jobDefinitionName;
        this.jobResources = Objects.requireNonNull(jobResources, "expected parameter 'jobResources' to be non-null");
        this.modelExplainabilityAppSpecification = Objects.requireNonNull(modelExplainabilityAppSpecification, "expected parameter 'modelExplainabilityAppSpecification' to be non-null");
        this.modelExplainabilityBaselineConfig = modelExplainabilityBaselineConfig;
        this.modelExplainabilityJobInput = Objects.requireNonNull(modelExplainabilityJobInput, "expected parameter 'modelExplainabilityJobInput' to be non-null");
        this.modelExplainabilityJobOutputConfig = Objects.requireNonNull(modelExplainabilityJobOutputConfig, "expected parameter 'modelExplainabilityJobOutputConfig' to be non-null");
        this.networkConfig = networkConfig;
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.stoppingCondition = stoppingCondition;
        this.tags = tags;
    }

    private ModelExplainabilityJobDefinitionArgs() {
        this.jobDefinitionName = Output.empty();
        this.jobResources = Output.empty();
        this.modelExplainabilityAppSpecification = Output.empty();
        this.modelExplainabilityBaselineConfig = Output.empty();
        this.modelExplainabilityJobInput = Output.empty();
        this.modelExplainabilityJobOutputConfig = Output.empty();
        this.networkConfig = Output.empty();
        this.roleArn = Output.empty();
        this.stoppingCondition = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelExplainabilityJobDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> jobDefinitionName;
        private Output<ModelExplainabilityJobDefinitionMonitoringResourcesArgs> jobResources;
        private Output<ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs> modelExplainabilityAppSpecification;
        private @Nullable Output<ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs> modelExplainabilityBaselineConfig;
        private Output<ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs> modelExplainabilityJobInput;
        private Output<ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs> modelExplainabilityJobOutputConfig;
        private @Nullable Output<ModelExplainabilityJobDefinitionNetworkConfigArgs> networkConfig;
        private Output<String> roleArn;
        private @Nullable Output<ModelExplainabilityJobDefinitionStoppingConditionArgs> stoppingCondition;
        private @Nullable Output<List<ModelExplainabilityJobDefinitionTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ModelExplainabilityJobDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jobDefinitionName = defaults.jobDefinitionName;
    	      this.jobResources = defaults.jobResources;
    	      this.modelExplainabilityAppSpecification = defaults.modelExplainabilityAppSpecification;
    	      this.modelExplainabilityBaselineConfig = defaults.modelExplainabilityBaselineConfig;
    	      this.modelExplainabilityJobInput = defaults.modelExplainabilityJobInput;
    	      this.modelExplainabilityJobOutputConfig = defaults.modelExplainabilityJobOutputConfig;
    	      this.networkConfig = defaults.networkConfig;
    	      this.roleArn = defaults.roleArn;
    	      this.stoppingCondition = defaults.stoppingCondition;
    	      this.tags = defaults.tags;
        }

        public Builder jobDefinitionName(@Nullable Output<String> jobDefinitionName) {
            this.jobDefinitionName = jobDefinitionName;
            return this;
        }

        public Builder jobDefinitionName(@Nullable String jobDefinitionName) {
            this.jobDefinitionName = Output.ofNullable(jobDefinitionName);
            return this;
        }

        public Builder jobResources(Output<ModelExplainabilityJobDefinitionMonitoringResourcesArgs> jobResources) {
            this.jobResources = Objects.requireNonNull(jobResources);
            return this;
        }

        public Builder jobResources(ModelExplainabilityJobDefinitionMonitoringResourcesArgs jobResources) {
            this.jobResources = Output.of(Objects.requireNonNull(jobResources));
            return this;
        }

        public Builder modelExplainabilityAppSpecification(Output<ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs> modelExplainabilityAppSpecification) {
            this.modelExplainabilityAppSpecification = Objects.requireNonNull(modelExplainabilityAppSpecification);
            return this;
        }

        public Builder modelExplainabilityAppSpecification(ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs modelExplainabilityAppSpecification) {
            this.modelExplainabilityAppSpecification = Output.of(Objects.requireNonNull(modelExplainabilityAppSpecification));
            return this;
        }

        public Builder modelExplainabilityBaselineConfig(@Nullable Output<ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs> modelExplainabilityBaselineConfig) {
            this.modelExplainabilityBaselineConfig = modelExplainabilityBaselineConfig;
            return this;
        }

        public Builder modelExplainabilityBaselineConfig(@Nullable ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs modelExplainabilityBaselineConfig) {
            this.modelExplainabilityBaselineConfig = Output.ofNullable(modelExplainabilityBaselineConfig);
            return this;
        }

        public Builder modelExplainabilityJobInput(Output<ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs> modelExplainabilityJobInput) {
            this.modelExplainabilityJobInput = Objects.requireNonNull(modelExplainabilityJobInput);
            return this;
        }

        public Builder modelExplainabilityJobInput(ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs modelExplainabilityJobInput) {
            this.modelExplainabilityJobInput = Output.of(Objects.requireNonNull(modelExplainabilityJobInput));
            return this;
        }

        public Builder modelExplainabilityJobOutputConfig(Output<ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs> modelExplainabilityJobOutputConfig) {
            this.modelExplainabilityJobOutputConfig = Objects.requireNonNull(modelExplainabilityJobOutputConfig);
            return this;
        }

        public Builder modelExplainabilityJobOutputConfig(ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs modelExplainabilityJobOutputConfig) {
            this.modelExplainabilityJobOutputConfig = Output.of(Objects.requireNonNull(modelExplainabilityJobOutputConfig));
            return this;
        }

        public Builder networkConfig(@Nullable Output<ModelExplainabilityJobDefinitionNetworkConfigArgs> networkConfig) {
            this.networkConfig = networkConfig;
            return this;
        }

        public Builder networkConfig(@Nullable ModelExplainabilityJobDefinitionNetworkConfigArgs networkConfig) {
            this.networkConfig = Output.ofNullable(networkConfig);
            return this;
        }

        public Builder roleArn(Output<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }

        public Builder roleArn(String roleArn) {
            this.roleArn = Output.of(Objects.requireNonNull(roleArn));
            return this;
        }

        public Builder stoppingCondition(@Nullable Output<ModelExplainabilityJobDefinitionStoppingConditionArgs> stoppingCondition) {
            this.stoppingCondition = stoppingCondition;
            return this;
        }

        public Builder stoppingCondition(@Nullable ModelExplainabilityJobDefinitionStoppingConditionArgs stoppingCondition) {
            this.stoppingCondition = Output.ofNullable(stoppingCondition);
            return this;
        }

        public Builder tags(@Nullable Output<List<ModelExplainabilityJobDefinitionTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<ModelExplainabilityJobDefinitionTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public ModelExplainabilityJobDefinitionArgs build() {
            return new ModelExplainabilityJobDefinitionArgs(jobDefinitionName, jobResources, modelExplainabilityAppSpecification, modelExplainabilityBaselineConfig, modelExplainabilityJobInput, modelExplainabilityJobOutputConfig, networkConfig, roleArn, stoppingCondition, tags);
        }
    }
}
