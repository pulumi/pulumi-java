// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediapackage.inputs;

import io.pulumi.awsnative.mediapackage.enums.PackagingConfigurationHlsEncryptionEncryptionMethod;
import io.pulumi.awsnative.mediapackage.inputs.PackagingConfigurationSpekeKeyProvider;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An HTTP Live Streaming (HLS) encryption configuration.
 * 
 */
public final class PackagingConfigurationHlsEncryption extends io.pulumi.resources.InvokeArgs {

    public static final PackagingConfigurationHlsEncryption Empty = new PackagingConfigurationHlsEncryption();

    /**
     * An HTTP Live Streaming (HLS) encryption configuration.
     * 
     */
    @Import(name="constantInitializationVector")
      private final @Nullable String constantInitializationVector;

    public Optional<String> getConstantInitializationVector() {
        return this.constantInitializationVector == null ? Optional.empty() : Optional.ofNullable(this.constantInitializationVector);
    }

    /**
     * The encryption method to use.
     * 
     */
    @Import(name="encryptionMethod")
      private final @Nullable PackagingConfigurationHlsEncryptionEncryptionMethod encryptionMethod;

    public Optional<PackagingConfigurationHlsEncryptionEncryptionMethod> getEncryptionMethod() {
        return this.encryptionMethod == null ? Optional.empty() : Optional.ofNullable(this.encryptionMethod);
    }

    @Import(name="spekeKeyProvider", required=true)
      private final PackagingConfigurationSpekeKeyProvider spekeKeyProvider;

    public PackagingConfigurationSpekeKeyProvider getSpekeKeyProvider() {
        return this.spekeKeyProvider;
    }

    public PackagingConfigurationHlsEncryption(
        @Nullable String constantInitializationVector,
        @Nullable PackagingConfigurationHlsEncryptionEncryptionMethod encryptionMethod,
        PackagingConfigurationSpekeKeyProvider spekeKeyProvider) {
        this.constantInitializationVector = constantInitializationVector;
        this.encryptionMethod = encryptionMethod;
        this.spekeKeyProvider = Objects.requireNonNull(spekeKeyProvider, "expected parameter 'spekeKeyProvider' to be non-null");
    }

    private PackagingConfigurationHlsEncryption() {
        this.constantInitializationVector = null;
        this.encryptionMethod = null;
        this.spekeKeyProvider = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PackagingConfigurationHlsEncryption defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String constantInitializationVector;
        private @Nullable PackagingConfigurationHlsEncryptionEncryptionMethod encryptionMethod;
        private PackagingConfigurationSpekeKeyProvider spekeKeyProvider;

        public Builder() {
    	      // Empty
        }

        public Builder(PackagingConfigurationHlsEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.constantInitializationVector = defaults.constantInitializationVector;
    	      this.encryptionMethod = defaults.encryptionMethod;
    	      this.spekeKeyProvider = defaults.spekeKeyProvider;
        }

        public Builder constantInitializationVector(@Nullable String constantInitializationVector) {
            this.constantInitializationVector = constantInitializationVector;
            return this;
        }
        public Builder encryptionMethod(@Nullable PackagingConfigurationHlsEncryptionEncryptionMethod encryptionMethod) {
            this.encryptionMethod = encryptionMethod;
            return this;
        }
        public Builder spekeKeyProvider(PackagingConfigurationSpekeKeyProvider spekeKeyProvider) {
            this.spekeKeyProvider = Objects.requireNonNull(spekeKeyProvider);
            return this;
        }        public PackagingConfigurationHlsEncryption build() {
            return new PackagingConfigurationHlsEncryption(constantInitializationVector, encryptionMethod, spekeKeyProvider);
        }
    }
}
