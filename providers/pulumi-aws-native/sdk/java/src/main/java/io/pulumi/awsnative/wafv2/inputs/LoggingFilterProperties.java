// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.wafv2.inputs;

import io.pulumi.awsnative.wafv2.enums.LoggingConfigurationLoggingFilterPropertiesDefaultBehavior;
import io.pulumi.awsnative.wafv2.inputs.LoggingConfigurationFilter;
import io.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


/**
 * Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
 * 
 */
public final class LoggingFilterProperties extends io.pulumi.resources.InvokeArgs {

    public static final LoggingFilterProperties Empty = new LoggingFilterProperties();

    /**
     * Default handling for logs that don't match any of the specified filtering conditions.
     * 
     */
    @Import(name="defaultBehavior", required=true)
      private final LoggingConfigurationLoggingFilterPropertiesDefaultBehavior defaultBehavior;

    public LoggingConfigurationLoggingFilterPropertiesDefaultBehavior getDefaultBehavior() {
        return this.defaultBehavior;
    }

    /**
     * The filters that you want to apply to the logs.
     * 
     */
    @Import(name="filters", required=true)
      private final List<LoggingConfigurationFilter> filters;

    public List<LoggingConfigurationFilter> getFilters() {
        return this.filters;
    }

    public LoggingFilterProperties(
        LoggingConfigurationLoggingFilterPropertiesDefaultBehavior defaultBehavior,
        List<LoggingConfigurationFilter> filters) {
        this.defaultBehavior = Objects.requireNonNull(defaultBehavior, "expected parameter 'defaultBehavior' to be non-null");
        this.filters = Objects.requireNonNull(filters, "expected parameter 'filters' to be non-null");
    }

    private LoggingFilterProperties() {
        this.defaultBehavior = null;
        this.filters = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoggingFilterProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingConfigurationLoggingFilterPropertiesDefaultBehavior defaultBehavior;
        private List<LoggingConfigurationFilter> filters;

        public Builder() {
    	      // Empty
        }

        public Builder(LoggingFilterProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultBehavior = defaults.defaultBehavior;
    	      this.filters = defaults.filters;
        }

        public Builder defaultBehavior(LoggingConfigurationLoggingFilterPropertiesDefaultBehavior defaultBehavior) {
            this.defaultBehavior = Objects.requireNonNull(defaultBehavior);
            return this;
        }
        public Builder filters(List<LoggingConfigurationFilter> filters) {
            this.filters = Objects.requireNonNull(filters);
            return this;
        }
        public Builder filters(LoggingConfigurationFilter... filters) {
            return filters(List.of(filters));
        }        public LoggingFilterProperties build() {
            return new LoggingFilterProperties(defaultBehavior, filters);
        }
    }
}
