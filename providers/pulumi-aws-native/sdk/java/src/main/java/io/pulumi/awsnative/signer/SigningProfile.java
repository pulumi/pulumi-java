// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.signer;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.signer.SigningProfileArgs;
import io.pulumi.awsnative.signer.enums.SigningProfilePlatformId;
import io.pulumi.awsnative.signer.outputs.SigningProfileSignatureValidityPeriod;
import io.pulumi.awsnative.signer.outputs.SigningProfileTag;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A signing profile is a signing template that can be used to carry out a pre-defined signing job.
 * 
 */
@ResourceType(type="aws-native:signer:SigningProfile")
public class SigningProfile extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the specified signing profile.
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the specified signing profile.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The ID of the target signing platform.
     * 
     */
    @OutputExport(name="platformId", type=SigningProfilePlatformId.class, parameters={})
    private Output<SigningProfilePlatformId> platformId;

    /**
     * @return The ID of the target signing platform.
     * 
     */
    public Output<SigningProfilePlatformId> getPlatformId() {
        return this.platformId;
    }
    /**
     * A name for the signing profile. AWS CloudFormation generates a unique physical ID and uses that ID for the signing profile name.
     * 
     */
    @OutputExport(name="profileName", type=String.class, parameters={})
    private Output<String> profileName;

    /**
     * @return A name for the signing profile. AWS CloudFormation generates a unique physical ID and uses that ID for the signing profile name.
     * 
     */
    public Output<String> getProfileName() {
        return this.profileName;
    }
    /**
     * A version for the signing profile. AWS Signer generates a unique version for each profile of the same profile name.
     * 
     */
    @OutputExport(name="profileVersion", type=String.class, parameters={})
    private Output<String> profileVersion;

    /**
     * @return A version for the signing profile. AWS Signer generates a unique version for each profile of the same profile name.
     * 
     */
    public Output<String> getProfileVersion() {
        return this.profileVersion;
    }
    /**
     * The Amazon Resource Name (ARN) of the specified signing profile version.
     * 
     */
    @OutputExport(name="profileVersionArn", type=String.class, parameters={})
    private Output<String> profileVersionArn;

    /**
     * @return The Amazon Resource Name (ARN) of the specified signing profile version.
     * 
     */
    public Output<String> getProfileVersionArn() {
        return this.profileVersionArn;
    }
    /**
     * Signature validity period of the profile.
     * 
     */
    @OutputExport(name="signatureValidityPeriod", type=SigningProfileSignatureValidityPeriod.class, parameters={})
    private Output</* @Nullable */ SigningProfileSignatureValidityPeriod> signatureValidityPeriod;

    /**
     * @return Signature validity period of the profile.
     * 
     */
    public Output</* @Nullable */ SigningProfileSignatureValidityPeriod> getSignatureValidityPeriod() {
        return this.signatureValidityPeriod;
    }
    /**
     * A list of tags associated with the signing profile.
     * 
     */
    @OutputExport(name="tags", type=List.class, parameters={SigningProfileTag.class})
    private Output</* @Nullable */ List<SigningProfileTag>> tags;

    /**
     * @return A list of tags associated with the signing profile.
     * 
     */
    public Output</* @Nullable */ List<SigningProfileTag>> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SigningProfile(String name, SigningProfileArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:signer:SigningProfile", name, args == null ? SigningProfileArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private SigningProfile(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:signer:SigningProfile", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SigningProfile get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SigningProfile(name, id, options);
    }
}
