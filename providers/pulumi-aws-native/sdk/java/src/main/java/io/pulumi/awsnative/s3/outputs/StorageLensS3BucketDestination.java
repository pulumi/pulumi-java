// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.outputs;

import io.pulumi.awsnative.s3.enums.StorageLensS3BucketDestinationFormat;
import io.pulumi.awsnative.s3.enums.StorageLensS3BucketDestinationOutputSchemaVersion;
import io.pulumi.awsnative.s3.outputs.StorageLensEncryption;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class StorageLensS3BucketDestination {
    /**
     * The AWS account ID that owns the destination S3 bucket.
     * 
     */
    private final String accountId;
    /**
     * The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
     * 
     */
    private final String arn;
    private final @Nullable StorageLensEncryption encryption;
    /**
     * Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
     * 
     */
    private final StorageLensS3BucketDestinationFormat format;
    /**
     * The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
     * 
     */
    private final StorageLensS3BucketDestinationOutputSchemaVersion outputSchemaVersion;
    /**
     * The prefix to use for Amazon S3 Storage Lens export.
     * 
     */
    private final @Nullable String prefix;

    @OutputCustomType.Constructor({"accountId","arn","encryption","format","outputSchemaVersion","prefix"})
    private StorageLensS3BucketDestination(
        String accountId,
        String arn,
        @Nullable StorageLensEncryption encryption,
        StorageLensS3BucketDestinationFormat format,
        StorageLensS3BucketDestinationOutputSchemaVersion outputSchemaVersion,
        @Nullable String prefix) {
        this.accountId = Objects.requireNonNull(accountId);
        this.arn = Objects.requireNonNull(arn);
        this.encryption = encryption;
        this.format = Objects.requireNonNull(format);
        this.outputSchemaVersion = Objects.requireNonNull(outputSchemaVersion);
        this.prefix = prefix;
    }

    /**
     * The AWS account ID that owns the destination S3 bucket.
     * 
     */
    public String getAccountId() {
        return this.accountId;
    }
    /**
     * The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
     * 
     */
    public String getArn() {
        return this.arn;
    }
    public Optional<StorageLensEncryption> getEncryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
     * 
     */
    public StorageLensS3BucketDestinationFormat getFormat() {
        return this.format;
    }
    /**
     * The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
     * 
     */
    public StorageLensS3BucketDestinationOutputSchemaVersion getOutputSchemaVersion() {
        return this.outputSchemaVersion;
    }
    /**
     * The prefix to use for Amazon S3 Storage Lens export.
     * 
     */
    public Optional<String> getPrefix() {
        return Optional.ofNullable(this.prefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageLensS3BucketDestination defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accountId;
        private String arn;
        private @Nullable StorageLensEncryption encryption;
        private StorageLensS3BucketDestinationFormat format;
        private StorageLensS3BucketDestinationOutputSchemaVersion outputSchemaVersion;
        private @Nullable String prefix;

        public Builder() {
    	      // Empty
        }

        public Builder(StorageLensS3BucketDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.arn = defaults.arn;
    	      this.encryption = defaults.encryption;
    	      this.format = defaults.format;
    	      this.outputSchemaVersion = defaults.outputSchemaVersion;
    	      this.prefix = defaults.prefix;
        }

        public Builder setAccountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }

        public Builder setArn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setEncryption(@Nullable StorageLensEncryption encryption) {
            this.encryption = encryption;
            return this;
        }

        public Builder setFormat(StorageLensS3BucketDestinationFormat format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }

        public Builder setOutputSchemaVersion(StorageLensS3BucketDestinationOutputSchemaVersion outputSchemaVersion) {
            this.outputSchemaVersion = Objects.requireNonNull(outputSchemaVersion);
            return this;
        }

        public Builder setPrefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }
        public StorageLensS3BucketDestination build() {
            return new StorageLensS3BucketDestination(accountId, arn, encryption, format, outputSchemaVersion, prefix);
        }
    }
}
