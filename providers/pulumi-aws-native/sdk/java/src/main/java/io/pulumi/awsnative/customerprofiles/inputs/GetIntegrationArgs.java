// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.customerprofiles.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class GetIntegrationArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetIntegrationArgs Empty = new GetIntegrationArgs();

    /**
     * The unique name of the domain.
     * 
     */
    @InputImport(name="domainName", required=true)
        private final String domainName;

    public String getDomainName() {
        return this.domainName;
    }

    /**
     * The URI of the S3 bucket or any other type of data source.
     * 
     */
    @InputImport(name="uri", required=true)
        private final String uri;

    public String getUri() {
        return this.uri;
    }

    public GetIntegrationArgs(
        String domainName,
        String uri) {
        this.domainName = Objects.requireNonNull(domainName, "expected parameter 'domainName' to be non-null");
        this.uri = Objects.requireNonNull(uri, "expected parameter 'uri' to be non-null");
    }

    private GetIntegrationArgs() {
        this.domainName = null;
        this.uri = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String domainName;
        private String uri;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIntegrationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.uri = defaults.uri;
        }

        public Builder setDomainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }

        public Builder setUri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }
        public GetIntegrationArgs build() {
            return new GetIntegrationArgs(domainName, uri);
        }
    }
}
