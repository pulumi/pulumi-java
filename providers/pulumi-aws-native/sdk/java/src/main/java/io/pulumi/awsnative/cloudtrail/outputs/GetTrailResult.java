// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudtrail.outputs;

import io.pulumi.awsnative.cloudtrail.outputs.TrailEventSelector;
import io.pulumi.awsnative.cloudtrail.outputs.TrailInsightSelector;
import io.pulumi.awsnative.cloudtrail.outputs.TrailTag;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetTrailResult {
    private final @Nullable String arn;
    private final @Nullable String cloudWatchLogsLogGroupArn;
    private final @Nullable String cloudWatchLogsRoleArn;
    private final @Nullable Boolean enableLogFileValidation;
    private final @Nullable List<TrailEventSelector> eventSelectors;
    private final @Nullable Boolean includeGlobalServiceEvents;
    private final @Nullable List<TrailInsightSelector> insightSelectors;
    private final @Nullable Boolean isLogging;
    private final @Nullable Boolean isMultiRegionTrail;
    private final @Nullable Boolean isOrganizationTrail;
    private final @Nullable String kMSKeyId;
    private final @Nullable String s3BucketName;
    private final @Nullable String s3KeyPrefix;
    private final @Nullable String snsTopicArn;
    private final @Nullable String snsTopicName;
    private final @Nullable List<TrailTag> tags;

    @OutputCustomType.Constructor({"arn","cloudWatchLogsLogGroupArn","cloudWatchLogsRoleArn","enableLogFileValidation","eventSelectors","includeGlobalServiceEvents","insightSelectors","isLogging","isMultiRegionTrail","isOrganizationTrail","kMSKeyId","s3BucketName","s3KeyPrefix","snsTopicArn","snsTopicName","tags"})
    private GetTrailResult(
        @Nullable String arn,
        @Nullable String cloudWatchLogsLogGroupArn,
        @Nullable String cloudWatchLogsRoleArn,
        @Nullable Boolean enableLogFileValidation,
        @Nullable List<TrailEventSelector> eventSelectors,
        @Nullable Boolean includeGlobalServiceEvents,
        @Nullable List<TrailInsightSelector> insightSelectors,
        @Nullable Boolean isLogging,
        @Nullable Boolean isMultiRegionTrail,
        @Nullable Boolean isOrganizationTrail,
        @Nullable String kMSKeyId,
        @Nullable String s3BucketName,
        @Nullable String s3KeyPrefix,
        @Nullable String snsTopicArn,
        @Nullable String snsTopicName,
        @Nullable List<TrailTag> tags) {
        this.arn = arn;
        this.cloudWatchLogsLogGroupArn = cloudWatchLogsLogGroupArn;
        this.cloudWatchLogsRoleArn = cloudWatchLogsRoleArn;
        this.enableLogFileValidation = enableLogFileValidation;
        this.eventSelectors = eventSelectors;
        this.includeGlobalServiceEvents = includeGlobalServiceEvents;
        this.insightSelectors = insightSelectors;
        this.isLogging = isLogging;
        this.isMultiRegionTrail = isMultiRegionTrail;
        this.isOrganizationTrail = isOrganizationTrail;
        this.kMSKeyId = kMSKeyId;
        this.s3BucketName = s3BucketName;
        this.s3KeyPrefix = s3KeyPrefix;
        this.snsTopicArn = snsTopicArn;
        this.snsTopicName = snsTopicName;
        this.tags = tags;
    }

    public Optional<String> getArn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> getCloudWatchLogsLogGroupArn() {
        return Optional.ofNullable(this.cloudWatchLogsLogGroupArn);
    }
    public Optional<String> getCloudWatchLogsRoleArn() {
        return Optional.ofNullable(this.cloudWatchLogsRoleArn);
    }
    public Optional<Boolean> getEnableLogFileValidation() {
        return Optional.ofNullable(this.enableLogFileValidation);
    }
    public List<TrailEventSelector> getEventSelectors() {
        return this.eventSelectors == null ? List.of() : this.eventSelectors;
    }
    public Optional<Boolean> getIncludeGlobalServiceEvents() {
        return Optional.ofNullable(this.includeGlobalServiceEvents);
    }
    public List<TrailInsightSelector> getInsightSelectors() {
        return this.insightSelectors == null ? List.of() : this.insightSelectors;
    }
    public Optional<Boolean> getIsLogging() {
        return Optional.ofNullable(this.isLogging);
    }
    public Optional<Boolean> getIsMultiRegionTrail() {
        return Optional.ofNullable(this.isMultiRegionTrail);
    }
    public Optional<Boolean> getIsOrganizationTrail() {
        return Optional.ofNullable(this.isOrganizationTrail);
    }
    public Optional<String> getKMSKeyId() {
        return Optional.ofNullable(this.kMSKeyId);
    }
    public Optional<String> getS3BucketName() {
        return Optional.ofNullable(this.s3BucketName);
    }
    public Optional<String> getS3KeyPrefix() {
        return Optional.ofNullable(this.s3KeyPrefix);
    }
    public Optional<String> getSnsTopicArn() {
        return Optional.ofNullable(this.snsTopicArn);
    }
    public Optional<String> getSnsTopicName() {
        return Optional.ofNullable(this.snsTopicName);
    }
    public List<TrailTag> getTags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrailResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String cloudWatchLogsLogGroupArn;
        private @Nullable String cloudWatchLogsRoleArn;
        private @Nullable Boolean enableLogFileValidation;
        private @Nullable List<TrailEventSelector> eventSelectors;
        private @Nullable Boolean includeGlobalServiceEvents;
        private @Nullable List<TrailInsightSelector> insightSelectors;
        private @Nullable Boolean isLogging;
        private @Nullable Boolean isMultiRegionTrail;
        private @Nullable Boolean isOrganizationTrail;
        private @Nullable String kMSKeyId;
        private @Nullable String s3BucketName;
        private @Nullable String s3KeyPrefix;
        private @Nullable String snsTopicArn;
        private @Nullable String snsTopicName;
        private @Nullable List<TrailTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTrailResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.cloudWatchLogsLogGroupArn = defaults.cloudWatchLogsLogGroupArn;
    	      this.cloudWatchLogsRoleArn = defaults.cloudWatchLogsRoleArn;
    	      this.enableLogFileValidation = defaults.enableLogFileValidation;
    	      this.eventSelectors = defaults.eventSelectors;
    	      this.includeGlobalServiceEvents = defaults.includeGlobalServiceEvents;
    	      this.insightSelectors = defaults.insightSelectors;
    	      this.isLogging = defaults.isLogging;
    	      this.isMultiRegionTrail = defaults.isMultiRegionTrail;
    	      this.isOrganizationTrail = defaults.isOrganizationTrail;
    	      this.kMSKeyId = defaults.kMSKeyId;
    	      this.s3BucketName = defaults.s3BucketName;
    	      this.s3KeyPrefix = defaults.s3KeyPrefix;
    	      this.snsTopicArn = defaults.snsTopicArn;
    	      this.snsTopicName = defaults.snsTopicName;
    	      this.tags = defaults.tags;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }

        public Builder setCloudWatchLogsLogGroupArn(@Nullable String cloudWatchLogsLogGroupArn) {
            this.cloudWatchLogsLogGroupArn = cloudWatchLogsLogGroupArn;
            return this;
        }

        public Builder setCloudWatchLogsRoleArn(@Nullable String cloudWatchLogsRoleArn) {
            this.cloudWatchLogsRoleArn = cloudWatchLogsRoleArn;
            return this;
        }

        public Builder setEnableLogFileValidation(@Nullable Boolean enableLogFileValidation) {
            this.enableLogFileValidation = enableLogFileValidation;
            return this;
        }

        public Builder setEventSelectors(@Nullable List<TrailEventSelector> eventSelectors) {
            this.eventSelectors = eventSelectors;
            return this;
        }

        public Builder setIncludeGlobalServiceEvents(@Nullable Boolean includeGlobalServiceEvents) {
            this.includeGlobalServiceEvents = includeGlobalServiceEvents;
            return this;
        }

        public Builder setInsightSelectors(@Nullable List<TrailInsightSelector> insightSelectors) {
            this.insightSelectors = insightSelectors;
            return this;
        }

        public Builder setIsLogging(@Nullable Boolean isLogging) {
            this.isLogging = isLogging;
            return this;
        }

        public Builder setIsMultiRegionTrail(@Nullable Boolean isMultiRegionTrail) {
            this.isMultiRegionTrail = isMultiRegionTrail;
            return this;
        }

        public Builder setIsOrganizationTrail(@Nullable Boolean isOrganizationTrail) {
            this.isOrganizationTrail = isOrganizationTrail;
            return this;
        }

        public Builder setKMSKeyId(@Nullable String kMSKeyId) {
            this.kMSKeyId = kMSKeyId;
            return this;
        }

        public Builder setS3BucketName(@Nullable String s3BucketName) {
            this.s3BucketName = s3BucketName;
            return this;
        }

        public Builder setS3KeyPrefix(@Nullable String s3KeyPrefix) {
            this.s3KeyPrefix = s3KeyPrefix;
            return this;
        }

        public Builder setSnsTopicArn(@Nullable String snsTopicArn) {
            this.snsTopicArn = snsTopicArn;
            return this;
        }

        public Builder setSnsTopicName(@Nullable String snsTopicName) {
            this.snsTopicName = snsTopicName;
            return this;
        }

        public Builder setTags(@Nullable List<TrailTag> tags) {
            this.tags = tags;
            return this;
        }

        public GetTrailResult build() {
            return new GetTrailResult(arn, cloudWatchLogsLogGroupArn, cloudWatchLogsRoleArn, enableLogFileValidation, eventSelectors, includeGlobalServiceEvents, insightSelectors, isLogging, isMultiRegionTrail, isOrganizationTrail, kMSKeyId, s3BucketName, s3KeyPrefix, snsTopicArn, snsTopicName, tags);
        }
    }
}
