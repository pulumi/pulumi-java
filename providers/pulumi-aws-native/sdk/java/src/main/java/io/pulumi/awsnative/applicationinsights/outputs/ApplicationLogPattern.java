// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.applicationinsights.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ApplicationLogPattern {
    /**
     * The log pattern.
     * 
     */
    private final String pattern;
    /**
     * The name of the log pattern.
     * 
     */
    private final String patternName;
    /**
     * Rank of the log pattern.
     * 
     */
    private final Integer rank;

    @CustomType.Constructor
    private ApplicationLogPattern(
        @CustomType.Parameter("pattern") String pattern,
        @CustomType.Parameter("patternName") String patternName,
        @CustomType.Parameter("rank") Integer rank) {
        this.pattern = pattern;
        this.patternName = patternName;
        this.rank = rank;
    }

    /**
     * The log pattern.
     * 
    */
    public String getPattern() {
        return this.pattern;
    }
    /**
     * The name of the log pattern.
     * 
    */
    public String getPatternName() {
        return this.patternName;
    }
    /**
     * Rank of the log pattern.
     * 
    */
    public Integer getRank() {
        return this.rank;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationLogPattern defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String pattern;
        private String patternName;
        private Integer rank;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationLogPattern defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pattern = defaults.pattern;
    	      this.patternName = defaults.patternName;
    	      this.rank = defaults.rank;
        }

        public Builder pattern(String pattern) {
            this.pattern = Objects.requireNonNull(pattern);
            return this;
        }
        public Builder patternName(String patternName) {
            this.patternName = Objects.requireNonNull(patternName);
            return this;
        }
        public Builder rank(Integer rank) {
            this.rank = Objects.requireNonNull(rank);
            return this;
        }        public ApplicationLogPattern build() {
            return new ApplicationLogPattern(pattern, patternName, rank);
        }
    }
}
