// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lightsail.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ContainerPublicDomainName {
    private final @Nullable String certificateName;
    private final @Nullable List<String> domainNames;

    @OutputCustomType.Constructor({"certificateName","domainNames"})
    private ContainerPublicDomainName(
        @Nullable String certificateName,
        @Nullable List<String> domainNames) {
        this.certificateName = certificateName;
        this.domainNames = domainNames;
    }

    public Optional<String> getCertificateName() {
        return Optional.ofNullable(this.certificateName);
    }
    public List<String> getDomainNames() {
        return this.domainNames == null ? List.of() : this.domainNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerPublicDomainName defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String certificateName;
        private @Nullable List<String> domainNames;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerPublicDomainName defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateName = defaults.certificateName;
    	      this.domainNames = defaults.domainNames;
        }

        public Builder setCertificateName(@Nullable String certificateName) {
            this.certificateName = certificateName;
            return this;
        }

        public Builder setDomainNames(@Nullable List<String> domainNames) {
            this.domainNames = domainNames;
            return this;
        }

        public ContainerPublicDomainName build() {
            return new ContainerPublicDomainName(certificateName, domainNames);
        }
    }
}
