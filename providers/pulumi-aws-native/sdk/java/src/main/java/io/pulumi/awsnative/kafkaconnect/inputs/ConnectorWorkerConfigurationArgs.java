// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kafkaconnect.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Specifies the worker configuration to use with the connector.
 * 
 */
public final class ConnectorWorkerConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConnectorWorkerConfigurationArgs Empty = new ConnectorWorkerConfigurationArgs();

    /**
     * The revision of the worker configuration to use.
     * 
     */
    @Import(name="revision", required=true)
      private final Output<Integer> revision;

    public Output<Integer> getRevision() {
        return this.revision;
    }

    /**
     * The Amazon Resource Name (ARN) of the worker configuration to use.
     * 
     */
    @Import(name="workerConfigurationArn", required=true)
      private final Output<String> workerConfigurationArn;

    public Output<String> getWorkerConfigurationArn() {
        return this.workerConfigurationArn;
    }

    public ConnectorWorkerConfigurationArgs(
        Output<Integer> revision,
        Output<String> workerConfigurationArn) {
        this.revision = Objects.requireNonNull(revision, "expected parameter 'revision' to be non-null");
        this.workerConfigurationArn = Objects.requireNonNull(workerConfigurationArn, "expected parameter 'workerConfigurationArn' to be non-null");
    }

    private ConnectorWorkerConfigurationArgs() {
        this.revision = Codegen.empty();
        this.workerConfigurationArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorWorkerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> revision;
        private Output<String> workerConfigurationArn;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectorWorkerConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.revision = defaults.revision;
    	      this.workerConfigurationArn = defaults.workerConfigurationArn;
        }

        public Builder revision(Output<Integer> revision) {
            this.revision = Objects.requireNonNull(revision);
            return this;
        }
        public Builder revision(Integer revision) {
            this.revision = Output.of(Objects.requireNonNull(revision));
            return this;
        }
        public Builder workerConfigurationArn(Output<String> workerConfigurationArn) {
            this.workerConfigurationArn = Objects.requireNonNull(workerConfigurationArn);
            return this;
        }
        public Builder workerConfigurationArn(String workerConfigurationArn) {
            this.workerConfigurationArn = Output.of(Objects.requireNonNull(workerConfigurationArn));
            return this;
        }        public ConnectorWorkerConfigurationArgs build() {
            return new ConnectorWorkerConfigurationArgs(revision, workerConfigurationArn);
        }
    }
}
