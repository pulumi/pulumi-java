// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.efs.outputs;

import io.pulumi.awsnative.efs.outputs.AccessPointCreationInfo;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AccessPointRootDirectory {
    /**
     * (Optional) Specifies the POSIX IDs and permissions to apply to the access point's RootDirectory. If the RootDirectory>Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo, you must provide values for all properties.   If you do not provide CreationInfo and the specified RootDirectory>Path does not exist, attempts to mount the file system using the access point will fail.
     * 
     */
    private final @Nullable AccessPointCreationInfo creationInfo;
    /**
     * Specifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo.
     * 
     */
    private final @Nullable String path;

    @OutputCustomType.Constructor({"creationInfo","path"})
    private AccessPointRootDirectory(
        @Nullable AccessPointCreationInfo creationInfo,
        @Nullable String path) {
        this.creationInfo = creationInfo;
        this.path = path;
    }

    /**
     * (Optional) Specifies the POSIX IDs and permissions to apply to the access point's RootDirectory. If the RootDirectory>Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo, you must provide values for all properties.   If you do not provide CreationInfo and the specified RootDirectory>Path does not exist, attempts to mount the file system using the access point will fail.
     * 
    */
    public Optional<AccessPointCreationInfo> getCreationInfo() {
        return Optional.ofNullable(this.creationInfo);
    }
    /**
     * Specifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo.
     * 
    */
    public Optional<String> getPath() {
        return Optional.ofNullable(this.path);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPointRootDirectory defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable AccessPointCreationInfo creationInfo;
        private @Nullable String path;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessPointRootDirectory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationInfo = defaults.creationInfo;
    	      this.path = defaults.path;
        }

        public Builder setCreationInfo(@Nullable AccessPointCreationInfo creationInfo) {
            this.creationInfo = creationInfo;
            return this;
        }

        public Builder setPath(@Nullable String path) {
            this.path = path;
            return this;
        }
        public AccessPointRootDirectory build() {
            return new AccessPointRootDirectory(creationInfo, path);
        }
    }
}
