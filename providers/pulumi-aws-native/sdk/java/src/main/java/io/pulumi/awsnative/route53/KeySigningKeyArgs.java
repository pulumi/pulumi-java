// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.route53;

import io.pulumi.awsnative.route53.enums.KeySigningKeyStatus;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class KeySigningKeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final KeySigningKeyArgs Empty = new KeySigningKeyArgs();

    /**
     * The unique string (ID) used to identify a hosted zone.
     * 
     */
    @Import(name="hostedZoneId", required=true)
      private final Output<String> hostedZoneId;

    public Output<String> getHostedZoneId() {
        return this.hostedZoneId;
    }

    /**
     * The Amazon resource name (ARN) for a customer managed key (CMK) in AWS Key Management Service (KMS). The KeyManagementServiceArn must be unique for each key signing key (KSK) in a single hosted zone.
     * 
     */
    @Import(name="keyManagementServiceArn", required=true)
      private final Output<String> keyManagementServiceArn;

    public Output<String> getKeyManagementServiceArn() {
        return this.keyManagementServiceArn;
    }

    /**
     * An alphanumeric string used to identify a key signing key (KSK). Name must be unique for each key signing key in the same hosted zone.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * A string specifying the initial status of the key signing key (KSK). You can set the value to ACTIVE or INACTIVE.
     * 
     */
    @Import(name="status", required=true)
      private final Output<KeySigningKeyStatus> status;

    public Output<KeySigningKeyStatus> getStatus() {
        return this.status;
    }

    public KeySigningKeyArgs(
        Output<String> hostedZoneId,
        Output<String> keyManagementServiceArn,
        @Nullable Output<String> name,
        Output<KeySigningKeyStatus> status) {
        this.hostedZoneId = Objects.requireNonNull(hostedZoneId, "expected parameter 'hostedZoneId' to be non-null");
        this.keyManagementServiceArn = Objects.requireNonNull(keyManagementServiceArn, "expected parameter 'keyManagementServiceArn' to be non-null");
        this.name = name;
        this.status = Objects.requireNonNull(status, "expected parameter 'status' to be non-null");
    }

    private KeySigningKeyArgs() {
        this.hostedZoneId = Output.empty();
        this.keyManagementServiceArn = Output.empty();
        this.name = Output.empty();
        this.status = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeySigningKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> hostedZoneId;
        private Output<String> keyManagementServiceArn;
        private @Nullable Output<String> name;
        private Output<KeySigningKeyStatus> status;

        public Builder() {
    	      // Empty
        }

        public Builder(KeySigningKeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostedZoneId = defaults.hostedZoneId;
    	      this.keyManagementServiceArn = defaults.keyManagementServiceArn;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
        }

        public Builder hostedZoneId(Output<String> hostedZoneId) {
            this.hostedZoneId = Objects.requireNonNull(hostedZoneId);
            return this;
        }

        public Builder hostedZoneId(String hostedZoneId) {
            this.hostedZoneId = Output.of(Objects.requireNonNull(hostedZoneId));
            return this;
        }

        public Builder keyManagementServiceArn(Output<String> keyManagementServiceArn) {
            this.keyManagementServiceArn = Objects.requireNonNull(keyManagementServiceArn);
            return this;
        }

        public Builder keyManagementServiceArn(String keyManagementServiceArn) {
            this.keyManagementServiceArn = Output.of(Objects.requireNonNull(keyManagementServiceArn));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder status(Output<KeySigningKeyStatus> status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder status(KeySigningKeyStatus status) {
            this.status = Output.of(Objects.requireNonNull(status));
            return this;
        }
        public KeySigningKeyArgs build() {
            return new KeySigningKeyArgs(hostedZoneId, keyManagementServiceArn, name, status);
        }
    }
}
