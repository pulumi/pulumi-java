// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.lex.inputs;

import io.pulumi.awsnative.lex.inputs.BotFulfillmentStartResponseSpecificationArgs;
import io.pulumi.awsnative.lex.inputs.BotFulfillmentUpdateResponseSpecificationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Provides information for updating the user on the progress of fulfilling an intent.
 * 
 */
public final class BotFulfillmentUpdatesSpecificationArgs extends io.pulumi.resources.ResourceArgs {

    public static final BotFulfillmentUpdatesSpecificationArgs Empty = new BotFulfillmentUpdatesSpecificationArgs();

    /**
     * Determines whether fulfillment updates are sent to the user. When this field is true, updates are sent.
     * 
     */
    @Import(name="active", required=true)
      private final Output<Boolean> active;

    public Output<Boolean> getActive() {
        return this.active;
    }

    @Import(name="startResponse")
      private final @Nullable Output<BotFulfillmentStartResponseSpecificationArgs> startResponse;

    public Output<BotFulfillmentStartResponseSpecificationArgs> getStartResponse() {
        return this.startResponse == null ? Output.empty() : this.startResponse;
    }

    /**
     * The length of time that the fulfillment Lambda function should run before it times out.
     * 
     */
    @Import(name="timeoutInSeconds")
      private final @Nullable Output<Integer> timeoutInSeconds;

    public Output<Integer> getTimeoutInSeconds() {
        return this.timeoutInSeconds == null ? Output.empty() : this.timeoutInSeconds;
    }

    @Import(name="updateResponse")
      private final @Nullable Output<BotFulfillmentUpdateResponseSpecificationArgs> updateResponse;

    public Output<BotFulfillmentUpdateResponseSpecificationArgs> getUpdateResponse() {
        return this.updateResponse == null ? Output.empty() : this.updateResponse;
    }

    public BotFulfillmentUpdatesSpecificationArgs(
        Output<Boolean> active,
        @Nullable Output<BotFulfillmentStartResponseSpecificationArgs> startResponse,
        @Nullable Output<Integer> timeoutInSeconds,
        @Nullable Output<BotFulfillmentUpdateResponseSpecificationArgs> updateResponse) {
        this.active = Objects.requireNonNull(active, "expected parameter 'active' to be non-null");
        this.startResponse = startResponse;
        this.timeoutInSeconds = timeoutInSeconds;
        this.updateResponse = updateResponse;
    }

    private BotFulfillmentUpdatesSpecificationArgs() {
        this.active = Output.empty();
        this.startResponse = Output.empty();
        this.timeoutInSeconds = Output.empty();
        this.updateResponse = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BotFulfillmentUpdatesSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> active;
        private @Nullable Output<BotFulfillmentStartResponseSpecificationArgs> startResponse;
        private @Nullable Output<Integer> timeoutInSeconds;
        private @Nullable Output<BotFulfillmentUpdateResponseSpecificationArgs> updateResponse;

        public Builder() {
    	      // Empty
        }

        public Builder(BotFulfillmentUpdatesSpecificationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.startResponse = defaults.startResponse;
    	      this.timeoutInSeconds = defaults.timeoutInSeconds;
    	      this.updateResponse = defaults.updateResponse;
        }

        public Builder active(Output<Boolean> active) {
            this.active = Objects.requireNonNull(active);
            return this;
        }
        public Builder active(Boolean active) {
            this.active = Output.of(Objects.requireNonNull(active));
            return this;
        }
        public Builder startResponse(@Nullable Output<BotFulfillmentStartResponseSpecificationArgs> startResponse) {
            this.startResponse = startResponse;
            return this;
        }
        public Builder startResponse(@Nullable BotFulfillmentStartResponseSpecificationArgs startResponse) {
            this.startResponse = Output.ofNullable(startResponse);
            return this;
        }
        public Builder timeoutInSeconds(@Nullable Output<Integer> timeoutInSeconds) {
            this.timeoutInSeconds = timeoutInSeconds;
            return this;
        }
        public Builder timeoutInSeconds(@Nullable Integer timeoutInSeconds) {
            this.timeoutInSeconds = Output.ofNullable(timeoutInSeconds);
            return this;
        }
        public Builder updateResponse(@Nullable Output<BotFulfillmentUpdateResponseSpecificationArgs> updateResponse) {
            this.updateResponse = updateResponse;
            return this;
        }
        public Builder updateResponse(@Nullable BotFulfillmentUpdateResponseSpecificationArgs updateResponse) {
            this.updateResponse = Output.ofNullable(updateResponse);
            return this;
        }        public BotFulfillmentUpdatesSpecificationArgs build() {
            return new BotFulfillmentUpdatesSpecificationArgs(active, startResponse, timeoutInSeconds, updateResponse);
        }
    }
}
