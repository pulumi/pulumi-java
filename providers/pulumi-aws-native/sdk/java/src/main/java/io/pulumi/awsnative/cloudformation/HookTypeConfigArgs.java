// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudformation;

import io.pulumi.awsnative.cloudformation.enums.HookTypeConfigConfigurationAlias;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HookTypeConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final HookTypeConfigArgs Empty = new HookTypeConfigArgs();

    /**
     * The configuration data for the extension, in this account and region.
     * 
     */
    @InputImport(name="configuration")
    private final @Nullable Input<String> configuration;

    public Input<String> getConfiguration() {
        return this.configuration == null ? Input.empty() : this.configuration;
    }

    /**
     * An alias by which to refer to this extension configuration data.
     * 
     */
    @InputImport(name="configurationAlias")
    private final @Nullable Input<HookTypeConfigConfigurationAlias> configurationAlias;

    public Input<HookTypeConfigConfigurationAlias> getConfigurationAlias() {
        return this.configurationAlias == null ? Input.empty() : this.configurationAlias;
    }

    /**
     * The Amazon Resource Name (ARN) of the type version.
     * 
     */
    @InputImport(name="typeArn")
    private final @Nullable Input<String> typeArn;

    public Input<String> getTypeArn() {
        return this.typeArn == null ? Input.empty() : this.typeArn;
    }

    /**
     * The name of the type being registered.
     * 
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     * 
     */
    @InputImport(name="typeName")
    private final @Nullable Input<String> typeName;

    public Input<String> getTypeName() {
        return this.typeName == null ? Input.empty() : this.typeName;
    }

    public HookTypeConfigArgs(
        @Nullable Input<String> configuration,
        @Nullable Input<HookTypeConfigConfigurationAlias> configurationAlias,
        @Nullable Input<String> typeArn,
        @Nullable Input<String> typeName) {
        this.configuration = configuration;
        this.configurationAlias = configurationAlias;
        this.typeArn = typeArn;
        this.typeName = typeName;
    }

    private HookTypeConfigArgs() {
        this.configuration = Input.empty();
        this.configurationAlias = Input.empty();
        this.typeArn = Input.empty();
        this.typeName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HookTypeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> configuration;
        private @Nullable Input<HookTypeConfigConfigurationAlias> configurationAlias;
        private @Nullable Input<String> typeArn;
        private @Nullable Input<String> typeName;

        public Builder() {
    	      // Empty
        }

        public Builder(HookTypeConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.configurationAlias = defaults.configurationAlias;
    	      this.typeArn = defaults.typeArn;
    	      this.typeName = defaults.typeName;
        }

        public Builder setConfiguration(@Nullable Input<String> configuration) {
            this.configuration = configuration;
            return this;
        }

        public Builder setConfiguration(@Nullable String configuration) {
            this.configuration = Input.ofNullable(configuration);
            return this;
        }

        public Builder setConfigurationAlias(@Nullable Input<HookTypeConfigConfigurationAlias> configurationAlias) {
            this.configurationAlias = configurationAlias;
            return this;
        }

        public Builder setConfigurationAlias(@Nullable HookTypeConfigConfigurationAlias configurationAlias) {
            this.configurationAlias = Input.ofNullable(configurationAlias);
            return this;
        }

        public Builder setTypeArn(@Nullable Input<String> typeArn) {
            this.typeArn = typeArn;
            return this;
        }

        public Builder setTypeArn(@Nullable String typeArn) {
            this.typeArn = Input.ofNullable(typeArn);
            return this;
        }

        public Builder setTypeName(@Nullable Input<String> typeName) {
            this.typeName = typeName;
            return this;
        }

        public Builder setTypeName(@Nullable String typeName) {
            this.typeName = Input.ofNullable(typeName);
            return this;
        }

        public HookTypeConfigArgs build() {
            return new HookTypeConfigArgs(configuration, configurationAlias, typeArn, typeName);
        }
    }
}
