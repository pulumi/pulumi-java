// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.enums.RulesetThresholdType;
import io.pulumi.awsnative.databrew.enums.RulesetThresholdUnit;
import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RulesetThreshold extends io.pulumi.resources.InvokeArgs {

    public static final RulesetThreshold Empty = new RulesetThreshold();

    @InputImport(name="type")
      private final @Nullable RulesetThresholdType type;

    public Optional<RulesetThresholdType> getType() {
        return this.type == null ? Optional.empty() : Optional.ofNullable(this.type);
    }

    @InputImport(name="unit")
      private final @Nullable RulesetThresholdUnit unit;

    public Optional<RulesetThresholdUnit> getUnit() {
        return this.unit == null ? Optional.empty() : Optional.ofNullable(this.unit);
    }

    @InputImport(name="value", required=true)
      private final Double value;

    public Double getValue() {
        return this.value;
    }

    public RulesetThreshold(
        @Nullable RulesetThresholdType type,
        @Nullable RulesetThresholdUnit unit,
        Double value) {
        this.type = type;
        this.unit = unit;
        this.value = Objects.requireNonNull(value, "expected parameter 'value' to be non-null");
    }

    private RulesetThreshold() {
        this.type = null;
        this.unit = null;
        this.value = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesetThreshold defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable RulesetThresholdType type;
        private @Nullable RulesetThresholdUnit unit;
        private Double value;

        public Builder() {
    	      // Empty
        }

        public Builder(RulesetThreshold defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.unit = defaults.unit;
    	      this.value = defaults.value;
        }

        public Builder setType(@Nullable RulesetThresholdType type) {
            this.type = type;
            return this;
        }

        public Builder setUnit(@Nullable RulesetThresholdUnit unit) {
            this.unit = unit;
            return this;
        }

        public Builder setValue(Double value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public RulesetThreshold build() {
            return new RulesetThreshold(type, unit, value);
        }
    }
}
