// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.nimblestudio;

import io.pulumi.awsnative.nimblestudio.inputs.StudioEncryptionConfigurationArgs;
import io.pulumi.awsnative.nimblestudio.inputs.StudioTagsArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StudioArgs extends io.pulumi.resources.ResourceArgs {

    public static final StudioArgs Empty = new StudioArgs();

    /**
     * <p>The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.</p>
     * 
     */
    @Import(name="adminRoleArn", required=true)
      private final Output<String> adminRoleArn;

    public Output<String> adminRoleArn() {
        return this.adminRoleArn;
    }

    /**
     * <p>A friendly name for the studio.</p>
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="studioEncryptionConfiguration")
      private final @Nullable Output<StudioEncryptionConfigurationArgs> studioEncryptionConfiguration;

    public Output<StudioEncryptionConfigurationArgs> studioEncryptionConfiguration() {
        return this.studioEncryptionConfiguration == null ? Codegen.empty() : this.studioEncryptionConfiguration;
    }

    /**
     * <p>The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.</p>
     * 
     */
    @Import(name="studioName")
      private final @Nullable Output<String> studioName;

    public Output<String> studioName() {
        return this.studioName == null ? Codegen.empty() : this.studioName;
    }

    @Import(name="tags")
      private final @Nullable Output<StudioTagsArgs> tags;

    public Output<StudioTagsArgs> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * <p>The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.</p>
     * 
     */
    @Import(name="userRoleArn", required=true)
      private final Output<String> userRoleArn;

    public Output<String> userRoleArn() {
        return this.userRoleArn;
    }

    public StudioArgs(
        Output<String> adminRoleArn,
        Output<String> displayName,
        @Nullable Output<StudioEncryptionConfigurationArgs> studioEncryptionConfiguration,
        @Nullable Output<String> studioName,
        @Nullable Output<StudioTagsArgs> tags,
        Output<String> userRoleArn) {
        this.adminRoleArn = Objects.requireNonNull(adminRoleArn, "expected parameter 'adminRoleArn' to be non-null");
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.studioEncryptionConfiguration = studioEncryptionConfiguration;
        this.studioName = studioName;
        this.tags = tags;
        this.userRoleArn = Objects.requireNonNull(userRoleArn, "expected parameter 'userRoleArn' to be non-null");
    }

    private StudioArgs() {
        this.adminRoleArn = Codegen.empty();
        this.displayName = Codegen.empty();
        this.studioEncryptionConfiguration = Codegen.empty();
        this.studioName = Codegen.empty();
        this.tags = Codegen.empty();
        this.userRoleArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StudioArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> adminRoleArn;
        private Output<String> displayName;
        private @Nullable Output<StudioEncryptionConfigurationArgs> studioEncryptionConfiguration;
        private @Nullable Output<String> studioName;
        private @Nullable Output<StudioTagsArgs> tags;
        private Output<String> userRoleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(StudioArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminRoleArn = defaults.adminRoleArn;
    	      this.displayName = defaults.displayName;
    	      this.studioEncryptionConfiguration = defaults.studioEncryptionConfiguration;
    	      this.studioName = defaults.studioName;
    	      this.tags = defaults.tags;
    	      this.userRoleArn = defaults.userRoleArn;
        }

        public Builder adminRoleArn(Output<String> adminRoleArn) {
            this.adminRoleArn = Objects.requireNonNull(adminRoleArn);
            return this;
        }
        public Builder adminRoleArn(String adminRoleArn) {
            this.adminRoleArn = Output.of(Objects.requireNonNull(adminRoleArn));
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder studioEncryptionConfiguration(@Nullable Output<StudioEncryptionConfigurationArgs> studioEncryptionConfiguration) {
            this.studioEncryptionConfiguration = studioEncryptionConfiguration;
            return this;
        }
        public Builder studioEncryptionConfiguration(@Nullable StudioEncryptionConfigurationArgs studioEncryptionConfiguration) {
            this.studioEncryptionConfiguration = Codegen.ofNullable(studioEncryptionConfiguration);
            return this;
        }
        public Builder studioName(@Nullable Output<String> studioName) {
            this.studioName = studioName;
            return this;
        }
        public Builder studioName(@Nullable String studioName) {
            this.studioName = Codegen.ofNullable(studioName);
            return this;
        }
        public Builder tags(@Nullable Output<StudioTagsArgs> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable StudioTagsArgs tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder userRoleArn(Output<String> userRoleArn) {
            this.userRoleArn = Objects.requireNonNull(userRoleArn);
            return this;
        }
        public Builder userRoleArn(String userRoleArn) {
            this.userRoleArn = Output.of(Objects.requireNonNull(userRoleArn));
            return this;
        }        public StudioArgs build() {
            return new StudioArgs(adminRoleArn, displayName, studioEncryptionConfiguration, studioName, tags, userRoleArn);
        }
    }
}
