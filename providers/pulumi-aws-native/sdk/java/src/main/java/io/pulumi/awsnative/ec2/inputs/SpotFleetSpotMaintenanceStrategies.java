// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ec2.inputs;

import io.pulumi.awsnative.ec2.inputs.SpotFleetSpotCapacityRebalance;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpotFleetSpotMaintenanceStrategies extends io.pulumi.resources.InvokeArgs {

    public static final SpotFleetSpotMaintenanceStrategies Empty = new SpotFleetSpotMaintenanceStrategies();

    @InputImport(name="capacityRebalance")
    private final @Nullable SpotFleetSpotCapacityRebalance capacityRebalance;

    public Optional<SpotFleetSpotCapacityRebalance> getCapacityRebalance() {
        return this.capacityRebalance == null ? Optional.empty() : Optional.ofNullable(this.capacityRebalance);
    }

    public SpotFleetSpotMaintenanceStrategies(@Nullable SpotFleetSpotCapacityRebalance capacityRebalance) {
        this.capacityRebalance = capacityRebalance;
    }

    private SpotFleetSpotMaintenanceStrategies() {
        this.capacityRebalance = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpotFleetSpotMaintenanceStrategies defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable SpotFleetSpotCapacityRebalance capacityRebalance;

        public Builder() {
    	      // Empty
        }

        public Builder(SpotFleetSpotMaintenanceStrategies defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityRebalance = defaults.capacityRebalance;
        }

        public Builder setCapacityRebalance(@Nullable SpotFleetSpotCapacityRebalance capacityRebalance) {
            this.capacityRebalance = capacityRebalance;
            return this;
        }

        public SpotFleetSpotMaintenanceStrategies build() {
            return new SpotFleetSpotMaintenanceStrategies(capacityRebalance);
        }
    }
}
