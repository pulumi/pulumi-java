// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.inputs.RecipeS3LocationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RecipeDataCatalogInputDefinitionArgs extends io.pulumi.resources.ResourceArgs {

    public static final RecipeDataCatalogInputDefinitionArgs Empty = new RecipeDataCatalogInputDefinitionArgs();

    /**
     * Catalog id
     * 
     */
    @Import(name="catalogId")
      private final @Nullable Output<String> catalogId;

    public Output<String> getCatalogId() {
        return this.catalogId == null ? Codegen.empty() : this.catalogId;
    }

    /**
     * Database name
     * 
     */
    @Import(name="databaseName")
      private final @Nullable Output<String> databaseName;

    public Output<String> getDatabaseName() {
        return this.databaseName == null ? Codegen.empty() : this.databaseName;
    }

    /**
     * Table name
     * 
     */
    @Import(name="tableName")
      private final @Nullable Output<String> tableName;

    public Output<String> getTableName() {
        return this.tableName == null ? Codegen.empty() : this.tableName;
    }

    @Import(name="tempDirectory")
      private final @Nullable Output<RecipeS3LocationArgs> tempDirectory;

    public Output<RecipeS3LocationArgs> getTempDirectory() {
        return this.tempDirectory == null ? Codegen.empty() : this.tempDirectory;
    }

    public RecipeDataCatalogInputDefinitionArgs(
        @Nullable Output<String> catalogId,
        @Nullable Output<String> databaseName,
        @Nullable Output<String> tableName,
        @Nullable Output<RecipeS3LocationArgs> tempDirectory) {
        this.catalogId = catalogId;
        this.databaseName = databaseName;
        this.tableName = tableName;
        this.tempDirectory = tempDirectory;
    }

    private RecipeDataCatalogInputDefinitionArgs() {
        this.catalogId = Codegen.empty();
        this.databaseName = Codegen.empty();
        this.tableName = Codegen.empty();
        this.tempDirectory = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecipeDataCatalogInputDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> catalogId;
        private @Nullable Output<String> databaseName;
        private @Nullable Output<String> tableName;
        private @Nullable Output<RecipeS3LocationArgs> tempDirectory;

        public Builder() {
    	      // Empty
        }

        public Builder(RecipeDataCatalogInputDefinitionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogId = defaults.catalogId;
    	      this.databaseName = defaults.databaseName;
    	      this.tableName = defaults.tableName;
    	      this.tempDirectory = defaults.tempDirectory;
        }

        public Builder catalogId(@Nullable Output<String> catalogId) {
            this.catalogId = catalogId;
            return this;
        }
        public Builder catalogId(@Nullable String catalogId) {
            this.catalogId = Codegen.ofNullable(catalogId);
            return this;
        }
        public Builder databaseName(@Nullable Output<String> databaseName) {
            this.databaseName = databaseName;
            return this;
        }
        public Builder databaseName(@Nullable String databaseName) {
            this.databaseName = Codegen.ofNullable(databaseName);
            return this;
        }
        public Builder tableName(@Nullable Output<String> tableName) {
            this.tableName = tableName;
            return this;
        }
        public Builder tableName(@Nullable String tableName) {
            this.tableName = Codegen.ofNullable(tableName);
            return this;
        }
        public Builder tempDirectory(@Nullable Output<RecipeS3LocationArgs> tempDirectory) {
            this.tempDirectory = tempDirectory;
            return this;
        }
        public Builder tempDirectory(@Nullable RecipeS3LocationArgs tempDirectory) {
            this.tempDirectory = Codegen.ofNullable(tempDirectory);
            return this;
        }        public RecipeDataCatalogInputDefinitionArgs build() {
            return new RecipeDataCatalogInputDefinitionArgs(catalogId, databaseName, tableName, tempDirectory);
        }
    }
}
