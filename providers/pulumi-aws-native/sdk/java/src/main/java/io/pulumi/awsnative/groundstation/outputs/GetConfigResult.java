// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.groundstation.outputs;

import io.pulumi.awsnative.groundstation.outputs.ConfigData;
import io.pulumi.awsnative.groundstation.outputs.ConfigTag;
import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConfigResult {
    private final @Nullable String arn;
    private final @Nullable ConfigData configData;
    private final @Nullable String id;
    private final @Nullable String name;
    private final @Nullable List<ConfigTag> tags;
    private final @Nullable String type;

    @CustomType.Constructor
    private GetConfigResult(
        @CustomType.Parameter("arn") @Nullable String arn,
        @CustomType.Parameter("configData") @Nullable ConfigData configData,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("tags") @Nullable List<ConfigTag> tags,
        @CustomType.Parameter("type") @Nullable String type) {
        this.arn = arn;
        this.configData = configData;
        this.id = id;
        this.name = name;
        this.tags = tags;
        this.type = type;
    }

    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<ConfigData> configData() {
        return Optional.ofNullable(this.configData);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<ConfigTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable ConfigData configData;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable List<ConfigTag> tags;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.configData = defaults.configData;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        public Builder configData(@Nullable ConfigData configData) {
            this.configData = configData;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder tags(@Nullable List<ConfigTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(ConfigTag... tags) {
            return tags(List.of(tags));
        }
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }        public GetConfigResult build() {
            return new GetConfigResult(arn, configData, id, name, tags, type);
        }
    }
}
