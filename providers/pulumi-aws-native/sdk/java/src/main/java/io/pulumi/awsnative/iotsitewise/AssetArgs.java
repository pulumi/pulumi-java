// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotsitewise;

import io.pulumi.awsnative.iotsitewise.inputs.AssetHierarchyArgs;
import io.pulumi.awsnative.iotsitewise.inputs.AssetPropertyArgs;
import io.pulumi.awsnative.iotsitewise.inputs.AssetTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AssetArgs extends io.pulumi.resources.ResourceArgs {

    public static final AssetArgs Empty = new AssetArgs();

    @Import(name="assetHierarchies")
      private final @Nullable Output<List<AssetHierarchyArgs>> assetHierarchies;

    public Output<List<AssetHierarchyArgs>> getAssetHierarchies() {
        return this.assetHierarchies == null ? Output.empty() : this.assetHierarchies;
    }

    /**
     * The ID of the asset model from which to create the asset.
     * 
     */
    @Import(name="assetModelId", required=true)
      private final Output<String> assetModelId;

    public Output<String> getAssetModelId() {
        return this.assetModelId;
    }

    /**
     * A unique, friendly name for the asset.
     * 
     */
    @Import(name="assetName")
      private final @Nullable Output<String> assetName;

    public Output<String> getAssetName() {
        return this.assetName == null ? Output.empty() : this.assetName;
    }

    @Import(name="assetProperties")
      private final @Nullable Output<List<AssetPropertyArgs>> assetProperties;

    public Output<List<AssetPropertyArgs>> getAssetProperties() {
        return this.assetProperties == null ? Output.empty() : this.assetProperties;
    }

    /**
     * A list of key-value pairs that contain metadata for the asset.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<AssetTagArgs>> tags;

    public Output<List<AssetTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public AssetArgs(
        @Nullable Output<List<AssetHierarchyArgs>> assetHierarchies,
        Output<String> assetModelId,
        @Nullable Output<String> assetName,
        @Nullable Output<List<AssetPropertyArgs>> assetProperties,
        @Nullable Output<List<AssetTagArgs>> tags) {
        this.assetHierarchies = assetHierarchies;
        this.assetModelId = Objects.requireNonNull(assetModelId, "expected parameter 'assetModelId' to be non-null");
        this.assetName = assetName;
        this.assetProperties = assetProperties;
        this.tags = tags;
    }

    private AssetArgs() {
        this.assetHierarchies = Output.empty();
        this.assetModelId = Output.empty();
        this.assetName = Output.empty();
        this.assetProperties = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<AssetHierarchyArgs>> assetHierarchies;
        private Output<String> assetModelId;
        private @Nullable Output<String> assetName;
        private @Nullable Output<List<AssetPropertyArgs>> assetProperties;
        private @Nullable Output<List<AssetTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetHierarchies = defaults.assetHierarchies;
    	      this.assetModelId = defaults.assetModelId;
    	      this.assetName = defaults.assetName;
    	      this.assetProperties = defaults.assetProperties;
    	      this.tags = defaults.tags;
        }

        public Builder assetHierarchies(@Nullable Output<List<AssetHierarchyArgs>> assetHierarchies) {
            this.assetHierarchies = assetHierarchies;
            return this;
        }

        public Builder assetHierarchies(@Nullable List<AssetHierarchyArgs> assetHierarchies) {
            this.assetHierarchies = Output.ofNullable(assetHierarchies);
            return this;
        }

        public Builder assetModelId(Output<String> assetModelId) {
            this.assetModelId = Objects.requireNonNull(assetModelId);
            return this;
        }

        public Builder assetModelId(String assetModelId) {
            this.assetModelId = Output.of(Objects.requireNonNull(assetModelId));
            return this;
        }

        public Builder assetName(@Nullable Output<String> assetName) {
            this.assetName = assetName;
            return this;
        }

        public Builder assetName(@Nullable String assetName) {
            this.assetName = Output.ofNullable(assetName);
            return this;
        }

        public Builder assetProperties(@Nullable Output<List<AssetPropertyArgs>> assetProperties) {
            this.assetProperties = assetProperties;
            return this;
        }

        public Builder assetProperties(@Nullable List<AssetPropertyArgs> assetProperties) {
            this.assetProperties = Output.ofNullable(assetProperties);
            return this;
        }

        public Builder tags(@Nullable Output<List<AssetTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<AssetTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public AssetArgs build() {
            return new AssetArgs(assetHierarchies, assetModelId, assetName, assetProperties, tags);
        }
    }
}
