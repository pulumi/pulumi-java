// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.gamelift;

import io.pulumi.awsnative.gamelift.enums.FleetNewGameSessionProtectionPolicy;
import io.pulumi.awsnative.gamelift.enums.FleetType;
import io.pulumi.awsnative.gamelift.inputs.FleetCertificateConfigurationArgs;
import io.pulumi.awsnative.gamelift.inputs.FleetIpPermissionArgs;
import io.pulumi.awsnative.gamelift.inputs.FleetLocationConfigurationArgs;
import io.pulumi.awsnative.gamelift.inputs.FleetResourceCreationLimitPolicyArgs;
import io.pulumi.awsnative.gamelift.inputs.FleetRuntimeConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FleetArgs extends io.pulumi.resources.ResourceArgs {

    public static final FleetArgs Empty = new FleetArgs();

    /**
     * A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
     * 
     */
    @Import(name="buildId")
      private final @Nullable Output<String> buildId;

    public Output<String> buildId() {
        return this.buildId == null ? Codegen.empty() : this.buildId;
    }

    /**
     * Indicates whether to generate a TLS/SSL certificate for the new fleet. TLS certificates are used for encrypting traffic between game clients and game servers running on GameLift. If this parameter is not set, certificate generation is disabled. This fleet setting cannot be changed once the fleet is created.
     * 
     */
    @Import(name="certificateConfiguration")
      private final @Nullable Output<FleetCertificateConfigurationArgs> certificateConfiguration;

    public Output<FleetCertificateConfigurationArgs> certificateConfiguration() {
        return this.certificateConfiguration == null ? Codegen.empty() : this.certificateConfiguration;
    }

    /**
     * A human-readable description of a fleet.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * [DEPRECATED] The number of EC2 instances that you want this fleet to host. When creating a new fleet, GameLift automatically sets this value to "1" and initiates a single instance. Once the fleet is active, update this value to trigger GameLift to add or remove instances from the fleet.
     * 
     */
    @Import(name="desiredEC2Instances")
      private final @Nullable Output<Integer> desiredEC2Instances;

    public Output<Integer> desiredEC2Instances() {
        return this.desiredEC2Instances == null ? Codegen.empty() : this.desiredEC2Instances;
    }

    /**
     * A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
     * 
     */
    @Import(name="eC2InboundPermissions")
      private final @Nullable Output<List<FleetIpPermissionArgs>> eC2InboundPermissions;

    public Output<List<FleetIpPermissionArgs>> eC2InboundPermissions() {
        return this.eC2InboundPermissions == null ? Codegen.empty() : this.eC2InboundPermissions;
    }

    /**
     * The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions.
     * 
     */
    @Import(name="eC2InstanceType")
      private final @Nullable Output<String> eC2InstanceType;

    public Output<String> eC2InstanceType() {
        return this.eC2InstanceType == null ? Codegen.empty() : this.eC2InstanceType;
    }

    /**
     * Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
     * 
     */
    @Import(name="fleetType")
      private final @Nullable Output<FleetType> fleetType;

    public Output<FleetType> fleetType() {
        return this.fleetType == null ? Codegen.empty() : this.fleetType;
    }

    /**
     * A unique identifier for an AWS IAM role that manages access to your AWS services. With an instance role ARN set, any application that runs on an instance in this fleet can assume the role, including install scripts, server processes, and daemons (background processes). Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
     * 
     */
    @Import(name="instanceRoleARN")
      private final @Nullable Output<String> instanceRoleARN;

    public Output<String> instanceRoleARN() {
        return this.instanceRoleARN == null ? Codegen.empty() : this.instanceRoleARN;
    }

    @Import(name="locations")
      private final @Nullable Output<List<FleetLocationConfigurationArgs>> locations;

    public Output<List<FleetLocationConfigurationArgs>> locations() {
        return this.locations == null ? Codegen.empty() : this.locations;
    }

    /**
     * This parameter is no longer used. When hosting a custom game build, specify where Amazon GameLift should store log files using the Amazon GameLift server API call ProcessReady()
     * 
     */
    @Import(name="logPaths")
      private final @Nullable Output<List<String>> logPaths;

    public Output<List<String>> logPaths() {
        return this.logPaths == null ? Codegen.empty() : this.logPaths;
    }

    /**
     * [DEPRECATED] The maximum value that is allowed for the fleet's instance count. When creating a new fleet, GameLift automatically sets this value to "1". Once the fleet is active, you can change this value.
     * 
     */
    @Import(name="maxSize")
      private final @Nullable Output<Integer> maxSize;

    public Output<Integer> maxSize() {
        return this.maxSize == null ? Codegen.empty() : this.maxSize;
    }

    /**
     * The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
     * 
     */
    @Import(name="metricGroups")
      private final @Nullable Output<List<String>> metricGroups;

    public Output<List<String>> metricGroups() {
        return this.metricGroups == null ? Codegen.empty() : this.metricGroups;
    }

    /**
     * [DEPRECATED] The minimum value allowed for the fleet's instance count. When creating a new fleet, GameLift automatically sets this value to "0". After the fleet is active, you can change this value.
     * 
     */
    @Import(name="minSize")
      private final @Nullable Output<Integer> minSize;

    public Output<Integer> minSize() {
        return this.minSize == null ? Codegen.empty() : this.minSize;
    }

    /**
     * A descriptive label that is associated with a fleet. Fleet names do not need to be unique.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
     * 
     */
    @Import(name="newGameSessionProtectionPolicy")
      private final @Nullable Output<FleetNewGameSessionProtectionPolicy> newGameSessionProtectionPolicy;

    public Output<FleetNewGameSessionProtectionPolicy> newGameSessionProtectionPolicy() {
        return this.newGameSessionProtectionPolicy == null ? Codegen.empty() : this.newGameSessionProtectionPolicy;
    }

    /**
     * A unique identifier for the AWS account with the VPC that you want to peer your Amazon GameLift fleet with. You can find your account ID in the AWS Management Console under account settings.
     * 
     */
    @Import(name="peerVpcAwsAccountId")
      private final @Nullable Output<String> peerVpcAwsAccountId;

    public Output<String> peerVpcAwsAccountId() {
        return this.peerVpcAwsAccountId == null ? Codegen.empty() : this.peerVpcAwsAccountId;
    }

    /**
     * A unique identifier for a VPC with resources to be accessed by your Amazon GameLift fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use the VPC Dashboard in the AWS Management Console.
     * 
     */
    @Import(name="peerVpcId")
      private final @Nullable Output<String> peerVpcId;

    public Output<String> peerVpcId() {
        return this.peerVpcId == null ? Codegen.empty() : this.peerVpcId;
    }

    /**
     * A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
     * 
     */
    @Import(name="resourceCreationLimitPolicy")
      private final @Nullable Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy;

    public Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy() {
        return this.resourceCreationLimitPolicy == null ? Codegen.empty() : this.resourceCreationLimitPolicy;
    }

    /**
     * Instructions for launching server processes on each instance in the fleet. Server processes run either a custom game build executable or a Realtime script. The runtime configuration defines the server executables or launch script file, launch parameters, and the number of processes to run concurrently on each instance. When creating a fleet, the runtime configuration must have at least one server process configuration; otherwise the request fails with an invalid request exception.
     * 
     * This parameter is required unless the parameters ServerLaunchPath and ServerLaunchParameters are defined. Runtime configuration has replaced these parameters, but fleets that use them will continue to work.
     * 
     */
    @Import(name="runtimeConfiguration")
      private final @Nullable Output<FleetRuntimeConfigurationArgs> runtimeConfiguration;

    public Output<FleetRuntimeConfigurationArgs> runtimeConfiguration() {
        return this.runtimeConfiguration == null ? Codegen.empty() : this.runtimeConfiguration;
    }

    /**
     * A unique identifier for a Realtime script to be deployed on a new Realtime Servers fleet. The script must have been successfully uploaded to Amazon GameLift. This fleet setting cannot be changed once the fleet is created.
     * 
     * Note: It is not currently possible to use the !Ref command to reference a script created with a CloudFormation template for the fleet property ScriptId. Instead, use Fn::GetAtt Script.Arn or Fn::GetAtt Script.Id to retrieve either of these properties as input for ScriptId. Alternatively, enter a ScriptId string manually.
     * 
     */
    @Import(name="scriptId")
      private final @Nullable Output<String> scriptId;

    public Output<String> scriptId() {
        return this.scriptId == null ? Codegen.empty() : this.scriptId;
    }

    /**
     * This parameter is no longer used but is retained for backward compatibility. Instead, specify server launch parameters in the RuntimeConfiguration parameter. A request must specify either a runtime configuration or values for both ServerLaunchParameters and ServerLaunchPath.
     * 
     */
    @Import(name="serverLaunchParameters")
      private final @Nullable Output<String> serverLaunchParameters;

    public Output<String> serverLaunchParameters() {
        return this.serverLaunchParameters == null ? Codegen.empty() : this.serverLaunchParameters;
    }

    /**
     * This parameter is no longer used. Instead, specify a server launch path using the RuntimeConfiguration parameter. Requests that specify a server launch path and launch parameters instead of a runtime configuration will continue to work.
     * 
     */
    @Import(name="serverLaunchPath")
      private final @Nullable Output<String> serverLaunchPath;

    public Output<String> serverLaunchPath() {
        return this.serverLaunchPath == null ? Codegen.empty() : this.serverLaunchPath;
    }

    public FleetArgs(
        @Nullable Output<String> buildId,
        @Nullable Output<FleetCertificateConfigurationArgs> certificateConfiguration,
        @Nullable Output<String> description,
        @Nullable Output<Integer> desiredEC2Instances,
        @Nullable Output<List<FleetIpPermissionArgs>> eC2InboundPermissions,
        @Nullable Output<String> eC2InstanceType,
        @Nullable Output<FleetType> fleetType,
        @Nullable Output<String> instanceRoleARN,
        @Nullable Output<List<FleetLocationConfigurationArgs>> locations,
        @Nullable Output<List<String>> logPaths,
        @Nullable Output<Integer> maxSize,
        @Nullable Output<List<String>> metricGroups,
        @Nullable Output<Integer> minSize,
        @Nullable Output<String> name,
        @Nullable Output<FleetNewGameSessionProtectionPolicy> newGameSessionProtectionPolicy,
        @Nullable Output<String> peerVpcAwsAccountId,
        @Nullable Output<String> peerVpcId,
        @Nullable Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy,
        @Nullable Output<FleetRuntimeConfigurationArgs> runtimeConfiguration,
        @Nullable Output<String> scriptId,
        @Nullable Output<String> serverLaunchParameters,
        @Nullable Output<String> serverLaunchPath) {
        this.buildId = buildId;
        this.certificateConfiguration = certificateConfiguration;
        this.description = description;
        this.desiredEC2Instances = desiredEC2Instances;
        this.eC2InboundPermissions = eC2InboundPermissions;
        this.eC2InstanceType = eC2InstanceType;
        this.fleetType = fleetType;
        this.instanceRoleARN = instanceRoleARN;
        this.locations = locations;
        this.logPaths = logPaths;
        this.maxSize = maxSize;
        this.metricGroups = metricGroups;
        this.minSize = minSize;
        this.name = name;
        this.newGameSessionProtectionPolicy = newGameSessionProtectionPolicy;
        this.peerVpcAwsAccountId = peerVpcAwsAccountId;
        this.peerVpcId = peerVpcId;
        this.resourceCreationLimitPolicy = resourceCreationLimitPolicy;
        this.runtimeConfiguration = runtimeConfiguration;
        this.scriptId = scriptId;
        this.serverLaunchParameters = serverLaunchParameters;
        this.serverLaunchPath = serverLaunchPath;
    }

    private FleetArgs() {
        this.buildId = Codegen.empty();
        this.certificateConfiguration = Codegen.empty();
        this.description = Codegen.empty();
        this.desiredEC2Instances = Codegen.empty();
        this.eC2InboundPermissions = Codegen.empty();
        this.eC2InstanceType = Codegen.empty();
        this.fleetType = Codegen.empty();
        this.instanceRoleARN = Codegen.empty();
        this.locations = Codegen.empty();
        this.logPaths = Codegen.empty();
        this.maxSize = Codegen.empty();
        this.metricGroups = Codegen.empty();
        this.minSize = Codegen.empty();
        this.name = Codegen.empty();
        this.newGameSessionProtectionPolicy = Codegen.empty();
        this.peerVpcAwsAccountId = Codegen.empty();
        this.peerVpcId = Codegen.empty();
        this.resourceCreationLimitPolicy = Codegen.empty();
        this.runtimeConfiguration = Codegen.empty();
        this.scriptId = Codegen.empty();
        this.serverLaunchParameters = Codegen.empty();
        this.serverLaunchPath = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FleetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> buildId;
        private @Nullable Output<FleetCertificateConfigurationArgs> certificateConfiguration;
        private @Nullable Output<String> description;
        private @Nullable Output<Integer> desiredEC2Instances;
        private @Nullable Output<List<FleetIpPermissionArgs>> eC2InboundPermissions;
        private @Nullable Output<String> eC2InstanceType;
        private @Nullable Output<FleetType> fleetType;
        private @Nullable Output<String> instanceRoleARN;
        private @Nullable Output<List<FleetLocationConfigurationArgs>> locations;
        private @Nullable Output<List<String>> logPaths;
        private @Nullable Output<Integer> maxSize;
        private @Nullable Output<List<String>> metricGroups;
        private @Nullable Output<Integer> minSize;
        private @Nullable Output<String> name;
        private @Nullable Output<FleetNewGameSessionProtectionPolicy> newGameSessionProtectionPolicy;
        private @Nullable Output<String> peerVpcAwsAccountId;
        private @Nullable Output<String> peerVpcId;
        private @Nullable Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy;
        private @Nullable Output<FleetRuntimeConfigurationArgs> runtimeConfiguration;
        private @Nullable Output<String> scriptId;
        private @Nullable Output<String> serverLaunchParameters;
        private @Nullable Output<String> serverLaunchPath;

        public Builder() {
    	      // Empty
        }

        public Builder(FleetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildId = defaults.buildId;
    	      this.certificateConfiguration = defaults.certificateConfiguration;
    	      this.description = defaults.description;
    	      this.desiredEC2Instances = defaults.desiredEC2Instances;
    	      this.eC2InboundPermissions = defaults.eC2InboundPermissions;
    	      this.eC2InstanceType = defaults.eC2InstanceType;
    	      this.fleetType = defaults.fleetType;
    	      this.instanceRoleARN = defaults.instanceRoleARN;
    	      this.locations = defaults.locations;
    	      this.logPaths = defaults.logPaths;
    	      this.maxSize = defaults.maxSize;
    	      this.metricGroups = defaults.metricGroups;
    	      this.minSize = defaults.minSize;
    	      this.name = defaults.name;
    	      this.newGameSessionProtectionPolicy = defaults.newGameSessionProtectionPolicy;
    	      this.peerVpcAwsAccountId = defaults.peerVpcAwsAccountId;
    	      this.peerVpcId = defaults.peerVpcId;
    	      this.resourceCreationLimitPolicy = defaults.resourceCreationLimitPolicy;
    	      this.runtimeConfiguration = defaults.runtimeConfiguration;
    	      this.scriptId = defaults.scriptId;
    	      this.serverLaunchParameters = defaults.serverLaunchParameters;
    	      this.serverLaunchPath = defaults.serverLaunchPath;
        }

        public Builder buildId(@Nullable Output<String> buildId) {
            this.buildId = buildId;
            return this;
        }
        public Builder buildId(@Nullable String buildId) {
            this.buildId = Codegen.ofNullable(buildId);
            return this;
        }
        public Builder certificateConfiguration(@Nullable Output<FleetCertificateConfigurationArgs> certificateConfiguration) {
            this.certificateConfiguration = certificateConfiguration;
            return this;
        }
        public Builder certificateConfiguration(@Nullable FleetCertificateConfigurationArgs certificateConfiguration) {
            this.certificateConfiguration = Codegen.ofNullable(certificateConfiguration);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder desiredEC2Instances(@Nullable Output<Integer> desiredEC2Instances) {
            this.desiredEC2Instances = desiredEC2Instances;
            return this;
        }
        public Builder desiredEC2Instances(@Nullable Integer desiredEC2Instances) {
            this.desiredEC2Instances = Codegen.ofNullable(desiredEC2Instances);
            return this;
        }
        public Builder eC2InboundPermissions(@Nullable Output<List<FleetIpPermissionArgs>> eC2InboundPermissions) {
            this.eC2InboundPermissions = eC2InboundPermissions;
            return this;
        }
        public Builder eC2InboundPermissions(@Nullable List<FleetIpPermissionArgs> eC2InboundPermissions) {
            this.eC2InboundPermissions = Codegen.ofNullable(eC2InboundPermissions);
            return this;
        }
        public Builder eC2InboundPermissions(FleetIpPermissionArgs... eC2InboundPermissions) {
            return eC2InboundPermissions(List.of(eC2InboundPermissions));
        }
        public Builder eC2InstanceType(@Nullable Output<String> eC2InstanceType) {
            this.eC2InstanceType = eC2InstanceType;
            return this;
        }
        public Builder eC2InstanceType(@Nullable String eC2InstanceType) {
            this.eC2InstanceType = Codegen.ofNullable(eC2InstanceType);
            return this;
        }
        public Builder fleetType(@Nullable Output<FleetType> fleetType) {
            this.fleetType = fleetType;
            return this;
        }
        public Builder fleetType(@Nullable FleetType fleetType) {
            this.fleetType = Codegen.ofNullable(fleetType);
            return this;
        }
        public Builder instanceRoleARN(@Nullable Output<String> instanceRoleARN) {
            this.instanceRoleARN = instanceRoleARN;
            return this;
        }
        public Builder instanceRoleARN(@Nullable String instanceRoleARN) {
            this.instanceRoleARN = Codegen.ofNullable(instanceRoleARN);
            return this;
        }
        public Builder locations(@Nullable Output<List<FleetLocationConfigurationArgs>> locations) {
            this.locations = locations;
            return this;
        }
        public Builder locations(@Nullable List<FleetLocationConfigurationArgs> locations) {
            this.locations = Codegen.ofNullable(locations);
            return this;
        }
        public Builder locations(FleetLocationConfigurationArgs... locations) {
            return locations(List.of(locations));
        }
        public Builder logPaths(@Nullable Output<List<String>> logPaths) {
            this.logPaths = logPaths;
            return this;
        }
        public Builder logPaths(@Nullable List<String> logPaths) {
            this.logPaths = Codegen.ofNullable(logPaths);
            return this;
        }
        public Builder logPaths(String... logPaths) {
            return logPaths(List.of(logPaths));
        }
        public Builder maxSize(@Nullable Output<Integer> maxSize) {
            this.maxSize = maxSize;
            return this;
        }
        public Builder maxSize(@Nullable Integer maxSize) {
            this.maxSize = Codegen.ofNullable(maxSize);
            return this;
        }
        public Builder metricGroups(@Nullable Output<List<String>> metricGroups) {
            this.metricGroups = metricGroups;
            return this;
        }
        public Builder metricGroups(@Nullable List<String> metricGroups) {
            this.metricGroups = Codegen.ofNullable(metricGroups);
            return this;
        }
        public Builder metricGroups(String... metricGroups) {
            return metricGroups(List.of(metricGroups));
        }
        public Builder minSize(@Nullable Output<Integer> minSize) {
            this.minSize = minSize;
            return this;
        }
        public Builder minSize(@Nullable Integer minSize) {
            this.minSize = Codegen.ofNullable(minSize);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder newGameSessionProtectionPolicy(@Nullable Output<FleetNewGameSessionProtectionPolicy> newGameSessionProtectionPolicy) {
            this.newGameSessionProtectionPolicy = newGameSessionProtectionPolicy;
            return this;
        }
        public Builder newGameSessionProtectionPolicy(@Nullable FleetNewGameSessionProtectionPolicy newGameSessionProtectionPolicy) {
            this.newGameSessionProtectionPolicy = Codegen.ofNullable(newGameSessionProtectionPolicy);
            return this;
        }
        public Builder peerVpcAwsAccountId(@Nullable Output<String> peerVpcAwsAccountId) {
            this.peerVpcAwsAccountId = peerVpcAwsAccountId;
            return this;
        }
        public Builder peerVpcAwsAccountId(@Nullable String peerVpcAwsAccountId) {
            this.peerVpcAwsAccountId = Codegen.ofNullable(peerVpcAwsAccountId);
            return this;
        }
        public Builder peerVpcId(@Nullable Output<String> peerVpcId) {
            this.peerVpcId = peerVpcId;
            return this;
        }
        public Builder peerVpcId(@Nullable String peerVpcId) {
            this.peerVpcId = Codegen.ofNullable(peerVpcId);
            return this;
        }
        public Builder resourceCreationLimitPolicy(@Nullable Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy) {
            this.resourceCreationLimitPolicy = resourceCreationLimitPolicy;
            return this;
        }
        public Builder resourceCreationLimitPolicy(@Nullable FleetResourceCreationLimitPolicyArgs resourceCreationLimitPolicy) {
            this.resourceCreationLimitPolicy = Codegen.ofNullable(resourceCreationLimitPolicy);
            return this;
        }
        public Builder runtimeConfiguration(@Nullable Output<FleetRuntimeConfigurationArgs> runtimeConfiguration) {
            this.runtimeConfiguration = runtimeConfiguration;
            return this;
        }
        public Builder runtimeConfiguration(@Nullable FleetRuntimeConfigurationArgs runtimeConfiguration) {
            this.runtimeConfiguration = Codegen.ofNullable(runtimeConfiguration);
            return this;
        }
        public Builder scriptId(@Nullable Output<String> scriptId) {
            this.scriptId = scriptId;
            return this;
        }
        public Builder scriptId(@Nullable String scriptId) {
            this.scriptId = Codegen.ofNullable(scriptId);
            return this;
        }
        public Builder serverLaunchParameters(@Nullable Output<String> serverLaunchParameters) {
            this.serverLaunchParameters = serverLaunchParameters;
            return this;
        }
        public Builder serverLaunchParameters(@Nullable String serverLaunchParameters) {
            this.serverLaunchParameters = Codegen.ofNullable(serverLaunchParameters);
            return this;
        }
        public Builder serverLaunchPath(@Nullable Output<String> serverLaunchPath) {
            this.serverLaunchPath = serverLaunchPath;
            return this;
        }
        public Builder serverLaunchPath(@Nullable String serverLaunchPath) {
            this.serverLaunchPath = Codegen.ofNullable(serverLaunchPath);
            return this;
        }        public FleetArgs build() {
            return new FleetArgs(buildId, certificateConfiguration, description, desiredEC2Instances, eC2InboundPermissions, eC2InstanceType, fleetType, instanceRoleARN, locations, logPaths, maxSize, metricGroups, minSize, name, newGameSessionProtectionPolicy, peerVpcAwsAccountId, peerVpcId, resourceCreationLimitPolicy, runtimeConfiguration, scriptId, serverLaunchParameters, serverLaunchPath);
        }
    }
}
