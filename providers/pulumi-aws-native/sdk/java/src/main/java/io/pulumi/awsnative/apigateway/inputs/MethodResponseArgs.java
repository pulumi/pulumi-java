// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.apigateway.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MethodResponseArgs extends io.pulumi.resources.ResourceArgs {

    public static final MethodResponseArgs Empty = new MethodResponseArgs();

    /**
     * The resources used for the response's content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
     * 
     */
    @InputImport(name="responseModels")
        private final @Nullable Input<Object> responseModels;

    public Input<Object> getResponseModels() {
        return this.responseModels == null ? Input.empty() : this.responseModels;
    }

    /**
     * Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
     * 
     */
    @InputImport(name="responseParameters")
        private final @Nullable Input<Object> responseParameters;

    public Input<Object> getResponseParameters() {
        return this.responseParameters == null ? Input.empty() : this.responseParameters;
    }

    /**
     * The method response's status code, which you map to an IntegrationResponse.
     * 
     */
    @InputImport(name="statusCode", required=true)
        private final Input<String> statusCode;

    public Input<String> getStatusCode() {
        return this.statusCode;
    }

    public MethodResponseArgs(
        @Nullable Input<Object> responseModels,
        @Nullable Input<Object> responseParameters,
        Input<String> statusCode) {
        this.responseModels = responseModels;
        this.responseParameters = responseParameters;
        this.statusCode = Objects.requireNonNull(statusCode, "expected parameter 'statusCode' to be non-null");
    }

    private MethodResponseArgs() {
        this.responseModels = Input.empty();
        this.responseParameters = Input.empty();
        this.statusCode = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MethodResponseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Object> responseModels;
        private @Nullable Input<Object> responseParameters;
        private Input<String> statusCode;

        public Builder() {
    	      // Empty
        }

        public Builder(MethodResponseArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.responseModels = defaults.responseModels;
    	      this.responseParameters = defaults.responseParameters;
    	      this.statusCode = defaults.statusCode;
        }

        public Builder setResponseModels(@Nullable Input<Object> responseModels) {
            this.responseModels = responseModels;
            return this;
        }

        public Builder setResponseModels(@Nullable Object responseModels) {
            this.responseModels = Input.ofNullable(responseModels);
            return this;
        }

        public Builder setResponseParameters(@Nullable Input<Object> responseParameters) {
            this.responseParameters = responseParameters;
            return this;
        }

        public Builder setResponseParameters(@Nullable Object responseParameters) {
            this.responseParameters = Input.ofNullable(responseParameters);
            return this;
        }

        public Builder setStatusCode(Input<String> statusCode) {
            this.statusCode = Objects.requireNonNull(statusCode);
            return this;
        }

        public Builder setStatusCode(String statusCode) {
            this.statusCode = Input.of(Objects.requireNonNull(statusCode));
            return this;
        }
        public MethodResponseArgs build() {
            return new MethodResponseArgs(responseModels, responseParameters, statusCode);
        }
    }
}
