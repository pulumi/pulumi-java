// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketLoggingConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketLoggingConfigurationArgs Empty = new BucketLoggingConfigurationArgs();

    /**
     * The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.
     * 
     */
    @InputImport(name="destinationBucketName")
    private final @Nullable Input<String> destinationBucketName;

    public Input<String> getDestinationBucketName() {
        return this.destinationBucketName == null ? Input.empty() : this.destinationBucketName;
    }

    @InputImport(name="logFilePrefix")
    private final @Nullable Input<String> logFilePrefix;

    public Input<String> getLogFilePrefix() {
        return this.logFilePrefix == null ? Input.empty() : this.logFilePrefix;
    }

    public BucketLoggingConfigurationArgs(
        @Nullable Input<String> destinationBucketName,
        @Nullable Input<String> logFilePrefix) {
        this.destinationBucketName = destinationBucketName;
        this.logFilePrefix = logFilePrefix;
    }

    private BucketLoggingConfigurationArgs() {
        this.destinationBucketName = Input.empty();
        this.logFilePrefix = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLoggingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> destinationBucketName;
        private @Nullable Input<String> logFilePrefix;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLoggingConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationBucketName = defaults.destinationBucketName;
    	      this.logFilePrefix = defaults.logFilePrefix;
        }

        public Builder setDestinationBucketName(@Nullable Input<String> destinationBucketName) {
            this.destinationBucketName = destinationBucketName;
            return this;
        }

        public Builder setDestinationBucketName(@Nullable String destinationBucketName) {
            this.destinationBucketName = Input.ofNullable(destinationBucketName);
            return this;
        }

        public Builder setLogFilePrefix(@Nullable Input<String> logFilePrefix) {
            this.logFilePrefix = logFilePrefix;
            return this;
        }

        public Builder setLogFilePrefix(@Nullable String logFilePrefix) {
            this.logFilePrefix = Input.ofNullable(logFilePrefix);
            return this;
        }

        public BucketLoggingConfigurationArgs build() {
            return new BucketLoggingConfigurationArgs(destinationBucketName, logFilePrefix);
        }
    }
}
