// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.outputs;

import io.pulumi.awsnative.databrew.enums.JobEncryptionMode;
import io.pulumi.awsnative.databrew.enums.JobLogSubscription;
import io.pulumi.awsnative.databrew.outputs.JobDataCatalogOutput;
import io.pulumi.awsnative.databrew.outputs.JobDatabaseOutput;
import io.pulumi.awsnative.databrew.outputs.JobOutput;
import io.pulumi.awsnative.databrew.outputs.JobOutputLocation;
import io.pulumi.awsnative.databrew.outputs.JobProfileConfiguration;
import io.pulumi.awsnative.databrew.outputs.JobRecipe;
import io.pulumi.awsnative.databrew.outputs.JobSample;
import io.pulumi.awsnative.databrew.outputs.JobValidationConfiguration;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetJobResult {
    private final @Nullable List<JobDataCatalogOutput> dataCatalogOutputs;
    private final @Nullable List<JobDatabaseOutput> databaseOutputs;
    private final @Nullable String datasetName;
    private final @Nullable String encryptionKeyArn;
    private final @Nullable JobEncryptionMode encryptionMode;
    private final @Nullable JobSample jobSample;
    private final @Nullable JobLogSubscription logSubscription;
    private final @Nullable Integer maxCapacity;
    private final @Nullable Integer maxRetries;
    private final @Nullable JobOutputLocation outputLocation;
    private final @Nullable List<JobOutput> outputs;
    private final @Nullable JobProfileConfiguration profileConfiguration;
    private final @Nullable String projectName;
    private final @Nullable JobRecipe recipe;
    private final @Nullable String roleArn;
    private final @Nullable Integer timeout;
    private final @Nullable List<JobValidationConfiguration> validationConfigurations;

    @OutputCustomType.Constructor({"dataCatalogOutputs","databaseOutputs","datasetName","encryptionKeyArn","encryptionMode","jobSample","logSubscription","maxCapacity","maxRetries","outputLocation","outputs","profileConfiguration","projectName","recipe","roleArn","timeout","validationConfigurations"})
    private GetJobResult(
        @Nullable List<JobDataCatalogOutput> dataCatalogOutputs,
        @Nullable List<JobDatabaseOutput> databaseOutputs,
        @Nullable String datasetName,
        @Nullable String encryptionKeyArn,
        @Nullable JobEncryptionMode encryptionMode,
        @Nullable JobSample jobSample,
        @Nullable JobLogSubscription logSubscription,
        @Nullable Integer maxCapacity,
        @Nullable Integer maxRetries,
        @Nullable JobOutputLocation outputLocation,
        @Nullable List<JobOutput> outputs,
        @Nullable JobProfileConfiguration profileConfiguration,
        @Nullable String projectName,
        @Nullable JobRecipe recipe,
        @Nullable String roleArn,
        @Nullable Integer timeout,
        @Nullable List<JobValidationConfiguration> validationConfigurations) {
        this.dataCatalogOutputs = dataCatalogOutputs;
        this.databaseOutputs = databaseOutputs;
        this.datasetName = datasetName;
        this.encryptionKeyArn = encryptionKeyArn;
        this.encryptionMode = encryptionMode;
        this.jobSample = jobSample;
        this.logSubscription = logSubscription;
        this.maxCapacity = maxCapacity;
        this.maxRetries = maxRetries;
        this.outputLocation = outputLocation;
        this.outputs = outputs;
        this.profileConfiguration = profileConfiguration;
        this.projectName = projectName;
        this.recipe = recipe;
        this.roleArn = roleArn;
        this.timeout = timeout;
        this.validationConfigurations = validationConfigurations;
    }

    public List<JobDataCatalogOutput> getDataCatalogOutputs() {
        return this.dataCatalogOutputs == null ? List.of() : this.dataCatalogOutputs;
    }
    public List<JobDatabaseOutput> getDatabaseOutputs() {
        return this.databaseOutputs == null ? List.of() : this.databaseOutputs;
    }
    public Optional<String> getDatasetName() {
        return Optional.ofNullable(this.datasetName);
    }
    public Optional<String> getEncryptionKeyArn() {
        return Optional.ofNullable(this.encryptionKeyArn);
    }
    public Optional<JobEncryptionMode> getEncryptionMode() {
        return Optional.ofNullable(this.encryptionMode);
    }
    public Optional<JobSample> getJobSample() {
        return Optional.ofNullable(this.jobSample);
    }
    public Optional<JobLogSubscription> getLogSubscription() {
        return Optional.ofNullable(this.logSubscription);
    }
    public Optional<Integer> getMaxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }
    public Optional<Integer> getMaxRetries() {
        return Optional.ofNullable(this.maxRetries);
    }
    public Optional<JobOutputLocation> getOutputLocation() {
        return Optional.ofNullable(this.outputLocation);
    }
    public List<JobOutput> getOutputs() {
        return this.outputs == null ? List.of() : this.outputs;
    }
    public Optional<JobProfileConfiguration> getProfileConfiguration() {
        return Optional.ofNullable(this.profileConfiguration);
    }
    public Optional<String> getProjectName() {
        return Optional.ofNullable(this.projectName);
    }
    public Optional<JobRecipe> getRecipe() {
        return Optional.ofNullable(this.recipe);
    }
    public Optional<String> getRoleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    public Optional<Integer> getTimeout() {
        return Optional.ofNullable(this.timeout);
    }
    public List<JobValidationConfiguration> getValidationConfigurations() {
        return this.validationConfigurations == null ? List.of() : this.validationConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<JobDataCatalogOutput> dataCatalogOutputs;
        private @Nullable List<JobDatabaseOutput> databaseOutputs;
        private @Nullable String datasetName;
        private @Nullable String encryptionKeyArn;
        private @Nullable JobEncryptionMode encryptionMode;
        private @Nullable JobSample jobSample;
        private @Nullable JobLogSubscription logSubscription;
        private @Nullable Integer maxCapacity;
        private @Nullable Integer maxRetries;
        private @Nullable JobOutputLocation outputLocation;
        private @Nullable List<JobOutput> outputs;
        private @Nullable JobProfileConfiguration profileConfiguration;
        private @Nullable String projectName;
        private @Nullable JobRecipe recipe;
        private @Nullable String roleArn;
        private @Nullable Integer timeout;
        private @Nullable List<JobValidationConfiguration> validationConfigurations;

        public Builder() {
    	      // Empty
        }

        public Builder(GetJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataCatalogOutputs = defaults.dataCatalogOutputs;
    	      this.databaseOutputs = defaults.databaseOutputs;
    	      this.datasetName = defaults.datasetName;
    	      this.encryptionKeyArn = defaults.encryptionKeyArn;
    	      this.encryptionMode = defaults.encryptionMode;
    	      this.jobSample = defaults.jobSample;
    	      this.logSubscription = defaults.logSubscription;
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.maxRetries = defaults.maxRetries;
    	      this.outputLocation = defaults.outputLocation;
    	      this.outputs = defaults.outputs;
    	      this.profileConfiguration = defaults.profileConfiguration;
    	      this.projectName = defaults.projectName;
    	      this.recipe = defaults.recipe;
    	      this.roleArn = defaults.roleArn;
    	      this.timeout = defaults.timeout;
    	      this.validationConfigurations = defaults.validationConfigurations;
        }

        public Builder setDataCatalogOutputs(@Nullable List<JobDataCatalogOutput> dataCatalogOutputs) {
            this.dataCatalogOutputs = dataCatalogOutputs;
            return this;
        }

        public Builder setDatabaseOutputs(@Nullable List<JobDatabaseOutput> databaseOutputs) {
            this.databaseOutputs = databaseOutputs;
            return this;
        }

        public Builder setDatasetName(@Nullable String datasetName) {
            this.datasetName = datasetName;
            return this;
        }

        public Builder setEncryptionKeyArn(@Nullable String encryptionKeyArn) {
            this.encryptionKeyArn = encryptionKeyArn;
            return this;
        }

        public Builder setEncryptionMode(@Nullable JobEncryptionMode encryptionMode) {
            this.encryptionMode = encryptionMode;
            return this;
        }

        public Builder setJobSample(@Nullable JobSample jobSample) {
            this.jobSample = jobSample;
            return this;
        }

        public Builder setLogSubscription(@Nullable JobLogSubscription logSubscription) {
            this.logSubscription = logSubscription;
            return this;
        }

        public Builder setMaxCapacity(@Nullable Integer maxCapacity) {
            this.maxCapacity = maxCapacity;
            return this;
        }

        public Builder setMaxRetries(@Nullable Integer maxRetries) {
            this.maxRetries = maxRetries;
            return this;
        }

        public Builder setOutputLocation(@Nullable JobOutputLocation outputLocation) {
            this.outputLocation = outputLocation;
            return this;
        }

        public Builder setOutputs(@Nullable List<JobOutput> outputs) {
            this.outputs = outputs;
            return this;
        }

        public Builder setProfileConfiguration(@Nullable JobProfileConfiguration profileConfiguration) {
            this.profileConfiguration = profileConfiguration;
            return this;
        }

        public Builder setProjectName(@Nullable String projectName) {
            this.projectName = projectName;
            return this;
        }

        public Builder setRecipe(@Nullable JobRecipe recipe) {
            this.recipe = recipe;
            return this;
        }

        public Builder setRoleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }

        public Builder setTimeout(@Nullable Integer timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setValidationConfigurations(@Nullable List<JobValidationConfiguration> validationConfigurations) {
            this.validationConfigurations = validationConfigurations;
            return this;
        }

        public GetJobResult build() {
            return new GetJobResult(dataCatalogOutputs, databaseOutputs, datasetName, encryptionKeyArn, encryptionMode, jobSample, logSubscription, maxCapacity, maxRetries, outputLocation, outputs, profileConfiguration, projectName, recipe, roleArn, timeout, validationConfigurations);
        }
    }
}
