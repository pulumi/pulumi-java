// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.ec2;

import io.pulumi.awsnative.ec2.enums.FlowLogLogDestinationType;
import io.pulumi.awsnative.ec2.enums.FlowLogResourceType;
import io.pulumi.awsnative.ec2.enums.FlowLogTrafficType;
import io.pulumi.awsnative.ec2.inputs.DestinationOptionsPropertiesArgs;
import io.pulumi.awsnative.ec2.inputs.FlowLogTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlowLogArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowLogArgs Empty = new FlowLogArgs();

    @InputImport(name="deliverLogsPermissionArn")
    private final @Nullable Input<String> deliverLogsPermissionArn;

    public Input<String> getDeliverLogsPermissionArn() {
        return this.deliverLogsPermissionArn == null ? Input.empty() : this.deliverLogsPermissionArn;
    }

    @InputImport(name="destinationOptions")
    private final @Nullable Input<DestinationOptionsPropertiesArgs> destinationOptions;

    public Input<DestinationOptionsPropertiesArgs> getDestinationOptions() {
        return this.destinationOptions == null ? Input.empty() : this.destinationOptions;
    }

    @InputImport(name="logDestination")
    private final @Nullable Input<String> logDestination;

    public Input<String> getLogDestination() {
        return this.logDestination == null ? Input.empty() : this.logDestination;
    }

    @InputImport(name="logDestinationType")
    private final @Nullable Input<FlowLogLogDestinationType> logDestinationType;

    public Input<FlowLogLogDestinationType> getLogDestinationType() {
        return this.logDestinationType == null ? Input.empty() : this.logDestinationType;
    }

    @InputImport(name="logFormat")
    private final @Nullable Input<String> logFormat;

    public Input<String> getLogFormat() {
        return this.logFormat == null ? Input.empty() : this.logFormat;
    }

    @InputImport(name="logGroupName")
    private final @Nullable Input<String> logGroupName;

    public Input<String> getLogGroupName() {
        return this.logGroupName == null ? Input.empty() : this.logGroupName;
    }

    @InputImport(name="maxAggregationInterval")
    private final @Nullable Input<Integer> maxAggregationInterval;

    public Input<Integer> getMaxAggregationInterval() {
        return this.maxAggregationInterval == null ? Input.empty() : this.maxAggregationInterval;
    }

    @InputImport(name="resourceId", required=true)
    private final Input<String> resourceId;

    public Input<String> getResourceId() {
        return this.resourceId;
    }

    @InputImport(name="resourceType", required=true)
    private final Input<FlowLogResourceType> resourceType;

    public Input<FlowLogResourceType> getPropResourceType() {
        return this.resourceType;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<FlowLogTagArgs>> tags;

    public Input<List<FlowLogTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="trafficType", required=true)
    private final Input<FlowLogTrafficType> trafficType;

    public Input<FlowLogTrafficType> getTrafficType() {
        return this.trafficType;
    }

    public FlowLogArgs(
        @Nullable Input<String> deliverLogsPermissionArn,
        @Nullable Input<DestinationOptionsPropertiesArgs> destinationOptions,
        @Nullable Input<String> logDestination,
        @Nullable Input<FlowLogLogDestinationType> logDestinationType,
        @Nullable Input<String> logFormat,
        @Nullable Input<String> logGroupName,
        @Nullable Input<Integer> maxAggregationInterval,
        Input<String> resourceId,
        Input<FlowLogResourceType> resourceType,
        @Nullable Input<List<FlowLogTagArgs>> tags,
        Input<FlowLogTrafficType> trafficType) {
        this.deliverLogsPermissionArn = deliverLogsPermissionArn;
        this.destinationOptions = destinationOptions;
        this.logDestination = logDestination;
        this.logDestinationType = logDestinationType;
        this.logFormat = logFormat;
        this.logGroupName = logGroupName;
        this.maxAggregationInterval = maxAggregationInterval;
        this.resourceId = Objects.requireNonNull(resourceId, "expected parameter 'resourceId' to be non-null");
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
        this.tags = tags;
        this.trafficType = Objects.requireNonNull(trafficType, "expected parameter 'trafficType' to be non-null");
    }

    private FlowLogArgs() {
        this.deliverLogsPermissionArn = Input.empty();
        this.destinationOptions = Input.empty();
        this.logDestination = Input.empty();
        this.logDestinationType = Input.empty();
        this.logFormat = Input.empty();
        this.logGroupName = Input.empty();
        this.maxAggregationInterval = Input.empty();
        this.resourceId = Input.empty();
        this.resourceType = Input.empty();
        this.tags = Input.empty();
        this.trafficType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> deliverLogsPermissionArn;
        private @Nullable Input<DestinationOptionsPropertiesArgs> destinationOptions;
        private @Nullable Input<String> logDestination;
        private @Nullable Input<FlowLogLogDestinationType> logDestinationType;
        private @Nullable Input<String> logFormat;
        private @Nullable Input<String> logGroupName;
        private @Nullable Input<Integer> maxAggregationInterval;
        private Input<String> resourceId;
        private Input<FlowLogResourceType> resourceType;
        private @Nullable Input<List<FlowLogTagArgs>> tags;
        private Input<FlowLogTrafficType> trafficType;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowLogArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deliverLogsPermissionArn = defaults.deliverLogsPermissionArn;
    	      this.destinationOptions = defaults.destinationOptions;
    	      this.logDestination = defaults.logDestination;
    	      this.logDestinationType = defaults.logDestinationType;
    	      this.logFormat = defaults.logFormat;
    	      this.logGroupName = defaults.logGroupName;
    	      this.maxAggregationInterval = defaults.maxAggregationInterval;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
    	      this.tags = defaults.tags;
    	      this.trafficType = defaults.trafficType;
        }

        public Builder setDeliverLogsPermissionArn(@Nullable Input<String> deliverLogsPermissionArn) {
            this.deliverLogsPermissionArn = deliverLogsPermissionArn;
            return this;
        }

        public Builder setDeliverLogsPermissionArn(@Nullable String deliverLogsPermissionArn) {
            this.deliverLogsPermissionArn = Input.ofNullable(deliverLogsPermissionArn);
            return this;
        }

        public Builder setDestinationOptions(@Nullable Input<DestinationOptionsPropertiesArgs> destinationOptions) {
            this.destinationOptions = destinationOptions;
            return this;
        }

        public Builder setDestinationOptions(@Nullable DestinationOptionsPropertiesArgs destinationOptions) {
            this.destinationOptions = Input.ofNullable(destinationOptions);
            return this;
        }

        public Builder setLogDestination(@Nullable Input<String> logDestination) {
            this.logDestination = logDestination;
            return this;
        }

        public Builder setLogDestination(@Nullable String logDestination) {
            this.logDestination = Input.ofNullable(logDestination);
            return this;
        }

        public Builder setLogDestinationType(@Nullable Input<FlowLogLogDestinationType> logDestinationType) {
            this.logDestinationType = logDestinationType;
            return this;
        }

        public Builder setLogDestinationType(@Nullable FlowLogLogDestinationType logDestinationType) {
            this.logDestinationType = Input.ofNullable(logDestinationType);
            return this;
        }

        public Builder setLogFormat(@Nullable Input<String> logFormat) {
            this.logFormat = logFormat;
            return this;
        }

        public Builder setLogFormat(@Nullable String logFormat) {
            this.logFormat = Input.ofNullable(logFormat);
            return this;
        }

        public Builder setLogGroupName(@Nullable Input<String> logGroupName) {
            this.logGroupName = logGroupName;
            return this;
        }

        public Builder setLogGroupName(@Nullable String logGroupName) {
            this.logGroupName = Input.ofNullable(logGroupName);
            return this;
        }

        public Builder setMaxAggregationInterval(@Nullable Input<Integer> maxAggregationInterval) {
            this.maxAggregationInterval = maxAggregationInterval;
            return this;
        }

        public Builder setMaxAggregationInterval(@Nullable Integer maxAggregationInterval) {
            this.maxAggregationInterval = Input.ofNullable(maxAggregationInterval);
            return this;
        }

        public Builder setResourceId(Input<String> resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }

        public Builder setResourceId(String resourceId) {
            this.resourceId = Input.of(Objects.requireNonNull(resourceId));
            return this;
        }

        public Builder setResourceType(Input<FlowLogResourceType> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }

        public Builder setResourceType(FlowLogResourceType resourceType) {
            this.resourceType = Input.of(Objects.requireNonNull(resourceType));
            return this;
        }

        public Builder setTags(@Nullable Input<List<FlowLogTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<FlowLogTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTrafficType(Input<FlowLogTrafficType> trafficType) {
            this.trafficType = Objects.requireNonNull(trafficType);
            return this;
        }

        public Builder setTrafficType(FlowLogTrafficType trafficType) {
            this.trafficType = Input.of(Objects.requireNonNull(trafficType));
            return this;
        }

        public FlowLogArgs build() {
            return new FlowLogArgs(deliverLogsPermissionArn, destinationOptions, logDestination, logDestinationType, logFormat, logGroupName, maxAggregationInterval, resourceId, resourceType, tags, trafficType);
        }
    }
}
