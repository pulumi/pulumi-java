// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.globalaccelerator.outputs;

import io.pulumi.awsnative.globalaccelerator.enums.EndpointGroupHealthCheckProtocol;
import io.pulumi.awsnative.globalaccelerator.outputs.EndpointGroupEndpointConfiguration;
import io.pulumi.awsnative.globalaccelerator.outputs.EndpointGroupPortOverride;
import io.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEndpointGroupResult {
    /**
     * The list of endpoint objects.
     * 
     */
    private final @Nullable List<EndpointGroupEndpointConfiguration> endpointConfigurations;
    /**
     * The Amazon Resource Name (ARN) of the endpoint group
     * 
     */
    private final @Nullable String endpointGroupArn;
    /**
     * The time in seconds between each health check for an endpoint. Must be a value of 10 or 30
     * 
     */
    private final @Nullable Integer healthCheckIntervalSeconds;
    private final @Nullable String healthCheckPath;
    /**
     * The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
     * 
     */
    private final @Nullable Integer healthCheckPort;
    /**
     * The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
     * 
     */
    private final @Nullable EndpointGroupHealthCheckProtocol healthCheckProtocol;
    private final @Nullable List<EndpointGroupPortOverride> portOverrides;
    /**
     * The number of consecutive health checks required to set the state of the endpoint to unhealthy.
     * 
     */
    private final @Nullable Integer thresholdCount;
    /**
     * The percentage of traffic to sent to an AWS Region
     * 
     */
    private final @Nullable Double trafficDialPercentage;

    @CustomType.Constructor
    private GetEndpointGroupResult(
        @CustomType.Parameter("endpointConfigurations") @Nullable List<EndpointGroupEndpointConfiguration> endpointConfigurations,
        @CustomType.Parameter("endpointGroupArn") @Nullable String endpointGroupArn,
        @CustomType.Parameter("healthCheckIntervalSeconds") @Nullable Integer healthCheckIntervalSeconds,
        @CustomType.Parameter("healthCheckPath") @Nullable String healthCheckPath,
        @CustomType.Parameter("healthCheckPort") @Nullable Integer healthCheckPort,
        @CustomType.Parameter("healthCheckProtocol") @Nullable EndpointGroupHealthCheckProtocol healthCheckProtocol,
        @CustomType.Parameter("portOverrides") @Nullable List<EndpointGroupPortOverride> portOverrides,
        @CustomType.Parameter("thresholdCount") @Nullable Integer thresholdCount,
        @CustomType.Parameter("trafficDialPercentage") @Nullable Double trafficDialPercentage) {
        this.endpointConfigurations = endpointConfigurations;
        this.endpointGroupArn = endpointGroupArn;
        this.healthCheckIntervalSeconds = healthCheckIntervalSeconds;
        this.healthCheckPath = healthCheckPath;
        this.healthCheckPort = healthCheckPort;
        this.healthCheckProtocol = healthCheckProtocol;
        this.portOverrides = portOverrides;
        this.thresholdCount = thresholdCount;
        this.trafficDialPercentage = trafficDialPercentage;
    }

    /**
     * The list of endpoint objects.
     * 
    */
    public List<EndpointGroupEndpointConfiguration> getEndpointConfigurations() {
        return this.endpointConfigurations == null ? List.of() : this.endpointConfigurations;
    }
    /**
     * The Amazon Resource Name (ARN) of the endpoint group
     * 
    */
    public Optional<String> getEndpointGroupArn() {
        return Optional.ofNullable(this.endpointGroupArn);
    }
    /**
     * The time in seconds between each health check for an endpoint. Must be a value of 10 or 30
     * 
    */
    public Optional<Integer> getHealthCheckIntervalSeconds() {
        return Optional.ofNullable(this.healthCheckIntervalSeconds);
    }
    public Optional<String> getHealthCheckPath() {
        return Optional.ofNullable(this.healthCheckPath);
    }
    /**
     * The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
     * 
    */
    public Optional<Integer> getHealthCheckPort() {
        return Optional.ofNullable(this.healthCheckPort);
    }
    /**
     * The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
     * 
    */
    public Optional<EndpointGroupHealthCheckProtocol> getHealthCheckProtocol() {
        return Optional.ofNullable(this.healthCheckProtocol);
    }
    public List<EndpointGroupPortOverride> getPortOverrides() {
        return this.portOverrides == null ? List.of() : this.portOverrides;
    }
    /**
     * The number of consecutive health checks required to set the state of the endpoint to unhealthy.
     * 
    */
    public Optional<Integer> getThresholdCount() {
        return Optional.ofNullable(this.thresholdCount);
    }
    /**
     * The percentage of traffic to sent to an AWS Region
     * 
    */
    public Optional<Double> getTrafficDialPercentage() {
        return Optional.ofNullable(this.trafficDialPercentage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndpointGroupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<EndpointGroupEndpointConfiguration> endpointConfigurations;
        private @Nullable String endpointGroupArn;
        private @Nullable Integer healthCheckIntervalSeconds;
        private @Nullable String healthCheckPath;
        private @Nullable Integer healthCheckPort;
        private @Nullable EndpointGroupHealthCheckProtocol healthCheckProtocol;
        private @Nullable List<EndpointGroupPortOverride> portOverrides;
        private @Nullable Integer thresholdCount;
        private @Nullable Double trafficDialPercentage;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEndpointGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointConfigurations = defaults.endpointConfigurations;
    	      this.endpointGroupArn = defaults.endpointGroupArn;
    	      this.healthCheckIntervalSeconds = defaults.healthCheckIntervalSeconds;
    	      this.healthCheckPath = defaults.healthCheckPath;
    	      this.healthCheckPort = defaults.healthCheckPort;
    	      this.healthCheckProtocol = defaults.healthCheckProtocol;
    	      this.portOverrides = defaults.portOverrides;
    	      this.thresholdCount = defaults.thresholdCount;
    	      this.trafficDialPercentage = defaults.trafficDialPercentage;
        }

        public Builder endpointConfigurations(@Nullable List<EndpointGroupEndpointConfiguration> endpointConfigurations) {
            this.endpointConfigurations = endpointConfigurations;
            return this;
        }

        public Builder endpointGroupArn(@Nullable String endpointGroupArn) {
            this.endpointGroupArn = endpointGroupArn;
            return this;
        }

        public Builder healthCheckIntervalSeconds(@Nullable Integer healthCheckIntervalSeconds) {
            this.healthCheckIntervalSeconds = healthCheckIntervalSeconds;
            return this;
        }

        public Builder healthCheckPath(@Nullable String healthCheckPath) {
            this.healthCheckPath = healthCheckPath;
            return this;
        }

        public Builder healthCheckPort(@Nullable Integer healthCheckPort) {
            this.healthCheckPort = healthCheckPort;
            return this;
        }

        public Builder healthCheckProtocol(@Nullable EndpointGroupHealthCheckProtocol healthCheckProtocol) {
            this.healthCheckProtocol = healthCheckProtocol;
            return this;
        }

        public Builder portOverrides(@Nullable List<EndpointGroupPortOverride> portOverrides) {
            this.portOverrides = portOverrides;
            return this;
        }

        public Builder thresholdCount(@Nullable Integer thresholdCount) {
            this.thresholdCount = thresholdCount;
            return this;
        }

        public Builder trafficDialPercentage(@Nullable Double trafficDialPercentage) {
            this.trafficDialPercentage = trafficDialPercentage;
            return this;
        }
        public GetEndpointGroupResult build() {
            return new GetEndpointGroupResult(endpointConfigurations, endpointGroupArn, healthCheckIntervalSeconds, healthCheckPath, healthCheckPort, healthCheckProtocol, portOverrides, thresholdCount, trafficDialPercentage);
        }
    }
}
