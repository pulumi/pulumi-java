// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.inputs;

import io.pulumi.awsnative.s3.enums.StorageLensS3BucketDestinationFormat;
import io.pulumi.awsnative.s3.enums.StorageLensS3BucketDestinationOutputSchemaVersion;
import io.pulumi.awsnative.s3.inputs.StorageLensEncryptionArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * S3 bucket destination settings for the Amazon S3 Storage Lens metrics export.
 * 
 */
public final class StorageLensS3BucketDestinationArgs extends io.pulumi.resources.ResourceArgs {

    public static final StorageLensS3BucketDestinationArgs Empty = new StorageLensS3BucketDestinationArgs();

    /**
     * The AWS account ID that owns the destination S3 bucket.
     * 
     */
    @InputImport(name="accountId", required=true)
        private final Input<String> accountId;

    public Input<String> getAccountId() {
        return this.accountId;
    }

    /**
     * The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
     * 
     */
    @InputImport(name="arn", required=true)
        private final Input<String> arn;

    public Input<String> getArn() {
        return this.arn;
    }

    @InputImport(name="encryption")
        private final @Nullable Input<StorageLensEncryptionArgs> encryption;

    public Input<StorageLensEncryptionArgs> getEncryption() {
        return this.encryption == null ? Input.empty() : this.encryption;
    }

    /**
     * Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
     * 
     */
    @InputImport(name="format", required=true)
        private final Input<StorageLensS3BucketDestinationFormat> format;

    public Input<StorageLensS3BucketDestinationFormat> getFormat() {
        return this.format;
    }

    /**
     * The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
     * 
     */
    @InputImport(name="outputSchemaVersion", required=true)
        private final Input<StorageLensS3BucketDestinationOutputSchemaVersion> outputSchemaVersion;

    public Input<StorageLensS3BucketDestinationOutputSchemaVersion> getOutputSchemaVersion() {
        return this.outputSchemaVersion;
    }

    /**
     * The prefix to use for Amazon S3 Storage Lens export.
     * 
     */
    @InputImport(name="prefix")
        private final @Nullable Input<String> prefix;

    public Input<String> getPrefix() {
        return this.prefix == null ? Input.empty() : this.prefix;
    }

    public StorageLensS3BucketDestinationArgs(
        Input<String> accountId,
        Input<String> arn,
        @Nullable Input<StorageLensEncryptionArgs> encryption,
        Input<StorageLensS3BucketDestinationFormat> format,
        Input<StorageLensS3BucketDestinationOutputSchemaVersion> outputSchemaVersion,
        @Nullable Input<String> prefix) {
        this.accountId = Objects.requireNonNull(accountId, "expected parameter 'accountId' to be non-null");
        this.arn = Objects.requireNonNull(arn, "expected parameter 'arn' to be non-null");
        this.encryption = encryption;
        this.format = Objects.requireNonNull(format, "expected parameter 'format' to be non-null");
        this.outputSchemaVersion = Objects.requireNonNull(outputSchemaVersion, "expected parameter 'outputSchemaVersion' to be non-null");
        this.prefix = prefix;
    }

    private StorageLensS3BucketDestinationArgs() {
        this.accountId = Input.empty();
        this.arn = Input.empty();
        this.encryption = Input.empty();
        this.format = Input.empty();
        this.outputSchemaVersion = Input.empty();
        this.prefix = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageLensS3BucketDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountId;
        private Input<String> arn;
        private @Nullable Input<StorageLensEncryptionArgs> encryption;
        private Input<StorageLensS3BucketDestinationFormat> format;
        private Input<StorageLensS3BucketDestinationOutputSchemaVersion> outputSchemaVersion;
        private @Nullable Input<String> prefix;

        public Builder() {
    	      // Empty
        }

        public Builder(StorageLensS3BucketDestinationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.arn = defaults.arn;
    	      this.encryption = defaults.encryption;
    	      this.format = defaults.format;
    	      this.outputSchemaVersion = defaults.outputSchemaVersion;
    	      this.prefix = defaults.prefix;
        }

        public Builder setAccountId(Input<String> accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }

        public Builder setAccountId(String accountId) {
            this.accountId = Input.of(Objects.requireNonNull(accountId));
            return this;
        }

        public Builder setArn(Input<String> arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setArn(String arn) {
            this.arn = Input.of(Objects.requireNonNull(arn));
            return this;
        }

        public Builder setEncryption(@Nullable Input<StorageLensEncryptionArgs> encryption) {
            this.encryption = encryption;
            return this;
        }

        public Builder setEncryption(@Nullable StorageLensEncryptionArgs encryption) {
            this.encryption = Input.ofNullable(encryption);
            return this;
        }

        public Builder setFormat(Input<StorageLensS3BucketDestinationFormat> format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }

        public Builder setFormat(StorageLensS3BucketDestinationFormat format) {
            this.format = Input.of(Objects.requireNonNull(format));
            return this;
        }

        public Builder setOutputSchemaVersion(Input<StorageLensS3BucketDestinationOutputSchemaVersion> outputSchemaVersion) {
            this.outputSchemaVersion = Objects.requireNonNull(outputSchemaVersion);
            return this;
        }

        public Builder setOutputSchemaVersion(StorageLensS3BucketDestinationOutputSchemaVersion outputSchemaVersion) {
            this.outputSchemaVersion = Input.of(Objects.requireNonNull(outputSchemaVersion));
            return this;
        }

        public Builder setPrefix(@Nullable Input<String> prefix) {
            this.prefix = prefix;
            return this;
        }

        public Builder setPrefix(@Nullable String prefix) {
            this.prefix = Input.ofNullable(prefix);
            return this;
        }
        public StorageLensS3BucketDestinationArgs build() {
            return new StorageLensS3BucketDestinationArgs(accountId, arn, encryption, format, outputSchemaVersion, prefix);
        }
    }
}
