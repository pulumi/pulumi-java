// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.xray;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.xray.SamplingRuleArgs;
import io.pulumi.awsnative.xray.outputs.SamplingRuleRecord;
import io.pulumi.awsnative.xray.outputs.SamplingRuleUpdate;
import io.pulumi.awsnative.xray.outputs.TagsItemProperties;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This schema provides construct and validation rules for AWS-XRay SamplingRule resource parameters.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var samplingRule = new AwsNative.XRay.SamplingRule("samplingRule", new AwsNative.XRay.SamplingRuleArgs
 *         {
 *             SamplingRule = new AwsNative.XRay.Inputs.SamplingRuleArgs
 *             {
 *                 RuleName = "MySamplingRule",
 *                 ResourceARN = "*",
 *                 Priority = 2,
 *                 FixedRate = 0.05,
 *                 ReservoirSize = 50,
 *                 ServiceName = "MyServiceName",
 *                 ServiceType = "MyServiceType",
 *                 Host = "MyHost",
 *                 HttpMethod = "GET",
 *                 UrlPath = "*",
 *                 Version = 1,
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/xray"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := xray.NewSamplingRule(ctx, "samplingRule", &xray.SamplingRuleArgs{
 * 			SamplingRule: &xray.SamplingRuleArgs{
 * 				RuleName:      pulumi.String("MySamplingRule"),
 * 				ResourceARN:   pulumi.String("*"),
 * 				Priority:      pulumi.Int(2),
 * 				FixedRate:     pulumi.Float64(0.05),
 * 				ReservoirSize: pulumi.Int(50),
 * 				ServiceName:   pulumi.String("MyServiceName"),
 * 				ServiceType:   pulumi.String("MyServiceType"),
 * 				Host:          pulumi.String("MyHost"),
 * 				HttpMethod:    "GET",
 * 				UrlPath:       "*",
 * 				Version:       pulumi.Int(1),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const samplingRule = new aws_native.xray.SamplingRule("samplingRule", {samplingRule: {
 *     ruleName: "MySamplingRule",
 *     resourceARN: "*",
 *     priority: 2,
 *     fixedRate: 0.05,
 *     reservoirSize: 50,
 *     serviceName: "MyServiceName",
 *     serviceType: "MyServiceType",
 *     host: "MyHost",
 *     httpMethod: "GET",
 *     urlPath: "*",
 *     version: 1,
 * }});
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * sampling_rule = aws_native.xray.SamplingRule("samplingRule", sampling_rule=aws_native.xray.SamplingRuleArgs(
 *     rule_name="MySamplingRule",
 *     resource_arn="*",
 *     priority=2,
 *     fixed_rate=0.05,
 *     reservoir_size=50,
 *     service_name="MyServiceName",
 *     service_type="MyServiceType",
 *     host="MyHost",
 *     http_method="GET",
 *     url_path="*",
 *     version=1,
 * ))
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var samplingRule = new AwsNative.XRay.SamplingRule("samplingRule", new AwsNative.XRay.SamplingRuleArgs
 *         {
 *             SamplingRule = new AwsNative.XRay.Inputs.SamplingRuleArgs
 *             {
 *                 RuleName = "MySamplingRule",
 *                 ResourceARN = "*",
 *                 Priority = 2,
 *                 FixedRate = 0.05,
 *                 ReservoirSize = 50,
 *                 ServiceName = "MyServiceName",
 *                 ServiceType = "MyServiceType",
 *                 Host = "MyHost",
 *                 HttpMethod = "GET",
 *                 UrlPath = "*",
 *                 Version = 1,
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/xray"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := xray.NewSamplingRule(ctx, "samplingRule", &xray.SamplingRuleArgs{
 * 			SamplingRule: &xray.SamplingRuleArgs{
 * 				RuleName:      pulumi.String("MySamplingRule"),
 * 				ResourceARN:   pulumi.String("*"),
 * 				Priority:      pulumi.Int(2),
 * 				FixedRate:     pulumi.Float64(0.05),
 * 				ReservoirSize: pulumi.Int(50),
 * 				ServiceName:   pulumi.String("MyServiceName"),
 * 				ServiceType:   pulumi.String("MyServiceType"),
 * 				Host:          pulumi.String("MyHost"),
 * 				HttpMethod:    "GET",
 * 				UrlPath:       "*",
 * 				Version:       pulumi.Int(1),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const samplingRule = new aws_native.xray.SamplingRule("samplingRule", {samplingRule: {
 *     ruleName: "MySamplingRule",
 *     resourceARN: "*",
 *     priority: 2,
 *     fixedRate: 0.05,
 *     reservoirSize: 50,
 *     serviceName: "MyServiceName",
 *     serviceType: "MyServiceType",
 *     host: "MyHost",
 *     httpMethod: "GET",
 *     urlPath: "*",
 *     version: 1,
 * }});
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * sampling_rule = aws_native.xray.SamplingRule("samplingRule", sampling_rule=aws_native.xray.SamplingRuleArgs(
 *     rule_name="MySamplingRule",
 *     resource_arn="*",
 *     priority=2,
 *     fixed_rate=0.05,
 *     reservoir_size=50,
 *     service_name="MyServiceName",
 *     service_type="MyServiceType",
 *     host="MyHost",
 *     http_method="GET",
 *     url_path="*",
 *     version=1,
 * ))
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var samplingRule = new AwsNative.XRay.SamplingRule("samplingRule", new AwsNative.XRay.SamplingRuleArgs
 *         {
 *             SamplingRuleUpdate = new AwsNative.XRay.Inputs.SamplingRuleUpdateArgs
 *             {
 *                 RuleName = "MySamplingRule",
 *                 ResourceARN = "*",
 *                 Priority = 1,
 *                 FixedRate = 0.07,
 *                 ReservoirSize = 20,
 *                 ServiceName = "MyServiceName",
 *                 ServiceType = "MyServiceType",
 *                 Host = "MyHost",
 *                 HttpMethod = "GET",
 *                 UrlPath = "*",
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/xray"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := xray.NewSamplingRule(ctx, "samplingRule", &xray.SamplingRuleArgs{
 * 			SamplingRuleUpdate: &xray.SamplingRuleUpdateArgs{
 * 				RuleName:      pulumi.String("MySamplingRule"),
 * 				ResourceARN:   pulumi.String("*"),
 * 				Priority:      pulumi.Int(1),
 * 				FixedRate:     pulumi.Float64(0.07),
 * 				ReservoirSize: pulumi.Int(20),
 * 				ServiceName:   pulumi.String("MyServiceName"),
 * 				ServiceType:   pulumi.String("MyServiceType"),
 * 				Host:          pulumi.String("MyHost"),
 * 				HttpMethod:    "GET",
 * 				UrlPath:       "*",
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const samplingRule = new aws_native.xray.SamplingRule("samplingRule", {samplingRuleUpdate: {
 *     ruleName: "MySamplingRule",
 *     resourceARN: "*",
 *     priority: 1,
 *     fixedRate: 0.07,
 *     reservoirSize: 20,
 *     serviceName: "MyServiceName",
 *     serviceType: "MyServiceType",
 *     host: "MyHost",
 *     httpMethod: "GET",
 *     urlPath: "*",
 * }});
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * sampling_rule = aws_native.xray.SamplingRule("samplingRule", sampling_rule_update=aws_native.xray.SamplingRuleUpdateArgs(
 *     rule_name="MySamplingRule",
 *     resource_arn="*",
 *     priority=1,
 *     fixed_rate=0.07,
 *     reservoir_size=20,
 *     service_name="MyServiceName",
 *     service_type="MyServiceType",
 *     host="MyHost",
 *     http_method="GET",
 *     url_path="*",
 * ))
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var samplingRule = new AwsNative.XRay.SamplingRule("samplingRule", new AwsNative.XRay.SamplingRuleArgs
 *         {
 *             SamplingRuleUpdate = new AwsNative.XRay.Inputs.SamplingRuleUpdateArgs
 *             {
 *                 RuleName = "MySamplingRule",
 *                 ResourceARN = "*",
 *                 Priority = 1,
 *                 FixedRate = 0.07,
 *                 ReservoirSize = 20,
 *                 ServiceName = "MyServiceName",
 *                 ServiceType = "MyServiceType",
 *                 Host = "MyHost",
 *                 HttpMethod = "GET",
 *                 UrlPath = "*",
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/xray"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := xray.NewSamplingRule(ctx, "samplingRule", &xray.SamplingRuleArgs{
 * 			SamplingRuleUpdate: &xray.SamplingRuleUpdateArgs{
 * 				RuleName:      pulumi.String("MySamplingRule"),
 * 				ResourceARN:   pulumi.String("*"),
 * 				Priority:      pulumi.Int(1),
 * 				FixedRate:     pulumi.Float64(0.07),
 * 				ReservoirSize: pulumi.Int(20),
 * 				ServiceName:   pulumi.String("MyServiceName"),
 * 				ServiceType:   pulumi.String("MyServiceType"),
 * 				Host:          pulumi.String("MyHost"),
 * 				HttpMethod:    "GET",
 * 				UrlPath:       "*",
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const samplingRule = new aws_native.xray.SamplingRule("samplingRule", {samplingRuleUpdate: {
 *     ruleName: "MySamplingRule",
 *     resourceARN: "*",
 *     priority: 1,
 *     fixedRate: 0.07,
 *     reservoirSize: 20,
 *     serviceName: "MyServiceName",
 *     serviceType: "MyServiceType",
 *     host: "MyHost",
 *     httpMethod: "GET",
 *     urlPath: "*",
 * }});
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * sampling_rule = aws_native.xray.SamplingRule("samplingRule", sampling_rule_update=aws_native.xray.SamplingRuleUpdateArgs(
 *     rule_name="MySamplingRule",
 *     resource_arn="*",
 *     priority=1,
 *     fixed_rate=0.07,
 *     reservoir_size=20,
 *     service_name="MyServiceName",
 *     service_type="MyServiceType",
 *     host="MyHost",
 *     http_method="GET",
 *     url_path="*",
 * ))
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 */
@ResourceType(type="aws-native:xray:SamplingRule")
public class SamplingRule extends io.pulumi.resources.CustomResource {
    @Export(name="ruleARN", type=String.class, parameters={})
    private Output<String> ruleARN;

    public Output<String> getRuleARN() {
        return this.ruleARN;
    }
    @Export(name="ruleName", type=String.class, parameters={})
    private Output</* @Nullable */ String> ruleName;

    public Output</* @Nullable */ String> getRuleName() {
        return this.ruleName;
    }
    @Export(name="samplingRule", type=io.pulumi.awsnative.xray.outputs.SamplingRule.class, parameters={})
    private Output</* @Nullable */ io.pulumi.awsnative.xray.outputs.SamplingRule> samplingRule;

    public Output</* @Nullable */ io.pulumi.awsnative.xray.outputs.SamplingRule> getSamplingRule() {
        return this.samplingRule;
    }
    @Export(name="samplingRuleRecord", type=SamplingRuleRecord.class, parameters={})
    private Output</* @Nullable */ SamplingRuleRecord> samplingRuleRecord;

    public Output</* @Nullable */ SamplingRuleRecord> getSamplingRuleRecord() {
        return this.samplingRuleRecord;
    }
    @Export(name="samplingRuleUpdate", type=SamplingRuleUpdate.class, parameters={})
    private Output</* @Nullable */ SamplingRuleUpdate> samplingRuleUpdate;

    public Output</* @Nullable */ SamplingRuleUpdate> getSamplingRuleUpdate() {
        return this.samplingRuleUpdate;
    }
    @Export(name="tags", type=List.class, parameters={TagsItemProperties.class})
    private Output</* @Nullable */ List<TagsItemProperties>> tags;

    public Output</* @Nullable */ List<TagsItemProperties>> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SamplingRule(String name) {
        this(name, SamplingRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SamplingRule(String name, @Nullable SamplingRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SamplingRule(String name, @Nullable SamplingRuleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:xray:SamplingRule", name, args == null ? SamplingRuleArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private SamplingRule(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:xray:SamplingRule", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SamplingRule get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SamplingRule(name, id, options);
    }
}
