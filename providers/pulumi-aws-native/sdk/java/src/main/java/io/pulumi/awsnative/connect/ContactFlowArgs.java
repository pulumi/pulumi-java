// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.connect;

import io.pulumi.awsnative.connect.enums.ContactFlowState;
import io.pulumi.awsnative.connect.enums.ContactFlowType;
import io.pulumi.awsnative.connect.inputs.ContactFlowTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContactFlowArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContactFlowArgs Empty = new ContactFlowArgs();

    /**
     * The content of the contact flow in JSON format.
     * 
     */
    @InputImport(name="content", required=true)
      private final Output<String> content;

    public Output<String> getContent() {
        return this.content;
    }

    /**
     * The description of the contact flow.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The identifier of the Amazon Connect instance (ARN).
     * 
     */
    @InputImport(name="instanceArn", required=true)
      private final Output<String> instanceArn;

    public Output<String> getInstanceArn() {
        return this.instanceArn;
    }

    /**
     * The name of the contact flow.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The state of the contact flow.
     * 
     */
    @InputImport(name="state")
      private final @Nullable Output<ContactFlowState> state;

    public Output<ContactFlowState> getState() {
        return this.state == null ? Output.empty() : this.state;
    }

    /**
     * One or more tags.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<List<ContactFlowTagArgs>> tags;

    public Output<List<ContactFlowTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * The type of the contact flow.
     * 
     */
    @InputImport(name="type")
      private final @Nullable Output<ContactFlowType> type;

    public Output<ContactFlowType> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    public ContactFlowArgs(
        Output<String> content,
        @Nullable Output<String> description,
        Output<String> instanceArn,
        @Nullable Output<String> name,
        @Nullable Output<ContactFlowState> state,
        @Nullable Output<List<ContactFlowTagArgs>> tags,
        @Nullable Output<ContactFlowType> type) {
        this.content = Objects.requireNonNull(content, "expected parameter 'content' to be non-null");
        this.description = description;
        this.instanceArn = Objects.requireNonNull(instanceArn, "expected parameter 'instanceArn' to be non-null");
        this.name = name;
        this.state = state;
        this.tags = tags;
        this.type = type;
    }

    private ContactFlowArgs() {
        this.content = Output.empty();
        this.description = Output.empty();
        this.instanceArn = Output.empty();
        this.name = Output.empty();
        this.state = Output.empty();
        this.tags = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactFlowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> content;
        private @Nullable Output<String> description;
        private Output<String> instanceArn;
        private @Nullable Output<String> name;
        private @Nullable Output<ContactFlowState> state;
        private @Nullable Output<List<ContactFlowTagArgs>> tags;
        private @Nullable Output<ContactFlowType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(ContactFlowArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.description = defaults.description;
    	      this.instanceArn = defaults.instanceArn;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder content(Output<String> content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }

        public Builder content(String content) {
            this.content = Output.of(Objects.requireNonNull(content));
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder instanceArn(Output<String> instanceArn) {
            this.instanceArn = Objects.requireNonNull(instanceArn);
            return this;
        }

        public Builder instanceArn(String instanceArn) {
            this.instanceArn = Output.of(Objects.requireNonNull(instanceArn));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder state(@Nullable Output<ContactFlowState> state) {
            this.state = state;
            return this;
        }

        public Builder state(@Nullable ContactFlowState state) {
            this.state = Output.ofNullable(state);
            return this;
        }

        public Builder tags(@Nullable Output<List<ContactFlowTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<ContactFlowTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder type(@Nullable Output<ContactFlowType> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable ContactFlowType type) {
            this.type = Output.ofNullable(type);
            return this;
        }
        public ContactFlowArgs build() {
            return new ContactFlowArgs(content, description, instanceArn, name, state, tags, type);
        }
    }
}
