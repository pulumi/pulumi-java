// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.accessanalyzer.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class AnalyzerFilter {
    private final @Nullable List<String> contains;
    private final @Nullable List<String> eq;
    private final @Nullable Boolean exists;
    private final @Nullable List<String> neq;
    private final String property;

    @OutputCustomType.Constructor
    private AnalyzerFilter(
        @OutputCustomType.Parameter("contains") @Nullable List<String> contains,
        @OutputCustomType.Parameter("eq") @Nullable List<String> eq,
        @OutputCustomType.Parameter("exists") @Nullable Boolean exists,
        @OutputCustomType.Parameter("neq") @Nullable List<String> neq,
        @OutputCustomType.Parameter("property") String property) {
        this.contains = contains;
        this.eq = eq;
        this.exists = exists;
        this.neq = neq;
        this.property = property;
    }

    public List<String> getContains() {
        return this.contains == null ? List.of() : this.contains;
    }
    public List<String> getEq() {
        return this.eq == null ? List.of() : this.eq;
    }
    public Optional<Boolean> getExists() {
        return Optional.ofNullable(this.exists);
    }
    public List<String> getNeq() {
        return this.neq == null ? List.of() : this.neq;
    }
    public String getProperty() {
        return this.property;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnalyzerFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> contains;
        private @Nullable List<String> eq;
        private @Nullable Boolean exists;
        private @Nullable List<String> neq;
        private String property;

        public Builder() {
    	      // Empty
        }

        public Builder(AnalyzerFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contains = defaults.contains;
    	      this.eq = defaults.eq;
    	      this.exists = defaults.exists;
    	      this.neq = defaults.neq;
    	      this.property = defaults.property;
        }

        public Builder setContains(@Nullable List<String> contains) {
            this.contains = contains;
            return this;
        }

        public Builder setEq(@Nullable List<String> eq) {
            this.eq = eq;
            return this;
        }

        public Builder setExists(@Nullable Boolean exists) {
            this.exists = exists;
            return this;
        }

        public Builder setNeq(@Nullable List<String> neq) {
            this.neq = neq;
            return this;
        }

        public Builder setProperty(String property) {
            this.property = Objects.requireNonNull(property);
            return this;
        }
        public AnalyzerFilter build() {
            return new AnalyzerFilter(contains, eq, exists, neq, property);
        }
    }
}
