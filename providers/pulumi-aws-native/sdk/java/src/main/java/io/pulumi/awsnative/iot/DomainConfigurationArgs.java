// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iot;

import io.pulumi.awsnative.iot.enums.DomainConfigurationServiceType;
import io.pulumi.awsnative.iot.enums.DomainConfigurationStatus;
import io.pulumi.awsnative.iot.inputs.DomainConfigurationAuthorizerConfigArgs;
import io.pulumi.awsnative.iot.inputs.DomainConfigurationTagArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainConfigurationArgs Empty = new DomainConfigurationArgs();

    @InputImport(name="authorizerConfig")
      private final @Nullable Input<DomainConfigurationAuthorizerConfigArgs> authorizerConfig;

    public Input<DomainConfigurationAuthorizerConfigArgs> getAuthorizerConfig() {
        return this.authorizerConfig == null ? Input.empty() : this.authorizerConfig;
    }

    @InputImport(name="domainConfigurationName")
      private final @Nullable Input<String> domainConfigurationName;

    public Input<String> getDomainConfigurationName() {
        return this.domainConfigurationName == null ? Input.empty() : this.domainConfigurationName;
    }

    @InputImport(name="domainConfigurationStatus")
      private final @Nullable Input<DomainConfigurationStatus> domainConfigurationStatus;

    public Input<DomainConfigurationStatus> getDomainConfigurationStatus() {
        return this.domainConfigurationStatus == null ? Input.empty() : this.domainConfigurationStatus;
    }

    @InputImport(name="domainName")
      private final @Nullable Input<String> domainName;

    public Input<String> getDomainName() {
        return this.domainName == null ? Input.empty() : this.domainName;
    }

    @InputImport(name="serverCertificateArns")
      private final @Nullable Input<List<String>> serverCertificateArns;

    public Input<List<String>> getServerCertificateArns() {
        return this.serverCertificateArns == null ? Input.empty() : this.serverCertificateArns;
    }

    @InputImport(name="serviceType")
      private final @Nullable Input<DomainConfigurationServiceType> serviceType;

    public Input<DomainConfigurationServiceType> getServiceType() {
        return this.serviceType == null ? Input.empty() : this.serviceType;
    }

    @InputImport(name="tags")
      private final @Nullable Input<List<DomainConfigurationTagArgs>> tags;

    public Input<List<DomainConfigurationTagArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="validationCertificateArn")
      private final @Nullable Input<String> validationCertificateArn;

    public Input<String> getValidationCertificateArn() {
        return this.validationCertificateArn == null ? Input.empty() : this.validationCertificateArn;
    }

    public DomainConfigurationArgs(
        @Nullable Input<DomainConfigurationAuthorizerConfigArgs> authorizerConfig,
        @Nullable Input<String> domainConfigurationName,
        @Nullable Input<DomainConfigurationStatus> domainConfigurationStatus,
        @Nullable Input<String> domainName,
        @Nullable Input<List<String>> serverCertificateArns,
        @Nullable Input<DomainConfigurationServiceType> serviceType,
        @Nullable Input<List<DomainConfigurationTagArgs>> tags,
        @Nullable Input<String> validationCertificateArn) {
        this.authorizerConfig = authorizerConfig;
        this.domainConfigurationName = domainConfigurationName;
        this.domainConfigurationStatus = domainConfigurationStatus;
        this.domainName = domainName;
        this.serverCertificateArns = serverCertificateArns;
        this.serviceType = serviceType;
        this.tags = tags;
        this.validationCertificateArn = validationCertificateArn;
    }

    private DomainConfigurationArgs() {
        this.authorizerConfig = Input.empty();
        this.domainConfigurationName = Input.empty();
        this.domainConfigurationStatus = Input.empty();
        this.domainName = Input.empty();
        this.serverCertificateArns = Input.empty();
        this.serviceType = Input.empty();
        this.tags = Input.empty();
        this.validationCertificateArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DomainConfigurationAuthorizerConfigArgs> authorizerConfig;
        private @Nullable Input<String> domainConfigurationName;
        private @Nullable Input<DomainConfigurationStatus> domainConfigurationStatus;
        private @Nullable Input<String> domainName;
        private @Nullable Input<List<String>> serverCertificateArns;
        private @Nullable Input<DomainConfigurationServiceType> serviceType;
        private @Nullable Input<List<DomainConfigurationTagArgs>> tags;
        private @Nullable Input<String> validationCertificateArn;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizerConfig = defaults.authorizerConfig;
    	      this.domainConfigurationName = defaults.domainConfigurationName;
    	      this.domainConfigurationStatus = defaults.domainConfigurationStatus;
    	      this.domainName = defaults.domainName;
    	      this.serverCertificateArns = defaults.serverCertificateArns;
    	      this.serviceType = defaults.serviceType;
    	      this.tags = defaults.tags;
    	      this.validationCertificateArn = defaults.validationCertificateArn;
        }

        public Builder setAuthorizerConfig(@Nullable Input<DomainConfigurationAuthorizerConfigArgs> authorizerConfig) {
            this.authorizerConfig = authorizerConfig;
            return this;
        }

        public Builder setAuthorizerConfig(@Nullable DomainConfigurationAuthorizerConfigArgs authorizerConfig) {
            this.authorizerConfig = Input.ofNullable(authorizerConfig);
            return this;
        }

        public Builder setDomainConfigurationName(@Nullable Input<String> domainConfigurationName) {
            this.domainConfigurationName = domainConfigurationName;
            return this;
        }

        public Builder setDomainConfigurationName(@Nullable String domainConfigurationName) {
            this.domainConfigurationName = Input.ofNullable(domainConfigurationName);
            return this;
        }

        public Builder setDomainConfigurationStatus(@Nullable Input<DomainConfigurationStatus> domainConfigurationStatus) {
            this.domainConfigurationStatus = domainConfigurationStatus;
            return this;
        }

        public Builder setDomainConfigurationStatus(@Nullable DomainConfigurationStatus domainConfigurationStatus) {
            this.domainConfigurationStatus = Input.ofNullable(domainConfigurationStatus);
            return this;
        }

        public Builder setDomainName(@Nullable Input<String> domainName) {
            this.domainName = domainName;
            return this;
        }

        public Builder setDomainName(@Nullable String domainName) {
            this.domainName = Input.ofNullable(domainName);
            return this;
        }

        public Builder setServerCertificateArns(@Nullable Input<List<String>> serverCertificateArns) {
            this.serverCertificateArns = serverCertificateArns;
            return this;
        }

        public Builder setServerCertificateArns(@Nullable List<String> serverCertificateArns) {
            this.serverCertificateArns = Input.ofNullable(serverCertificateArns);
            return this;
        }

        public Builder setServiceType(@Nullable Input<DomainConfigurationServiceType> serviceType) {
            this.serviceType = serviceType;
            return this;
        }

        public Builder setServiceType(@Nullable DomainConfigurationServiceType serviceType) {
            this.serviceType = Input.ofNullable(serviceType);
            return this;
        }

        public Builder setTags(@Nullable Input<List<DomainConfigurationTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<DomainConfigurationTagArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setValidationCertificateArn(@Nullable Input<String> validationCertificateArn) {
            this.validationCertificateArn = validationCertificateArn;
            return this;
        }

        public Builder setValidationCertificateArn(@Nullable String validationCertificateArn) {
            this.validationCertificateArn = Input.ofNullable(validationCertificateArn);
            return this;
        }
        public DomainConfigurationArgs build() {
            return new DomainConfigurationArgs(authorizerConfig, domainConfigurationName, domainConfigurationStatus, domainName, serverCertificateArns, serviceType, tags, validationCertificateArn);
        }
    }
}
