// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iot;

import io.pulumi.awsnative.iot.enums.DomainConfigurationServiceType;
import io.pulumi.awsnative.iot.enums.DomainConfigurationStatus;
import io.pulumi.awsnative.iot.inputs.DomainConfigurationAuthorizerConfigArgs;
import io.pulumi.awsnative.iot.inputs.DomainConfigurationTagArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainConfigurationArgs Empty = new DomainConfigurationArgs();

    @InputImport(name="authorizerConfig")
      private final @Nullable Output<DomainConfigurationAuthorizerConfigArgs> authorizerConfig;

    public Output<DomainConfigurationAuthorizerConfigArgs> getAuthorizerConfig() {
        return this.authorizerConfig == null ? Output.empty() : this.authorizerConfig;
    }

    @InputImport(name="domainConfigurationName")
      private final @Nullable Output<String> domainConfigurationName;

    public Output<String> getDomainConfigurationName() {
        return this.domainConfigurationName == null ? Output.empty() : this.domainConfigurationName;
    }

    @InputImport(name="domainConfigurationStatus")
      private final @Nullable Output<DomainConfigurationStatus> domainConfigurationStatus;

    public Output<DomainConfigurationStatus> getDomainConfigurationStatus() {
        return this.domainConfigurationStatus == null ? Output.empty() : this.domainConfigurationStatus;
    }

    @InputImport(name="domainName")
      private final @Nullable Output<String> domainName;

    public Output<String> getDomainName() {
        return this.domainName == null ? Output.empty() : this.domainName;
    }

    @InputImport(name="serverCertificateArns")
      private final @Nullable Output<List<String>> serverCertificateArns;

    public Output<List<String>> getServerCertificateArns() {
        return this.serverCertificateArns == null ? Output.empty() : this.serverCertificateArns;
    }

    @InputImport(name="serviceType")
      private final @Nullable Output<DomainConfigurationServiceType> serviceType;

    public Output<DomainConfigurationServiceType> getServiceType() {
        return this.serviceType == null ? Output.empty() : this.serviceType;
    }

    @InputImport(name="tags")
      private final @Nullable Output<List<DomainConfigurationTagArgs>> tags;

    public Output<List<DomainConfigurationTagArgs>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    @InputImport(name="validationCertificateArn")
      private final @Nullable Output<String> validationCertificateArn;

    public Output<String> getValidationCertificateArn() {
        return this.validationCertificateArn == null ? Output.empty() : this.validationCertificateArn;
    }

    public DomainConfigurationArgs(
        @Nullable Output<DomainConfigurationAuthorizerConfigArgs> authorizerConfig,
        @Nullable Output<String> domainConfigurationName,
        @Nullable Output<DomainConfigurationStatus> domainConfigurationStatus,
        @Nullable Output<String> domainName,
        @Nullable Output<List<String>> serverCertificateArns,
        @Nullable Output<DomainConfigurationServiceType> serviceType,
        @Nullable Output<List<DomainConfigurationTagArgs>> tags,
        @Nullable Output<String> validationCertificateArn) {
        this.authorizerConfig = authorizerConfig;
        this.domainConfigurationName = domainConfigurationName;
        this.domainConfigurationStatus = domainConfigurationStatus;
        this.domainName = domainName;
        this.serverCertificateArns = serverCertificateArns;
        this.serviceType = serviceType;
        this.tags = tags;
        this.validationCertificateArn = validationCertificateArn;
    }

    private DomainConfigurationArgs() {
        this.authorizerConfig = Output.empty();
        this.domainConfigurationName = Output.empty();
        this.domainConfigurationStatus = Output.empty();
        this.domainName = Output.empty();
        this.serverCertificateArns = Output.empty();
        this.serviceType = Output.empty();
        this.tags = Output.empty();
        this.validationCertificateArn = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DomainConfigurationAuthorizerConfigArgs> authorizerConfig;
        private @Nullable Output<String> domainConfigurationName;
        private @Nullable Output<DomainConfigurationStatus> domainConfigurationStatus;
        private @Nullable Output<String> domainName;
        private @Nullable Output<List<String>> serverCertificateArns;
        private @Nullable Output<DomainConfigurationServiceType> serviceType;
        private @Nullable Output<List<DomainConfigurationTagArgs>> tags;
        private @Nullable Output<String> validationCertificateArn;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizerConfig = defaults.authorizerConfig;
    	      this.domainConfigurationName = defaults.domainConfigurationName;
    	      this.domainConfigurationStatus = defaults.domainConfigurationStatus;
    	      this.domainName = defaults.domainName;
    	      this.serverCertificateArns = defaults.serverCertificateArns;
    	      this.serviceType = defaults.serviceType;
    	      this.tags = defaults.tags;
    	      this.validationCertificateArn = defaults.validationCertificateArn;
        }

        public Builder authorizerConfig(@Nullable Output<DomainConfigurationAuthorizerConfigArgs> authorizerConfig) {
            this.authorizerConfig = authorizerConfig;
            return this;
        }

        public Builder authorizerConfig(@Nullable DomainConfigurationAuthorizerConfigArgs authorizerConfig) {
            this.authorizerConfig = Output.ofNullable(authorizerConfig);
            return this;
        }

        public Builder domainConfigurationName(@Nullable Output<String> domainConfigurationName) {
            this.domainConfigurationName = domainConfigurationName;
            return this;
        }

        public Builder domainConfigurationName(@Nullable String domainConfigurationName) {
            this.domainConfigurationName = Output.ofNullable(domainConfigurationName);
            return this;
        }

        public Builder domainConfigurationStatus(@Nullable Output<DomainConfigurationStatus> domainConfigurationStatus) {
            this.domainConfigurationStatus = domainConfigurationStatus;
            return this;
        }

        public Builder domainConfigurationStatus(@Nullable DomainConfigurationStatus domainConfigurationStatus) {
            this.domainConfigurationStatus = Output.ofNullable(domainConfigurationStatus);
            return this;
        }

        public Builder domainName(@Nullable Output<String> domainName) {
            this.domainName = domainName;
            return this;
        }

        public Builder domainName(@Nullable String domainName) {
            this.domainName = Output.ofNullable(domainName);
            return this;
        }

        public Builder serverCertificateArns(@Nullable Output<List<String>> serverCertificateArns) {
            this.serverCertificateArns = serverCertificateArns;
            return this;
        }

        public Builder serverCertificateArns(@Nullable List<String> serverCertificateArns) {
            this.serverCertificateArns = Output.ofNullable(serverCertificateArns);
            return this;
        }

        public Builder serviceType(@Nullable Output<DomainConfigurationServiceType> serviceType) {
            this.serviceType = serviceType;
            return this;
        }

        public Builder serviceType(@Nullable DomainConfigurationServiceType serviceType) {
            this.serviceType = Output.ofNullable(serviceType);
            return this;
        }

        public Builder tags(@Nullable Output<List<DomainConfigurationTagArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<DomainConfigurationTagArgs> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder validationCertificateArn(@Nullable Output<String> validationCertificateArn) {
            this.validationCertificateArn = validationCertificateArn;
            return this;
        }

        public Builder validationCertificateArn(@Nullable String validationCertificateArn) {
            this.validationCertificateArn = Output.ofNullable(validationCertificateArn);
            return this;
        }
        public DomainConfigurationArgs build() {
            return new DomainConfigurationArgs(authorizerConfig, domainConfigurationName, domainConfigurationStatus, domainName, serverCertificateArns, serviceType, tags, validationCertificateArn);
        }
    }
}
