// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.resiliencehub.inputs;

import io.pulumi.awsnative.resiliencehub.inputs.AppPhysicalResourceIdArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Resource mapping is used to map logical resources from template to physical resource
 * 
 */
public final class AppResourceMappingArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppResourceMappingArgs Empty = new AppResourceMappingArgs();

    @Import(name="logicalStackName")
      private final @Nullable Output<String> logicalStackName;

    public Output<String> logicalStackName() {
        return this.logicalStackName == null ? Codegen.empty() : this.logicalStackName;
    }

    @Import(name="mappingType", required=true)
      private final Output<String> mappingType;

    public Output<String> mappingType() {
        return this.mappingType;
    }

    @Import(name="physicalResourceId", required=true)
      private final Output<AppPhysicalResourceIdArgs> physicalResourceId;

    public Output<AppPhysicalResourceIdArgs> physicalResourceId() {
        return this.physicalResourceId;
    }

    @Import(name="resourceName")
      private final @Nullable Output<String> resourceName;

    public Output<String> resourceName() {
        return this.resourceName == null ? Codegen.empty() : this.resourceName;
    }

    public AppResourceMappingArgs(
        @Nullable Output<String> logicalStackName,
        Output<String> mappingType,
        Output<AppPhysicalResourceIdArgs> physicalResourceId,
        @Nullable Output<String> resourceName) {
        this.logicalStackName = logicalStackName;
        this.mappingType = Objects.requireNonNull(mappingType, "expected parameter 'mappingType' to be non-null");
        this.physicalResourceId = Objects.requireNonNull(physicalResourceId, "expected parameter 'physicalResourceId' to be non-null");
        this.resourceName = resourceName;
    }

    private AppResourceMappingArgs() {
        this.logicalStackName = Codegen.empty();
        this.mappingType = Codegen.empty();
        this.physicalResourceId = Codegen.empty();
        this.resourceName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppResourceMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> logicalStackName;
        private Output<String> mappingType;
        private Output<AppPhysicalResourceIdArgs> physicalResourceId;
        private @Nullable Output<String> resourceName;

        public Builder() {
    	      // Empty
        }

        public Builder(AppResourceMappingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logicalStackName = defaults.logicalStackName;
    	      this.mappingType = defaults.mappingType;
    	      this.physicalResourceId = defaults.physicalResourceId;
    	      this.resourceName = defaults.resourceName;
        }

        public Builder logicalStackName(@Nullable Output<String> logicalStackName) {
            this.logicalStackName = logicalStackName;
            return this;
        }
        public Builder logicalStackName(@Nullable String logicalStackName) {
            this.logicalStackName = Codegen.ofNullable(logicalStackName);
            return this;
        }
        public Builder mappingType(Output<String> mappingType) {
            this.mappingType = Objects.requireNonNull(mappingType);
            return this;
        }
        public Builder mappingType(String mappingType) {
            this.mappingType = Output.of(Objects.requireNonNull(mappingType));
            return this;
        }
        public Builder physicalResourceId(Output<AppPhysicalResourceIdArgs> physicalResourceId) {
            this.physicalResourceId = Objects.requireNonNull(physicalResourceId);
            return this;
        }
        public Builder physicalResourceId(AppPhysicalResourceIdArgs physicalResourceId) {
            this.physicalResourceId = Output.of(Objects.requireNonNull(physicalResourceId));
            return this;
        }
        public Builder resourceName(@Nullable Output<String> resourceName) {
            this.resourceName = resourceName;
            return this;
        }
        public Builder resourceName(@Nullable String resourceName) {
            this.resourceName = Codegen.ofNullable(resourceName);
            return this;
        }        public AppResourceMappingArgs build() {
            return new AppResourceMappingArgs(logicalStackName, mappingType, physicalResourceId, resourceName);
        }
    }
}
