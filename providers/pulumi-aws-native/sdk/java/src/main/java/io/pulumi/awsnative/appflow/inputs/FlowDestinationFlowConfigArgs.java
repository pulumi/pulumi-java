// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.appflow.inputs;

import io.pulumi.awsnative.appflow.enums.FlowConnectorType;
import io.pulumi.awsnative.appflow.inputs.FlowDestinationConnectorPropertiesArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlowDestinationFlowConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowDestinationFlowConfigArgs Empty = new FlowDestinationFlowConfigArgs();

    @InputImport(name="connectorProfileName")
    private final @Nullable Input<String> connectorProfileName;

    public Input<String> getConnectorProfileName() {
        return this.connectorProfileName == null ? Input.empty() : this.connectorProfileName;
    }

    @InputImport(name="connectorType", required=true)
    private final Input<FlowConnectorType> connectorType;

    public Input<FlowConnectorType> getConnectorType() {
        return this.connectorType;
    }

    @InputImport(name="destinationConnectorProperties", required=true)
    private final Input<FlowDestinationConnectorPropertiesArgs> destinationConnectorProperties;

    public Input<FlowDestinationConnectorPropertiesArgs> getDestinationConnectorProperties() {
        return this.destinationConnectorProperties;
    }

    public FlowDestinationFlowConfigArgs(
        @Nullable Input<String> connectorProfileName,
        Input<FlowConnectorType> connectorType,
        Input<FlowDestinationConnectorPropertiesArgs> destinationConnectorProperties) {
        this.connectorProfileName = connectorProfileName;
        this.connectorType = Objects.requireNonNull(connectorType, "expected parameter 'connectorType' to be non-null");
        this.destinationConnectorProperties = Objects.requireNonNull(destinationConnectorProperties, "expected parameter 'destinationConnectorProperties' to be non-null");
    }

    private FlowDestinationFlowConfigArgs() {
        this.connectorProfileName = Input.empty();
        this.connectorType = Input.empty();
        this.destinationConnectorProperties = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDestinationFlowConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> connectorProfileName;
        private Input<FlowConnectorType> connectorType;
        private Input<FlowDestinationConnectorPropertiesArgs> destinationConnectorProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowDestinationFlowConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectorProfileName = defaults.connectorProfileName;
    	      this.connectorType = defaults.connectorType;
    	      this.destinationConnectorProperties = defaults.destinationConnectorProperties;
        }

        public Builder setConnectorProfileName(@Nullable Input<String> connectorProfileName) {
            this.connectorProfileName = connectorProfileName;
            return this;
        }

        public Builder setConnectorProfileName(@Nullable String connectorProfileName) {
            this.connectorProfileName = Input.ofNullable(connectorProfileName);
            return this;
        }

        public Builder setConnectorType(Input<FlowConnectorType> connectorType) {
            this.connectorType = Objects.requireNonNull(connectorType);
            return this;
        }

        public Builder setConnectorType(FlowConnectorType connectorType) {
            this.connectorType = Input.of(Objects.requireNonNull(connectorType));
            return this;
        }

        public Builder setDestinationConnectorProperties(Input<FlowDestinationConnectorPropertiesArgs> destinationConnectorProperties) {
            this.destinationConnectorProperties = Objects.requireNonNull(destinationConnectorProperties);
            return this;
        }

        public Builder setDestinationConnectorProperties(FlowDestinationConnectorPropertiesArgs destinationConnectorProperties) {
            this.destinationConnectorProperties = Input.of(Objects.requireNonNull(destinationConnectorProperties));
            return this;
        }

        public FlowDestinationFlowConfigArgs build() {
            return new FlowDestinationFlowConfigArgs(connectorProfileName, connectorType, destinationConnectorProperties);
        }
    }
}
