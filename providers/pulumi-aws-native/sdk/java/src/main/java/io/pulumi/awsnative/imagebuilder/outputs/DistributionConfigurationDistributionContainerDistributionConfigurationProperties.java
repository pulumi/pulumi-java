// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.imagebuilder.outputs;

import io.pulumi.awsnative.imagebuilder.outputs.DistributionConfigurationTargetContainerRepository;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class DistributionConfigurationDistributionContainerDistributionConfigurationProperties {
    /**
     * Tags that are attached to the container distribution configuration.
     * 
     */
    private final @Nullable List<String> containerTags;
    /**
     * The description of the container distribution configuration.
     * 
     */
    private final @Nullable String description;
    /**
     * The destination repository for the container distribution configuration.
     * 
     */
    private final @Nullable DistributionConfigurationTargetContainerRepository targetRepository;

    @OutputCustomType.Constructor
    private DistributionConfigurationDistributionContainerDistributionConfigurationProperties(
        @OutputCustomType.Parameter("containerTags") @Nullable List<String> containerTags,
        @OutputCustomType.Parameter("description") @Nullable String description,
        @OutputCustomType.Parameter("targetRepository") @Nullable DistributionConfigurationTargetContainerRepository targetRepository) {
        this.containerTags = containerTags;
        this.description = description;
        this.targetRepository = targetRepository;
    }

    /**
     * Tags that are attached to the container distribution configuration.
     * 
    */
    public List<String> getContainerTags() {
        return this.containerTags == null ? List.of() : this.containerTags;
    }
    /**
     * The description of the container distribution configuration.
     * 
    */
    public Optional<String> getDescription() {
        return Optional.ofNullable(this.description);
    }
    /**
     * The destination repository for the container distribution configuration.
     * 
    */
    public Optional<DistributionConfigurationTargetContainerRepository> getTargetRepository() {
        return Optional.ofNullable(this.targetRepository);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionConfigurationDistributionContainerDistributionConfigurationProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> containerTags;
        private @Nullable String description;
        private @Nullable DistributionConfigurationTargetContainerRepository targetRepository;

        public Builder() {
    	      // Empty
        }

        public Builder(DistributionConfigurationDistributionContainerDistributionConfigurationProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerTags = defaults.containerTags;
    	      this.description = defaults.description;
    	      this.targetRepository = defaults.targetRepository;
        }

        public Builder containerTags(@Nullable List<String> containerTags) {
            this.containerTags = containerTags;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }

        public Builder targetRepository(@Nullable DistributionConfigurationTargetContainerRepository targetRepository) {
            this.targetRepository = targetRepository;
            return this;
        }
        public DistributionConfigurationDistributionContainerDistributionConfigurationProperties build() {
            return new DistributionConfigurationDistributionContainerDistributionConfigurationProperties(containerTags, description, targetRepository);
        }
    }
}
