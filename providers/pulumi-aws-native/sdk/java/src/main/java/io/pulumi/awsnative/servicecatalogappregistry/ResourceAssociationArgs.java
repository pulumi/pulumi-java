// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.servicecatalogappregistry;

import io.pulumi.awsnative.servicecatalogappregistry.enums.ResourceAssociationResourceType;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class ResourceAssociationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourceAssociationArgs Empty = new ResourceAssociationArgs();

    /**
     * The name or the Id of the Application.
     * 
     */
    @InputImport(name="application", required=true)
      private final Output<String> application;

    public Output<String> getApplication() {
        return this.application;
    }

    /**
     * The name or the Id of the Resource.
     * 
     */
    @InputImport(name="resource", required=true)
      private final Output<String> resource;

    public Output<String> getResource() {
        return this.resource;
    }

    /**
     * The type of the CFN Resource for now it's enum CFN_STACK.
     * 
     */
    @InputImport(name="resourceType", required=true)
      private final Output<ResourceAssociationResourceType> resourceType;

    public Output<ResourceAssociationResourceType> getPropResourceType() {
        return this.resourceType;
    }

    public ResourceAssociationArgs(
        Output<String> application,
        Output<String> resource,
        Output<ResourceAssociationResourceType> resourceType) {
        this.application = Objects.requireNonNull(application, "expected parameter 'application' to be non-null");
        this.resource = Objects.requireNonNull(resource, "expected parameter 'resource' to be non-null");
        this.resourceType = Objects.requireNonNull(resourceType, "expected parameter 'resourceType' to be non-null");
    }

    private ResourceAssociationArgs() {
        this.application = Output.empty();
        this.resource = Output.empty();
        this.resourceType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> application;
        private Output<String> resource;
        private Output<ResourceAssociationResourceType> resourceType;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.application = defaults.application;
    	      this.resource = defaults.resource;
    	      this.resourceType = defaults.resourceType;
        }

        public Builder application(Output<String> application) {
            this.application = Objects.requireNonNull(application);
            return this;
        }

        public Builder application(String application) {
            this.application = Output.of(Objects.requireNonNull(application));
            return this;
        }

        public Builder resource(Output<String> resource) {
            this.resource = Objects.requireNonNull(resource);
            return this;
        }

        public Builder resource(String resource) {
            this.resource = Output.of(Objects.requireNonNull(resource));
            return this;
        }

        public Builder resourceType(Output<ResourceAssociationResourceType> resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }

        public Builder resourceType(ResourceAssociationResourceType resourceType) {
            this.resourceType = Output.of(Objects.requireNonNull(resourceType));
            return this;
        }
        public ResourceAssociationArgs build() {
            return new ResourceAssociationArgs(application, resource, resourceType);
        }
    }
}
