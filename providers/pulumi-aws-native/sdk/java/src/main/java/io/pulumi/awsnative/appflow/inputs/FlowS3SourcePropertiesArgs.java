// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.appflow.inputs;

import io.pulumi.awsnative.appflow.inputs.FlowS3InputFormatConfigArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlowS3SourcePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final FlowS3SourcePropertiesArgs Empty = new FlowS3SourcePropertiesArgs();

    @Import(name="bucketName", required=true)
      private final Output<String> bucketName;

    public Output<String> getBucketName() {
        return this.bucketName;
    }

    @Import(name="bucketPrefix", required=true)
      private final Output<String> bucketPrefix;

    public Output<String> getBucketPrefix() {
        return this.bucketPrefix;
    }

    @Import(name="s3InputFormatConfig")
      private final @Nullable Output<FlowS3InputFormatConfigArgs> s3InputFormatConfig;

    public Output<FlowS3InputFormatConfigArgs> getS3InputFormatConfig() {
        return this.s3InputFormatConfig == null ? Codegen.empty() : this.s3InputFormatConfig;
    }

    public FlowS3SourcePropertiesArgs(
        Output<String> bucketName,
        Output<String> bucketPrefix,
        @Nullable Output<FlowS3InputFormatConfigArgs> s3InputFormatConfig) {
        this.bucketName = Objects.requireNonNull(bucketName, "expected parameter 'bucketName' to be non-null");
        this.bucketPrefix = Objects.requireNonNull(bucketPrefix, "expected parameter 'bucketPrefix' to be non-null");
        this.s3InputFormatConfig = s3InputFormatConfig;
    }

    private FlowS3SourcePropertiesArgs() {
        this.bucketName = Codegen.empty();
        this.bucketPrefix = Codegen.empty();
        this.s3InputFormatConfig = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowS3SourcePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> bucketName;
        private Output<String> bucketPrefix;
        private @Nullable Output<FlowS3InputFormatConfigArgs> s3InputFormatConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowS3SourcePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.bucketPrefix = defaults.bucketPrefix;
    	      this.s3InputFormatConfig = defaults.s3InputFormatConfig;
        }

        public Builder bucketName(Output<String> bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        public Builder bucketName(String bucketName) {
            this.bucketName = Output.of(Objects.requireNonNull(bucketName));
            return this;
        }
        public Builder bucketPrefix(Output<String> bucketPrefix) {
            this.bucketPrefix = Objects.requireNonNull(bucketPrefix);
            return this;
        }
        public Builder bucketPrefix(String bucketPrefix) {
            this.bucketPrefix = Output.of(Objects.requireNonNull(bucketPrefix));
            return this;
        }
        public Builder s3InputFormatConfig(@Nullable Output<FlowS3InputFormatConfigArgs> s3InputFormatConfig) {
            this.s3InputFormatConfig = s3InputFormatConfig;
            return this;
        }
        public Builder s3InputFormatConfig(@Nullable FlowS3InputFormatConfigArgs s3InputFormatConfig) {
            this.s3InputFormatConfig = Codegen.ofNullable(s3InputFormatConfig);
            return this;
        }        public FlowS3SourcePropertiesArgs build() {
            return new FlowS3SourcePropertiesArgs(bucketName, bucketPrefix, s3InputFormatConfig);
        }
    }
}
