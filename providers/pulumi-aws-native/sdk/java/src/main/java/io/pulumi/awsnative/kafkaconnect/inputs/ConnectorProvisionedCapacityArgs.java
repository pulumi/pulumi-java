// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.kafkaconnect.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Details about a fixed capacity allocated to a connector.
 * 
 */
public final class ConnectorProvisionedCapacityArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConnectorProvisionedCapacityArgs Empty = new ConnectorProvisionedCapacityArgs();

    /**
     * Specifies how many MSK Connect Units (MCU) are allocated to the connector.
     * 
     */
    @Import(name="mcuCount")
      private final @Nullable Output<Integer> mcuCount;

    public Output<Integer> mcuCount() {
        return this.mcuCount == null ? Codegen.empty() : this.mcuCount;
    }

    /**
     * Number of workers for a connector.
     * 
     */
    @Import(name="workerCount", required=true)
      private final Output<Integer> workerCount;

    public Output<Integer> workerCount() {
        return this.workerCount;
    }

    public ConnectorProvisionedCapacityArgs(
        @Nullable Output<Integer> mcuCount,
        Output<Integer> workerCount) {
        this.mcuCount = mcuCount;
        this.workerCount = Objects.requireNonNull(workerCount, "expected parameter 'workerCount' to be non-null");
    }

    private ConnectorProvisionedCapacityArgs() {
        this.mcuCount = Codegen.empty();
        this.workerCount = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorProvisionedCapacityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> mcuCount;
        private Output<Integer> workerCount;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectorProvisionedCapacityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mcuCount = defaults.mcuCount;
    	      this.workerCount = defaults.workerCount;
        }

        public Builder mcuCount(@Nullable Output<Integer> mcuCount) {
            this.mcuCount = mcuCount;
            return this;
        }
        public Builder mcuCount(@Nullable Integer mcuCount) {
            this.mcuCount = Codegen.ofNullable(mcuCount);
            return this;
        }
        public Builder workerCount(Output<Integer> workerCount) {
            this.workerCount = Objects.requireNonNull(workerCount);
            return this;
        }
        public Builder workerCount(Integer workerCount) {
            this.workerCount = Output.of(Objects.requireNonNull(workerCount));
            return this;
        }        public ConnectorProvisionedCapacityArgs build() {
            return new ConnectorProvisionedCapacityArgs(mcuCount, workerCount);
        }
    }
}
