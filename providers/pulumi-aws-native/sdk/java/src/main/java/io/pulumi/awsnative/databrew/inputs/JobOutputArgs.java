// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.databrew.inputs;

import io.pulumi.awsnative.databrew.enums.JobOutputCompressionFormat;
import io.pulumi.awsnative.databrew.enums.JobOutputFormat;
import io.pulumi.awsnative.databrew.inputs.JobOutputFormatOptionsArgs;
import io.pulumi.awsnative.databrew.inputs.JobS3LocationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobOutputArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobOutputArgs Empty = new JobOutputArgs();

    @Import(name="compressionFormat")
      private final @Nullable Output<JobOutputCompressionFormat> compressionFormat;

    public Output<JobOutputCompressionFormat> getCompressionFormat() {
        return this.compressionFormat == null ? Output.empty() : this.compressionFormat;
    }

    @Import(name="format")
      private final @Nullable Output<JobOutputFormat> format;

    public Output<JobOutputFormat> getFormat() {
        return this.format == null ? Output.empty() : this.format;
    }

    @Import(name="formatOptions")
      private final @Nullable Output<JobOutputFormatOptionsArgs> formatOptions;

    public Output<JobOutputFormatOptionsArgs> getFormatOptions() {
        return this.formatOptions == null ? Output.empty() : this.formatOptions;
    }

    @Import(name="location", required=true)
      private final Output<JobS3LocationArgs> location;

    public Output<JobS3LocationArgs> getLocation() {
        return this.location;
    }

    @Import(name="overwrite")
      private final @Nullable Output<Boolean> overwrite;

    public Output<Boolean> getOverwrite() {
        return this.overwrite == null ? Output.empty() : this.overwrite;
    }

    @Import(name="partitionColumns")
      private final @Nullable Output<List<String>> partitionColumns;

    public Output<List<String>> getPartitionColumns() {
        return this.partitionColumns == null ? Output.empty() : this.partitionColumns;
    }

    public JobOutputArgs(
        @Nullable Output<JobOutputCompressionFormat> compressionFormat,
        @Nullable Output<JobOutputFormat> format,
        @Nullable Output<JobOutputFormatOptionsArgs> formatOptions,
        Output<JobS3LocationArgs> location,
        @Nullable Output<Boolean> overwrite,
        @Nullable Output<List<String>> partitionColumns) {
        this.compressionFormat = compressionFormat;
        this.format = format;
        this.formatOptions = formatOptions;
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
        this.overwrite = overwrite;
        this.partitionColumns = partitionColumns;
    }

    private JobOutputArgs() {
        this.compressionFormat = Output.empty();
        this.format = Output.empty();
        this.formatOptions = Output.empty();
        this.location = Output.empty();
        this.overwrite = Output.empty();
        this.partitionColumns = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<JobOutputCompressionFormat> compressionFormat;
        private @Nullable Output<JobOutputFormat> format;
        private @Nullable Output<JobOutputFormatOptionsArgs> formatOptions;
        private Output<JobS3LocationArgs> location;
        private @Nullable Output<Boolean> overwrite;
        private @Nullable Output<List<String>> partitionColumns;

        public Builder() {
    	      // Empty
        }

        public Builder(JobOutputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compressionFormat = defaults.compressionFormat;
    	      this.format = defaults.format;
    	      this.formatOptions = defaults.formatOptions;
    	      this.location = defaults.location;
    	      this.overwrite = defaults.overwrite;
    	      this.partitionColumns = defaults.partitionColumns;
        }

        public Builder compressionFormat(@Nullable Output<JobOutputCompressionFormat> compressionFormat) {
            this.compressionFormat = compressionFormat;
            return this;
        }

        public Builder compressionFormat(@Nullable JobOutputCompressionFormat compressionFormat) {
            this.compressionFormat = Output.ofNullable(compressionFormat);
            return this;
        }

        public Builder format(@Nullable Output<JobOutputFormat> format) {
            this.format = format;
            return this;
        }

        public Builder format(@Nullable JobOutputFormat format) {
            this.format = Output.ofNullable(format);
            return this;
        }

        public Builder formatOptions(@Nullable Output<JobOutputFormatOptionsArgs> formatOptions) {
            this.formatOptions = formatOptions;
            return this;
        }

        public Builder formatOptions(@Nullable JobOutputFormatOptionsArgs formatOptions) {
            this.formatOptions = Output.ofNullable(formatOptions);
            return this;
        }

        public Builder location(Output<JobS3LocationArgs> location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder location(JobS3LocationArgs location) {
            this.location = Output.of(Objects.requireNonNull(location));
            return this;
        }

        public Builder overwrite(@Nullable Output<Boolean> overwrite) {
            this.overwrite = overwrite;
            return this;
        }

        public Builder overwrite(@Nullable Boolean overwrite) {
            this.overwrite = Output.ofNullable(overwrite);
            return this;
        }

        public Builder partitionColumns(@Nullable Output<List<String>> partitionColumns) {
            this.partitionColumns = partitionColumns;
            return this;
        }

        public Builder partitionColumns(@Nullable List<String> partitionColumns) {
            this.partitionColumns = Output.ofNullable(partitionColumns);
            return this;
        }
        public JobOutputArgs build() {
            return new JobOutputArgs(compressionFormat, format, formatOptions, location, overwrite, partitionColumns);
        }
    }
}
