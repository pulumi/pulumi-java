// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.route53recoverycontrol.outputs;

import io.pulumi.awsnative.route53recoverycontrol.enums.ControlPanelStatus;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetControlPanelResult {
    private final @Nullable String controlPanelArn;
    private final @Nullable Boolean defaultControlPanel;
    private final @Nullable String name;
    private final @Nullable Integer routingControlCount;
    private final @Nullable ControlPanelStatus status;

    @OutputCustomType.Constructor({"controlPanelArn","defaultControlPanel","name","routingControlCount","status"})
    private GetControlPanelResult(
        @Nullable String controlPanelArn,
        @Nullable Boolean defaultControlPanel,
        @Nullable String name,
        @Nullable Integer routingControlCount,
        @Nullable ControlPanelStatus status) {
        this.controlPanelArn = controlPanelArn;
        this.defaultControlPanel = defaultControlPanel;
        this.name = name;
        this.routingControlCount = routingControlCount;
        this.status = status;
    }

    public Optional<String> getControlPanelArn() {
        return Optional.ofNullable(this.controlPanelArn);
    }
    public Optional<Boolean> getDefaultControlPanel() {
        return Optional.ofNullable(this.defaultControlPanel);
    }
    public Optional<String> getName() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Integer> getRoutingControlCount() {
        return Optional.ofNullable(this.routingControlCount);
    }
    public Optional<ControlPanelStatus> getStatus() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControlPanelResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String controlPanelArn;
        private @Nullable Boolean defaultControlPanel;
        private @Nullable String name;
        private @Nullable Integer routingControlCount;
        private @Nullable ControlPanelStatus status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetControlPanelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controlPanelArn = defaults.controlPanelArn;
    	      this.defaultControlPanel = defaults.defaultControlPanel;
    	      this.name = defaults.name;
    	      this.routingControlCount = defaults.routingControlCount;
    	      this.status = defaults.status;
        }

        public Builder setControlPanelArn(@Nullable String controlPanelArn) {
            this.controlPanelArn = controlPanelArn;
            return this;
        }

        public Builder setDefaultControlPanel(@Nullable Boolean defaultControlPanel) {
            this.defaultControlPanel = defaultControlPanel;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = name;
            return this;
        }

        public Builder setRoutingControlCount(@Nullable Integer routingControlCount) {
            this.routingControlCount = routingControlCount;
            return this;
        }

        public Builder setStatus(@Nullable ControlPanelStatus status) {
            this.status = status;
            return this;
        }

        public GetControlPanelResult build() {
            return new GetControlPanelResult(controlPanelArn, defaultControlPanel, name, routingControlCount, status);
        }
    }
}
