// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.iotanalytics;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.iotanalytics.DatastoreArgs;
import io.pulumi.awsnative.iotanalytics.outputs.DatastoreFileFormatConfiguration;
import io.pulumi.awsnative.iotanalytics.outputs.DatastorePartitions;
import io.pulumi.awsnative.iotanalytics.outputs.DatastoreRetentionPeriod;
import io.pulumi.awsnative.iotanalytics.outputs.DatastoreStorage;
import io.pulumi.awsnative.iotanalytics.outputs.DatastoreTag;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::IoTAnalytics::Datastore
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var datastore = new AwsNative.IoTAnalytics.Datastore("datastore", new AwsNative.IoTAnalytics.DatastoreArgs
 *         {
 *             DatastoreName = "SimpleDatastore",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/iotanalytics"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := iotanalytics.NewDatastore(ctx, "datastore", &iotanalytics.DatastoreArgs{
 * 			DatastoreName: pulumi.String("SimpleDatastore"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const datastore = new aws_native.iotanalytics.Datastore("datastore", {datastoreName: "SimpleDatastore"});
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * datastore = aws_native.iotanalytics.Datastore("datastore", datastore_name="SimpleDatastore")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var datastore = new AwsNative.IoTAnalytics.Datastore("datastore", new AwsNative.IoTAnalytics.DatastoreArgs
 *         {
 *             DatastoreName = "SimpleDatastore",
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/iotanalytics"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := iotanalytics.NewDatastore(ctx, "datastore", &iotanalytics.DatastoreArgs{
 * 			DatastoreName: pulumi.String("SimpleDatastore"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const datastore = new aws_native.iotanalytics.Datastore("datastore", {datastoreName: "SimpleDatastore"});
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * datastore = aws_native.iotanalytics.Datastore("datastore", datastore_name="SimpleDatastore")
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var datastore = new AwsNative.IoTAnalytics.Datastore("datastore", new AwsNative.IoTAnalytics.DatastoreArgs
 *         {
 *             DatastoreName = "ComplexDatastore",
 *             RetentionPeriod = new AwsNative.IoTAnalytics.Inputs.DatastoreRetentionPeriodArgs
 *             {
 *                 Unlimited = false,
 *                 NumberOfDays = 10,
 *             },
 *             Tags = 
 *             {
 *                 new AwsNative.IoTAnalytics.Inputs.DatastoreTagArgs
 *                 {
 *                     Key = "keyname1",
 *                     Value = "value1",
 *                 },
 *                 new AwsNative.IoTAnalytics.Inputs.DatastoreTagArgs
 *                 {
 *                     Key = "keyname2",
 *                     Value = "value2",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/iotanalytics"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := iotanalytics.NewDatastore(ctx, "datastore", &iotanalytics.DatastoreArgs{
 * 			DatastoreName: pulumi.String("ComplexDatastore"),
 * 			RetentionPeriod: &iotanalytics.DatastoreRetentionPeriodArgs{
 * 				Unlimited:    pulumi.Bool(false),
 * 				NumberOfDays: pulumi.Int(10),
 * 			},
 * 			Tags: []iotanalytics.DatastoreTagArgs{
 * 				&iotanalytics.DatastoreTagArgs{
 * 					Key:   pulumi.String("keyname1"),
 * 					Value: pulumi.String("value1"),
 * 				},
 * 				&iotanalytics.DatastoreTagArgs{
 * 					Key:   pulumi.String("keyname2"),
 * 					Value: pulumi.String("value2"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const datastore = new aws_native.iotanalytics.Datastore("datastore", {
 *     datastoreName: "ComplexDatastore",
 *     retentionPeriod: {
 *         unlimited: false,
 *         numberOfDays: 10,
 *     },
 *     tags: [
 *         {
 *             key: "keyname1",
 *             value: "value1",
 *         },
 *         {
 *             key: "keyname2",
 *             value: "value2",
 *         },
 *     ],
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * datastore = aws_native.iotanalytics.Datastore("datastore",
 *     datastore_name="ComplexDatastore",
 *     retention_period=aws_native.iotanalytics.DatastoreRetentionPeriodArgs(
 *         unlimited=False,
 *         number_of_days=10,
 *     ),
 *     tags=[
 *         aws_native.iotanalytics.DatastoreTagArgs(
 *             key="keyname1",
 *             value="value1",
 *         ),
 *         aws_native.iotanalytics.DatastoreTagArgs(
 *             key="keyname2",
 *             value="value2",
 *         ),
 *     ])
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% example %}}
 * ### Example
 * ```csharp
 * using Pulumi;
 * using AwsNative = Pulumi.AwsNative;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var datastore = new AwsNative.IoTAnalytics.Datastore("datastore", new AwsNative.IoTAnalytics.DatastoreArgs
 *         {
 *             DatastoreName = "ComplexDatastore",
 *             RetentionPeriod = new AwsNative.IoTAnalytics.Inputs.DatastoreRetentionPeriodArgs
 *             {
 *                 Unlimited = false,
 *                 NumberOfDays = 10,
 *             },
 *             Tags = 
 *             {
 *                 new AwsNative.IoTAnalytics.Inputs.DatastoreTagArgs
 *                 {
 *                     Key = "keyname1",
 *                     Value = "value1",
 *                 },
 *                 new AwsNative.IoTAnalytics.Inputs.DatastoreTagArgs
 *                 {
 *                     Key = "keyname2",
 *                     Value = "value2",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * 
 * ```
 * 
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/iotanalytics"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := iotanalytics.NewDatastore(ctx, "datastore", &iotanalytics.DatastoreArgs{
 * 			DatastoreName: pulumi.String("ComplexDatastore"),
 * 			RetentionPeriod: &iotanalytics.DatastoreRetentionPeriodArgs{
 * 				Unlimited:    pulumi.Bool(false),
 * 				NumberOfDays: pulumi.Int(10),
 * 			},
 * 			Tags: []iotanalytics.DatastoreTagArgs{
 * 				&iotanalytics.DatastoreTagArgs{
 * 					Key:   pulumi.String("keyname1"),
 * 					Value: pulumi.String("value1"),
 * 				},
 * 				&iotanalytics.DatastoreTagArgs{
 * 					Key:   pulumi.String("keyname2"),
 * 					Value: pulumi.String("value2"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * 
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 * 
 * const datastore = new aws_native.iotanalytics.Datastore("datastore", {
 *     datastoreName: "ComplexDatastore",
 *     retentionPeriod: {
 *         unlimited: false,
 *         numberOfDays: 10,
 *     },
 *     tags: [
 *         {
 *             key: "keyname1",
 *             value: "value1",
 *         },
 *         {
 *             key: "keyname2",
 *             value: "value2",
 *         },
 *     ],
 * });
 * 
 * ```
 * 
 * ```python
 * import pulumi
 * import pulumi_aws_native as aws_native
 * 
 * datastore = aws_native.iotanalytics.Datastore("datastore",
 *     datastore_name="ComplexDatastore",
 *     retention_period=aws_native.iotanalytics.DatastoreRetentionPeriodArgs(
 *         unlimited=False,
 *         number_of_days=10,
 *     ),
 *     tags=[
 *         aws_native.iotanalytics.DatastoreTagArgs(
 *             key="keyname1",
 *             value="value1",
 *         ),
 *         aws_native.iotanalytics.DatastoreTagArgs(
 *             key="keyname2",
 *             value="value2",
 *         ),
 *     ])
 * 
 * ```
 * 
 * {{% /example %}}
 * {{% /examples %}}
 * 
 */
@ResourceType(type="aws-native:iotanalytics:Datastore")
public class Datastore extends io.pulumi.resources.CustomResource {
    @Export(name="datastoreName", type=String.class, parameters={})
    private Output</* @Nullable */ String> datastoreName;

    public Output</* @Nullable */ String> getDatastoreName() {
        return this.datastoreName;
    }
    @Export(name="datastorePartitions", type=DatastorePartitions.class, parameters={})
    private Output</* @Nullable */ DatastorePartitions> datastorePartitions;

    public Output</* @Nullable */ DatastorePartitions> getDatastorePartitions() {
        return this.datastorePartitions;
    }
    @Export(name="datastoreStorage", type=DatastoreStorage.class, parameters={})
    private Output</* @Nullable */ DatastoreStorage> datastoreStorage;

    public Output</* @Nullable */ DatastoreStorage> getDatastoreStorage() {
        return this.datastoreStorage;
    }
    @Export(name="fileFormatConfiguration", type=DatastoreFileFormatConfiguration.class, parameters={})
    private Output</* @Nullable */ DatastoreFileFormatConfiguration> fileFormatConfiguration;

    public Output</* @Nullable */ DatastoreFileFormatConfiguration> getFileFormatConfiguration() {
        return this.fileFormatConfiguration;
    }
    @Export(name="retentionPeriod", type=DatastoreRetentionPeriod.class, parameters={})
    private Output</* @Nullable */ DatastoreRetentionPeriod> retentionPeriod;

    public Output</* @Nullable */ DatastoreRetentionPeriod> getRetentionPeriod() {
        return this.retentionPeriod;
    }
    @Export(name="tags", type=List.class, parameters={DatastoreTag.class})
    private Output</* @Nullable */ List<DatastoreTag>> tags;

    public Output</* @Nullable */ List<DatastoreTag>> getTags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Datastore(String name) {
        this(name, DatastoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Datastore(String name, @Nullable DatastoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Datastore(String name, @Nullable DatastoreArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iotanalytics:Datastore", name, args == null ? DatastoreArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Datastore(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iotanalytics:Datastore", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Datastore get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Datastore(name, id, options);
    }
}
