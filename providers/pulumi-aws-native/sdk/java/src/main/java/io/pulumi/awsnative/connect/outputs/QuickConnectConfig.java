// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.connect.outputs;

import io.pulumi.awsnative.connect.enums.QuickConnectType;
import io.pulumi.awsnative.connect.outputs.QuickConnectPhoneNumberQuickConnectConfig;
import io.pulumi.awsnative.connect.outputs.QuickConnectQueueQuickConnectConfig;
import io.pulumi.awsnative.connect.outputs.QuickConnectUserQuickConnectConfig;
import io.pulumi.core.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class QuickConnectConfig {
    private final @Nullable QuickConnectPhoneNumberQuickConnectConfig phoneConfig;
    private final @Nullable QuickConnectQueueQuickConnectConfig queueConfig;
    private final QuickConnectType quickConnectType;
    private final @Nullable QuickConnectUserQuickConnectConfig userConfig;

    @OutputCustomType.Constructor
    private QuickConnectConfig(
        @OutputCustomType.Parameter("phoneConfig") @Nullable QuickConnectPhoneNumberQuickConnectConfig phoneConfig,
        @OutputCustomType.Parameter("queueConfig") @Nullable QuickConnectQueueQuickConnectConfig queueConfig,
        @OutputCustomType.Parameter("quickConnectType") QuickConnectType quickConnectType,
        @OutputCustomType.Parameter("userConfig") @Nullable QuickConnectUserQuickConnectConfig userConfig) {
        this.phoneConfig = phoneConfig;
        this.queueConfig = queueConfig;
        this.quickConnectType = quickConnectType;
        this.userConfig = userConfig;
    }

    public Optional<QuickConnectPhoneNumberQuickConnectConfig> getPhoneConfig() {
        return Optional.ofNullable(this.phoneConfig);
    }
    public Optional<QuickConnectQueueQuickConnectConfig> getQueueConfig() {
        return Optional.ofNullable(this.queueConfig);
    }
    public QuickConnectType getQuickConnectType() {
        return this.quickConnectType;
    }
    public Optional<QuickConnectUserQuickConnectConfig> getUserConfig() {
        return Optional.ofNullable(this.userConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QuickConnectConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable QuickConnectPhoneNumberQuickConnectConfig phoneConfig;
        private @Nullable QuickConnectQueueQuickConnectConfig queueConfig;
        private QuickConnectType quickConnectType;
        private @Nullable QuickConnectUserQuickConnectConfig userConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(QuickConnectConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.phoneConfig = defaults.phoneConfig;
    	      this.queueConfig = defaults.queueConfig;
    	      this.quickConnectType = defaults.quickConnectType;
    	      this.userConfig = defaults.userConfig;
        }

        public Builder phoneConfig(@Nullable QuickConnectPhoneNumberQuickConnectConfig phoneConfig) {
            this.phoneConfig = phoneConfig;
            return this;
        }

        public Builder queueConfig(@Nullable QuickConnectQueueQuickConnectConfig queueConfig) {
            this.queueConfig = queueConfig;
            return this;
        }

        public Builder quickConnectType(QuickConnectType quickConnectType) {
            this.quickConnectType = Objects.requireNonNull(quickConnectType);
            return this;
        }

        public Builder userConfig(@Nullable QuickConnectUserQuickConnectConfig userConfig) {
            this.userConfig = userConfig;
            return this;
        }
        public QuickConnectConfig build() {
            return new QuickConnectConfig(phoneConfig, queueConfig, quickConnectType, userConfig);
        }
    }
}
