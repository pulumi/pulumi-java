// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.s3.outputs;

import io.pulumi.awsnative.s3.outputs.BucketRedirectRule;
import io.pulumi.awsnative.s3.outputs.BucketRoutingRuleCondition;
import io.pulumi.core.internal.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class BucketRoutingRule {
    private final BucketRedirectRule redirectRule;
    private final @Nullable BucketRoutingRuleCondition routingRuleCondition;

    @OutputCustomType.Constructor({"redirectRule","routingRuleCondition"})
    private BucketRoutingRule(
        BucketRedirectRule redirectRule,
        @Nullable BucketRoutingRuleCondition routingRuleCondition) {
        this.redirectRule = Objects.requireNonNull(redirectRule);
        this.routingRuleCondition = routingRuleCondition;
    }

    public BucketRedirectRule getRedirectRule() {
        return this.redirectRule;
    }
    public Optional<BucketRoutingRuleCondition> getRoutingRuleCondition() {
        return Optional.ofNullable(this.routingRuleCondition);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketRoutingRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketRedirectRule redirectRule;
        private @Nullable BucketRoutingRuleCondition routingRuleCondition;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketRoutingRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.redirectRule = defaults.redirectRule;
    	      this.routingRuleCondition = defaults.routingRuleCondition;
        }

        public Builder setRedirectRule(BucketRedirectRule redirectRule) {
            this.redirectRule = Objects.requireNonNull(redirectRule);
            return this;
        }

        public Builder setRoutingRuleCondition(@Nullable BucketRoutingRuleCondition routingRuleCondition) {
            this.routingRuleCondition = routingRuleCondition;
            return this;
        }

        public BucketRoutingRule build() {
            return new BucketRoutingRule(redirectRule, routingRuleCondition);
        }
    }
}
