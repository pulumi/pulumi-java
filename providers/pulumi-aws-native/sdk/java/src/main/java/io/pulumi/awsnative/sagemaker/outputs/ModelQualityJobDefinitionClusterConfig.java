// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.sagemaker.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelQualityJobDefinitionClusterConfig {
    /**
     * The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
     * 
     */
    private final Integer instanceCount;
    /**
     * The ML compute instance type for the processing job.
     * 
     */
    private final String instanceType;
    /**
     * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
     * 
     */
    private final @Nullable String volumeKmsKeyId;
    /**
     * The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
     * 
     */
    private final Integer volumeSizeInGB;

    @CustomType.Constructor
    private ModelQualityJobDefinitionClusterConfig(
        @CustomType.Parameter("instanceCount") Integer instanceCount,
        @CustomType.Parameter("instanceType") String instanceType,
        @CustomType.Parameter("volumeKmsKeyId") @Nullable String volumeKmsKeyId,
        @CustomType.Parameter("volumeSizeInGB") Integer volumeSizeInGB) {
        this.instanceCount = instanceCount;
        this.instanceType = instanceType;
        this.volumeKmsKeyId = volumeKmsKeyId;
        this.volumeSizeInGB = volumeSizeInGB;
    }

    /**
     * The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
     * 
    */
    public Integer getInstanceCount() {
        return this.instanceCount;
    }
    /**
     * The ML compute instance type for the processing job.
     * 
    */
    public String getInstanceType() {
        return this.instanceType;
    }
    /**
     * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
     * 
    */
    public Optional<String> getVolumeKmsKeyId() {
        return Optional.ofNullable(this.volumeKmsKeyId);
    }
    /**
     * The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
     * 
    */
    public Integer getVolumeSizeInGB() {
        return this.volumeSizeInGB;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelQualityJobDefinitionClusterConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer instanceCount;
        private String instanceType;
        private @Nullable String volumeKmsKeyId;
        private Integer volumeSizeInGB;

        public Builder() {
    	      // Empty
        }

        public Builder(ModelQualityJobDefinitionClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceCount = defaults.instanceCount;
    	      this.instanceType = defaults.instanceType;
    	      this.volumeKmsKeyId = defaults.volumeKmsKeyId;
    	      this.volumeSizeInGB = defaults.volumeSizeInGB;
        }

        public Builder instanceCount(Integer instanceCount) {
            this.instanceCount = Objects.requireNonNull(instanceCount);
            return this;
        }

        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }

        public Builder volumeKmsKeyId(@Nullable String volumeKmsKeyId) {
            this.volumeKmsKeyId = volumeKmsKeyId;
            return this;
        }

        public Builder volumeSizeInGB(Integer volumeSizeInGB) {
            this.volumeSizeInGB = Objects.requireNonNull(volumeSizeInGB);
            return this;
        }
        public ModelQualityJobDefinitionClusterConfig build() {
            return new ModelQualityJobDefinitionClusterConfig(instanceCount, instanceType, volumeKmsKeyId, volumeSizeInGB);
        }
    }
}
