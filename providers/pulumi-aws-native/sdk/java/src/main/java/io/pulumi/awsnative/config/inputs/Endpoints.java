// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.config.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration for for customizing service endpoints.
 * 
 */
public final class Endpoints extends io.pulumi.resources.InvokeArgs {

    public static final Endpoints Empty = new Endpoints();

    /**
     * Override the default endpoint for AWS Access Analyzer
     * 
     */
    @InputImport(name="accessanalyzer")
    private final @Nullable String accessanalyzer;

    public Optional<String> getAccessanalyzer() {
        return this.accessanalyzer == null ? Optional.empty() : Optional.ofNullable(this.accessanalyzer);
    }

    /**
     * Override the default endpoint for AWS Certificate Manager
     * 
     */
    @InputImport(name="acm")
    private final @Nullable String acm;

    public Optional<String> getAcm() {
        return this.acm == null ? Optional.empty() : Optional.ofNullable(this.acm);
    }

    /**
     * Override the default endpoint for AWS Certificate Manager Private Certificate Authority
     * 
     */
    @InputImport(name="acmpca")
    private final @Nullable String acmpca;

    public Optional<String> getAcmpca() {
        return this.acmpca == null ? Optional.empty() : Optional.ofNullable(this.acmpca);
    }

    /**
     * Override the default endpoint for AWS Amplify Console
     * 
     */
    @InputImport(name="amplify")
    private final @Nullable String amplify;

    public Optional<String> getAmplify() {
        return this.amplify == null ? Optional.empty() : Optional.ofNullable(this.amplify);
    }

    /**
     * Override the default endpoint for AWS AppConfig
     * 
     */
    @InputImport(name="appconfig")
    private final @Nullable String appconfig;

    public Optional<String> getAppconfig() {
        return this.appconfig == null ? Optional.empty() : Optional.ofNullable(this.appconfig);
    }

    /**
     * Override the default endpoint for AWS Application Auto Scaling
     * 
     */
    @InputImport(name="applicationautoscaling")
    private final @Nullable String applicationautoscaling;

    public Optional<String> getApplicationautoscaling() {
        return this.applicationautoscaling == null ? Optional.empty() : Optional.ofNullable(this.applicationautoscaling);
    }

    /**
     * Override the default endpoint for AWS CloudWatch Application Insights
     * 
     */
    @InputImport(name="applicationinsights")
    private final @Nullable String applicationinsights;

    public Optional<String> getApplicationinsights() {
        return this.applicationinsights == null ? Optional.empty() : Optional.ofNullable(this.applicationinsights);
    }

    /**
     * Override the default endpoint for AWS App Mesh
     * 
     */
    @InputImport(name="appmesh")
    private final @Nullable String appmesh;

    public Optional<String> getAppmesh() {
        return this.appmesh == null ? Optional.empty() : Optional.ofNullable(this.appmesh);
    }

    /**
     * Override the default endpoint for AWS App Runner
     * 
     */
    @InputImport(name="apprunner")
    private final @Nullable String apprunner;

    public Optional<String> getApprunner() {
        return this.apprunner == null ? Optional.empty() : Optional.ofNullable(this.apprunner);
    }

    /**
     * Override the default endpoint for AWS AppStream 2.0
     * 
     */
    @InputImport(name="appstream")
    private final @Nullable String appstream;

    public Optional<String> getAppstream() {
        return this.appstream == null ? Optional.empty() : Optional.ofNullable(this.appstream);
    }

    /**
     * Override the default endpoint for AWS AppSync
     * 
     */
    @InputImport(name="appsync")
    private final @Nullable String appsync;

    public Optional<String> getAppsync() {
        return this.appsync == null ? Optional.empty() : Optional.ofNullable(this.appsync);
    }

    /**
     * Override the default endpoint for AWS Athena
     * 
     */
    @InputImport(name="athena")
    private final @Nullable String athena;

    public Optional<String> getAthena() {
        return this.athena == null ? Optional.empty() : Optional.ofNullable(this.athena);
    }

    /**
     * Override the default endpoint for AWS Audit Manager
     * 
     */
    @InputImport(name="auditmanager")
    private final @Nullable String auditmanager;

    public Optional<String> getAuditmanager() {
        return this.auditmanager == null ? Optional.empty() : Optional.ofNullable(this.auditmanager);
    }

    /**
     * Override the default endpoint for AWS Auto Scaling
     * 
     */
    @InputImport(name="autoscaling")
    private final @Nullable String autoscaling;

    public Optional<String> getAutoscaling() {
        return this.autoscaling == null ? Optional.empty() : Optional.ofNullable(this.autoscaling);
    }

    /**
     * Override the default endpoint for AWS Backup
     * 
     */
    @InputImport(name="backup")
    private final @Nullable String backup;

    public Optional<String> getBackup() {
        return this.backup == null ? Optional.empty() : Optional.ofNullable(this.backup);
    }

    /**
     * Override the default endpoint for AWS Batch
     * 
     */
    @InputImport(name="batch")
    private final @Nullable String batch;

    public Optional<String> getBatch() {
        return this.batch == null ? Optional.empty() : Optional.ofNullable(this.batch);
    }

    /**
     * Override the default endpoint for AWS Budgets
     * 
     */
    @InputImport(name="budgets")
    private final @Nullable String budgets;

    public Optional<String> getBudgets() {
        return this.budgets == null ? Optional.empty() : Optional.ofNullable(this.budgets);
    }

    /**
     * Override the default endpoint for Amazon Chime
     * 
     */
    @InputImport(name="chime")
    private final @Nullable String chime;

    public Optional<String> getChime() {
        return this.chime == null ? Optional.empty() : Optional.ofNullable(this.chime);
    }

    /**
     * Override the default endpoint for AWS Cloud9
     * 
     */
    @InputImport(name="cloud9")
    private final @Nullable String cloud9;

    public Optional<String> getCloud9() {
        return this.cloud9 == null ? Optional.empty() : Optional.ofNullable(this.cloud9);
    }

    /**
     * Override the default endpoint for AWS CloudFormation
     * 
     */
    @InputImport(name="cloudformation")
    private final @Nullable String cloudformation;

    public Optional<String> getCloudformation() {
        return this.cloudformation == null ? Optional.empty() : Optional.ofNullable(this.cloudformation);
    }

    /**
     * Override the default endpoint for AWS CloudFront
     * 
     */
    @InputImport(name="cloudfront")
    private final @Nullable String cloudfront;

    public Optional<String> getCloudfront() {
        return this.cloudfront == null ? Optional.empty() : Optional.ofNullable(this.cloudfront);
    }

    /**
     * Override the default endpoint for AWS CloudHSM
     * 
     */
    @InputImport(name="cloudhsm")
    private final @Nullable String cloudhsm;

    public Optional<String> getCloudhsm() {
        return this.cloudhsm == null ? Optional.empty() : Optional.ofNullable(this.cloudhsm);
    }

    /**
     * Override the default endpoint for AWS CloudSearch
     * 
     */
    @InputImport(name="cloudsearch")
    private final @Nullable String cloudsearch;

    public Optional<String> getCloudsearch() {
        return this.cloudsearch == null ? Optional.empty() : Optional.ofNullable(this.cloudsearch);
    }

    /**
     * Override the default endpoint for AWS CloudTrail
     * 
     */
    @InputImport(name="cloudtrail")
    private final @Nullable String cloudtrail;

    public Optional<String> getCloudtrail() {
        return this.cloudtrail == null ? Optional.empty() : Optional.ofNullable(this.cloudtrail);
    }

    /**
     * Override the default endpoint for AWS CloudWatch
     * 
     */
    @InputImport(name="cloudwatch")
    private final @Nullable String cloudwatch;

    public Optional<String> getCloudwatch() {
        return this.cloudwatch == null ? Optional.empty() : Optional.ofNullable(this.cloudwatch);
    }

    /**
     * Override the default endpoint for AWS CloudWatch Events
     * 
     */
    @InputImport(name="cloudwatchevents")
    private final @Nullable String cloudwatchevents;

    public Optional<String> getCloudwatchevents() {
        return this.cloudwatchevents == null ? Optional.empty() : Optional.ofNullable(this.cloudwatchevents);
    }

    /**
     * Override the default endpoint for AWS CloudWatch Logs
     * 
     */
    @InputImport(name="cloudwatchlogs")
    private final @Nullable String cloudwatchlogs;

    public Optional<String> getCloudwatchlogs() {
        return this.cloudwatchlogs == null ? Optional.empty() : Optional.ofNullable(this.cloudwatchlogs);
    }

    /**
     * Override the default endpoint for AWS CodeArtifact
     * 
     */
    @InputImport(name="codeartifact")
    private final @Nullable String codeartifact;

    public Optional<String> getCodeartifact() {
        return this.codeartifact == null ? Optional.empty() : Optional.ofNullable(this.codeartifact);
    }

    /**
     * Override the default endpoint for AWS CodeBuild
     * 
     */
    @InputImport(name="codebuild")
    private final @Nullable String codebuild;

    public Optional<String> getCodebuild() {
        return this.codebuild == null ? Optional.empty() : Optional.ofNullable(this.codebuild);
    }

    /**
     * Override the default endpoint for AWS CodeCommit
     * 
     */
    @InputImport(name="codecommit")
    private final @Nullable String codecommit;

    public Optional<String> getCodecommit() {
        return this.codecommit == null ? Optional.empty() : Optional.ofNullable(this.codecommit);
    }

    /**
     * Override the default endpoint for AWS CodeDeploy
     * 
     */
    @InputImport(name="codedeploy")
    private final @Nullable String codedeploy;

    public Optional<String> getCodedeploy() {
        return this.codedeploy == null ? Optional.empty() : Optional.ofNullable(this.codedeploy);
    }

    /**
     * Override the default endpoint for AWS CodePipeline
     * 
     */
    @InputImport(name="codepipeline")
    private final @Nullable String codepipeline;

    public Optional<String> getCodepipeline() {
        return this.codepipeline == null ? Optional.empty() : Optional.ofNullable(this.codepipeline);
    }

    /**
     * Override the default endpoint for AWS CodeStart Connections
     * 
     */
    @InputImport(name="codestarconnections")
    private final @Nullable String codestarconnections;

    public Optional<String> getCodestarconnections() {
        return this.codestarconnections == null ? Optional.empty() : Optional.ofNullable(this.codestarconnections);
    }

    /**
     * Override the default endpoint for Amazon Cognito
     * 
     */
    @InputImport(name="cognitoidentity")
    private final @Nullable String cognitoidentity;

    public Optional<String> getCognitoidentity() {
        return this.cognitoidentity == null ? Optional.empty() : Optional.ofNullable(this.cognitoidentity);
    }

    /**
     * Override the default endpoint for AWS Config
     * 
     */
    @InputImport(name="configservice")
    private final @Nullable String configservice;

    public Optional<String> getConfigservice() {
        return this.configservice == null ? Optional.empty() : Optional.ofNullable(this.configservice);
    }

    /**
     * Override the default endpoint for Amazon Connect
     * 
     */
    @InputImport(name="connect")
    private final @Nullable String connect;

    public Optional<String> getConnect() {
        return this.connect == null ? Optional.empty() : Optional.ofNullable(this.connect);
    }

    /**
     * Override the default endpoint for AWS Cost and Usage Reports
     * 
     */
    @InputImport(name="cur")
    private final @Nullable String cur;

    public Optional<String> getCur() {
        return this.cur == null ? Optional.empty() : Optional.ofNullable(this.cur);
    }

    /**
     * Override the default endpoint for AWS Data Exchange
     * 
     */
    @InputImport(name="dataexchange")
    private final @Nullable String dataexchange;

    public Optional<String> getDataexchange() {
        return this.dataexchange == null ? Optional.empty() : Optional.ofNullable(this.dataexchange);
    }

    /**
     * Override the default endpoint for AWS Data Pipeline
     * 
     */
    @InputImport(name="datapipeline")
    private final @Nullable String datapipeline;

    public Optional<String> getDatapipeline() {
        return this.datapipeline == null ? Optional.empty() : Optional.ofNullable(this.datapipeline);
    }

    /**
     * Override the default endpoint for AWS DataSync
     * 
     */
    @InputImport(name="datasync")
    private final @Nullable String datasync;

    public Optional<String> getDatasync() {
        return this.datasync == null ? Optional.empty() : Optional.ofNullable(this.datasync);
    }

    /**
     * Override the default endpoint for AWS DynamoDB Accelerator
     * 
     */
    @InputImport(name="dax")
    private final @Nullable String dax;

    public Optional<String> getDax() {
        return this.dax == null ? Optional.empty() : Optional.ofNullable(this.dax);
    }

    /**
     * Override the default endpoint for AWS Detective
     * 
     */
    @InputImport(name="detective")
    private final @Nullable String detective;

    public Optional<String> getDetective() {
        return this.detective == null ? Optional.empty() : Optional.ofNullable(this.detective);
    }

    /**
     * Override the default endpoint for AWS Device Farm
     * 
     */
    @InputImport(name="devicefarm")
    private final @Nullable String devicefarm;

    public Optional<String> getDevicefarm() {
        return this.devicefarm == null ? Optional.empty() : Optional.ofNullable(this.devicefarm);
    }

    /**
     * Override the default endpoint for AWS Direct Connect
     * 
     */
    @InputImport(name="directconnect")
    private final @Nullable String directconnect;

    public Optional<String> getDirectconnect() {
        return this.directconnect == null ? Optional.empty() : Optional.ofNullable(this.directconnect);
    }

    /**
     * Override the default endpoint for AWS Data Lifecycle Manager
     * 
     */
    @InputImport(name="dlm")
    private final @Nullable String dlm;

    public Optional<String> getDlm() {
        return this.dlm == null ? Optional.empty() : Optional.ofNullable(this.dlm);
    }

    /**
     * Override the default endpoint for AWS Database Migration Service
     * 
     */
    @InputImport(name="dms")
    private final @Nullable String dms;

    public Optional<String> getDms() {
        return this.dms == null ? Optional.empty() : Optional.ofNullable(this.dms);
    }

    /**
     * Override the default endpoint for AWS DocumentDB
     * 
     */
    @InputImport(name="docdb")
    private final @Nullable String docdb;

    public Optional<String> getDocdb() {
        return this.docdb == null ? Optional.empty() : Optional.ofNullable(this.docdb);
    }

    /**
     * Override the default endpoint for AWS Directory Service
     * 
     */
    @InputImport(name="ds")
    private final @Nullable String ds;

    public Optional<String> getDs() {
        return this.ds == null ? Optional.empty() : Optional.ofNullable(this.ds);
    }

    /**
     * Override the default endpoint for AWS DynamoDB
     * 
     */
    @InputImport(name="dynamodb")
    private final @Nullable String dynamodb;

    public Optional<String> getDynamodb() {
        return this.dynamodb == null ? Optional.empty() : Optional.ofNullable(this.dynamodb);
    }

    /**
     * Override the default endpoint for AWS Elastic Compute Cloud (EC2)
     * 
     */
    @InputImport(name="ec2")
    private final @Nullable String ec2;

    public Optional<String> getEc2() {
        return this.ec2 == null ? Optional.empty() : Optional.ofNullable(this.ec2);
    }

    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR)
     * 
     */
    @InputImport(name="ecr")
    private final @Nullable String ecr;

    public Optional<String> getEcr() {
        return this.ecr == null ? Optional.empty() : Optional.ofNullable(this.ecr);
    }

    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR) Public
     * 
     */
    @InputImport(name="ecrpublic")
    private final @Nullable String ecrpublic;

    public Optional<String> getEcrpublic() {
        return this.ecrpublic == null ? Optional.empty() : Optional.ofNullable(this.ecrpublic);
    }

    /**
     * Override the default endpoint for AWS Elastic Container Service (ECS)
     * 
     */
    @InputImport(name="ecs")
    private final @Nullable String ecs;

    public Optional<String> getEcs() {
        return this.ecs == null ? Optional.empty() : Optional.ofNullable(this.ecs);
    }

    /**
     * Override the default endpoint for AWS Elastic File System (EFS)
     * 
     */
    @InputImport(name="efs")
    private final @Nullable String efs;

    public Optional<String> getEfs() {
        return this.efs == null ? Optional.empty() : Optional.ofNullable(this.efs);
    }

    /**
     * Override the default endpoint for AWS Elastic Kubernetes Service (EKS)
     * 
     */
    @InputImport(name="eks")
    private final @Nullable String eks;

    public Optional<String> getEks() {
        return this.eks == null ? Optional.empty() : Optional.ofNullable(this.eks);
    }

    /**
     * Override the default endpoint for AWS ElastiCache
     * 
     */
    @InputImport(name="elasticache")
    private final @Nullable String elasticache;

    public Optional<String> getElasticache() {
        return this.elasticache == null ? Optional.empty() : Optional.ofNullable(this.elasticache);
    }

    /**
     * Override the default endpoint for AWS Elastic Beanstalk
     * 
     */
    @InputImport(name="elasticbeanstalk")
    private final @Nullable String elasticbeanstalk;

    public Optional<String> getElasticbeanstalk() {
        return this.elasticbeanstalk == null ? Optional.empty() : Optional.ofNullable(this.elasticbeanstalk);
    }

    /**
     * Override the default endpoint for AWS Elastic Transcoder
     * 
     */
    @InputImport(name="elastictranscoder")
    private final @Nullable String elastictranscoder;

    public Optional<String> getElastictranscoder() {
        return this.elastictranscoder == null ? Optional.empty() : Optional.ofNullable(this.elastictranscoder);
    }

    /**
     * Override the default endpoint for AWS Elastic Load Balancing
     * 
     */
    @InputImport(name="elb")
    private final @Nullable String elb;

    public Optional<String> getElb() {
        return this.elb == null ? Optional.empty() : Optional.ofNullable(this.elb);
    }

    /**
     * Override the default endpoint for AWS Elastic Load Balancing V2
     * 
     */
    @InputImport(name="elbv2")
    private final @Nullable String elbv2;

    public Optional<String> getElbv2() {
        return this.elbv2 == null ? Optional.empty() : Optional.ofNullable(this.elbv2);
    }

    /**
     * Override the default endpoint for AWS EMR
     * 
     */
    @InputImport(name="emr")
    private final @Nullable String emr;

    public Optional<String> getEmr() {
        return this.emr == null ? Optional.empty() : Optional.ofNullable(this.emr);
    }

    /**
     * Override the default endpoint for AWS EMR on EKS
     * 
     */
    @InputImport(name="emrcontainers")
    private final @Nullable String emrcontainers;

    public Optional<String> getEmrcontainers() {
        return this.emrcontainers == null ? Optional.empty() : Optional.ofNullable(this.emrcontainers);
    }

    /**
     * Override the default endpoint for AWS OpenSearch Service (formerly Elasticsearch)
     * 
     */
    @InputImport(name="es")
    private final @Nullable String es;

    public Optional<String> getEs() {
        return this.es == null ? Optional.empty() : Optional.ofNullable(this.es);
    }

    /**
     * Override the default endpoint for AWS Kinesis Data Firehose
     * 
     */
    @InputImport(name="firehose")
    private final @Nullable String firehose;

    public Optional<String> getFirehose() {
        return this.firehose == null ? Optional.empty() : Optional.ofNullable(this.firehose);
    }

    /**
     * Override the default endpoint for AWS Firewall Manager
     * 
     */
    @InputImport(name="fms")
    private final @Nullable String fms;

    public Optional<String> getFms() {
        return this.fms == null ? Optional.empty() : Optional.ofNullable(this.fms);
    }

    /**
     * Override the default endpoint for Amazon Forecast
     * 
     */
    @InputImport(name="forecast")
    private final @Nullable String forecast;

    public Optional<String> getForecast() {
        return this.forecast == null ? Optional.empty() : Optional.ofNullable(this.forecast);
    }

    /**
     * Override the default endpoint for AWS FSx
     * 
     */
    @InputImport(name="fsx")
    private final @Nullable String fsx;

    public Optional<String> getFsx() {
        return this.fsx == null ? Optional.empty() : Optional.ofNullable(this.fsx);
    }

    /**
     * Override the default endpoint for AWS GameLift
     * 
     */
    @InputImport(name="gamelift")
    private final @Nullable String gamelift;

    public Optional<String> getGamelift() {
        return this.gamelift == null ? Optional.empty() : Optional.ofNullable(this.gamelift);
    }

    /**
     * Override the default endpoint for Amazon S3 Glacier
     * 
     */
    @InputImport(name="glacier")
    private final @Nullable String glacier;

    public Optional<String> getGlacier() {
        return this.glacier == null ? Optional.empty() : Optional.ofNullable(this.glacier);
    }

    /**
     * Override the default endpoint for AWS Global Accelerator
     * 
     */
    @InputImport(name="globalaccelerator")
    private final @Nullable String globalaccelerator;

    public Optional<String> getGlobalaccelerator() {
        return this.globalaccelerator == null ? Optional.empty() : Optional.ofNullable(this.globalaccelerator);
    }

    /**
     * Override the default endpoint for AWS Glue
     * 
     */
    @InputImport(name="glue")
    private final @Nullable String glue;

    public Optional<String> getGlue() {
        return this.glue == null ? Optional.empty() : Optional.ofNullable(this.glue);
    }

    /**
     * Override the default endpoint for AWS IoT Greengrass
     * 
     */
    @InputImport(name="greengrass")
    private final @Nullable String greengrass;

    public Optional<String> getGreengrass() {
        return this.greengrass == null ? Optional.empty() : Optional.ofNullable(this.greengrass);
    }

    /**
     * Override the default endpoint for AWS GuardDuty
     * 
     */
    @InputImport(name="guardduty")
    private final @Nullable String guardduty;

    public Optional<String> getGuardduty() {
        return this.guardduty == null ? Optional.empty() : Optional.ofNullable(this.guardduty);
    }

    /**
     * Override the default endpoint for AWS Identity and Access Management
     * 
     */
    @InputImport(name="iam")
    private final @Nullable String iam;

    public Optional<String> getIam() {
        return this.iam == null ? Optional.empty() : Optional.ofNullable(this.iam);
    }

    /**
     * Override the default endpoint for AWS Single Sign-On (SSO) Identity Store
     * 
     */
    @InputImport(name="identitystore")
    private final @Nullable String identitystore;

    public Optional<String> getIdentitystore() {
        return this.identitystore == null ? Optional.empty() : Optional.ofNullable(this.identitystore);
    }

    /**
     * Override the default endpoint for AWS Image Builder
     * 
     */
    @InputImport(name="imagebuilder")
    private final @Nullable String imagebuilder;

    public Optional<String> getImagebuilder() {
        return this.imagebuilder == null ? Optional.empty() : Optional.ofNullable(this.imagebuilder);
    }

    /**
     * Override the default endpoint for Amazon Inspector
     * 
     */
    @InputImport(name="inspector")
    private final @Nullable String inspector;

    public Optional<String> getInspector() {
        return this.inspector == null ? Optional.empty() : Optional.ofNullable(this.inspector);
    }

    /**
     * Override the default endpoint for AWS IoT
     * 
     */
    @InputImport(name="iot")
    private final @Nullable String iot;

    public Optional<String> getIot() {
        return this.iot == null ? Optional.empty() : Optional.ofNullable(this.iot);
    }

    /**
     * Override the default endpoint for AWS IoT Analytics
     * 
     */
    @InputImport(name="iotanalytics")
    private final @Nullable String iotanalytics;

    public Optional<String> getIotanalytics() {
        return this.iotanalytics == null ? Optional.empty() : Optional.ofNullable(this.iotanalytics);
    }

    /**
     * Override the default endpoint for AWS IoT Events
     * 
     */
    @InputImport(name="iotevents")
    private final @Nullable String iotevents;

    public Optional<String> getIotevents() {
        return this.iotevents == null ? Optional.empty() : Optional.ofNullable(this.iotevents);
    }

    /**
     * Override the default endpoint for Amazon Managed Streaming for Apache Kafka (MSK)
     * 
     */
    @InputImport(name="kafka")
    private final @Nullable String kafka;

    public Optional<String> getKafka() {
        return this.kafka == null ? Optional.empty() : Optional.ofNullable(this.kafka);
    }

    /**
     * Override the default endpoint for Amazon Kinesis
     * 
     */
    @InputImport(name="kinesis")
    private final @Nullable String kinesis;

    public Optional<String> getKinesis() {
        return this.kinesis == null ? Optional.empty() : Optional.ofNullable(this.kinesis);
    }

    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics
     * 
     */
    @InputImport(name="kinesisanalytics")
    private final @Nullable String kinesisanalytics;

    public Optional<String> getKinesisanalytics() {
        return this.kinesisanalytics == null ? Optional.empty() : Optional.ofNullable(this.kinesisanalytics);
    }

    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics V2
     * 
     */
    @InputImport(name="kinesisanalyticsv2")
    private final @Nullable String kinesisanalyticsv2;

    public Optional<String> getKinesisanalyticsv2() {
        return this.kinesisanalyticsv2 == null ? Optional.empty() : Optional.ofNullable(this.kinesisanalyticsv2);
    }

    /**
     * Override the default endpoint for Amazon Kinesis Video Streams
     * 
     */
    @InputImport(name="kinesisvideo")
    private final @Nullable String kinesisvideo;

    public Optional<String> getKinesisvideo() {
        return this.kinesisvideo == null ? Optional.empty() : Optional.ofNullable(this.kinesisvideo);
    }

    /**
     * Override the default endpoint for AWS Key Management Service
     * 
     */
    @InputImport(name="kms")
    private final @Nullable String kms;

    public Optional<String> getKms() {
        return this.kms == null ? Optional.empty() : Optional.ofNullable(this.kms);
    }

    /**
     * Override the default endpoint for AWS Lake Formation
     * 
     */
    @InputImport(name="lakeformation")
    private final @Nullable String lakeformation;

    public Optional<String> getLakeformation() {
        return this.lakeformation == null ? Optional.empty() : Optional.ofNullable(this.lakeformation);
    }

    /**
     * Override the default endpoint for AWS Lambda
     * 
     */
    @InputImport(name="lambda")
    private final @Nullable String lambda;

    public Optional<String> getLambda() {
        return this.lambda == null ? Optional.empty() : Optional.ofNullable(this.lambda);
    }

    /**
     * Override the default endpoint for Amazon Lex
     * 
     */
    @InputImport(name="lexmodels")
    private final @Nullable String lexmodels;

    public Optional<String> getLexmodels() {
        return this.lexmodels == null ? Optional.empty() : Optional.ofNullable(this.lexmodels);
    }

    /**
     * Override the default endpoint for AWS License Manager
     * 
     */
    @InputImport(name="licensemanager")
    private final @Nullable String licensemanager;

    public Optional<String> getLicensemanager() {
        return this.licensemanager == null ? Optional.empty() : Optional.ofNullable(this.licensemanager);
    }

    /**
     * Override the default endpoint for Amazon Lightsail
     * 
     */
    @InputImport(name="lightsail")
    private final @Nullable String lightsail;

    public Optional<String> getLightsail() {
        return this.lightsail == null ? Optional.empty() : Optional.ofNullable(this.lightsail);
    }

    /**
     * Override the default endpoint for Amazon Location
     * 
     */
    @InputImport(name="location")
    private final @Nullable String location;

    public Optional<String> getLocation() {
        return this.location == null ? Optional.empty() : Optional.ofNullable(this.location);
    }

    /**
     * Override the default endpoint for Amazon Macie
     * 
     */
    @InputImport(name="macie")
    private final @Nullable String macie;

    public Optional<String> getMacie() {
        return this.macie == null ? Optional.empty() : Optional.ofNullable(this.macie);
    }

    /**
     * Override the default endpoint for Amazon Macie V2
     * 
     */
    @InputImport(name="macie2")
    private final @Nullable String macie2;

    public Optional<String> getMacie2() {
        return this.macie2 == null ? Optional.empty() : Optional.ofNullable(this.macie2);
    }

    /**
     * Override the default endpoint for Amazon Managed Blockchain
     * 
     */
    @InputImport(name="managedblockchain")
    private final @Nullable String managedblockchain;

    public Optional<String> getManagedblockchain() {
        return this.managedblockchain == null ? Optional.empty() : Optional.ofNullable(this.managedblockchain);
    }

    /**
     * Override the default endpoint for AWS Marketplace Catalog
     * 
     */
    @InputImport(name="marketplacecatalog")
    private final @Nullable String marketplacecatalog;

    public Optional<String> getMarketplacecatalog() {
        return this.marketplacecatalog == null ? Optional.empty() : Optional.ofNullable(this.marketplacecatalog);
    }

    /**
     * Override the default endpoint for AWS MediaConnect
     * 
     */
    @InputImport(name="mediaconnect")
    private final @Nullable String mediaconnect;

    public Optional<String> getMediaconnect() {
        return this.mediaconnect == null ? Optional.empty() : Optional.ofNullable(this.mediaconnect);
    }

    /**
     * Override the default endpoint for AWS MediaConvert
     * 
     */
    @InputImport(name="mediaconvert")
    private final @Nullable String mediaconvert;

    public Optional<String> getMediaconvert() {
        return this.mediaconvert == null ? Optional.empty() : Optional.ofNullable(this.mediaconvert);
    }

    /**
     * Override the default endpoint for AWS MediaLive
     * 
     */
    @InputImport(name="medialive")
    private final @Nullable String medialive;

    public Optional<String> getMedialive() {
        return this.medialive == null ? Optional.empty() : Optional.ofNullable(this.medialive);
    }

    /**
     * Override the default endpoint for AWS MediaPackage
     * 
     */
    @InputImport(name="mediapackage")
    private final @Nullable String mediapackage;

    public Optional<String> getMediapackage() {
        return this.mediapackage == null ? Optional.empty() : Optional.ofNullable(this.mediapackage);
    }

    /**
     * Override the default endpoint for AWS Elemental MediaStore container
     * 
     */
    @InputImport(name="mediastore")
    private final @Nullable String mediastore;

    public Optional<String> getMediastore() {
        return this.mediastore == null ? Optional.empty() : Optional.ofNullable(this.mediastore);
    }

    /**
     * Override the default endpoint for AWS Elemental MediaStore asset
     * 
     */
    @InputImport(name="mediastoredata")
    private final @Nullable String mediastoredata;

    public Optional<String> getMediastoredata() {
        return this.mediastoredata == null ? Optional.empty() : Optional.ofNullable(this.mediastoredata);
    }

    /**
     * Override the default endpoint for AWS MemoryDB for Redis
     * 
     */
    @InputImport(name="memorydb")
    private final @Nullable String memorydb;

    public Optional<String> getMemorydb() {
        return this.memorydb == null ? Optional.empty() : Optional.ofNullable(this.memorydb);
    }

    /**
     * Override the default endpoint for Amazon MQ
     * 
     */
    @InputImport(name="mq")
    private final @Nullable String mq;

    public Optional<String> getMq() {
        return this.mq == null ? Optional.empty() : Optional.ofNullable(this.mq);
    }

    /**
     * Override the default endpoint for Amazon Managed Workflows for Apache Airflow
     * 
     */
    @InputImport(name="mwaa")
    private final @Nullable String mwaa;

    public Optional<String> getMwaa() {
        return this.mwaa == null ? Optional.empty() : Optional.ofNullable(this.mwaa);
    }

    /**
     * Override the default endpoint for Amazon Neptune
     * 
     */
    @InputImport(name="neptune")
    private final @Nullable String neptune;

    public Optional<String> getNeptune() {
        return this.neptune == null ? Optional.empty() : Optional.ofNullable(this.neptune);
    }

    /**
     * Override the default endpoint for AWS Network Firewall
     * 
     */
    @InputImport(name="networkfirewall")
    private final @Nullable String networkfirewall;

    public Optional<String> getNetworkfirewall() {
        return this.networkfirewall == null ? Optional.empty() : Optional.ofNullable(this.networkfirewall);
    }

    /**
     * Override the default endpoint for AWS Network Manager
     * 
     */
    @InputImport(name="networkmanager")
    private final @Nullable String networkmanager;

    public Optional<String> getNetworkmanager() {
        return this.networkmanager == null ? Optional.empty() : Optional.ofNullable(this.networkmanager);
    }

    /**
     * Override the default endpoint for AWS OpsWorks
     * 
     */
    @InputImport(name="opsworks")
    private final @Nullable String opsworks;

    public Optional<String> getOpsworks() {
        return this.opsworks == null ? Optional.empty() : Optional.ofNullable(this.opsworks);
    }

    /**
     * Override the default endpoint for AWS Organizations
     * 
     */
    @InputImport(name="organizations")
    private final @Nullable String organizations;

    public Optional<String> getOrganizations() {
        return this.organizations == null ? Optional.empty() : Optional.ofNullable(this.organizations);
    }

    /**
     * Override the default endpoint for AWS Outposts
     * 
     */
    @InputImport(name="outposts")
    private final @Nullable String outposts;

    public Optional<String> getOutposts() {
        return this.outposts == null ? Optional.empty() : Optional.ofNullable(this.outposts);
    }

    /**
     * Override the default endpoint for Amazon Personalize
     * 
     */
    @InputImport(name="personalize")
    private final @Nullable String personalize;

    public Optional<String> getPersonalize() {
        return this.personalize == null ? Optional.empty() : Optional.ofNullable(this.personalize);
    }

    /**
     * Override the default endpoint for Amazon Pinpoint
     * 
     */
    @InputImport(name="pinpoint")
    private final @Nullable String pinpoint;

    public Optional<String> getPinpoint() {
        return this.pinpoint == null ? Optional.empty() : Optional.ofNullable(this.pinpoint);
    }

    /**
     * Override the default endpoint for Amazon Web Services Price List Service
     * 
     */
    @InputImport(name="pricing")
    private final @Nullable String pricing;

    public Optional<String> getPricing() {
        return this.pricing == null ? Optional.empty() : Optional.ofNullable(this.pricing);
    }

    /**
     * Override the default endpoint for Amazon QLDB
     * 
     */
    @InputImport(name="qldb")
    private final @Nullable String qldb;

    public Optional<String> getQldb() {
        return this.qldb == null ? Optional.empty() : Optional.ofNullable(this.qldb);
    }

    /**
     * Override the default endpoint for Amazon QuickSight
     * 
     */
    @InputImport(name="quicksight")
    private final @Nullable String quicksight;

    public Optional<String> getQuicksight() {
        return this.quicksight == null ? Optional.empty() : Optional.ofNullable(this.quicksight);
    }

    /**
     * Override the default endpoint for AWS Resource Access Manager
     * 
     */
    @InputImport(name="ram")
    private final @Nullable String ram;

    public Optional<String> getRam() {
        return this.ram == null ? Optional.empty() : Optional.ofNullable(this.ram);
    }

    /**
     * Override the default endpoint for Amazon Relational Database Service
     * 
     */
    @InputImport(name="rds")
    private final @Nullable String rds;

    public Optional<String> getRds() {
        return this.rds == null ? Optional.empty() : Optional.ofNullable(this.rds);
    }

    /**
     * Override the default endpoint for Amazon Redshift
     * 
     */
    @InputImport(name="redshift")
    private final @Nullable String redshift;

    public Optional<String> getRedshift() {
        return this.redshift == null ? Optional.empty() : Optional.ofNullable(this.redshift);
    }

    /**
     * Override the default endpoint for AWS Resource Groups
     * 
     */
    @InputImport(name="resourcegroups")
    private final @Nullable String resourcegroups;

    public Optional<String> getResourcegroups() {
        return this.resourcegroups == null ? Optional.empty() : Optional.ofNullable(this.resourcegroups);
    }

    /**
     * Override the default endpoint for AWS Resource Groups Tagging API
     * 
     */
    @InputImport(name="resourcegroupstaggingapi")
    private final @Nullable String resourcegroupstaggingapi;

    public Optional<String> getResourcegroupstaggingapi() {
        return this.resourcegroupstaggingapi == null ? Optional.empty() : Optional.ofNullable(this.resourcegroupstaggingapi);
    }

    /**
     * Override the default endpoint for Amazon Route 53
     * 
     */
    @InputImport(name="route53")
    private final @Nullable String route53;

    public Optional<String> getRoute53() {
        return this.route53 == null ? Optional.empty() : Optional.ofNullable(this.route53);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Domains
     * 
     */
    @InputImport(name="route53domains")
    private final @Nullable String route53domains;

    public Optional<String> getRoute53domains() {
        return this.route53domains == null ? Optional.empty() : Optional.ofNullable(this.route53domains);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Recovery Control
     * 
     */
    @InputImport(name="route53recoverycontrolconfig")
    private final @Nullable String route53recoverycontrolconfig;

    public Optional<String> getRoute53recoverycontrolconfig() {
        return this.route53recoverycontrolconfig == null ? Optional.empty() : Optional.ofNullable(this.route53recoverycontrolconfig);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Recovery Readiness
     * 
     */
    @InputImport(name="route53recoveryreadiness")
    private final @Nullable String route53recoveryreadiness;

    public Optional<String> getRoute53recoveryreadiness() {
        return this.route53recoveryreadiness == null ? Optional.empty() : Optional.ofNullable(this.route53recoveryreadiness);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Resolver
     * 
     */
    @InputImport(name="route53resolver")
    private final @Nullable String route53resolver;

    public Optional<String> getRoute53resolver() {
        return this.route53resolver == null ? Optional.empty() : Optional.ofNullable(this.route53resolver);
    }

    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3)
     * 
     */
    @InputImport(name="s3")
    private final @Nullable String s3;

    public Optional<String> getS3() {
        return this.s3 == null ? Optional.empty() : Optional.ofNullable(this.s3);
    }

    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3) Control
     * 
     */
    @InputImport(name="s3control")
    private final @Nullable String s3control;

    public Optional<String> getS3control() {
        return this.s3control == null ? Optional.empty() : Optional.ofNullable(this.s3control);
    }

    /**
     * Override the default endpoint for Amazon S3 on Outposts
     * 
     */
    @InputImport(name="s3outposts")
    private final @Nullable String s3outposts;

    public Optional<String> getS3outposts() {
        return this.s3outposts == null ? Optional.empty() : Optional.ofNullable(this.s3outposts);
    }

    /**
     * Override the default endpoint for AWS SageMaker
     * 
     */
    @InputImport(name="sagemaker")
    private final @Nullable String sagemaker;

    public Optional<String> getSagemaker() {
        return this.sagemaker == null ? Optional.empty() : Optional.ofNullable(this.sagemaker);
    }

    /**
     * Override the default endpoint for Amazon EventBridge Schema Registry
     * 
     */
    @InputImport(name="schemas")
    private final @Nullable String schemas;

    public Optional<String> getSchemas() {
        return this.schemas == null ? Optional.empty() : Optional.ofNullable(this.schemas);
    }

    /**
     * Override the default endpoint for Amazon SimpleDB
     * 
     */
    @InputImport(name="sdb")
    private final @Nullable String sdb;

    public Optional<String> getSdb() {
        return this.sdb == null ? Optional.empty() : Optional.ofNullable(this.sdb);
    }

    /**
     * Override the default endpoint for AWS Secrets Manager
     * 
     */
    @InputImport(name="secretsmanager")
    private final @Nullable String secretsmanager;

    public Optional<String> getSecretsmanager() {
        return this.secretsmanager == null ? Optional.empty() : Optional.ofNullable(this.secretsmanager);
    }

    /**
     * Override the default endpoint for AWS Security Hub
     * 
     */
    @InputImport(name="securityhub")
    private final @Nullable String securityhub;

    public Optional<String> getSecurityhub() {
        return this.securityhub == null ? Optional.empty() : Optional.ofNullable(this.securityhub);
    }

    /**
     * Override the default endpoint for AWS Serverless Application Repository
     * 
     */
    @InputImport(name="serverlessrepo")
    private final @Nullable String serverlessrepo;

    public Optional<String> getServerlessrepo() {
        return this.serverlessrepo == null ? Optional.empty() : Optional.ofNullable(this.serverlessrepo);
    }

    /**
     * Override the default endpoint for AWS Service Catalog
     * 
     */
    @InputImport(name="servicecatalog")
    private final @Nullable String servicecatalog;

    public Optional<String> getServicecatalog() {
        return this.servicecatalog == null ? Optional.empty() : Optional.ofNullable(this.servicecatalog);
    }

    /**
     * Override the default endpoint for AWS Cloud Map
     * 
     */
    @InputImport(name="servicediscovery")
    private final @Nullable String servicediscovery;

    public Optional<String> getServicediscovery() {
        return this.servicediscovery == null ? Optional.empty() : Optional.ofNullable(this.servicediscovery);
    }

    /**
     * Override the default endpoint for AWS Service Quotas
     * 
     */
    @InputImport(name="servicequotas")
    private final @Nullable String servicequotas;

    public Optional<String> getServicequotas() {
        return this.servicequotas == null ? Optional.empty() : Optional.ofNullable(this.servicequotas);
    }

    /**
     * Override the default endpoint for Amazon Simple Email Service (SES)
     * 
     */
    @InputImport(name="ses")
    private final @Nullable String ses;

    public Optional<String> getSes() {
        return this.ses == null ? Optional.empty() : Optional.ofNullable(this.ses);
    }

    /**
     * Override the default endpoint for AWS Shield Advanced API
     * 
     */
    @InputImport(name="shield")
    private final @Nullable String shield;

    public Optional<String> getShield() {
        return this.shield == null ? Optional.empty() : Optional.ofNullable(this.shield);
    }

    /**
     * Override the default endpoint for AWS Signer
     * 
     */
    @InputImport(name="signer")
    private final @Nullable String signer;

    public Optional<String> getSigner() {
        return this.signer == null ? Optional.empty() : Optional.ofNullable(this.signer);
    }

    /**
     * Override the default endpoint for Amazon Simple Notification Service (SNS)
     * 
     */
    @InputImport(name="sns")
    private final @Nullable String sns;

    public Optional<String> getSns() {
        return this.sns == null ? Optional.empty() : Optional.ofNullable(this.sns);
    }

    /**
     * Override the default endpoint for Amazon Simple Queue Service (SQS)
     * 
     */
    @InputImport(name="sqs")
    private final @Nullable String sqs;

    public Optional<String> getSqs() {
        return this.sqs == null ? Optional.empty() : Optional.ofNullable(this.sqs);
    }

    /**
     * Override the default endpoint for AWS Systems Manager
     * 
     */
    @InputImport(name="ssm")
    private final @Nullable String ssm;

    public Optional<String> getSsm() {
        return this.ssm == null ? Optional.empty() : Optional.ofNullable(this.ssm);
    }

    /**
     * Override the default endpoint for AWS Single Sign On (SSO)
     * 
     */
    @InputImport(name="ssoadmin")
    private final @Nullable String ssoadmin;

    public Optional<String> getSsoadmin() {
        return this.ssoadmin == null ? Optional.empty() : Optional.ofNullable(this.ssoadmin);
    }

    /**
     * Override the default endpoint for AWS Step Functions
     * 
     */
    @InputImport(name="stepfunctions")
    private final @Nullable String stepfunctions;

    public Optional<String> getStepfunctions() {
        return this.stepfunctions == null ? Optional.empty() : Optional.ofNullable(this.stepfunctions);
    }

    /**
     * Override the default endpoint for AWS Storage Gateway
     * 
     */
    @InputImport(name="storagegateway")
    private final @Nullable String storagegateway;

    public Optional<String> getStoragegateway() {
        return this.storagegateway == null ? Optional.empty() : Optional.ofNullable(this.storagegateway);
    }

    /**
     * Override the default endpoint for AWS Security Token Service (STS)
     * 
     */
    @InputImport(name="sts")
    private final @Nullable String sts;

    public Optional<String> getSts() {
        return this.sts == null ? Optional.empty() : Optional.ofNullable(this.sts);
    }

    /**
     * Override the default endpoint for Amazon Simple Workflow Service (SWF)
     * 
     */
    @InputImport(name="swf")
    private final @Nullable String swf;

    public Optional<String> getSwf() {
        return this.swf == null ? Optional.empty() : Optional.ofNullable(this.swf);
    }

    /**
     * Override the default endpoint for Amazon CloudWatch Synthetics
     * 
     */
    @InputImport(name="synthetics")
    private final @Nullable String synthetics;

    public Optional<String> getSynthetics() {
        return this.synthetics == null ? Optional.empty() : Optional.ofNullable(this.synthetics);
    }

    /**
     * Override the default endpoint for Amazon Timestream
     * 
     */
    @InputImport(name="timestreamwrite")
    private final @Nullable String timestreamwrite;

    public Optional<String> getTimestreamwrite() {
        return this.timestreamwrite == null ? Optional.empty() : Optional.ofNullable(this.timestreamwrite);
    }

    /**
     * Override the default endpoint for AWS Transfer Family
     * 
     */
    @InputImport(name="transfer")
    private final @Nullable String transfer;

    public Optional<String> getTransfer() {
        return this.transfer == null ? Optional.empty() : Optional.ofNullable(this.transfer);
    }

    /**
     * Override the default endpoint for AWS WAF Classic
     * 
     */
    @InputImport(name="waf")
    private final @Nullable String waf;

    public Optional<String> getWaf() {
        return this.waf == null ? Optional.empty() : Optional.ofNullable(this.waf);
    }

    /**
     * Override the default endpoint for AWS WAF Regional Classic
     * 
     */
    @InputImport(name="wafregional")
    private final @Nullable String wafregional;

    public Optional<String> getWafregional() {
        return this.wafregional == null ? Optional.empty() : Optional.ofNullable(this.wafregional);
    }

    /**
     * Override the default endpoint for AWS WAF V2
     * 
     */
    @InputImport(name="wafv2")
    private final @Nullable String wafv2;

    public Optional<String> getWafv2() {
        return this.wafv2 == null ? Optional.empty() : Optional.ofNullable(this.wafv2);
    }

    /**
     * Override the default endpoint for Amazon WorkLink
     * 
     */
    @InputImport(name="worklink")
    private final @Nullable String worklink;

    public Optional<String> getWorklink() {
        return this.worklink == null ? Optional.empty() : Optional.ofNullable(this.worklink);
    }

    /**
     * Override the default endpoint for Amazon WorkMail
     * 
     */
    @InputImport(name="workmail")
    private final @Nullable String workmail;

    public Optional<String> getWorkmail() {
        return this.workmail == null ? Optional.empty() : Optional.ofNullable(this.workmail);
    }

    /**
     * Override the default endpoint for Amazon WorkSpaces
     * 
     */
    @InputImport(name="workspaces")
    private final @Nullable String workspaces;

    public Optional<String> getWorkspaces() {
        return this.workspaces == null ? Optional.empty() : Optional.ofNullable(this.workspaces);
    }

    /**
     * Override the default endpoint for AWS X-Ray
     * 
     */
    @InputImport(name="xray")
    private final @Nullable String xray;

    public Optional<String> getXray() {
        return this.xray == null ? Optional.empty() : Optional.ofNullable(this.xray);
    }

    public Endpoints(
        @Nullable String accessanalyzer,
        @Nullable String acm,
        @Nullable String acmpca,
        @Nullable String amplify,
        @Nullable String appconfig,
        @Nullable String applicationautoscaling,
        @Nullable String applicationinsights,
        @Nullable String appmesh,
        @Nullable String apprunner,
        @Nullable String appstream,
        @Nullable String appsync,
        @Nullable String athena,
        @Nullable String auditmanager,
        @Nullable String autoscaling,
        @Nullable String backup,
        @Nullable String batch,
        @Nullable String budgets,
        @Nullable String chime,
        @Nullable String cloud9,
        @Nullable String cloudformation,
        @Nullable String cloudfront,
        @Nullable String cloudhsm,
        @Nullable String cloudsearch,
        @Nullable String cloudtrail,
        @Nullable String cloudwatch,
        @Nullable String cloudwatchevents,
        @Nullable String cloudwatchlogs,
        @Nullable String codeartifact,
        @Nullable String codebuild,
        @Nullable String codecommit,
        @Nullable String codedeploy,
        @Nullable String codepipeline,
        @Nullable String codestarconnections,
        @Nullable String cognitoidentity,
        @Nullable String configservice,
        @Nullable String connect,
        @Nullable String cur,
        @Nullable String dataexchange,
        @Nullable String datapipeline,
        @Nullable String datasync,
        @Nullable String dax,
        @Nullable String detective,
        @Nullable String devicefarm,
        @Nullable String directconnect,
        @Nullable String dlm,
        @Nullable String dms,
        @Nullable String docdb,
        @Nullable String ds,
        @Nullable String dynamodb,
        @Nullable String ec2,
        @Nullable String ecr,
        @Nullable String ecrpublic,
        @Nullable String ecs,
        @Nullable String efs,
        @Nullable String eks,
        @Nullable String elasticache,
        @Nullable String elasticbeanstalk,
        @Nullable String elastictranscoder,
        @Nullable String elb,
        @Nullable String elbv2,
        @Nullable String emr,
        @Nullable String emrcontainers,
        @Nullable String es,
        @Nullable String firehose,
        @Nullable String fms,
        @Nullable String forecast,
        @Nullable String fsx,
        @Nullable String gamelift,
        @Nullable String glacier,
        @Nullable String globalaccelerator,
        @Nullable String glue,
        @Nullable String greengrass,
        @Nullable String guardduty,
        @Nullable String iam,
        @Nullable String identitystore,
        @Nullable String imagebuilder,
        @Nullable String inspector,
        @Nullable String iot,
        @Nullable String iotanalytics,
        @Nullable String iotevents,
        @Nullable String kafka,
        @Nullable String kinesis,
        @Nullable String kinesisanalytics,
        @Nullable String kinesisanalyticsv2,
        @Nullable String kinesisvideo,
        @Nullable String kms,
        @Nullable String lakeformation,
        @Nullable String lambda,
        @Nullable String lexmodels,
        @Nullable String licensemanager,
        @Nullable String lightsail,
        @Nullable String location,
        @Nullable String macie,
        @Nullable String macie2,
        @Nullable String managedblockchain,
        @Nullable String marketplacecatalog,
        @Nullable String mediaconnect,
        @Nullable String mediaconvert,
        @Nullable String medialive,
        @Nullable String mediapackage,
        @Nullable String mediastore,
        @Nullable String mediastoredata,
        @Nullable String memorydb,
        @Nullable String mq,
        @Nullable String mwaa,
        @Nullable String neptune,
        @Nullable String networkfirewall,
        @Nullable String networkmanager,
        @Nullable String opsworks,
        @Nullable String organizations,
        @Nullable String outposts,
        @Nullable String personalize,
        @Nullable String pinpoint,
        @Nullable String pricing,
        @Nullable String qldb,
        @Nullable String quicksight,
        @Nullable String ram,
        @Nullable String rds,
        @Nullable String redshift,
        @Nullable String resourcegroups,
        @Nullable String resourcegroupstaggingapi,
        @Nullable String route53,
        @Nullable String route53domains,
        @Nullable String route53recoverycontrolconfig,
        @Nullable String route53recoveryreadiness,
        @Nullable String route53resolver,
        @Nullable String s3,
        @Nullable String s3control,
        @Nullable String s3outposts,
        @Nullable String sagemaker,
        @Nullable String schemas,
        @Nullable String sdb,
        @Nullable String secretsmanager,
        @Nullable String securityhub,
        @Nullable String serverlessrepo,
        @Nullable String servicecatalog,
        @Nullable String servicediscovery,
        @Nullable String servicequotas,
        @Nullable String ses,
        @Nullable String shield,
        @Nullable String signer,
        @Nullable String sns,
        @Nullable String sqs,
        @Nullable String ssm,
        @Nullable String ssoadmin,
        @Nullable String stepfunctions,
        @Nullable String storagegateway,
        @Nullable String sts,
        @Nullable String swf,
        @Nullable String synthetics,
        @Nullable String timestreamwrite,
        @Nullable String transfer,
        @Nullable String waf,
        @Nullable String wafregional,
        @Nullable String wafv2,
        @Nullable String worklink,
        @Nullable String workmail,
        @Nullable String workspaces,
        @Nullable String xray) {
        this.accessanalyzer = accessanalyzer;
        this.acm = acm;
        this.acmpca = acmpca;
        this.amplify = amplify;
        this.appconfig = appconfig;
        this.applicationautoscaling = applicationautoscaling;
        this.applicationinsights = applicationinsights;
        this.appmesh = appmesh;
        this.apprunner = apprunner;
        this.appstream = appstream;
        this.appsync = appsync;
        this.athena = athena;
        this.auditmanager = auditmanager;
        this.autoscaling = autoscaling;
        this.backup = backup;
        this.batch = batch;
        this.budgets = budgets;
        this.chime = chime;
        this.cloud9 = cloud9;
        this.cloudformation = cloudformation;
        this.cloudfront = cloudfront;
        this.cloudhsm = cloudhsm;
        this.cloudsearch = cloudsearch;
        this.cloudtrail = cloudtrail;
        this.cloudwatch = cloudwatch;
        this.cloudwatchevents = cloudwatchevents;
        this.cloudwatchlogs = cloudwatchlogs;
        this.codeartifact = codeartifact;
        this.codebuild = codebuild;
        this.codecommit = codecommit;
        this.codedeploy = codedeploy;
        this.codepipeline = codepipeline;
        this.codestarconnections = codestarconnections;
        this.cognitoidentity = cognitoidentity;
        this.configservice = configservice;
        this.connect = connect;
        this.cur = cur;
        this.dataexchange = dataexchange;
        this.datapipeline = datapipeline;
        this.datasync = datasync;
        this.dax = dax;
        this.detective = detective;
        this.devicefarm = devicefarm;
        this.directconnect = directconnect;
        this.dlm = dlm;
        this.dms = dms;
        this.docdb = docdb;
        this.ds = ds;
        this.dynamodb = dynamodb;
        this.ec2 = ec2;
        this.ecr = ecr;
        this.ecrpublic = ecrpublic;
        this.ecs = ecs;
        this.efs = efs;
        this.eks = eks;
        this.elasticache = elasticache;
        this.elasticbeanstalk = elasticbeanstalk;
        this.elastictranscoder = elastictranscoder;
        this.elb = elb;
        this.elbv2 = elbv2;
        this.emr = emr;
        this.emrcontainers = emrcontainers;
        this.es = es;
        this.firehose = firehose;
        this.fms = fms;
        this.forecast = forecast;
        this.fsx = fsx;
        this.gamelift = gamelift;
        this.glacier = glacier;
        this.globalaccelerator = globalaccelerator;
        this.glue = glue;
        this.greengrass = greengrass;
        this.guardduty = guardduty;
        this.iam = iam;
        this.identitystore = identitystore;
        this.imagebuilder = imagebuilder;
        this.inspector = inspector;
        this.iot = iot;
        this.iotanalytics = iotanalytics;
        this.iotevents = iotevents;
        this.kafka = kafka;
        this.kinesis = kinesis;
        this.kinesisanalytics = kinesisanalytics;
        this.kinesisanalyticsv2 = kinesisanalyticsv2;
        this.kinesisvideo = kinesisvideo;
        this.kms = kms;
        this.lakeformation = lakeformation;
        this.lambda = lambda;
        this.lexmodels = lexmodels;
        this.licensemanager = licensemanager;
        this.lightsail = lightsail;
        this.location = location;
        this.macie = macie;
        this.macie2 = macie2;
        this.managedblockchain = managedblockchain;
        this.marketplacecatalog = marketplacecatalog;
        this.mediaconnect = mediaconnect;
        this.mediaconvert = mediaconvert;
        this.medialive = medialive;
        this.mediapackage = mediapackage;
        this.mediastore = mediastore;
        this.mediastoredata = mediastoredata;
        this.memorydb = memorydb;
        this.mq = mq;
        this.mwaa = mwaa;
        this.neptune = neptune;
        this.networkfirewall = networkfirewall;
        this.networkmanager = networkmanager;
        this.opsworks = opsworks;
        this.organizations = organizations;
        this.outposts = outposts;
        this.personalize = personalize;
        this.pinpoint = pinpoint;
        this.pricing = pricing;
        this.qldb = qldb;
        this.quicksight = quicksight;
        this.ram = ram;
        this.rds = rds;
        this.redshift = redshift;
        this.resourcegroups = resourcegroups;
        this.resourcegroupstaggingapi = resourcegroupstaggingapi;
        this.route53 = route53;
        this.route53domains = route53domains;
        this.route53recoverycontrolconfig = route53recoverycontrolconfig;
        this.route53recoveryreadiness = route53recoveryreadiness;
        this.route53resolver = route53resolver;
        this.s3 = s3;
        this.s3control = s3control;
        this.s3outposts = s3outposts;
        this.sagemaker = sagemaker;
        this.schemas = schemas;
        this.sdb = sdb;
        this.secretsmanager = secretsmanager;
        this.securityhub = securityhub;
        this.serverlessrepo = serverlessrepo;
        this.servicecatalog = servicecatalog;
        this.servicediscovery = servicediscovery;
        this.servicequotas = servicequotas;
        this.ses = ses;
        this.shield = shield;
        this.signer = signer;
        this.sns = sns;
        this.sqs = sqs;
        this.ssm = ssm;
        this.ssoadmin = ssoadmin;
        this.stepfunctions = stepfunctions;
        this.storagegateway = storagegateway;
        this.sts = sts;
        this.swf = swf;
        this.synthetics = synthetics;
        this.timestreamwrite = timestreamwrite;
        this.transfer = transfer;
        this.waf = waf;
        this.wafregional = wafregional;
        this.wafv2 = wafv2;
        this.worklink = worklink;
        this.workmail = workmail;
        this.workspaces = workspaces;
        this.xray = xray;
    }

    private Endpoints() {
        this.accessanalyzer = null;
        this.acm = null;
        this.acmpca = null;
        this.amplify = null;
        this.appconfig = null;
        this.applicationautoscaling = null;
        this.applicationinsights = null;
        this.appmesh = null;
        this.apprunner = null;
        this.appstream = null;
        this.appsync = null;
        this.athena = null;
        this.auditmanager = null;
        this.autoscaling = null;
        this.backup = null;
        this.batch = null;
        this.budgets = null;
        this.chime = null;
        this.cloud9 = null;
        this.cloudformation = null;
        this.cloudfront = null;
        this.cloudhsm = null;
        this.cloudsearch = null;
        this.cloudtrail = null;
        this.cloudwatch = null;
        this.cloudwatchevents = null;
        this.cloudwatchlogs = null;
        this.codeartifact = null;
        this.codebuild = null;
        this.codecommit = null;
        this.codedeploy = null;
        this.codepipeline = null;
        this.codestarconnections = null;
        this.cognitoidentity = null;
        this.configservice = null;
        this.connect = null;
        this.cur = null;
        this.dataexchange = null;
        this.datapipeline = null;
        this.datasync = null;
        this.dax = null;
        this.detective = null;
        this.devicefarm = null;
        this.directconnect = null;
        this.dlm = null;
        this.dms = null;
        this.docdb = null;
        this.ds = null;
        this.dynamodb = null;
        this.ec2 = null;
        this.ecr = null;
        this.ecrpublic = null;
        this.ecs = null;
        this.efs = null;
        this.eks = null;
        this.elasticache = null;
        this.elasticbeanstalk = null;
        this.elastictranscoder = null;
        this.elb = null;
        this.elbv2 = null;
        this.emr = null;
        this.emrcontainers = null;
        this.es = null;
        this.firehose = null;
        this.fms = null;
        this.forecast = null;
        this.fsx = null;
        this.gamelift = null;
        this.glacier = null;
        this.globalaccelerator = null;
        this.glue = null;
        this.greengrass = null;
        this.guardduty = null;
        this.iam = null;
        this.identitystore = null;
        this.imagebuilder = null;
        this.inspector = null;
        this.iot = null;
        this.iotanalytics = null;
        this.iotevents = null;
        this.kafka = null;
        this.kinesis = null;
        this.kinesisanalytics = null;
        this.kinesisanalyticsv2 = null;
        this.kinesisvideo = null;
        this.kms = null;
        this.lakeformation = null;
        this.lambda = null;
        this.lexmodels = null;
        this.licensemanager = null;
        this.lightsail = null;
        this.location = null;
        this.macie = null;
        this.macie2 = null;
        this.managedblockchain = null;
        this.marketplacecatalog = null;
        this.mediaconnect = null;
        this.mediaconvert = null;
        this.medialive = null;
        this.mediapackage = null;
        this.mediastore = null;
        this.mediastoredata = null;
        this.memorydb = null;
        this.mq = null;
        this.mwaa = null;
        this.neptune = null;
        this.networkfirewall = null;
        this.networkmanager = null;
        this.opsworks = null;
        this.organizations = null;
        this.outposts = null;
        this.personalize = null;
        this.pinpoint = null;
        this.pricing = null;
        this.qldb = null;
        this.quicksight = null;
        this.ram = null;
        this.rds = null;
        this.redshift = null;
        this.resourcegroups = null;
        this.resourcegroupstaggingapi = null;
        this.route53 = null;
        this.route53domains = null;
        this.route53recoverycontrolconfig = null;
        this.route53recoveryreadiness = null;
        this.route53resolver = null;
        this.s3 = null;
        this.s3control = null;
        this.s3outposts = null;
        this.sagemaker = null;
        this.schemas = null;
        this.sdb = null;
        this.secretsmanager = null;
        this.securityhub = null;
        this.serverlessrepo = null;
        this.servicecatalog = null;
        this.servicediscovery = null;
        this.servicequotas = null;
        this.ses = null;
        this.shield = null;
        this.signer = null;
        this.sns = null;
        this.sqs = null;
        this.ssm = null;
        this.ssoadmin = null;
        this.stepfunctions = null;
        this.storagegateway = null;
        this.sts = null;
        this.swf = null;
        this.synthetics = null;
        this.timestreamwrite = null;
        this.transfer = null;
        this.waf = null;
        this.wafregional = null;
        this.wafv2 = null;
        this.worklink = null;
        this.workmail = null;
        this.workspaces = null;
        this.xray = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Endpoints defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessanalyzer;
        private @Nullable String acm;
        private @Nullable String acmpca;
        private @Nullable String amplify;
        private @Nullable String appconfig;
        private @Nullable String applicationautoscaling;
        private @Nullable String applicationinsights;
        private @Nullable String appmesh;
        private @Nullable String apprunner;
        private @Nullable String appstream;
        private @Nullable String appsync;
        private @Nullable String athena;
        private @Nullable String auditmanager;
        private @Nullable String autoscaling;
        private @Nullable String backup;
        private @Nullable String batch;
        private @Nullable String budgets;
        private @Nullable String chime;
        private @Nullable String cloud9;
        private @Nullable String cloudformation;
        private @Nullable String cloudfront;
        private @Nullable String cloudhsm;
        private @Nullable String cloudsearch;
        private @Nullable String cloudtrail;
        private @Nullable String cloudwatch;
        private @Nullable String cloudwatchevents;
        private @Nullable String cloudwatchlogs;
        private @Nullable String codeartifact;
        private @Nullable String codebuild;
        private @Nullable String codecommit;
        private @Nullable String codedeploy;
        private @Nullable String codepipeline;
        private @Nullable String codestarconnections;
        private @Nullable String cognitoidentity;
        private @Nullable String configservice;
        private @Nullable String connect;
        private @Nullable String cur;
        private @Nullable String dataexchange;
        private @Nullable String datapipeline;
        private @Nullable String datasync;
        private @Nullable String dax;
        private @Nullable String detective;
        private @Nullable String devicefarm;
        private @Nullable String directconnect;
        private @Nullable String dlm;
        private @Nullable String dms;
        private @Nullable String docdb;
        private @Nullable String ds;
        private @Nullable String dynamodb;
        private @Nullable String ec2;
        private @Nullable String ecr;
        private @Nullable String ecrpublic;
        private @Nullable String ecs;
        private @Nullable String efs;
        private @Nullable String eks;
        private @Nullable String elasticache;
        private @Nullable String elasticbeanstalk;
        private @Nullable String elastictranscoder;
        private @Nullable String elb;
        private @Nullable String elbv2;
        private @Nullable String emr;
        private @Nullable String emrcontainers;
        private @Nullable String es;
        private @Nullable String firehose;
        private @Nullable String fms;
        private @Nullable String forecast;
        private @Nullable String fsx;
        private @Nullable String gamelift;
        private @Nullable String glacier;
        private @Nullable String globalaccelerator;
        private @Nullable String glue;
        private @Nullable String greengrass;
        private @Nullable String guardduty;
        private @Nullable String iam;
        private @Nullable String identitystore;
        private @Nullable String imagebuilder;
        private @Nullable String inspector;
        private @Nullable String iot;
        private @Nullable String iotanalytics;
        private @Nullable String iotevents;
        private @Nullable String kafka;
        private @Nullable String kinesis;
        private @Nullable String kinesisanalytics;
        private @Nullable String kinesisanalyticsv2;
        private @Nullable String kinesisvideo;
        private @Nullable String kms;
        private @Nullable String lakeformation;
        private @Nullable String lambda;
        private @Nullable String lexmodels;
        private @Nullable String licensemanager;
        private @Nullable String lightsail;
        private @Nullable String location;
        private @Nullable String macie;
        private @Nullable String macie2;
        private @Nullable String managedblockchain;
        private @Nullable String marketplacecatalog;
        private @Nullable String mediaconnect;
        private @Nullable String mediaconvert;
        private @Nullable String medialive;
        private @Nullable String mediapackage;
        private @Nullable String mediastore;
        private @Nullable String mediastoredata;
        private @Nullable String memorydb;
        private @Nullable String mq;
        private @Nullable String mwaa;
        private @Nullable String neptune;
        private @Nullable String networkfirewall;
        private @Nullable String networkmanager;
        private @Nullable String opsworks;
        private @Nullable String organizations;
        private @Nullable String outposts;
        private @Nullable String personalize;
        private @Nullable String pinpoint;
        private @Nullable String pricing;
        private @Nullable String qldb;
        private @Nullable String quicksight;
        private @Nullable String ram;
        private @Nullable String rds;
        private @Nullable String redshift;
        private @Nullable String resourcegroups;
        private @Nullable String resourcegroupstaggingapi;
        private @Nullable String route53;
        private @Nullable String route53domains;
        private @Nullable String route53recoverycontrolconfig;
        private @Nullable String route53recoveryreadiness;
        private @Nullable String route53resolver;
        private @Nullable String s3;
        private @Nullable String s3control;
        private @Nullable String s3outposts;
        private @Nullable String sagemaker;
        private @Nullable String schemas;
        private @Nullable String sdb;
        private @Nullable String secretsmanager;
        private @Nullable String securityhub;
        private @Nullable String serverlessrepo;
        private @Nullable String servicecatalog;
        private @Nullable String servicediscovery;
        private @Nullable String servicequotas;
        private @Nullable String ses;
        private @Nullable String shield;
        private @Nullable String signer;
        private @Nullable String sns;
        private @Nullable String sqs;
        private @Nullable String ssm;
        private @Nullable String ssoadmin;
        private @Nullable String stepfunctions;
        private @Nullable String storagegateway;
        private @Nullable String sts;
        private @Nullable String swf;
        private @Nullable String synthetics;
        private @Nullable String timestreamwrite;
        private @Nullable String transfer;
        private @Nullable String waf;
        private @Nullable String wafregional;
        private @Nullable String wafv2;
        private @Nullable String worklink;
        private @Nullable String workmail;
        private @Nullable String workspaces;
        private @Nullable String xray;

        public Builder() {
    	      // Empty
        }

        public Builder(Endpoints defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessanalyzer = defaults.accessanalyzer;
    	      this.acm = defaults.acm;
    	      this.acmpca = defaults.acmpca;
    	      this.amplify = defaults.amplify;
    	      this.appconfig = defaults.appconfig;
    	      this.applicationautoscaling = defaults.applicationautoscaling;
    	      this.applicationinsights = defaults.applicationinsights;
    	      this.appmesh = defaults.appmesh;
    	      this.apprunner = defaults.apprunner;
    	      this.appstream = defaults.appstream;
    	      this.appsync = defaults.appsync;
    	      this.athena = defaults.athena;
    	      this.auditmanager = defaults.auditmanager;
    	      this.autoscaling = defaults.autoscaling;
    	      this.backup = defaults.backup;
    	      this.batch = defaults.batch;
    	      this.budgets = defaults.budgets;
    	      this.chime = defaults.chime;
    	      this.cloud9 = defaults.cloud9;
    	      this.cloudformation = defaults.cloudformation;
    	      this.cloudfront = defaults.cloudfront;
    	      this.cloudhsm = defaults.cloudhsm;
    	      this.cloudsearch = defaults.cloudsearch;
    	      this.cloudtrail = defaults.cloudtrail;
    	      this.cloudwatch = defaults.cloudwatch;
    	      this.cloudwatchevents = defaults.cloudwatchevents;
    	      this.cloudwatchlogs = defaults.cloudwatchlogs;
    	      this.codeartifact = defaults.codeartifact;
    	      this.codebuild = defaults.codebuild;
    	      this.codecommit = defaults.codecommit;
    	      this.codedeploy = defaults.codedeploy;
    	      this.codepipeline = defaults.codepipeline;
    	      this.codestarconnections = defaults.codestarconnections;
    	      this.cognitoidentity = defaults.cognitoidentity;
    	      this.configservice = defaults.configservice;
    	      this.connect = defaults.connect;
    	      this.cur = defaults.cur;
    	      this.dataexchange = defaults.dataexchange;
    	      this.datapipeline = defaults.datapipeline;
    	      this.datasync = defaults.datasync;
    	      this.dax = defaults.dax;
    	      this.detective = defaults.detective;
    	      this.devicefarm = defaults.devicefarm;
    	      this.directconnect = defaults.directconnect;
    	      this.dlm = defaults.dlm;
    	      this.dms = defaults.dms;
    	      this.docdb = defaults.docdb;
    	      this.ds = defaults.ds;
    	      this.dynamodb = defaults.dynamodb;
    	      this.ec2 = defaults.ec2;
    	      this.ecr = defaults.ecr;
    	      this.ecrpublic = defaults.ecrpublic;
    	      this.ecs = defaults.ecs;
    	      this.efs = defaults.efs;
    	      this.eks = defaults.eks;
    	      this.elasticache = defaults.elasticache;
    	      this.elasticbeanstalk = defaults.elasticbeanstalk;
    	      this.elastictranscoder = defaults.elastictranscoder;
    	      this.elb = defaults.elb;
    	      this.elbv2 = defaults.elbv2;
    	      this.emr = defaults.emr;
    	      this.emrcontainers = defaults.emrcontainers;
    	      this.es = defaults.es;
    	      this.firehose = defaults.firehose;
    	      this.fms = defaults.fms;
    	      this.forecast = defaults.forecast;
    	      this.fsx = defaults.fsx;
    	      this.gamelift = defaults.gamelift;
    	      this.glacier = defaults.glacier;
    	      this.globalaccelerator = defaults.globalaccelerator;
    	      this.glue = defaults.glue;
    	      this.greengrass = defaults.greengrass;
    	      this.guardduty = defaults.guardduty;
    	      this.iam = defaults.iam;
    	      this.identitystore = defaults.identitystore;
    	      this.imagebuilder = defaults.imagebuilder;
    	      this.inspector = defaults.inspector;
    	      this.iot = defaults.iot;
    	      this.iotanalytics = defaults.iotanalytics;
    	      this.iotevents = defaults.iotevents;
    	      this.kafka = defaults.kafka;
    	      this.kinesis = defaults.kinesis;
    	      this.kinesisanalytics = defaults.kinesisanalytics;
    	      this.kinesisanalyticsv2 = defaults.kinesisanalyticsv2;
    	      this.kinesisvideo = defaults.kinesisvideo;
    	      this.kms = defaults.kms;
    	      this.lakeformation = defaults.lakeformation;
    	      this.lambda = defaults.lambda;
    	      this.lexmodels = defaults.lexmodels;
    	      this.licensemanager = defaults.licensemanager;
    	      this.lightsail = defaults.lightsail;
    	      this.location = defaults.location;
    	      this.macie = defaults.macie;
    	      this.macie2 = defaults.macie2;
    	      this.managedblockchain = defaults.managedblockchain;
    	      this.marketplacecatalog = defaults.marketplacecatalog;
    	      this.mediaconnect = defaults.mediaconnect;
    	      this.mediaconvert = defaults.mediaconvert;
    	      this.medialive = defaults.medialive;
    	      this.mediapackage = defaults.mediapackage;
    	      this.mediastore = defaults.mediastore;
    	      this.mediastoredata = defaults.mediastoredata;
    	      this.memorydb = defaults.memorydb;
    	      this.mq = defaults.mq;
    	      this.mwaa = defaults.mwaa;
    	      this.neptune = defaults.neptune;
    	      this.networkfirewall = defaults.networkfirewall;
    	      this.networkmanager = defaults.networkmanager;
    	      this.opsworks = defaults.opsworks;
    	      this.organizations = defaults.organizations;
    	      this.outposts = defaults.outposts;
    	      this.personalize = defaults.personalize;
    	      this.pinpoint = defaults.pinpoint;
    	      this.pricing = defaults.pricing;
    	      this.qldb = defaults.qldb;
    	      this.quicksight = defaults.quicksight;
    	      this.ram = defaults.ram;
    	      this.rds = defaults.rds;
    	      this.redshift = defaults.redshift;
    	      this.resourcegroups = defaults.resourcegroups;
    	      this.resourcegroupstaggingapi = defaults.resourcegroupstaggingapi;
    	      this.route53 = defaults.route53;
    	      this.route53domains = defaults.route53domains;
    	      this.route53recoverycontrolconfig = defaults.route53recoverycontrolconfig;
    	      this.route53recoveryreadiness = defaults.route53recoveryreadiness;
    	      this.route53resolver = defaults.route53resolver;
    	      this.s3 = defaults.s3;
    	      this.s3control = defaults.s3control;
    	      this.s3outposts = defaults.s3outposts;
    	      this.sagemaker = defaults.sagemaker;
    	      this.schemas = defaults.schemas;
    	      this.sdb = defaults.sdb;
    	      this.secretsmanager = defaults.secretsmanager;
    	      this.securityhub = defaults.securityhub;
    	      this.serverlessrepo = defaults.serverlessrepo;
    	      this.servicecatalog = defaults.servicecatalog;
    	      this.servicediscovery = defaults.servicediscovery;
    	      this.servicequotas = defaults.servicequotas;
    	      this.ses = defaults.ses;
    	      this.shield = defaults.shield;
    	      this.signer = defaults.signer;
    	      this.sns = defaults.sns;
    	      this.sqs = defaults.sqs;
    	      this.ssm = defaults.ssm;
    	      this.ssoadmin = defaults.ssoadmin;
    	      this.stepfunctions = defaults.stepfunctions;
    	      this.storagegateway = defaults.storagegateway;
    	      this.sts = defaults.sts;
    	      this.swf = defaults.swf;
    	      this.synthetics = defaults.synthetics;
    	      this.timestreamwrite = defaults.timestreamwrite;
    	      this.transfer = defaults.transfer;
    	      this.waf = defaults.waf;
    	      this.wafregional = defaults.wafregional;
    	      this.wafv2 = defaults.wafv2;
    	      this.worklink = defaults.worklink;
    	      this.workmail = defaults.workmail;
    	      this.workspaces = defaults.workspaces;
    	      this.xray = defaults.xray;
        }

        public Builder setAccessanalyzer(@Nullable String accessanalyzer) {
            this.accessanalyzer = accessanalyzer;
            return this;
        }

        public Builder setAcm(@Nullable String acm) {
            this.acm = acm;
            return this;
        }

        public Builder setAcmpca(@Nullable String acmpca) {
            this.acmpca = acmpca;
            return this;
        }

        public Builder setAmplify(@Nullable String amplify) {
            this.amplify = amplify;
            return this;
        }

        public Builder setAppconfig(@Nullable String appconfig) {
            this.appconfig = appconfig;
            return this;
        }

        public Builder setApplicationautoscaling(@Nullable String applicationautoscaling) {
            this.applicationautoscaling = applicationautoscaling;
            return this;
        }

        public Builder setApplicationinsights(@Nullable String applicationinsights) {
            this.applicationinsights = applicationinsights;
            return this;
        }

        public Builder setAppmesh(@Nullable String appmesh) {
            this.appmesh = appmesh;
            return this;
        }

        public Builder setApprunner(@Nullable String apprunner) {
            this.apprunner = apprunner;
            return this;
        }

        public Builder setAppstream(@Nullable String appstream) {
            this.appstream = appstream;
            return this;
        }

        public Builder setAppsync(@Nullable String appsync) {
            this.appsync = appsync;
            return this;
        }

        public Builder setAthena(@Nullable String athena) {
            this.athena = athena;
            return this;
        }

        public Builder setAuditmanager(@Nullable String auditmanager) {
            this.auditmanager = auditmanager;
            return this;
        }

        public Builder setAutoscaling(@Nullable String autoscaling) {
            this.autoscaling = autoscaling;
            return this;
        }

        public Builder setBackup(@Nullable String backup) {
            this.backup = backup;
            return this;
        }

        public Builder setBatch(@Nullable String batch) {
            this.batch = batch;
            return this;
        }

        public Builder setBudgets(@Nullable String budgets) {
            this.budgets = budgets;
            return this;
        }

        public Builder setChime(@Nullable String chime) {
            this.chime = chime;
            return this;
        }

        public Builder setCloud9(@Nullable String cloud9) {
            this.cloud9 = cloud9;
            return this;
        }

        public Builder setCloudformation(@Nullable String cloudformation) {
            this.cloudformation = cloudformation;
            return this;
        }

        public Builder setCloudfront(@Nullable String cloudfront) {
            this.cloudfront = cloudfront;
            return this;
        }

        public Builder setCloudhsm(@Nullable String cloudhsm) {
            this.cloudhsm = cloudhsm;
            return this;
        }

        public Builder setCloudsearch(@Nullable String cloudsearch) {
            this.cloudsearch = cloudsearch;
            return this;
        }

        public Builder setCloudtrail(@Nullable String cloudtrail) {
            this.cloudtrail = cloudtrail;
            return this;
        }

        public Builder setCloudwatch(@Nullable String cloudwatch) {
            this.cloudwatch = cloudwatch;
            return this;
        }

        public Builder setCloudwatchevents(@Nullable String cloudwatchevents) {
            this.cloudwatchevents = cloudwatchevents;
            return this;
        }

        public Builder setCloudwatchlogs(@Nullable String cloudwatchlogs) {
            this.cloudwatchlogs = cloudwatchlogs;
            return this;
        }

        public Builder setCodeartifact(@Nullable String codeartifact) {
            this.codeartifact = codeartifact;
            return this;
        }

        public Builder setCodebuild(@Nullable String codebuild) {
            this.codebuild = codebuild;
            return this;
        }

        public Builder setCodecommit(@Nullable String codecommit) {
            this.codecommit = codecommit;
            return this;
        }

        public Builder setCodedeploy(@Nullable String codedeploy) {
            this.codedeploy = codedeploy;
            return this;
        }

        public Builder setCodepipeline(@Nullable String codepipeline) {
            this.codepipeline = codepipeline;
            return this;
        }

        public Builder setCodestarconnections(@Nullable String codestarconnections) {
            this.codestarconnections = codestarconnections;
            return this;
        }

        public Builder setCognitoidentity(@Nullable String cognitoidentity) {
            this.cognitoidentity = cognitoidentity;
            return this;
        }

        public Builder setConfigservice(@Nullable String configservice) {
            this.configservice = configservice;
            return this;
        }

        public Builder setConnect(@Nullable String connect) {
            this.connect = connect;
            return this;
        }

        public Builder setCur(@Nullable String cur) {
            this.cur = cur;
            return this;
        }

        public Builder setDataexchange(@Nullable String dataexchange) {
            this.dataexchange = dataexchange;
            return this;
        }

        public Builder setDatapipeline(@Nullable String datapipeline) {
            this.datapipeline = datapipeline;
            return this;
        }

        public Builder setDatasync(@Nullable String datasync) {
            this.datasync = datasync;
            return this;
        }

        public Builder setDax(@Nullable String dax) {
            this.dax = dax;
            return this;
        }

        public Builder setDetective(@Nullable String detective) {
            this.detective = detective;
            return this;
        }

        public Builder setDevicefarm(@Nullable String devicefarm) {
            this.devicefarm = devicefarm;
            return this;
        }

        public Builder setDirectconnect(@Nullable String directconnect) {
            this.directconnect = directconnect;
            return this;
        }

        public Builder setDlm(@Nullable String dlm) {
            this.dlm = dlm;
            return this;
        }

        public Builder setDms(@Nullable String dms) {
            this.dms = dms;
            return this;
        }

        public Builder setDocdb(@Nullable String docdb) {
            this.docdb = docdb;
            return this;
        }

        public Builder setDs(@Nullable String ds) {
            this.ds = ds;
            return this;
        }

        public Builder setDynamodb(@Nullable String dynamodb) {
            this.dynamodb = dynamodb;
            return this;
        }

        public Builder setEc2(@Nullable String ec2) {
            this.ec2 = ec2;
            return this;
        }

        public Builder setEcr(@Nullable String ecr) {
            this.ecr = ecr;
            return this;
        }

        public Builder setEcrpublic(@Nullable String ecrpublic) {
            this.ecrpublic = ecrpublic;
            return this;
        }

        public Builder setEcs(@Nullable String ecs) {
            this.ecs = ecs;
            return this;
        }

        public Builder setEfs(@Nullable String efs) {
            this.efs = efs;
            return this;
        }

        public Builder setEks(@Nullable String eks) {
            this.eks = eks;
            return this;
        }

        public Builder setElasticache(@Nullable String elasticache) {
            this.elasticache = elasticache;
            return this;
        }

        public Builder setElasticbeanstalk(@Nullable String elasticbeanstalk) {
            this.elasticbeanstalk = elasticbeanstalk;
            return this;
        }

        public Builder setElastictranscoder(@Nullable String elastictranscoder) {
            this.elastictranscoder = elastictranscoder;
            return this;
        }

        public Builder setElb(@Nullable String elb) {
            this.elb = elb;
            return this;
        }

        public Builder setElbv2(@Nullable String elbv2) {
            this.elbv2 = elbv2;
            return this;
        }

        public Builder setEmr(@Nullable String emr) {
            this.emr = emr;
            return this;
        }

        public Builder setEmrcontainers(@Nullable String emrcontainers) {
            this.emrcontainers = emrcontainers;
            return this;
        }

        public Builder setEs(@Nullable String es) {
            this.es = es;
            return this;
        }

        public Builder setFirehose(@Nullable String firehose) {
            this.firehose = firehose;
            return this;
        }

        public Builder setFms(@Nullable String fms) {
            this.fms = fms;
            return this;
        }

        public Builder setForecast(@Nullable String forecast) {
            this.forecast = forecast;
            return this;
        }

        public Builder setFsx(@Nullable String fsx) {
            this.fsx = fsx;
            return this;
        }

        public Builder setGamelift(@Nullable String gamelift) {
            this.gamelift = gamelift;
            return this;
        }

        public Builder setGlacier(@Nullable String glacier) {
            this.glacier = glacier;
            return this;
        }

        public Builder setGlobalaccelerator(@Nullable String globalaccelerator) {
            this.globalaccelerator = globalaccelerator;
            return this;
        }

        public Builder setGlue(@Nullable String glue) {
            this.glue = glue;
            return this;
        }

        public Builder setGreengrass(@Nullable String greengrass) {
            this.greengrass = greengrass;
            return this;
        }

        public Builder setGuardduty(@Nullable String guardduty) {
            this.guardduty = guardduty;
            return this;
        }

        public Builder setIam(@Nullable String iam) {
            this.iam = iam;
            return this;
        }

        public Builder setIdentitystore(@Nullable String identitystore) {
            this.identitystore = identitystore;
            return this;
        }

        public Builder setImagebuilder(@Nullable String imagebuilder) {
            this.imagebuilder = imagebuilder;
            return this;
        }

        public Builder setInspector(@Nullable String inspector) {
            this.inspector = inspector;
            return this;
        }

        public Builder setIot(@Nullable String iot) {
            this.iot = iot;
            return this;
        }

        public Builder setIotanalytics(@Nullable String iotanalytics) {
            this.iotanalytics = iotanalytics;
            return this;
        }

        public Builder setIotevents(@Nullable String iotevents) {
            this.iotevents = iotevents;
            return this;
        }

        public Builder setKafka(@Nullable String kafka) {
            this.kafka = kafka;
            return this;
        }

        public Builder setKinesis(@Nullable String kinesis) {
            this.kinesis = kinesis;
            return this;
        }

        public Builder setKinesisanalytics(@Nullable String kinesisanalytics) {
            this.kinesisanalytics = kinesisanalytics;
            return this;
        }

        public Builder setKinesisanalyticsv2(@Nullable String kinesisanalyticsv2) {
            this.kinesisanalyticsv2 = kinesisanalyticsv2;
            return this;
        }

        public Builder setKinesisvideo(@Nullable String kinesisvideo) {
            this.kinesisvideo = kinesisvideo;
            return this;
        }

        public Builder setKms(@Nullable String kms) {
            this.kms = kms;
            return this;
        }

        public Builder setLakeformation(@Nullable String lakeformation) {
            this.lakeformation = lakeformation;
            return this;
        }

        public Builder setLambda(@Nullable String lambda) {
            this.lambda = lambda;
            return this;
        }

        public Builder setLexmodels(@Nullable String lexmodels) {
            this.lexmodels = lexmodels;
            return this;
        }

        public Builder setLicensemanager(@Nullable String licensemanager) {
            this.licensemanager = licensemanager;
            return this;
        }

        public Builder setLightsail(@Nullable String lightsail) {
            this.lightsail = lightsail;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setMacie(@Nullable String macie) {
            this.macie = macie;
            return this;
        }

        public Builder setMacie2(@Nullable String macie2) {
            this.macie2 = macie2;
            return this;
        }

        public Builder setManagedblockchain(@Nullable String managedblockchain) {
            this.managedblockchain = managedblockchain;
            return this;
        }

        public Builder setMarketplacecatalog(@Nullable String marketplacecatalog) {
            this.marketplacecatalog = marketplacecatalog;
            return this;
        }

        public Builder setMediaconnect(@Nullable String mediaconnect) {
            this.mediaconnect = mediaconnect;
            return this;
        }

        public Builder setMediaconvert(@Nullable String mediaconvert) {
            this.mediaconvert = mediaconvert;
            return this;
        }

        public Builder setMedialive(@Nullable String medialive) {
            this.medialive = medialive;
            return this;
        }

        public Builder setMediapackage(@Nullable String mediapackage) {
            this.mediapackage = mediapackage;
            return this;
        }

        public Builder setMediastore(@Nullable String mediastore) {
            this.mediastore = mediastore;
            return this;
        }

        public Builder setMediastoredata(@Nullable String mediastoredata) {
            this.mediastoredata = mediastoredata;
            return this;
        }

        public Builder setMemorydb(@Nullable String memorydb) {
            this.memorydb = memorydb;
            return this;
        }

        public Builder setMq(@Nullable String mq) {
            this.mq = mq;
            return this;
        }

        public Builder setMwaa(@Nullable String mwaa) {
            this.mwaa = mwaa;
            return this;
        }

        public Builder setNeptune(@Nullable String neptune) {
            this.neptune = neptune;
            return this;
        }

        public Builder setNetworkfirewall(@Nullable String networkfirewall) {
            this.networkfirewall = networkfirewall;
            return this;
        }

        public Builder setNetworkmanager(@Nullable String networkmanager) {
            this.networkmanager = networkmanager;
            return this;
        }

        public Builder setOpsworks(@Nullable String opsworks) {
            this.opsworks = opsworks;
            return this;
        }

        public Builder setOrganizations(@Nullable String organizations) {
            this.organizations = organizations;
            return this;
        }

        public Builder setOutposts(@Nullable String outposts) {
            this.outposts = outposts;
            return this;
        }

        public Builder setPersonalize(@Nullable String personalize) {
            this.personalize = personalize;
            return this;
        }

        public Builder setPinpoint(@Nullable String pinpoint) {
            this.pinpoint = pinpoint;
            return this;
        }

        public Builder setPricing(@Nullable String pricing) {
            this.pricing = pricing;
            return this;
        }

        public Builder setQldb(@Nullable String qldb) {
            this.qldb = qldb;
            return this;
        }

        public Builder setQuicksight(@Nullable String quicksight) {
            this.quicksight = quicksight;
            return this;
        }

        public Builder setRam(@Nullable String ram) {
            this.ram = ram;
            return this;
        }

        public Builder setRds(@Nullable String rds) {
            this.rds = rds;
            return this;
        }

        public Builder setRedshift(@Nullable String redshift) {
            this.redshift = redshift;
            return this;
        }

        public Builder setResourcegroups(@Nullable String resourcegroups) {
            this.resourcegroups = resourcegroups;
            return this;
        }

        public Builder setResourcegroupstaggingapi(@Nullable String resourcegroupstaggingapi) {
            this.resourcegroupstaggingapi = resourcegroupstaggingapi;
            return this;
        }

        public Builder setRoute53(@Nullable String route53) {
            this.route53 = route53;
            return this;
        }

        public Builder setRoute53domains(@Nullable String route53domains) {
            this.route53domains = route53domains;
            return this;
        }

        public Builder setRoute53recoverycontrolconfig(@Nullable String route53recoverycontrolconfig) {
            this.route53recoverycontrolconfig = route53recoverycontrolconfig;
            return this;
        }

        public Builder setRoute53recoveryreadiness(@Nullable String route53recoveryreadiness) {
            this.route53recoveryreadiness = route53recoveryreadiness;
            return this;
        }

        public Builder setRoute53resolver(@Nullable String route53resolver) {
            this.route53resolver = route53resolver;
            return this;
        }

        public Builder setS3(@Nullable String s3) {
            this.s3 = s3;
            return this;
        }

        public Builder setS3control(@Nullable String s3control) {
            this.s3control = s3control;
            return this;
        }

        public Builder setS3outposts(@Nullable String s3outposts) {
            this.s3outposts = s3outposts;
            return this;
        }

        public Builder setSagemaker(@Nullable String sagemaker) {
            this.sagemaker = sagemaker;
            return this;
        }

        public Builder setSchemas(@Nullable String schemas) {
            this.schemas = schemas;
            return this;
        }

        public Builder setSdb(@Nullable String sdb) {
            this.sdb = sdb;
            return this;
        }

        public Builder setSecretsmanager(@Nullable String secretsmanager) {
            this.secretsmanager = secretsmanager;
            return this;
        }

        public Builder setSecurityhub(@Nullable String securityhub) {
            this.securityhub = securityhub;
            return this;
        }

        public Builder setServerlessrepo(@Nullable String serverlessrepo) {
            this.serverlessrepo = serverlessrepo;
            return this;
        }

        public Builder setServicecatalog(@Nullable String servicecatalog) {
            this.servicecatalog = servicecatalog;
            return this;
        }

        public Builder setServicediscovery(@Nullable String servicediscovery) {
            this.servicediscovery = servicediscovery;
            return this;
        }

        public Builder setServicequotas(@Nullable String servicequotas) {
            this.servicequotas = servicequotas;
            return this;
        }

        public Builder setSes(@Nullable String ses) {
            this.ses = ses;
            return this;
        }

        public Builder setShield(@Nullable String shield) {
            this.shield = shield;
            return this;
        }

        public Builder setSigner(@Nullable String signer) {
            this.signer = signer;
            return this;
        }

        public Builder setSns(@Nullable String sns) {
            this.sns = sns;
            return this;
        }

        public Builder setSqs(@Nullable String sqs) {
            this.sqs = sqs;
            return this;
        }

        public Builder setSsm(@Nullable String ssm) {
            this.ssm = ssm;
            return this;
        }

        public Builder setSsoadmin(@Nullable String ssoadmin) {
            this.ssoadmin = ssoadmin;
            return this;
        }

        public Builder setStepfunctions(@Nullable String stepfunctions) {
            this.stepfunctions = stepfunctions;
            return this;
        }

        public Builder setStoragegateway(@Nullable String storagegateway) {
            this.storagegateway = storagegateway;
            return this;
        }

        public Builder setSts(@Nullable String sts) {
            this.sts = sts;
            return this;
        }

        public Builder setSwf(@Nullable String swf) {
            this.swf = swf;
            return this;
        }

        public Builder setSynthetics(@Nullable String synthetics) {
            this.synthetics = synthetics;
            return this;
        }

        public Builder setTimestreamwrite(@Nullable String timestreamwrite) {
            this.timestreamwrite = timestreamwrite;
            return this;
        }

        public Builder setTransfer(@Nullable String transfer) {
            this.transfer = transfer;
            return this;
        }

        public Builder setWaf(@Nullable String waf) {
            this.waf = waf;
            return this;
        }

        public Builder setWafregional(@Nullable String wafregional) {
            this.wafregional = wafregional;
            return this;
        }

        public Builder setWafv2(@Nullable String wafv2) {
            this.wafv2 = wafv2;
            return this;
        }

        public Builder setWorklink(@Nullable String worklink) {
            this.worklink = worklink;
            return this;
        }

        public Builder setWorkmail(@Nullable String workmail) {
            this.workmail = workmail;
            return this;
        }

        public Builder setWorkspaces(@Nullable String workspaces) {
            this.workspaces = workspaces;
            return this;
        }

        public Builder setXray(@Nullable String xray) {
            this.xray = xray;
            return this;
        }

        public Endpoints build() {
            return new Endpoints(accessanalyzer, acm, acmpca, amplify, appconfig, applicationautoscaling, applicationinsights, appmesh, apprunner, appstream, appsync, athena, auditmanager, autoscaling, backup, batch, budgets, chime, cloud9, cloudformation, cloudfront, cloudhsm, cloudsearch, cloudtrail, cloudwatch, cloudwatchevents, cloudwatchlogs, codeartifact, codebuild, codecommit, codedeploy, codepipeline, codestarconnections, cognitoidentity, configservice, connect, cur, dataexchange, datapipeline, datasync, dax, detective, devicefarm, directconnect, dlm, dms, docdb, ds, dynamodb, ec2, ecr, ecrpublic, ecs, efs, eks, elasticache, elasticbeanstalk, elastictranscoder, elb, elbv2, emr, emrcontainers, es, firehose, fms, forecast, fsx, gamelift, glacier, globalaccelerator, glue, greengrass, guardduty, iam, identitystore, imagebuilder, inspector, iot, iotanalytics, iotevents, kafka, kinesis, kinesisanalytics, kinesisanalyticsv2, kinesisvideo, kms, lakeformation, lambda, lexmodels, licensemanager, lightsail, location, macie, macie2, managedblockchain, marketplacecatalog, mediaconnect, mediaconvert, medialive, mediapackage, mediastore, mediastoredata, memorydb, mq, mwaa, neptune, networkfirewall, networkmanager, opsworks, organizations, outposts, personalize, pinpoint, pricing, qldb, quicksight, ram, rds, redshift, resourcegroups, resourcegroupstaggingapi, route53, route53domains, route53recoverycontrolconfig, route53recoveryreadiness, route53resolver, s3, s3control, s3outposts, sagemaker, schemas, sdb, secretsmanager, securityhub, serverlessrepo, servicecatalog, servicediscovery, servicequotas, ses, shield, signer, sns, sqs, ssm, ssoadmin, stepfunctions, storagegateway, sts, swf, synthetics, timestreamwrite, transfer, waf, wafregional, wafv2, worklink, workmail, workspaces, xray);
        }
    }
}
