// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.events.inputs;

import io.pulumi.awsnative.events.enums.ConnectionOAuthParametersHttpMethod;
import io.pulumi.awsnative.events.inputs.ConnectionClientParametersArgs;
import io.pulumi.awsnative.events.inputs.ConnectionHttpParametersArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConnectionOAuthParametersArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConnectionOAuthParametersArgs Empty = new ConnectionOAuthParametersArgs();

    @Import(name="authorizationEndpoint", required=true)
      private final Output<String> authorizationEndpoint;

    public Output<String> getAuthorizationEndpoint() {
        return this.authorizationEndpoint;
    }

    @Import(name="clientParameters", required=true)
      private final Output<ConnectionClientParametersArgs> clientParameters;

    public Output<ConnectionClientParametersArgs> getClientParameters() {
        return this.clientParameters;
    }

    @Import(name="httpMethod", required=true)
      private final Output<ConnectionOAuthParametersHttpMethod> httpMethod;

    public Output<ConnectionOAuthParametersHttpMethod> getHttpMethod() {
        return this.httpMethod;
    }

    @Import(name="oAuthHttpParameters")
      private final @Nullable Output<ConnectionHttpParametersArgs> oAuthHttpParameters;

    public Output<ConnectionHttpParametersArgs> getOAuthHttpParameters() {
        return this.oAuthHttpParameters == null ? Codegen.empty() : this.oAuthHttpParameters;
    }

    public ConnectionOAuthParametersArgs(
        Output<String> authorizationEndpoint,
        Output<ConnectionClientParametersArgs> clientParameters,
        Output<ConnectionOAuthParametersHttpMethod> httpMethod,
        @Nullable Output<ConnectionHttpParametersArgs> oAuthHttpParameters) {
        this.authorizationEndpoint = Objects.requireNonNull(authorizationEndpoint, "expected parameter 'authorizationEndpoint' to be non-null");
        this.clientParameters = Objects.requireNonNull(clientParameters, "expected parameter 'clientParameters' to be non-null");
        this.httpMethod = Objects.requireNonNull(httpMethod, "expected parameter 'httpMethod' to be non-null");
        this.oAuthHttpParameters = oAuthHttpParameters;
    }

    private ConnectionOAuthParametersArgs() {
        this.authorizationEndpoint = Codegen.empty();
        this.clientParameters = Codegen.empty();
        this.httpMethod = Codegen.empty();
        this.oAuthHttpParameters = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionOAuthParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> authorizationEndpoint;
        private Output<ConnectionClientParametersArgs> clientParameters;
        private Output<ConnectionOAuthParametersHttpMethod> httpMethod;
        private @Nullable Output<ConnectionHttpParametersArgs> oAuthHttpParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionOAuthParametersArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationEndpoint = defaults.authorizationEndpoint;
    	      this.clientParameters = defaults.clientParameters;
    	      this.httpMethod = defaults.httpMethod;
    	      this.oAuthHttpParameters = defaults.oAuthHttpParameters;
        }

        public Builder authorizationEndpoint(Output<String> authorizationEndpoint) {
            this.authorizationEndpoint = Objects.requireNonNull(authorizationEndpoint);
            return this;
        }
        public Builder authorizationEndpoint(String authorizationEndpoint) {
            this.authorizationEndpoint = Output.of(Objects.requireNonNull(authorizationEndpoint));
            return this;
        }
        public Builder clientParameters(Output<ConnectionClientParametersArgs> clientParameters) {
            this.clientParameters = Objects.requireNonNull(clientParameters);
            return this;
        }
        public Builder clientParameters(ConnectionClientParametersArgs clientParameters) {
            this.clientParameters = Output.of(Objects.requireNonNull(clientParameters));
            return this;
        }
        public Builder httpMethod(Output<ConnectionOAuthParametersHttpMethod> httpMethod) {
            this.httpMethod = Objects.requireNonNull(httpMethod);
            return this;
        }
        public Builder httpMethod(ConnectionOAuthParametersHttpMethod httpMethod) {
            this.httpMethod = Output.of(Objects.requireNonNull(httpMethod));
            return this;
        }
        public Builder oAuthHttpParameters(@Nullable Output<ConnectionHttpParametersArgs> oAuthHttpParameters) {
            this.oAuthHttpParameters = oAuthHttpParameters;
            return this;
        }
        public Builder oAuthHttpParameters(@Nullable ConnectionHttpParametersArgs oAuthHttpParameters) {
            this.oAuthHttpParameters = Codegen.ofNullable(oAuthHttpParameters);
            return this;
        }        public ConnectionOAuthParametersArgs build() {
            return new ConnectionOAuthParametersArgs(authorizationEndpoint, clientParameters, httpMethod, oAuthHttpParameters);
        }
    }
}
