// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediaconnect;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.mediaconnect.FlowSourceArgs;
import io.pulumi.awsnative.mediaconnect.enums.FlowSourceProtocol;
import io.pulumi.awsnative.mediaconnect.outputs.FlowSourceEncryption;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::MediaConnect::FlowSource
 * 
 */
@ResourceType(type="aws-native:mediaconnect:FlowSource")
public class FlowSource extends io.pulumi.resources.CustomResource {
    /**
     * The type of encryption that is used on the content ingested from this source.
     * 
     */
    @Export(name="decryption", type=FlowSourceEncryption.class, parameters={})
    private Output</* @Nullable */ FlowSourceEncryption> decryption;

    /**
     * @return The type of encryption that is used on the content ingested from this source.
     * 
     */
    public Output</* @Nullable */ FlowSourceEncryption> getDecryption() {
        return this.decryption;
    }
    /**
     * A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
     * 
     */
    public Output<String> getDescription() {
        return this.description;
    }
    /**
     * The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.
     * 
     */
    @Export(name="entitlementArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> entitlementArn;

    /**
     * @return The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.
     * 
     */
    public Output</* @Nullable */ String> getEntitlementArn() {
        return this.entitlementArn;
    }
    /**
     * The ARN of the flow.
     * 
     */
    @Export(name="flowArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> flowArn;

    /**
     * @return The ARN of the flow.
     * 
     */
    public Output</* @Nullable */ String> getFlowArn() {
        return this.flowArn;
    }
    /**
     * The IP address that the flow will be listening on for incoming content.
     * 
     */
    @Export(name="ingestIp", type=String.class, parameters={})
    private Output<String> ingestIp;

    /**
     * @return The IP address that the flow will be listening on for incoming content.
     * 
     */
    public Output<String> getIngestIp() {
        return this.ingestIp;
    }
    /**
     * The port that the flow will be listening on for incoming content.
     * 
     */
    @Export(name="ingestPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> ingestPort;

    /**
     * @return The port that the flow will be listening on for incoming content.
     * 
     */
    public Output</* @Nullable */ Integer> getIngestPort() {
        return this.ingestPort;
    }
    /**
     * The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
     * 
     */
    @Export(name="maxBitrate", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxBitrate;

    /**
     * @return The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
     * 
     */
    public Output</* @Nullable */ Integer> getMaxBitrate() {
        return this.maxBitrate;
    }
    /**
     * The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
     * 
     */
    @Export(name="maxLatency", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxLatency;

    /**
     * @return The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
     * 
     */
    public Output</* @Nullable */ Integer> getMaxLatency() {
        return this.maxLatency;
    }
    /**
     * The name of the source.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the source.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The protocol that is used by the source.
     * 
     */
    @Export(name="protocol", type=FlowSourceProtocol.class, parameters={})
    private Output</* @Nullable */ FlowSourceProtocol> protocol;

    /**
     * @return The protocol that is used by the source.
     * 
     */
    public Output</* @Nullable */ FlowSourceProtocol> getProtocol() {
        return this.protocol;
    }
    /**
     * The ARN of the source.
     * 
     */
    @Export(name="sourceArn", type=String.class, parameters={})
    private Output<String> sourceArn;

    /**
     * @return The ARN of the source.
     * 
     */
    public Output<String> getSourceArn() {
        return this.sourceArn;
    }
    /**
     * The port that the flow will be listening on for incoming content.(ReadOnly)
     * 
     */
    @Export(name="sourceIngestPort", type=String.class, parameters={})
    private Output<String> sourceIngestPort;

    /**
     * @return The port that the flow will be listening on for incoming content.(ReadOnly)
     * 
     */
    public Output<String> getSourceIngestPort() {
        return this.sourceIngestPort;
    }
    /**
     * The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
     * 
     */
    @Export(name="streamId", type=String.class, parameters={})
    private Output</* @Nullable */ String> streamId;

    /**
     * @return The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
     * 
     */
    public Output</* @Nullable */ String> getStreamId() {
        return this.streamId;
    }
    /**
     * The name of the VPC Interface this Source is configured with.
     * 
     */
    @Export(name="vpcInterfaceName", type=String.class, parameters={})
    private Output</* @Nullable */ String> vpcInterfaceName;

    /**
     * @return The name of the VPC Interface this Source is configured with.
     * 
     */
    public Output</* @Nullable */ String> getVpcInterfaceName() {
        return this.vpcInterfaceName;
    }
    /**
     * The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
     * 
     */
    @Export(name="whitelistCidr", type=String.class, parameters={})
    private Output</* @Nullable */ String> whitelistCidr;

    /**
     * @return The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
     * 
     */
    public Output</* @Nullable */ String> getWhitelistCidr() {
        return this.whitelistCidr;
    }

    public interface BuilderApplicator {
        public void apply(FlowSourceArgs.Builder a);
    }
    private static io.pulumi.awsnative.mediaconnect.FlowSourceArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.awsnative.mediaconnect.FlowSourceArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public FlowSource(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlowSource(String name) {
        this(name, FlowSourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlowSource(String name, FlowSourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlowSource(String name, FlowSourceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:mediaconnect:FlowSource", name, args == null ? FlowSourceArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private FlowSource(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:mediaconnect:FlowSource", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlowSource get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new FlowSource(name, id, options);
    }
}
