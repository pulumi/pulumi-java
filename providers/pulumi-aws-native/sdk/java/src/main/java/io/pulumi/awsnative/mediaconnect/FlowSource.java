// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.mediaconnect;

import io.pulumi.awsnative.Utilities;
import io.pulumi.awsnative.mediaconnect.FlowSourceArgs;
import io.pulumi.awsnative.mediaconnect.enums.FlowSourceProtocol;
import io.pulumi.awsnative.mediaconnect.outputs.FlowSourceEncryption;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="aws-native:mediaconnect:FlowSource")
public class FlowSource extends io.pulumi.resources.CustomResource {
    @OutputExport(name="decryption", type=FlowSourceEncryption.class, parameters={})
    private Output</* @Nullable */ FlowSourceEncryption> decryption;

    public Output</* @Nullable */ FlowSourceEncryption> getDecryption() {
        return this.decryption;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output<String> description;

    public Output<String> getDescription() {
        return this.description;
    }
    @OutputExport(name="entitlementArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> entitlementArn;

    public Output</* @Nullable */ String> getEntitlementArn() {
        return this.entitlementArn;
    }
    @OutputExport(name="flowArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> flowArn;

    public Output</* @Nullable */ String> getFlowArn() {
        return this.flowArn;
    }
    @OutputExport(name="ingestIp", type=String.class, parameters={})
    private Output<String> ingestIp;

    public Output<String> getIngestIp() {
        return this.ingestIp;
    }
    @OutputExport(name="ingestPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> ingestPort;

    public Output</* @Nullable */ Integer> getIngestPort() {
        return this.ingestPort;
    }
    @OutputExport(name="maxBitrate", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxBitrate;

    public Output</* @Nullable */ Integer> getMaxBitrate() {
        return this.maxBitrate;
    }
    @OutputExport(name="maxLatency", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxLatency;

    public Output</* @Nullable */ Integer> getMaxLatency() {
        return this.maxLatency;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="protocol", type=FlowSourceProtocol.class, parameters={})
    private Output</* @Nullable */ FlowSourceProtocol> protocol;

    public Output</* @Nullable */ FlowSourceProtocol> getProtocol() {
        return this.protocol;
    }
    @OutputExport(name="sourceArn", type=String.class, parameters={})
    private Output<String> sourceArn;

    public Output<String> getSourceArn() {
        return this.sourceArn;
    }
    @OutputExport(name="sourceIngestPort", type=String.class, parameters={})
    private Output<String> sourceIngestPort;

    public Output<String> getSourceIngestPort() {
        return this.sourceIngestPort;
    }
    @OutputExport(name="streamId", type=String.class, parameters={})
    private Output</* @Nullable */ String> streamId;

    public Output</* @Nullable */ String> getStreamId() {
        return this.streamId;
    }
    @OutputExport(name="vpcInterfaceName", type=String.class, parameters={})
    private Output</* @Nullable */ String> vpcInterfaceName;

    public Output</* @Nullable */ String> getVpcInterfaceName() {
        return this.vpcInterfaceName;
    }
    @OutputExport(name="whitelistCidr", type=String.class, parameters={})
    private Output</* @Nullable */ String> whitelistCidr;

    public Output</* @Nullable */ String> getWhitelistCidr() {
        return this.whitelistCidr;
    }

    public FlowSource(String name, FlowSourceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:mediaconnect:FlowSource", name, args == null ? FlowSourceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private FlowSource(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:mediaconnect:FlowSource", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static FlowSource get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new FlowSource(name, id, options);
    }
}
