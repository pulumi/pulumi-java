// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.awsnative.cloudfront.inputs;

import io.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyAccessControlAllowHeadersArgs;
import io.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyAccessControlAllowMethodsArgs;
import io.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyAccessControlAllowOriginsArgs;
import io.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyAccessControlExposeHeadersArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResponseHeadersPolicyCorsConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResponseHeadersPolicyCorsConfigArgs Empty = new ResponseHeadersPolicyCorsConfigArgs();

    @InputImport(name="accessControlAllowCredentials", required=true)
      private final Output<Boolean> accessControlAllowCredentials;

    public Output<Boolean> getAccessControlAllowCredentials() {
        return this.accessControlAllowCredentials;
    }

    @InputImport(name="accessControlAllowHeaders", required=true)
      private final Output<ResponseHeadersPolicyAccessControlAllowHeadersArgs> accessControlAllowHeaders;

    public Output<ResponseHeadersPolicyAccessControlAllowHeadersArgs> getAccessControlAllowHeaders() {
        return this.accessControlAllowHeaders;
    }

    @InputImport(name="accessControlAllowMethods", required=true)
      private final Output<ResponseHeadersPolicyAccessControlAllowMethodsArgs> accessControlAllowMethods;

    public Output<ResponseHeadersPolicyAccessControlAllowMethodsArgs> getAccessControlAllowMethods() {
        return this.accessControlAllowMethods;
    }

    @InputImport(name="accessControlAllowOrigins", required=true)
      private final Output<ResponseHeadersPolicyAccessControlAllowOriginsArgs> accessControlAllowOrigins;

    public Output<ResponseHeadersPolicyAccessControlAllowOriginsArgs> getAccessControlAllowOrigins() {
        return this.accessControlAllowOrigins;
    }

    @InputImport(name="accessControlExposeHeaders")
      private final @Nullable Output<ResponseHeadersPolicyAccessControlExposeHeadersArgs> accessControlExposeHeaders;

    public Output<ResponseHeadersPolicyAccessControlExposeHeadersArgs> getAccessControlExposeHeaders() {
        return this.accessControlExposeHeaders == null ? Output.empty() : this.accessControlExposeHeaders;
    }

    @InputImport(name="accessControlMaxAgeSec")
      private final @Nullable Output<Integer> accessControlMaxAgeSec;

    public Output<Integer> getAccessControlMaxAgeSec() {
        return this.accessControlMaxAgeSec == null ? Output.empty() : this.accessControlMaxAgeSec;
    }

    @InputImport(name="originOverride", required=true)
      private final Output<Boolean> originOverride;

    public Output<Boolean> getOriginOverride() {
        return this.originOverride;
    }

    public ResponseHeadersPolicyCorsConfigArgs(
        Output<Boolean> accessControlAllowCredentials,
        Output<ResponseHeadersPolicyAccessControlAllowHeadersArgs> accessControlAllowHeaders,
        Output<ResponseHeadersPolicyAccessControlAllowMethodsArgs> accessControlAllowMethods,
        Output<ResponseHeadersPolicyAccessControlAllowOriginsArgs> accessControlAllowOrigins,
        @Nullable Output<ResponseHeadersPolicyAccessControlExposeHeadersArgs> accessControlExposeHeaders,
        @Nullable Output<Integer> accessControlMaxAgeSec,
        Output<Boolean> originOverride) {
        this.accessControlAllowCredentials = Objects.requireNonNull(accessControlAllowCredentials, "expected parameter 'accessControlAllowCredentials' to be non-null");
        this.accessControlAllowHeaders = Objects.requireNonNull(accessControlAllowHeaders, "expected parameter 'accessControlAllowHeaders' to be non-null");
        this.accessControlAllowMethods = Objects.requireNonNull(accessControlAllowMethods, "expected parameter 'accessControlAllowMethods' to be non-null");
        this.accessControlAllowOrigins = Objects.requireNonNull(accessControlAllowOrigins, "expected parameter 'accessControlAllowOrigins' to be non-null");
        this.accessControlExposeHeaders = accessControlExposeHeaders;
        this.accessControlMaxAgeSec = accessControlMaxAgeSec;
        this.originOverride = Objects.requireNonNull(originOverride, "expected parameter 'originOverride' to be non-null");
    }

    private ResponseHeadersPolicyCorsConfigArgs() {
        this.accessControlAllowCredentials = Output.empty();
        this.accessControlAllowHeaders = Output.empty();
        this.accessControlAllowMethods = Output.empty();
        this.accessControlAllowOrigins = Output.empty();
        this.accessControlExposeHeaders = Output.empty();
        this.accessControlMaxAgeSec = Output.empty();
        this.originOverride = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResponseHeadersPolicyCorsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> accessControlAllowCredentials;
        private Output<ResponseHeadersPolicyAccessControlAllowHeadersArgs> accessControlAllowHeaders;
        private Output<ResponseHeadersPolicyAccessControlAllowMethodsArgs> accessControlAllowMethods;
        private Output<ResponseHeadersPolicyAccessControlAllowOriginsArgs> accessControlAllowOrigins;
        private @Nullable Output<ResponseHeadersPolicyAccessControlExposeHeadersArgs> accessControlExposeHeaders;
        private @Nullable Output<Integer> accessControlMaxAgeSec;
        private Output<Boolean> originOverride;

        public Builder() {
    	      // Empty
        }

        public Builder(ResponseHeadersPolicyCorsConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlAllowCredentials = defaults.accessControlAllowCredentials;
    	      this.accessControlAllowHeaders = defaults.accessControlAllowHeaders;
    	      this.accessControlAllowMethods = defaults.accessControlAllowMethods;
    	      this.accessControlAllowOrigins = defaults.accessControlAllowOrigins;
    	      this.accessControlExposeHeaders = defaults.accessControlExposeHeaders;
    	      this.accessControlMaxAgeSec = defaults.accessControlMaxAgeSec;
    	      this.originOverride = defaults.originOverride;
        }

        public Builder accessControlAllowCredentials(Output<Boolean> accessControlAllowCredentials) {
            this.accessControlAllowCredentials = Objects.requireNonNull(accessControlAllowCredentials);
            return this;
        }

        public Builder accessControlAllowCredentials(Boolean accessControlAllowCredentials) {
            this.accessControlAllowCredentials = Output.of(Objects.requireNonNull(accessControlAllowCredentials));
            return this;
        }

        public Builder accessControlAllowHeaders(Output<ResponseHeadersPolicyAccessControlAllowHeadersArgs> accessControlAllowHeaders) {
            this.accessControlAllowHeaders = Objects.requireNonNull(accessControlAllowHeaders);
            return this;
        }

        public Builder accessControlAllowHeaders(ResponseHeadersPolicyAccessControlAllowHeadersArgs accessControlAllowHeaders) {
            this.accessControlAllowHeaders = Output.of(Objects.requireNonNull(accessControlAllowHeaders));
            return this;
        }

        public Builder accessControlAllowMethods(Output<ResponseHeadersPolicyAccessControlAllowMethodsArgs> accessControlAllowMethods) {
            this.accessControlAllowMethods = Objects.requireNonNull(accessControlAllowMethods);
            return this;
        }

        public Builder accessControlAllowMethods(ResponseHeadersPolicyAccessControlAllowMethodsArgs accessControlAllowMethods) {
            this.accessControlAllowMethods = Output.of(Objects.requireNonNull(accessControlAllowMethods));
            return this;
        }

        public Builder accessControlAllowOrigins(Output<ResponseHeadersPolicyAccessControlAllowOriginsArgs> accessControlAllowOrigins) {
            this.accessControlAllowOrigins = Objects.requireNonNull(accessControlAllowOrigins);
            return this;
        }

        public Builder accessControlAllowOrigins(ResponseHeadersPolicyAccessControlAllowOriginsArgs accessControlAllowOrigins) {
            this.accessControlAllowOrigins = Output.of(Objects.requireNonNull(accessControlAllowOrigins));
            return this;
        }

        public Builder accessControlExposeHeaders(@Nullable Output<ResponseHeadersPolicyAccessControlExposeHeadersArgs> accessControlExposeHeaders) {
            this.accessControlExposeHeaders = accessControlExposeHeaders;
            return this;
        }

        public Builder accessControlExposeHeaders(@Nullable ResponseHeadersPolicyAccessControlExposeHeadersArgs accessControlExposeHeaders) {
            this.accessControlExposeHeaders = Output.ofNullable(accessControlExposeHeaders);
            return this;
        }

        public Builder accessControlMaxAgeSec(@Nullable Output<Integer> accessControlMaxAgeSec) {
            this.accessControlMaxAgeSec = accessControlMaxAgeSec;
            return this;
        }

        public Builder accessControlMaxAgeSec(@Nullable Integer accessControlMaxAgeSec) {
            this.accessControlMaxAgeSec = Output.ofNullable(accessControlMaxAgeSec);
            return this;
        }

        public Builder originOverride(Output<Boolean> originOverride) {
            this.originOverride = Objects.requireNonNull(originOverride);
            return this;
        }

        public Builder originOverride(Boolean originOverride) {
            this.originOverride = Output.of(Objects.requireNonNull(originOverride));
            return this;
        }
        public ResponseHeadersPolicyCorsConfigArgs build() {
            return new ResponseHeadersPolicyCorsConfigArgs(accessControlAllowCredentials, accessControlAllowHeaders, accessControlAllowMethods, accessControlAllowOrigins, accessControlExposeHeaders, accessControlMaxAgeSec, originOverride);
        }
    }
}
