// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.outputs;

import com.pulumi.awsnative.databrew.outputs.DatasetParameter;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DatasetPathParameter {
    private final DatasetParameter datasetParameter;
    private final String pathParameterName;

    @CustomType.Constructor
    private DatasetPathParameter(
        @CustomType.Parameter("datasetParameter") DatasetParameter datasetParameter,
        @CustomType.Parameter("pathParameterName") String pathParameterName) {
        this.datasetParameter = datasetParameter;
        this.pathParameterName = pathParameterName;
    }

    public DatasetParameter datasetParameter() {
        return this.datasetParameter;
    }
    public String pathParameterName() {
        return this.pathParameterName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetPathParameter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetParameter datasetParameter;
        private String pathParameterName;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetPathParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetParameter = defaults.datasetParameter;
    	      this.pathParameterName = defaults.pathParameterName;
        }

        public Builder datasetParameter(DatasetParameter datasetParameter) {
            this.datasetParameter = Objects.requireNonNull(datasetParameter);
            return this;
        }
        public Builder pathParameterName(String pathParameterName) {
            this.pathParameterName = Objects.requireNonNull(pathParameterName);
            return this;
        }        public DatasetPathParameter build() {
            return new DatasetPathParameter(datasetParameter, pathParameterName);
        }
    }
}
