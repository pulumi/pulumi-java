// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.gamelift.inputs;

import com.pulumi.awsnative.gamelift.inputs.GameServerGroupTargetTrackingConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
 * 
 */
public final class GameServerGroupAutoScalingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final GameServerGroupAutoScalingPolicyArgs Empty = new GameServerGroupAutoScalingPolicyArgs();

    @Import(name="estimatedInstanceWarmup")
      private final @Nullable Output<Double> estimatedInstanceWarmup;

    public Output<Double> estimatedInstanceWarmup() {
        return this.estimatedInstanceWarmup == null ? Codegen.empty() : this.estimatedInstanceWarmup;
    }

    @Import(name="targetTrackingConfiguration", required=true)
      private final Output<GameServerGroupTargetTrackingConfigurationArgs> targetTrackingConfiguration;

    public Output<GameServerGroupTargetTrackingConfigurationArgs> targetTrackingConfiguration() {
        return this.targetTrackingConfiguration;
    }

    public GameServerGroupAutoScalingPolicyArgs(
        @Nullable Output<Double> estimatedInstanceWarmup,
        Output<GameServerGroupTargetTrackingConfigurationArgs> targetTrackingConfiguration) {
        this.estimatedInstanceWarmup = estimatedInstanceWarmup;
        this.targetTrackingConfiguration = Objects.requireNonNull(targetTrackingConfiguration, "expected parameter 'targetTrackingConfiguration' to be non-null");
    }

    private GameServerGroupAutoScalingPolicyArgs() {
        this.estimatedInstanceWarmup = Codegen.empty();
        this.targetTrackingConfiguration = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GameServerGroupAutoScalingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Double> estimatedInstanceWarmup;
        private Output<GameServerGroupTargetTrackingConfigurationArgs> targetTrackingConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(GameServerGroupAutoScalingPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.estimatedInstanceWarmup = defaults.estimatedInstanceWarmup;
    	      this.targetTrackingConfiguration = defaults.targetTrackingConfiguration;
        }

        public Builder estimatedInstanceWarmup(@Nullable Output<Double> estimatedInstanceWarmup) {
            this.estimatedInstanceWarmup = estimatedInstanceWarmup;
            return this;
        }
        public Builder estimatedInstanceWarmup(@Nullable Double estimatedInstanceWarmup) {
            this.estimatedInstanceWarmup = Codegen.ofNullable(estimatedInstanceWarmup);
            return this;
        }
        public Builder targetTrackingConfiguration(Output<GameServerGroupTargetTrackingConfigurationArgs> targetTrackingConfiguration) {
            this.targetTrackingConfiguration = Objects.requireNonNull(targetTrackingConfiguration);
            return this;
        }
        public Builder targetTrackingConfiguration(GameServerGroupTargetTrackingConfigurationArgs targetTrackingConfiguration) {
            this.targetTrackingConfiguration = Output.of(Objects.requireNonNull(targetTrackingConfiguration));
            return this;
        }        public GameServerGroupAutoScalingPolicyArgs build() {
            return new GameServerGroupAutoScalingPolicyArgs(estimatedInstanceWarmup, targetTrackingConfiguration);
        }
    }
}
