// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketCorsRuleAllowedMethodsItem;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
 * 
 */
public final class BucketCorsRule extends com.pulumi.resources.InvokeArgs {

    public static final BucketCorsRule Empty = new BucketCorsRule();

    /**
     * Headers that are specified in the Access-Control-Request-Headers header.
     * 
     */
    @Import(name="allowedHeaders")
    private @Nullable List<String> allowedHeaders;

    public Optional<List<String>> allowedHeaders() {
        return Optional.ofNullable(this.allowedHeaders);
    }

    /**
     * An HTTP method that you allow the origin to execute.
     * 
     */
    @Import(name="allowedMethods", required=true)
    private List<BucketCorsRuleAllowedMethodsItem> allowedMethods;

    public List<BucketCorsRuleAllowedMethodsItem> allowedMethods() {
        return this.allowedMethods;
    }

    /**
     * One or more origins you want customers to be able to access the bucket from.
     * 
     */
    @Import(name="allowedOrigins", required=true)
    private List<String> allowedOrigins;

    public List<String> allowedOrigins() {
        return this.allowedOrigins;
    }

    /**
     * One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).
     * 
     */
    @Import(name="exposedHeaders")
    private @Nullable List<String> exposedHeaders;

    public Optional<List<String>> exposedHeaders() {
        return Optional.ofNullable(this.exposedHeaders);
    }

    /**
     * A unique identifier for this rule.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The time in seconds that your browser is to cache the preflight response for the specified resource.
     * 
     */
    @Import(name="maxAge")
    private @Nullable Integer maxAge;

    public Optional<Integer> maxAge() {
        return Optional.ofNullable(this.maxAge);
    }

    private BucketCorsRule() {}

    private BucketCorsRule(BucketCorsRule $) {
        this.allowedHeaders = $.allowedHeaders;
        this.allowedMethods = $.allowedMethods;
        this.allowedOrigins = $.allowedOrigins;
        this.exposedHeaders = $.exposedHeaders;
        this.id = $.id;
        this.maxAge = $.maxAge;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketCorsRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketCorsRule $;

        public Builder() {
            $ = new BucketCorsRule();
        }

        public Builder(BucketCorsRule defaults) {
            $ = new BucketCorsRule(Objects.requireNonNull(defaults));
        }

        public Builder allowedHeaders(@Nullable List<String> allowedHeaders) {
            $.allowedHeaders = allowedHeaders;
            return this;
        }

        public Builder allowedHeaders(String... allowedHeaders) {
            return allowedHeaders(List.of(allowedHeaders));
        }

        public Builder allowedMethods(List<BucketCorsRuleAllowedMethodsItem> allowedMethods) {
            $.allowedMethods = allowedMethods;
            return this;
        }

        public Builder allowedMethods(BucketCorsRuleAllowedMethodsItem... allowedMethods) {
            return allowedMethods(List.of(allowedMethods));
        }

        public Builder allowedOrigins(List<String> allowedOrigins) {
            $.allowedOrigins = allowedOrigins;
            return this;
        }

        public Builder allowedOrigins(String... allowedOrigins) {
            return allowedOrigins(List.of(allowedOrigins));
        }

        public Builder exposedHeaders(@Nullable List<String> exposedHeaders) {
            $.exposedHeaders = exposedHeaders;
            return this;
        }

        public Builder exposedHeaders(String... exposedHeaders) {
            return exposedHeaders(List.of(exposedHeaders));
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder maxAge(@Nullable Integer maxAge) {
            $.maxAge = maxAge;
            return this;
        }

        public BucketCorsRule build() {
            $.allowedMethods = Objects.requireNonNull($.allowedMethods, "expected parameter 'allowedMethods' to be non-null");
            $.allowedOrigins = Objects.requireNonNull($.allowedOrigins, "expected parameter 'allowedOrigins' to be non-null");
            return $;
        }
    }

}
