// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotcoredeviceadvisor.inputs;

import com.pulumi.awsnative.iotcoredeviceadvisor.inputs.SuiteDefinitionDeviceUnderTest;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SuiteDefinitionConfigurationProperties extends com.pulumi.resources.InvokeArgs {

    public static final SuiteDefinitionConfigurationProperties Empty = new SuiteDefinitionConfigurationProperties();

    @Import(name="devicePermissionRoleArn", required=true)
    private String devicePermissionRoleArn;

    public String devicePermissionRoleArn() {
        return this.devicePermissionRoleArn;
    }

    @Import(name="devices")
    private @Nullable List<SuiteDefinitionDeviceUnderTest> devices;

    public Optional<List<SuiteDefinitionDeviceUnderTest>> devices() {
        return Optional.ofNullable(this.devices);
    }

    @Import(name="intendedForQualification")
    private @Nullable Boolean intendedForQualification;

    public Optional<Boolean> intendedForQualification() {
        return Optional.ofNullable(this.intendedForQualification);
    }

    @Import(name="rootGroup", required=true)
    private String rootGroup;

    public String rootGroup() {
        return this.rootGroup;
    }

    @Import(name="suiteDefinitionName")
    private @Nullable String suiteDefinitionName;

    public Optional<String> suiteDefinitionName() {
        return Optional.ofNullable(this.suiteDefinitionName);
    }

    private SuiteDefinitionConfigurationProperties() {}

    private SuiteDefinitionConfigurationProperties(SuiteDefinitionConfigurationProperties $) {
        this.devicePermissionRoleArn = $.devicePermissionRoleArn;
        this.devices = $.devices;
        this.intendedForQualification = $.intendedForQualification;
        this.rootGroup = $.rootGroup;
        this.suiteDefinitionName = $.suiteDefinitionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SuiteDefinitionConfigurationProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SuiteDefinitionConfigurationProperties $;

        public Builder() {
            $ = new SuiteDefinitionConfigurationProperties();
        }

        public Builder(SuiteDefinitionConfigurationProperties defaults) {
            $ = new SuiteDefinitionConfigurationProperties(Objects.requireNonNull(defaults));
        }

        public Builder devicePermissionRoleArn(String devicePermissionRoleArn) {
            $.devicePermissionRoleArn = devicePermissionRoleArn;
            return this;
        }

        public Builder devices(@Nullable List<SuiteDefinitionDeviceUnderTest> devices) {
            $.devices = devices;
            return this;
        }

        public Builder devices(SuiteDefinitionDeviceUnderTest... devices) {
            return devices(List.of(devices));
        }

        public Builder intendedForQualification(@Nullable Boolean intendedForQualification) {
            $.intendedForQualification = intendedForQualification;
            return this;
        }

        public Builder rootGroup(String rootGroup) {
            $.rootGroup = rootGroup;
            return this;
        }

        public Builder suiteDefinitionName(@Nullable String suiteDefinitionName) {
            $.suiteDefinitionName = suiteDefinitionName;
            return this;
        }

        public SuiteDefinitionConfigurationProperties build() {
            $.devicePermissionRoleArn = Objects.requireNonNull($.devicePermissionRoleArn, "expected parameter 'devicePermissionRoleArn' to be non-null");
            $.rootGroup = Objects.requireNonNull($.rootGroup, "expected parameter 'rootGroup' to be non-null");
            return $;
        }
    }

}
