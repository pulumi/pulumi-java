// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.applicationinsights.inputs;

import com.pulumi.awsnative.applicationinsights.inputs.ApplicationConfigurationDetails;
import com.pulumi.awsnative.applicationinsights.inputs.ApplicationSubComponentTypeConfiguration;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration settings of the component.
 * 
 */
public final class ApplicationComponentConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationComponentConfiguration Empty = new ApplicationComponentConfiguration();

    /**
     * The configuration settings
     * 
     */
    @Import(name="configurationDetails")
    private @Nullable ApplicationConfigurationDetails configurationDetails;

    /**
     * @return The configuration settings
     * 
     */
    public Optional<ApplicationConfigurationDetails> configurationDetails() {
        return Optional.ofNullable(this.configurationDetails);
    }

    /**
     * Sub component configurations of the component.
     * 
     */
    @Import(name="subComponentTypeConfigurations")
    private @Nullable List<ApplicationSubComponentTypeConfiguration> subComponentTypeConfigurations;

    /**
     * @return Sub component configurations of the component.
     * 
     */
    public Optional<List<ApplicationSubComponentTypeConfiguration>> subComponentTypeConfigurations() {
        return Optional.ofNullable(this.subComponentTypeConfigurations);
    }

    private ApplicationComponentConfiguration() {}

    private ApplicationComponentConfiguration(ApplicationComponentConfiguration $) {
        this.configurationDetails = $.configurationDetails;
        this.subComponentTypeConfigurations = $.subComponentTypeConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationComponentConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationComponentConfiguration $;

        public Builder() {
            $ = new ApplicationComponentConfiguration();
        }

        public Builder(ApplicationComponentConfiguration defaults) {
            $ = new ApplicationComponentConfiguration(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationDetails The configuration settings
         * 
         * @return builder
         * 
         */
        public Builder configurationDetails(@Nullable ApplicationConfigurationDetails configurationDetails) {
            $.configurationDetails = configurationDetails;
            return this;
        }

        /**
         * @param subComponentTypeConfigurations Sub component configurations of the component.
         * 
         * @return builder
         * 
         */
        public Builder subComponentTypeConfigurations(@Nullable List<ApplicationSubComponentTypeConfiguration> subComponentTypeConfigurations) {
            $.subComponentTypeConfigurations = subComponentTypeConfigurations;
            return this;
        }

        /**
         * @param subComponentTypeConfigurations Sub component configurations of the component.
         * 
         * @return builder
         * 
         */
        public Builder subComponentTypeConfigurations(ApplicationSubComponentTypeConfiguration... subComponentTypeConfigurations) {
            return subComponentTypeConfigurations(List.of(subComponentTypeConfigurations));
        }

        public ApplicationComponentConfiguration build() {
            return $;
        }
    }

}
