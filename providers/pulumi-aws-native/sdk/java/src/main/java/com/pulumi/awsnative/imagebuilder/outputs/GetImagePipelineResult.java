// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.outputs;

import com.pulumi.awsnative.imagebuilder.enums.ImagePipelineStatus;
import com.pulumi.awsnative.imagebuilder.outputs.ImagePipelineImageTestsConfiguration;
import com.pulumi.awsnative.imagebuilder.outputs.ImagePipelineSchedule;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagePipelineResult {
    /**
     * @return The Amazon Resource Name (ARN) of the image pipeline.
     * 
     */
    private final @Nullable String arn;
    /**
     * @return The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
     * 
     */
    private final @Nullable String containerRecipeArn;
    /**
     * @return The description of the image pipeline.
     * 
     */
    private final @Nullable String description;
    /**
     * @return The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.
     * 
     */
    private final @Nullable String distributionConfigurationArn;
    /**
     * @return Collects additional information about the image being created, including the operating system (OS) version and package list.
     * 
     */
    private final @Nullable Boolean enhancedImageMetadataEnabled;
    /**
     * @return The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
     * 
     */
    private final @Nullable String imageRecipeArn;
    /**
     * @return The image tests configuration of the image pipeline.
     * 
     */
    private final @Nullable ImagePipelineImageTestsConfiguration imageTestsConfiguration;
    /**
     * @return The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.
     * 
     */
    private final @Nullable String infrastructureConfigurationArn;
    /**
     * @return The schedule of the image pipeline.
     * 
     */
    private final @Nullable ImagePipelineSchedule schedule;
    /**
     * @return The status of the image pipeline.
     * 
     */
    private final @Nullable ImagePipelineStatus status;
    /**
     * @return The tags of this image pipeline.
     * 
     */
    private final @Nullable Object tags;

    @CustomType.Constructor
    private GetImagePipelineResult(
        @CustomType.Parameter("arn") @Nullable String arn,
        @CustomType.Parameter("containerRecipeArn") @Nullable String containerRecipeArn,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("distributionConfigurationArn") @Nullable String distributionConfigurationArn,
        @CustomType.Parameter("enhancedImageMetadataEnabled") @Nullable Boolean enhancedImageMetadataEnabled,
        @CustomType.Parameter("imageRecipeArn") @Nullable String imageRecipeArn,
        @CustomType.Parameter("imageTestsConfiguration") @Nullable ImagePipelineImageTestsConfiguration imageTestsConfiguration,
        @CustomType.Parameter("infrastructureConfigurationArn") @Nullable String infrastructureConfigurationArn,
        @CustomType.Parameter("schedule") @Nullable ImagePipelineSchedule schedule,
        @CustomType.Parameter("status") @Nullable ImagePipelineStatus status,
        @CustomType.Parameter("tags") @Nullable Object tags) {
        this.arn = arn;
        this.containerRecipeArn = containerRecipeArn;
        this.description = description;
        this.distributionConfigurationArn = distributionConfigurationArn;
        this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
        this.imageRecipeArn = imageRecipeArn;
        this.imageTestsConfiguration = imageTestsConfiguration;
        this.infrastructureConfigurationArn = infrastructureConfigurationArn;
        this.schedule = schedule;
        this.status = status;
        this.tags = tags;
    }

    /**
     * @return The Amazon Resource Name (ARN) of the image pipeline.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
     * 
     */
    public Optional<String> containerRecipeArn() {
        return Optional.ofNullable(this.containerRecipeArn);
    }
    /**
     * @return The description of the image pipeline.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.
     * 
     */
    public Optional<String> distributionConfigurationArn() {
        return Optional.ofNullable(this.distributionConfigurationArn);
    }
    /**
     * @return Collects additional information about the image being created, including the operating system (OS) version and package list.
     * 
     */
    public Optional<Boolean> enhancedImageMetadataEnabled() {
        return Optional.ofNullable(this.enhancedImageMetadataEnabled);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
     * 
     */
    public Optional<String> imageRecipeArn() {
        return Optional.ofNullable(this.imageRecipeArn);
    }
    /**
     * @return The image tests configuration of the image pipeline.
     * 
     */
    public Optional<ImagePipelineImageTestsConfiguration> imageTestsConfiguration() {
        return Optional.ofNullable(this.imageTestsConfiguration);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.
     * 
     */
    public Optional<String> infrastructureConfigurationArn() {
        return Optional.ofNullable(this.infrastructureConfigurationArn);
    }
    /**
     * @return The schedule of the image pipeline.
     * 
     */
    public Optional<ImagePipelineSchedule> schedule() {
        return Optional.ofNullable(this.schedule);
    }
    /**
     * @return The status of the image pipeline.
     * 
     */
    public Optional<ImagePipelineStatus> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The tags of this image pipeline.
     * 
     */
    public Optional<Object> tags() {
        return Optional.ofNullable(this.tags);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagePipelineResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String containerRecipeArn;
        private @Nullable String description;
        private @Nullable String distributionConfigurationArn;
        private @Nullable Boolean enhancedImageMetadataEnabled;
        private @Nullable String imageRecipeArn;
        private @Nullable ImagePipelineImageTestsConfiguration imageTestsConfiguration;
        private @Nullable String infrastructureConfigurationArn;
        private @Nullable ImagePipelineSchedule schedule;
        private @Nullable ImagePipelineStatus status;
        private @Nullable Object tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetImagePipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.containerRecipeArn = defaults.containerRecipeArn;
    	      this.description = defaults.description;
    	      this.distributionConfigurationArn = defaults.distributionConfigurationArn;
    	      this.enhancedImageMetadataEnabled = defaults.enhancedImageMetadataEnabled;
    	      this.imageRecipeArn = defaults.imageRecipeArn;
    	      this.imageTestsConfiguration = defaults.imageTestsConfiguration;
    	      this.infrastructureConfigurationArn = defaults.infrastructureConfigurationArn;
    	      this.schedule = defaults.schedule;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        public Builder containerRecipeArn(@Nullable String containerRecipeArn) {
            this.containerRecipeArn = containerRecipeArn;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder distributionConfigurationArn(@Nullable String distributionConfigurationArn) {
            this.distributionConfigurationArn = distributionConfigurationArn;
            return this;
        }
        public Builder enhancedImageMetadataEnabled(@Nullable Boolean enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            return this;
        }
        public Builder imageRecipeArn(@Nullable String imageRecipeArn) {
            this.imageRecipeArn = imageRecipeArn;
            return this;
        }
        public Builder imageTestsConfiguration(@Nullable ImagePipelineImageTestsConfiguration imageTestsConfiguration) {
            this.imageTestsConfiguration = imageTestsConfiguration;
            return this;
        }
        public Builder infrastructureConfigurationArn(@Nullable String infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = infrastructureConfigurationArn;
            return this;
        }
        public Builder schedule(@Nullable ImagePipelineSchedule schedule) {
            this.schedule = schedule;
            return this;
        }
        public Builder status(@Nullable ImagePipelineStatus status) {
            this.status = status;
            return this;
        }
        public Builder tags(@Nullable Object tags) {
            this.tags = tags;
            return this;
        }        public GetImagePipelineResult build() {
            return new GetImagePipelineResult(arn, containerRecipeArn, description, distributionConfigurationArn, enhancedImageMetadataEnabled, imageRecipeArn, imageTestsConfiguration, infrastructureConfigurationArn, schedule, status, tags);
        }
    }
}
