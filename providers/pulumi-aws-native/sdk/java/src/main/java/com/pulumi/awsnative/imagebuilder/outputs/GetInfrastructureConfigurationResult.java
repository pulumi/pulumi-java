// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.outputs;

import com.pulumi.awsnative.imagebuilder.outputs.InfrastructureConfigurationInstanceMetadataOptions;
import com.pulumi.awsnative.imagebuilder.outputs.InfrastructureConfigurationLogging;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInfrastructureConfigurationResult {
    /**
     * @return The Amazon Resource Name (ARN) of the infrastructure configuration.
     * 
     */
    private final @Nullable String arn;
    /**
     * @return The description of the infrastructure configuration.
     * 
     */
    private final @Nullable String description;
    /**
     * @return The instance metadata option settings for the infrastructure configuration.
     * 
     */
    private final @Nullable InfrastructureConfigurationInstanceMetadataOptions instanceMetadataOptions;
    /**
     * @return The instance profile of the infrastructure configuration.
     * 
     */
    private final @Nullable String instanceProfileName;
    /**
     * @return The instance types of the infrastructure configuration.
     * 
     */
    private final @Nullable List<String> instanceTypes;
    /**
     * @return The EC2 key pair of the infrastructure configuration..
     * 
     */
    private final @Nullable String keyPair;
    /**
     * @return The logging configuration of the infrastructure configuration.
     * 
     */
    private final @Nullable InfrastructureConfigurationLogging logging;
    /**
     * @return The tags attached to the resource created by Image Builder.
     * 
     */
    private final @Nullable Object resourceTags;
    /**
     * @return The security group IDs of the infrastructure configuration.
     * 
     */
    private final @Nullable List<String> securityGroupIds;
    /**
     * @return The SNS Topic Amazon Resource Name (ARN) of the infrastructure configuration.
     * 
     */
    private final @Nullable String snsTopicArn;
    /**
     * @return The subnet ID of the infrastructure configuration.
     * 
     */
    private final @Nullable String subnetId;
    /**
     * @return The tags associated with the component.
     * 
     */
    private final @Nullable Object tags;
    /**
     * @return The terminate instance on failure configuration of the infrastructure configuration.
     * 
     */
    private final @Nullable Boolean terminateInstanceOnFailure;

    @CustomType.Constructor
    private GetInfrastructureConfigurationResult(
        @CustomType.Parameter("arn") @Nullable String arn,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("instanceMetadataOptions") @Nullable InfrastructureConfigurationInstanceMetadataOptions instanceMetadataOptions,
        @CustomType.Parameter("instanceProfileName") @Nullable String instanceProfileName,
        @CustomType.Parameter("instanceTypes") @Nullable List<String> instanceTypes,
        @CustomType.Parameter("keyPair") @Nullable String keyPair,
        @CustomType.Parameter("logging") @Nullable InfrastructureConfigurationLogging logging,
        @CustomType.Parameter("resourceTags") @Nullable Object resourceTags,
        @CustomType.Parameter("securityGroupIds") @Nullable List<String> securityGroupIds,
        @CustomType.Parameter("snsTopicArn") @Nullable String snsTopicArn,
        @CustomType.Parameter("subnetId") @Nullable String subnetId,
        @CustomType.Parameter("tags") @Nullable Object tags,
        @CustomType.Parameter("terminateInstanceOnFailure") @Nullable Boolean terminateInstanceOnFailure) {
        this.arn = arn;
        this.description = description;
        this.instanceMetadataOptions = instanceMetadataOptions;
        this.instanceProfileName = instanceProfileName;
        this.instanceTypes = instanceTypes;
        this.keyPair = keyPair;
        this.logging = logging;
        this.resourceTags = resourceTags;
        this.securityGroupIds = securityGroupIds;
        this.snsTopicArn = snsTopicArn;
        this.subnetId = subnetId;
        this.tags = tags;
        this.terminateInstanceOnFailure = terminateInstanceOnFailure;
    }

    /**
     * @return The Amazon Resource Name (ARN) of the infrastructure configuration.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The description of the infrastructure configuration.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The instance metadata option settings for the infrastructure configuration.
     * 
     */
    public Optional<InfrastructureConfigurationInstanceMetadataOptions> instanceMetadataOptions() {
        return Optional.ofNullable(this.instanceMetadataOptions);
    }
    /**
     * @return The instance profile of the infrastructure configuration.
     * 
     */
    public Optional<String> instanceProfileName() {
        return Optional.ofNullable(this.instanceProfileName);
    }
    /**
     * @return The instance types of the infrastructure configuration.
     * 
     */
    public List<String> instanceTypes() {
        return this.instanceTypes == null ? List.of() : this.instanceTypes;
    }
    /**
     * @return The EC2 key pair of the infrastructure configuration..
     * 
     */
    public Optional<String> keyPair() {
        return Optional.ofNullable(this.keyPair);
    }
    /**
     * @return The logging configuration of the infrastructure configuration.
     * 
     */
    public Optional<InfrastructureConfigurationLogging> logging() {
        return Optional.ofNullable(this.logging);
    }
    /**
     * @return The tags attached to the resource created by Image Builder.
     * 
     */
    public Optional<Object> resourceTags() {
        return Optional.ofNullable(this.resourceTags);
    }
    /**
     * @return The security group IDs of the infrastructure configuration.
     * 
     */
    public List<String> securityGroupIds() {
        return this.securityGroupIds == null ? List.of() : this.securityGroupIds;
    }
    /**
     * @return The SNS Topic Amazon Resource Name (ARN) of the infrastructure configuration.
     * 
     */
    public Optional<String> snsTopicArn() {
        return Optional.ofNullable(this.snsTopicArn);
    }
    /**
     * @return The subnet ID of the infrastructure configuration.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return The tags associated with the component.
     * 
     */
    public Optional<Object> tags() {
        return Optional.ofNullable(this.tags);
    }
    /**
     * @return The terminate instance on failure configuration of the infrastructure configuration.
     * 
     */
    public Optional<Boolean> terminateInstanceOnFailure() {
        return Optional.ofNullable(this.terminateInstanceOnFailure);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInfrastructureConfigurationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String description;
        private @Nullable InfrastructureConfigurationInstanceMetadataOptions instanceMetadataOptions;
        private @Nullable String instanceProfileName;
        private @Nullable List<String> instanceTypes;
        private @Nullable String keyPair;
        private @Nullable InfrastructureConfigurationLogging logging;
        private @Nullable Object resourceTags;
        private @Nullable List<String> securityGroupIds;
        private @Nullable String snsTopicArn;
        private @Nullable String subnetId;
        private @Nullable Object tags;
        private @Nullable Boolean terminateInstanceOnFailure;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInfrastructureConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.instanceMetadataOptions = defaults.instanceMetadataOptions;
    	      this.instanceProfileName = defaults.instanceProfileName;
    	      this.instanceTypes = defaults.instanceTypes;
    	      this.keyPair = defaults.keyPair;
    	      this.logging = defaults.logging;
    	      this.resourceTags = defaults.resourceTags;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.snsTopicArn = defaults.snsTopicArn;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.terminateInstanceOnFailure = defaults.terminateInstanceOnFailure;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder instanceMetadataOptions(@Nullable InfrastructureConfigurationInstanceMetadataOptions instanceMetadataOptions) {
            this.instanceMetadataOptions = instanceMetadataOptions;
            return this;
        }
        public Builder instanceProfileName(@Nullable String instanceProfileName) {
            this.instanceProfileName = instanceProfileName;
            return this;
        }
        public Builder instanceTypes(@Nullable List<String> instanceTypes) {
            this.instanceTypes = instanceTypes;
            return this;
        }
        public Builder instanceTypes(String... instanceTypes) {
            return instanceTypes(List.of(instanceTypes));
        }
        public Builder keyPair(@Nullable String keyPair) {
            this.keyPair = keyPair;
            return this;
        }
        public Builder logging(@Nullable InfrastructureConfigurationLogging logging) {
            this.logging = logging;
            return this;
        }
        public Builder resourceTags(@Nullable Object resourceTags) {
            this.resourceTags = resourceTags;
            return this;
        }
        public Builder securityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        public Builder snsTopicArn(@Nullable String snsTopicArn) {
            this.snsTopicArn = snsTopicArn;
            return this;
        }
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public Builder tags(@Nullable Object tags) {
            this.tags = tags;
            return this;
        }
        public Builder terminateInstanceOnFailure(@Nullable Boolean terminateInstanceOnFailure) {
            this.terminateInstanceOnFailure = terminateInstanceOnFailure;
            return this;
        }        public GetInfrastructureConfigurationResult build() {
            return new GetInfrastructureConfigurationResult(arn, description, instanceMetadataOptions, instanceProfileName, instanceTypes, keyPair, logging, resourceTags, securityGroupIds, snsTopicArn, subnetId, tags, terminateInstanceOnFailure);
        }
    }
}
