// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecr.inputs;

import com.pulumi.awsnative.ecr.enums.ReplicationConfigurationFilterType;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * An array of objects representing the details of a repository filter.
 * 
 */
public final class ReplicationConfigurationRepositoryFilter extends com.pulumi.resources.InvokeArgs {

    public static final ReplicationConfigurationRepositoryFilter Empty = new ReplicationConfigurationRepositoryFilter();

    @Import(name="filter", required=true)
    private String filter;

    public String filter() {
        return this.filter;
    }

    @Import(name="filterType", required=true)
    private ReplicationConfigurationFilterType filterType;

    public ReplicationConfigurationFilterType filterType() {
        return this.filterType;
    }

    private ReplicationConfigurationRepositoryFilter() {}

    private ReplicationConfigurationRepositoryFilter(ReplicationConfigurationRepositoryFilter $) {
        this.filter = $.filter;
        this.filterType = $.filterType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationConfigurationRepositoryFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationConfigurationRepositoryFilter $;

        public Builder() {
            $ = new ReplicationConfigurationRepositoryFilter();
        }

        public Builder(ReplicationConfigurationRepositoryFilter defaults) {
            $ = new ReplicationConfigurationRepositoryFilter(Objects.requireNonNull(defaults));
        }

        public Builder filter(String filter) {
            $.filter = filter;
            return this;
        }

        public Builder filterType(ReplicationConfigurationFilterType filterType) {
            $.filterType = filterType;
            return this;
        }

        public ReplicationConfigurationRepositoryFilter build() {
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            $.filterType = Objects.requireNonNull($.filterType, "expected parameter 'filterType' to be non-null");
            return $;
        }
    }

}
