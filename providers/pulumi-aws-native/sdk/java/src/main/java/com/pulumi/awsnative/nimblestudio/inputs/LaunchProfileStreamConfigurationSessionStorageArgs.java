// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.nimblestudio.inputs;

import com.pulumi.awsnative.nimblestudio.enums.LaunchProfileStreamingSessionStorageMode;
import com.pulumi.awsnative.nimblestudio.inputs.LaunchProfileStreamingSessionStorageRootArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * &lt;p&gt;The configuration for a streaming sessionâ€™s upload storage.&lt;/p&gt;
 * 
 */
public final class LaunchProfileStreamConfigurationSessionStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final LaunchProfileStreamConfigurationSessionStorageArgs Empty = new LaunchProfileStreamConfigurationSessionStorageArgs();

    /**
     * &lt;p&gt;Allows artists to upload files to their workstations. The only valid option is
     *                 &lt;code&gt;UPLOAD&lt;/code&gt;.&lt;/p&gt;
     * 
     */
    @Import(name="mode")
      private final @Nullable Output<List<LaunchProfileStreamingSessionStorageMode>> mode;

    public Output<List<LaunchProfileStreamingSessionStorageMode>> mode() {
        return this.mode == null ? Codegen.empty() : this.mode;
    }

    @Import(name="root")
      private final @Nullable Output<LaunchProfileStreamingSessionStorageRootArgs> root;

    public Output<LaunchProfileStreamingSessionStorageRootArgs> root() {
        return this.root == null ? Codegen.empty() : this.root;
    }

    public LaunchProfileStreamConfigurationSessionStorageArgs(
        @Nullable Output<List<LaunchProfileStreamingSessionStorageMode>> mode,
        @Nullable Output<LaunchProfileStreamingSessionStorageRootArgs> root) {
        this.mode = mode;
        this.root = root;
    }

    private LaunchProfileStreamConfigurationSessionStorageArgs() {
        this.mode = Codegen.empty();
        this.root = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LaunchProfileStreamConfigurationSessionStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<LaunchProfileStreamingSessionStorageMode>> mode;
        private @Nullable Output<LaunchProfileStreamingSessionStorageRootArgs> root;

        public Builder() {
    	      // Empty
        }

        public Builder(LaunchProfileStreamConfigurationSessionStorageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.root = defaults.root;
        }

        public Builder mode(@Nullable Output<List<LaunchProfileStreamingSessionStorageMode>> mode) {
            this.mode = mode;
            return this;
        }
        public Builder mode(@Nullable List<LaunchProfileStreamingSessionStorageMode> mode) {
            this.mode = Codegen.ofNullable(mode);
            return this;
        }
        public Builder mode(LaunchProfileStreamingSessionStorageMode... mode) {
            return mode(List.of(mode));
        }
        public Builder root(@Nullable Output<LaunchProfileStreamingSessionStorageRootArgs> root) {
            this.root = root;
            return this;
        }
        public Builder root(@Nullable LaunchProfileStreamingSessionStorageRootArgs root) {
            this.root = Codegen.ofNullable(root);
            return this;
        }        public LaunchProfileStreamConfigurationSessionStorageArgs build() {
            return new LaunchProfileStreamConfigurationSessionStorageArgs(mode, root);
        }
    }
}
