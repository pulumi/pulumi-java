// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2;

import com.pulumi.awsnative.wafv2.inputs.LoggingConfigurationFieldToMatchArgs;
import com.pulumi.awsnative.wafv2.inputs.LoggingFilterPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LoggingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggingConfigurationArgs Empty = new LoggingConfigurationArgs();

    /**
     * The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
     * 
     */
    @Import(name="logDestinationConfigs", required=true)
      private final Output<List<String>> logDestinationConfigs;

    public Output<List<String>> logDestinationConfigs() {
        return this.logDestinationConfigs;
    }

    /**
     * Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
     * 
     */
    @Import(name="loggingFilter")
      private final @Nullable Output<LoggingFilterPropertiesArgs> loggingFilter;

    public Output<LoggingFilterPropertiesArgs> loggingFilter() {
        return this.loggingFilter == null ? Codegen.empty() : this.loggingFilter;
    }

    /**
     * The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
     * 
     */
    @Import(name="redactedFields")
      private final @Nullable Output<List<LoggingConfigurationFieldToMatchArgs>> redactedFields;

    public Output<List<LoggingConfigurationFieldToMatchArgs>> redactedFields() {
        return this.redactedFields == null ? Codegen.empty() : this.redactedFields;
    }

    /**
     * The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
     * 
     */
    @Import(name="resourceArn", required=true)
      private final Output<String> resourceArn;

    public Output<String> resourceArn() {
        return this.resourceArn;
    }

    public LoggingConfigurationArgs(
        Output<List<String>> logDestinationConfigs,
        @Nullable Output<LoggingFilterPropertiesArgs> loggingFilter,
        @Nullable Output<List<LoggingConfigurationFieldToMatchArgs>> redactedFields,
        Output<String> resourceArn) {
        this.logDestinationConfigs = Objects.requireNonNull(logDestinationConfigs, "expected parameter 'logDestinationConfigs' to be non-null");
        this.loggingFilter = loggingFilter;
        this.redactedFields = redactedFields;
        this.resourceArn = Objects.requireNonNull(resourceArn, "expected parameter 'resourceArn' to be non-null");
    }

    private LoggingConfigurationArgs() {
        this.logDestinationConfigs = Codegen.empty();
        this.loggingFilter = Codegen.empty();
        this.redactedFields = Codegen.empty();
        this.resourceArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoggingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> logDestinationConfigs;
        private @Nullable Output<LoggingFilterPropertiesArgs> loggingFilter;
        private @Nullable Output<List<LoggingConfigurationFieldToMatchArgs>> redactedFields;
        private Output<String> resourceArn;

        public Builder() {
    	      // Empty
        }

        public Builder(LoggingConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logDestinationConfigs = defaults.logDestinationConfigs;
    	      this.loggingFilter = defaults.loggingFilter;
    	      this.redactedFields = defaults.redactedFields;
    	      this.resourceArn = defaults.resourceArn;
        }

        public Builder logDestinationConfigs(Output<List<String>> logDestinationConfigs) {
            this.logDestinationConfigs = Objects.requireNonNull(logDestinationConfigs);
            return this;
        }
        public Builder logDestinationConfigs(List<String> logDestinationConfigs) {
            this.logDestinationConfigs = Output.of(Objects.requireNonNull(logDestinationConfigs));
            return this;
        }
        public Builder logDestinationConfigs(String... logDestinationConfigs) {
            return logDestinationConfigs(List.of(logDestinationConfigs));
        }
        public Builder loggingFilter(@Nullable Output<LoggingFilterPropertiesArgs> loggingFilter) {
            this.loggingFilter = loggingFilter;
            return this;
        }
        public Builder loggingFilter(@Nullable LoggingFilterPropertiesArgs loggingFilter) {
            this.loggingFilter = Codegen.ofNullable(loggingFilter);
            return this;
        }
        public Builder redactedFields(@Nullable Output<List<LoggingConfigurationFieldToMatchArgs>> redactedFields) {
            this.redactedFields = redactedFields;
            return this;
        }
        public Builder redactedFields(@Nullable List<LoggingConfigurationFieldToMatchArgs> redactedFields) {
            this.redactedFields = Codegen.ofNullable(redactedFields);
            return this;
        }
        public Builder redactedFields(LoggingConfigurationFieldToMatchArgs... redactedFields) {
            return redactedFields(List.of(redactedFields));
        }
        public Builder resourceArn(Output<String> resourceArn) {
            this.resourceArn = Objects.requireNonNull(resourceArn);
            return this;
        }
        public Builder resourceArn(String resourceArn) {
            this.resourceArn = Output.of(Objects.requireNonNull(resourceArn));
            return this;
        }        public LoggingConfigurationArgs build() {
            return new LoggingConfigurationArgs(logDestinationConfigs, loggingFilter, redactedFields, resourceArn);
        }
    }
}
