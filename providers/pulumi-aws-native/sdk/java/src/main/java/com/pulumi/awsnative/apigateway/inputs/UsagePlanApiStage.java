// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UsagePlanApiStage extends com.pulumi.resources.InvokeArgs {

    public static final UsagePlanApiStage Empty = new UsagePlanApiStage();

    /**
     * The ID of an API that is in the specified Stage property that you want to associate with the usage plan.
     * 
     */
    @Import(name="apiId")
    private @Nullable String apiId;

    /**
     * @return The ID of an API that is in the specified Stage property that you want to associate with the usage plan.
     * 
     */
    public Optional<String> apiId() {
        return Optional.ofNullable(this.apiId);
    }

    /**
     * The name of the stage to associate with the usage plan.
     * 
     */
    @Import(name="stage")
    private @Nullable String stage;

    /**
     * @return The name of the stage to associate with the usage plan.
     * 
     */
    public Optional<String> stage() {
        return Optional.ofNullable(this.stage);
    }

    /**
     * Map containing method-level throttling information for an API stage in a usage plan. The key for the map is the path and method for which to configure custom throttling, for example, &#39;/pets/GET&#39;. Duplicates are not allowed.
     * 
     */
    @Import(name="throttle")
    private @Nullable Object throttle;

    /**
     * @return Map containing method-level throttling information for an API stage in a usage plan. The key for the map is the path and method for which to configure custom throttling, for example, &#39;/pets/GET&#39;. Duplicates are not allowed.
     * 
     */
    public Optional<Object> throttle() {
        return Optional.ofNullable(this.throttle);
    }

    private UsagePlanApiStage() {}

    private UsagePlanApiStage(UsagePlanApiStage $) {
        this.apiId = $.apiId;
        this.stage = $.stage;
        this.throttle = $.throttle;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UsagePlanApiStage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UsagePlanApiStage $;

        public Builder() {
            $ = new UsagePlanApiStage();
        }

        public Builder(UsagePlanApiStage defaults) {
            $ = new UsagePlanApiStage(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiId The ID of an API that is in the specified Stage property that you want to associate with the usage plan.
         * 
         * @return builder
         * 
         */
        public Builder apiId(@Nullable String apiId) {
            $.apiId = apiId;
            return this;
        }

        /**
         * @param stage The name of the stage to associate with the usage plan.
         * 
         * @return builder
         * 
         */
        public Builder stage(@Nullable String stage) {
            $.stage = stage;
            return this;
        }

        /**
         * @param throttle Map containing method-level throttling information for an API stage in a usage plan. The key for the map is the path and method for which to configure custom throttling, for example, &#39;/pets/GET&#39;. Duplicates are not allowed.
         * 
         * @return builder
         * 
         */
        public Builder throttle(@Nullable Object throttle) {
            $.throttle = throttle;
            return this;
        }

        public UsagePlanApiStage build() {
            return $;
        }
    }

}
