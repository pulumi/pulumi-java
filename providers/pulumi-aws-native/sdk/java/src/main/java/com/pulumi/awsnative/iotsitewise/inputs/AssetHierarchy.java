// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A hierarchy specifies allowed parent/child asset relationships.
 * 
 */
public final class AssetHierarchy extends com.pulumi.resources.InvokeArgs {

    public static final AssetHierarchy Empty = new AssetHierarchy();

    /**
     * The ID of the child asset to be associated.
     * 
     */
    @Import(name="childAssetId", required=true)
    private String childAssetId;

    public String childAssetId() {
        return this.childAssetId;
    }

    /**
     * The LogicalID of a hierarchy in the parent asset&#39;s model.
     * 
     */
    @Import(name="logicalId", required=true)
    private String logicalId;

    public String logicalId() {
        return this.logicalId;
    }

    private AssetHierarchy() {}

    private AssetHierarchy(AssetHierarchy $) {
        this.childAssetId = $.childAssetId;
        this.logicalId = $.logicalId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetHierarchy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetHierarchy $;

        public Builder() {
            $ = new AssetHierarchy();
        }

        public Builder(AssetHierarchy defaults) {
            $ = new AssetHierarchy(Objects.requireNonNull(defaults));
        }

        public Builder childAssetId(String childAssetId) {
            $.childAssetId = childAssetId;
            return this;
        }

        public Builder logicalId(String logicalId) {
            $.logicalId = logicalId;
            return this;
        }

        public AssetHierarchy build() {
            $.childAssetId = Objects.requireNonNull($.childAssetId, "expected parameter 'childAssetId' to be non-null");
            $.logicalId = Objects.requireNonNull($.logicalId, "expected parameter 'logicalId' to be non-null");
            return $;
        }
    }

}
