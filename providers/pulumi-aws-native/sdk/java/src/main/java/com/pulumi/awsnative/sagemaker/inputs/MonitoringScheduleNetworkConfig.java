// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleVpcConfig;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
 * 
 */
public final class MonitoringScheduleNetworkConfig extends com.pulumi.resources.InvokeArgs {

    public static final MonitoringScheduleNetworkConfig Empty = new MonitoringScheduleNetworkConfig();

    /**
     * Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
     * 
     */
    @Import(name="enableInterContainerTrafficEncryption")
    private @Nullable Boolean enableInterContainerTrafficEncryption;

    /**
     * @return Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
     * 
     */
    public Optional<Boolean> enableInterContainerTrafficEncryption() {
        return Optional.ofNullable(this.enableInterContainerTrafficEncryption);
    }

    /**
     * Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
     * 
     */
    @Import(name="enableNetworkIsolation")
    private @Nullable Boolean enableNetworkIsolation;

    /**
     * @return Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
     * 
     */
    public Optional<Boolean> enableNetworkIsolation() {
        return Optional.ofNullable(this.enableNetworkIsolation);
    }

    @Import(name="vpcConfig")
    private @Nullable MonitoringScheduleVpcConfig vpcConfig;

    public Optional<MonitoringScheduleVpcConfig> vpcConfig() {
        return Optional.ofNullable(this.vpcConfig);
    }

    private MonitoringScheduleNetworkConfig() {}

    private MonitoringScheduleNetworkConfig(MonitoringScheduleNetworkConfig $) {
        this.enableInterContainerTrafficEncryption = $.enableInterContainerTrafficEncryption;
        this.enableNetworkIsolation = $.enableNetworkIsolation;
        this.vpcConfig = $.vpcConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringScheduleNetworkConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringScheduleNetworkConfig $;

        public Builder() {
            $ = new MonitoringScheduleNetworkConfig();
        }

        public Builder(MonitoringScheduleNetworkConfig defaults) {
            $ = new MonitoringScheduleNetworkConfig(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableInterContainerTrafficEncryption Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
         * 
         * @return builder
         * 
         */
        public Builder enableInterContainerTrafficEncryption(@Nullable Boolean enableInterContainerTrafficEncryption) {
            $.enableInterContainerTrafficEncryption = enableInterContainerTrafficEncryption;
            return this;
        }

        /**
         * @param enableNetworkIsolation Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
         * 
         * @return builder
         * 
         */
        public Builder enableNetworkIsolation(@Nullable Boolean enableNetworkIsolation) {
            $.enableNetworkIsolation = enableNetworkIsolation;
            return this;
        }

        public Builder vpcConfig(@Nullable MonitoringScheduleVpcConfig vpcConfig) {
            $.vpcConfig = vpcConfig;
            return this;
        }

        public MonitoringScheduleNetworkConfig build() {
            return $;
        }
    }

}
