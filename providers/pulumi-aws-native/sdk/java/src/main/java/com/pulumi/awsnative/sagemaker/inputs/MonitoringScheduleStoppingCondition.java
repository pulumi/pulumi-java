// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * Specifies a time limit for how long the monitoring job is allowed to run.
 * 
 */
public final class MonitoringScheduleStoppingCondition extends com.pulumi.resources.InvokeArgs {

    public static final MonitoringScheduleStoppingCondition Empty = new MonitoringScheduleStoppingCondition();

    /**
     * The maximum runtime allowed in seconds.
     * 
     */
    @Import(name="maxRuntimeInSeconds", required=true)
    private Integer maxRuntimeInSeconds;

    /**
     * @return The maximum runtime allowed in seconds.
     * 
     */
    public Integer maxRuntimeInSeconds() {
        return this.maxRuntimeInSeconds;
    }

    private MonitoringScheduleStoppingCondition() {}

    private MonitoringScheduleStoppingCondition(MonitoringScheduleStoppingCondition $) {
        this.maxRuntimeInSeconds = $.maxRuntimeInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringScheduleStoppingCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringScheduleStoppingCondition $;

        public Builder() {
            $ = new MonitoringScheduleStoppingCondition();
        }

        public Builder(MonitoringScheduleStoppingCondition defaults) {
            $ = new MonitoringScheduleStoppingCondition(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxRuntimeInSeconds The maximum runtime allowed in seconds.
         * 
         * @return builder
         * 
         */
        public Builder maxRuntimeInSeconds(Integer maxRuntimeInSeconds) {
            $.maxRuntimeInSeconds = maxRuntimeInSeconds;
            return this;
        }

        public MonitoringScheduleStoppingCondition build() {
            $.maxRuntimeInSeconds = Objects.requireNonNull($.maxRuntimeInSeconds, "expected parameter 'maxRuntimeInSeconds' to be non-null");
            return $;
        }
    }

}
