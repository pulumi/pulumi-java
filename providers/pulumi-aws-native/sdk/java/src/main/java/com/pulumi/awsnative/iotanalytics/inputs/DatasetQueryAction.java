// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.awsnative.iotanalytics.inputs.DatasetFilter;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetQueryAction extends com.pulumi.resources.InvokeArgs {

    public static final DatasetQueryAction Empty = new DatasetQueryAction();

    @Import(name="filters")
    private @Nullable List<DatasetFilter> filters;

    public Optional<List<DatasetFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="sqlQuery", required=true)
    private String sqlQuery;

    public String sqlQuery() {
        return this.sqlQuery;
    }

    private DatasetQueryAction() {}

    private DatasetQueryAction(DatasetQueryAction $) {
        this.filters = $.filters;
        this.sqlQuery = $.sqlQuery;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetQueryAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetQueryAction $;

        public Builder() {
            $ = new DatasetQueryAction();
        }

        public Builder(DatasetQueryAction defaults) {
            $ = new DatasetQueryAction(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<DatasetFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(DatasetFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder sqlQuery(String sqlQuery) {
            $.sqlQuery = sqlQuery;
            return this;
        }

        public DatasetQueryAction build() {
            $.sqlQuery = Objects.requireNonNull($.sqlQuery, "expected parameter 'sqlQuery' to be non-null");
            return $;
        }
    }

}
