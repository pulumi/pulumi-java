// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Launch permissions can be used to configure which AWS accounts can use the AMI to launch instances.
 * 
 */
public final class DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties extends com.pulumi.resources.InvokeArgs {

    public static final DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties Empty = new DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties();

    /**
     * The ARN for an Amazon Web Services Organization that you want to share your AMI with.
     * 
     */
    @Import(name="organizationArns")
    private @Nullable List<String> organizationArns;

    /**
     * @return The ARN for an Amazon Web Services Organization that you want to share your AMI with.
     * 
     */
    public Optional<List<String>> organizationArns() {
        return Optional.ofNullable(this.organizationArns);
    }

    /**
     * The ARN for an Organizations organizational unit (OU) that you want to share your AMI with.
     * 
     */
    @Import(name="organizationalUnitArns")
    private @Nullable List<String> organizationalUnitArns;

    /**
     * @return The ARN for an Organizations organizational unit (OU) that you want to share your AMI with.
     * 
     */
    public Optional<List<String>> organizationalUnitArns() {
        return Optional.ofNullable(this.organizationalUnitArns);
    }

    /**
     * The name of the group.
     * 
     */
    @Import(name="userGroups")
    private @Nullable List<String> userGroups;

    /**
     * @return The name of the group.
     * 
     */
    public Optional<List<String>> userGroups() {
        return Optional.ofNullable(this.userGroups);
    }

    /**
     * The AWS account ID.
     * 
     */
    @Import(name="userIds")
    private @Nullable List<String> userIds;

    /**
     * @return The AWS account ID.
     * 
     */
    public Optional<List<String>> userIds() {
        return Optional.ofNullable(this.userIds);
    }

    private DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties() {}

    private DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties(DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties $) {
        this.organizationArns = $.organizationArns;
        this.organizationalUnitArns = $.organizationalUnitArns;
        this.userGroups = $.userGroups;
        this.userIds = $.userIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties $;

        public Builder() {
            $ = new DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties();
        }

        public Builder(DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties defaults) {
            $ = new DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties(Objects.requireNonNull(defaults));
        }

        /**
         * @param organizationArns The ARN for an Amazon Web Services Organization that you want to share your AMI with.
         * 
         * @return builder
         * 
         */
        public Builder organizationArns(@Nullable List<String> organizationArns) {
            $.organizationArns = organizationArns;
            return this;
        }

        /**
         * @param organizationArns The ARN for an Amazon Web Services Organization that you want to share your AMI with.
         * 
         * @return builder
         * 
         */
        public Builder organizationArns(String... organizationArns) {
            return organizationArns(List.of(organizationArns));
        }

        /**
         * @param organizationalUnitArns The ARN for an Organizations organizational unit (OU) that you want to share your AMI with.
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitArns(@Nullable List<String> organizationalUnitArns) {
            $.organizationalUnitArns = organizationalUnitArns;
            return this;
        }

        /**
         * @param organizationalUnitArns The ARN for an Organizations organizational unit (OU) that you want to share your AMI with.
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitArns(String... organizationalUnitArns) {
            return organizationalUnitArns(List.of(organizationalUnitArns));
        }

        /**
         * @param userGroups The name of the group.
         * 
         * @return builder
         * 
         */
        public Builder userGroups(@Nullable List<String> userGroups) {
            $.userGroups = userGroups;
            return this;
        }

        /**
         * @param userGroups The name of the group.
         * 
         * @return builder
         * 
         */
        public Builder userGroups(String... userGroups) {
            return userGroups(List.of(userGroups));
        }

        /**
         * @param userIds The AWS account ID.
         * 
         * @return builder
         * 
         */
        public Builder userIds(@Nullable List<String> userIds) {
            $.userIds = userIds;
            return this;
        }

        /**
         * @param userIds The AWS account ID.
         * 
         * @return builder
         * 
         */
        public Builder userIds(String... userIds) {
            return userIds(List.of(userIds));
        }

        public DistributionConfigurationDistributionAmiDistributionConfigurationPropertiesLaunchPermissionConfigurationProperties build() {
            return $;
        }
    }

}
