// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cassandra.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits
 * 
 */
public final class TableProvisionedThroughput extends com.pulumi.resources.InvokeArgs {

    public static final TableProvisionedThroughput Empty = new TableProvisionedThroughput();

    @Import(name="readCapacityUnits", required=true)
    private Integer readCapacityUnits;

    public Integer readCapacityUnits() {
        return this.readCapacityUnits;
    }

    @Import(name="writeCapacityUnits", required=true)
    private Integer writeCapacityUnits;

    public Integer writeCapacityUnits() {
        return this.writeCapacityUnits;
    }

    private TableProvisionedThroughput() {}

    private TableProvisionedThroughput(TableProvisionedThroughput $) {
        this.readCapacityUnits = $.readCapacityUnits;
        this.writeCapacityUnits = $.writeCapacityUnits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableProvisionedThroughput defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableProvisionedThroughput $;

        public Builder() {
            $ = new TableProvisionedThroughput();
        }

        public Builder(TableProvisionedThroughput defaults) {
            $ = new TableProvisionedThroughput(Objects.requireNonNull(defaults));
        }

        public Builder readCapacityUnits(Integer readCapacityUnits) {
            $.readCapacityUnits = readCapacityUnits;
            return this;
        }

        public Builder writeCapacityUnits(Integer writeCapacityUnits) {
            $.writeCapacityUnits = writeCapacityUnits;
            return this;
        }

        public TableProvisionedThroughput build() {
            $.readCapacityUnits = Objects.requireNonNull($.readCapacityUnits, "expected parameter 'readCapacityUnits' to be non-null");
            $.writeCapacityUnits = Objects.requireNonNull($.writeCapacityUnits, "expected parameter 'writeCapacityUnits' to be non-null");
            return $;
        }
    }

}
