// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.awsnative.iotanalytics.inputs.DatasetContentVersionValue;
import com.pulumi.awsnative.iotanalytics.inputs.DatasetOutputFileUriValue;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetVariable extends com.pulumi.resources.InvokeArgs {

    public static final DatasetVariable Empty = new DatasetVariable();

    @Import(name="datasetContentVersionValue")
    private @Nullable DatasetContentVersionValue datasetContentVersionValue;

    public Optional<DatasetContentVersionValue> datasetContentVersionValue() {
        return Optional.ofNullable(this.datasetContentVersionValue);
    }

    @Import(name="doubleValue")
    private @Nullable Double doubleValue;

    public Optional<Double> doubleValue() {
        return Optional.ofNullable(this.doubleValue);
    }

    @Import(name="outputFileUriValue")
    private @Nullable DatasetOutputFileUriValue outputFileUriValue;

    public Optional<DatasetOutputFileUriValue> outputFileUriValue() {
        return Optional.ofNullable(this.outputFileUriValue);
    }

    @Import(name="stringValue")
    private @Nullable String stringValue;

    public Optional<String> stringValue() {
        return Optional.ofNullable(this.stringValue);
    }

    @Import(name="variableName", required=true)
    private String variableName;

    public String variableName() {
        return this.variableName;
    }

    private DatasetVariable() {}

    private DatasetVariable(DatasetVariable $) {
        this.datasetContentVersionValue = $.datasetContentVersionValue;
        this.doubleValue = $.doubleValue;
        this.outputFileUriValue = $.outputFileUriValue;
        this.stringValue = $.stringValue;
        this.variableName = $.variableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetVariable defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetVariable $;

        public Builder() {
            $ = new DatasetVariable();
        }

        public Builder(DatasetVariable defaults) {
            $ = new DatasetVariable(Objects.requireNonNull(defaults));
        }

        public Builder datasetContentVersionValue(@Nullable DatasetContentVersionValue datasetContentVersionValue) {
            $.datasetContentVersionValue = datasetContentVersionValue;
            return this;
        }

        public Builder doubleValue(@Nullable Double doubleValue) {
            $.doubleValue = doubleValue;
            return this;
        }

        public Builder outputFileUriValue(@Nullable DatasetOutputFileUriValue outputFileUriValue) {
            $.outputFileUriValue = outputFileUriValue;
            return this;
        }

        public Builder stringValue(@Nullable String stringValue) {
            $.stringValue = stringValue;
            return this;
        }

        public Builder variableName(String variableName) {
            $.variableName = variableName;
            return this;
        }

        public DatasetVariable build() {
            $.variableName = Objects.requireNonNull($.variableName, "expected parameter 'variableName' to be non-null");
            return $;
        }
    }

}
