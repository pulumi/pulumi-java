// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.inputs;

import com.pulumi.awsnative.imagebuilder.enums.ImagePipelineSchedulePipelineExecutionStartCondition;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The schedule of the image pipeline.
 * 
 */
public final class ImagePipelineSchedule extends com.pulumi.resources.InvokeArgs {

    public static final ImagePipelineSchedule Empty = new ImagePipelineSchedule();

    /**
     * The condition configures when the pipeline should trigger a new image build.
     * 
     */
    @Import(name="pipelineExecutionStartCondition")
    private @Nullable ImagePipelineSchedulePipelineExecutionStartCondition pipelineExecutionStartCondition;

    public Optional<ImagePipelineSchedulePipelineExecutionStartCondition> pipelineExecutionStartCondition() {
        return Optional.ofNullable(this.pipelineExecutionStartCondition);
    }

    /**
     * The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
     * 
     */
    @Import(name="scheduleExpression")
    private @Nullable String scheduleExpression;

    public Optional<String> scheduleExpression() {
        return Optional.ofNullable(this.scheduleExpression);
    }

    private ImagePipelineSchedule() {}

    private ImagePipelineSchedule(ImagePipelineSchedule $) {
        this.pipelineExecutionStartCondition = $.pipelineExecutionStartCondition;
        this.scheduleExpression = $.scheduleExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImagePipelineSchedule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImagePipelineSchedule $;

        public Builder() {
            $ = new ImagePipelineSchedule();
        }

        public Builder(ImagePipelineSchedule defaults) {
            $ = new ImagePipelineSchedule(Objects.requireNonNull(defaults));
        }

        public Builder pipelineExecutionStartCondition(@Nullable ImagePipelineSchedulePipelineExecutionStartCondition pipelineExecutionStartCondition) {
            $.pipelineExecutionStartCondition = pipelineExecutionStartCondition;
            return this;
        }

        public Builder scheduleExpression(@Nullable String scheduleExpression) {
            $.scheduleExpression = scheduleExpression;
            return this;
        }

        public ImagePipelineSchedule build() {
            return $;
        }
    }

}
