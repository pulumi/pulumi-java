// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.datasync;

import com.pulumi.awsnative.datasync.enums.LocationHDFSAuthenticationType;
import com.pulumi.awsnative.datasync.inputs.LocationHDFSNameNodeArgs;
import com.pulumi.awsnative.datasync.inputs.LocationHDFSQopConfigurationArgs;
import com.pulumi.awsnative.datasync.inputs.LocationHDFSTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LocationHDFSArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocationHDFSArgs Empty = new LocationHDFSArgs();

    /**
     * ARN(s) of the agent(s) to use for an HDFS location.
     * 
     */
    @Import(name="agentArns", required=true)
    private Output<List<String>> agentArns;

    public Output<List<String>> agentArns() {
        return this.agentArns;
    }

    /**
     * The authentication mode used to determine identity of user.
     * 
     */
    @Import(name="authenticationType", required=true)
    private Output<LocationHDFSAuthenticationType> authenticationType;

    public Output<LocationHDFSAuthenticationType> authenticationType() {
        return this.authenticationType;
    }

    /**
     * Size of chunks (blocks) in bytes that the data is divided into when stored in the HDFS cluster.
     * 
     */
    @Import(name="blockSize")
    private @Nullable Output<Integer> blockSize;

    public Optional<Output<Integer>> blockSize() {
        return Optional.ofNullable(this.blockSize);
    }

    /**
     * The Base64 string representation of the Keytab file.
     * 
     */
    @Import(name="kerberosKeytab")
    private @Nullable Output<String> kerberosKeytab;

    public Optional<Output<String>> kerberosKeytab() {
        return Optional.ofNullable(this.kerberosKeytab);
    }

    /**
     * The string representation of the Krb5Conf file, or the presigned URL to access the Krb5.conf file within an S3 bucket.
     * 
     */
    @Import(name="kerberosKrb5Conf")
    private @Nullable Output<String> kerberosKrb5Conf;

    public Optional<Output<String>> kerberosKrb5Conf() {
        return Optional.ofNullable(this.kerberosKrb5Conf);
    }

    /**
     * The unique identity, or principal, to which Kerberos can assign tickets.
     * 
     */
    @Import(name="kerberosPrincipal")
    private @Nullable Output<String> kerberosPrincipal;

    public Optional<Output<String>> kerberosPrincipal() {
        return Optional.ofNullable(this.kerberosPrincipal);
    }

    /**
     * The identifier for the Key Management Server where the encryption keys that encrypt data inside HDFS clusters are stored.
     * 
     */
    @Import(name="kmsKeyProviderUri")
    private @Nullable Output<String> kmsKeyProviderUri;

    public Optional<Output<String>> kmsKeyProviderUri() {
        return Optional.ofNullable(this.kmsKeyProviderUri);
    }

    /**
     * An array of Name Node(s) of the HDFS location.
     * 
     */
    @Import(name="nameNodes", required=true)
    private Output<List<LocationHDFSNameNodeArgs>> nameNodes;

    public Output<List<LocationHDFSNameNodeArgs>> nameNodes() {
        return this.nameNodes;
    }

    @Import(name="qopConfiguration")
    private @Nullable Output<LocationHDFSQopConfigurationArgs> qopConfiguration;

    public Optional<Output<LocationHDFSQopConfigurationArgs>> qopConfiguration() {
        return Optional.ofNullable(this.qopConfiguration);
    }

    /**
     * Number of copies of each block that exists inside the HDFS cluster.
     * 
     */
    @Import(name="replicationFactor")
    private @Nullable Output<Integer> replicationFactor;

    public Optional<Output<Integer>> replicationFactor() {
        return Optional.ofNullable(this.replicationFactor);
    }

    /**
     * The user name that has read and write permissions on the specified HDFS cluster.
     * 
     */
    @Import(name="simpleUser")
    private @Nullable Output<String> simpleUser;

    public Optional<Output<String>> simpleUser() {
        return Optional.ofNullable(this.simpleUser);
    }

    /**
     * The subdirectory in HDFS that is used to read data from the HDFS source location or write data to the HDFS destination.
     * 
     */
    @Import(name="subdirectory")
    private @Nullable Output<String> subdirectory;

    public Optional<Output<String>> subdirectory() {
        return Optional.ofNullable(this.subdirectory);
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<LocationHDFSTagArgs>> tags;

    public Optional<Output<List<LocationHDFSTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private LocationHDFSArgs() {}

    private LocationHDFSArgs(LocationHDFSArgs $) {
        this.agentArns = $.agentArns;
        this.authenticationType = $.authenticationType;
        this.blockSize = $.blockSize;
        this.kerberosKeytab = $.kerberosKeytab;
        this.kerberosKrb5Conf = $.kerberosKrb5Conf;
        this.kerberosPrincipal = $.kerberosPrincipal;
        this.kmsKeyProviderUri = $.kmsKeyProviderUri;
        this.nameNodes = $.nameNodes;
        this.qopConfiguration = $.qopConfiguration;
        this.replicationFactor = $.replicationFactor;
        this.simpleUser = $.simpleUser;
        this.subdirectory = $.subdirectory;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocationHDFSArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocationHDFSArgs $;

        public Builder() {
            $ = new LocationHDFSArgs();
        }

        public Builder(LocationHDFSArgs defaults) {
            $ = new LocationHDFSArgs(Objects.requireNonNull(defaults));
        }

        public Builder agentArns(Output<List<String>> agentArns) {
            $.agentArns = agentArns;
            return this;
        }

        public Builder agentArns(List<String> agentArns) {
            return agentArns(Output.of(agentArns));
        }

        public Builder agentArns(String... agentArns) {
            return agentArns(List.of(agentArns));
        }

        public Builder authenticationType(Output<LocationHDFSAuthenticationType> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        public Builder authenticationType(LocationHDFSAuthenticationType authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        public Builder blockSize(@Nullable Output<Integer> blockSize) {
            $.blockSize = blockSize;
            return this;
        }

        public Builder blockSize(Integer blockSize) {
            return blockSize(Output.of(blockSize));
        }

        public Builder kerberosKeytab(@Nullable Output<String> kerberosKeytab) {
            $.kerberosKeytab = kerberosKeytab;
            return this;
        }

        public Builder kerberosKeytab(String kerberosKeytab) {
            return kerberosKeytab(Output.of(kerberosKeytab));
        }

        public Builder kerberosKrb5Conf(@Nullable Output<String> kerberosKrb5Conf) {
            $.kerberosKrb5Conf = kerberosKrb5Conf;
            return this;
        }

        public Builder kerberosKrb5Conf(String kerberosKrb5Conf) {
            return kerberosKrb5Conf(Output.of(kerberosKrb5Conf));
        }

        public Builder kerberosPrincipal(@Nullable Output<String> kerberosPrincipal) {
            $.kerberosPrincipal = kerberosPrincipal;
            return this;
        }

        public Builder kerberosPrincipal(String kerberosPrincipal) {
            return kerberosPrincipal(Output.of(kerberosPrincipal));
        }

        public Builder kmsKeyProviderUri(@Nullable Output<String> kmsKeyProviderUri) {
            $.kmsKeyProviderUri = kmsKeyProviderUri;
            return this;
        }

        public Builder kmsKeyProviderUri(String kmsKeyProviderUri) {
            return kmsKeyProviderUri(Output.of(kmsKeyProviderUri));
        }

        public Builder nameNodes(Output<List<LocationHDFSNameNodeArgs>> nameNodes) {
            $.nameNodes = nameNodes;
            return this;
        }

        public Builder nameNodes(List<LocationHDFSNameNodeArgs> nameNodes) {
            return nameNodes(Output.of(nameNodes));
        }

        public Builder nameNodes(LocationHDFSNameNodeArgs... nameNodes) {
            return nameNodes(List.of(nameNodes));
        }

        public Builder qopConfiguration(@Nullable Output<LocationHDFSQopConfigurationArgs> qopConfiguration) {
            $.qopConfiguration = qopConfiguration;
            return this;
        }

        public Builder qopConfiguration(LocationHDFSQopConfigurationArgs qopConfiguration) {
            return qopConfiguration(Output.of(qopConfiguration));
        }

        public Builder replicationFactor(@Nullable Output<Integer> replicationFactor) {
            $.replicationFactor = replicationFactor;
            return this;
        }

        public Builder replicationFactor(Integer replicationFactor) {
            return replicationFactor(Output.of(replicationFactor));
        }

        public Builder simpleUser(@Nullable Output<String> simpleUser) {
            $.simpleUser = simpleUser;
            return this;
        }

        public Builder simpleUser(String simpleUser) {
            return simpleUser(Output.of(simpleUser));
        }

        public Builder subdirectory(@Nullable Output<String> subdirectory) {
            $.subdirectory = subdirectory;
            return this;
        }

        public Builder subdirectory(String subdirectory) {
            return subdirectory(Output.of(subdirectory));
        }

        public Builder tags(@Nullable Output<List<LocationHDFSTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<LocationHDFSTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(LocationHDFSTagArgs... tags) {
            return tags(List.of(tags));
        }

        public LocationHDFSArgs build() {
            $.agentArns = Objects.requireNonNull($.agentArns, "expected parameter 'agentArns' to be non-null");
            $.authenticationType = Objects.requireNonNull($.authenticationType, "expected parameter 'authenticationType' to be non-null");
            $.nameNodes = Objects.requireNonNull($.nameNodes, "expected parameter 'nameNodes' to be non-null");
            return $;
        }
    }

}
