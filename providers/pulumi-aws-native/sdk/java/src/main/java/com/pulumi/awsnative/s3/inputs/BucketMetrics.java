// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketMetricsStatus;
import com.pulumi.awsnative.s3.inputs.BucketReplicationTimeValue;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketMetrics extends com.pulumi.resources.InvokeArgs {

    public static final BucketMetrics Empty = new BucketMetrics();

    @Import(name="eventThreshold")
    private @Nullable BucketReplicationTimeValue eventThreshold;

    public Optional<BucketReplicationTimeValue> eventThreshold() {
        return Optional.ofNullable(this.eventThreshold);
    }

    @Import(name="status", required=true)
    private BucketMetricsStatus status;

    public BucketMetricsStatus status() {
        return this.status;
    }

    private BucketMetrics() {}

    private BucketMetrics(BucketMetrics $) {
        this.eventThreshold = $.eventThreshold;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketMetrics defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketMetrics $;

        public Builder() {
            $ = new BucketMetrics();
        }

        public Builder(BucketMetrics defaults) {
            $ = new BucketMetrics(Objects.requireNonNull(defaults));
        }

        public Builder eventThreshold(@Nullable BucketReplicationTimeValue eventThreshold) {
            $.eventThreshold = eventThreshold;
            return this;
        }

        public Builder status(BucketMetricsStatus status) {
            $.status = status;
            return this;
        }

        public BucketMetrics build() {
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
