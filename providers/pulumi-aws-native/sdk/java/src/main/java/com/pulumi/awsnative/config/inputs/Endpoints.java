// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.config.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration for for customizing service endpoints.
 * 
 */
public final class Endpoints extends com.pulumi.resources.InvokeArgs {

    public static final Endpoints Empty = new Endpoints();

    /**
     * Override the default endpoint for AWS Access Analyzer
     * 
     */
    @Import(name="accessanalyzer")
    private @Nullable String accessanalyzer;

    public Optional<String> accessanalyzer() {
        return Optional.ofNullable(this.accessanalyzer);
    }

    /**
     * Override the default endpoint for AWS Certificate Manager
     * 
     */
    @Import(name="acm")
    private @Nullable String acm;

    public Optional<String> acm() {
        return Optional.ofNullable(this.acm);
    }

    /**
     * Override the default endpoint for AWS Certificate Manager Private Certificate Authority
     * 
     */
    @Import(name="acmpca")
    private @Nullable String acmpca;

    public Optional<String> acmpca() {
        return Optional.ofNullable(this.acmpca);
    }

    /**
     * Override the default endpoint for AWS Amplify Console
     * 
     */
    @Import(name="amplify")
    private @Nullable String amplify;

    public Optional<String> amplify() {
        return Optional.ofNullable(this.amplify);
    }

    /**
     * Override the default endpoint for AWS AppConfig
     * 
     */
    @Import(name="appconfig")
    private @Nullable String appconfig;

    public Optional<String> appconfig() {
        return Optional.ofNullable(this.appconfig);
    }

    /**
     * Override the default endpoint for AWS Application Auto Scaling
     * 
     */
    @Import(name="applicationautoscaling")
    private @Nullable String applicationautoscaling;

    public Optional<String> applicationautoscaling() {
        return Optional.ofNullable(this.applicationautoscaling);
    }

    /**
     * Override the default endpoint for AWS CloudWatch Application Insights
     * 
     */
    @Import(name="applicationinsights")
    private @Nullable String applicationinsights;

    public Optional<String> applicationinsights() {
        return Optional.ofNullable(this.applicationinsights);
    }

    /**
     * Override the default endpoint for AWS App Mesh
     * 
     */
    @Import(name="appmesh")
    private @Nullable String appmesh;

    public Optional<String> appmesh() {
        return Optional.ofNullable(this.appmesh);
    }

    /**
     * Override the default endpoint for AWS App Runner
     * 
     */
    @Import(name="apprunner")
    private @Nullable String apprunner;

    public Optional<String> apprunner() {
        return Optional.ofNullable(this.apprunner);
    }

    /**
     * Override the default endpoint for AWS AppStream 2.0
     * 
     */
    @Import(name="appstream")
    private @Nullable String appstream;

    public Optional<String> appstream() {
        return Optional.ofNullable(this.appstream);
    }

    /**
     * Override the default endpoint for AWS AppSync
     * 
     */
    @Import(name="appsync")
    private @Nullable String appsync;

    public Optional<String> appsync() {
        return Optional.ofNullable(this.appsync);
    }

    /**
     * Override the default endpoint for AWS Athena
     * 
     */
    @Import(name="athena")
    private @Nullable String athena;

    public Optional<String> athena() {
        return Optional.ofNullable(this.athena);
    }

    /**
     * Override the default endpoint for AWS Audit Manager
     * 
     */
    @Import(name="auditmanager")
    private @Nullable String auditmanager;

    public Optional<String> auditmanager() {
        return Optional.ofNullable(this.auditmanager);
    }

    /**
     * Override the default endpoint for AWS Auto Scaling
     * 
     */
    @Import(name="autoscaling")
    private @Nullable String autoscaling;

    public Optional<String> autoscaling() {
        return Optional.ofNullable(this.autoscaling);
    }

    /**
     * Override the default endpoint for AWS Backup
     * 
     */
    @Import(name="backup")
    private @Nullable String backup;

    public Optional<String> backup() {
        return Optional.ofNullable(this.backup);
    }

    /**
     * Override the default endpoint for AWS Batch
     * 
     */
    @Import(name="batch")
    private @Nullable String batch;

    public Optional<String> batch() {
        return Optional.ofNullable(this.batch);
    }

    /**
     * Override the default endpoint for AWS Budgets
     * 
     */
    @Import(name="budgets")
    private @Nullable String budgets;

    public Optional<String> budgets() {
        return Optional.ofNullable(this.budgets);
    }

    /**
     * Override the default endpoint for Amazon Chime
     * 
     */
    @Import(name="chime")
    private @Nullable String chime;

    public Optional<String> chime() {
        return Optional.ofNullable(this.chime);
    }

    /**
     * Override the default endpoint for AWS Cloud9
     * 
     */
    @Import(name="cloud9")
    private @Nullable String cloud9;

    public Optional<String> cloud9() {
        return Optional.ofNullable(this.cloud9);
    }

    /**
     * Override the default endpoint for AWS CloudFormation
     * 
     */
    @Import(name="cloudformation")
    private @Nullable String cloudformation;

    public Optional<String> cloudformation() {
        return Optional.ofNullable(this.cloudformation);
    }

    /**
     * Override the default endpoint for AWS CloudFront
     * 
     */
    @Import(name="cloudfront")
    private @Nullable String cloudfront;

    public Optional<String> cloudfront() {
        return Optional.ofNullable(this.cloudfront);
    }

    /**
     * Override the default endpoint for AWS CloudHSM
     * 
     */
    @Import(name="cloudhsm")
    private @Nullable String cloudhsm;

    public Optional<String> cloudhsm() {
        return Optional.ofNullable(this.cloudhsm);
    }

    /**
     * Override the default endpoint for AWS CloudSearch
     * 
     */
    @Import(name="cloudsearch")
    private @Nullable String cloudsearch;

    public Optional<String> cloudsearch() {
        return Optional.ofNullable(this.cloudsearch);
    }

    /**
     * Override the default endpoint for AWS CloudTrail
     * 
     */
    @Import(name="cloudtrail")
    private @Nullable String cloudtrail;

    public Optional<String> cloudtrail() {
        return Optional.ofNullable(this.cloudtrail);
    }

    /**
     * Override the default endpoint for AWS CloudWatch
     * 
     */
    @Import(name="cloudwatch")
    private @Nullable String cloudwatch;

    public Optional<String> cloudwatch() {
        return Optional.ofNullable(this.cloudwatch);
    }

    /**
     * Override the default endpoint for AWS CloudWatch Events
     * 
     */
    @Import(name="cloudwatchevents")
    private @Nullable String cloudwatchevents;

    public Optional<String> cloudwatchevents() {
        return Optional.ofNullable(this.cloudwatchevents);
    }

    /**
     * Override the default endpoint for AWS CloudWatch Logs
     * 
     */
    @Import(name="cloudwatchlogs")
    private @Nullable String cloudwatchlogs;

    public Optional<String> cloudwatchlogs() {
        return Optional.ofNullable(this.cloudwatchlogs);
    }

    /**
     * Override the default endpoint for AWS CodeArtifact
     * 
     */
    @Import(name="codeartifact")
    private @Nullable String codeartifact;

    public Optional<String> codeartifact() {
        return Optional.ofNullable(this.codeartifact);
    }

    /**
     * Override the default endpoint for AWS CodeBuild
     * 
     */
    @Import(name="codebuild")
    private @Nullable String codebuild;

    public Optional<String> codebuild() {
        return Optional.ofNullable(this.codebuild);
    }

    /**
     * Override the default endpoint for AWS CodeCommit
     * 
     */
    @Import(name="codecommit")
    private @Nullable String codecommit;

    public Optional<String> codecommit() {
        return Optional.ofNullable(this.codecommit);
    }

    /**
     * Override the default endpoint for AWS CodeDeploy
     * 
     */
    @Import(name="codedeploy")
    private @Nullable String codedeploy;

    public Optional<String> codedeploy() {
        return Optional.ofNullable(this.codedeploy);
    }

    /**
     * Override the default endpoint for AWS CodePipeline
     * 
     */
    @Import(name="codepipeline")
    private @Nullable String codepipeline;

    public Optional<String> codepipeline() {
        return Optional.ofNullable(this.codepipeline);
    }

    /**
     * Override the default endpoint for AWS CodeStart Connections
     * 
     */
    @Import(name="codestarconnections")
    private @Nullable String codestarconnections;

    public Optional<String> codestarconnections() {
        return Optional.ofNullable(this.codestarconnections);
    }

    /**
     * Override the default endpoint for Amazon Cognito
     * 
     */
    @Import(name="cognitoidentity")
    private @Nullable String cognitoidentity;

    public Optional<String> cognitoidentity() {
        return Optional.ofNullable(this.cognitoidentity);
    }

    /**
     * Override the default endpoint for AWS Config
     * 
     */
    @Import(name="configservice")
    private @Nullable String configservice;

    public Optional<String> configservice() {
        return Optional.ofNullable(this.configservice);
    }

    /**
     * Override the default endpoint for Amazon Connect
     * 
     */
    @Import(name="connect")
    private @Nullable String connect;

    public Optional<String> connect() {
        return Optional.ofNullable(this.connect);
    }

    /**
     * Override the default endpoint for AWS Cost and Usage Reports
     * 
     */
    @Import(name="cur")
    private @Nullable String cur;

    public Optional<String> cur() {
        return Optional.ofNullable(this.cur);
    }

    /**
     * Override the default endpoint for AWS Data Exchange
     * 
     */
    @Import(name="dataexchange")
    private @Nullable String dataexchange;

    public Optional<String> dataexchange() {
        return Optional.ofNullable(this.dataexchange);
    }

    /**
     * Override the default endpoint for AWS Data Pipeline
     * 
     */
    @Import(name="datapipeline")
    private @Nullable String datapipeline;

    public Optional<String> datapipeline() {
        return Optional.ofNullable(this.datapipeline);
    }

    /**
     * Override the default endpoint for AWS DataSync
     * 
     */
    @Import(name="datasync")
    private @Nullable String datasync;

    public Optional<String> datasync() {
        return Optional.ofNullable(this.datasync);
    }

    /**
     * Override the default endpoint for AWS DynamoDB Accelerator
     * 
     */
    @Import(name="dax")
    private @Nullable String dax;

    public Optional<String> dax() {
        return Optional.ofNullable(this.dax);
    }

    /**
     * Override the default endpoint for AWS Detective
     * 
     */
    @Import(name="detective")
    private @Nullable String detective;

    public Optional<String> detective() {
        return Optional.ofNullable(this.detective);
    }

    /**
     * Override the default endpoint for AWS Device Farm
     * 
     */
    @Import(name="devicefarm")
    private @Nullable String devicefarm;

    public Optional<String> devicefarm() {
        return Optional.ofNullable(this.devicefarm);
    }

    /**
     * Override the default endpoint for AWS Direct Connect
     * 
     */
    @Import(name="directconnect")
    private @Nullable String directconnect;

    public Optional<String> directconnect() {
        return Optional.ofNullable(this.directconnect);
    }

    /**
     * Override the default endpoint for AWS Data Lifecycle Manager
     * 
     */
    @Import(name="dlm")
    private @Nullable String dlm;

    public Optional<String> dlm() {
        return Optional.ofNullable(this.dlm);
    }

    /**
     * Override the default endpoint for AWS Database Migration Service
     * 
     */
    @Import(name="dms")
    private @Nullable String dms;

    public Optional<String> dms() {
        return Optional.ofNullable(this.dms);
    }

    /**
     * Override the default endpoint for AWS DocumentDB
     * 
     */
    @Import(name="docdb")
    private @Nullable String docdb;

    public Optional<String> docdb() {
        return Optional.ofNullable(this.docdb);
    }

    /**
     * Override the default endpoint for AWS Directory Service
     * 
     */
    @Import(name="ds")
    private @Nullable String ds;

    public Optional<String> ds() {
        return Optional.ofNullable(this.ds);
    }

    /**
     * Override the default endpoint for AWS DynamoDB
     * 
     */
    @Import(name="dynamodb")
    private @Nullable String dynamodb;

    public Optional<String> dynamodb() {
        return Optional.ofNullable(this.dynamodb);
    }

    /**
     * Override the default endpoint for AWS Elastic Compute Cloud (EC2)
     * 
     */
    @Import(name="ec2")
    private @Nullable String ec2;

    public Optional<String> ec2() {
        return Optional.ofNullable(this.ec2);
    }

    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR)
     * 
     */
    @Import(name="ecr")
    private @Nullable String ecr;

    public Optional<String> ecr() {
        return Optional.ofNullable(this.ecr);
    }

    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR) Public
     * 
     */
    @Import(name="ecrpublic")
    private @Nullable String ecrpublic;

    public Optional<String> ecrpublic() {
        return Optional.ofNullable(this.ecrpublic);
    }

    /**
     * Override the default endpoint for AWS Elastic Container Service (ECS)
     * 
     */
    @Import(name="ecs")
    private @Nullable String ecs;

    public Optional<String> ecs() {
        return Optional.ofNullable(this.ecs);
    }

    /**
     * Override the default endpoint for AWS Elastic File System (EFS)
     * 
     */
    @Import(name="efs")
    private @Nullable String efs;

    public Optional<String> efs() {
        return Optional.ofNullable(this.efs);
    }

    /**
     * Override the default endpoint for AWS Elastic Kubernetes Service (EKS)
     * 
     */
    @Import(name="eks")
    private @Nullable String eks;

    public Optional<String> eks() {
        return Optional.ofNullable(this.eks);
    }

    /**
     * Override the default endpoint for AWS ElastiCache
     * 
     */
    @Import(name="elasticache")
    private @Nullable String elasticache;

    public Optional<String> elasticache() {
        return Optional.ofNullable(this.elasticache);
    }

    /**
     * Override the default endpoint for AWS Elastic Beanstalk
     * 
     */
    @Import(name="elasticbeanstalk")
    private @Nullable String elasticbeanstalk;

    public Optional<String> elasticbeanstalk() {
        return Optional.ofNullable(this.elasticbeanstalk);
    }

    /**
     * Override the default endpoint for AWS Elastic Transcoder
     * 
     */
    @Import(name="elastictranscoder")
    private @Nullable String elastictranscoder;

    public Optional<String> elastictranscoder() {
        return Optional.ofNullable(this.elastictranscoder);
    }

    /**
     * Override the default endpoint for AWS Elastic Load Balancing
     * 
     */
    @Import(name="elb")
    private @Nullable String elb;

    public Optional<String> elb() {
        return Optional.ofNullable(this.elb);
    }

    /**
     * Override the default endpoint for AWS Elastic Load Balancing V2
     * 
     */
    @Import(name="elbv2")
    private @Nullable String elbv2;

    public Optional<String> elbv2() {
        return Optional.ofNullable(this.elbv2);
    }

    /**
     * Override the default endpoint for AWS EMR
     * 
     */
    @Import(name="emr")
    private @Nullable String emr;

    public Optional<String> emr() {
        return Optional.ofNullable(this.emr);
    }

    /**
     * Override the default endpoint for AWS EMR on EKS
     * 
     */
    @Import(name="emrcontainers")
    private @Nullable String emrcontainers;

    public Optional<String> emrcontainers() {
        return Optional.ofNullable(this.emrcontainers);
    }

    /**
     * Override the default endpoint for AWS OpenSearch Service (formerly Elasticsearch)
     * 
     */
    @Import(name="es")
    private @Nullable String es;

    public Optional<String> es() {
        return Optional.ofNullable(this.es);
    }

    /**
     * Override the default endpoint for AWS Kinesis Data Firehose
     * 
     */
    @Import(name="firehose")
    private @Nullable String firehose;

    public Optional<String> firehose() {
        return Optional.ofNullable(this.firehose);
    }

    /**
     * Override the default endpoint for AWS Firewall Manager
     * 
     */
    @Import(name="fms")
    private @Nullable String fms;

    public Optional<String> fms() {
        return Optional.ofNullable(this.fms);
    }

    /**
     * Override the default endpoint for Amazon Forecast
     * 
     */
    @Import(name="forecast")
    private @Nullable String forecast;

    public Optional<String> forecast() {
        return Optional.ofNullable(this.forecast);
    }

    /**
     * Override the default endpoint for AWS FSx
     * 
     */
    @Import(name="fsx")
    private @Nullable String fsx;

    public Optional<String> fsx() {
        return Optional.ofNullable(this.fsx);
    }

    /**
     * Override the default endpoint for AWS GameLift
     * 
     */
    @Import(name="gamelift")
    private @Nullable String gamelift;

    public Optional<String> gamelift() {
        return Optional.ofNullable(this.gamelift);
    }

    /**
     * Override the default endpoint for Amazon S3 Glacier
     * 
     */
    @Import(name="glacier")
    private @Nullable String glacier;

    public Optional<String> glacier() {
        return Optional.ofNullable(this.glacier);
    }

    /**
     * Override the default endpoint for AWS Global Accelerator
     * 
     */
    @Import(name="globalaccelerator")
    private @Nullable String globalaccelerator;

    public Optional<String> globalaccelerator() {
        return Optional.ofNullable(this.globalaccelerator);
    }

    /**
     * Override the default endpoint for AWS Glue
     * 
     */
    @Import(name="glue")
    private @Nullable String glue;

    public Optional<String> glue() {
        return Optional.ofNullable(this.glue);
    }

    /**
     * Override the default endpoint for AWS IoT Greengrass
     * 
     */
    @Import(name="greengrass")
    private @Nullable String greengrass;

    public Optional<String> greengrass() {
        return Optional.ofNullable(this.greengrass);
    }

    /**
     * Override the default endpoint for AWS GuardDuty
     * 
     */
    @Import(name="guardduty")
    private @Nullable String guardduty;

    public Optional<String> guardduty() {
        return Optional.ofNullable(this.guardduty);
    }

    /**
     * Override the default endpoint for AWS Identity and Access Management
     * 
     */
    @Import(name="iam")
    private @Nullable String iam;

    public Optional<String> iam() {
        return Optional.ofNullable(this.iam);
    }

    /**
     * Override the default endpoint for AWS Single Sign-On (SSO) Identity Store
     * 
     */
    @Import(name="identitystore")
    private @Nullable String identitystore;

    public Optional<String> identitystore() {
        return Optional.ofNullable(this.identitystore);
    }

    /**
     * Override the default endpoint for AWS Image Builder
     * 
     */
    @Import(name="imagebuilder")
    private @Nullable String imagebuilder;

    public Optional<String> imagebuilder() {
        return Optional.ofNullable(this.imagebuilder);
    }

    /**
     * Override the default endpoint for Amazon Inspector
     * 
     */
    @Import(name="inspector")
    private @Nullable String inspector;

    public Optional<String> inspector() {
        return Optional.ofNullable(this.inspector);
    }

    /**
     * Override the default endpoint for AWS IoT
     * 
     */
    @Import(name="iot")
    private @Nullable String iot;

    public Optional<String> iot() {
        return Optional.ofNullable(this.iot);
    }

    /**
     * Override the default endpoint for AWS IoT Analytics
     * 
     */
    @Import(name="iotanalytics")
    private @Nullable String iotanalytics;

    public Optional<String> iotanalytics() {
        return Optional.ofNullable(this.iotanalytics);
    }

    /**
     * Override the default endpoint for AWS IoT Events
     * 
     */
    @Import(name="iotevents")
    private @Nullable String iotevents;

    public Optional<String> iotevents() {
        return Optional.ofNullable(this.iotevents);
    }

    /**
     * Override the default endpoint for Amazon Managed Streaming for Apache Kafka (MSK)
     * 
     */
    @Import(name="kafka")
    private @Nullable String kafka;

    public Optional<String> kafka() {
        return Optional.ofNullable(this.kafka);
    }

    /**
     * Override the default endpoint for Amazon Kinesis
     * 
     */
    @Import(name="kinesis")
    private @Nullable String kinesis;

    public Optional<String> kinesis() {
        return Optional.ofNullable(this.kinesis);
    }

    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics
     * 
     */
    @Import(name="kinesisanalytics")
    private @Nullable String kinesisanalytics;

    public Optional<String> kinesisanalytics() {
        return Optional.ofNullable(this.kinesisanalytics);
    }

    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics V2
     * 
     */
    @Import(name="kinesisanalyticsv2")
    private @Nullable String kinesisanalyticsv2;

    public Optional<String> kinesisanalyticsv2() {
        return Optional.ofNullable(this.kinesisanalyticsv2);
    }

    /**
     * Override the default endpoint for Amazon Kinesis Video Streams
     * 
     */
    @Import(name="kinesisvideo")
    private @Nullable String kinesisvideo;

    public Optional<String> kinesisvideo() {
        return Optional.ofNullable(this.kinesisvideo);
    }

    /**
     * Override the default endpoint for AWS Key Management Service
     * 
     */
    @Import(name="kms")
    private @Nullable String kms;

    public Optional<String> kms() {
        return Optional.ofNullable(this.kms);
    }

    /**
     * Override the default endpoint for AWS Lake Formation
     * 
     */
    @Import(name="lakeformation")
    private @Nullable String lakeformation;

    public Optional<String> lakeformation() {
        return Optional.ofNullable(this.lakeformation);
    }

    /**
     * Override the default endpoint for AWS Lambda
     * 
     */
    @Import(name="lambda")
    private @Nullable String lambda;

    public Optional<String> lambda() {
        return Optional.ofNullable(this.lambda);
    }

    /**
     * Override the default endpoint for Amazon Lex
     * 
     */
    @Import(name="lexmodels")
    private @Nullable String lexmodels;

    public Optional<String> lexmodels() {
        return Optional.ofNullable(this.lexmodels);
    }

    /**
     * Override the default endpoint for AWS License Manager
     * 
     */
    @Import(name="licensemanager")
    private @Nullable String licensemanager;

    public Optional<String> licensemanager() {
        return Optional.ofNullable(this.licensemanager);
    }

    /**
     * Override the default endpoint for Amazon Lightsail
     * 
     */
    @Import(name="lightsail")
    private @Nullable String lightsail;

    public Optional<String> lightsail() {
        return Optional.ofNullable(this.lightsail);
    }

    /**
     * Override the default endpoint for Amazon Location
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Override the default endpoint for Amazon Macie
     * 
     */
    @Import(name="macie")
    private @Nullable String macie;

    public Optional<String> macie() {
        return Optional.ofNullable(this.macie);
    }

    /**
     * Override the default endpoint for Amazon Macie V2
     * 
     */
    @Import(name="macie2")
    private @Nullable String macie2;

    public Optional<String> macie2() {
        return Optional.ofNullable(this.macie2);
    }

    /**
     * Override the default endpoint for Amazon Managed Blockchain
     * 
     */
    @Import(name="managedblockchain")
    private @Nullable String managedblockchain;

    public Optional<String> managedblockchain() {
        return Optional.ofNullable(this.managedblockchain);
    }

    /**
     * Override the default endpoint for AWS Marketplace Catalog
     * 
     */
    @Import(name="marketplacecatalog")
    private @Nullable String marketplacecatalog;

    public Optional<String> marketplacecatalog() {
        return Optional.ofNullable(this.marketplacecatalog);
    }

    /**
     * Override the default endpoint for AWS MediaConnect
     * 
     */
    @Import(name="mediaconnect")
    private @Nullable String mediaconnect;

    public Optional<String> mediaconnect() {
        return Optional.ofNullable(this.mediaconnect);
    }

    /**
     * Override the default endpoint for AWS MediaConvert
     * 
     */
    @Import(name="mediaconvert")
    private @Nullable String mediaconvert;

    public Optional<String> mediaconvert() {
        return Optional.ofNullable(this.mediaconvert);
    }

    /**
     * Override the default endpoint for AWS MediaLive
     * 
     */
    @Import(name="medialive")
    private @Nullable String medialive;

    public Optional<String> medialive() {
        return Optional.ofNullable(this.medialive);
    }

    /**
     * Override the default endpoint for AWS MediaPackage
     * 
     */
    @Import(name="mediapackage")
    private @Nullable String mediapackage;

    public Optional<String> mediapackage() {
        return Optional.ofNullable(this.mediapackage);
    }

    /**
     * Override the default endpoint for AWS Elemental MediaStore container
     * 
     */
    @Import(name="mediastore")
    private @Nullable String mediastore;

    public Optional<String> mediastore() {
        return Optional.ofNullable(this.mediastore);
    }

    /**
     * Override the default endpoint for AWS Elemental MediaStore asset
     * 
     */
    @Import(name="mediastoredata")
    private @Nullable String mediastoredata;

    public Optional<String> mediastoredata() {
        return Optional.ofNullable(this.mediastoredata);
    }

    /**
     * Override the default endpoint for AWS MemoryDB for Redis
     * 
     */
    @Import(name="memorydb")
    private @Nullable String memorydb;

    public Optional<String> memorydb() {
        return Optional.ofNullable(this.memorydb);
    }

    /**
     * Override the default endpoint for Amazon MQ
     * 
     */
    @Import(name="mq")
    private @Nullable String mq;

    public Optional<String> mq() {
        return Optional.ofNullable(this.mq);
    }

    /**
     * Override the default endpoint for Amazon Managed Workflows for Apache Airflow
     * 
     */
    @Import(name="mwaa")
    private @Nullable String mwaa;

    public Optional<String> mwaa() {
        return Optional.ofNullable(this.mwaa);
    }

    /**
     * Override the default endpoint for Amazon Neptune
     * 
     */
    @Import(name="neptune")
    private @Nullable String neptune;

    public Optional<String> neptune() {
        return Optional.ofNullable(this.neptune);
    }

    /**
     * Override the default endpoint for AWS Network Firewall
     * 
     */
    @Import(name="networkfirewall")
    private @Nullable String networkfirewall;

    public Optional<String> networkfirewall() {
        return Optional.ofNullable(this.networkfirewall);
    }

    /**
     * Override the default endpoint for AWS Network Manager
     * 
     */
    @Import(name="networkmanager")
    private @Nullable String networkmanager;

    public Optional<String> networkmanager() {
        return Optional.ofNullable(this.networkmanager);
    }

    /**
     * Override the default endpoint for AWS OpsWorks
     * 
     */
    @Import(name="opsworks")
    private @Nullable String opsworks;

    public Optional<String> opsworks() {
        return Optional.ofNullable(this.opsworks);
    }

    /**
     * Override the default endpoint for AWS Organizations
     * 
     */
    @Import(name="organizations")
    private @Nullable String organizations;

    public Optional<String> organizations() {
        return Optional.ofNullable(this.organizations);
    }

    /**
     * Override the default endpoint for AWS Outposts
     * 
     */
    @Import(name="outposts")
    private @Nullable String outposts;

    public Optional<String> outposts() {
        return Optional.ofNullable(this.outposts);
    }

    /**
     * Override the default endpoint for Amazon Personalize
     * 
     */
    @Import(name="personalize")
    private @Nullable String personalize;

    public Optional<String> personalize() {
        return Optional.ofNullable(this.personalize);
    }

    /**
     * Override the default endpoint for Amazon Pinpoint
     * 
     */
    @Import(name="pinpoint")
    private @Nullable String pinpoint;

    public Optional<String> pinpoint() {
        return Optional.ofNullable(this.pinpoint);
    }

    /**
     * Override the default endpoint for Amazon Web Services Price List Service
     * 
     */
    @Import(name="pricing")
    private @Nullable String pricing;

    public Optional<String> pricing() {
        return Optional.ofNullable(this.pricing);
    }

    /**
     * Override the default endpoint for Amazon QLDB
     * 
     */
    @Import(name="qldb")
    private @Nullable String qldb;

    public Optional<String> qldb() {
        return Optional.ofNullable(this.qldb);
    }

    /**
     * Override the default endpoint for Amazon QuickSight
     * 
     */
    @Import(name="quicksight")
    private @Nullable String quicksight;

    public Optional<String> quicksight() {
        return Optional.ofNullable(this.quicksight);
    }

    /**
     * Override the default endpoint for AWS Resource Access Manager
     * 
     */
    @Import(name="ram")
    private @Nullable String ram;

    public Optional<String> ram() {
        return Optional.ofNullable(this.ram);
    }

    /**
     * Override the default endpoint for Amazon Relational Database Service
     * 
     */
    @Import(name="rds")
    private @Nullable String rds;

    public Optional<String> rds() {
        return Optional.ofNullable(this.rds);
    }

    /**
     * Override the default endpoint for Amazon Redshift
     * 
     */
    @Import(name="redshift")
    private @Nullable String redshift;

    public Optional<String> redshift() {
        return Optional.ofNullable(this.redshift);
    }

    /**
     * Override the default endpoint for AWS Resource Groups
     * 
     */
    @Import(name="resourcegroups")
    private @Nullable String resourcegroups;

    public Optional<String> resourcegroups() {
        return Optional.ofNullable(this.resourcegroups);
    }

    /**
     * Override the default endpoint for AWS Resource Groups Tagging API
     * 
     */
    @Import(name="resourcegroupstaggingapi")
    private @Nullable String resourcegroupstaggingapi;

    public Optional<String> resourcegroupstaggingapi() {
        return Optional.ofNullable(this.resourcegroupstaggingapi);
    }

    /**
     * Override the default endpoint for Amazon Route 53
     * 
     */
    @Import(name="route53")
    private @Nullable String route53;

    public Optional<String> route53() {
        return Optional.ofNullable(this.route53);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Domains
     * 
     */
    @Import(name="route53domains")
    private @Nullable String route53domains;

    public Optional<String> route53domains() {
        return Optional.ofNullable(this.route53domains);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Recovery Control
     * 
     */
    @Import(name="route53recoverycontrolconfig")
    private @Nullable String route53recoverycontrolconfig;

    public Optional<String> route53recoverycontrolconfig() {
        return Optional.ofNullable(this.route53recoverycontrolconfig);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Recovery Readiness
     * 
     */
    @Import(name="route53recoveryreadiness")
    private @Nullable String route53recoveryreadiness;

    public Optional<String> route53recoveryreadiness() {
        return Optional.ofNullable(this.route53recoveryreadiness);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Resolver
     * 
     */
    @Import(name="route53resolver")
    private @Nullable String route53resolver;

    public Optional<String> route53resolver() {
        return Optional.ofNullable(this.route53resolver);
    }

    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3)
     * 
     */
    @Import(name="s3")
    private @Nullable String s3;

    public Optional<String> s3() {
        return Optional.ofNullable(this.s3);
    }

    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3) Control
     * 
     */
    @Import(name="s3control")
    private @Nullable String s3control;

    public Optional<String> s3control() {
        return Optional.ofNullable(this.s3control);
    }

    /**
     * Override the default endpoint for Amazon S3 on Outposts
     * 
     */
    @Import(name="s3outposts")
    private @Nullable String s3outposts;

    public Optional<String> s3outposts() {
        return Optional.ofNullable(this.s3outposts);
    }

    /**
     * Override the default endpoint for AWS SageMaker
     * 
     */
    @Import(name="sagemaker")
    private @Nullable String sagemaker;

    public Optional<String> sagemaker() {
        return Optional.ofNullable(this.sagemaker);
    }

    /**
     * Override the default endpoint for Amazon EventBridge Schema Registry
     * 
     */
    @Import(name="schemas")
    private @Nullable String schemas;

    public Optional<String> schemas() {
        return Optional.ofNullable(this.schemas);
    }

    /**
     * Override the default endpoint for Amazon SimpleDB
     * 
     */
    @Import(name="sdb")
    private @Nullable String sdb;

    public Optional<String> sdb() {
        return Optional.ofNullable(this.sdb);
    }

    /**
     * Override the default endpoint for AWS Secrets Manager
     * 
     */
    @Import(name="secretsmanager")
    private @Nullable String secretsmanager;

    public Optional<String> secretsmanager() {
        return Optional.ofNullable(this.secretsmanager);
    }

    /**
     * Override the default endpoint for AWS Security Hub
     * 
     */
    @Import(name="securityhub")
    private @Nullable String securityhub;

    public Optional<String> securityhub() {
        return Optional.ofNullable(this.securityhub);
    }

    /**
     * Override the default endpoint for AWS Serverless Application Repository
     * 
     */
    @Import(name="serverlessrepo")
    private @Nullable String serverlessrepo;

    public Optional<String> serverlessrepo() {
        return Optional.ofNullable(this.serverlessrepo);
    }

    /**
     * Override the default endpoint for AWS Service Catalog
     * 
     */
    @Import(name="servicecatalog")
    private @Nullable String servicecatalog;

    public Optional<String> servicecatalog() {
        return Optional.ofNullable(this.servicecatalog);
    }

    /**
     * Override the default endpoint for AWS Cloud Map
     * 
     */
    @Import(name="servicediscovery")
    private @Nullable String servicediscovery;

    public Optional<String> servicediscovery() {
        return Optional.ofNullable(this.servicediscovery);
    }

    /**
     * Override the default endpoint for AWS Service Quotas
     * 
     */
    @Import(name="servicequotas")
    private @Nullable String servicequotas;

    public Optional<String> servicequotas() {
        return Optional.ofNullable(this.servicequotas);
    }

    /**
     * Override the default endpoint for Amazon Simple Email Service (SES)
     * 
     */
    @Import(name="ses")
    private @Nullable String ses;

    public Optional<String> ses() {
        return Optional.ofNullable(this.ses);
    }

    /**
     * Override the default endpoint for AWS Shield Advanced API
     * 
     */
    @Import(name="shield")
    private @Nullable String shield;

    public Optional<String> shield() {
        return Optional.ofNullable(this.shield);
    }

    /**
     * Override the default endpoint for AWS Signer
     * 
     */
    @Import(name="signer")
    private @Nullable String signer;

    public Optional<String> signer() {
        return Optional.ofNullable(this.signer);
    }

    /**
     * Override the default endpoint for Amazon Simple Notification Service (SNS)
     * 
     */
    @Import(name="sns")
    private @Nullable String sns;

    public Optional<String> sns() {
        return Optional.ofNullable(this.sns);
    }

    /**
     * Override the default endpoint for Amazon Simple Queue Service (SQS)
     * 
     */
    @Import(name="sqs")
    private @Nullable String sqs;

    public Optional<String> sqs() {
        return Optional.ofNullable(this.sqs);
    }

    /**
     * Override the default endpoint for AWS Systems Manager
     * 
     */
    @Import(name="ssm")
    private @Nullable String ssm;

    public Optional<String> ssm() {
        return Optional.ofNullable(this.ssm);
    }

    /**
     * Override the default endpoint for AWS Single Sign On (SSO)
     * 
     */
    @Import(name="ssoadmin")
    private @Nullable String ssoadmin;

    public Optional<String> ssoadmin() {
        return Optional.ofNullable(this.ssoadmin);
    }

    /**
     * Override the default endpoint for AWS Step Functions
     * 
     */
    @Import(name="stepfunctions")
    private @Nullable String stepfunctions;

    public Optional<String> stepfunctions() {
        return Optional.ofNullable(this.stepfunctions);
    }

    /**
     * Override the default endpoint for AWS Storage Gateway
     * 
     */
    @Import(name="storagegateway")
    private @Nullable String storagegateway;

    public Optional<String> storagegateway() {
        return Optional.ofNullable(this.storagegateway);
    }

    /**
     * Override the default endpoint for AWS Security Token Service (STS)
     * 
     */
    @Import(name="sts")
    private @Nullable String sts;

    public Optional<String> sts() {
        return Optional.ofNullable(this.sts);
    }

    /**
     * Override the default endpoint for Amazon Simple Workflow Service (SWF)
     * 
     */
    @Import(name="swf")
    private @Nullable String swf;

    public Optional<String> swf() {
        return Optional.ofNullable(this.swf);
    }

    /**
     * Override the default endpoint for Amazon CloudWatch Synthetics
     * 
     */
    @Import(name="synthetics")
    private @Nullable String synthetics;

    public Optional<String> synthetics() {
        return Optional.ofNullable(this.synthetics);
    }

    /**
     * Override the default endpoint for Amazon Timestream
     * 
     */
    @Import(name="timestreamwrite")
    private @Nullable String timestreamwrite;

    public Optional<String> timestreamwrite() {
        return Optional.ofNullable(this.timestreamwrite);
    }

    /**
     * Override the default endpoint for AWS Transfer Family
     * 
     */
    @Import(name="transfer")
    private @Nullable String transfer;

    public Optional<String> transfer() {
        return Optional.ofNullable(this.transfer);
    }

    /**
     * Override the default endpoint for AWS WAF Classic
     * 
     */
    @Import(name="waf")
    private @Nullable String waf;

    public Optional<String> waf() {
        return Optional.ofNullable(this.waf);
    }

    /**
     * Override the default endpoint for AWS WAF Regional Classic
     * 
     */
    @Import(name="wafregional")
    private @Nullable String wafregional;

    public Optional<String> wafregional() {
        return Optional.ofNullable(this.wafregional);
    }

    /**
     * Override the default endpoint for AWS WAF V2
     * 
     */
    @Import(name="wafv2")
    private @Nullable String wafv2;

    public Optional<String> wafv2() {
        return Optional.ofNullable(this.wafv2);
    }

    /**
     * Override the default endpoint for Amazon WorkLink
     * 
     */
    @Import(name="worklink")
    private @Nullable String worklink;

    public Optional<String> worklink() {
        return Optional.ofNullable(this.worklink);
    }

    /**
     * Override the default endpoint for Amazon WorkMail
     * 
     */
    @Import(name="workmail")
    private @Nullable String workmail;

    public Optional<String> workmail() {
        return Optional.ofNullable(this.workmail);
    }

    /**
     * Override the default endpoint for Amazon WorkSpaces
     * 
     */
    @Import(name="workspaces")
    private @Nullable String workspaces;

    public Optional<String> workspaces() {
        return Optional.ofNullable(this.workspaces);
    }

    /**
     * Override the default endpoint for AWS X-Ray
     * 
     */
    @Import(name="xray")
    private @Nullable String xray;

    public Optional<String> xray() {
        return Optional.ofNullable(this.xray);
    }

    private Endpoints() {}

    private Endpoints(Endpoints $) {
        this.accessanalyzer = $.accessanalyzer;
        this.acm = $.acm;
        this.acmpca = $.acmpca;
        this.amplify = $.amplify;
        this.appconfig = $.appconfig;
        this.applicationautoscaling = $.applicationautoscaling;
        this.applicationinsights = $.applicationinsights;
        this.appmesh = $.appmesh;
        this.apprunner = $.apprunner;
        this.appstream = $.appstream;
        this.appsync = $.appsync;
        this.athena = $.athena;
        this.auditmanager = $.auditmanager;
        this.autoscaling = $.autoscaling;
        this.backup = $.backup;
        this.batch = $.batch;
        this.budgets = $.budgets;
        this.chime = $.chime;
        this.cloud9 = $.cloud9;
        this.cloudformation = $.cloudformation;
        this.cloudfront = $.cloudfront;
        this.cloudhsm = $.cloudhsm;
        this.cloudsearch = $.cloudsearch;
        this.cloudtrail = $.cloudtrail;
        this.cloudwatch = $.cloudwatch;
        this.cloudwatchevents = $.cloudwatchevents;
        this.cloudwatchlogs = $.cloudwatchlogs;
        this.codeartifact = $.codeartifact;
        this.codebuild = $.codebuild;
        this.codecommit = $.codecommit;
        this.codedeploy = $.codedeploy;
        this.codepipeline = $.codepipeline;
        this.codestarconnections = $.codestarconnections;
        this.cognitoidentity = $.cognitoidentity;
        this.configservice = $.configservice;
        this.connect = $.connect;
        this.cur = $.cur;
        this.dataexchange = $.dataexchange;
        this.datapipeline = $.datapipeline;
        this.datasync = $.datasync;
        this.dax = $.dax;
        this.detective = $.detective;
        this.devicefarm = $.devicefarm;
        this.directconnect = $.directconnect;
        this.dlm = $.dlm;
        this.dms = $.dms;
        this.docdb = $.docdb;
        this.ds = $.ds;
        this.dynamodb = $.dynamodb;
        this.ec2 = $.ec2;
        this.ecr = $.ecr;
        this.ecrpublic = $.ecrpublic;
        this.ecs = $.ecs;
        this.efs = $.efs;
        this.eks = $.eks;
        this.elasticache = $.elasticache;
        this.elasticbeanstalk = $.elasticbeanstalk;
        this.elastictranscoder = $.elastictranscoder;
        this.elb = $.elb;
        this.elbv2 = $.elbv2;
        this.emr = $.emr;
        this.emrcontainers = $.emrcontainers;
        this.es = $.es;
        this.firehose = $.firehose;
        this.fms = $.fms;
        this.forecast = $.forecast;
        this.fsx = $.fsx;
        this.gamelift = $.gamelift;
        this.glacier = $.glacier;
        this.globalaccelerator = $.globalaccelerator;
        this.glue = $.glue;
        this.greengrass = $.greengrass;
        this.guardduty = $.guardduty;
        this.iam = $.iam;
        this.identitystore = $.identitystore;
        this.imagebuilder = $.imagebuilder;
        this.inspector = $.inspector;
        this.iot = $.iot;
        this.iotanalytics = $.iotanalytics;
        this.iotevents = $.iotevents;
        this.kafka = $.kafka;
        this.kinesis = $.kinesis;
        this.kinesisanalytics = $.kinesisanalytics;
        this.kinesisanalyticsv2 = $.kinesisanalyticsv2;
        this.kinesisvideo = $.kinesisvideo;
        this.kms = $.kms;
        this.lakeformation = $.lakeformation;
        this.lambda = $.lambda;
        this.lexmodels = $.lexmodels;
        this.licensemanager = $.licensemanager;
        this.lightsail = $.lightsail;
        this.location = $.location;
        this.macie = $.macie;
        this.macie2 = $.macie2;
        this.managedblockchain = $.managedblockchain;
        this.marketplacecatalog = $.marketplacecatalog;
        this.mediaconnect = $.mediaconnect;
        this.mediaconvert = $.mediaconvert;
        this.medialive = $.medialive;
        this.mediapackage = $.mediapackage;
        this.mediastore = $.mediastore;
        this.mediastoredata = $.mediastoredata;
        this.memorydb = $.memorydb;
        this.mq = $.mq;
        this.mwaa = $.mwaa;
        this.neptune = $.neptune;
        this.networkfirewall = $.networkfirewall;
        this.networkmanager = $.networkmanager;
        this.opsworks = $.opsworks;
        this.organizations = $.organizations;
        this.outposts = $.outposts;
        this.personalize = $.personalize;
        this.pinpoint = $.pinpoint;
        this.pricing = $.pricing;
        this.qldb = $.qldb;
        this.quicksight = $.quicksight;
        this.ram = $.ram;
        this.rds = $.rds;
        this.redshift = $.redshift;
        this.resourcegroups = $.resourcegroups;
        this.resourcegroupstaggingapi = $.resourcegroupstaggingapi;
        this.route53 = $.route53;
        this.route53domains = $.route53domains;
        this.route53recoverycontrolconfig = $.route53recoverycontrolconfig;
        this.route53recoveryreadiness = $.route53recoveryreadiness;
        this.route53resolver = $.route53resolver;
        this.s3 = $.s3;
        this.s3control = $.s3control;
        this.s3outposts = $.s3outposts;
        this.sagemaker = $.sagemaker;
        this.schemas = $.schemas;
        this.sdb = $.sdb;
        this.secretsmanager = $.secretsmanager;
        this.securityhub = $.securityhub;
        this.serverlessrepo = $.serverlessrepo;
        this.servicecatalog = $.servicecatalog;
        this.servicediscovery = $.servicediscovery;
        this.servicequotas = $.servicequotas;
        this.ses = $.ses;
        this.shield = $.shield;
        this.signer = $.signer;
        this.sns = $.sns;
        this.sqs = $.sqs;
        this.ssm = $.ssm;
        this.ssoadmin = $.ssoadmin;
        this.stepfunctions = $.stepfunctions;
        this.storagegateway = $.storagegateway;
        this.sts = $.sts;
        this.swf = $.swf;
        this.synthetics = $.synthetics;
        this.timestreamwrite = $.timestreamwrite;
        this.transfer = $.transfer;
        this.waf = $.waf;
        this.wafregional = $.wafregional;
        this.wafv2 = $.wafv2;
        this.worklink = $.worklink;
        this.workmail = $.workmail;
        this.workspaces = $.workspaces;
        this.xray = $.xray;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Endpoints defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Endpoints $;

        public Builder() {
            $ = new Endpoints();
        }

        public Builder(Endpoints defaults) {
            $ = new Endpoints(Objects.requireNonNull(defaults));
        }

        public Builder accessanalyzer(@Nullable String accessanalyzer) {
            $.accessanalyzer = accessanalyzer;
            return this;
        }

        public Builder acm(@Nullable String acm) {
            $.acm = acm;
            return this;
        }

        public Builder acmpca(@Nullable String acmpca) {
            $.acmpca = acmpca;
            return this;
        }

        public Builder amplify(@Nullable String amplify) {
            $.amplify = amplify;
            return this;
        }

        public Builder appconfig(@Nullable String appconfig) {
            $.appconfig = appconfig;
            return this;
        }

        public Builder applicationautoscaling(@Nullable String applicationautoscaling) {
            $.applicationautoscaling = applicationautoscaling;
            return this;
        }

        public Builder applicationinsights(@Nullable String applicationinsights) {
            $.applicationinsights = applicationinsights;
            return this;
        }

        public Builder appmesh(@Nullable String appmesh) {
            $.appmesh = appmesh;
            return this;
        }

        public Builder apprunner(@Nullable String apprunner) {
            $.apprunner = apprunner;
            return this;
        }

        public Builder appstream(@Nullable String appstream) {
            $.appstream = appstream;
            return this;
        }

        public Builder appsync(@Nullable String appsync) {
            $.appsync = appsync;
            return this;
        }

        public Builder athena(@Nullable String athena) {
            $.athena = athena;
            return this;
        }

        public Builder auditmanager(@Nullable String auditmanager) {
            $.auditmanager = auditmanager;
            return this;
        }

        public Builder autoscaling(@Nullable String autoscaling) {
            $.autoscaling = autoscaling;
            return this;
        }

        public Builder backup(@Nullable String backup) {
            $.backup = backup;
            return this;
        }

        public Builder batch(@Nullable String batch) {
            $.batch = batch;
            return this;
        }

        public Builder budgets(@Nullable String budgets) {
            $.budgets = budgets;
            return this;
        }

        public Builder chime(@Nullable String chime) {
            $.chime = chime;
            return this;
        }

        public Builder cloud9(@Nullable String cloud9) {
            $.cloud9 = cloud9;
            return this;
        }

        public Builder cloudformation(@Nullable String cloudformation) {
            $.cloudformation = cloudformation;
            return this;
        }

        public Builder cloudfront(@Nullable String cloudfront) {
            $.cloudfront = cloudfront;
            return this;
        }

        public Builder cloudhsm(@Nullable String cloudhsm) {
            $.cloudhsm = cloudhsm;
            return this;
        }

        public Builder cloudsearch(@Nullable String cloudsearch) {
            $.cloudsearch = cloudsearch;
            return this;
        }

        public Builder cloudtrail(@Nullable String cloudtrail) {
            $.cloudtrail = cloudtrail;
            return this;
        }

        public Builder cloudwatch(@Nullable String cloudwatch) {
            $.cloudwatch = cloudwatch;
            return this;
        }

        public Builder cloudwatchevents(@Nullable String cloudwatchevents) {
            $.cloudwatchevents = cloudwatchevents;
            return this;
        }

        public Builder cloudwatchlogs(@Nullable String cloudwatchlogs) {
            $.cloudwatchlogs = cloudwatchlogs;
            return this;
        }

        public Builder codeartifact(@Nullable String codeartifact) {
            $.codeartifact = codeartifact;
            return this;
        }

        public Builder codebuild(@Nullable String codebuild) {
            $.codebuild = codebuild;
            return this;
        }

        public Builder codecommit(@Nullable String codecommit) {
            $.codecommit = codecommit;
            return this;
        }

        public Builder codedeploy(@Nullable String codedeploy) {
            $.codedeploy = codedeploy;
            return this;
        }

        public Builder codepipeline(@Nullable String codepipeline) {
            $.codepipeline = codepipeline;
            return this;
        }

        public Builder codestarconnections(@Nullable String codestarconnections) {
            $.codestarconnections = codestarconnections;
            return this;
        }

        public Builder cognitoidentity(@Nullable String cognitoidentity) {
            $.cognitoidentity = cognitoidentity;
            return this;
        }

        public Builder configservice(@Nullable String configservice) {
            $.configservice = configservice;
            return this;
        }

        public Builder connect(@Nullable String connect) {
            $.connect = connect;
            return this;
        }

        public Builder cur(@Nullable String cur) {
            $.cur = cur;
            return this;
        }

        public Builder dataexchange(@Nullable String dataexchange) {
            $.dataexchange = dataexchange;
            return this;
        }

        public Builder datapipeline(@Nullable String datapipeline) {
            $.datapipeline = datapipeline;
            return this;
        }

        public Builder datasync(@Nullable String datasync) {
            $.datasync = datasync;
            return this;
        }

        public Builder dax(@Nullable String dax) {
            $.dax = dax;
            return this;
        }

        public Builder detective(@Nullable String detective) {
            $.detective = detective;
            return this;
        }

        public Builder devicefarm(@Nullable String devicefarm) {
            $.devicefarm = devicefarm;
            return this;
        }

        public Builder directconnect(@Nullable String directconnect) {
            $.directconnect = directconnect;
            return this;
        }

        public Builder dlm(@Nullable String dlm) {
            $.dlm = dlm;
            return this;
        }

        public Builder dms(@Nullable String dms) {
            $.dms = dms;
            return this;
        }

        public Builder docdb(@Nullable String docdb) {
            $.docdb = docdb;
            return this;
        }

        public Builder ds(@Nullable String ds) {
            $.ds = ds;
            return this;
        }

        public Builder dynamodb(@Nullable String dynamodb) {
            $.dynamodb = dynamodb;
            return this;
        }

        public Builder ec2(@Nullable String ec2) {
            $.ec2 = ec2;
            return this;
        }

        public Builder ecr(@Nullable String ecr) {
            $.ecr = ecr;
            return this;
        }

        public Builder ecrpublic(@Nullable String ecrpublic) {
            $.ecrpublic = ecrpublic;
            return this;
        }

        public Builder ecs(@Nullable String ecs) {
            $.ecs = ecs;
            return this;
        }

        public Builder efs(@Nullable String efs) {
            $.efs = efs;
            return this;
        }

        public Builder eks(@Nullable String eks) {
            $.eks = eks;
            return this;
        }

        public Builder elasticache(@Nullable String elasticache) {
            $.elasticache = elasticache;
            return this;
        }

        public Builder elasticbeanstalk(@Nullable String elasticbeanstalk) {
            $.elasticbeanstalk = elasticbeanstalk;
            return this;
        }

        public Builder elastictranscoder(@Nullable String elastictranscoder) {
            $.elastictranscoder = elastictranscoder;
            return this;
        }

        public Builder elb(@Nullable String elb) {
            $.elb = elb;
            return this;
        }

        public Builder elbv2(@Nullable String elbv2) {
            $.elbv2 = elbv2;
            return this;
        }

        public Builder emr(@Nullable String emr) {
            $.emr = emr;
            return this;
        }

        public Builder emrcontainers(@Nullable String emrcontainers) {
            $.emrcontainers = emrcontainers;
            return this;
        }

        public Builder es(@Nullable String es) {
            $.es = es;
            return this;
        }

        public Builder firehose(@Nullable String firehose) {
            $.firehose = firehose;
            return this;
        }

        public Builder fms(@Nullable String fms) {
            $.fms = fms;
            return this;
        }

        public Builder forecast(@Nullable String forecast) {
            $.forecast = forecast;
            return this;
        }

        public Builder fsx(@Nullable String fsx) {
            $.fsx = fsx;
            return this;
        }

        public Builder gamelift(@Nullable String gamelift) {
            $.gamelift = gamelift;
            return this;
        }

        public Builder glacier(@Nullable String glacier) {
            $.glacier = glacier;
            return this;
        }

        public Builder globalaccelerator(@Nullable String globalaccelerator) {
            $.globalaccelerator = globalaccelerator;
            return this;
        }

        public Builder glue(@Nullable String glue) {
            $.glue = glue;
            return this;
        }

        public Builder greengrass(@Nullable String greengrass) {
            $.greengrass = greengrass;
            return this;
        }

        public Builder guardduty(@Nullable String guardduty) {
            $.guardduty = guardduty;
            return this;
        }

        public Builder iam(@Nullable String iam) {
            $.iam = iam;
            return this;
        }

        public Builder identitystore(@Nullable String identitystore) {
            $.identitystore = identitystore;
            return this;
        }

        public Builder imagebuilder(@Nullable String imagebuilder) {
            $.imagebuilder = imagebuilder;
            return this;
        }

        public Builder inspector(@Nullable String inspector) {
            $.inspector = inspector;
            return this;
        }

        public Builder iot(@Nullable String iot) {
            $.iot = iot;
            return this;
        }

        public Builder iotanalytics(@Nullable String iotanalytics) {
            $.iotanalytics = iotanalytics;
            return this;
        }

        public Builder iotevents(@Nullable String iotevents) {
            $.iotevents = iotevents;
            return this;
        }

        public Builder kafka(@Nullable String kafka) {
            $.kafka = kafka;
            return this;
        }

        public Builder kinesis(@Nullable String kinesis) {
            $.kinesis = kinesis;
            return this;
        }

        public Builder kinesisanalytics(@Nullable String kinesisanalytics) {
            $.kinesisanalytics = kinesisanalytics;
            return this;
        }

        public Builder kinesisanalyticsv2(@Nullable String kinesisanalyticsv2) {
            $.kinesisanalyticsv2 = kinesisanalyticsv2;
            return this;
        }

        public Builder kinesisvideo(@Nullable String kinesisvideo) {
            $.kinesisvideo = kinesisvideo;
            return this;
        }

        public Builder kms(@Nullable String kms) {
            $.kms = kms;
            return this;
        }

        public Builder lakeformation(@Nullable String lakeformation) {
            $.lakeformation = lakeformation;
            return this;
        }

        public Builder lambda(@Nullable String lambda) {
            $.lambda = lambda;
            return this;
        }

        public Builder lexmodels(@Nullable String lexmodels) {
            $.lexmodels = lexmodels;
            return this;
        }

        public Builder licensemanager(@Nullable String licensemanager) {
            $.licensemanager = licensemanager;
            return this;
        }

        public Builder lightsail(@Nullable String lightsail) {
            $.lightsail = lightsail;
            return this;
        }

        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        public Builder macie(@Nullable String macie) {
            $.macie = macie;
            return this;
        }

        public Builder macie2(@Nullable String macie2) {
            $.macie2 = macie2;
            return this;
        }

        public Builder managedblockchain(@Nullable String managedblockchain) {
            $.managedblockchain = managedblockchain;
            return this;
        }

        public Builder marketplacecatalog(@Nullable String marketplacecatalog) {
            $.marketplacecatalog = marketplacecatalog;
            return this;
        }

        public Builder mediaconnect(@Nullable String mediaconnect) {
            $.mediaconnect = mediaconnect;
            return this;
        }

        public Builder mediaconvert(@Nullable String mediaconvert) {
            $.mediaconvert = mediaconvert;
            return this;
        }

        public Builder medialive(@Nullable String medialive) {
            $.medialive = medialive;
            return this;
        }

        public Builder mediapackage(@Nullable String mediapackage) {
            $.mediapackage = mediapackage;
            return this;
        }

        public Builder mediastore(@Nullable String mediastore) {
            $.mediastore = mediastore;
            return this;
        }

        public Builder mediastoredata(@Nullable String mediastoredata) {
            $.mediastoredata = mediastoredata;
            return this;
        }

        public Builder memorydb(@Nullable String memorydb) {
            $.memorydb = memorydb;
            return this;
        }

        public Builder mq(@Nullable String mq) {
            $.mq = mq;
            return this;
        }

        public Builder mwaa(@Nullable String mwaa) {
            $.mwaa = mwaa;
            return this;
        }

        public Builder neptune(@Nullable String neptune) {
            $.neptune = neptune;
            return this;
        }

        public Builder networkfirewall(@Nullable String networkfirewall) {
            $.networkfirewall = networkfirewall;
            return this;
        }

        public Builder networkmanager(@Nullable String networkmanager) {
            $.networkmanager = networkmanager;
            return this;
        }

        public Builder opsworks(@Nullable String opsworks) {
            $.opsworks = opsworks;
            return this;
        }

        public Builder organizations(@Nullable String organizations) {
            $.organizations = organizations;
            return this;
        }

        public Builder outposts(@Nullable String outposts) {
            $.outposts = outposts;
            return this;
        }

        public Builder personalize(@Nullable String personalize) {
            $.personalize = personalize;
            return this;
        }

        public Builder pinpoint(@Nullable String pinpoint) {
            $.pinpoint = pinpoint;
            return this;
        }

        public Builder pricing(@Nullable String pricing) {
            $.pricing = pricing;
            return this;
        }

        public Builder qldb(@Nullable String qldb) {
            $.qldb = qldb;
            return this;
        }

        public Builder quicksight(@Nullable String quicksight) {
            $.quicksight = quicksight;
            return this;
        }

        public Builder ram(@Nullable String ram) {
            $.ram = ram;
            return this;
        }

        public Builder rds(@Nullable String rds) {
            $.rds = rds;
            return this;
        }

        public Builder redshift(@Nullable String redshift) {
            $.redshift = redshift;
            return this;
        }

        public Builder resourcegroups(@Nullable String resourcegroups) {
            $.resourcegroups = resourcegroups;
            return this;
        }

        public Builder resourcegroupstaggingapi(@Nullable String resourcegroupstaggingapi) {
            $.resourcegroupstaggingapi = resourcegroupstaggingapi;
            return this;
        }

        public Builder route53(@Nullable String route53) {
            $.route53 = route53;
            return this;
        }

        public Builder route53domains(@Nullable String route53domains) {
            $.route53domains = route53domains;
            return this;
        }

        public Builder route53recoverycontrolconfig(@Nullable String route53recoverycontrolconfig) {
            $.route53recoverycontrolconfig = route53recoverycontrolconfig;
            return this;
        }

        public Builder route53recoveryreadiness(@Nullable String route53recoveryreadiness) {
            $.route53recoveryreadiness = route53recoveryreadiness;
            return this;
        }

        public Builder route53resolver(@Nullable String route53resolver) {
            $.route53resolver = route53resolver;
            return this;
        }

        public Builder s3(@Nullable String s3) {
            $.s3 = s3;
            return this;
        }

        public Builder s3control(@Nullable String s3control) {
            $.s3control = s3control;
            return this;
        }

        public Builder s3outposts(@Nullable String s3outposts) {
            $.s3outposts = s3outposts;
            return this;
        }

        public Builder sagemaker(@Nullable String sagemaker) {
            $.sagemaker = sagemaker;
            return this;
        }

        public Builder schemas(@Nullable String schemas) {
            $.schemas = schemas;
            return this;
        }

        public Builder sdb(@Nullable String sdb) {
            $.sdb = sdb;
            return this;
        }

        public Builder secretsmanager(@Nullable String secretsmanager) {
            $.secretsmanager = secretsmanager;
            return this;
        }

        public Builder securityhub(@Nullable String securityhub) {
            $.securityhub = securityhub;
            return this;
        }

        public Builder serverlessrepo(@Nullable String serverlessrepo) {
            $.serverlessrepo = serverlessrepo;
            return this;
        }

        public Builder servicecatalog(@Nullable String servicecatalog) {
            $.servicecatalog = servicecatalog;
            return this;
        }

        public Builder servicediscovery(@Nullable String servicediscovery) {
            $.servicediscovery = servicediscovery;
            return this;
        }

        public Builder servicequotas(@Nullable String servicequotas) {
            $.servicequotas = servicequotas;
            return this;
        }

        public Builder ses(@Nullable String ses) {
            $.ses = ses;
            return this;
        }

        public Builder shield(@Nullable String shield) {
            $.shield = shield;
            return this;
        }

        public Builder signer(@Nullable String signer) {
            $.signer = signer;
            return this;
        }

        public Builder sns(@Nullable String sns) {
            $.sns = sns;
            return this;
        }

        public Builder sqs(@Nullable String sqs) {
            $.sqs = sqs;
            return this;
        }

        public Builder ssm(@Nullable String ssm) {
            $.ssm = ssm;
            return this;
        }

        public Builder ssoadmin(@Nullable String ssoadmin) {
            $.ssoadmin = ssoadmin;
            return this;
        }

        public Builder stepfunctions(@Nullable String stepfunctions) {
            $.stepfunctions = stepfunctions;
            return this;
        }

        public Builder storagegateway(@Nullable String storagegateway) {
            $.storagegateway = storagegateway;
            return this;
        }

        public Builder sts(@Nullable String sts) {
            $.sts = sts;
            return this;
        }

        public Builder swf(@Nullable String swf) {
            $.swf = swf;
            return this;
        }

        public Builder synthetics(@Nullable String synthetics) {
            $.synthetics = synthetics;
            return this;
        }

        public Builder timestreamwrite(@Nullable String timestreamwrite) {
            $.timestreamwrite = timestreamwrite;
            return this;
        }

        public Builder transfer(@Nullable String transfer) {
            $.transfer = transfer;
            return this;
        }

        public Builder waf(@Nullable String waf) {
            $.waf = waf;
            return this;
        }

        public Builder wafregional(@Nullable String wafregional) {
            $.wafregional = wafregional;
            return this;
        }

        public Builder wafv2(@Nullable String wafv2) {
            $.wafv2 = wafv2;
            return this;
        }

        public Builder worklink(@Nullable String worklink) {
            $.worklink = worklink;
            return this;
        }

        public Builder workmail(@Nullable String workmail) {
            $.workmail = workmail;
            return this;
        }

        public Builder workspaces(@Nullable String workspaces) {
            $.workspaces = workspaces;
            return this;
        }

        public Builder xray(@Nullable String xray) {
            $.xray = xray;
            return this;
        }

        public Endpoints build() {
            return $;
        }
    }

}
