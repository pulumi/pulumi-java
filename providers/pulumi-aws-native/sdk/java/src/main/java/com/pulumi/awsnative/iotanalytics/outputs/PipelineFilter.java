// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipelineFilter {
    private final String filter;
    private final String name;
    private final @Nullable String next;

    @CustomType.Constructor
    private PipelineFilter(
        @CustomType.Parameter("filter") String filter,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("next") @Nullable String next) {
        this.filter = filter;
        this.name = name;
        this.next = next;
    }

    public String filter() {
        return this.filter;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> next() {
        return Optional.ofNullable(this.next);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String filter;
        private String name;
        private @Nullable String next;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.name = defaults.name;
    	      this.next = defaults.next;
        }

        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder next(@Nullable String next) {
            this.next = next;
            return this;
        }        public PipelineFilter build() {
            return new PipelineFilter(filter, name, next);
        }
    }
}
