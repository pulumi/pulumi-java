// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.inputs;

import com.pulumi.awsnative.kendra.inputs.DataSourceToIndexFieldMapping;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceWorkDocsConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final DataSourceWorkDocsConfiguration Empty = new DataSourceWorkDocsConfiguration();

    @Import(name="crawlComments")
    private @Nullable Boolean crawlComments;

    public Optional<Boolean> crawlComments() {
        return Optional.ofNullable(this.crawlComments);
    }

    @Import(name="exclusionPatterns")
    private @Nullable List<String> exclusionPatterns;

    public Optional<List<String>> exclusionPatterns() {
        return Optional.ofNullable(this.exclusionPatterns);
    }

    @Import(name="fieldMappings")
    private @Nullable List<DataSourceToIndexFieldMapping> fieldMappings;

    public Optional<List<DataSourceToIndexFieldMapping>> fieldMappings() {
        return Optional.ofNullable(this.fieldMappings);
    }

    @Import(name="inclusionPatterns")
    private @Nullable List<String> inclusionPatterns;

    public Optional<List<String>> inclusionPatterns() {
        return Optional.ofNullable(this.inclusionPatterns);
    }

    @Import(name="organizationId", required=true)
    private String organizationId;

    public String organizationId() {
        return this.organizationId;
    }

    @Import(name="useChangeLog")
    private @Nullable Boolean useChangeLog;

    public Optional<Boolean> useChangeLog() {
        return Optional.ofNullable(this.useChangeLog);
    }

    private DataSourceWorkDocsConfiguration() {}

    private DataSourceWorkDocsConfiguration(DataSourceWorkDocsConfiguration $) {
        this.crawlComments = $.crawlComments;
        this.exclusionPatterns = $.exclusionPatterns;
        this.fieldMappings = $.fieldMappings;
        this.inclusionPatterns = $.inclusionPatterns;
        this.organizationId = $.organizationId;
        this.useChangeLog = $.useChangeLog;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceWorkDocsConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceWorkDocsConfiguration $;

        public Builder() {
            $ = new DataSourceWorkDocsConfiguration();
        }

        public Builder(DataSourceWorkDocsConfiguration defaults) {
            $ = new DataSourceWorkDocsConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder crawlComments(@Nullable Boolean crawlComments) {
            $.crawlComments = crawlComments;
            return this;
        }

        public Builder exclusionPatterns(@Nullable List<String> exclusionPatterns) {
            $.exclusionPatterns = exclusionPatterns;
            return this;
        }

        public Builder exclusionPatterns(String... exclusionPatterns) {
            return exclusionPatterns(List.of(exclusionPatterns));
        }

        public Builder fieldMappings(@Nullable List<DataSourceToIndexFieldMapping> fieldMappings) {
            $.fieldMappings = fieldMappings;
            return this;
        }

        public Builder fieldMappings(DataSourceToIndexFieldMapping... fieldMappings) {
            return fieldMappings(List.of(fieldMappings));
        }

        public Builder inclusionPatterns(@Nullable List<String> inclusionPatterns) {
            $.inclusionPatterns = inclusionPatterns;
            return this;
        }

        public Builder inclusionPatterns(String... inclusionPatterns) {
            return inclusionPatterns(List.of(inclusionPatterns));
        }

        public Builder organizationId(String organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        public Builder useChangeLog(@Nullable Boolean useChangeLog) {
            $.useChangeLog = useChangeLog;
            return this;
        }

        public DataSourceWorkDocsConfiguration build() {
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            return $;
        }
    }

}
