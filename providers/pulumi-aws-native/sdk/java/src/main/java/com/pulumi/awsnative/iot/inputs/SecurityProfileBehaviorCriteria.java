// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.inputs;

import com.pulumi.awsnative.iot.enums.SecurityProfileBehaviorCriteriaComparisonOperator;
import com.pulumi.awsnative.iot.inputs.SecurityProfileMachineLearningDetectionConfig;
import com.pulumi.awsnative.iot.inputs.SecurityProfileMetricValue;
import com.pulumi.awsnative.iot.inputs.SecurityProfileStatisticalThreshold;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The criteria by which the behavior is determined to be normal.
 * 
 */
public final class SecurityProfileBehaviorCriteria extends com.pulumi.resources.InvokeArgs {

    public static final SecurityProfileBehaviorCriteria Empty = new SecurityProfileBehaviorCriteria();

    /**
     * The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
     * 
     */
    @Import(name="comparisonOperator")
    private @Nullable SecurityProfileBehaviorCriteriaComparisonOperator comparisonOperator;

    public Optional<SecurityProfileBehaviorCriteriaComparisonOperator> comparisonOperator() {
        return Optional.ofNullable(this.comparisonOperator);
    }

    /**
     * If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
     * 
     */
    @Import(name="consecutiveDatapointsToAlarm")
    private @Nullable Integer consecutiveDatapointsToAlarm;

    public Optional<Integer> consecutiveDatapointsToAlarm() {
        return Optional.ofNullable(this.consecutiveDatapointsToAlarm);
    }

    /**
     * If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
     * 
     */
    @Import(name="consecutiveDatapointsToClear")
    private @Nullable Integer consecutiveDatapointsToClear;

    public Optional<Integer> consecutiveDatapointsToClear() {
        return Optional.ofNullable(this.consecutiveDatapointsToClear);
    }

    /**
     * Use this to specify the time duration over which the behavior is evaluated.
     * 
     */
    @Import(name="durationSeconds")
    private @Nullable Integer durationSeconds;

    public Optional<Integer> durationSeconds() {
        return Optional.ofNullable(this.durationSeconds);
    }

    @Import(name="mlDetectionConfig")
    private @Nullable SecurityProfileMachineLearningDetectionConfig mlDetectionConfig;

    public Optional<SecurityProfileMachineLearningDetectionConfig> mlDetectionConfig() {
        return Optional.ofNullable(this.mlDetectionConfig);
    }

    @Import(name="statisticalThreshold")
    private @Nullable SecurityProfileStatisticalThreshold statisticalThreshold;

    public Optional<SecurityProfileStatisticalThreshold> statisticalThreshold() {
        return Optional.ofNullable(this.statisticalThreshold);
    }

    @Import(name="value")
    private @Nullable SecurityProfileMetricValue value;

    public Optional<SecurityProfileMetricValue> value() {
        return Optional.ofNullable(this.value);
    }

    private SecurityProfileBehaviorCriteria() {}

    private SecurityProfileBehaviorCriteria(SecurityProfileBehaviorCriteria $) {
        this.comparisonOperator = $.comparisonOperator;
        this.consecutiveDatapointsToAlarm = $.consecutiveDatapointsToAlarm;
        this.consecutiveDatapointsToClear = $.consecutiveDatapointsToClear;
        this.durationSeconds = $.durationSeconds;
        this.mlDetectionConfig = $.mlDetectionConfig;
        this.statisticalThreshold = $.statisticalThreshold;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityProfileBehaviorCriteria defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityProfileBehaviorCriteria $;

        public Builder() {
            $ = new SecurityProfileBehaviorCriteria();
        }

        public Builder(SecurityProfileBehaviorCriteria defaults) {
            $ = new SecurityProfileBehaviorCriteria(Objects.requireNonNull(defaults));
        }

        public Builder comparisonOperator(@Nullable SecurityProfileBehaviorCriteriaComparisonOperator comparisonOperator) {
            $.comparisonOperator = comparisonOperator;
            return this;
        }

        public Builder consecutiveDatapointsToAlarm(@Nullable Integer consecutiveDatapointsToAlarm) {
            $.consecutiveDatapointsToAlarm = consecutiveDatapointsToAlarm;
            return this;
        }

        public Builder consecutiveDatapointsToClear(@Nullable Integer consecutiveDatapointsToClear) {
            $.consecutiveDatapointsToClear = consecutiveDatapointsToClear;
            return this;
        }

        public Builder durationSeconds(@Nullable Integer durationSeconds) {
            $.durationSeconds = durationSeconds;
            return this;
        }

        public Builder mlDetectionConfig(@Nullable SecurityProfileMachineLearningDetectionConfig mlDetectionConfig) {
            $.mlDetectionConfig = mlDetectionConfig;
            return this;
        }

        public Builder statisticalThreshold(@Nullable SecurityProfileStatisticalThreshold statisticalThreshold) {
            $.statisticalThreshold = statisticalThreshold;
            return this;
        }

        public Builder value(@Nullable SecurityProfileMetricValue value) {
            $.value = value;
            return this;
        }

        public SecurityProfileBehaviorCriteria build() {
            return $;
        }
    }

}
