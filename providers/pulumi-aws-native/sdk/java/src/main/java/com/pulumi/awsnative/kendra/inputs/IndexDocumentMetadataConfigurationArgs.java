// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.inputs;

import com.pulumi.awsnative.kendra.enums.IndexDocumentAttributeValueType;
import com.pulumi.awsnative.kendra.inputs.IndexRelevanceArgs;
import com.pulumi.awsnative.kendra.inputs.IndexSearchArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IndexDocumentMetadataConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final IndexDocumentMetadataConfigurationArgs Empty = new IndexDocumentMetadataConfigurationArgs();

    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="relevance")
      private final @Nullable Output<IndexRelevanceArgs> relevance;

    public Output<IndexRelevanceArgs> relevance() {
        return this.relevance == null ? Codegen.empty() : this.relevance;
    }

    @Import(name="search")
      private final @Nullable Output<IndexSearchArgs> search;

    public Output<IndexSearchArgs> search() {
        return this.search == null ? Codegen.empty() : this.search;
    }

    @Import(name="type", required=true)
      private final Output<IndexDocumentAttributeValueType> type;

    public Output<IndexDocumentAttributeValueType> type() {
        return this.type;
    }

    public IndexDocumentMetadataConfigurationArgs(
        Output<String> name,
        @Nullable Output<IndexRelevanceArgs> relevance,
        @Nullable Output<IndexSearchArgs> search,
        Output<IndexDocumentAttributeValueType> type) {
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.relevance = relevance;
        this.search = search;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private IndexDocumentMetadataConfigurationArgs() {
        this.name = Codegen.empty();
        this.relevance = Codegen.empty();
        this.search = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IndexDocumentMetadataConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> name;
        private @Nullable Output<IndexRelevanceArgs> relevance;
        private @Nullable Output<IndexSearchArgs> search;
        private Output<IndexDocumentAttributeValueType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(IndexDocumentMetadataConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.relevance = defaults.relevance;
    	      this.search = defaults.search;
    	      this.type = defaults.type;
        }

        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder relevance(@Nullable Output<IndexRelevanceArgs> relevance) {
            this.relevance = relevance;
            return this;
        }
        public Builder relevance(@Nullable IndexRelevanceArgs relevance) {
            this.relevance = Codegen.ofNullable(relevance);
            return this;
        }
        public Builder search(@Nullable Output<IndexSearchArgs> search) {
            this.search = search;
            return this;
        }
        public Builder search(@Nullable IndexSearchArgs search) {
            this.search = Codegen.ofNullable(search);
            return this;
        }
        public Builder type(Output<IndexDocumentAttributeValueType> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(IndexDocumentAttributeValueType type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public IndexDocumentMetadataConfigurationArgs build() {
            return new IndexDocumentMetadataConfigurationArgs(name, relevance, search, type);
        }
    }
}
