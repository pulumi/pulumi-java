// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.inputs;

import com.pulumi.awsnative.kendra.enums.DataSourceSharePointConfigurationSharePointVersion;
import com.pulumi.awsnative.kendra.inputs.DataSourceS3Path;
import com.pulumi.awsnative.kendra.inputs.DataSourceToIndexFieldMapping;
import com.pulumi.awsnative.kendra.inputs.DataSourceVpcConfiguration;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SharePoint configuration
 * 
 */
public final class DataSourceSharePointConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final DataSourceSharePointConfiguration Empty = new DataSourceSharePointConfiguration();

    @Import(name="crawlAttachments")
    private @Nullable Boolean crawlAttachments;

    public Optional<Boolean> crawlAttachments() {
        return Optional.ofNullable(this.crawlAttachments);
    }

    @Import(name="disableLocalGroups")
    private @Nullable Boolean disableLocalGroups;

    public Optional<Boolean> disableLocalGroups() {
        return Optional.ofNullable(this.disableLocalGroups);
    }

    @Import(name="documentTitleFieldName")
    private @Nullable String documentTitleFieldName;

    public Optional<String> documentTitleFieldName() {
        return Optional.ofNullable(this.documentTitleFieldName);
    }

    @Import(name="exclusionPatterns")
    private @Nullable List<String> exclusionPatterns;

    public Optional<List<String>> exclusionPatterns() {
        return Optional.ofNullable(this.exclusionPatterns);
    }

    @Import(name="fieldMappings")
    private @Nullable List<DataSourceToIndexFieldMapping> fieldMappings;

    public Optional<List<DataSourceToIndexFieldMapping>> fieldMappings() {
        return Optional.ofNullable(this.fieldMappings);
    }

    @Import(name="inclusionPatterns")
    private @Nullable List<String> inclusionPatterns;

    public Optional<List<String>> inclusionPatterns() {
        return Optional.ofNullable(this.inclusionPatterns);
    }

    @Import(name="secretArn", required=true)
    private String secretArn;

    public String secretArn() {
        return this.secretArn;
    }

    @Import(name="sharePointVersion", required=true)
    private DataSourceSharePointConfigurationSharePointVersion sharePointVersion;

    public DataSourceSharePointConfigurationSharePointVersion sharePointVersion() {
        return this.sharePointVersion;
    }

    @Import(name="sslCertificateS3Path")
    private @Nullable DataSourceS3Path sslCertificateS3Path;

    public Optional<DataSourceS3Path> sslCertificateS3Path() {
        return Optional.ofNullable(this.sslCertificateS3Path);
    }

    @Import(name="urls", required=true)
    private List<String> urls;

    public List<String> urls() {
        return this.urls;
    }

    @Import(name="useChangeLog")
    private @Nullable Boolean useChangeLog;

    public Optional<Boolean> useChangeLog() {
        return Optional.ofNullable(this.useChangeLog);
    }

    @Import(name="vpcConfiguration")
    private @Nullable DataSourceVpcConfiguration vpcConfiguration;

    public Optional<DataSourceVpcConfiguration> vpcConfiguration() {
        return Optional.ofNullable(this.vpcConfiguration);
    }

    private DataSourceSharePointConfiguration() {}

    private DataSourceSharePointConfiguration(DataSourceSharePointConfiguration $) {
        this.crawlAttachments = $.crawlAttachments;
        this.disableLocalGroups = $.disableLocalGroups;
        this.documentTitleFieldName = $.documentTitleFieldName;
        this.exclusionPatterns = $.exclusionPatterns;
        this.fieldMappings = $.fieldMappings;
        this.inclusionPatterns = $.inclusionPatterns;
        this.secretArn = $.secretArn;
        this.sharePointVersion = $.sharePointVersion;
        this.sslCertificateS3Path = $.sslCertificateS3Path;
        this.urls = $.urls;
        this.useChangeLog = $.useChangeLog;
        this.vpcConfiguration = $.vpcConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceSharePointConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceSharePointConfiguration $;

        public Builder() {
            $ = new DataSourceSharePointConfiguration();
        }

        public Builder(DataSourceSharePointConfiguration defaults) {
            $ = new DataSourceSharePointConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder crawlAttachments(@Nullable Boolean crawlAttachments) {
            $.crawlAttachments = crawlAttachments;
            return this;
        }

        public Builder disableLocalGroups(@Nullable Boolean disableLocalGroups) {
            $.disableLocalGroups = disableLocalGroups;
            return this;
        }

        public Builder documentTitleFieldName(@Nullable String documentTitleFieldName) {
            $.documentTitleFieldName = documentTitleFieldName;
            return this;
        }

        public Builder exclusionPatterns(@Nullable List<String> exclusionPatterns) {
            $.exclusionPatterns = exclusionPatterns;
            return this;
        }

        public Builder exclusionPatterns(String... exclusionPatterns) {
            return exclusionPatterns(List.of(exclusionPatterns));
        }

        public Builder fieldMappings(@Nullable List<DataSourceToIndexFieldMapping> fieldMappings) {
            $.fieldMappings = fieldMappings;
            return this;
        }

        public Builder fieldMappings(DataSourceToIndexFieldMapping... fieldMappings) {
            return fieldMappings(List.of(fieldMappings));
        }

        public Builder inclusionPatterns(@Nullable List<String> inclusionPatterns) {
            $.inclusionPatterns = inclusionPatterns;
            return this;
        }

        public Builder inclusionPatterns(String... inclusionPatterns) {
            return inclusionPatterns(List.of(inclusionPatterns));
        }

        public Builder secretArn(String secretArn) {
            $.secretArn = secretArn;
            return this;
        }

        public Builder sharePointVersion(DataSourceSharePointConfigurationSharePointVersion sharePointVersion) {
            $.sharePointVersion = sharePointVersion;
            return this;
        }

        public Builder sslCertificateS3Path(@Nullable DataSourceS3Path sslCertificateS3Path) {
            $.sslCertificateS3Path = sslCertificateS3Path;
            return this;
        }

        public Builder urls(List<String> urls) {
            $.urls = urls;
            return this;
        }

        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }

        public Builder useChangeLog(@Nullable Boolean useChangeLog) {
            $.useChangeLog = useChangeLog;
            return this;
        }

        public Builder vpcConfiguration(@Nullable DataSourceVpcConfiguration vpcConfiguration) {
            $.vpcConfiguration = vpcConfiguration;
            return this;
        }

        public DataSourceSharePointConfiguration build() {
            $.secretArn = Objects.requireNonNull($.secretArn, "expected parameter 'secretArn' to be non-null");
            $.sharePointVersion = Objects.requireNonNull($.sharePointVersion, "expected parameter 'sharePointVersion' to be non-null");
            $.urls = Objects.requireNonNull($.urls, "expected parameter 'urls' to be non-null");
            return $;
        }
    }

}
