// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.outputs;

import com.pulumi.awsnative.quicksight.enums.ThemeResourceStatus;
import com.pulumi.awsnative.quicksight.outputs.ThemeConfiguration;
import com.pulumi.awsnative.quicksight.outputs.ThemeError;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ThemeVersion {
    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     * 
     */
    private final @Nullable String arn;
    /**
     * <p>The Amazon QuickSight-defined ID of the theme that a custom theme inherits from. All
     *             themes initially inherit from a default QuickSight theme.</p>
     * 
     */
    private final @Nullable String baseThemeId;
    private final @Nullable ThemeConfiguration configuration;
    /**
     * <p>The date and time that this theme version was created.</p>
     * 
     */
    private final @Nullable String createdTime;
    /**
     * <p>The description of the theme.</p>
     * 
     */
    private final @Nullable String description;
    /**
     * <p>Errors associated with the theme.</p>
     * 
     */
    private final @Nullable List<ThemeError> errors;
    private final @Nullable ThemeResourceStatus status;
    /**
     * <p>The version number of the theme.</p>
     * 
     */
    private final @Nullable Double versionNumber;

    @CustomType.Constructor
    private ThemeVersion(
        @CustomType.Parameter("arn") @Nullable String arn,
        @CustomType.Parameter("baseThemeId") @Nullable String baseThemeId,
        @CustomType.Parameter("configuration") @Nullable ThemeConfiguration configuration,
        @CustomType.Parameter("createdTime") @Nullable String createdTime,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("errors") @Nullable List<ThemeError> errors,
        @CustomType.Parameter("status") @Nullable ThemeResourceStatus status,
        @CustomType.Parameter("versionNumber") @Nullable Double versionNumber) {
        this.arn = arn;
        this.baseThemeId = baseThemeId;
        this.configuration = configuration;
        this.createdTime = createdTime;
        this.description = description;
        this.errors = errors;
        this.status = status;
        this.versionNumber = versionNumber;
    }

    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     * 
    */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * <p>The Amazon QuickSight-defined ID of the theme that a custom theme inherits from. All
     *             themes initially inherit from a default QuickSight theme.</p>
     * 
    */
    public Optional<String> baseThemeId() {
        return Optional.ofNullable(this.baseThemeId);
    }
    public Optional<ThemeConfiguration> configuration() {
        return Optional.ofNullable(this.configuration);
    }
    /**
     * <p>The date and time that this theme version was created.</p>
     * 
    */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * <p>The description of the theme.</p>
     * 
    */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * <p>Errors associated with the theme.</p>
     * 
    */
    public List<ThemeError> errors() {
        return this.errors == null ? List.of() : this.errors;
    }
    public Optional<ThemeResourceStatus> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * <p>The version number of the theme.</p>
     * 
    */
    public Optional<Double> versionNumber() {
        return Optional.ofNullable(this.versionNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThemeVersion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String baseThemeId;
        private @Nullable ThemeConfiguration configuration;
        private @Nullable String createdTime;
        private @Nullable String description;
        private @Nullable List<ThemeError> errors;
        private @Nullable ThemeResourceStatus status;
        private @Nullable Double versionNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(ThemeVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.baseThemeId = defaults.baseThemeId;
    	      this.configuration = defaults.configuration;
    	      this.createdTime = defaults.createdTime;
    	      this.description = defaults.description;
    	      this.errors = defaults.errors;
    	      this.status = defaults.status;
    	      this.versionNumber = defaults.versionNumber;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        public Builder baseThemeId(@Nullable String baseThemeId) {
            this.baseThemeId = baseThemeId;
            return this;
        }
        public Builder configuration(@Nullable ThemeConfiguration configuration) {
            this.configuration = configuration;
            return this;
        }
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder errors(@Nullable List<ThemeError> errors) {
            this.errors = errors;
            return this;
        }
        public Builder errors(ThemeError... errors) {
            return errors(List.of(errors));
        }
        public Builder status(@Nullable ThemeResourceStatus status) {
            this.status = status;
            return this;
        }
        public Builder versionNumber(@Nullable Double versionNumber) {
            this.versionNumber = versionNumber;
            return this;
        }        public ThemeVersion build() {
            return new ThemeVersion(arn, baseThemeId, configuration, createdTime, description, errors, status, versionNumber);
        }
    }
}
