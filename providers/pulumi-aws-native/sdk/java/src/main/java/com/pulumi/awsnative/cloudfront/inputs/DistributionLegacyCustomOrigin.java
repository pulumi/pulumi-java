// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudfront.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionLegacyCustomOrigin extends com.pulumi.resources.InvokeArgs {

    public static final DistributionLegacyCustomOrigin Empty = new DistributionLegacyCustomOrigin();

    @Import(name="dNSName", required=true)
    private String dNSName;

    public String dNSName() {
        return this.dNSName;
    }

    @Import(name="hTTPPort")
    private @Nullable Integer hTTPPort;

    public Optional<Integer> hTTPPort() {
        return Optional.ofNullable(this.hTTPPort);
    }

    @Import(name="hTTPSPort")
    private @Nullable Integer hTTPSPort;

    public Optional<Integer> hTTPSPort() {
        return Optional.ofNullable(this.hTTPSPort);
    }

    @Import(name="originProtocolPolicy", required=true)
    private String originProtocolPolicy;

    public String originProtocolPolicy() {
        return this.originProtocolPolicy;
    }

    @Import(name="originSSLProtocols", required=true)
    private List<String> originSSLProtocols;

    public List<String> originSSLProtocols() {
        return this.originSSLProtocols;
    }

    private DistributionLegacyCustomOrigin() {}

    private DistributionLegacyCustomOrigin(DistributionLegacyCustomOrigin $) {
        this.dNSName = $.dNSName;
        this.hTTPPort = $.hTTPPort;
        this.hTTPSPort = $.hTTPSPort;
        this.originProtocolPolicy = $.originProtocolPolicy;
        this.originSSLProtocols = $.originSSLProtocols;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionLegacyCustomOrigin defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionLegacyCustomOrigin $;

        public Builder() {
            $ = new DistributionLegacyCustomOrigin();
        }

        public Builder(DistributionLegacyCustomOrigin defaults) {
            $ = new DistributionLegacyCustomOrigin(Objects.requireNonNull(defaults));
        }

        public Builder dNSName(String dNSName) {
            $.dNSName = dNSName;
            return this;
        }

        public Builder hTTPPort(@Nullable Integer hTTPPort) {
            $.hTTPPort = hTTPPort;
            return this;
        }

        public Builder hTTPSPort(@Nullable Integer hTTPSPort) {
            $.hTTPSPort = hTTPSPort;
            return this;
        }

        public Builder originProtocolPolicy(String originProtocolPolicy) {
            $.originProtocolPolicy = originProtocolPolicy;
            return this;
        }

        public Builder originSSLProtocols(List<String> originSSLProtocols) {
            $.originSSLProtocols = originSSLProtocols;
            return this;
        }

        public Builder originSSLProtocols(String... originSSLProtocols) {
            return originSSLProtocols(List.of(originSSLProtocols));
        }

        public DistributionLegacyCustomOrigin build() {
            $.dNSName = Objects.requireNonNull($.dNSName, "expected parameter 'dNSName' to be non-null");
            $.originProtocolPolicy = Objects.requireNonNull($.originProtocolPolicy, "expected parameter 'originProtocolPolicy' to be non-null");
            $.originSSLProtocols = Objects.requireNonNull($.originSSLProtocols, "expected parameter 'originSSLProtocols' to be non-null");
            return $;
        }
    }

}
