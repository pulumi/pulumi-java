// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.inputs;

import com.pulumi.awsnative.ec2.enums.SpotFleetSpotCapacityRebalanceReplacementStrategy;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpotFleetSpotCapacityRebalance extends com.pulumi.resources.InvokeArgs {

    public static final SpotFleetSpotCapacityRebalance Empty = new SpotFleetSpotCapacityRebalance();

    @Import(name="replacementStrategy")
      private final @Nullable SpotFleetSpotCapacityRebalanceReplacementStrategy replacementStrategy;

    public Optional<SpotFleetSpotCapacityRebalanceReplacementStrategy> replacementStrategy() {
        return this.replacementStrategy == null ? Optional.empty() : Optional.ofNullable(this.replacementStrategy);
    }

    @Import(name="terminationDelay")
      private final @Nullable Integer terminationDelay;

    public Optional<Integer> terminationDelay() {
        return this.terminationDelay == null ? Optional.empty() : Optional.ofNullable(this.terminationDelay);
    }

    public SpotFleetSpotCapacityRebalance(
        @Nullable SpotFleetSpotCapacityRebalanceReplacementStrategy replacementStrategy,
        @Nullable Integer terminationDelay) {
        this.replacementStrategy = replacementStrategy;
        this.terminationDelay = terminationDelay;
    }

    private SpotFleetSpotCapacityRebalance() {
        this.replacementStrategy = null;
        this.terminationDelay = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpotFleetSpotCapacityRebalance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable SpotFleetSpotCapacityRebalanceReplacementStrategy replacementStrategy;
        private @Nullable Integer terminationDelay;

        public Builder() {
    	      // Empty
        }

        public Builder(SpotFleetSpotCapacityRebalance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.replacementStrategy = defaults.replacementStrategy;
    	      this.terminationDelay = defaults.terminationDelay;
        }

        public Builder replacementStrategy(@Nullable SpotFleetSpotCapacityRebalanceReplacementStrategy replacementStrategy) {
            this.replacementStrategy = replacementStrategy;
            return this;
        }
        public Builder terminationDelay(@Nullable Integer terminationDelay) {
            this.terminationDelay = terminationDelay;
            return this;
        }        public SpotFleetSpotCapacityRebalance build() {
            return new SpotFleetSpotCapacityRebalance(replacementStrategy, terminationDelay);
        }
    }
}
