// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.ec2.inputs.VPCTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VPCArgs extends com.pulumi.resources.ResourceArgs {

    public static final VPCArgs Empty = new VPCArgs();

    /**
     * The primary IPv4 CIDR block for the VPC.
     * 
     */
    @Import(name="cidrBlock", required=true)
    private Output<String> cidrBlock;

    public Output<String> cidrBlock() {
        return this.cidrBlock;
    }

    /**
     * Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs.
     * 
     */
    @Import(name="enableDnsHostnames")
    private @Nullable Output<Boolean> enableDnsHostnames;

    public Optional<Output<Boolean>> enableDnsHostnames() {
        return Optional.ofNullable(this.enableDnsHostnames);
    }

    /**
     * Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range &#34;plus two&#34; succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default.
     * 
     */
    @Import(name="enableDnsSupport")
    private @Nullable Output<Boolean> enableDnsSupport;

    public Optional<Output<Boolean>> enableDnsSupport() {
        return Optional.ofNullable(this.enableDnsSupport);
    }

    /**
     * The allowed tenancy of instances launched into the VPC.
     * 
     * &#34;default&#34;: An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.
     * 
     * &#34;dedicated&#34;: An instance launched into the VPC is a Dedicated Instance by default, unless you explicitly specify a tenancy of host during instance launch. You cannot specify a tenancy of default during instance launch.
     * 
     * Updating InstanceTenancy requires no replacement only if you are updating its value from &#34;dedicated&#34; to &#34;default&#34;. Updating InstanceTenancy from &#34;default&#34; to &#34;dedicated&#34; requires replacement.
     * 
     */
    @Import(name="instanceTenancy")
    private @Nullable Output<String> instanceTenancy;

    public Optional<Output<String>> instanceTenancy() {
        return Optional.ofNullable(this.instanceTenancy);
    }

    /**
     * The tags for the VPC.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<VPCTagArgs>> tags;

    public Optional<Output<List<VPCTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private VPCArgs() {}

    private VPCArgs(VPCArgs $) {
        this.cidrBlock = $.cidrBlock;
        this.enableDnsHostnames = $.enableDnsHostnames;
        this.enableDnsSupport = $.enableDnsSupport;
        this.instanceTenancy = $.instanceTenancy;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VPCArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VPCArgs $;

        public Builder() {
            $ = new VPCArgs();
        }

        public Builder(VPCArgs defaults) {
            $ = new VPCArgs(Objects.requireNonNull(defaults));
        }

        public Builder cidrBlock(Output<String> cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        public Builder cidrBlock(String cidrBlock) {
            return cidrBlock(Output.of(cidrBlock));
        }

        public Builder enableDnsHostnames(@Nullable Output<Boolean> enableDnsHostnames) {
            $.enableDnsHostnames = enableDnsHostnames;
            return this;
        }

        public Builder enableDnsHostnames(Boolean enableDnsHostnames) {
            return enableDnsHostnames(Output.of(enableDnsHostnames));
        }

        public Builder enableDnsSupport(@Nullable Output<Boolean> enableDnsSupport) {
            $.enableDnsSupport = enableDnsSupport;
            return this;
        }

        public Builder enableDnsSupport(Boolean enableDnsSupport) {
            return enableDnsSupport(Output.of(enableDnsSupport));
        }

        public Builder instanceTenancy(@Nullable Output<String> instanceTenancy) {
            $.instanceTenancy = instanceTenancy;
            return this;
        }

        public Builder instanceTenancy(String instanceTenancy) {
            return instanceTenancy(Output.of(instanceTenancy));
        }

        public Builder tags(@Nullable Output<List<VPCTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<VPCTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(VPCTagArgs... tags) {
            return tags(List.of(tags));
        }

        public VPCArgs build() {
            $.cidrBlock = Objects.requireNonNull($.cidrBlock, "expected parameter 'cidrBlock' to be non-null");
            return $;
        }
    }

}
