// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisvideo;

import com.pulumi.awsnative.kinesisvideo.inputs.StreamTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StreamArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamArgs Empty = new StreamArgs();

    /**
     * The number of hours till which Kinesis Video will retain the data in the stream
     * 
     */
    @Import(name="dataRetentionInHours")
      private final @Nullable Output<Integer> dataRetentionInHours;

    public Output<Integer> dataRetentionInHours() {
        return this.dataRetentionInHours == null ? Codegen.empty() : this.dataRetentionInHours;
    }

    /**
     * The name of the device that is writing to the stream.
     * 
     */
    @Import(name="deviceName")
      private final @Nullable Output<String> deviceName;

    public Output<String> deviceName() {
        return this.deviceName == null ? Codegen.empty() : this.deviceName;
    }

    /**
     * AWS KMS key ID that Kinesis Video Streams uses to encrypt stream data.
     * 
     */
    @Import(name="kmsKeyId")
      private final @Nullable Output<String> kmsKeyId;

    public Output<String> kmsKeyId() {
        return this.kmsKeyId == null ? Codegen.empty() : this.kmsKeyId;
    }

    /**
     * The media type of the stream. Consumers of the stream can use this information when processing the stream.
     * 
     */
    @Import(name="mediaType")
      private final @Nullable Output<String> mediaType;

    public Output<String> mediaType() {
        return this.mediaType == null ? Codegen.empty() : this.mediaType;
    }

    /**
     * The name of the Kinesis Video stream.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * An array of key-value pairs associated with the Kinesis Video Stream.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<StreamTagArgs>> tags;

    public Output<List<StreamTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public StreamArgs(
        @Nullable Output<Integer> dataRetentionInHours,
        @Nullable Output<String> deviceName,
        @Nullable Output<String> kmsKeyId,
        @Nullable Output<String> mediaType,
        @Nullable Output<String> name,
        @Nullable Output<List<StreamTagArgs>> tags) {
        this.dataRetentionInHours = dataRetentionInHours;
        this.deviceName = deviceName;
        this.kmsKeyId = kmsKeyId;
        this.mediaType = mediaType;
        this.name = name;
        this.tags = tags;
    }

    private StreamArgs() {
        this.dataRetentionInHours = Codegen.empty();
        this.deviceName = Codegen.empty();
        this.kmsKeyId = Codegen.empty();
        this.mediaType = Codegen.empty();
        this.name = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> dataRetentionInHours;
        private @Nullable Output<String> deviceName;
        private @Nullable Output<String> kmsKeyId;
        private @Nullable Output<String> mediaType;
        private @Nullable Output<String> name;
        private @Nullable Output<List<StreamTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(StreamArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataRetentionInHours = defaults.dataRetentionInHours;
    	      this.deviceName = defaults.deviceName;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.mediaType = defaults.mediaType;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder dataRetentionInHours(@Nullable Output<Integer> dataRetentionInHours) {
            this.dataRetentionInHours = dataRetentionInHours;
            return this;
        }
        public Builder dataRetentionInHours(@Nullable Integer dataRetentionInHours) {
            this.dataRetentionInHours = Codegen.ofNullable(dataRetentionInHours);
            return this;
        }
        public Builder deviceName(@Nullable Output<String> deviceName) {
            this.deviceName = deviceName;
            return this;
        }
        public Builder deviceName(@Nullable String deviceName) {
            this.deviceName = Codegen.ofNullable(deviceName);
            return this;
        }
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Codegen.ofNullable(kmsKeyId);
            return this;
        }
        public Builder mediaType(@Nullable Output<String> mediaType) {
            this.mediaType = mediaType;
            return this;
        }
        public Builder mediaType(@Nullable String mediaType) {
            this.mediaType = Codegen.ofNullable(mediaType);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder tags(@Nullable Output<List<StreamTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<StreamTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(StreamTagArgs... tags) {
            return tags(List.of(tags));
        }        public StreamArgs build() {
            return new StreamArgs(dataRetentionInHours, deviceName, kmsKeyId, mediaType, name, tags);
        }
    }
}
