// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.servicecatalog.inputs;

import com.pulumi.awsnative.servicecatalog.enums.CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudFormationProvisionedProductProvisioningPreferences extends com.pulumi.resources.InvokeArgs {

    public static final CloudFormationProvisionedProductProvisioningPreferences Empty = new CloudFormationProvisionedProductProvisioningPreferences();

    @Import(name="stackSetAccounts")
    private @Nullable List<String> stackSetAccounts;

    public Optional<List<String>> stackSetAccounts() {
        return Optional.ofNullable(this.stackSetAccounts);
    }

    @Import(name="stackSetFailureToleranceCount")
    private @Nullable Integer stackSetFailureToleranceCount;

    public Optional<Integer> stackSetFailureToleranceCount() {
        return Optional.ofNullable(this.stackSetFailureToleranceCount);
    }

    @Import(name="stackSetFailureTolerancePercentage")
    private @Nullable Integer stackSetFailureTolerancePercentage;

    public Optional<Integer> stackSetFailureTolerancePercentage() {
        return Optional.ofNullable(this.stackSetFailureTolerancePercentage);
    }

    @Import(name="stackSetMaxConcurrencyCount")
    private @Nullable Integer stackSetMaxConcurrencyCount;

    public Optional<Integer> stackSetMaxConcurrencyCount() {
        return Optional.ofNullable(this.stackSetMaxConcurrencyCount);
    }

    @Import(name="stackSetMaxConcurrencyPercentage")
    private @Nullable Integer stackSetMaxConcurrencyPercentage;

    public Optional<Integer> stackSetMaxConcurrencyPercentage() {
        return Optional.ofNullable(this.stackSetMaxConcurrencyPercentage);
    }

    @Import(name="stackSetOperationType")
    private @Nullable CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType stackSetOperationType;

    public Optional<CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType> stackSetOperationType() {
        return Optional.ofNullable(this.stackSetOperationType);
    }

    @Import(name="stackSetRegions")
    private @Nullable List<String> stackSetRegions;

    public Optional<List<String>> stackSetRegions() {
        return Optional.ofNullable(this.stackSetRegions);
    }

    private CloudFormationProvisionedProductProvisioningPreferences() {}

    private CloudFormationProvisionedProductProvisioningPreferences(CloudFormationProvisionedProductProvisioningPreferences $) {
        this.stackSetAccounts = $.stackSetAccounts;
        this.stackSetFailureToleranceCount = $.stackSetFailureToleranceCount;
        this.stackSetFailureTolerancePercentage = $.stackSetFailureTolerancePercentage;
        this.stackSetMaxConcurrencyCount = $.stackSetMaxConcurrencyCount;
        this.stackSetMaxConcurrencyPercentage = $.stackSetMaxConcurrencyPercentage;
        this.stackSetOperationType = $.stackSetOperationType;
        this.stackSetRegions = $.stackSetRegions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudFormationProvisionedProductProvisioningPreferences defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudFormationProvisionedProductProvisioningPreferences $;

        public Builder() {
            $ = new CloudFormationProvisionedProductProvisioningPreferences();
        }

        public Builder(CloudFormationProvisionedProductProvisioningPreferences defaults) {
            $ = new CloudFormationProvisionedProductProvisioningPreferences(Objects.requireNonNull(defaults));
        }

        public Builder stackSetAccounts(@Nullable List<String> stackSetAccounts) {
            $.stackSetAccounts = stackSetAccounts;
            return this;
        }

        public Builder stackSetAccounts(String... stackSetAccounts) {
            return stackSetAccounts(List.of(stackSetAccounts));
        }

        public Builder stackSetFailureToleranceCount(@Nullable Integer stackSetFailureToleranceCount) {
            $.stackSetFailureToleranceCount = stackSetFailureToleranceCount;
            return this;
        }

        public Builder stackSetFailureTolerancePercentage(@Nullable Integer stackSetFailureTolerancePercentage) {
            $.stackSetFailureTolerancePercentage = stackSetFailureTolerancePercentage;
            return this;
        }

        public Builder stackSetMaxConcurrencyCount(@Nullable Integer stackSetMaxConcurrencyCount) {
            $.stackSetMaxConcurrencyCount = stackSetMaxConcurrencyCount;
            return this;
        }

        public Builder stackSetMaxConcurrencyPercentage(@Nullable Integer stackSetMaxConcurrencyPercentage) {
            $.stackSetMaxConcurrencyPercentage = stackSetMaxConcurrencyPercentage;
            return this;
        }

        public Builder stackSetOperationType(@Nullable CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType stackSetOperationType) {
            $.stackSetOperationType = stackSetOperationType;
            return this;
        }

        public Builder stackSetRegions(@Nullable List<String> stackSetRegions) {
            $.stackSetRegions = stackSetRegions;
            return this;
        }

        public Builder stackSetRegions(String... stackSetRegions) {
            return stackSetRegions(List.of(stackSetRegions));
        }

        public CloudFormationProvisionedProductProvisioningPreferences build() {
            return $;
        }
    }

}
