// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2.inputs;

import com.pulumi.awsnative.wafv2.inputs.RuleGroupAndStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupByteMatchStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupGeoMatchStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupIPSetReferenceStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupLabelMatchStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupNotStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupOrStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupRateBasedStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupRegexMatchStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupRegexPatternSetReferenceStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupSizeConstraintStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupSqliMatchStatement;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupXssMatchStatement;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
 * 
 */
public final class RuleGroupStatement extends com.pulumi.resources.InvokeArgs {

    public static final RuleGroupStatement Empty = new RuleGroupStatement();

    @Import(name="andStatement")
    private @Nullable RuleGroupAndStatement andStatement;

    public Optional<RuleGroupAndStatement> andStatement() {
        return Optional.ofNullable(this.andStatement);
    }

    @Import(name="byteMatchStatement")
    private @Nullable RuleGroupByteMatchStatement byteMatchStatement;

    public Optional<RuleGroupByteMatchStatement> byteMatchStatement() {
        return Optional.ofNullable(this.byteMatchStatement);
    }

    @Import(name="geoMatchStatement")
    private @Nullable RuleGroupGeoMatchStatement geoMatchStatement;

    public Optional<RuleGroupGeoMatchStatement> geoMatchStatement() {
        return Optional.ofNullable(this.geoMatchStatement);
    }

    @Import(name="iPSetReferenceStatement")
    private @Nullable RuleGroupIPSetReferenceStatement iPSetReferenceStatement;

    public Optional<RuleGroupIPSetReferenceStatement> iPSetReferenceStatement() {
        return Optional.ofNullable(this.iPSetReferenceStatement);
    }

    @Import(name="labelMatchStatement")
    private @Nullable RuleGroupLabelMatchStatement labelMatchStatement;

    public Optional<RuleGroupLabelMatchStatement> labelMatchStatement() {
        return Optional.ofNullable(this.labelMatchStatement);
    }

    @Import(name="notStatement")
    private @Nullable RuleGroupNotStatement notStatement;

    public Optional<RuleGroupNotStatement> notStatement() {
        return Optional.ofNullable(this.notStatement);
    }

    @Import(name="orStatement")
    private @Nullable RuleGroupOrStatement orStatement;

    public Optional<RuleGroupOrStatement> orStatement() {
        return Optional.ofNullable(this.orStatement);
    }

    @Import(name="rateBasedStatement")
    private @Nullable RuleGroupRateBasedStatement rateBasedStatement;

    public Optional<RuleGroupRateBasedStatement> rateBasedStatement() {
        return Optional.ofNullable(this.rateBasedStatement);
    }

    @Import(name="regexMatchStatement")
    private @Nullable RuleGroupRegexMatchStatement regexMatchStatement;

    public Optional<RuleGroupRegexMatchStatement> regexMatchStatement() {
        return Optional.ofNullable(this.regexMatchStatement);
    }

    @Import(name="regexPatternSetReferenceStatement")
    private @Nullable RuleGroupRegexPatternSetReferenceStatement regexPatternSetReferenceStatement;

    public Optional<RuleGroupRegexPatternSetReferenceStatement> regexPatternSetReferenceStatement() {
        return Optional.ofNullable(this.regexPatternSetReferenceStatement);
    }

    @Import(name="sizeConstraintStatement")
    private @Nullable RuleGroupSizeConstraintStatement sizeConstraintStatement;

    public Optional<RuleGroupSizeConstraintStatement> sizeConstraintStatement() {
        return Optional.ofNullable(this.sizeConstraintStatement);
    }

    @Import(name="sqliMatchStatement")
    private @Nullable RuleGroupSqliMatchStatement sqliMatchStatement;

    public Optional<RuleGroupSqliMatchStatement> sqliMatchStatement() {
        return Optional.ofNullable(this.sqliMatchStatement);
    }

    @Import(name="xssMatchStatement")
    private @Nullable RuleGroupXssMatchStatement xssMatchStatement;

    public Optional<RuleGroupXssMatchStatement> xssMatchStatement() {
        return Optional.ofNullable(this.xssMatchStatement);
    }

    private RuleGroupStatement() {}

    private RuleGroupStatement(RuleGroupStatement $) {
        this.andStatement = $.andStatement;
        this.byteMatchStatement = $.byteMatchStatement;
        this.geoMatchStatement = $.geoMatchStatement;
        this.iPSetReferenceStatement = $.iPSetReferenceStatement;
        this.labelMatchStatement = $.labelMatchStatement;
        this.notStatement = $.notStatement;
        this.orStatement = $.orStatement;
        this.rateBasedStatement = $.rateBasedStatement;
        this.regexMatchStatement = $.regexMatchStatement;
        this.regexPatternSetReferenceStatement = $.regexPatternSetReferenceStatement;
        this.sizeConstraintStatement = $.sizeConstraintStatement;
        this.sqliMatchStatement = $.sqliMatchStatement;
        this.xssMatchStatement = $.xssMatchStatement;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleGroupStatement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleGroupStatement $;

        public Builder() {
            $ = new RuleGroupStatement();
        }

        public Builder(RuleGroupStatement defaults) {
            $ = new RuleGroupStatement(Objects.requireNonNull(defaults));
        }

        public Builder andStatement(@Nullable RuleGroupAndStatement andStatement) {
            $.andStatement = andStatement;
            return this;
        }

        public Builder byteMatchStatement(@Nullable RuleGroupByteMatchStatement byteMatchStatement) {
            $.byteMatchStatement = byteMatchStatement;
            return this;
        }

        public Builder geoMatchStatement(@Nullable RuleGroupGeoMatchStatement geoMatchStatement) {
            $.geoMatchStatement = geoMatchStatement;
            return this;
        }

        public Builder iPSetReferenceStatement(@Nullable RuleGroupIPSetReferenceStatement iPSetReferenceStatement) {
            $.iPSetReferenceStatement = iPSetReferenceStatement;
            return this;
        }

        public Builder labelMatchStatement(@Nullable RuleGroupLabelMatchStatement labelMatchStatement) {
            $.labelMatchStatement = labelMatchStatement;
            return this;
        }

        public Builder notStatement(@Nullable RuleGroupNotStatement notStatement) {
            $.notStatement = notStatement;
            return this;
        }

        public Builder orStatement(@Nullable RuleGroupOrStatement orStatement) {
            $.orStatement = orStatement;
            return this;
        }

        public Builder rateBasedStatement(@Nullable RuleGroupRateBasedStatement rateBasedStatement) {
            $.rateBasedStatement = rateBasedStatement;
            return this;
        }

        public Builder regexMatchStatement(@Nullable RuleGroupRegexMatchStatement regexMatchStatement) {
            $.regexMatchStatement = regexMatchStatement;
            return this;
        }

        public Builder regexPatternSetReferenceStatement(@Nullable RuleGroupRegexPatternSetReferenceStatement regexPatternSetReferenceStatement) {
            $.regexPatternSetReferenceStatement = regexPatternSetReferenceStatement;
            return this;
        }

        public Builder sizeConstraintStatement(@Nullable RuleGroupSizeConstraintStatement sizeConstraintStatement) {
            $.sizeConstraintStatement = sizeConstraintStatement;
            return this;
        }

        public Builder sqliMatchStatement(@Nullable RuleGroupSqliMatchStatement sqliMatchStatement) {
            $.sqliMatchStatement = sqliMatchStatement;
            return this;
        }

        public Builder xssMatchStatement(@Nullable RuleGroupXssMatchStatement xssMatchStatement) {
            $.xssMatchStatement = xssMatchStatement;
            return this;
        }

        public RuleGroupStatement build() {
            return $;
        }
    }

}
