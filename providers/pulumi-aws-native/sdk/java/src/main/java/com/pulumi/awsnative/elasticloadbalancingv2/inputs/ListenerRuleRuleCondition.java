// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.elasticloadbalancingv2.inputs;

import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleHostHeaderConfig;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleHttpHeaderConfig;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleHttpRequestMethodConfig;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRulePathPatternConfig;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleQueryStringConfig;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleSourceIpConfig;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerRuleRuleCondition extends com.pulumi.resources.InvokeArgs {

    public static final ListenerRuleRuleCondition Empty = new ListenerRuleRuleCondition();

    @Import(name="field")
    private @Nullable String field;

    public Optional<String> field() {
        return Optional.ofNullable(this.field);
    }

    @Import(name="hostHeaderConfig")
    private @Nullable ListenerRuleHostHeaderConfig hostHeaderConfig;

    public Optional<ListenerRuleHostHeaderConfig> hostHeaderConfig() {
        return Optional.ofNullable(this.hostHeaderConfig);
    }

    @Import(name="httpHeaderConfig")
    private @Nullable ListenerRuleHttpHeaderConfig httpHeaderConfig;

    public Optional<ListenerRuleHttpHeaderConfig> httpHeaderConfig() {
        return Optional.ofNullable(this.httpHeaderConfig);
    }

    @Import(name="httpRequestMethodConfig")
    private @Nullable ListenerRuleHttpRequestMethodConfig httpRequestMethodConfig;

    public Optional<ListenerRuleHttpRequestMethodConfig> httpRequestMethodConfig() {
        return Optional.ofNullable(this.httpRequestMethodConfig);
    }

    @Import(name="pathPatternConfig")
    private @Nullable ListenerRulePathPatternConfig pathPatternConfig;

    public Optional<ListenerRulePathPatternConfig> pathPatternConfig() {
        return Optional.ofNullable(this.pathPatternConfig);
    }

    @Import(name="queryStringConfig")
    private @Nullable ListenerRuleQueryStringConfig queryStringConfig;

    public Optional<ListenerRuleQueryStringConfig> queryStringConfig() {
        return Optional.ofNullable(this.queryStringConfig);
    }

    @Import(name="sourceIpConfig")
    private @Nullable ListenerRuleSourceIpConfig sourceIpConfig;

    public Optional<ListenerRuleSourceIpConfig> sourceIpConfig() {
        return Optional.ofNullable(this.sourceIpConfig);
    }

    @Import(name="values")
    private @Nullable List<String> values;

    public Optional<List<String>> values() {
        return Optional.ofNullable(this.values);
    }

    private ListenerRuleRuleCondition() {}

    private ListenerRuleRuleCondition(ListenerRuleRuleCondition $) {
        this.field = $.field;
        this.hostHeaderConfig = $.hostHeaderConfig;
        this.httpHeaderConfig = $.httpHeaderConfig;
        this.httpRequestMethodConfig = $.httpRequestMethodConfig;
        this.pathPatternConfig = $.pathPatternConfig;
        this.queryStringConfig = $.queryStringConfig;
        this.sourceIpConfig = $.sourceIpConfig;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerRuleRuleCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerRuleRuleCondition $;

        public Builder() {
            $ = new ListenerRuleRuleCondition();
        }

        public Builder(ListenerRuleRuleCondition defaults) {
            $ = new ListenerRuleRuleCondition(Objects.requireNonNull(defaults));
        }

        public Builder field(@Nullable String field) {
            $.field = field;
            return this;
        }

        public Builder hostHeaderConfig(@Nullable ListenerRuleHostHeaderConfig hostHeaderConfig) {
            $.hostHeaderConfig = hostHeaderConfig;
            return this;
        }

        public Builder httpHeaderConfig(@Nullable ListenerRuleHttpHeaderConfig httpHeaderConfig) {
            $.httpHeaderConfig = httpHeaderConfig;
            return this;
        }

        public Builder httpRequestMethodConfig(@Nullable ListenerRuleHttpRequestMethodConfig httpRequestMethodConfig) {
            $.httpRequestMethodConfig = httpRequestMethodConfig;
            return this;
        }

        public Builder pathPatternConfig(@Nullable ListenerRulePathPatternConfig pathPatternConfig) {
            $.pathPatternConfig = pathPatternConfig;
            return this;
        }

        public Builder queryStringConfig(@Nullable ListenerRuleQueryStringConfig queryStringConfig) {
            $.queryStringConfig = queryStringConfig;
            return this;
        }

        public Builder sourceIpConfig(@Nullable ListenerRuleSourceIpConfig sourceIpConfig) {
            $.sourceIpConfig = sourceIpConfig;
            return this;
        }

        public Builder values(@Nullable List<String> values) {
            $.values = values;
            return this;
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public ListenerRuleRuleCondition build() {
            return $;
        }
    }

}
