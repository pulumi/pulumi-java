// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudfront.inputs;

import com.pulumi.awsnative.cloudfront.inputs.DistributionCustomOriginConfig;
import com.pulumi.awsnative.cloudfront.inputs.DistributionOriginCustomHeader;
import com.pulumi.awsnative.cloudfront.inputs.DistributionOriginShield;
import com.pulumi.awsnative.cloudfront.inputs.DistributionS3OriginConfig;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionOrigin extends com.pulumi.resources.InvokeArgs {

    public static final DistributionOrigin Empty = new DistributionOrigin();

    @Import(name="connectionAttempts")
    private @Nullable Integer connectionAttempts;

    public Optional<Integer> connectionAttempts() {
        return Optional.ofNullable(this.connectionAttempts);
    }

    @Import(name="connectionTimeout")
    private @Nullable Integer connectionTimeout;

    public Optional<Integer> connectionTimeout() {
        return Optional.ofNullable(this.connectionTimeout);
    }

    @Import(name="customOriginConfig")
    private @Nullable DistributionCustomOriginConfig customOriginConfig;

    public Optional<DistributionCustomOriginConfig> customOriginConfig() {
        return Optional.ofNullable(this.customOriginConfig);
    }

    @Import(name="domainName", required=true)
    private String domainName;

    public String domainName() {
        return this.domainName;
    }

    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    @Import(name="originCustomHeaders")
    private @Nullable List<DistributionOriginCustomHeader> originCustomHeaders;

    public Optional<List<DistributionOriginCustomHeader>> originCustomHeaders() {
        return Optional.ofNullable(this.originCustomHeaders);
    }

    @Import(name="originPath")
    private @Nullable String originPath;

    public Optional<String> originPath() {
        return Optional.ofNullable(this.originPath);
    }

    @Import(name="originShield")
    private @Nullable DistributionOriginShield originShield;

    public Optional<DistributionOriginShield> originShield() {
        return Optional.ofNullable(this.originShield);
    }

    @Import(name="s3OriginConfig")
    private @Nullable DistributionS3OriginConfig s3OriginConfig;

    public Optional<DistributionS3OriginConfig> s3OriginConfig() {
        return Optional.ofNullable(this.s3OriginConfig);
    }

    private DistributionOrigin() {}

    private DistributionOrigin(DistributionOrigin $) {
        this.connectionAttempts = $.connectionAttempts;
        this.connectionTimeout = $.connectionTimeout;
        this.customOriginConfig = $.customOriginConfig;
        this.domainName = $.domainName;
        this.id = $.id;
        this.originCustomHeaders = $.originCustomHeaders;
        this.originPath = $.originPath;
        this.originShield = $.originShield;
        this.s3OriginConfig = $.s3OriginConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionOrigin defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionOrigin $;

        public Builder() {
            $ = new DistributionOrigin();
        }

        public Builder(DistributionOrigin defaults) {
            $ = new DistributionOrigin(Objects.requireNonNull(defaults));
        }

        public Builder connectionAttempts(@Nullable Integer connectionAttempts) {
            $.connectionAttempts = connectionAttempts;
            return this;
        }

        public Builder connectionTimeout(@Nullable Integer connectionTimeout) {
            $.connectionTimeout = connectionTimeout;
            return this;
        }

        public Builder customOriginConfig(@Nullable DistributionCustomOriginConfig customOriginConfig) {
            $.customOriginConfig = customOriginConfig;
            return this;
        }

        public Builder domainName(String domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder originCustomHeaders(@Nullable List<DistributionOriginCustomHeader> originCustomHeaders) {
            $.originCustomHeaders = originCustomHeaders;
            return this;
        }

        public Builder originCustomHeaders(DistributionOriginCustomHeader... originCustomHeaders) {
            return originCustomHeaders(List.of(originCustomHeaders));
        }

        public Builder originPath(@Nullable String originPath) {
            $.originPath = originPath;
            return this;
        }

        public Builder originShield(@Nullable DistributionOriginShield originShield) {
            $.originShield = originShield;
            return this;
        }

        public Builder s3OriginConfig(@Nullable DistributionS3OriginConfig s3OriginConfig) {
            $.s3OriginConfig = s3OriginConfig;
            return this;
        }

        public DistributionOrigin build() {
            $.domainName = Objects.requireNonNull($.domainName, "expected parameter 'domainName' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
