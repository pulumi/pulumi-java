// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudfront.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionViewerCertificate extends com.pulumi.resources.InvokeArgs {

    public static final DistributionViewerCertificate Empty = new DistributionViewerCertificate();

    @Import(name="acmCertificateArn")
    private @Nullable String acmCertificateArn;

    public Optional<String> acmCertificateArn() {
        return Optional.ofNullable(this.acmCertificateArn);
    }

    @Import(name="cloudFrontDefaultCertificate")
    private @Nullable Boolean cloudFrontDefaultCertificate;

    public Optional<Boolean> cloudFrontDefaultCertificate() {
        return Optional.ofNullable(this.cloudFrontDefaultCertificate);
    }

    @Import(name="iamCertificateId")
    private @Nullable String iamCertificateId;

    public Optional<String> iamCertificateId() {
        return Optional.ofNullable(this.iamCertificateId);
    }

    @Import(name="minimumProtocolVersion")
    private @Nullable String minimumProtocolVersion;

    public Optional<String> minimumProtocolVersion() {
        return Optional.ofNullable(this.minimumProtocolVersion);
    }

    @Import(name="sslSupportMethod")
    private @Nullable String sslSupportMethod;

    public Optional<String> sslSupportMethod() {
        return Optional.ofNullable(this.sslSupportMethod);
    }

    private DistributionViewerCertificate() {}

    private DistributionViewerCertificate(DistributionViewerCertificate $) {
        this.acmCertificateArn = $.acmCertificateArn;
        this.cloudFrontDefaultCertificate = $.cloudFrontDefaultCertificate;
        this.iamCertificateId = $.iamCertificateId;
        this.minimumProtocolVersion = $.minimumProtocolVersion;
        this.sslSupportMethod = $.sslSupportMethod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionViewerCertificate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionViewerCertificate $;

        public Builder() {
            $ = new DistributionViewerCertificate();
        }

        public Builder(DistributionViewerCertificate defaults) {
            $ = new DistributionViewerCertificate(Objects.requireNonNull(defaults));
        }

        public Builder acmCertificateArn(@Nullable String acmCertificateArn) {
            $.acmCertificateArn = acmCertificateArn;
            return this;
        }

        public Builder cloudFrontDefaultCertificate(@Nullable Boolean cloudFrontDefaultCertificate) {
            $.cloudFrontDefaultCertificate = cloudFrontDefaultCertificate;
            return this;
        }

        public Builder iamCertificateId(@Nullable String iamCertificateId) {
            $.iamCertificateId = iamCertificateId;
            return this;
        }

        public Builder minimumProtocolVersion(@Nullable String minimumProtocolVersion) {
            $.minimumProtocolVersion = minimumProtocolVersion;
            return this;
        }

        public Builder sslSupportMethod(@Nullable String sslSupportMethod) {
            $.sslSupportMethod = sslSupportMethod;
            return this;
        }

        public DistributionViewerCertificate build() {
            return $;
        }
    }

}
