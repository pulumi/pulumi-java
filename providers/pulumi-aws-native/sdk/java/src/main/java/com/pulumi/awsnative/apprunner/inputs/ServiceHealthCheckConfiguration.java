// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apprunner.inputs;

import com.pulumi.awsnative.apprunner.enums.ServiceHealthCheckConfigurationProtocol;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Health check configuration
 * 
 */
public final class ServiceHealthCheckConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final ServiceHealthCheckConfiguration Empty = new ServiceHealthCheckConfiguration();

    /**
     * Health check Healthy Threshold
     * 
     */
    @Import(name="healthyThreshold")
      private final @Nullable Integer healthyThreshold;

    public Optional<Integer> healthyThreshold() {
        return this.healthyThreshold == null ? Optional.empty() : Optional.ofNullable(this.healthyThreshold);
    }

    /**
     * Health check Interval
     * 
     */
    @Import(name="interval")
      private final @Nullable Integer interval;

    public Optional<Integer> interval() {
        return this.interval == null ? Optional.empty() : Optional.ofNullable(this.interval);
    }

    /**
     * Health check Path
     * 
     */
    @Import(name="path")
      private final @Nullable String path;

    public Optional<String> path() {
        return this.path == null ? Optional.empty() : Optional.ofNullable(this.path);
    }

    /**
     * Health Check Protocol
     * 
     */
    @Import(name="protocol")
      private final @Nullable ServiceHealthCheckConfigurationProtocol protocol;

    public Optional<ServiceHealthCheckConfigurationProtocol> protocol() {
        return this.protocol == null ? Optional.empty() : Optional.ofNullable(this.protocol);
    }

    /**
     * Health check Timeout
     * 
     */
    @Import(name="timeout")
      private final @Nullable Integer timeout;

    public Optional<Integer> timeout() {
        return this.timeout == null ? Optional.empty() : Optional.ofNullable(this.timeout);
    }

    /**
     * Health check Unhealthy Threshold
     * 
     */
    @Import(name="unhealthyThreshold")
      private final @Nullable Integer unhealthyThreshold;

    public Optional<Integer> unhealthyThreshold() {
        return this.unhealthyThreshold == null ? Optional.empty() : Optional.ofNullable(this.unhealthyThreshold);
    }

    public ServiceHealthCheckConfiguration(
        @Nullable Integer healthyThreshold,
        @Nullable Integer interval,
        @Nullable String path,
        @Nullable ServiceHealthCheckConfigurationProtocol protocol,
        @Nullable Integer timeout,
        @Nullable Integer unhealthyThreshold) {
        this.healthyThreshold = healthyThreshold;
        this.interval = interval;
        this.path = path;
        this.protocol = protocol;
        this.timeout = timeout;
        this.unhealthyThreshold = unhealthyThreshold;
    }

    private ServiceHealthCheckConfiguration() {
        this.healthyThreshold = null;
        this.interval = null;
        this.path = null;
        this.protocol = null;
        this.timeout = null;
        this.unhealthyThreshold = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceHealthCheckConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer healthyThreshold;
        private @Nullable Integer interval;
        private @Nullable String path;
        private @Nullable ServiceHealthCheckConfigurationProtocol protocol;
        private @Nullable Integer timeout;
        private @Nullable Integer unhealthyThreshold;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceHealthCheckConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.healthyThreshold = defaults.healthyThreshold;
    	      this.interval = defaults.interval;
    	      this.path = defaults.path;
    	      this.protocol = defaults.protocol;
    	      this.timeout = defaults.timeout;
    	      this.unhealthyThreshold = defaults.unhealthyThreshold;
        }

        public Builder healthyThreshold(@Nullable Integer healthyThreshold) {
            this.healthyThreshold = healthyThreshold;
            return this;
        }
        public Builder interval(@Nullable Integer interval) {
            this.interval = interval;
            return this;
        }
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        public Builder protocol(@Nullable ServiceHealthCheckConfigurationProtocol protocol) {
            this.protocol = protocol;
            return this;
        }
        public Builder timeout(@Nullable Integer timeout) {
            this.timeout = timeout;
            return this;
        }
        public Builder unhealthyThreshold(@Nullable Integer unhealthyThreshold) {
            this.unhealthyThreshold = unhealthyThreshold;
            return this;
        }        public ServiceHealthCheckConfiguration build() {
            return new ServiceHealthCheckConfiguration(healthyThreshold, interval, path, protocol, timeout, unhealthyThreshold);
        }
    }
}
