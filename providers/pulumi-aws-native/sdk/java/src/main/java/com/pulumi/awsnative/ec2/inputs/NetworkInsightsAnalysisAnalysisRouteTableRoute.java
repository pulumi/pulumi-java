// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkInsightsAnalysisAnalysisRouteTableRoute extends com.pulumi.resources.InvokeArgs {

    public static final NetworkInsightsAnalysisAnalysisRouteTableRoute Empty = new NetworkInsightsAnalysisAnalysisRouteTableRoute();

    @Import(name="destinationCidr")
    private @Nullable String destinationCidr;

    public Optional<String> destinationCidr() {
        return Optional.ofNullable(this.destinationCidr);
    }

    @Import(name="destinationPrefixListId")
    private @Nullable String destinationPrefixListId;

    public Optional<String> destinationPrefixListId() {
        return Optional.ofNullable(this.destinationPrefixListId);
    }

    @Import(name="egressOnlyInternetGatewayId")
    private @Nullable String egressOnlyInternetGatewayId;

    public Optional<String> egressOnlyInternetGatewayId() {
        return Optional.ofNullable(this.egressOnlyInternetGatewayId);
    }

    @Import(name="gatewayId")
    private @Nullable String gatewayId;

    public Optional<String> gatewayId() {
        return Optional.ofNullable(this.gatewayId);
    }

    @Import(name="instanceId")
    private @Nullable String instanceId;

    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    @Import(name="natGatewayId")
    private @Nullable String natGatewayId;

    public Optional<String> natGatewayId() {
        return Optional.ofNullable(this.natGatewayId);
    }

    @Import(name="networkInterfaceId")
    private @Nullable String networkInterfaceId;

    public Optional<String> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }

    @Import(name="origin")
    private @Nullable String origin;

    public Optional<String> origin() {
        return Optional.ofNullable(this.origin);
    }

    @Import(name="transitGatewayId")
    private @Nullable String transitGatewayId;

    public Optional<String> transitGatewayId() {
        return Optional.ofNullable(this.transitGatewayId);
    }

    @Import(name="vpcPeeringConnectionId")
    private @Nullable String vpcPeeringConnectionId;

    public Optional<String> vpcPeeringConnectionId() {
        return Optional.ofNullable(this.vpcPeeringConnectionId);
    }

    private NetworkInsightsAnalysisAnalysisRouteTableRoute() {}

    private NetworkInsightsAnalysisAnalysisRouteTableRoute(NetworkInsightsAnalysisAnalysisRouteTableRoute $) {
        this.destinationCidr = $.destinationCidr;
        this.destinationPrefixListId = $.destinationPrefixListId;
        this.egressOnlyInternetGatewayId = $.egressOnlyInternetGatewayId;
        this.gatewayId = $.gatewayId;
        this.instanceId = $.instanceId;
        this.natGatewayId = $.natGatewayId;
        this.networkInterfaceId = $.networkInterfaceId;
        this.origin = $.origin;
        this.transitGatewayId = $.transitGatewayId;
        this.vpcPeeringConnectionId = $.vpcPeeringConnectionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInsightsAnalysisAnalysisRouteTableRoute defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInsightsAnalysisAnalysisRouteTableRoute $;

        public Builder() {
            $ = new NetworkInsightsAnalysisAnalysisRouteTableRoute();
        }

        public Builder(NetworkInsightsAnalysisAnalysisRouteTableRoute defaults) {
            $ = new NetworkInsightsAnalysisAnalysisRouteTableRoute(Objects.requireNonNull(defaults));
        }

        public Builder destinationCidr(@Nullable String destinationCidr) {
            $.destinationCidr = destinationCidr;
            return this;
        }

        public Builder destinationPrefixListId(@Nullable String destinationPrefixListId) {
            $.destinationPrefixListId = destinationPrefixListId;
            return this;
        }

        public Builder egressOnlyInternetGatewayId(@Nullable String egressOnlyInternetGatewayId) {
            $.egressOnlyInternetGatewayId = egressOnlyInternetGatewayId;
            return this;
        }

        public Builder gatewayId(@Nullable String gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        public Builder instanceId(@Nullable String instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder natGatewayId(@Nullable String natGatewayId) {
            $.natGatewayId = natGatewayId;
            return this;
        }

        public Builder networkInterfaceId(@Nullable String networkInterfaceId) {
            $.networkInterfaceId = networkInterfaceId;
            return this;
        }

        public Builder origin(@Nullable String origin) {
            $.origin = origin;
            return this;
        }

        public Builder transitGatewayId(@Nullable String transitGatewayId) {
            $.transitGatewayId = transitGatewayId;
            return this;
        }

        public Builder vpcPeeringConnectionId(@Nullable String vpcPeeringConnectionId) {
            $.vpcPeeringConnectionId = vpcPeeringConnectionId;
            return this;
        }

        public NetworkInsightsAnalysisAnalysisRouteTableRoute build() {
            return $;
        }
    }

}
