// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatastoreTimestampPartition extends com.pulumi.resources.InvokeArgs {

    public static final DatastoreTimestampPartition Empty = new DatastoreTimestampPartition();

    @Import(name="attributeName", required=true)
    private String attributeName;

    public String attributeName() {
        return this.attributeName;
    }

    @Import(name="timestampFormat")
    private @Nullable String timestampFormat;

    public Optional<String> timestampFormat() {
        return Optional.ofNullable(this.timestampFormat);
    }

    private DatastoreTimestampPartition() {}

    private DatastoreTimestampPartition(DatastoreTimestampPartition $) {
        this.attributeName = $.attributeName;
        this.timestampFormat = $.timestampFormat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastoreTimestampPartition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastoreTimestampPartition $;

        public Builder() {
            $ = new DatastoreTimestampPartition();
        }

        public Builder(DatastoreTimestampPartition defaults) {
            $ = new DatastoreTimestampPartition(Objects.requireNonNull(defaults));
        }

        public Builder attributeName(String attributeName) {
            $.attributeName = attributeName;
            return this;
        }

        public Builder timestampFormat(@Nullable String timestampFormat) {
            $.timestampFormat = timestampFormat;
            return this;
        }

        public DatastoreTimestampPartition build() {
            $.attributeName = Objects.requireNonNull($.attributeName, "expected parameter 'attributeName' to be non-null");
            return $;
        }
    }

}
