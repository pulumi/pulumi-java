// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.inputs;

import com.pulumi.awsnative.ecs.enums.CapacityProviderManagedScalingStatus;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The managed scaling settings for the Auto Scaling group capacity provider.
 * 
 */
public final class CapacityProviderManagedScaling extends com.pulumi.resources.InvokeArgs {

    public static final CapacityProviderManagedScaling Empty = new CapacityProviderManagedScaling();

    @Import(name="instanceWarmupPeriod")
    private @Nullable Integer instanceWarmupPeriod;

    public Optional<Integer> instanceWarmupPeriod() {
        return Optional.ofNullable(this.instanceWarmupPeriod);
    }

    @Import(name="maximumScalingStepSize")
    private @Nullable Integer maximumScalingStepSize;

    public Optional<Integer> maximumScalingStepSize() {
        return Optional.ofNullable(this.maximumScalingStepSize);
    }

    @Import(name="minimumScalingStepSize")
    private @Nullable Integer minimumScalingStepSize;

    public Optional<Integer> minimumScalingStepSize() {
        return Optional.ofNullable(this.minimumScalingStepSize);
    }

    @Import(name="status")
    private @Nullable CapacityProviderManagedScalingStatus status;

    public Optional<CapacityProviderManagedScalingStatus> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="targetCapacity")
    private @Nullable Integer targetCapacity;

    public Optional<Integer> targetCapacity() {
        return Optional.ofNullable(this.targetCapacity);
    }

    private CapacityProviderManagedScaling() {}

    private CapacityProviderManagedScaling(CapacityProviderManagedScaling $) {
        this.instanceWarmupPeriod = $.instanceWarmupPeriod;
        this.maximumScalingStepSize = $.maximumScalingStepSize;
        this.minimumScalingStepSize = $.minimumScalingStepSize;
        this.status = $.status;
        this.targetCapacity = $.targetCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapacityProviderManagedScaling defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapacityProviderManagedScaling $;

        public Builder() {
            $ = new CapacityProviderManagedScaling();
        }

        public Builder(CapacityProviderManagedScaling defaults) {
            $ = new CapacityProviderManagedScaling(Objects.requireNonNull(defaults));
        }

        public Builder instanceWarmupPeriod(@Nullable Integer instanceWarmupPeriod) {
            $.instanceWarmupPeriod = instanceWarmupPeriod;
            return this;
        }

        public Builder maximumScalingStepSize(@Nullable Integer maximumScalingStepSize) {
            $.maximumScalingStepSize = maximumScalingStepSize;
            return this;
        }

        public Builder minimumScalingStepSize(@Nullable Integer minimumScalingStepSize) {
            $.minimumScalingStepSize = minimumScalingStepSize;
            return this;
        }

        public Builder status(@Nullable CapacityProviderManagedScalingStatus status) {
            $.status = status;
            return this;
        }

        public Builder targetCapacity(@Nullable Integer targetCapacity) {
            $.targetCapacity = targetCapacity;
            return this;
        }

        public CapacityProviderManagedScaling build() {
            return $;
        }
    }

}
