// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents.inputs;

import com.pulumi.awsnative.iotevents.inputs.DetectorModelEvent;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * When entering this state, perform these `actions` if the `condition` is `TRUE`.
 * 
 */
public final class DetectorModelOnEnter extends com.pulumi.resources.InvokeArgs {

    public static final DetectorModelOnEnter Empty = new DetectorModelOnEnter();

    /**
     * Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.
     * 
     */
    @Import(name="events")
    private @Nullable List<DetectorModelEvent> events;

    /**
     * @return Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.
     * 
     */
    public Optional<List<DetectorModelEvent>> events() {
        return Optional.ofNullable(this.events);
    }

    private DetectorModelOnEnter() {}

    private DetectorModelOnEnter(DetectorModelOnEnter $) {
        this.events = $.events;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorModelOnEnter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorModelOnEnter $;

        public Builder() {
            $ = new DetectorModelOnEnter();
        }

        public Builder(DetectorModelOnEnter defaults) {
            $ = new DetectorModelOnEnter(Objects.requireNonNull(defaults));
        }

        /**
         * @param events Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.
         * 
         * @return builder
         * 
         */
        public Builder events(@Nullable List<DetectorModelEvent> events) {
            $.events = events;
            return this;
        }

        /**
         * @param events Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.
         * 
         * @return builder
         * 
         */
        public Builder events(DetectorModelEvent... events) {
            return events(List.of(events));
        }

        public DetectorModelOnEnter build() {
            return $;
        }
    }

}
