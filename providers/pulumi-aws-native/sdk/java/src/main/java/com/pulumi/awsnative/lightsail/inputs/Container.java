// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail.inputs;

import com.pulumi.awsnative.lightsail.inputs.ContainerEnvironmentVariable;
import com.pulumi.awsnative.lightsail.inputs.ContainerPortInfo;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the settings of a container that will be launched, or that is launched, to an Amazon Lightsail container service.
 * 
 */
public final class Container extends com.pulumi.resources.InvokeArgs {

    public static final Container Empty = new Container();

    /**
     * The launch command for the container.
     * 
     */
    @Import(name="command")
    private @Nullable List<String> command;

    public Optional<List<String>> command() {
        return Optional.ofNullable(this.command);
    }

    /**
     * The name of the container.
     * 
     */
    @Import(name="containerName")
    private @Nullable String containerName;

    public Optional<String> containerName() {
        return Optional.ofNullable(this.containerName);
    }

    /**
     * The environment variables of the container.
     * 
     */
    @Import(name="environment")
    private @Nullable List<ContainerEnvironmentVariable> environment;

    public Optional<List<ContainerEnvironmentVariable>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * The name of the image used for the container.
     * 
     */
    @Import(name="image")
    private @Nullable String image;

    public Optional<String> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * The open firewall ports of the container.
     * 
     */
    @Import(name="ports")
    private @Nullable List<ContainerPortInfo> ports;

    public Optional<List<ContainerPortInfo>> ports() {
        return Optional.ofNullable(this.ports);
    }

    private Container() {}

    private Container(Container $) {
        this.command = $.command;
        this.containerName = $.containerName;
        this.environment = $.environment;
        this.image = $.image;
        this.ports = $.ports;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Container defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Container $;

        public Builder() {
            $ = new Container();
        }

        public Builder(Container defaults) {
            $ = new Container(Objects.requireNonNull(defaults));
        }

        public Builder command(@Nullable List<String> command) {
            $.command = command;
            return this;
        }

        public Builder command(String... command) {
            return command(List.of(command));
        }

        public Builder containerName(@Nullable String containerName) {
            $.containerName = containerName;
            return this;
        }

        public Builder environment(@Nullable List<ContainerEnvironmentVariable> environment) {
            $.environment = environment;
            return this;
        }

        public Builder environment(ContainerEnvironmentVariable... environment) {
            return environment(List.of(environment));
        }

        public Builder image(@Nullable String image) {
            $.image = image;
            return this;
        }

        public Builder ports(@Nullable List<ContainerPortInfo> ports) {
            $.ports = ports;
            return this;
        }

        public Builder ports(ContainerPortInfo... ports) {
            return ports(List.of(ports));
        }

        public Container build() {
            return $;
        }
    }

}
