// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudfront.inputs;

import com.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyAccessControlAllowHeaders;
import com.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyAccessControlAllowMethods;
import com.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyAccessControlAllowOrigins;
import com.pulumi.awsnative.cloudfront.inputs.ResponseHeadersPolicyAccessControlExposeHeaders;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResponseHeadersPolicyCorsConfig extends com.pulumi.resources.InvokeArgs {

    public static final ResponseHeadersPolicyCorsConfig Empty = new ResponseHeadersPolicyCorsConfig();

    @Import(name="accessControlAllowCredentials", required=true)
    private Boolean accessControlAllowCredentials;

    public Boolean accessControlAllowCredentials() {
        return this.accessControlAllowCredentials;
    }

    @Import(name="accessControlAllowHeaders", required=true)
    private ResponseHeadersPolicyAccessControlAllowHeaders accessControlAllowHeaders;

    public ResponseHeadersPolicyAccessControlAllowHeaders accessControlAllowHeaders() {
        return this.accessControlAllowHeaders;
    }

    @Import(name="accessControlAllowMethods", required=true)
    private ResponseHeadersPolicyAccessControlAllowMethods accessControlAllowMethods;

    public ResponseHeadersPolicyAccessControlAllowMethods accessControlAllowMethods() {
        return this.accessControlAllowMethods;
    }

    @Import(name="accessControlAllowOrigins", required=true)
    private ResponseHeadersPolicyAccessControlAllowOrigins accessControlAllowOrigins;

    public ResponseHeadersPolicyAccessControlAllowOrigins accessControlAllowOrigins() {
        return this.accessControlAllowOrigins;
    }

    @Import(name="accessControlExposeHeaders")
    private @Nullable ResponseHeadersPolicyAccessControlExposeHeaders accessControlExposeHeaders;

    public Optional<ResponseHeadersPolicyAccessControlExposeHeaders> accessControlExposeHeaders() {
        return Optional.ofNullable(this.accessControlExposeHeaders);
    }

    @Import(name="accessControlMaxAgeSec")
    private @Nullable Integer accessControlMaxAgeSec;

    public Optional<Integer> accessControlMaxAgeSec() {
        return Optional.ofNullable(this.accessControlMaxAgeSec);
    }

    @Import(name="originOverride", required=true)
    private Boolean originOverride;

    public Boolean originOverride() {
        return this.originOverride;
    }

    private ResponseHeadersPolicyCorsConfig() {}

    private ResponseHeadersPolicyCorsConfig(ResponseHeadersPolicyCorsConfig $) {
        this.accessControlAllowCredentials = $.accessControlAllowCredentials;
        this.accessControlAllowHeaders = $.accessControlAllowHeaders;
        this.accessControlAllowMethods = $.accessControlAllowMethods;
        this.accessControlAllowOrigins = $.accessControlAllowOrigins;
        this.accessControlExposeHeaders = $.accessControlExposeHeaders;
        this.accessControlMaxAgeSec = $.accessControlMaxAgeSec;
        this.originOverride = $.originOverride;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResponseHeadersPolicyCorsConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResponseHeadersPolicyCorsConfig $;

        public Builder() {
            $ = new ResponseHeadersPolicyCorsConfig();
        }

        public Builder(ResponseHeadersPolicyCorsConfig defaults) {
            $ = new ResponseHeadersPolicyCorsConfig(Objects.requireNonNull(defaults));
        }

        public Builder accessControlAllowCredentials(Boolean accessControlAllowCredentials) {
            $.accessControlAllowCredentials = accessControlAllowCredentials;
            return this;
        }

        public Builder accessControlAllowHeaders(ResponseHeadersPolicyAccessControlAllowHeaders accessControlAllowHeaders) {
            $.accessControlAllowHeaders = accessControlAllowHeaders;
            return this;
        }

        public Builder accessControlAllowMethods(ResponseHeadersPolicyAccessControlAllowMethods accessControlAllowMethods) {
            $.accessControlAllowMethods = accessControlAllowMethods;
            return this;
        }

        public Builder accessControlAllowOrigins(ResponseHeadersPolicyAccessControlAllowOrigins accessControlAllowOrigins) {
            $.accessControlAllowOrigins = accessControlAllowOrigins;
            return this;
        }

        public Builder accessControlExposeHeaders(@Nullable ResponseHeadersPolicyAccessControlExposeHeaders accessControlExposeHeaders) {
            $.accessControlExposeHeaders = accessControlExposeHeaders;
            return this;
        }

        public Builder accessControlMaxAgeSec(@Nullable Integer accessControlMaxAgeSec) {
            $.accessControlMaxAgeSec = accessControlMaxAgeSec;
            return this;
        }

        public Builder originOverride(Boolean originOverride) {
            $.originOverride = originOverride;
            return this;
        }

        public ResponseHeadersPolicyCorsConfig build() {
            $.accessControlAllowCredentials = Objects.requireNonNull($.accessControlAllowCredentials, "expected parameter 'accessControlAllowCredentials' to be non-null");
            $.accessControlAllowHeaders = Objects.requireNonNull($.accessControlAllowHeaders, "expected parameter 'accessControlAllowHeaders' to be non-null");
            $.accessControlAllowMethods = Objects.requireNonNull($.accessControlAllowMethods, "expected parameter 'accessControlAllowMethods' to be non-null");
            $.accessControlAllowOrigins = Objects.requireNonNull($.accessControlAllowOrigins, "expected parameter 'accessControlAllowOrigins' to be non-null");
            $.originOverride = Objects.requireNonNull($.originOverride, "expected parameter 'originOverride' to be non-null");
            return $;
        }
    }

}
