// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.enums.DatasetFilesLimitOrder;
import com.pulumi.awsnative.databrew.enums.DatasetFilesLimitOrderedBy;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetFilesLimit extends com.pulumi.resources.InvokeArgs {

    public static final DatasetFilesLimit Empty = new DatasetFilesLimit();

    /**
     * Maximum number of files
     * 
     */
    @Import(name="maxFiles", required=true)
    private Integer maxFiles;

    /**
     * @return Maximum number of files
     * 
     */
    public Integer maxFiles() {
        return this.maxFiles;
    }

    /**
     * Order
     * 
     */
    @Import(name="order")
    private @Nullable DatasetFilesLimitOrder order;

    /**
     * @return Order
     * 
     */
    public Optional<DatasetFilesLimitOrder> order() {
        return Optional.ofNullable(this.order);
    }

    /**
     * Ordered by
     * 
     */
    @Import(name="orderedBy")
    private @Nullable DatasetFilesLimitOrderedBy orderedBy;

    /**
     * @return Ordered by
     * 
     */
    public Optional<DatasetFilesLimitOrderedBy> orderedBy() {
        return Optional.ofNullable(this.orderedBy);
    }

    private DatasetFilesLimit() {}

    private DatasetFilesLimit(DatasetFilesLimit $) {
        this.maxFiles = $.maxFiles;
        this.order = $.order;
        this.orderedBy = $.orderedBy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetFilesLimit defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetFilesLimit $;

        public Builder() {
            $ = new DatasetFilesLimit();
        }

        public Builder(DatasetFilesLimit defaults) {
            $ = new DatasetFilesLimit(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxFiles Maximum number of files
         * 
         * @return builder
         * 
         */
        public Builder maxFiles(Integer maxFiles) {
            $.maxFiles = maxFiles;
            return this;
        }

        /**
         * @param order Order
         * 
         * @return builder
         * 
         */
        public Builder order(@Nullable DatasetFilesLimitOrder order) {
            $.order = order;
            return this;
        }

        /**
         * @param orderedBy Ordered by
         * 
         * @return builder
         * 
         */
        public Builder orderedBy(@Nullable DatasetFilesLimitOrderedBy orderedBy) {
            $.orderedBy = orderedBy;
            return this;
        }

        public DatasetFilesLimit build() {
            $.maxFiles = Objects.requireNonNull($.maxFiles, "expected parameter 'maxFiles' to be non-null");
            return $;
        }
    }

}
