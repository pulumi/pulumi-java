// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisfirehose.inputs;

import com.pulumi.awsnative.kinesisfirehose.enums.DeliveryStreamS3DestinationConfigurationCompressionFormat;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamBufferingHints;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptions;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamEncryptionConfiguration;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryStreamS3DestinationConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final DeliveryStreamS3DestinationConfiguration Empty = new DeliveryStreamS3DestinationConfiguration();

    @Import(name="bucketARN", required=true)
    private String bucketARN;

    public String bucketARN() {
        return this.bucketARN;
    }

    @Import(name="bufferingHints")
    private @Nullable DeliveryStreamBufferingHints bufferingHints;

    public Optional<DeliveryStreamBufferingHints> bufferingHints() {
        return Optional.ofNullable(this.bufferingHints);
    }

    @Import(name="cloudWatchLoggingOptions")
    private @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions;

    public Optional<DeliveryStreamCloudWatchLoggingOptions> cloudWatchLoggingOptions() {
        return Optional.ofNullable(this.cloudWatchLoggingOptions);
    }

    @Import(name="compressionFormat")
    private @Nullable DeliveryStreamS3DestinationConfigurationCompressionFormat compressionFormat;

    public Optional<DeliveryStreamS3DestinationConfigurationCompressionFormat> compressionFormat() {
        return Optional.ofNullable(this.compressionFormat);
    }

    @Import(name="encryptionConfiguration")
    private @Nullable DeliveryStreamEncryptionConfiguration encryptionConfiguration;

    public Optional<DeliveryStreamEncryptionConfiguration> encryptionConfiguration() {
        return Optional.ofNullable(this.encryptionConfiguration);
    }

    @Import(name="errorOutputPrefix")
    private @Nullable String errorOutputPrefix;

    public Optional<String> errorOutputPrefix() {
        return Optional.ofNullable(this.errorOutputPrefix);
    }

    @Import(name="prefix")
    private @Nullable String prefix;

    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="roleARN", required=true)
    private String roleARN;

    public String roleARN() {
        return this.roleARN;
    }

    private DeliveryStreamS3DestinationConfiguration() {}

    private DeliveryStreamS3DestinationConfiguration(DeliveryStreamS3DestinationConfiguration $) {
        this.bucketARN = $.bucketARN;
        this.bufferingHints = $.bufferingHints;
        this.cloudWatchLoggingOptions = $.cloudWatchLoggingOptions;
        this.compressionFormat = $.compressionFormat;
        this.encryptionConfiguration = $.encryptionConfiguration;
        this.errorOutputPrefix = $.errorOutputPrefix;
        this.prefix = $.prefix;
        this.roleARN = $.roleARN;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryStreamS3DestinationConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryStreamS3DestinationConfiguration $;

        public Builder() {
            $ = new DeliveryStreamS3DestinationConfiguration();
        }

        public Builder(DeliveryStreamS3DestinationConfiguration defaults) {
            $ = new DeliveryStreamS3DestinationConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder bucketARN(String bucketARN) {
            $.bucketARN = bucketARN;
            return this;
        }

        public Builder bufferingHints(@Nullable DeliveryStreamBufferingHints bufferingHints) {
            $.bufferingHints = bufferingHints;
            return this;
        }

        public Builder cloudWatchLoggingOptions(@Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions) {
            $.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder compressionFormat(@Nullable DeliveryStreamS3DestinationConfigurationCompressionFormat compressionFormat) {
            $.compressionFormat = compressionFormat;
            return this;
        }

        public Builder encryptionConfiguration(@Nullable DeliveryStreamEncryptionConfiguration encryptionConfiguration) {
            $.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        public Builder errorOutputPrefix(@Nullable String errorOutputPrefix) {
            $.errorOutputPrefix = errorOutputPrefix;
            return this;
        }

        public Builder prefix(@Nullable String prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder roleARN(String roleARN) {
            $.roleARN = roleARN;
            return this;
        }

        public DeliveryStreamS3DestinationConfiguration build() {
            $.bucketARN = Objects.requireNonNull($.bucketARN, "expected parameter 'bucketARN' to be non-null");
            $.roleARN = Objects.requireNonNull($.roleARN, "expected parameter 'roleARN' to be non-null");
            return $;
        }
    }

}
