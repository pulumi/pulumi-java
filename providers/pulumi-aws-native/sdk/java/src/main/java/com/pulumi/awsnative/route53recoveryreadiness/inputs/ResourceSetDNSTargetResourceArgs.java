// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.route53recoveryreadiness.inputs;

import com.pulumi.awsnative.route53recoveryreadiness.inputs.ResourceSetTargetResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A component for DNS/routing control readiness checks.
 * 
 */
public final class ResourceSetDNSTargetResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceSetDNSTargetResourceArgs Empty = new ResourceSetDNSTargetResourceArgs();

    /**
     * The domain name that acts as an ingress point to a portion of the customer application.
     * 
     */
    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.
     * 
     */
    @Import(name="hostedZoneArn")
    private @Nullable Output<String> hostedZoneArn;

    public Optional<Output<String>> hostedZoneArn() {
        return Optional.ofNullable(this.hostedZoneArn);
    }

    /**
     * The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type.
     * 
     */
    @Import(name="recordSetId")
    private @Nullable Output<String> recordSetId;

    public Optional<Output<String>> recordSetId() {
        return Optional.ofNullable(this.recordSetId);
    }

    /**
     * The type of DNS record of the target resource.
     * 
     */
    @Import(name="recordType")
    private @Nullable Output<String> recordType;

    public Optional<Output<String>> recordType() {
        return Optional.ofNullable(this.recordType);
    }

    @Import(name="targetResource")
    private @Nullable Output<ResourceSetTargetResourceArgs> targetResource;

    public Optional<Output<ResourceSetTargetResourceArgs>> targetResource() {
        return Optional.ofNullable(this.targetResource);
    }

    private ResourceSetDNSTargetResourceArgs() {}

    private ResourceSetDNSTargetResourceArgs(ResourceSetDNSTargetResourceArgs $) {
        this.domainName = $.domainName;
        this.hostedZoneArn = $.hostedZoneArn;
        this.recordSetId = $.recordSetId;
        this.recordType = $.recordType;
        this.targetResource = $.targetResource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceSetDNSTargetResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceSetDNSTargetResourceArgs $;

        public Builder() {
            $ = new ResourceSetDNSTargetResourceArgs();
        }

        public Builder(ResourceSetDNSTargetResourceArgs defaults) {
            $ = new ResourceSetDNSTargetResourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder hostedZoneArn(@Nullable Output<String> hostedZoneArn) {
            $.hostedZoneArn = hostedZoneArn;
            return this;
        }

        public Builder hostedZoneArn(String hostedZoneArn) {
            return hostedZoneArn(Output.of(hostedZoneArn));
        }

        public Builder recordSetId(@Nullable Output<String> recordSetId) {
            $.recordSetId = recordSetId;
            return this;
        }

        public Builder recordSetId(String recordSetId) {
            return recordSetId(Output.of(recordSetId));
        }

        public Builder recordType(@Nullable Output<String> recordType) {
            $.recordType = recordType;
            return this;
        }

        public Builder recordType(String recordType) {
            return recordType(Output.of(recordType));
        }

        public Builder targetResource(@Nullable Output<ResourceSetTargetResourceArgs> targetResource) {
            $.targetResource = targetResource;
            return this;
        }

        public Builder targetResource(ResourceSetTargetResourceArgs targetResource) {
            return targetResource(Output.of(targetResource));
        }

        public ResourceSetDNSTargetResourceArgs build() {
            return $;
        }
    }

}
