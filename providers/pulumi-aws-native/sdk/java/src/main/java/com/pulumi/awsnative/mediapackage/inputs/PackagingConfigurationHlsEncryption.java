// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediapackage.inputs;

import com.pulumi.awsnative.mediapackage.enums.PackagingConfigurationHlsEncryptionEncryptionMethod;
import com.pulumi.awsnative.mediapackage.inputs.PackagingConfigurationSpekeKeyProvider;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * An HTTP Live Streaming (HLS) encryption configuration.
 * 
 */
public final class PackagingConfigurationHlsEncryption extends com.pulumi.resources.InvokeArgs {

    public static final PackagingConfigurationHlsEncryption Empty = new PackagingConfigurationHlsEncryption();

    /**
     * An HTTP Live Streaming (HLS) encryption configuration.
     * 
     */
    @Import(name="constantInitializationVector")
    private @Nullable String constantInitializationVector;

    /**
     * @return An HTTP Live Streaming (HLS) encryption configuration.
     * 
     */
    public Optional<String> constantInitializationVector() {
        return Optional.ofNullable(this.constantInitializationVector);
    }

    /**
     * The encryption method to use.
     * 
     */
    @Import(name="encryptionMethod")
    private @Nullable PackagingConfigurationHlsEncryptionEncryptionMethod encryptionMethod;

    /**
     * @return The encryption method to use.
     * 
     */
    public Optional<PackagingConfigurationHlsEncryptionEncryptionMethod> encryptionMethod() {
        return Optional.ofNullable(this.encryptionMethod);
    }

    @Import(name="spekeKeyProvider", required=true)
    private PackagingConfigurationSpekeKeyProvider spekeKeyProvider;

    public PackagingConfigurationSpekeKeyProvider spekeKeyProvider() {
        return this.spekeKeyProvider;
    }

    private PackagingConfigurationHlsEncryption() {}

    private PackagingConfigurationHlsEncryption(PackagingConfigurationHlsEncryption $) {
        this.constantInitializationVector = $.constantInitializationVector;
        this.encryptionMethod = $.encryptionMethod;
        this.spekeKeyProvider = $.spekeKeyProvider;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PackagingConfigurationHlsEncryption defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PackagingConfigurationHlsEncryption $;

        public Builder() {
            $ = new PackagingConfigurationHlsEncryption();
        }

        public Builder(PackagingConfigurationHlsEncryption defaults) {
            $ = new PackagingConfigurationHlsEncryption(Objects.requireNonNull(defaults));
        }

        /**
         * @param constantInitializationVector An HTTP Live Streaming (HLS) encryption configuration.
         * 
         * @return builder
         * 
         */
        public Builder constantInitializationVector(@Nullable String constantInitializationVector) {
            $.constantInitializationVector = constantInitializationVector;
            return this;
        }

        /**
         * @param encryptionMethod The encryption method to use.
         * 
         * @return builder
         * 
         */
        public Builder encryptionMethod(@Nullable PackagingConfigurationHlsEncryptionEncryptionMethod encryptionMethod) {
            $.encryptionMethod = encryptionMethod;
            return this;
        }

        public Builder spekeKeyProvider(PackagingConfigurationSpekeKeyProvider spekeKeyProvider) {
            $.spekeKeyProvider = spekeKeyProvider;
            return this;
        }

        public PackagingConfigurationHlsEncryption build() {
            $.spekeKeyProvider = Objects.requireNonNull($.spekeKeyProvider, "expected parameter 'spekeKeyProvider' to be non-null");
            return $;
        }
    }

}
