// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.timestream.inputs;

import com.pulumi.awsnative.timestream.inputs.MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationProperties;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The properties that determine whether magnetic store writes are enabled.
 * 
 */
public final class MagneticStoreWritePropertiesProperties extends com.pulumi.resources.InvokeArgs {

    public static final MagneticStoreWritePropertiesProperties Empty = new MagneticStoreWritePropertiesProperties();

    /**
     * Boolean flag indicating whether magnetic store writes are enabled.
     * 
     */
    @Import(name="enableMagneticStoreWrites", required=true)
    private Boolean enableMagneticStoreWrites;

    /**
     * @return Boolean flag indicating whether magnetic store writes are enabled.
     * 
     */
    public Boolean enableMagneticStoreWrites() {
        return this.enableMagneticStoreWrites;
    }

    /**
     * Location to store information about records that were asynchronously rejected during magnetic store writes.
     * 
     */
    @Import(name="magneticStoreRejectedDataLocation")
    private @Nullable MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationProperties magneticStoreRejectedDataLocation;

    /**
     * @return Location to store information about records that were asynchronously rejected during magnetic store writes.
     * 
     */
    public Optional<MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationProperties> magneticStoreRejectedDataLocation() {
        return Optional.ofNullable(this.magneticStoreRejectedDataLocation);
    }

    private MagneticStoreWritePropertiesProperties() {}

    private MagneticStoreWritePropertiesProperties(MagneticStoreWritePropertiesProperties $) {
        this.enableMagneticStoreWrites = $.enableMagneticStoreWrites;
        this.magneticStoreRejectedDataLocation = $.magneticStoreRejectedDataLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MagneticStoreWritePropertiesProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MagneticStoreWritePropertiesProperties $;

        public Builder() {
            $ = new MagneticStoreWritePropertiesProperties();
        }

        public Builder(MagneticStoreWritePropertiesProperties defaults) {
            $ = new MagneticStoreWritePropertiesProperties(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableMagneticStoreWrites Boolean flag indicating whether magnetic store writes are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableMagneticStoreWrites(Boolean enableMagneticStoreWrites) {
            $.enableMagneticStoreWrites = enableMagneticStoreWrites;
            return this;
        }

        /**
         * @param magneticStoreRejectedDataLocation Location to store information about records that were asynchronously rejected during magnetic store writes.
         * 
         * @return builder
         * 
         */
        public Builder magneticStoreRejectedDataLocation(@Nullable MagneticStoreWritePropertiesPropertiesMagneticStoreRejectedDataLocationProperties magneticStoreRejectedDataLocation) {
            $.magneticStoreRejectedDataLocation = magneticStoreRejectedDataLocation;
            return this;
        }

        public MagneticStoreWritePropertiesProperties build() {
            $.enableMagneticStoreWrites = Objects.requireNonNull($.enableMagneticStoreWrites, "expected parameter 'enableMagneticStoreWrites' to be non-null");
            return $;
        }
    }

}
