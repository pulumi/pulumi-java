// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class TopicRuleElasticsearchActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleElasticsearchActionArgs Empty = new TopicRuleElasticsearchActionArgs();

    @Import(name="endpoint", required=true)
      private final Output<String> endpoint;

    public Output<String> endpoint() {
        return this.endpoint;
    }

    @Import(name="id", required=true)
      private final Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    @Import(name="index", required=true)
      private final Output<String> index;

    public Output<String> index() {
        return this.index;
    }

    @Import(name="roleArn", required=true)
      private final Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    public TopicRuleElasticsearchActionArgs(
        Output<String> endpoint,
        Output<String> id,
        Output<String> index,
        Output<String> roleArn,
        Output<String> type) {
        this.endpoint = Objects.requireNonNull(endpoint, "expected parameter 'endpoint' to be non-null");
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.index = Objects.requireNonNull(index, "expected parameter 'index' to be non-null");
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private TopicRuleElasticsearchActionArgs() {
        this.endpoint = Codegen.empty();
        this.id = Codegen.empty();
        this.index = Codegen.empty();
        this.roleArn = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TopicRuleElasticsearchActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> endpoint;
        private Output<String> id;
        private Output<String> index;
        private Output<String> roleArn;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(TopicRuleElasticsearchActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpoint = defaults.endpoint;
    	      this.id = defaults.id;
    	      this.index = defaults.index;
    	      this.roleArn = defaults.roleArn;
    	      this.type = defaults.type;
        }

        public Builder endpoint(Output<String> endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        public Builder endpoint(String endpoint) {
            this.endpoint = Output.of(Objects.requireNonNull(endpoint));
            return this;
        }
        public Builder id(Output<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder id(String id) {
            this.id = Output.of(Objects.requireNonNull(id));
            return this;
        }
        public Builder index(Output<String> index) {
            this.index = Objects.requireNonNull(index);
            return this;
        }
        public Builder index(String index) {
            this.index = Output.of(Objects.requireNonNull(index));
            return this;
        }
        public Builder roleArn(Output<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        public Builder roleArn(String roleArn) {
            this.roleArn = Output.of(Objects.requireNonNull(roleArn));
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public TopicRuleElasticsearchActionArgs build() {
            return new TopicRuleElasticsearchActionArgs(endpoint, id, index, roleArn, type);
        }
    }
}
