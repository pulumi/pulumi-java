// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The session logging configuration for ExecuteCommand.
 * 
 */
public final class ClusterExecuteCommandLogConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final ClusterExecuteCommandLogConfiguration Empty = new ClusterExecuteCommandLogConfiguration();

    @Import(name="cloudWatchEncryptionEnabled")
    private @Nullable Boolean cloudWatchEncryptionEnabled;

    public Optional<Boolean> cloudWatchEncryptionEnabled() {
        return Optional.ofNullable(this.cloudWatchEncryptionEnabled);
    }

    @Import(name="cloudWatchLogGroupName")
    private @Nullable String cloudWatchLogGroupName;

    public Optional<String> cloudWatchLogGroupName() {
        return Optional.ofNullable(this.cloudWatchLogGroupName);
    }

    @Import(name="s3BucketName")
    private @Nullable String s3BucketName;

    public Optional<String> s3BucketName() {
        return Optional.ofNullable(this.s3BucketName);
    }

    @Import(name="s3EncryptionEnabled")
    private @Nullable Boolean s3EncryptionEnabled;

    public Optional<Boolean> s3EncryptionEnabled() {
        return Optional.ofNullable(this.s3EncryptionEnabled);
    }

    @Import(name="s3KeyPrefix")
    private @Nullable String s3KeyPrefix;

    public Optional<String> s3KeyPrefix() {
        return Optional.ofNullable(this.s3KeyPrefix);
    }

    private ClusterExecuteCommandLogConfiguration() {}

    private ClusterExecuteCommandLogConfiguration(ClusterExecuteCommandLogConfiguration $) {
        this.cloudWatchEncryptionEnabled = $.cloudWatchEncryptionEnabled;
        this.cloudWatchLogGroupName = $.cloudWatchLogGroupName;
        this.s3BucketName = $.s3BucketName;
        this.s3EncryptionEnabled = $.s3EncryptionEnabled;
        this.s3KeyPrefix = $.s3KeyPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterExecuteCommandLogConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterExecuteCommandLogConfiguration $;

        public Builder() {
            $ = new ClusterExecuteCommandLogConfiguration();
        }

        public Builder(ClusterExecuteCommandLogConfiguration defaults) {
            $ = new ClusterExecuteCommandLogConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder cloudWatchEncryptionEnabled(@Nullable Boolean cloudWatchEncryptionEnabled) {
            $.cloudWatchEncryptionEnabled = cloudWatchEncryptionEnabled;
            return this;
        }

        public Builder cloudWatchLogGroupName(@Nullable String cloudWatchLogGroupName) {
            $.cloudWatchLogGroupName = cloudWatchLogGroupName;
            return this;
        }

        public Builder s3BucketName(@Nullable String s3BucketName) {
            $.s3BucketName = s3BucketName;
            return this;
        }

        public Builder s3EncryptionEnabled(@Nullable Boolean s3EncryptionEnabled) {
            $.s3EncryptionEnabled = s3EncryptionEnabled;
            return this;
        }

        public Builder s3KeyPrefix(@Nullable String s3KeyPrefix) {
            $.s3KeyPrefix = s3KeyPrefix;
            return this;
        }

        public ClusterExecuteCommandLogConfiguration build() {
            return $;
        }
    }

}
