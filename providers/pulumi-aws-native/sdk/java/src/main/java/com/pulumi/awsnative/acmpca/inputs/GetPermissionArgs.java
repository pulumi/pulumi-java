// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.acmpca.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetPermissionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPermissionArgs Empty = new GetPermissionArgs();

    /**
     * The Amazon Resource Name (ARN) of the Private Certificate Authority that grants the permission.
     * 
     */
    @Import(name="certificateAuthorityArn", required=true)
    private String certificateAuthorityArn;

    public String certificateAuthorityArn() {
        return this.certificateAuthorityArn;
    }

    /**
     * The AWS service or identity that receives the permission. At this time, the only valid principal is acm.amazonaws.com.
     * 
     */
    @Import(name="principal", required=true)
    private String principal;

    public String principal() {
        return this.principal;
    }

    private GetPermissionArgs() {}

    private GetPermissionArgs(GetPermissionArgs $) {
        this.certificateAuthorityArn = $.certificateAuthorityArn;
        this.principal = $.principal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPermissionArgs $;

        public Builder() {
            $ = new GetPermissionArgs();
        }

        public Builder(GetPermissionArgs defaults) {
            $ = new GetPermissionArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificateAuthorityArn(String certificateAuthorityArn) {
            $.certificateAuthorityArn = certificateAuthorityArn;
            return this;
        }

        public Builder principal(String principal) {
            $.principal = principal;
            return this;
        }

        public GetPermissionArgs build() {
            $.certificateAuthorityArn = Objects.requireNonNull($.certificateAuthorityArn, "expected parameter 'certificateAuthorityArn' to be non-null");
            $.principal = Objects.requireNonNull($.principal, "expected parameter 'principal' to be non-null");
            return $;
        }
    }

}
