// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sso.inputs;

import com.pulumi.awsnative.sso.enums.AssignmentPrincipalType;
import com.pulumi.awsnative.sso.enums.AssignmentTargetType;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetAssignmentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAssignmentArgs Empty = new GetAssignmentArgs();

    /**
     * The sso instance that the permission set is owned.
     * 
     */
    @Import(name="instanceArn", required=true)
    private String instanceArn;

    public String instanceArn() {
        return this.instanceArn;
    }

    /**
     * The permission set that the assignemt will be assigned
     * 
     */
    @Import(name="permissionSetArn", required=true)
    private String permissionSetArn;

    public String permissionSetArn() {
        return this.permissionSetArn;
    }

    /**
     * The assignee&#39;s identifier, user id/group id
     * 
     */
    @Import(name="principalId", required=true)
    private String principalId;

    public String principalId() {
        return this.principalId;
    }

    /**
     * The assignee&#39;s type, user/group
     * 
     */
    @Import(name="principalType", required=true)
    private AssignmentPrincipalType principalType;

    public AssignmentPrincipalType principalType() {
        return this.principalType;
    }

    /**
     * The account id to be provisioned.
     * 
     */
    @Import(name="targetId", required=true)
    private String targetId;

    public String targetId() {
        return this.targetId;
    }

    /**
     * The type of resource to be provsioned to, only aws account now
     * 
     */
    @Import(name="targetType", required=true)
    private AssignmentTargetType targetType;

    public AssignmentTargetType targetType() {
        return this.targetType;
    }

    private GetAssignmentArgs() {}

    private GetAssignmentArgs(GetAssignmentArgs $) {
        this.instanceArn = $.instanceArn;
        this.permissionSetArn = $.permissionSetArn;
        this.principalId = $.principalId;
        this.principalType = $.principalType;
        this.targetId = $.targetId;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAssignmentArgs $;

        public Builder() {
            $ = new GetAssignmentArgs();
        }

        public Builder(GetAssignmentArgs defaults) {
            $ = new GetAssignmentArgs(Objects.requireNonNull(defaults));
        }

        public Builder instanceArn(String instanceArn) {
            $.instanceArn = instanceArn;
            return this;
        }

        public Builder permissionSetArn(String permissionSetArn) {
            $.permissionSetArn = permissionSetArn;
            return this;
        }

        public Builder principalId(String principalId) {
            $.principalId = principalId;
            return this;
        }

        public Builder principalType(AssignmentPrincipalType principalType) {
            $.principalType = principalType;
            return this;
        }

        public Builder targetId(String targetId) {
            $.targetId = targetId;
            return this;
        }

        public Builder targetType(AssignmentTargetType targetType) {
            $.targetType = targetType;
            return this;
        }

        public GetAssignmentArgs build() {
            $.instanceArn = Objects.requireNonNull($.instanceArn, "expected parameter 'instanceArn' to be non-null");
            $.permissionSetArn = Objects.requireNonNull($.permissionSetArn, "expected parameter 'permissionSetArn' to be non-null");
            $.principalId = Objects.requireNonNull($.principalId, "expected parameter 'principalId' to be non-null");
            $.principalType = Objects.requireNonNull($.principalType, "expected parameter 'principalType' to be non-null");
            $.targetId = Objects.requireNonNull($.targetId, "expected parameter 'targetId' to be non-null");
            $.targetType = Objects.requireNonNull($.targetType, "expected parameter 'targetType' to be non-null");
            return $;
        }
    }

}
