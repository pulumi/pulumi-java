// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisfirehose.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryStreamOrcSerDe extends com.pulumi.resources.InvokeArgs {

    public static final DeliveryStreamOrcSerDe Empty = new DeliveryStreamOrcSerDe();

    @Import(name="blockSizeBytes")
    private @Nullable Integer blockSizeBytes;

    public Optional<Integer> blockSizeBytes() {
        return Optional.ofNullable(this.blockSizeBytes);
    }

    @Import(name="bloomFilterColumns")
    private @Nullable List<String> bloomFilterColumns;

    public Optional<List<String>> bloomFilterColumns() {
        return Optional.ofNullable(this.bloomFilterColumns);
    }

    @Import(name="bloomFilterFalsePositiveProbability")
    private @Nullable Double bloomFilterFalsePositiveProbability;

    public Optional<Double> bloomFilterFalsePositiveProbability() {
        return Optional.ofNullable(this.bloomFilterFalsePositiveProbability);
    }

    @Import(name="compression")
    private @Nullable String compression;

    public Optional<String> compression() {
        return Optional.ofNullable(this.compression);
    }

    @Import(name="dictionaryKeyThreshold")
    private @Nullable Double dictionaryKeyThreshold;

    public Optional<Double> dictionaryKeyThreshold() {
        return Optional.ofNullable(this.dictionaryKeyThreshold);
    }

    @Import(name="enablePadding")
    private @Nullable Boolean enablePadding;

    public Optional<Boolean> enablePadding() {
        return Optional.ofNullable(this.enablePadding);
    }

    @Import(name="formatVersion")
    private @Nullable String formatVersion;

    public Optional<String> formatVersion() {
        return Optional.ofNullable(this.formatVersion);
    }

    @Import(name="paddingTolerance")
    private @Nullable Double paddingTolerance;

    public Optional<Double> paddingTolerance() {
        return Optional.ofNullable(this.paddingTolerance);
    }

    @Import(name="rowIndexStride")
    private @Nullable Integer rowIndexStride;

    public Optional<Integer> rowIndexStride() {
        return Optional.ofNullable(this.rowIndexStride);
    }

    @Import(name="stripeSizeBytes")
    private @Nullable Integer stripeSizeBytes;

    public Optional<Integer> stripeSizeBytes() {
        return Optional.ofNullable(this.stripeSizeBytes);
    }

    private DeliveryStreamOrcSerDe() {}

    private DeliveryStreamOrcSerDe(DeliveryStreamOrcSerDe $) {
        this.blockSizeBytes = $.blockSizeBytes;
        this.bloomFilterColumns = $.bloomFilterColumns;
        this.bloomFilterFalsePositiveProbability = $.bloomFilterFalsePositiveProbability;
        this.compression = $.compression;
        this.dictionaryKeyThreshold = $.dictionaryKeyThreshold;
        this.enablePadding = $.enablePadding;
        this.formatVersion = $.formatVersion;
        this.paddingTolerance = $.paddingTolerance;
        this.rowIndexStride = $.rowIndexStride;
        this.stripeSizeBytes = $.stripeSizeBytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryStreamOrcSerDe defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryStreamOrcSerDe $;

        public Builder() {
            $ = new DeliveryStreamOrcSerDe();
        }

        public Builder(DeliveryStreamOrcSerDe defaults) {
            $ = new DeliveryStreamOrcSerDe(Objects.requireNonNull(defaults));
        }

        public Builder blockSizeBytes(@Nullable Integer blockSizeBytes) {
            $.blockSizeBytes = blockSizeBytes;
            return this;
        }

        public Builder bloomFilterColumns(@Nullable List<String> bloomFilterColumns) {
            $.bloomFilterColumns = bloomFilterColumns;
            return this;
        }

        public Builder bloomFilterColumns(String... bloomFilterColumns) {
            return bloomFilterColumns(List.of(bloomFilterColumns));
        }

        public Builder bloomFilterFalsePositiveProbability(@Nullable Double bloomFilterFalsePositiveProbability) {
            $.bloomFilterFalsePositiveProbability = bloomFilterFalsePositiveProbability;
            return this;
        }

        public Builder compression(@Nullable String compression) {
            $.compression = compression;
            return this;
        }

        public Builder dictionaryKeyThreshold(@Nullable Double dictionaryKeyThreshold) {
            $.dictionaryKeyThreshold = dictionaryKeyThreshold;
            return this;
        }

        public Builder enablePadding(@Nullable Boolean enablePadding) {
            $.enablePadding = enablePadding;
            return this;
        }

        public Builder formatVersion(@Nullable String formatVersion) {
            $.formatVersion = formatVersion;
            return this;
        }

        public Builder paddingTolerance(@Nullable Double paddingTolerance) {
            $.paddingTolerance = paddingTolerance;
            return this;
        }

        public Builder rowIndexStride(@Nullable Integer rowIndexStride) {
            $.rowIndexStride = rowIndexStride;
            return this;
        }

        public Builder stripeSizeBytes(@Nullable Integer stripeSizeBytes) {
            $.stripeSizeBytes = stripeSizeBytes;
            return this;
        }

        public DeliveryStreamOrcSerDe build() {
            return $;
        }
    }

}
