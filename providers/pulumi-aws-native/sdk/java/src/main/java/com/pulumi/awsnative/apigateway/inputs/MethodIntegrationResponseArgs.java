// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.inputs;

import com.pulumi.awsnative.apigateway.enums.MethodIntegrationResponseContentHandling;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MethodIntegrationResponseArgs extends com.pulumi.resources.ResourceArgs {

    public static final MethodIntegrationResponseArgs Empty = new MethodIntegrationResponseArgs();

    /**
     * Specifies how to handle request payload content type conversions.
     * 
     */
    @Import(name="contentHandling")
    private @Nullable Output<MethodIntegrationResponseContentHandling> contentHandling;

    public Optional<Output<MethodIntegrationResponseContentHandling>> contentHandling() {
        return Optional.ofNullable(this.contentHandling);
    }

    /**
     * The response parameters from the backend response that API Gateway sends to the method response.
     * 
     */
    @Import(name="responseParameters")
    private @Nullable Output<Object> responseParameters;

    public Optional<Output<Object>> responseParameters() {
        return Optional.ofNullable(this.responseParameters);
    }

    /**
     * The templates that are used to transform the integration response body. Specify templates as key-value pairs (string-to-string mappings), with a content type as the key and a template as the value.
     * 
     */
    @Import(name="responseTemplates")
    private @Nullable Output<Object> responseTemplates;

    public Optional<Output<Object>> responseTemplates() {
        return Optional.ofNullable(this.responseTemplates);
    }

    /**
     * A regular expression that specifies which error strings or status codes from the backend map to the integration response.
     * 
     */
    @Import(name="selectionPattern")
    private @Nullable Output<String> selectionPattern;

    public Optional<Output<String>> selectionPattern() {
        return Optional.ofNullable(this.selectionPattern);
    }

    /**
     * The status code that API Gateway uses to map the integration response to a MethodResponse status code.
     * 
     */
    @Import(name="statusCode", required=true)
    private Output<String> statusCode;

    public Output<String> statusCode() {
        return this.statusCode;
    }

    private MethodIntegrationResponseArgs() {}

    private MethodIntegrationResponseArgs(MethodIntegrationResponseArgs $) {
        this.contentHandling = $.contentHandling;
        this.responseParameters = $.responseParameters;
        this.responseTemplates = $.responseTemplates;
        this.selectionPattern = $.selectionPattern;
        this.statusCode = $.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MethodIntegrationResponseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MethodIntegrationResponseArgs $;

        public Builder() {
            $ = new MethodIntegrationResponseArgs();
        }

        public Builder(MethodIntegrationResponseArgs defaults) {
            $ = new MethodIntegrationResponseArgs(Objects.requireNonNull(defaults));
        }

        public Builder contentHandling(@Nullable Output<MethodIntegrationResponseContentHandling> contentHandling) {
            $.contentHandling = contentHandling;
            return this;
        }

        public Builder contentHandling(MethodIntegrationResponseContentHandling contentHandling) {
            return contentHandling(Output.of(contentHandling));
        }

        public Builder responseParameters(@Nullable Output<Object> responseParameters) {
            $.responseParameters = responseParameters;
            return this;
        }

        public Builder responseParameters(Object responseParameters) {
            return responseParameters(Output.of(responseParameters));
        }

        public Builder responseTemplates(@Nullable Output<Object> responseTemplates) {
            $.responseTemplates = responseTemplates;
            return this;
        }

        public Builder responseTemplates(Object responseTemplates) {
            return responseTemplates(Output.of(responseTemplates));
        }

        public Builder selectionPattern(@Nullable Output<String> selectionPattern) {
            $.selectionPattern = selectionPattern;
            return this;
        }

        public Builder selectionPattern(String selectionPattern) {
            return selectionPattern(Output.of(selectionPattern));
        }

        public Builder statusCode(Output<String> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public Builder statusCode(String statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public MethodIntegrationResponseArgs build() {
            $.statusCode = Objects.requireNonNull($.statusCode, "expected parameter 'statusCode' to be non-null");
            return $;
        }
    }

}
