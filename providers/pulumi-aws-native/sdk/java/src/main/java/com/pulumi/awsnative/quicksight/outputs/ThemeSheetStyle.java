// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.outputs;

import com.pulumi.awsnative.quicksight.outputs.ThemeTileLayoutStyle;
import com.pulumi.awsnative.quicksight.outputs.ThemeTileStyle;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ThemeSheetStyle {
    private final @Nullable ThemeTileStyle tile;
    private final @Nullable ThemeTileLayoutStyle tileLayout;

    @CustomType.Constructor
    private ThemeSheetStyle(
        @CustomType.Parameter("tile") @Nullable ThemeTileStyle tile,
        @CustomType.Parameter("tileLayout") @Nullable ThemeTileLayoutStyle tileLayout) {
        this.tile = tile;
        this.tileLayout = tileLayout;
    }

    public Optional<ThemeTileStyle> tile() {
        return Optional.ofNullable(this.tile);
    }
    public Optional<ThemeTileLayoutStyle> tileLayout() {
        return Optional.ofNullable(this.tileLayout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThemeSheetStyle defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ThemeTileStyle tile;
        private @Nullable ThemeTileLayoutStyle tileLayout;

        public Builder() {
    	      // Empty
        }

        public Builder(ThemeSheetStyle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.tile = defaults.tile;
    	      this.tileLayout = defaults.tileLayout;
        }

        public Builder tile(@Nullable ThemeTileStyle tile) {
            this.tile = tile;
            return this;
        }
        public Builder tileLayout(@Nullable ThemeTileLayoutStyle tileLayout) {
            this.tileLayout = tileLayout;
            return this;
        }        public ThemeSheetStyle build() {
            return new ThemeSheetStyle(tile, tileLayout);
        }
    }
}
