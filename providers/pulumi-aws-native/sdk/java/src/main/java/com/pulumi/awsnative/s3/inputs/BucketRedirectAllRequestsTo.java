// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketRedirectAllRequestsToProtocol;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
 * 
 */
public final class BucketRedirectAllRequestsTo extends com.pulumi.resources.InvokeArgs {

    public static final BucketRedirectAllRequestsTo Empty = new BucketRedirectAllRequestsTo();

    /**
     * Name of the host where requests are redirected.
     * 
     */
    @Import(name="hostName", required=true)
    private String hostName;

    public String hostName() {
        return this.hostName;
    }

    /**
     * Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
     * 
     */
    @Import(name="protocol")
    private @Nullable BucketRedirectAllRequestsToProtocol protocol;

    public Optional<BucketRedirectAllRequestsToProtocol> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    private BucketRedirectAllRequestsTo() {}

    private BucketRedirectAllRequestsTo(BucketRedirectAllRequestsTo $) {
        this.hostName = $.hostName;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketRedirectAllRequestsTo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketRedirectAllRequestsTo $;

        public Builder() {
            $ = new BucketRedirectAllRequestsTo();
        }

        public Builder(BucketRedirectAllRequestsTo defaults) {
            $ = new BucketRedirectAllRequestsTo(Objects.requireNonNull(defaults));
        }

        public Builder hostName(String hostName) {
            $.hostName = hostName;
            return this;
        }

        public Builder protocol(@Nullable BucketRedirectAllRequestsToProtocol protocol) {
            $.protocol = protocol;
            return this;
        }

        public BucketRedirectAllRequestsTo build() {
            $.hostName = Objects.requireNonNull($.hostName, "expected parameter 'hostName' to be non-null");
            return $;
        }
    }

}
