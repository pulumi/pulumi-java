// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.outputs;

import com.pulumi.awsnative.ec2.outputs.NetworkInterfaceInstanceIpv6Address;
import com.pulumi.awsnative.ec2.outputs.NetworkInterfacePrivateIpAddressSpecification;
import com.pulumi.awsnative.ec2.outputs.NetworkInterfaceTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkInterfaceResult {
    /**
     * A description for the network interface.
     * 
     */
    private final @Nullable String description;
    /**
     * A list of security group IDs associated with this network interface.
     * 
     */
    private final @Nullable List<String> groupSet;
    /**
     * Network interface id.
     * 
     */
    private final @Nullable String id;
    /**
     * The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the Ipv6Addresses property and don&#39;t specify this property.
     * 
     */
    private final @Nullable Integer ipv6AddressCount;
    /**
     * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface. If you&#39;re specifying a number of IPv6 addresses, use the Ipv6AddressCount property and don&#39;t specify this property.
     * 
     */
    private final @Nullable List<NetworkInterfaceInstanceIpv6Address> ipv6Addresses;
    /**
     * Returns the primary private IP address of the network interface.
     * 
     */
    private final @Nullable String primaryPrivateIpAddress;
    /**
     * Assigns a list of private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the Primary property to true in the PrivateIpAddressSpecification property. If you want EC2 to automatically assign private IP addresses, use the SecondaryPrivateIpAddressCount property and do not specify this property.
     * 
     */
    private final @Nullable List<NetworkInterfacePrivateIpAddressSpecification> privateIpAddresses;
    /**
     * The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet&#39;s IPv4 CIDR range. You can&#39;t specify this option and specify more than one private IP address using privateIpAddresses
     * 
     */
    private final @Nullable Integer secondaryPrivateIpAddressCount;
    /**
     * Returns the secondary private IP addresses of the network interface.
     * 
     */
    private final @Nullable List<String> secondaryPrivateIpAddresses;
    /**
     * Indicates whether traffic to or from the instance is validated.
     * 
     */
    private final @Nullable Boolean sourceDestCheck;
    /**
     * An arbitrary set of tags (key-value pairs) for this network interface.
     * 
     */
    private final @Nullable List<NetworkInterfaceTag> tags;

    @CustomType.Constructor
    private GetNetworkInterfaceResult(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("groupSet") @Nullable List<String> groupSet,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("ipv6AddressCount") @Nullable Integer ipv6AddressCount,
        @CustomType.Parameter("ipv6Addresses") @Nullable List<NetworkInterfaceInstanceIpv6Address> ipv6Addresses,
        @CustomType.Parameter("primaryPrivateIpAddress") @Nullable String primaryPrivateIpAddress,
        @CustomType.Parameter("privateIpAddresses") @Nullable List<NetworkInterfacePrivateIpAddressSpecification> privateIpAddresses,
        @CustomType.Parameter("secondaryPrivateIpAddressCount") @Nullable Integer secondaryPrivateIpAddressCount,
        @CustomType.Parameter("secondaryPrivateIpAddresses") @Nullable List<String> secondaryPrivateIpAddresses,
        @CustomType.Parameter("sourceDestCheck") @Nullable Boolean sourceDestCheck,
        @CustomType.Parameter("tags") @Nullable List<NetworkInterfaceTag> tags) {
        this.description = description;
        this.groupSet = groupSet;
        this.id = id;
        this.ipv6AddressCount = ipv6AddressCount;
        this.ipv6Addresses = ipv6Addresses;
        this.primaryPrivateIpAddress = primaryPrivateIpAddress;
        this.privateIpAddresses = privateIpAddresses;
        this.secondaryPrivateIpAddressCount = secondaryPrivateIpAddressCount;
        this.secondaryPrivateIpAddresses = secondaryPrivateIpAddresses;
        this.sourceDestCheck = sourceDestCheck;
        this.tags = tags;
    }

    /**
     * A description for the network interface.
     * 
    */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * A list of security group IDs associated with this network interface.
     * 
    */
    public List<String> groupSet() {
        return this.groupSet == null ? List.of() : this.groupSet;
    }
    /**
     * Network interface id.
     * 
    */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the Ipv6Addresses property and don&#39;t specify this property.
     * 
    */
    public Optional<Integer> ipv6AddressCount() {
        return Optional.ofNullable(this.ipv6AddressCount);
    }
    /**
     * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface. If you&#39;re specifying a number of IPv6 addresses, use the Ipv6AddressCount property and don&#39;t specify this property.
     * 
    */
    public List<NetworkInterfaceInstanceIpv6Address> ipv6Addresses() {
        return this.ipv6Addresses == null ? List.of() : this.ipv6Addresses;
    }
    /**
     * Returns the primary private IP address of the network interface.
     * 
    */
    public Optional<String> primaryPrivateIpAddress() {
        return Optional.ofNullable(this.primaryPrivateIpAddress);
    }
    /**
     * Assigns a list of private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the Primary property to true in the PrivateIpAddressSpecification property. If you want EC2 to automatically assign private IP addresses, use the SecondaryPrivateIpAddressCount property and do not specify this property.
     * 
    */
    public List<NetworkInterfacePrivateIpAddressSpecification> privateIpAddresses() {
        return this.privateIpAddresses == null ? List.of() : this.privateIpAddresses;
    }
    /**
     * The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet&#39;s IPv4 CIDR range. You can&#39;t specify this option and specify more than one private IP address using privateIpAddresses
     * 
    */
    public Optional<Integer> secondaryPrivateIpAddressCount() {
        return Optional.ofNullable(this.secondaryPrivateIpAddressCount);
    }
    /**
     * Returns the secondary private IP addresses of the network interface.
     * 
    */
    public List<String> secondaryPrivateIpAddresses() {
        return this.secondaryPrivateIpAddresses == null ? List.of() : this.secondaryPrivateIpAddresses;
    }
    /**
     * Indicates whether traffic to or from the instance is validated.
     * 
    */
    public Optional<Boolean> sourceDestCheck() {
        return Optional.ofNullable(this.sourceDestCheck);
    }
    /**
     * An arbitrary set of tags (key-value pairs) for this network interface.
     * 
    */
    public List<NetworkInterfaceTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkInterfaceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private @Nullable List<String> groupSet;
        private @Nullable String id;
        private @Nullable Integer ipv6AddressCount;
        private @Nullable List<NetworkInterfaceInstanceIpv6Address> ipv6Addresses;
        private @Nullable String primaryPrivateIpAddress;
        private @Nullable List<NetworkInterfacePrivateIpAddressSpecification> privateIpAddresses;
        private @Nullable Integer secondaryPrivateIpAddressCount;
        private @Nullable List<String> secondaryPrivateIpAddresses;
        private @Nullable Boolean sourceDestCheck;
        private @Nullable List<NetworkInterfaceTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNetworkInterfaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.groupSet = defaults.groupSet;
    	      this.id = defaults.id;
    	      this.ipv6AddressCount = defaults.ipv6AddressCount;
    	      this.ipv6Addresses = defaults.ipv6Addresses;
    	      this.primaryPrivateIpAddress = defaults.primaryPrivateIpAddress;
    	      this.privateIpAddresses = defaults.privateIpAddresses;
    	      this.secondaryPrivateIpAddressCount = defaults.secondaryPrivateIpAddressCount;
    	      this.secondaryPrivateIpAddresses = defaults.secondaryPrivateIpAddresses;
    	      this.sourceDestCheck = defaults.sourceDestCheck;
    	      this.tags = defaults.tags;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder groupSet(@Nullable List<String> groupSet) {
            this.groupSet = groupSet;
            return this;
        }
        public Builder groupSet(String... groupSet) {
            return groupSet(List.of(groupSet));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder ipv6AddressCount(@Nullable Integer ipv6AddressCount) {
            this.ipv6AddressCount = ipv6AddressCount;
            return this;
        }
        public Builder ipv6Addresses(@Nullable List<NetworkInterfaceInstanceIpv6Address> ipv6Addresses) {
            this.ipv6Addresses = ipv6Addresses;
            return this;
        }
        public Builder ipv6Addresses(NetworkInterfaceInstanceIpv6Address... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }
        public Builder primaryPrivateIpAddress(@Nullable String primaryPrivateIpAddress) {
            this.primaryPrivateIpAddress = primaryPrivateIpAddress;
            return this;
        }
        public Builder privateIpAddresses(@Nullable List<NetworkInterfacePrivateIpAddressSpecification> privateIpAddresses) {
            this.privateIpAddresses = privateIpAddresses;
            return this;
        }
        public Builder privateIpAddresses(NetworkInterfacePrivateIpAddressSpecification... privateIpAddresses) {
            return privateIpAddresses(List.of(privateIpAddresses));
        }
        public Builder secondaryPrivateIpAddressCount(@Nullable Integer secondaryPrivateIpAddressCount) {
            this.secondaryPrivateIpAddressCount = secondaryPrivateIpAddressCount;
            return this;
        }
        public Builder secondaryPrivateIpAddresses(@Nullable List<String> secondaryPrivateIpAddresses) {
            this.secondaryPrivateIpAddresses = secondaryPrivateIpAddresses;
            return this;
        }
        public Builder secondaryPrivateIpAddresses(String... secondaryPrivateIpAddresses) {
            return secondaryPrivateIpAddresses(List.of(secondaryPrivateIpAddresses));
        }
        public Builder sourceDestCheck(@Nullable Boolean sourceDestCheck) {
            this.sourceDestCheck = sourceDestCheck;
            return this;
        }
        public Builder tags(@Nullable List<NetworkInterfaceTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(NetworkInterfaceTag... tags) {
            return tags(List.of(tags));
        }        public GetNetworkInterfaceResult build() {
            return new GetNetworkInterfaceResult(description, groupSet, id, ipv6AddressCount, ipv6Addresses, primaryPrivateIpAddress, privateIpAddresses, secondaryPrivateIpAddressCount, secondaryPrivateIpAddresses, sourceDestCheck, tags);
        }
    }
}
