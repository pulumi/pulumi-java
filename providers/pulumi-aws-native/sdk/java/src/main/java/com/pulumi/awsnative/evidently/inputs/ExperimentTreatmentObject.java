// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.evidently.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExperimentTreatmentObject extends com.pulumi.resources.InvokeArgs {

    public static final ExperimentTreatmentObject Empty = new ExperimentTreatmentObject();

    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="feature", required=true)
    private String feature;

    public String feature() {
        return this.feature;
    }

    @Import(name="treatmentName", required=true)
    private String treatmentName;

    public String treatmentName() {
        return this.treatmentName;
    }

    @Import(name="variation", required=true)
    private String variation;

    public String variation() {
        return this.variation;
    }

    private ExperimentTreatmentObject() {}

    private ExperimentTreatmentObject(ExperimentTreatmentObject $) {
        this.description = $.description;
        this.feature = $.feature;
        this.treatmentName = $.treatmentName;
        this.variation = $.variation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExperimentTreatmentObject defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExperimentTreatmentObject $;

        public Builder() {
            $ = new ExperimentTreatmentObject();
        }

        public Builder(ExperimentTreatmentObject defaults) {
            $ = new ExperimentTreatmentObject(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder feature(String feature) {
            $.feature = feature;
            return this;
        }

        public Builder treatmentName(String treatmentName) {
            $.treatmentName = treatmentName;
            return this;
        }

        public Builder variation(String variation) {
            $.variation = variation;
            return this;
        }

        public ExperimentTreatmentObject build() {
            $.feature = Objects.requireNonNull($.feature, "expected parameter 'feature' to be non-null");
            $.treatmentName = Objects.requireNonNull($.treatmentName, "expected parameter 'treatmentName' to be non-null");
            $.variation = Objects.requireNonNull($.variation, "expected parameter 'variation' to be non-null");
            return $;
        }
    }

}
