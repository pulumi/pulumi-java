// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.enums.ProjectSampleType;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectSample extends com.pulumi.resources.InvokeArgs {

    public static final ProjectSample Empty = new ProjectSample();

    /**
     * Sample size
     * 
     */
    @Import(name="size")
    private @Nullable Integer size;

    /**
     * @return Sample size
     * 
     */
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * Sample type
     * 
     */
    @Import(name="type", required=true)
    private ProjectSampleType type;

    /**
     * @return Sample type
     * 
     */
    public ProjectSampleType type() {
        return this.type;
    }

    private ProjectSample() {}

    private ProjectSample(ProjectSample $) {
        this.size = $.size;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectSample defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectSample $;

        public Builder() {
            $ = new ProjectSample();
        }

        public Builder(ProjectSample defaults) {
            $ = new ProjectSample(Objects.requireNonNull(defaults));
        }

        /**
         * @param size Sample size
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Integer size) {
            $.size = size;
            return this;
        }

        /**
         * @param type Sample type
         * 
         * @return builder
         * 
         */
        public Builder type(ProjectSampleType type) {
            $.type = type;
            return this;
        }

        public ProjectSample build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
