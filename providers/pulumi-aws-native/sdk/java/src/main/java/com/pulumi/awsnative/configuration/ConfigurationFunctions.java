// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.configuration;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.configuration.inputs.GetAggregationAuthorizationArgs;
import com.pulumi.awsnative.configuration.inputs.GetConfigurationAggregatorArgs;
import com.pulumi.awsnative.configuration.inputs.GetConformancePackArgs;
import com.pulumi.awsnative.configuration.inputs.GetOrganizationConformancePackArgs;
import com.pulumi.awsnative.configuration.inputs.GetStoredQueryArgs;
import com.pulumi.awsnative.configuration.outputs.GetAggregationAuthorizationResult;
import com.pulumi.awsnative.configuration.outputs.GetConfigurationAggregatorResult;
import com.pulumi.awsnative.configuration.outputs.GetConformancePackResult;
import com.pulumi.awsnative.configuration.outputs.GetOrganizationConformancePackResult;
import com.pulumi.awsnative.configuration.outputs.GetStoredQueryResult;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class ConfigurationFunctions {
    /**
     * Resource Type definition for AWS::Config::AggregationAuthorization
     * 
     */
    public static CompletableFuture<GetAggregationAuthorizationResult> getAggregationAuthorization(GetAggregationAuthorizationArgs args) {
        return getAggregationAuthorization(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAggregationAuthorizationResult> getAggregationAuthorization(GetAggregationAuthorizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:configuration:getAggregationAuthorization", TypeShape.of(GetAggregationAuthorizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::Config::ConfigurationAggregator
     * 
     */
    public static CompletableFuture<GetConfigurationAggregatorResult> getConfigurationAggregator(GetConfigurationAggregatorArgs args) {
        return getConfigurationAggregator(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetConfigurationAggregatorResult> getConfigurationAggregator(GetConfigurationAggregatorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:configuration:getConfigurationAggregator", TypeShape.of(GetConfigurationAggregatorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * A conformance pack is a collection of AWS Config rules and remediation actions that can be easily deployed as a single entity in an account and a region or across an entire AWS Organization.
     * 
     */
    public static CompletableFuture<GetConformancePackResult> getConformancePack(GetConformancePackArgs args) {
        return getConformancePack(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetConformancePackResult> getConformancePack(GetConformancePackArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:configuration:getConformancePack", TypeShape.of(GetConformancePackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::Config::OrganizationConformancePack.
     * 
     */
    public static CompletableFuture<GetOrganizationConformancePackResult> getOrganizationConformancePack(GetOrganizationConformancePackArgs args) {
        return getOrganizationConformancePack(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetOrganizationConformancePackResult> getOrganizationConformancePack(GetOrganizationConformancePackArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:configuration:getOrganizationConformancePack", TypeShape.of(GetOrganizationConformancePackResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::Config::StoredQuery
     * 
     */
    public static CompletableFuture<GetStoredQueryResult> getStoredQuery(GetStoredQueryArgs args) {
        return getStoredQuery(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetStoredQueryResult> getStoredQuery(GetStoredQueryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:configuration:getStoredQuery", TypeShape.of(GetStoredQueryResult.class), args, Utilities.withVersion(options));
    }
}
