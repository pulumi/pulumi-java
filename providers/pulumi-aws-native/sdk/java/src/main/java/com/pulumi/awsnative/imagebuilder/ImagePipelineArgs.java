// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder;

import com.pulumi.awsnative.imagebuilder.enums.ImagePipelineStatus;
import com.pulumi.awsnative.imagebuilder.inputs.ImagePipelineImageTestsConfigurationArgs;
import com.pulumi.awsnative.imagebuilder.inputs.ImagePipelineScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImagePipelineArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImagePipelineArgs Empty = new ImagePipelineArgs();

    /**
     * The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
     * 
     */
    @Import(name="containerRecipeArn")
    private @Nullable Output<String> containerRecipeArn;

    public Optional<Output<String>> containerRecipeArn() {
        return Optional.ofNullable(this.containerRecipeArn);
    }

    /**
     * The description of the image pipeline.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.
     * 
     */
    @Import(name="distributionConfigurationArn")
    private @Nullable Output<String> distributionConfigurationArn;

    public Optional<Output<String>> distributionConfigurationArn() {
        return Optional.ofNullable(this.distributionConfigurationArn);
    }

    /**
     * Collects additional information about the image being created, including the operating system (OS) version and package list.
     * 
     */
    @Import(name="enhancedImageMetadataEnabled")
    private @Nullable Output<Boolean> enhancedImageMetadataEnabled;

    public Optional<Output<Boolean>> enhancedImageMetadataEnabled() {
        return Optional.ofNullable(this.enhancedImageMetadataEnabled);
    }

    /**
     * The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
     * 
     */
    @Import(name="imageRecipeArn")
    private @Nullable Output<String> imageRecipeArn;

    public Optional<Output<String>> imageRecipeArn() {
        return Optional.ofNullable(this.imageRecipeArn);
    }

    /**
     * The image tests configuration of the image pipeline.
     * 
     */
    @Import(name="imageTestsConfiguration")
    private @Nullable Output<ImagePipelineImageTestsConfigurationArgs> imageTestsConfiguration;

    public Optional<Output<ImagePipelineImageTestsConfigurationArgs>> imageTestsConfiguration() {
        return Optional.ofNullable(this.imageTestsConfiguration);
    }

    /**
     * The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.
     * 
     */
    @Import(name="infrastructureConfigurationArn")
    private @Nullable Output<String> infrastructureConfigurationArn;

    public Optional<Output<String>> infrastructureConfigurationArn() {
        return Optional.ofNullable(this.infrastructureConfigurationArn);
    }

    /**
     * The name of the image pipeline.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The schedule of the image pipeline.
     * 
     */
    @Import(name="schedule")
    private @Nullable Output<ImagePipelineScheduleArgs> schedule;

    public Optional<Output<ImagePipelineScheduleArgs>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    /**
     * The status of the image pipeline.
     * 
     */
    @Import(name="status")
    private @Nullable Output<ImagePipelineStatus> status;

    public Optional<Output<ImagePipelineStatus>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tags of this image pipeline.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Object> tags;

    public Optional<Output<Object>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ImagePipelineArgs() {}

    private ImagePipelineArgs(ImagePipelineArgs $) {
        this.containerRecipeArn = $.containerRecipeArn;
        this.description = $.description;
        this.distributionConfigurationArn = $.distributionConfigurationArn;
        this.enhancedImageMetadataEnabled = $.enhancedImageMetadataEnabled;
        this.imageRecipeArn = $.imageRecipeArn;
        this.imageTestsConfiguration = $.imageTestsConfiguration;
        this.infrastructureConfigurationArn = $.infrastructureConfigurationArn;
        this.name = $.name;
        this.schedule = $.schedule;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImagePipelineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImagePipelineArgs $;

        public Builder() {
            $ = new ImagePipelineArgs();
        }

        public Builder(ImagePipelineArgs defaults) {
            $ = new ImagePipelineArgs(Objects.requireNonNull(defaults));
        }

        public Builder containerRecipeArn(@Nullable Output<String> containerRecipeArn) {
            $.containerRecipeArn = containerRecipeArn;
            return this;
        }

        public Builder containerRecipeArn(String containerRecipeArn) {
            return containerRecipeArn(Output.of(containerRecipeArn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder distributionConfigurationArn(@Nullable Output<String> distributionConfigurationArn) {
            $.distributionConfigurationArn = distributionConfigurationArn;
            return this;
        }

        public Builder distributionConfigurationArn(String distributionConfigurationArn) {
            return distributionConfigurationArn(Output.of(distributionConfigurationArn));
        }

        public Builder enhancedImageMetadataEnabled(@Nullable Output<Boolean> enhancedImageMetadataEnabled) {
            $.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            return this;
        }

        public Builder enhancedImageMetadataEnabled(Boolean enhancedImageMetadataEnabled) {
            return enhancedImageMetadataEnabled(Output.of(enhancedImageMetadataEnabled));
        }

        public Builder imageRecipeArn(@Nullable Output<String> imageRecipeArn) {
            $.imageRecipeArn = imageRecipeArn;
            return this;
        }

        public Builder imageRecipeArn(String imageRecipeArn) {
            return imageRecipeArn(Output.of(imageRecipeArn));
        }

        public Builder imageTestsConfiguration(@Nullable Output<ImagePipelineImageTestsConfigurationArgs> imageTestsConfiguration) {
            $.imageTestsConfiguration = imageTestsConfiguration;
            return this;
        }

        public Builder imageTestsConfiguration(ImagePipelineImageTestsConfigurationArgs imageTestsConfiguration) {
            return imageTestsConfiguration(Output.of(imageTestsConfiguration));
        }

        public Builder infrastructureConfigurationArn(@Nullable Output<String> infrastructureConfigurationArn) {
            $.infrastructureConfigurationArn = infrastructureConfigurationArn;
            return this;
        }

        public Builder infrastructureConfigurationArn(String infrastructureConfigurationArn) {
            return infrastructureConfigurationArn(Output.of(infrastructureConfigurationArn));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder schedule(@Nullable Output<ImagePipelineScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        public Builder schedule(ImagePipelineScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        public Builder status(@Nullable Output<ImagePipelineStatus> status) {
            $.status = status;
            return this;
        }

        public Builder status(ImagePipelineStatus status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Object> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Object tags) {
            return tags(Output.of(tags));
        }

        public ImagePipelineArgs build() {
            return $;
        }
    }

}
