// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.batch.inputs;

import com.pulumi.awsnative.batch.inputs.SchedulingPolicyShareAttributes;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Fair Share Policy for the Job Queue.
 * 
 */
public final class SchedulingPolicyFairsharePolicy extends com.pulumi.resources.InvokeArgs {

    public static final SchedulingPolicyFairsharePolicy Empty = new SchedulingPolicyFairsharePolicy();

    @Import(name="computeReservation")
    private @Nullable Double computeReservation;

    public Optional<Double> computeReservation() {
        return Optional.ofNullable(this.computeReservation);
    }

    @Import(name="shareDecaySeconds")
    private @Nullable Double shareDecaySeconds;

    public Optional<Double> shareDecaySeconds() {
        return Optional.ofNullable(this.shareDecaySeconds);
    }

    /**
     * List of Share Attributes
     * 
     */
    @Import(name="shareDistribution")
    private @Nullable List<SchedulingPolicyShareAttributes> shareDistribution;

    /**
     * @return List of Share Attributes
     * 
     */
    public Optional<List<SchedulingPolicyShareAttributes>> shareDistribution() {
        return Optional.ofNullable(this.shareDistribution);
    }

    private SchedulingPolicyFairsharePolicy() {}

    private SchedulingPolicyFairsharePolicy(SchedulingPolicyFairsharePolicy $) {
        this.computeReservation = $.computeReservation;
        this.shareDecaySeconds = $.shareDecaySeconds;
        this.shareDistribution = $.shareDistribution;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchedulingPolicyFairsharePolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchedulingPolicyFairsharePolicy $;

        public Builder() {
            $ = new SchedulingPolicyFairsharePolicy();
        }

        public Builder(SchedulingPolicyFairsharePolicy defaults) {
            $ = new SchedulingPolicyFairsharePolicy(Objects.requireNonNull(defaults));
        }

        public Builder computeReservation(@Nullable Double computeReservation) {
            $.computeReservation = computeReservation;
            return this;
        }

        public Builder shareDecaySeconds(@Nullable Double shareDecaySeconds) {
            $.shareDecaySeconds = shareDecaySeconds;
            return this;
        }

        /**
         * @param shareDistribution List of Share Attributes
         * 
         * @return builder
         * 
         */
        public Builder shareDistribution(@Nullable List<SchedulingPolicyShareAttributes> shareDistribution) {
            $.shareDistribution = shareDistribution;
            return this;
        }

        /**
         * @param shareDistribution List of Share Attributes
         * 
         * @return builder
         * 
         */
        public Builder shareDistribution(SchedulingPolicyShareAttributes... shareDistribution) {
            return shareDistribution(List.of(shareDistribution));
        }

        public SchedulingPolicyFairsharePolicy build() {
            return $;
        }
    }

}
