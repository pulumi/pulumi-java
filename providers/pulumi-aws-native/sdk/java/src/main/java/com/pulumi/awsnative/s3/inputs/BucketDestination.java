// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketDestinationFormat;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket and S3 Replication Time Control (S3 RTC).
 * 
 */
public final class BucketDestination extends com.pulumi.resources.InvokeArgs {

    public static final BucketDestination Empty = new BucketDestination();

    /**
     * The account ID that owns the destination S3 bucket.
     * 
     */
    @Import(name="bucketAccountId")
    private @Nullable String bucketAccountId;

    public Optional<String> bucketAccountId() {
        return Optional.ofNullable(this.bucketAccountId);
    }

    /**
     * The Amazon Resource Name (ARN) of the bucket to which data is exported.
     * 
     */
    @Import(name="bucketArn", required=true)
    private String bucketArn;

    public String bucketArn() {
        return this.bucketArn;
    }

    /**
     * Specifies the file format used when exporting data to Amazon S3.
     * 
     */
    @Import(name="format", required=true)
    private BucketDestinationFormat format;

    public BucketDestinationFormat format() {
        return this.format;
    }

    /**
     * The prefix to use when exporting data. The prefix is prepended to all results.
     * 
     */
    @Import(name="prefix")
    private @Nullable String prefix;

    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    private BucketDestination() {}

    private BucketDestination(BucketDestination $) {
        this.bucketAccountId = $.bucketAccountId;
        this.bucketArn = $.bucketArn;
        this.format = $.format;
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketDestination defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketDestination $;

        public Builder() {
            $ = new BucketDestination();
        }

        public Builder(BucketDestination defaults) {
            $ = new BucketDestination(Objects.requireNonNull(defaults));
        }

        public Builder bucketAccountId(@Nullable String bucketAccountId) {
            $.bucketAccountId = bucketAccountId;
            return this;
        }

        public Builder bucketArn(String bucketArn) {
            $.bucketArn = bucketArn;
            return this;
        }

        public Builder format(BucketDestinationFormat format) {
            $.format = format;
            return this;
        }

        public Builder prefix(@Nullable String prefix) {
            $.prefix = prefix;
            return this;
        }

        public BucketDestination build() {
            $.bucketArn = Objects.requireNonNull($.bucketArn, "expected parameter 'bucketArn' to be non-null");
            $.format = Objects.requireNonNull($.format, "expected parameter 'format' to be non-null");
            return $;
        }
    }

}
