// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.datasync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * HDFS Name Node IP and port information.
 * 
 */
public final class LocationHDFSNameNodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocationHDFSNameNodeArgs Empty = new LocationHDFSNameNodeArgs();

    /**
     * The DNS name or IP address of the Name Node in the customer's on premises HDFS cluster.
     * 
     */
    @Import(name="hostname", required=true)
      private final Output<String> hostname;

    public Output<String> hostname() {
        return this.hostname;
    }

    /**
     * The port on which the Name Node is listening on for client requests.
     * 
     */
    @Import(name="port", required=true)
      private final Output<Integer> port;

    public Output<Integer> port() {
        return this.port;
    }

    public LocationHDFSNameNodeArgs(
        Output<String> hostname,
        Output<Integer> port) {
        this.hostname = Objects.requireNonNull(hostname, "expected parameter 'hostname' to be non-null");
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
    }

    private LocationHDFSNameNodeArgs() {
        this.hostname = Codegen.empty();
        this.port = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocationHDFSNameNodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> hostname;
        private Output<Integer> port;

        public Builder() {
    	      // Empty
        }

        public Builder(LocationHDFSNameNodeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.port = defaults.port;
        }

        public Builder hostname(Output<String> hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        public Builder hostname(String hostname) {
            this.hostname = Output.of(Objects.requireNonNull(hostname));
            return this;
        }
        public Builder port(Output<Integer> port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public Builder port(Integer port) {
            this.port = Output.of(Objects.requireNonNull(port));
            return this;
        }        public LocationHDFSNameNodeArgs build() {
            return new LocationHDFSNameNodeArgs(hostname, port);
        }
    }
}
