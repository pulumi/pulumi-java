// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.nimblestudio.inputs;

import com.pulumi.awsnative.nimblestudio.inputs.StudioComponentActiveDirectoryComputerAttributeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * <p>The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.</p>
 * 
 */
public final class StudioComponentActiveDirectoryConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final StudioComponentActiveDirectoryConfigurationArgs Empty = new StudioComponentActiveDirectoryConfigurationArgs();

    /**
     * <p>A collection of custom attributes for an Active Directory computer.</p>
     * 
     */
    @Import(name="computerAttributes")
      private final @Nullable Output<List<StudioComponentActiveDirectoryComputerAttributeArgs>> computerAttributes;

    public Output<List<StudioComponentActiveDirectoryComputerAttributeArgs>> computerAttributes() {
        return this.computerAttributes == null ? Codegen.empty() : this.computerAttributes;
    }

    /**
     * <p>The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.</p>
     * 
     */
    @Import(name="directoryId")
      private final @Nullable Output<String> directoryId;

    public Output<String> directoryId() {
        return this.directoryId == null ? Codegen.empty() : this.directoryId;
    }

    /**
     * <p>The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.</p>
     * 
     */
    @Import(name="organizationalUnitDistinguishedName")
      private final @Nullable Output<String> organizationalUnitDistinguishedName;

    public Output<String> organizationalUnitDistinguishedName() {
        return this.organizationalUnitDistinguishedName == null ? Codegen.empty() : this.organizationalUnitDistinguishedName;
    }

    public StudioComponentActiveDirectoryConfigurationArgs(
        @Nullable Output<List<StudioComponentActiveDirectoryComputerAttributeArgs>> computerAttributes,
        @Nullable Output<String> directoryId,
        @Nullable Output<String> organizationalUnitDistinguishedName) {
        this.computerAttributes = computerAttributes;
        this.directoryId = directoryId;
        this.organizationalUnitDistinguishedName = organizationalUnitDistinguishedName;
    }

    private StudioComponentActiveDirectoryConfigurationArgs() {
        this.computerAttributes = Codegen.empty();
        this.directoryId = Codegen.empty();
        this.organizationalUnitDistinguishedName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StudioComponentActiveDirectoryConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<StudioComponentActiveDirectoryComputerAttributeArgs>> computerAttributes;
        private @Nullable Output<String> directoryId;
        private @Nullable Output<String> organizationalUnitDistinguishedName;

        public Builder() {
    	      // Empty
        }

        public Builder(StudioComponentActiveDirectoryConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computerAttributes = defaults.computerAttributes;
    	      this.directoryId = defaults.directoryId;
    	      this.organizationalUnitDistinguishedName = defaults.organizationalUnitDistinguishedName;
        }

        public Builder computerAttributes(@Nullable Output<List<StudioComponentActiveDirectoryComputerAttributeArgs>> computerAttributes) {
            this.computerAttributes = computerAttributes;
            return this;
        }
        public Builder computerAttributes(@Nullable List<StudioComponentActiveDirectoryComputerAttributeArgs> computerAttributes) {
            this.computerAttributes = Codegen.ofNullable(computerAttributes);
            return this;
        }
        public Builder computerAttributes(StudioComponentActiveDirectoryComputerAttributeArgs... computerAttributes) {
            return computerAttributes(List.of(computerAttributes));
        }
        public Builder directoryId(@Nullable Output<String> directoryId) {
            this.directoryId = directoryId;
            return this;
        }
        public Builder directoryId(@Nullable String directoryId) {
            this.directoryId = Codegen.ofNullable(directoryId);
            return this;
        }
        public Builder organizationalUnitDistinguishedName(@Nullable Output<String> organizationalUnitDistinguishedName) {
            this.organizationalUnitDistinguishedName = organizationalUnitDistinguishedName;
            return this;
        }
        public Builder organizationalUnitDistinguishedName(@Nullable String organizationalUnitDistinguishedName) {
            this.organizationalUnitDistinguishedName = Codegen.ofNullable(organizationalUnitDistinguishedName);
            return this;
        }        public StudioComponentActiveDirectoryConfigurationArgs build() {
            return new StudioComponentActiveDirectoryConfigurationArgs(computerAttributes, directoryId, organizationalUnitDistinguishedName);
        }
    }
}
