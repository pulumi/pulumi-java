// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.config.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration for a Provider to assume a role.
 * 
 */
public final class AssumeRole extends com.pulumi.resources.InvokeArgs {

    public static final AssumeRole Empty = new AssumeRole();

    /**
     * Number of seconds to restrict the assume role session duration.
     * 
     */
    @Import(name="durationSeconds")
    private @Nullable Integer durationSeconds;

    /**
     * @return Number of seconds to restrict the assume role session duration.
     * 
     */
    public Optional<Integer> durationSeconds() {
        return Optional.ofNullable(this.durationSeconds);
    }

    /**
     * External identifier to use when assuming the role.
     * 
     */
    @Import(name="externalId")
    private @Nullable String externalId;

    /**
     * @return External identifier to use when assuming the role.
     * 
     */
    public Optional<String> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     * 
     */
    @Import(name="policy")
    private @Nullable String policy;

    /**
     * @return IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
     * 
     */
    @Import(name="policyArns")
    private @Nullable List<String> policyArns;

    /**
     * @return Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
     * 
     */
    public Optional<List<String>> policyArns() {
        return Optional.ofNullable(this.policyArns);
    }

    /**
     * Amazon Resource Name (ARN) of the IAM Role to assume.
     * 
     */
    @Import(name="roleArn")
    private @Nullable String roleArn;

    /**
     * @return Amazon Resource Name (ARN) of the IAM Role to assume.
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Session name to use when assuming the role.
     * 
     */
    @Import(name="sessionName")
    private @Nullable String sessionName;

    /**
     * @return Session name to use when assuming the role.
     * 
     */
    public Optional<String> sessionName() {
        return Optional.ofNullable(this.sessionName);
    }

    /**
     * Map of assume role session tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    /**
     * @return Map of assume role session tags.
     * 
     */
    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
     * 
     */
    @Import(name="transitiveTagKeys")
    private @Nullable List<String> transitiveTagKeys;

    /**
     * @return A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
     * 
     */
    public Optional<List<String>> transitiveTagKeys() {
        return Optional.ofNullable(this.transitiveTagKeys);
    }

    private AssumeRole() {}

    private AssumeRole(AssumeRole $) {
        this.durationSeconds = $.durationSeconds;
        this.externalId = $.externalId;
        this.policy = $.policy;
        this.policyArns = $.policyArns;
        this.roleArn = $.roleArn;
        this.sessionName = $.sessionName;
        this.tags = $.tags;
        this.transitiveTagKeys = $.transitiveTagKeys;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssumeRole defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssumeRole $;

        public Builder() {
            $ = new AssumeRole();
        }

        public Builder(AssumeRole defaults) {
            $ = new AssumeRole(Objects.requireNonNull(defaults));
        }

        /**
         * @param durationSeconds Number of seconds to restrict the assume role session duration.
         * 
         * @return builder
         * 
         */
        public Builder durationSeconds(@Nullable Integer durationSeconds) {
            $.durationSeconds = durationSeconds;
            return this;
        }

        /**
         * @param externalId External identifier to use when assuming the role.
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable String externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param policy IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable String policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policyArns Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(@Nullable List<String> policyArns) {
            $.policyArns = policyArns;
            return this;
        }

        /**
         * @param policyArns Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
         * 
         * @return builder
         * 
         */
        public Builder policyArns(String... policyArns) {
            return policyArns(List.of(policyArns));
        }

        /**
         * @param roleArn Amazon Resource Name (ARN) of the IAM Role to assume.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable String roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param sessionName Session name to use when assuming the role.
         * 
         * @return builder
         * 
         */
        public Builder sessionName(@Nullable String sessionName) {
            $.sessionName = sessionName;
            return this;
        }

        /**
         * @param tags Map of assume role session tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param transitiveTagKeys A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
         * 
         * @return builder
         * 
         */
        public Builder transitiveTagKeys(@Nullable List<String> transitiveTagKeys) {
            $.transitiveTagKeys = transitiveTagKeys;
            return this;
        }

        /**
         * @param transitiveTagKeys A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
         * 
         * @return builder
         * 
         */
        public Builder transitiveTagKeys(String... transitiveTagKeys) {
            return transitiveTagKeys(List.of(transitiveTagKeys));
        }

        public AssumeRole build() {
            return $;
        }
    }

}
