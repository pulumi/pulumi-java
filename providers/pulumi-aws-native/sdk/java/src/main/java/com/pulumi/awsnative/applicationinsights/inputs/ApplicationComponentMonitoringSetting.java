// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.applicationinsights.inputs;

import com.pulumi.awsnative.applicationinsights.enums.ApplicationComponentMonitoringSettingComponentConfigurationMode;
import com.pulumi.awsnative.applicationinsights.inputs.ApplicationComponentConfiguration;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The monitoring setting of the component.
 * 
 */
public final class ApplicationComponentMonitoringSetting extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationComponentMonitoringSetting Empty = new ApplicationComponentMonitoringSetting();

    /**
     * The ARN of the compnonent.
     * 
     */
    @Import(name="componentARN")
      private final @Nullable String componentARN;

    public Optional<String> componentARN() {
        return this.componentARN == null ? Optional.empty() : Optional.ofNullable(this.componentARN);
    }

    /**
     * The component monitoring configuration mode.
     * 
     */
    @Import(name="componentConfigurationMode", required=true)
      private final ApplicationComponentMonitoringSettingComponentConfigurationMode componentConfigurationMode;

    public ApplicationComponentMonitoringSettingComponentConfigurationMode componentConfigurationMode() {
        return this.componentConfigurationMode;
    }

    /**
     * The name of the component.
     * 
     */
    @Import(name="componentName")
      private final @Nullable String componentName;

    public Optional<String> componentName() {
        return this.componentName == null ? Optional.empty() : Optional.ofNullable(this.componentName);
    }

    /**
     * The monitoring configuration of the component.
     * 
     */
    @Import(name="customComponentConfiguration")
      private final @Nullable ApplicationComponentConfiguration customComponentConfiguration;

    public Optional<ApplicationComponentConfiguration> customComponentConfiguration() {
        return this.customComponentConfiguration == null ? Optional.empty() : Optional.ofNullable(this.customComponentConfiguration);
    }

    /**
     * The overwritten settings on default component monitoring configuration.
     * 
     */
    @Import(name="defaultOverwriteComponentConfiguration")
      private final @Nullable ApplicationComponentConfiguration defaultOverwriteComponentConfiguration;

    public Optional<ApplicationComponentConfiguration> defaultOverwriteComponentConfiguration() {
        return this.defaultOverwriteComponentConfiguration == null ? Optional.empty() : Optional.ofNullable(this.defaultOverwriteComponentConfiguration);
    }

    /**
     * The tier of the application component.
     * 
     */
    @Import(name="tier", required=true)
      private final String tier;

    public String tier() {
        return this.tier;
    }

    public ApplicationComponentMonitoringSetting(
        @Nullable String componentARN,
        ApplicationComponentMonitoringSettingComponentConfigurationMode componentConfigurationMode,
        @Nullable String componentName,
        @Nullable ApplicationComponentConfiguration customComponentConfiguration,
        @Nullable ApplicationComponentConfiguration defaultOverwriteComponentConfiguration,
        String tier) {
        this.componentARN = componentARN;
        this.componentConfigurationMode = Objects.requireNonNull(componentConfigurationMode, "expected parameter 'componentConfigurationMode' to be non-null");
        this.componentName = componentName;
        this.customComponentConfiguration = customComponentConfiguration;
        this.defaultOverwriteComponentConfiguration = defaultOverwriteComponentConfiguration;
        this.tier = Objects.requireNonNull(tier, "expected parameter 'tier' to be non-null");
    }

    private ApplicationComponentMonitoringSetting() {
        this.componentARN = null;
        this.componentConfigurationMode = null;
        this.componentName = null;
        this.customComponentConfiguration = null;
        this.defaultOverwriteComponentConfiguration = null;
        this.tier = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationComponentMonitoringSetting defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String componentARN;
        private ApplicationComponentMonitoringSettingComponentConfigurationMode componentConfigurationMode;
        private @Nullable String componentName;
        private @Nullable ApplicationComponentConfiguration customComponentConfiguration;
        private @Nullable ApplicationComponentConfiguration defaultOverwriteComponentConfiguration;
        private String tier;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationComponentMonitoringSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.componentARN = defaults.componentARN;
    	      this.componentConfigurationMode = defaults.componentConfigurationMode;
    	      this.componentName = defaults.componentName;
    	      this.customComponentConfiguration = defaults.customComponentConfiguration;
    	      this.defaultOverwriteComponentConfiguration = defaults.defaultOverwriteComponentConfiguration;
    	      this.tier = defaults.tier;
        }

        public Builder componentARN(@Nullable String componentARN) {
            this.componentARN = componentARN;
            return this;
        }
        public Builder componentConfigurationMode(ApplicationComponentMonitoringSettingComponentConfigurationMode componentConfigurationMode) {
            this.componentConfigurationMode = Objects.requireNonNull(componentConfigurationMode);
            return this;
        }
        public Builder componentName(@Nullable String componentName) {
            this.componentName = componentName;
            return this;
        }
        public Builder customComponentConfiguration(@Nullable ApplicationComponentConfiguration customComponentConfiguration) {
            this.customComponentConfiguration = customComponentConfiguration;
            return this;
        }
        public Builder defaultOverwriteComponentConfiguration(@Nullable ApplicationComponentConfiguration defaultOverwriteComponentConfiguration) {
            this.defaultOverwriteComponentConfiguration = defaultOverwriteComponentConfiguration;
            return this;
        }
        public Builder tier(String tier) {
            this.tier = Objects.requireNonNull(tier);
            return this;
        }        public ApplicationComponentMonitoringSetting build() {
            return new ApplicationComponentMonitoringSetting(componentARN, componentConfigurationMode, componentName, customComponentConfiguration, defaultOverwriteComponentConfiguration, tier);
        }
    }
}
