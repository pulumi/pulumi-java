// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.appflow.inputs;

import com.pulumi.awsnative.appflow.enums.FlowWriteOperationType;
import com.pulumi.awsnative.appflow.inputs.FlowErrorHandlingConfig;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowSalesforceDestinationProperties extends com.pulumi.resources.InvokeArgs {

    public static final FlowSalesforceDestinationProperties Empty = new FlowSalesforceDestinationProperties();

    @Import(name="errorHandlingConfig")
    private @Nullable FlowErrorHandlingConfig errorHandlingConfig;

    public Optional<FlowErrorHandlingConfig> errorHandlingConfig() {
        return Optional.ofNullable(this.errorHandlingConfig);
    }

    /**
     * List of fields used as ID when performing a write operation.
     * 
     */
    @Import(name="idFieldNames")
    private @Nullable List<String> idFieldNames;

    /**
     * @return List of fields used as ID when performing a write operation.
     * 
     */
    public Optional<List<String>> idFieldNames() {
        return Optional.ofNullable(this.idFieldNames);
    }

    @Import(name="object", required=true)
    private String object;

    public String object() {
        return this.object;
    }

    @Import(name="writeOperationType")
    private @Nullable FlowWriteOperationType writeOperationType;

    public Optional<FlowWriteOperationType> writeOperationType() {
        return Optional.ofNullable(this.writeOperationType);
    }

    private FlowSalesforceDestinationProperties() {}

    private FlowSalesforceDestinationProperties(FlowSalesforceDestinationProperties $) {
        this.errorHandlingConfig = $.errorHandlingConfig;
        this.idFieldNames = $.idFieldNames;
        this.object = $.object;
        this.writeOperationType = $.writeOperationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowSalesforceDestinationProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowSalesforceDestinationProperties $;

        public Builder() {
            $ = new FlowSalesforceDestinationProperties();
        }

        public Builder(FlowSalesforceDestinationProperties defaults) {
            $ = new FlowSalesforceDestinationProperties(Objects.requireNonNull(defaults));
        }

        public Builder errorHandlingConfig(@Nullable FlowErrorHandlingConfig errorHandlingConfig) {
            $.errorHandlingConfig = errorHandlingConfig;
            return this;
        }

        /**
         * @param idFieldNames List of fields used as ID when performing a write operation.
         * 
         * @return builder
         * 
         */
        public Builder idFieldNames(@Nullable List<String> idFieldNames) {
            $.idFieldNames = idFieldNames;
            return this;
        }

        /**
         * @param idFieldNames List of fields used as ID when performing a write operation.
         * 
         * @return builder
         * 
         */
        public Builder idFieldNames(String... idFieldNames) {
            return idFieldNames(List.of(idFieldNames));
        }

        public Builder object(String object) {
            $.object = object;
            return this;
        }

        public Builder writeOperationType(@Nullable FlowWriteOperationType writeOperationType) {
            $.writeOperationType = writeOperationType;
            return this;
        }

        public FlowSalesforceDestinationProperties build() {
            $.object = Objects.requireNonNull($.object, "expected parameter 'object' to be non-null");
            return $;
        }
    }

}
