// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.inputs;

import com.pulumi.awsnative.imagebuilder.enums.DistributionConfigurationTargetContainerRepositoryService;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The destination repository for the container image.
 * 
 */
public final class DistributionConfigurationTargetContainerRepository extends com.pulumi.resources.InvokeArgs {

    public static final DistributionConfigurationTargetContainerRepository Empty = new DistributionConfigurationTargetContainerRepository();

    /**
     * The repository name of target container repository.
     * 
     */
    @Import(name="repositoryName")
    private @Nullable String repositoryName;

    /**
     * @return The repository name of target container repository.
     * 
     */
    public Optional<String> repositoryName() {
        return Optional.ofNullable(this.repositoryName);
    }

    /**
     * The service of target container repository.
     * 
     */
    @Import(name="service")
    private @Nullable DistributionConfigurationTargetContainerRepositoryService service;

    /**
     * @return The service of target container repository.
     * 
     */
    public Optional<DistributionConfigurationTargetContainerRepositoryService> service() {
        return Optional.ofNullable(this.service);
    }

    private DistributionConfigurationTargetContainerRepository() {}

    private DistributionConfigurationTargetContainerRepository(DistributionConfigurationTargetContainerRepository $) {
        this.repositoryName = $.repositoryName;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionConfigurationTargetContainerRepository defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionConfigurationTargetContainerRepository $;

        public Builder() {
            $ = new DistributionConfigurationTargetContainerRepository();
        }

        public Builder(DistributionConfigurationTargetContainerRepository defaults) {
            $ = new DistributionConfigurationTargetContainerRepository(Objects.requireNonNull(defaults));
        }

        /**
         * @param repositoryName The repository name of target container repository.
         * 
         * @return builder
         * 
         */
        public Builder repositoryName(@Nullable String repositoryName) {
            $.repositoryName = repositoryName;
            return this;
        }

        /**
         * @param service The service of target container repository.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable DistributionConfigurationTargetContainerRepositoryService service) {
            $.service = service;
            return this;
        }

        public DistributionConfigurationTargetContainerRepository build() {
            return $;
        }
    }

}
