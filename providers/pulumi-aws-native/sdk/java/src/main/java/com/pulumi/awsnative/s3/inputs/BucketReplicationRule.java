// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketReplicationRuleStatus;
import com.pulumi.awsnative.s3.inputs.BucketDeleteMarkerReplication;
import com.pulumi.awsnative.s3.inputs.BucketReplicationDestination;
import com.pulumi.awsnative.s3.inputs.BucketReplicationRuleFilter;
import com.pulumi.awsnative.s3.inputs.BucketSourceSelectionCriteria;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies which Amazon S3 objects to replicate and where to store the replicas.
 * 
 */
public final class BucketReplicationRule extends com.pulumi.resources.InvokeArgs {

    public static final BucketReplicationRule Empty = new BucketReplicationRule();

    @Import(name="deleteMarkerReplication")
    private @Nullable BucketDeleteMarkerReplication deleteMarkerReplication;

    public Optional<BucketDeleteMarkerReplication> deleteMarkerReplication() {
        return Optional.ofNullable(this.deleteMarkerReplication);
    }

    @Import(name="destination", required=true)
    private BucketReplicationDestination destination;

    public BucketReplicationDestination destination() {
        return this.destination;
    }

    @Import(name="filter")
    private @Nullable BucketReplicationRuleFilter filter;

    public Optional<BucketReplicationRuleFilter> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * A unique identifier for the rule.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * An object key name prefix that identifies the object or objects to which the rule applies.
     * 
     */
    @Import(name="prefix")
    private @Nullable String prefix;

    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="priority")
    private @Nullable Integer priority;

    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }

    @Import(name="sourceSelectionCriteria")
    private @Nullable BucketSourceSelectionCriteria sourceSelectionCriteria;

    public Optional<BucketSourceSelectionCriteria> sourceSelectionCriteria() {
        return Optional.ofNullable(this.sourceSelectionCriteria);
    }

    /**
     * Specifies whether the rule is enabled.
     * 
     */
    @Import(name="status", required=true)
    private BucketReplicationRuleStatus status;

    public BucketReplicationRuleStatus status() {
        return this.status;
    }

    private BucketReplicationRule() {}

    private BucketReplicationRule(BucketReplicationRule $) {
        this.deleteMarkerReplication = $.deleteMarkerReplication;
        this.destination = $.destination;
        this.filter = $.filter;
        this.id = $.id;
        this.prefix = $.prefix;
        this.priority = $.priority;
        this.sourceSelectionCriteria = $.sourceSelectionCriteria;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketReplicationRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketReplicationRule $;

        public Builder() {
            $ = new BucketReplicationRule();
        }

        public Builder(BucketReplicationRule defaults) {
            $ = new BucketReplicationRule(Objects.requireNonNull(defaults));
        }

        public Builder deleteMarkerReplication(@Nullable BucketDeleteMarkerReplication deleteMarkerReplication) {
            $.deleteMarkerReplication = deleteMarkerReplication;
            return this;
        }

        public Builder destination(BucketReplicationDestination destination) {
            $.destination = destination;
            return this;
        }

        public Builder filter(@Nullable BucketReplicationRuleFilter filter) {
            $.filter = filter;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder prefix(@Nullable String prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder priority(@Nullable Integer priority) {
            $.priority = priority;
            return this;
        }

        public Builder sourceSelectionCriteria(@Nullable BucketSourceSelectionCriteria sourceSelectionCriteria) {
            $.sourceSelectionCriteria = sourceSelectionCriteria;
            return this;
        }

        public Builder status(BucketReplicationRuleStatus status) {
            $.status = status;
            return this;
        }

        public BucketReplicationRule build() {
            $.destination = Objects.requireNonNull($.destination, "expected parameter 'destination' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
