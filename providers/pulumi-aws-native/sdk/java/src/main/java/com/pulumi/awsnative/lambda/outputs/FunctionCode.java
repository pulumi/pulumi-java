// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lambda.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FunctionCode {
    /**
     * @return ImageUri.
     * 
     */
    private final @Nullable String imageUri;
    /**
     * @return An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
     * 
     */
    private final @Nullable String s3Bucket;
    /**
     * @return The Amazon S3 key of the deployment package.
     * 
     */
    private final @Nullable String s3Key;
    /**
     * @return For versioned objects, the version of the deployment package object to use.
     * 
     */
    private final @Nullable String s3ObjectVersion;
    /**
     * @return The source code of your Lambda function. If you include your function source inline with this parameter, AWS CloudFormation places it in a file named index and zips it to create a deployment package..
     * 
     */
    private final @Nullable String zipFile;

    @CustomType.Constructor
    private FunctionCode(
        @CustomType.Parameter("imageUri") @Nullable String imageUri,
        @CustomType.Parameter("s3Bucket") @Nullable String s3Bucket,
        @CustomType.Parameter("s3Key") @Nullable String s3Key,
        @CustomType.Parameter("s3ObjectVersion") @Nullable String s3ObjectVersion,
        @CustomType.Parameter("zipFile") @Nullable String zipFile) {
        this.imageUri = imageUri;
        this.s3Bucket = s3Bucket;
        this.s3Key = s3Key;
        this.s3ObjectVersion = s3ObjectVersion;
        this.zipFile = zipFile;
    }

    /**
     * @return ImageUri.
     * 
     */
    public Optional<String> imageUri() {
        return Optional.ofNullable(this.imageUri);
    }
    /**
     * @return An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
     * 
     */
    public Optional<String> s3Bucket() {
        return Optional.ofNullable(this.s3Bucket);
    }
    /**
     * @return The Amazon S3 key of the deployment package.
     * 
     */
    public Optional<String> s3Key() {
        return Optional.ofNullable(this.s3Key);
    }
    /**
     * @return For versioned objects, the version of the deployment package object to use.
     * 
     */
    public Optional<String> s3ObjectVersion() {
        return Optional.ofNullable(this.s3ObjectVersion);
    }
    /**
     * @return The source code of your Lambda function. If you include your function source inline with this parameter, AWS CloudFormation places it in a file named index and zips it to create a deployment package..
     * 
     */
    public Optional<String> zipFile() {
        return Optional.ofNullable(this.zipFile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FunctionCode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String imageUri;
        private @Nullable String s3Bucket;
        private @Nullable String s3Key;
        private @Nullable String s3ObjectVersion;
        private @Nullable String zipFile;

        public Builder() {
    	      // Empty
        }

        public Builder(FunctionCode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageUri = defaults.imageUri;
    	      this.s3Bucket = defaults.s3Bucket;
    	      this.s3Key = defaults.s3Key;
    	      this.s3ObjectVersion = defaults.s3ObjectVersion;
    	      this.zipFile = defaults.zipFile;
        }

        public Builder imageUri(@Nullable String imageUri) {
            this.imageUri = imageUri;
            return this;
        }
        public Builder s3Bucket(@Nullable String s3Bucket) {
            this.s3Bucket = s3Bucket;
            return this;
        }
        public Builder s3Key(@Nullable String s3Key) {
            this.s3Key = s3Key;
            return this;
        }
        public Builder s3ObjectVersion(@Nullable String s3ObjectVersion) {
            this.s3ObjectVersion = s3ObjectVersion;
            return this;
        }
        public Builder zipFile(@Nullable String zipFile) {
            this.zipFile = zipFile;
            return this;
        }        public FunctionCode build() {
            return new FunctionCode(imageUri, s3Bucket, s3Key, s3ObjectVersion, zipFile);
        }
    }
}
