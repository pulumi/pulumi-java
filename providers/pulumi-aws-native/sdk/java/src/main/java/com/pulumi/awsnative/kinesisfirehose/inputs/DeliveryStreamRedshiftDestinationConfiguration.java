// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisfirehose.inputs;

import com.pulumi.awsnative.kinesisfirehose.enums.DeliveryStreamRedshiftDestinationConfigurationS3BackupMode;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptions;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCopyCommand;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamProcessingConfiguration;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamRedshiftRetryOptions;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamS3DestinationConfiguration;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryStreamRedshiftDestinationConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final DeliveryStreamRedshiftDestinationConfiguration Empty = new DeliveryStreamRedshiftDestinationConfiguration();

    @Import(name="cloudWatchLoggingOptions")
    private @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions;

    public Optional<DeliveryStreamCloudWatchLoggingOptions> cloudWatchLoggingOptions() {
        return Optional.ofNullable(this.cloudWatchLoggingOptions);
    }

    @Import(name="clusterJDBCURL", required=true)
    private String clusterJDBCURL;

    public String clusterJDBCURL() {
        return this.clusterJDBCURL;
    }

    @Import(name="copyCommand", required=true)
    private DeliveryStreamCopyCommand copyCommand;

    public DeliveryStreamCopyCommand copyCommand() {
        return this.copyCommand;
    }

    @Import(name="password", required=true)
    private String password;

    public String password() {
        return this.password;
    }

    @Import(name="processingConfiguration")
    private @Nullable DeliveryStreamProcessingConfiguration processingConfiguration;

    public Optional<DeliveryStreamProcessingConfiguration> processingConfiguration() {
        return Optional.ofNullable(this.processingConfiguration);
    }

    @Import(name="retryOptions")
    private @Nullable DeliveryStreamRedshiftRetryOptions retryOptions;

    public Optional<DeliveryStreamRedshiftRetryOptions> retryOptions() {
        return Optional.ofNullable(this.retryOptions);
    }

    @Import(name="roleARN", required=true)
    private String roleARN;

    public String roleARN() {
        return this.roleARN;
    }

    @Import(name="s3BackupConfiguration")
    private @Nullable DeliveryStreamS3DestinationConfiguration s3BackupConfiguration;

    public Optional<DeliveryStreamS3DestinationConfiguration> s3BackupConfiguration() {
        return Optional.ofNullable(this.s3BackupConfiguration);
    }

    @Import(name="s3BackupMode")
    private @Nullable DeliveryStreamRedshiftDestinationConfigurationS3BackupMode s3BackupMode;

    public Optional<DeliveryStreamRedshiftDestinationConfigurationS3BackupMode> s3BackupMode() {
        return Optional.ofNullable(this.s3BackupMode);
    }

    @Import(name="s3Configuration", required=true)
    private DeliveryStreamS3DestinationConfiguration s3Configuration;

    public DeliveryStreamS3DestinationConfiguration s3Configuration() {
        return this.s3Configuration;
    }

    @Import(name="username", required=true)
    private String username;

    public String username() {
        return this.username;
    }

    private DeliveryStreamRedshiftDestinationConfiguration() {}

    private DeliveryStreamRedshiftDestinationConfiguration(DeliveryStreamRedshiftDestinationConfiguration $) {
        this.cloudWatchLoggingOptions = $.cloudWatchLoggingOptions;
        this.clusterJDBCURL = $.clusterJDBCURL;
        this.copyCommand = $.copyCommand;
        this.password = $.password;
        this.processingConfiguration = $.processingConfiguration;
        this.retryOptions = $.retryOptions;
        this.roleARN = $.roleARN;
        this.s3BackupConfiguration = $.s3BackupConfiguration;
        this.s3BackupMode = $.s3BackupMode;
        this.s3Configuration = $.s3Configuration;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryStreamRedshiftDestinationConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryStreamRedshiftDestinationConfiguration $;

        public Builder() {
            $ = new DeliveryStreamRedshiftDestinationConfiguration();
        }

        public Builder(DeliveryStreamRedshiftDestinationConfiguration defaults) {
            $ = new DeliveryStreamRedshiftDestinationConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder cloudWatchLoggingOptions(@Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions) {
            $.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder clusterJDBCURL(String clusterJDBCURL) {
            $.clusterJDBCURL = clusterJDBCURL;
            return this;
        }

        public Builder copyCommand(DeliveryStreamCopyCommand copyCommand) {
            $.copyCommand = copyCommand;
            return this;
        }

        public Builder password(String password) {
            $.password = password;
            return this;
        }

        public Builder processingConfiguration(@Nullable DeliveryStreamProcessingConfiguration processingConfiguration) {
            $.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder retryOptions(@Nullable DeliveryStreamRedshiftRetryOptions retryOptions) {
            $.retryOptions = retryOptions;
            return this;
        }

        public Builder roleARN(String roleARN) {
            $.roleARN = roleARN;
            return this;
        }

        public Builder s3BackupConfiguration(@Nullable DeliveryStreamS3DestinationConfiguration s3BackupConfiguration) {
            $.s3BackupConfiguration = s3BackupConfiguration;
            return this;
        }

        public Builder s3BackupMode(@Nullable DeliveryStreamRedshiftDestinationConfigurationS3BackupMode s3BackupMode) {
            $.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder s3Configuration(DeliveryStreamS3DestinationConfiguration s3Configuration) {
            $.s3Configuration = s3Configuration;
            return this;
        }

        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public DeliveryStreamRedshiftDestinationConfiguration build() {
            $.clusterJDBCURL = Objects.requireNonNull($.clusterJDBCURL, "expected parameter 'clusterJDBCURL' to be non-null");
            $.copyCommand = Objects.requireNonNull($.copyCommand, "expected parameter 'copyCommand' to be non-null");
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.roleARN = Objects.requireNonNull($.roleARN, "expected parameter 'roleARN' to be non-null");
            $.s3Configuration = Objects.requireNonNull($.s3Configuration, "expected parameter 's3Configuration' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
