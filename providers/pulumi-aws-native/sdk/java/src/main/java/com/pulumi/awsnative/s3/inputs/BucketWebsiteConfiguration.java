// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.inputs.BucketRedirectAllRequestsTo;
import com.pulumi.awsnative.s3.inputs.BucketRoutingRule;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies website configuration parameters for an Amazon S3 bucket.
 * 
 */
public final class BucketWebsiteConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final BucketWebsiteConfiguration Empty = new BucketWebsiteConfiguration();

    /**
     * The name of the error document for the website.
     * 
     */
    @Import(name="errorDocument")
    private @Nullable String errorDocument;

    /**
     * @return The name of the error document for the website.
     * 
     */
    public Optional<String> errorDocument() {
        return Optional.ofNullable(this.errorDocument);
    }

    /**
     * The name of the index document for the website.
     * 
     */
    @Import(name="indexDocument")
    private @Nullable String indexDocument;

    /**
     * @return The name of the index document for the website.
     * 
     */
    public Optional<String> indexDocument() {
        return Optional.ofNullable(this.indexDocument);
    }

    @Import(name="redirectAllRequestsTo")
    private @Nullable BucketRedirectAllRequestsTo redirectAllRequestsTo;

    public Optional<BucketRedirectAllRequestsTo> redirectAllRequestsTo() {
        return Optional.ofNullable(this.redirectAllRequestsTo);
    }

    @Import(name="routingRules")
    private @Nullable List<BucketRoutingRule> routingRules;

    public Optional<List<BucketRoutingRule>> routingRules() {
        return Optional.ofNullable(this.routingRules);
    }

    private BucketWebsiteConfiguration() {}

    private BucketWebsiteConfiguration(BucketWebsiteConfiguration $) {
        this.errorDocument = $.errorDocument;
        this.indexDocument = $.indexDocument;
        this.redirectAllRequestsTo = $.redirectAllRequestsTo;
        this.routingRules = $.routingRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketWebsiteConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketWebsiteConfiguration $;

        public Builder() {
            $ = new BucketWebsiteConfiguration();
        }

        public Builder(BucketWebsiteConfiguration defaults) {
            $ = new BucketWebsiteConfiguration(Objects.requireNonNull(defaults));
        }

        /**
         * @param errorDocument The name of the error document for the website.
         * 
         * @return builder
         * 
         */
        public Builder errorDocument(@Nullable String errorDocument) {
            $.errorDocument = errorDocument;
            return this;
        }

        /**
         * @param indexDocument The name of the index document for the website.
         * 
         * @return builder
         * 
         */
        public Builder indexDocument(@Nullable String indexDocument) {
            $.indexDocument = indexDocument;
            return this;
        }

        public Builder redirectAllRequestsTo(@Nullable BucketRedirectAllRequestsTo redirectAllRequestsTo) {
            $.redirectAllRequestsTo = redirectAllRequestsTo;
            return this;
        }

        public Builder routingRules(@Nullable List<BucketRoutingRule> routingRules) {
            $.routingRules = routingRules;
            return this;
        }

        public Builder routingRules(BucketRoutingRule... routingRules) {
            return routingRules(List.of(routingRules));
        }

        public BucketWebsiteConfiguration build() {
            return $;
        }
    }

}
