// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.timestream.inputs;

import com.pulumi.awsnative.timestream.inputs.ScheduledQueryMultiMeasureAttributeMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Only one of MixedMeasureMappings or MultiMeasureMappings is to be provided. MultiMeasureMappings can be used to ingest data as multi measures in the derived table.
 * 
 */
public final class ScheduledQueryMultiMeasureMappingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryMultiMeasureMappingsArgs Empty = new ScheduledQueryMultiMeasureMappingsArgs();

    @Import(name="multiMeasureAttributeMappings", required=true)
      private final Output<List<ScheduledQueryMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings;

    public Output<List<ScheduledQueryMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings() {
        return this.multiMeasureAttributeMappings;
    }

    @Import(name="targetMultiMeasureName")
      private final @Nullable Output<String> targetMultiMeasureName;

    public Output<String> targetMultiMeasureName() {
        return this.targetMultiMeasureName == null ? Codegen.empty() : this.targetMultiMeasureName;
    }

    public ScheduledQueryMultiMeasureMappingsArgs(
        Output<List<ScheduledQueryMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings,
        @Nullable Output<String> targetMultiMeasureName) {
        this.multiMeasureAttributeMappings = Objects.requireNonNull(multiMeasureAttributeMappings, "expected parameter 'multiMeasureAttributeMappings' to be non-null");
        this.targetMultiMeasureName = targetMultiMeasureName;
    }

    private ScheduledQueryMultiMeasureMappingsArgs() {
        this.multiMeasureAttributeMappings = Codegen.empty();
        this.targetMultiMeasureName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduledQueryMultiMeasureMappingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<ScheduledQueryMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings;
        private @Nullable Output<String> targetMultiMeasureName;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduledQueryMultiMeasureMappingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.multiMeasureAttributeMappings = defaults.multiMeasureAttributeMappings;
    	      this.targetMultiMeasureName = defaults.targetMultiMeasureName;
        }

        public Builder multiMeasureAttributeMappings(Output<List<ScheduledQueryMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings) {
            this.multiMeasureAttributeMappings = Objects.requireNonNull(multiMeasureAttributeMappings);
            return this;
        }
        public Builder multiMeasureAttributeMappings(List<ScheduledQueryMultiMeasureAttributeMappingArgs> multiMeasureAttributeMappings) {
            this.multiMeasureAttributeMappings = Output.of(Objects.requireNonNull(multiMeasureAttributeMappings));
            return this;
        }
        public Builder multiMeasureAttributeMappings(ScheduledQueryMultiMeasureAttributeMappingArgs... multiMeasureAttributeMappings) {
            return multiMeasureAttributeMappings(List.of(multiMeasureAttributeMappings));
        }
        public Builder targetMultiMeasureName(@Nullable Output<String> targetMultiMeasureName) {
            this.targetMultiMeasureName = targetMultiMeasureName;
            return this;
        }
        public Builder targetMultiMeasureName(@Nullable String targetMultiMeasureName) {
            this.targetMultiMeasureName = Codegen.ofNullable(targetMultiMeasureName);
            return this;
        }        public ScheduledQueryMultiMeasureMappingsArgs build() {
            return new ScheduledQueryMultiMeasureMappingsArgs(multiMeasureAttributeMappings, targetMultiMeasureName);
        }
    }
}
