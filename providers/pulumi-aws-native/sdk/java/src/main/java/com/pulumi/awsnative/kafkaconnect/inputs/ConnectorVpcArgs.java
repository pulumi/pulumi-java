// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kafkaconnect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Information about a VPC used with the connector.
 * 
 */
public final class ConnectorVpcArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorVpcArgs Empty = new ConnectorVpcArgs();

    /**
     * The AWS security groups to associate with the elastic network interfaces in order to specify what the connector has access to.
     * 
     */
    @Import(name="securityGroups", required=true)
      private final Output<List<String>> securityGroups;

    public Output<List<String>> securityGroups() {
        return this.securityGroups;
    }

    /**
     * The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets.
     * 
     */
    @Import(name="subnets", required=true)
      private final Output<List<String>> subnets;

    public Output<List<String>> subnets() {
        return this.subnets;
    }

    public ConnectorVpcArgs(
        Output<List<String>> securityGroups,
        Output<List<String>> subnets) {
        this.securityGroups = Objects.requireNonNull(securityGroups, "expected parameter 'securityGroups' to be non-null");
        this.subnets = Objects.requireNonNull(subnets, "expected parameter 'subnets' to be non-null");
    }

    private ConnectorVpcArgs() {
        this.securityGroups = Codegen.empty();
        this.subnets = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorVpcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> securityGroups;
        private Output<List<String>> subnets;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectorVpcArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.securityGroups = defaults.securityGroups;
    	      this.subnets = defaults.subnets;
        }

        public Builder securityGroups(Output<List<String>> securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }
        public Builder securityGroups(List<String> securityGroups) {
            this.securityGroups = Output.of(Objects.requireNonNull(securityGroups));
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        public Builder subnets(Output<List<String>> subnets) {
            this.subnets = Objects.requireNonNull(subnets);
            return this;
        }
        public Builder subnets(List<String> subnets) {
            this.subnets = Output.of(Objects.requireNonNull(subnets));
            return this;
        }
        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }        public ConnectorVpcArgs build() {
            return new ConnectorVpcArgs(securityGroups, subnets);
        }
    }
}
