// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.servicecatalog.outputs;

import com.pulumi.awsnative.servicecatalog.enums.CloudFormationProvisionedProductAcceptLanguage;
import com.pulumi.awsnative.servicecatalog.outputs.CloudFormationProvisionedProductProvisioningParameter;
import com.pulumi.awsnative.servicecatalog.outputs.CloudFormationProvisionedProductProvisioningPreferences;
import com.pulumi.awsnative.servicecatalog.outputs.CloudFormationProvisionedProductTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudFormationProvisionedProductResult {
    private final @Nullable CloudFormationProvisionedProductAcceptLanguage acceptLanguage;
    private final @Nullable String cloudformationStackArn;
    /**
     * @return List of key-value pair outputs.
     * 
     */
    private final @Nullable Object outputs;
    private final @Nullable String pathId;
    private final @Nullable String pathName;
    private final @Nullable String productId;
    private final @Nullable String productName;
    private final @Nullable String provisionedProductId;
    private final @Nullable String provisioningArtifactId;
    private final @Nullable String provisioningArtifactName;
    private final @Nullable List<CloudFormationProvisionedProductProvisioningParameter> provisioningParameters;
    private final @Nullable CloudFormationProvisionedProductProvisioningPreferences provisioningPreferences;
    private final @Nullable String recordId;
    private final @Nullable List<CloudFormationProvisionedProductTag> tags;

    @CustomType.Constructor
    private GetCloudFormationProvisionedProductResult(
        @CustomType.Parameter("acceptLanguage") @Nullable CloudFormationProvisionedProductAcceptLanguage acceptLanguage,
        @CustomType.Parameter("cloudformationStackArn") @Nullable String cloudformationStackArn,
        @CustomType.Parameter("outputs") @Nullable Object outputs,
        @CustomType.Parameter("pathId") @Nullable String pathId,
        @CustomType.Parameter("pathName") @Nullable String pathName,
        @CustomType.Parameter("productId") @Nullable String productId,
        @CustomType.Parameter("productName") @Nullable String productName,
        @CustomType.Parameter("provisionedProductId") @Nullable String provisionedProductId,
        @CustomType.Parameter("provisioningArtifactId") @Nullable String provisioningArtifactId,
        @CustomType.Parameter("provisioningArtifactName") @Nullable String provisioningArtifactName,
        @CustomType.Parameter("provisioningParameters") @Nullable List<CloudFormationProvisionedProductProvisioningParameter> provisioningParameters,
        @CustomType.Parameter("provisioningPreferences") @Nullable CloudFormationProvisionedProductProvisioningPreferences provisioningPreferences,
        @CustomType.Parameter("recordId") @Nullable String recordId,
        @CustomType.Parameter("tags") @Nullable List<CloudFormationProvisionedProductTag> tags) {
        this.acceptLanguage = acceptLanguage;
        this.cloudformationStackArn = cloudformationStackArn;
        this.outputs = outputs;
        this.pathId = pathId;
        this.pathName = pathName;
        this.productId = productId;
        this.productName = productName;
        this.provisionedProductId = provisionedProductId;
        this.provisioningArtifactId = provisioningArtifactId;
        this.provisioningArtifactName = provisioningArtifactName;
        this.provisioningParameters = provisioningParameters;
        this.provisioningPreferences = provisioningPreferences;
        this.recordId = recordId;
        this.tags = tags;
    }

    public Optional<CloudFormationProvisionedProductAcceptLanguage> acceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }
    public Optional<String> cloudformationStackArn() {
        return Optional.ofNullable(this.cloudformationStackArn);
    }
    /**
     * @return List of key-value pair outputs.
     * 
     */
    public Optional<Object> outputs() {
        return Optional.ofNullable(this.outputs);
    }
    public Optional<String> pathId() {
        return Optional.ofNullable(this.pathId);
    }
    public Optional<String> pathName() {
        return Optional.ofNullable(this.pathName);
    }
    public Optional<String> productId() {
        return Optional.ofNullable(this.productId);
    }
    public Optional<String> productName() {
        return Optional.ofNullable(this.productName);
    }
    public Optional<String> provisionedProductId() {
        return Optional.ofNullable(this.provisionedProductId);
    }
    public Optional<String> provisioningArtifactId() {
        return Optional.ofNullable(this.provisioningArtifactId);
    }
    public Optional<String> provisioningArtifactName() {
        return Optional.ofNullable(this.provisioningArtifactName);
    }
    public List<CloudFormationProvisionedProductProvisioningParameter> provisioningParameters() {
        return this.provisioningParameters == null ? List.of() : this.provisioningParameters;
    }
    public Optional<CloudFormationProvisionedProductProvisioningPreferences> provisioningPreferences() {
        return Optional.ofNullable(this.provisioningPreferences);
    }
    public Optional<String> recordId() {
        return Optional.ofNullable(this.recordId);
    }
    public List<CloudFormationProvisionedProductTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudFormationProvisionedProductResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable CloudFormationProvisionedProductAcceptLanguage acceptLanguage;
        private @Nullable String cloudformationStackArn;
        private @Nullable Object outputs;
        private @Nullable String pathId;
        private @Nullable String pathName;
        private @Nullable String productId;
        private @Nullable String productName;
        private @Nullable String provisionedProductId;
        private @Nullable String provisioningArtifactId;
        private @Nullable String provisioningArtifactName;
        private @Nullable List<CloudFormationProvisionedProductProvisioningParameter> provisioningParameters;
        private @Nullable CloudFormationProvisionedProductProvisioningPreferences provisioningPreferences;
        private @Nullable String recordId;
        private @Nullable List<CloudFormationProvisionedProductTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCloudFormationProvisionedProductResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptLanguage = defaults.acceptLanguage;
    	      this.cloudformationStackArn = defaults.cloudformationStackArn;
    	      this.outputs = defaults.outputs;
    	      this.pathId = defaults.pathId;
    	      this.pathName = defaults.pathName;
    	      this.productId = defaults.productId;
    	      this.productName = defaults.productName;
    	      this.provisionedProductId = defaults.provisionedProductId;
    	      this.provisioningArtifactId = defaults.provisioningArtifactId;
    	      this.provisioningArtifactName = defaults.provisioningArtifactName;
    	      this.provisioningParameters = defaults.provisioningParameters;
    	      this.provisioningPreferences = defaults.provisioningPreferences;
    	      this.recordId = defaults.recordId;
    	      this.tags = defaults.tags;
        }

        public Builder acceptLanguage(@Nullable CloudFormationProvisionedProductAcceptLanguage acceptLanguage) {
            this.acceptLanguage = acceptLanguage;
            return this;
        }
        public Builder cloudformationStackArn(@Nullable String cloudformationStackArn) {
            this.cloudformationStackArn = cloudformationStackArn;
            return this;
        }
        public Builder outputs(@Nullable Object outputs) {
            this.outputs = outputs;
            return this;
        }
        public Builder pathId(@Nullable String pathId) {
            this.pathId = pathId;
            return this;
        }
        public Builder pathName(@Nullable String pathName) {
            this.pathName = pathName;
            return this;
        }
        public Builder productId(@Nullable String productId) {
            this.productId = productId;
            return this;
        }
        public Builder productName(@Nullable String productName) {
            this.productName = productName;
            return this;
        }
        public Builder provisionedProductId(@Nullable String provisionedProductId) {
            this.provisionedProductId = provisionedProductId;
            return this;
        }
        public Builder provisioningArtifactId(@Nullable String provisioningArtifactId) {
            this.provisioningArtifactId = provisioningArtifactId;
            return this;
        }
        public Builder provisioningArtifactName(@Nullable String provisioningArtifactName) {
            this.provisioningArtifactName = provisioningArtifactName;
            return this;
        }
        public Builder provisioningParameters(@Nullable List<CloudFormationProvisionedProductProvisioningParameter> provisioningParameters) {
            this.provisioningParameters = provisioningParameters;
            return this;
        }
        public Builder provisioningParameters(CloudFormationProvisionedProductProvisioningParameter... provisioningParameters) {
            return provisioningParameters(List.of(provisioningParameters));
        }
        public Builder provisioningPreferences(@Nullable CloudFormationProvisionedProductProvisioningPreferences provisioningPreferences) {
            this.provisioningPreferences = provisioningPreferences;
            return this;
        }
        public Builder recordId(@Nullable String recordId) {
            this.recordId = recordId;
            return this;
        }
        public Builder tags(@Nullable List<CloudFormationProvisionedProductTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(CloudFormationProvisionedProductTag... tags) {
            return tags(List.of(tags));
        }        public GetCloudFormationProvisionedProductResult build() {
            return new GetCloudFormationProvisionedProductResult(acceptLanguage, cloudformationStackArn, outputs, pathId, pathName, productId, productName, provisionedProductId, provisioningArtifactId, provisioningArtifactName, provisioningParameters, provisioningPreferences, recordId, tags);
        }
    }
}
