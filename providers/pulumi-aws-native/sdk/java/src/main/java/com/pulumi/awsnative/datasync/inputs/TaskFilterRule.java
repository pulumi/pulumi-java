// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.datasync.inputs;

import com.pulumi.awsnative.datasync.enums.TaskFilterRuleFilterType;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies which files folders and objects to include or exclude when transferring files from source to destination.
 * 
 */
public final class TaskFilterRule extends com.pulumi.resources.InvokeArgs {

    public static final TaskFilterRule Empty = new TaskFilterRule();

    /**
     * The type of filter rule to apply. AWS DataSync only supports the SIMPLE_PATTERN rule type.
     * 
     */
    @Import(name="filterType")
      private final @Nullable TaskFilterRuleFilterType filterType;

    public Optional<TaskFilterRuleFilterType> filterType() {
        return this.filterType == null ? Optional.empty() : Optional.ofNullable(this.filterType);
    }

    /**
     * A single filter string that consists of the patterns to include or exclude. The patterns are delimited by "|".
     * 
     */
    @Import(name="value")
      private final @Nullable String value;

    public Optional<String> value() {
        return this.value == null ? Optional.empty() : Optional.ofNullable(this.value);
    }

    public TaskFilterRule(
        @Nullable TaskFilterRuleFilterType filterType,
        @Nullable String value) {
        this.filterType = filterType;
        this.value = value;
    }

    private TaskFilterRule() {
        this.filterType = null;
        this.value = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskFilterRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable TaskFilterRuleFilterType filterType;
        private @Nullable String value;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskFilterRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterType = defaults.filterType;
    	      this.value = defaults.value;
        }

        public Builder filterType(@Nullable TaskFilterRuleFilterType filterType) {
            this.filterType = filterType;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }        public TaskFilterRule build() {
            return new TaskFilterRule(filterType, value);
        }
    }
}
