// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cassandra.outputs;

import com.pulumi.awsnative.cassandra.enums.TableMode;
import com.pulumi.awsnative.cassandra.outputs.TableProvisionedThroughput;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TableBillingMode {
    private final TableMode mode;
    private final @Nullable TableProvisionedThroughput provisionedThroughput;

    @CustomType.Constructor
    private TableBillingMode(
        @CustomType.Parameter("mode") TableMode mode,
        @CustomType.Parameter("provisionedThroughput") @Nullable TableProvisionedThroughput provisionedThroughput) {
        this.mode = mode;
        this.provisionedThroughput = provisionedThroughput;
    }

    public TableMode mode() {
        return this.mode;
    }
    public Optional<TableProvisionedThroughput> provisionedThroughput() {
        return Optional.ofNullable(this.provisionedThroughput);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableBillingMode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableMode mode;
        private @Nullable TableProvisionedThroughput provisionedThroughput;

        public Builder() {
    	      // Empty
        }

        public Builder(TableBillingMode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.provisionedThroughput = defaults.provisionedThroughput;
        }

        public Builder mode(TableMode mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder provisionedThroughput(@Nullable TableProvisionedThroughput provisionedThroughput) {
            this.provisionedThroughput = provisionedThroughput;
            return this;
        }        public TableBillingMode build() {
            return new TableBillingMode(mode, provisionedThroughput);
        }
    }
}
