// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatastoreCustomerManagedS3Storage extends com.pulumi.resources.InvokeArgs {

    public static final DatastoreCustomerManagedS3Storage Empty = new DatastoreCustomerManagedS3Storage();

    @Import(name="bucket", required=true)
    private String bucket;

    public String bucket() {
        return this.bucket;
    }

    @Import(name="keyPrefix")
    private @Nullable String keyPrefix;

    public Optional<String> keyPrefix() {
        return Optional.ofNullable(this.keyPrefix);
    }

    private DatastoreCustomerManagedS3Storage() {}

    private DatastoreCustomerManagedS3Storage(DatastoreCustomerManagedS3Storage $) {
        this.bucket = $.bucket;
        this.keyPrefix = $.keyPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastoreCustomerManagedS3Storage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastoreCustomerManagedS3Storage $;

        public Builder() {
            $ = new DatastoreCustomerManagedS3Storage();
        }

        public Builder(DatastoreCustomerManagedS3Storage defaults) {
            $ = new DatastoreCustomerManagedS3Storage(Objects.requireNonNull(defaults));
        }

        public Builder bucket(String bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder keyPrefix(@Nullable String keyPrefix) {
            $.keyPrefix = keyPrefix;
            return this;
        }

        public DatastoreCustomerManagedS3Storage build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            return $;
        }
    }

}
