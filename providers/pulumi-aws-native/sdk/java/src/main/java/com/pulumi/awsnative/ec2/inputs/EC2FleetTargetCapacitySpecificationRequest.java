// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.inputs;

import com.pulumi.awsnative.ec2.enums.EC2FleetTargetCapacitySpecificationRequestDefaultTargetCapacityType;
import com.pulumi.awsnative.ec2.enums.EC2FleetTargetCapacitySpecificationRequestTargetCapacityUnitType;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EC2FleetTargetCapacitySpecificationRequest extends com.pulumi.resources.InvokeArgs {

    public static final EC2FleetTargetCapacitySpecificationRequest Empty = new EC2FleetTargetCapacitySpecificationRequest();

    @Import(name="defaultTargetCapacityType")
      private final @Nullable EC2FleetTargetCapacitySpecificationRequestDefaultTargetCapacityType defaultTargetCapacityType;

    public Optional<EC2FleetTargetCapacitySpecificationRequestDefaultTargetCapacityType> defaultTargetCapacityType() {
        return this.defaultTargetCapacityType == null ? Optional.empty() : Optional.ofNullable(this.defaultTargetCapacityType);
    }

    @Import(name="onDemandTargetCapacity")
      private final @Nullable Integer onDemandTargetCapacity;

    public Optional<Integer> onDemandTargetCapacity() {
        return this.onDemandTargetCapacity == null ? Optional.empty() : Optional.ofNullable(this.onDemandTargetCapacity);
    }

    @Import(name="spotTargetCapacity")
      private final @Nullable Integer spotTargetCapacity;

    public Optional<Integer> spotTargetCapacity() {
        return this.spotTargetCapacity == null ? Optional.empty() : Optional.ofNullable(this.spotTargetCapacity);
    }

    @Import(name="targetCapacityUnitType")
      private final @Nullable EC2FleetTargetCapacitySpecificationRequestTargetCapacityUnitType targetCapacityUnitType;

    public Optional<EC2FleetTargetCapacitySpecificationRequestTargetCapacityUnitType> targetCapacityUnitType() {
        return this.targetCapacityUnitType == null ? Optional.empty() : Optional.ofNullable(this.targetCapacityUnitType);
    }

    @Import(name="totalTargetCapacity", required=true)
      private final Integer totalTargetCapacity;

    public Integer totalTargetCapacity() {
        return this.totalTargetCapacity;
    }

    public EC2FleetTargetCapacitySpecificationRequest(
        @Nullable EC2FleetTargetCapacitySpecificationRequestDefaultTargetCapacityType defaultTargetCapacityType,
        @Nullable Integer onDemandTargetCapacity,
        @Nullable Integer spotTargetCapacity,
        @Nullable EC2FleetTargetCapacitySpecificationRequestTargetCapacityUnitType targetCapacityUnitType,
        Integer totalTargetCapacity) {
        this.defaultTargetCapacityType = defaultTargetCapacityType;
        this.onDemandTargetCapacity = onDemandTargetCapacity;
        this.spotTargetCapacity = spotTargetCapacity;
        this.targetCapacityUnitType = targetCapacityUnitType;
        this.totalTargetCapacity = Objects.requireNonNull(totalTargetCapacity, "expected parameter 'totalTargetCapacity' to be non-null");
    }

    private EC2FleetTargetCapacitySpecificationRequest() {
        this.defaultTargetCapacityType = null;
        this.onDemandTargetCapacity = null;
        this.spotTargetCapacity = null;
        this.targetCapacityUnitType = null;
        this.totalTargetCapacity = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EC2FleetTargetCapacitySpecificationRequest defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable EC2FleetTargetCapacitySpecificationRequestDefaultTargetCapacityType defaultTargetCapacityType;
        private @Nullable Integer onDemandTargetCapacity;
        private @Nullable Integer spotTargetCapacity;
        private @Nullable EC2FleetTargetCapacitySpecificationRequestTargetCapacityUnitType targetCapacityUnitType;
        private Integer totalTargetCapacity;

        public Builder() {
    	      // Empty
        }

        public Builder(EC2FleetTargetCapacitySpecificationRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultTargetCapacityType = defaults.defaultTargetCapacityType;
    	      this.onDemandTargetCapacity = defaults.onDemandTargetCapacity;
    	      this.spotTargetCapacity = defaults.spotTargetCapacity;
    	      this.targetCapacityUnitType = defaults.targetCapacityUnitType;
    	      this.totalTargetCapacity = defaults.totalTargetCapacity;
        }

        public Builder defaultTargetCapacityType(@Nullable EC2FleetTargetCapacitySpecificationRequestDefaultTargetCapacityType defaultTargetCapacityType) {
            this.defaultTargetCapacityType = defaultTargetCapacityType;
            return this;
        }
        public Builder onDemandTargetCapacity(@Nullable Integer onDemandTargetCapacity) {
            this.onDemandTargetCapacity = onDemandTargetCapacity;
            return this;
        }
        public Builder spotTargetCapacity(@Nullable Integer spotTargetCapacity) {
            this.spotTargetCapacity = spotTargetCapacity;
            return this;
        }
        public Builder targetCapacityUnitType(@Nullable EC2FleetTargetCapacitySpecificationRequestTargetCapacityUnitType targetCapacityUnitType) {
            this.targetCapacityUnitType = targetCapacityUnitType;
            return this;
        }
        public Builder totalTargetCapacity(Integer totalTargetCapacity) {
            this.totalTargetCapacity = Objects.requireNonNull(totalTargetCapacity);
            return this;
        }        public EC2FleetTargetCapacitySpecificationRequest build() {
            return new EC2FleetTargetCapacitySpecificationRequest(defaultTargetCapacityType, onDemandTargetCapacity, spotTargetCapacity, targetCapacityUnitType, totalTargetCapacity);
        }
    }
}
