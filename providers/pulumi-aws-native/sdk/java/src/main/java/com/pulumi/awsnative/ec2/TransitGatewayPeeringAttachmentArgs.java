// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.ec2.inputs.TransitGatewayPeeringAttachmentOptionsArgs;
import com.pulumi.awsnative.ec2.inputs.TransitGatewayPeeringAttachmentTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitGatewayPeeringAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitGatewayPeeringAttachmentArgs Empty = new TransitGatewayPeeringAttachmentArgs();

    /**
     * Options for transit gateway peering attachment
     * 
     */
    @Import(name="options")
    private @Nullable Output<TransitGatewayPeeringAttachmentOptionsArgs> options;

    public Optional<Output<TransitGatewayPeeringAttachmentOptionsArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * The ID of the peer account
     * 
     */
    @Import(name="peerAccountId", required=true)
    private Output<String> peerAccountId;

    public Output<String> peerAccountId() {
        return this.peerAccountId;
    }

    /**
     * Peer Region
     * 
     */
    @Import(name="peerRegion", required=true)
    private Output<String> peerRegion;

    public Output<String> peerRegion() {
        return this.peerRegion;
    }

    /**
     * The ID of the peer transit gateway.
     * 
     */
    @Import(name="peerTransitGatewayId", required=true)
    private Output<String> peerTransitGatewayId;

    public Output<String> peerTransitGatewayId() {
        return this.peerTransitGatewayId;
    }

    /**
     * The tags for the transit gateway peering attachment.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<TransitGatewayPeeringAttachmentTagArgs>> tags;

    public Optional<Output<List<TransitGatewayPeeringAttachmentTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the transit gateway.
     * 
     */
    @Import(name="transitGatewayId", required=true)
    private Output<String> transitGatewayId;

    public Output<String> transitGatewayId() {
        return this.transitGatewayId;
    }

    private TransitGatewayPeeringAttachmentArgs() {}

    private TransitGatewayPeeringAttachmentArgs(TransitGatewayPeeringAttachmentArgs $) {
        this.options = $.options;
        this.peerAccountId = $.peerAccountId;
        this.peerRegion = $.peerRegion;
        this.peerTransitGatewayId = $.peerTransitGatewayId;
        this.tags = $.tags;
        this.transitGatewayId = $.transitGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitGatewayPeeringAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitGatewayPeeringAttachmentArgs $;

        public Builder() {
            $ = new TransitGatewayPeeringAttachmentArgs();
        }

        public Builder(TransitGatewayPeeringAttachmentArgs defaults) {
            $ = new TransitGatewayPeeringAttachmentArgs(Objects.requireNonNull(defaults));
        }

        public Builder options(@Nullable Output<TransitGatewayPeeringAttachmentOptionsArgs> options) {
            $.options = options;
            return this;
        }

        public Builder options(TransitGatewayPeeringAttachmentOptionsArgs options) {
            return options(Output.of(options));
        }

        public Builder peerAccountId(Output<String> peerAccountId) {
            $.peerAccountId = peerAccountId;
            return this;
        }

        public Builder peerAccountId(String peerAccountId) {
            return peerAccountId(Output.of(peerAccountId));
        }

        public Builder peerRegion(Output<String> peerRegion) {
            $.peerRegion = peerRegion;
            return this;
        }

        public Builder peerRegion(String peerRegion) {
            return peerRegion(Output.of(peerRegion));
        }

        public Builder peerTransitGatewayId(Output<String> peerTransitGatewayId) {
            $.peerTransitGatewayId = peerTransitGatewayId;
            return this;
        }

        public Builder peerTransitGatewayId(String peerTransitGatewayId) {
            return peerTransitGatewayId(Output.of(peerTransitGatewayId));
        }

        public Builder tags(@Nullable Output<List<TransitGatewayPeeringAttachmentTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<TransitGatewayPeeringAttachmentTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(TransitGatewayPeeringAttachmentTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder transitGatewayId(Output<String> transitGatewayId) {
            $.transitGatewayId = transitGatewayId;
            return this;
        }

        public Builder transitGatewayId(String transitGatewayId) {
            return transitGatewayId(Output.of(transitGatewayId));
        }

        public TransitGatewayPeeringAttachmentArgs build() {
            $.peerAccountId = Objects.requireNonNull($.peerAccountId, "expected parameter 'peerAccountId' to be non-null");
            $.peerRegion = Objects.requireNonNull($.peerRegion, "expected parameter 'peerRegion' to be non-null");
            $.peerTransitGatewayId = Objects.requireNonNull($.peerTransitGatewayId, "expected parameter 'peerTransitGatewayId' to be non-null");
            $.transitGatewayId = Objects.requireNonNull($.transitGatewayId, "expected parameter 'transitGatewayId' to be non-null");
            return $;
        }
    }

}
