// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.awsnative.iotanalytics.inputs.DatastoreTimestampPartition;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatastorePartition extends com.pulumi.resources.InvokeArgs {

    public static final DatastorePartition Empty = new DatastorePartition();

    @Import(name="partition")
    private @Nullable DatastorePartition partition;

    public Optional<DatastorePartition> partition() {
        return Optional.ofNullable(this.partition);
    }

    @Import(name="timestampPartition")
    private @Nullable DatastoreTimestampPartition timestampPartition;

    public Optional<DatastoreTimestampPartition> timestampPartition() {
        return Optional.ofNullable(this.timestampPartition);
    }

    private DatastorePartition() {}

    private DatastorePartition(DatastorePartition $) {
        this.partition = $.partition;
        this.timestampPartition = $.timestampPartition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastorePartition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastorePartition $;

        public Builder() {
            $ = new DatastorePartition();
        }

        public Builder(DatastorePartition defaults) {
            $ = new DatastorePartition(Objects.requireNonNull(defaults));
        }

        public Builder partition(@Nullable DatastorePartition partition) {
            $.partition = partition;
            return this;
        }

        public Builder timestampPartition(@Nullable DatastoreTimestampPartition timestampPartition) {
            $.timestampPartition = timestampPartition;
            return this;
        }

        public DatastorePartition build() {
            return $;
        }
    }

}
