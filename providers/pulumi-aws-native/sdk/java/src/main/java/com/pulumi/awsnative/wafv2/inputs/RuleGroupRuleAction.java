// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2.inputs;

import com.pulumi.awsnative.wafv2.inputs.RuleGroupRuleActionAllowProperties;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupRuleActionBlockProperties;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupRuleActionCaptchaProperties;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupRuleActionCountProperties;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Action taken when Rule matches its condition.
 * 
 */
public final class RuleGroupRuleAction extends com.pulumi.resources.InvokeArgs {

    public static final RuleGroupRuleAction Empty = new RuleGroupRuleAction();

    /**
     * Allow traffic towards application.
     * 
     */
    @Import(name="allow")
    private @Nullable RuleGroupRuleActionAllowProperties allow;

    public Optional<RuleGroupRuleActionAllowProperties> allow() {
        return Optional.ofNullable(this.allow);
    }

    /**
     * Block traffic towards application.
     * 
     */
    @Import(name="block")
    private @Nullable RuleGroupRuleActionBlockProperties block;

    public Optional<RuleGroupRuleActionBlockProperties> block() {
        return Optional.ofNullable(this.block);
    }

    /**
     * Checks valid token exists with request.
     * 
     */
    @Import(name="captcha")
    private @Nullable RuleGroupRuleActionCaptchaProperties captcha;

    public Optional<RuleGroupRuleActionCaptchaProperties> captcha() {
        return Optional.ofNullable(this.captcha);
    }

    /**
     * Count traffic towards application.
     * 
     */
    @Import(name="count")
    private @Nullable RuleGroupRuleActionCountProperties count;

    public Optional<RuleGroupRuleActionCountProperties> count() {
        return Optional.ofNullable(this.count);
    }

    private RuleGroupRuleAction() {}

    private RuleGroupRuleAction(RuleGroupRuleAction $) {
        this.allow = $.allow;
        this.block = $.block;
        this.captcha = $.captcha;
        this.count = $.count;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleGroupRuleAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleGroupRuleAction $;

        public Builder() {
            $ = new RuleGroupRuleAction();
        }

        public Builder(RuleGroupRuleAction defaults) {
            $ = new RuleGroupRuleAction(Objects.requireNonNull(defaults));
        }

        public Builder allow(@Nullable RuleGroupRuleActionAllowProperties allow) {
            $.allow = allow;
            return this;
        }

        public Builder block(@Nullable RuleGroupRuleActionBlockProperties block) {
            $.block = block;
            return this;
        }

        public Builder captcha(@Nullable RuleGroupRuleActionCaptchaProperties captcha) {
            $.captcha = captcha;
            return this;
        }

        public Builder count(@Nullable RuleGroupRuleActionCountProperties count) {
            $.count = count;
            return this;
        }

        public RuleGroupRuleAction build() {
            return $;
        }
    }

}
