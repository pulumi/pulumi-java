// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.route53resolver.inputs;

import com.pulumi.awsnative.route53resolver.enums.FirewallRuleGroupFirewallRuleAction;
import com.pulumi.awsnative.route53resolver.enums.FirewallRuleGroupFirewallRuleBlockOverrideDnsType;
import com.pulumi.awsnative.route53resolver.enums.FirewallRuleGroupFirewallRuleBlockResponse;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Firewall Rule associating the Rule Group to a Domain List
 * 
 */
public final class FirewallRuleGroupFirewallRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallRuleGroupFirewallRuleArgs Empty = new FirewallRuleGroupFirewallRuleArgs();

    /**
     * Rule Action
     * 
     */
    @Import(name="action", required=true)
    private Output<FirewallRuleGroupFirewallRuleAction> action;

    public Output<FirewallRuleGroupFirewallRuleAction> action() {
        return this.action;
    }

    /**
     * BlockOverrideDnsType
     * 
     */
    @Import(name="blockOverrideDnsType")
    private @Nullable Output<FirewallRuleGroupFirewallRuleBlockOverrideDnsType> blockOverrideDnsType;

    public Optional<Output<FirewallRuleGroupFirewallRuleBlockOverrideDnsType>> blockOverrideDnsType() {
        return Optional.ofNullable(this.blockOverrideDnsType);
    }

    /**
     * BlockOverrideDomain
     * 
     */
    @Import(name="blockOverrideDomain")
    private @Nullable Output<String> blockOverrideDomain;

    public Optional<Output<String>> blockOverrideDomain() {
        return Optional.ofNullable(this.blockOverrideDomain);
    }

    /**
     * BlockOverrideTtl
     * 
     */
    @Import(name="blockOverrideTtl")
    private @Nullable Output<Integer> blockOverrideTtl;

    public Optional<Output<Integer>> blockOverrideTtl() {
        return Optional.ofNullable(this.blockOverrideTtl);
    }

    /**
     * BlockResponse
     * 
     */
    @Import(name="blockResponse")
    private @Nullable Output<FirewallRuleGroupFirewallRuleBlockResponse> blockResponse;

    public Optional<Output<FirewallRuleGroupFirewallRuleBlockResponse>> blockResponse() {
        return Optional.ofNullable(this.blockResponse);
    }

    /**
     * ResourceId
     * 
     */
    @Import(name="firewallDomainListId", required=true)
    private Output<String> firewallDomainListId;

    public Output<String> firewallDomainListId() {
        return this.firewallDomainListId;
    }

    /**
     * Rule Priority
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    public Output<Integer> priority() {
        return this.priority;
    }

    private FirewallRuleGroupFirewallRuleArgs() {}

    private FirewallRuleGroupFirewallRuleArgs(FirewallRuleGroupFirewallRuleArgs $) {
        this.action = $.action;
        this.blockOverrideDnsType = $.blockOverrideDnsType;
        this.blockOverrideDomain = $.blockOverrideDomain;
        this.blockOverrideTtl = $.blockOverrideTtl;
        this.blockResponse = $.blockResponse;
        this.firewallDomainListId = $.firewallDomainListId;
        this.priority = $.priority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallRuleGroupFirewallRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallRuleGroupFirewallRuleArgs $;

        public Builder() {
            $ = new FirewallRuleGroupFirewallRuleArgs();
        }

        public Builder(FirewallRuleGroupFirewallRuleArgs defaults) {
            $ = new FirewallRuleGroupFirewallRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder action(Output<FirewallRuleGroupFirewallRuleAction> action) {
            $.action = action;
            return this;
        }

        public Builder action(FirewallRuleGroupFirewallRuleAction action) {
            return action(Output.of(action));
        }

        public Builder blockOverrideDnsType(@Nullable Output<FirewallRuleGroupFirewallRuleBlockOverrideDnsType> blockOverrideDnsType) {
            $.blockOverrideDnsType = blockOverrideDnsType;
            return this;
        }

        public Builder blockOverrideDnsType(FirewallRuleGroupFirewallRuleBlockOverrideDnsType blockOverrideDnsType) {
            return blockOverrideDnsType(Output.of(blockOverrideDnsType));
        }

        public Builder blockOverrideDomain(@Nullable Output<String> blockOverrideDomain) {
            $.blockOverrideDomain = blockOverrideDomain;
            return this;
        }

        public Builder blockOverrideDomain(String blockOverrideDomain) {
            return blockOverrideDomain(Output.of(blockOverrideDomain));
        }

        public Builder blockOverrideTtl(@Nullable Output<Integer> blockOverrideTtl) {
            $.blockOverrideTtl = blockOverrideTtl;
            return this;
        }

        public Builder blockOverrideTtl(Integer blockOverrideTtl) {
            return blockOverrideTtl(Output.of(blockOverrideTtl));
        }

        public Builder blockResponse(@Nullable Output<FirewallRuleGroupFirewallRuleBlockResponse> blockResponse) {
            $.blockResponse = blockResponse;
            return this;
        }

        public Builder blockResponse(FirewallRuleGroupFirewallRuleBlockResponse blockResponse) {
            return blockResponse(Output.of(blockResponse));
        }

        public Builder firewallDomainListId(Output<String> firewallDomainListId) {
            $.firewallDomainListId = firewallDomainListId;
            return this;
        }

        public Builder firewallDomainListId(String firewallDomainListId) {
            return firewallDomainListId(Output.of(firewallDomainListId));
        }

        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public FirewallRuleGroupFirewallRuleArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.firewallDomainListId = Objects.requireNonNull($.firewallDomainListId, "expected parameter 'firewallDomainListId' to be non-null");
            $.priority = Objects.requireNonNull($.priority, "expected parameter 'priority' to be non-null");
            return $;
        }
    }

}
