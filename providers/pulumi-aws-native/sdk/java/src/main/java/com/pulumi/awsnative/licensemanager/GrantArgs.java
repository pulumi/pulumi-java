// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.licensemanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrantArgs Empty = new GrantArgs();

    @Import(name="allowedOperations")
    private @Nullable Output<List<String>> allowedOperations;

    public Optional<Output<List<String>>> allowedOperations() {
        return Optional.ofNullable(this.allowedOperations);
    }

    /**
     * Name for the created Grant.
     * 
     */
    @Import(name="grantName")
    private @Nullable Output<String> grantName;

    public Optional<Output<String>> grantName() {
        return Optional.ofNullable(this.grantName);
    }

    /**
     * Home region for the created grant.
     * 
     */
    @Import(name="homeRegion")
    private @Nullable Output<String> homeRegion;

    public Optional<Output<String>> homeRegion() {
        return Optional.ofNullable(this.homeRegion);
    }

    /**
     * License Arn for the grant.
     * 
     */
    @Import(name="licenseArn")
    private @Nullable Output<String> licenseArn;

    public Optional<Output<String>> licenseArn() {
        return Optional.ofNullable(this.licenseArn);
    }

    @Import(name="principals")
    private @Nullable Output<List<String>> principals;

    public Optional<Output<List<String>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GrantArgs() {}

    private GrantArgs(GrantArgs $) {
        this.allowedOperations = $.allowedOperations;
        this.grantName = $.grantName;
        this.homeRegion = $.homeRegion;
        this.licenseArn = $.licenseArn;
        this.principals = $.principals;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrantArgs $;

        public Builder() {
            $ = new GrantArgs();
        }

        public Builder(GrantArgs defaults) {
            $ = new GrantArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedOperations(@Nullable Output<List<String>> allowedOperations) {
            $.allowedOperations = allowedOperations;
            return this;
        }

        public Builder allowedOperations(List<String> allowedOperations) {
            return allowedOperations(Output.of(allowedOperations));
        }

        public Builder allowedOperations(String... allowedOperations) {
            return allowedOperations(List.of(allowedOperations));
        }

        public Builder grantName(@Nullable Output<String> grantName) {
            $.grantName = grantName;
            return this;
        }

        public Builder grantName(String grantName) {
            return grantName(Output.of(grantName));
        }

        public Builder homeRegion(@Nullable Output<String> homeRegion) {
            $.homeRegion = homeRegion;
            return this;
        }

        public Builder homeRegion(String homeRegion) {
            return homeRegion(Output.of(homeRegion));
        }

        public Builder licenseArn(@Nullable Output<String> licenseArn) {
            $.licenseArn = licenseArn;
            return this;
        }

        public Builder licenseArn(String licenseArn) {
            return licenseArn(Output.of(licenseArn));
        }

        public Builder principals(@Nullable Output<List<String>> principals) {
            $.principals = principals;
            return this;
        }

        public Builder principals(List<String> principals) {
            return principals(Output.of(principals));
        }

        public Builder principals(String... principals) {
            return principals(List.of(principals));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GrantArgs build() {
            return $;
        }
    }

}
