// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents.inputs;

import com.pulumi.awsnative.iotevents.inputs.DetectorModelPayload;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DetectorModelSqs extends com.pulumi.resources.InvokeArgs {

    public static final DetectorModelSqs Empty = new DetectorModelSqs();

    @Import(name="payload")
    private @Nullable DetectorModelPayload payload;

    public Optional<DetectorModelPayload> payload() {
        return Optional.ofNullable(this.payload);
    }

    /**
     * The URL of the SQS queue where the data is written.
     * 
     */
    @Import(name="queueUrl", required=true)
    private String queueUrl;

    /**
     * @return The URL of the SQS queue where the data is written.
     * 
     */
    public String queueUrl() {
        return this.queueUrl;
    }

    /**
     * Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`.
     * 
     */
    @Import(name="useBase64")
    private @Nullable Boolean useBase64;

    /**
     * @return Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`.
     * 
     */
    public Optional<Boolean> useBase64() {
        return Optional.ofNullable(this.useBase64);
    }

    private DetectorModelSqs() {}

    private DetectorModelSqs(DetectorModelSqs $) {
        this.payload = $.payload;
        this.queueUrl = $.queueUrl;
        this.useBase64 = $.useBase64;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorModelSqs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorModelSqs $;

        public Builder() {
            $ = new DetectorModelSqs();
        }

        public Builder(DetectorModelSqs defaults) {
            $ = new DetectorModelSqs(Objects.requireNonNull(defaults));
        }

        public Builder payload(@Nullable DetectorModelPayload payload) {
            $.payload = payload;
            return this;
        }

        /**
         * @param queueUrl The URL of the SQS queue where the data is written.
         * 
         * @return builder
         * 
         */
        public Builder queueUrl(String queueUrl) {
            $.queueUrl = queueUrl;
            return this;
        }

        /**
         * @param useBase64 Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`.
         * 
         * @return builder
         * 
         */
        public Builder useBase64(@Nullable Boolean useBase64) {
            $.useBase64 = useBase64;
            return this;
        }

        public DetectorModelSqs build() {
            $.queueUrl = Objects.requireNonNull($.queueUrl, "expected parameter 'queueUrl' to be non-null");
            return $;
        }
    }

}
