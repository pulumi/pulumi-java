// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2.inputs;

import com.pulumi.awsnative.wafv2.inputs.WebACLCaptchaConfig;
import com.pulumi.awsnative.wafv2.inputs.WebACLLabel;
import com.pulumi.awsnative.wafv2.inputs.WebACLOverrideAction;
import com.pulumi.awsnative.wafv2.inputs.WebACLRuleAction;
import com.pulumi.awsnative.wafv2.inputs.WebACLStatement;
import com.pulumi.awsnative.wafv2.inputs.WebACLVisibilityConfig;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Rule of WebACL that contains condition and action.
 * 
 */
public final class WebACLRule extends com.pulumi.resources.InvokeArgs {

    public static final WebACLRule Empty = new WebACLRule();

    @Import(name="action")
    private @Nullable WebACLRuleAction action;

    public Optional<WebACLRuleAction> action() {
        return Optional.ofNullable(this.action);
    }

    @Import(name="captchaConfig")
    private @Nullable WebACLCaptchaConfig captchaConfig;

    public Optional<WebACLCaptchaConfig> captchaConfig() {
        return Optional.ofNullable(this.captchaConfig);
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="overrideAction")
    private @Nullable WebACLOverrideAction overrideAction;

    public Optional<WebACLOverrideAction> overrideAction() {
        return Optional.ofNullable(this.overrideAction);
    }

    @Import(name="priority", required=true)
    private Integer priority;

    public Integer priority() {
        return this.priority;
    }

    /**
     * Collection of Rule Labels.
     * 
     */
    @Import(name="ruleLabels")
    private @Nullable List<WebACLLabel> ruleLabels;

    /**
     * @return Collection of Rule Labels.
     * 
     */
    public Optional<List<WebACLLabel>> ruleLabels() {
        return Optional.ofNullable(this.ruleLabels);
    }

    @Import(name="statement", required=true)
    private WebACLStatement statement;

    public WebACLStatement statement() {
        return this.statement;
    }

    @Import(name="visibilityConfig", required=true)
    private WebACLVisibilityConfig visibilityConfig;

    public WebACLVisibilityConfig visibilityConfig() {
        return this.visibilityConfig;
    }

    private WebACLRule() {}

    private WebACLRule(WebACLRule $) {
        this.action = $.action;
        this.captchaConfig = $.captchaConfig;
        this.name = $.name;
        this.overrideAction = $.overrideAction;
        this.priority = $.priority;
        this.ruleLabels = $.ruleLabels;
        this.statement = $.statement;
        this.visibilityConfig = $.visibilityConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebACLRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebACLRule $;

        public Builder() {
            $ = new WebACLRule();
        }

        public Builder(WebACLRule defaults) {
            $ = new WebACLRule(Objects.requireNonNull(defaults));
        }

        public Builder action(@Nullable WebACLRuleAction action) {
            $.action = action;
            return this;
        }

        public Builder captchaConfig(@Nullable WebACLCaptchaConfig captchaConfig) {
            $.captchaConfig = captchaConfig;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder overrideAction(@Nullable WebACLOverrideAction overrideAction) {
            $.overrideAction = overrideAction;
            return this;
        }

        public Builder priority(Integer priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param ruleLabels Collection of Rule Labels.
         * 
         * @return builder
         * 
         */
        public Builder ruleLabels(@Nullable List<WebACLLabel> ruleLabels) {
            $.ruleLabels = ruleLabels;
            return this;
        }

        /**
         * @param ruleLabels Collection of Rule Labels.
         * 
         * @return builder
         * 
         */
        public Builder ruleLabels(WebACLLabel... ruleLabels) {
            return ruleLabels(List.of(ruleLabels));
        }

        public Builder statement(WebACLStatement statement) {
            $.statement = statement;
            return this;
        }

        public Builder visibilityConfig(WebACLVisibilityConfig visibilityConfig) {
            $.visibilityConfig = visibilityConfig;
            return this;
        }

        public WebACLRule build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.priority = Objects.requireNonNull($.priority, "expected parameter 'priority' to be non-null");
            $.statement = Objects.requireNonNull($.statement, "expected parameter 'statement' to be non-null");
            $.visibilityConfig = Objects.requireNonNull($.visibilityConfig, "expected parameter 'visibilityConfig' to be non-null");
            return $;
        }
    }

}
