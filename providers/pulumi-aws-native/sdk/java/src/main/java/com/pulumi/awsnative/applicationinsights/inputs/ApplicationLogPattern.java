// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.applicationinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * The log pattern.
 * 
 */
public final class ApplicationLogPattern extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationLogPattern Empty = new ApplicationLogPattern();

    /**
     * The log pattern.
     * 
     */
    @Import(name="pattern", required=true)
    private String pattern;

    /**
     * @return The log pattern.
     * 
     */
    public String pattern() {
        return this.pattern;
    }

    /**
     * The name of the log pattern.
     * 
     */
    @Import(name="patternName", required=true)
    private String patternName;

    /**
     * @return The name of the log pattern.
     * 
     */
    public String patternName() {
        return this.patternName;
    }

    /**
     * Rank of the log pattern.
     * 
     */
    @Import(name="rank", required=true)
    private Integer rank;

    /**
     * @return Rank of the log pattern.
     * 
     */
    public Integer rank() {
        return this.rank;
    }

    private ApplicationLogPattern() {}

    private ApplicationLogPattern(ApplicationLogPattern $) {
        this.pattern = $.pattern;
        this.patternName = $.patternName;
        this.rank = $.rank;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationLogPattern defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationLogPattern $;

        public Builder() {
            $ = new ApplicationLogPattern();
        }

        public Builder(ApplicationLogPattern defaults) {
            $ = new ApplicationLogPattern(Objects.requireNonNull(defaults));
        }

        /**
         * @param pattern The log pattern.
         * 
         * @return builder
         * 
         */
        public Builder pattern(String pattern) {
            $.pattern = pattern;
            return this;
        }

        /**
         * @param patternName The name of the log pattern.
         * 
         * @return builder
         * 
         */
        public Builder patternName(String patternName) {
            $.patternName = patternName;
            return this;
        }

        /**
         * @param rank Rank of the log pattern.
         * 
         * @return builder
         * 
         */
        public Builder rank(Integer rank) {
            $.rank = rank;
            return this;
        }

        public ApplicationLogPattern build() {
            $.pattern = Objects.requireNonNull($.pattern, "expected parameter 'pattern' to be non-null");
            $.patternName = Objects.requireNonNull($.patternName, "expected parameter 'patternName' to be non-null");
            $.rank = Objects.requireNonNull($.rank, "expected parameter 'rank' to be non-null");
            return $;
        }
    }

}
