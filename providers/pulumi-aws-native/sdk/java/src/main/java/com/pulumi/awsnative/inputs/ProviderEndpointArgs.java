// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration for for customizing service endpoints.
 * 
 */
public final class ProviderEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderEndpointArgs Empty = new ProviderEndpointArgs();

    /**
     * Override the default endpoint for AWS Access Analyzer
     * 
     */
    @Import(name="accessanalyzer")
    private @Nullable Output<String> accessanalyzer;

    public Optional<Output<String>> accessanalyzer() {
        return Optional.ofNullable(this.accessanalyzer);
    }

    /**
     * Override the default endpoint for AWS Certificate Manager
     * 
     */
    @Import(name="acm")
    private @Nullable Output<String> acm;

    public Optional<Output<String>> acm() {
        return Optional.ofNullable(this.acm);
    }

    /**
     * Override the default endpoint for AWS Certificate Manager Private Certificate Authority
     * 
     */
    @Import(name="acmpca")
    private @Nullable Output<String> acmpca;

    public Optional<Output<String>> acmpca() {
        return Optional.ofNullable(this.acmpca);
    }

    /**
     * Override the default endpoint for AWS Amplify Console
     * 
     */
    @Import(name="amplify")
    private @Nullable Output<String> amplify;

    public Optional<Output<String>> amplify() {
        return Optional.ofNullable(this.amplify);
    }

    /**
     * Override the default endpoint for AWS AppConfig
     * 
     */
    @Import(name="appconfig")
    private @Nullable Output<String> appconfig;

    public Optional<Output<String>> appconfig() {
        return Optional.ofNullable(this.appconfig);
    }

    /**
     * Override the default endpoint for AWS Application Auto Scaling
     * 
     */
    @Import(name="applicationautoscaling")
    private @Nullable Output<String> applicationautoscaling;

    public Optional<Output<String>> applicationautoscaling() {
        return Optional.ofNullable(this.applicationautoscaling);
    }

    /**
     * Override the default endpoint for AWS CloudWatch Application Insights
     * 
     */
    @Import(name="applicationinsights")
    private @Nullable Output<String> applicationinsights;

    public Optional<Output<String>> applicationinsights() {
        return Optional.ofNullable(this.applicationinsights);
    }

    /**
     * Override the default endpoint for AWS App Mesh
     * 
     */
    @Import(name="appmesh")
    private @Nullable Output<String> appmesh;

    public Optional<Output<String>> appmesh() {
        return Optional.ofNullable(this.appmesh);
    }

    /**
     * Override the default endpoint for AWS App Runner
     * 
     */
    @Import(name="apprunner")
    private @Nullable Output<String> apprunner;

    public Optional<Output<String>> apprunner() {
        return Optional.ofNullable(this.apprunner);
    }

    /**
     * Override the default endpoint for AWS AppStream 2.0
     * 
     */
    @Import(name="appstream")
    private @Nullable Output<String> appstream;

    public Optional<Output<String>> appstream() {
        return Optional.ofNullable(this.appstream);
    }

    /**
     * Override the default endpoint for AWS AppSync
     * 
     */
    @Import(name="appsync")
    private @Nullable Output<String> appsync;

    public Optional<Output<String>> appsync() {
        return Optional.ofNullable(this.appsync);
    }

    /**
     * Override the default endpoint for AWS Athena
     * 
     */
    @Import(name="athena")
    private @Nullable Output<String> athena;

    public Optional<Output<String>> athena() {
        return Optional.ofNullable(this.athena);
    }

    /**
     * Override the default endpoint for AWS Audit Manager
     * 
     */
    @Import(name="auditmanager")
    private @Nullable Output<String> auditmanager;

    public Optional<Output<String>> auditmanager() {
        return Optional.ofNullable(this.auditmanager);
    }

    /**
     * Override the default endpoint for AWS Auto Scaling
     * 
     */
    @Import(name="autoscaling")
    private @Nullable Output<String> autoscaling;

    public Optional<Output<String>> autoscaling() {
        return Optional.ofNullable(this.autoscaling);
    }

    /**
     * Override the default endpoint for AWS Backup
     * 
     */
    @Import(name="backup")
    private @Nullable Output<String> backup;

    public Optional<Output<String>> backup() {
        return Optional.ofNullable(this.backup);
    }

    /**
     * Override the default endpoint for AWS Batch
     * 
     */
    @Import(name="batch")
    private @Nullable Output<String> batch;

    public Optional<Output<String>> batch() {
        return Optional.ofNullable(this.batch);
    }

    /**
     * Override the default endpoint for AWS Budgets
     * 
     */
    @Import(name="budgets")
    private @Nullable Output<String> budgets;

    public Optional<Output<String>> budgets() {
        return Optional.ofNullable(this.budgets);
    }

    /**
     * Override the default endpoint for Amazon Chime
     * 
     */
    @Import(name="chime")
    private @Nullable Output<String> chime;

    public Optional<Output<String>> chime() {
        return Optional.ofNullable(this.chime);
    }

    /**
     * Override the default endpoint for AWS Cloud9
     * 
     */
    @Import(name="cloud9")
    private @Nullable Output<String> cloud9;

    public Optional<Output<String>> cloud9() {
        return Optional.ofNullable(this.cloud9);
    }

    /**
     * Override the default endpoint for AWS CloudFormation
     * 
     */
    @Import(name="cloudformation")
    private @Nullable Output<String> cloudformation;

    public Optional<Output<String>> cloudformation() {
        return Optional.ofNullable(this.cloudformation);
    }

    /**
     * Override the default endpoint for AWS CloudFront
     * 
     */
    @Import(name="cloudfront")
    private @Nullable Output<String> cloudfront;

    public Optional<Output<String>> cloudfront() {
        return Optional.ofNullable(this.cloudfront);
    }

    /**
     * Override the default endpoint for AWS CloudHSM
     * 
     */
    @Import(name="cloudhsm")
    private @Nullable Output<String> cloudhsm;

    public Optional<Output<String>> cloudhsm() {
        return Optional.ofNullable(this.cloudhsm);
    }

    /**
     * Override the default endpoint for AWS CloudSearch
     * 
     */
    @Import(name="cloudsearch")
    private @Nullable Output<String> cloudsearch;

    public Optional<Output<String>> cloudsearch() {
        return Optional.ofNullable(this.cloudsearch);
    }

    /**
     * Override the default endpoint for AWS CloudTrail
     * 
     */
    @Import(name="cloudtrail")
    private @Nullable Output<String> cloudtrail;

    public Optional<Output<String>> cloudtrail() {
        return Optional.ofNullable(this.cloudtrail);
    }

    /**
     * Override the default endpoint for AWS CloudWatch
     * 
     */
    @Import(name="cloudwatch")
    private @Nullable Output<String> cloudwatch;

    public Optional<Output<String>> cloudwatch() {
        return Optional.ofNullable(this.cloudwatch);
    }

    /**
     * Override the default endpoint for AWS CloudWatch Events
     * 
     */
    @Import(name="cloudwatchevents")
    private @Nullable Output<String> cloudwatchevents;

    public Optional<Output<String>> cloudwatchevents() {
        return Optional.ofNullable(this.cloudwatchevents);
    }

    /**
     * Override the default endpoint for AWS CloudWatch Logs
     * 
     */
    @Import(name="cloudwatchlogs")
    private @Nullable Output<String> cloudwatchlogs;

    public Optional<Output<String>> cloudwatchlogs() {
        return Optional.ofNullable(this.cloudwatchlogs);
    }

    /**
     * Override the default endpoint for AWS CodeArtifact
     * 
     */
    @Import(name="codeartifact")
    private @Nullable Output<String> codeartifact;

    public Optional<Output<String>> codeartifact() {
        return Optional.ofNullable(this.codeartifact);
    }

    /**
     * Override the default endpoint for AWS CodeBuild
     * 
     */
    @Import(name="codebuild")
    private @Nullable Output<String> codebuild;

    public Optional<Output<String>> codebuild() {
        return Optional.ofNullable(this.codebuild);
    }

    /**
     * Override the default endpoint for AWS CodeCommit
     * 
     */
    @Import(name="codecommit")
    private @Nullable Output<String> codecommit;

    public Optional<Output<String>> codecommit() {
        return Optional.ofNullable(this.codecommit);
    }

    /**
     * Override the default endpoint for AWS CodeDeploy
     * 
     */
    @Import(name="codedeploy")
    private @Nullable Output<String> codedeploy;

    public Optional<Output<String>> codedeploy() {
        return Optional.ofNullable(this.codedeploy);
    }

    /**
     * Override the default endpoint for AWS CodePipeline
     * 
     */
    @Import(name="codepipeline")
    private @Nullable Output<String> codepipeline;

    public Optional<Output<String>> codepipeline() {
        return Optional.ofNullable(this.codepipeline);
    }

    /**
     * Override the default endpoint for AWS CodeStart Connections
     * 
     */
    @Import(name="codestarconnections")
    private @Nullable Output<String> codestarconnections;

    public Optional<Output<String>> codestarconnections() {
        return Optional.ofNullable(this.codestarconnections);
    }

    /**
     * Override the default endpoint for Amazon Cognito
     * 
     */
    @Import(name="cognitoidentity")
    private @Nullable Output<String> cognitoidentity;

    public Optional<Output<String>> cognitoidentity() {
        return Optional.ofNullable(this.cognitoidentity);
    }

    /**
     * Override the default endpoint for AWS Config
     * 
     */
    @Import(name="configservice")
    private @Nullable Output<String> configservice;

    public Optional<Output<String>> configservice() {
        return Optional.ofNullable(this.configservice);
    }

    /**
     * Override the default endpoint for Amazon Connect
     * 
     */
    @Import(name="connect")
    private @Nullable Output<String> connect;

    public Optional<Output<String>> connect() {
        return Optional.ofNullable(this.connect);
    }

    /**
     * Override the default endpoint for AWS Cost and Usage Reports
     * 
     */
    @Import(name="cur")
    private @Nullable Output<String> cur;

    public Optional<Output<String>> cur() {
        return Optional.ofNullable(this.cur);
    }

    /**
     * Override the default endpoint for AWS Data Exchange
     * 
     */
    @Import(name="dataexchange")
    private @Nullable Output<String> dataexchange;

    public Optional<Output<String>> dataexchange() {
        return Optional.ofNullable(this.dataexchange);
    }

    /**
     * Override the default endpoint for AWS Data Pipeline
     * 
     */
    @Import(name="datapipeline")
    private @Nullable Output<String> datapipeline;

    public Optional<Output<String>> datapipeline() {
        return Optional.ofNullable(this.datapipeline);
    }

    /**
     * Override the default endpoint for AWS DataSync
     * 
     */
    @Import(name="datasync")
    private @Nullable Output<String> datasync;

    public Optional<Output<String>> datasync() {
        return Optional.ofNullable(this.datasync);
    }

    /**
     * Override the default endpoint for AWS DynamoDB Accelerator
     * 
     */
    @Import(name="dax")
    private @Nullable Output<String> dax;

    public Optional<Output<String>> dax() {
        return Optional.ofNullable(this.dax);
    }

    /**
     * Override the default endpoint for AWS Detective
     * 
     */
    @Import(name="detective")
    private @Nullable Output<String> detective;

    public Optional<Output<String>> detective() {
        return Optional.ofNullable(this.detective);
    }

    /**
     * Override the default endpoint for AWS Device Farm
     * 
     */
    @Import(name="devicefarm")
    private @Nullable Output<String> devicefarm;

    public Optional<Output<String>> devicefarm() {
        return Optional.ofNullable(this.devicefarm);
    }

    /**
     * Override the default endpoint for AWS Direct Connect
     * 
     */
    @Import(name="directconnect")
    private @Nullable Output<String> directconnect;

    public Optional<Output<String>> directconnect() {
        return Optional.ofNullable(this.directconnect);
    }

    /**
     * Override the default endpoint for AWS Data Lifecycle Manager
     * 
     */
    @Import(name="dlm")
    private @Nullable Output<String> dlm;

    public Optional<Output<String>> dlm() {
        return Optional.ofNullable(this.dlm);
    }

    /**
     * Override the default endpoint for AWS Database Migration Service
     * 
     */
    @Import(name="dms")
    private @Nullable Output<String> dms;

    public Optional<Output<String>> dms() {
        return Optional.ofNullable(this.dms);
    }

    /**
     * Override the default endpoint for AWS DocumentDB
     * 
     */
    @Import(name="docdb")
    private @Nullable Output<String> docdb;

    public Optional<Output<String>> docdb() {
        return Optional.ofNullable(this.docdb);
    }

    /**
     * Override the default endpoint for AWS Directory Service
     * 
     */
    @Import(name="ds")
    private @Nullable Output<String> ds;

    public Optional<Output<String>> ds() {
        return Optional.ofNullable(this.ds);
    }

    /**
     * Override the default endpoint for AWS DynamoDB
     * 
     */
    @Import(name="dynamodb")
    private @Nullable Output<String> dynamodb;

    public Optional<Output<String>> dynamodb() {
        return Optional.ofNullable(this.dynamodb);
    }

    /**
     * Override the default endpoint for AWS Elastic Compute Cloud (EC2)
     * 
     */
    @Import(name="ec2")
    private @Nullable Output<String> ec2;

    public Optional<Output<String>> ec2() {
        return Optional.ofNullable(this.ec2);
    }

    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR)
     * 
     */
    @Import(name="ecr")
    private @Nullable Output<String> ecr;

    public Optional<Output<String>> ecr() {
        return Optional.ofNullable(this.ecr);
    }

    /**
     * Override the default endpoint for AWS Elastic Container Registry (ECR) Public
     * 
     */
    @Import(name="ecrpublic")
    private @Nullable Output<String> ecrpublic;

    public Optional<Output<String>> ecrpublic() {
        return Optional.ofNullable(this.ecrpublic);
    }

    /**
     * Override the default endpoint for AWS Elastic Container Service (ECS)
     * 
     */
    @Import(name="ecs")
    private @Nullable Output<String> ecs;

    public Optional<Output<String>> ecs() {
        return Optional.ofNullable(this.ecs);
    }

    /**
     * Override the default endpoint for AWS Elastic File System (EFS)
     * 
     */
    @Import(name="efs")
    private @Nullable Output<String> efs;

    public Optional<Output<String>> efs() {
        return Optional.ofNullable(this.efs);
    }

    /**
     * Override the default endpoint for AWS Elastic Kubernetes Service (EKS)
     * 
     */
    @Import(name="eks")
    private @Nullable Output<String> eks;

    public Optional<Output<String>> eks() {
        return Optional.ofNullable(this.eks);
    }

    /**
     * Override the default endpoint for AWS ElastiCache
     * 
     */
    @Import(name="elasticache")
    private @Nullable Output<String> elasticache;

    public Optional<Output<String>> elasticache() {
        return Optional.ofNullable(this.elasticache);
    }

    /**
     * Override the default endpoint for AWS Elastic Beanstalk
     * 
     */
    @Import(name="elasticbeanstalk")
    private @Nullable Output<String> elasticbeanstalk;

    public Optional<Output<String>> elasticbeanstalk() {
        return Optional.ofNullable(this.elasticbeanstalk);
    }

    /**
     * Override the default endpoint for AWS Elastic Transcoder
     * 
     */
    @Import(name="elastictranscoder")
    private @Nullable Output<String> elastictranscoder;

    public Optional<Output<String>> elastictranscoder() {
        return Optional.ofNullable(this.elastictranscoder);
    }

    /**
     * Override the default endpoint for AWS Elastic Load Balancing
     * 
     */
    @Import(name="elb")
    private @Nullable Output<String> elb;

    public Optional<Output<String>> elb() {
        return Optional.ofNullable(this.elb);
    }

    /**
     * Override the default endpoint for AWS Elastic Load Balancing V2
     * 
     */
    @Import(name="elbv2")
    private @Nullable Output<String> elbv2;

    public Optional<Output<String>> elbv2() {
        return Optional.ofNullable(this.elbv2);
    }

    /**
     * Override the default endpoint for AWS EMR
     * 
     */
    @Import(name="emr")
    private @Nullable Output<String> emr;

    public Optional<Output<String>> emr() {
        return Optional.ofNullable(this.emr);
    }

    /**
     * Override the default endpoint for AWS EMR on EKS
     * 
     */
    @Import(name="emrcontainers")
    private @Nullable Output<String> emrcontainers;

    public Optional<Output<String>> emrcontainers() {
        return Optional.ofNullable(this.emrcontainers);
    }

    /**
     * Override the default endpoint for AWS OpenSearch Service (formerly Elasticsearch)
     * 
     */
    @Import(name="es")
    private @Nullable Output<String> es;

    public Optional<Output<String>> es() {
        return Optional.ofNullable(this.es);
    }

    /**
     * Override the default endpoint for AWS Kinesis Data Firehose
     * 
     */
    @Import(name="firehose")
    private @Nullable Output<String> firehose;

    public Optional<Output<String>> firehose() {
        return Optional.ofNullable(this.firehose);
    }

    /**
     * Override the default endpoint for AWS Firewall Manager
     * 
     */
    @Import(name="fms")
    private @Nullable Output<String> fms;

    public Optional<Output<String>> fms() {
        return Optional.ofNullable(this.fms);
    }

    /**
     * Override the default endpoint for Amazon Forecast
     * 
     */
    @Import(name="forecast")
    private @Nullable Output<String> forecast;

    public Optional<Output<String>> forecast() {
        return Optional.ofNullable(this.forecast);
    }

    /**
     * Override the default endpoint for AWS FSx
     * 
     */
    @Import(name="fsx")
    private @Nullable Output<String> fsx;

    public Optional<Output<String>> fsx() {
        return Optional.ofNullable(this.fsx);
    }

    /**
     * Override the default endpoint for AWS GameLift
     * 
     */
    @Import(name="gamelift")
    private @Nullable Output<String> gamelift;

    public Optional<Output<String>> gamelift() {
        return Optional.ofNullable(this.gamelift);
    }

    /**
     * Override the default endpoint for Amazon S3 Glacier
     * 
     */
    @Import(name="glacier")
    private @Nullable Output<String> glacier;

    public Optional<Output<String>> glacier() {
        return Optional.ofNullable(this.glacier);
    }

    /**
     * Override the default endpoint for AWS Global Accelerator
     * 
     */
    @Import(name="globalaccelerator")
    private @Nullable Output<String> globalaccelerator;

    public Optional<Output<String>> globalaccelerator() {
        return Optional.ofNullable(this.globalaccelerator);
    }

    /**
     * Override the default endpoint for AWS Glue
     * 
     */
    @Import(name="glue")
    private @Nullable Output<String> glue;

    public Optional<Output<String>> glue() {
        return Optional.ofNullable(this.glue);
    }

    /**
     * Override the default endpoint for AWS IoT Greengrass
     * 
     */
    @Import(name="greengrass")
    private @Nullable Output<String> greengrass;

    public Optional<Output<String>> greengrass() {
        return Optional.ofNullable(this.greengrass);
    }

    /**
     * Override the default endpoint for AWS GuardDuty
     * 
     */
    @Import(name="guardduty")
    private @Nullable Output<String> guardduty;

    public Optional<Output<String>> guardduty() {
        return Optional.ofNullable(this.guardduty);
    }

    /**
     * Override the default endpoint for AWS Identity and Access Management
     * 
     */
    @Import(name="iam")
    private @Nullable Output<String> iam;

    public Optional<Output<String>> iam() {
        return Optional.ofNullable(this.iam);
    }

    /**
     * Override the default endpoint for AWS Single Sign-On (SSO) Identity Store
     * 
     */
    @Import(name="identitystore")
    private @Nullable Output<String> identitystore;

    public Optional<Output<String>> identitystore() {
        return Optional.ofNullable(this.identitystore);
    }

    /**
     * Override the default endpoint for AWS Image Builder
     * 
     */
    @Import(name="imagebuilder")
    private @Nullable Output<String> imagebuilder;

    public Optional<Output<String>> imagebuilder() {
        return Optional.ofNullable(this.imagebuilder);
    }

    /**
     * Override the default endpoint for Amazon Inspector
     * 
     */
    @Import(name="inspector")
    private @Nullable Output<String> inspector;

    public Optional<Output<String>> inspector() {
        return Optional.ofNullable(this.inspector);
    }

    /**
     * Override the default endpoint for AWS IoT
     * 
     */
    @Import(name="iot")
    private @Nullable Output<String> iot;

    public Optional<Output<String>> iot() {
        return Optional.ofNullable(this.iot);
    }

    /**
     * Override the default endpoint for AWS IoT Analytics
     * 
     */
    @Import(name="iotanalytics")
    private @Nullable Output<String> iotanalytics;

    public Optional<Output<String>> iotanalytics() {
        return Optional.ofNullable(this.iotanalytics);
    }

    /**
     * Override the default endpoint for AWS IoT Events
     * 
     */
    @Import(name="iotevents")
    private @Nullable Output<String> iotevents;

    public Optional<Output<String>> iotevents() {
        return Optional.ofNullable(this.iotevents);
    }

    /**
     * Override the default endpoint for Amazon Managed Streaming for Apache Kafka (MSK)
     * 
     */
    @Import(name="kafka")
    private @Nullable Output<String> kafka;

    public Optional<Output<String>> kafka() {
        return Optional.ofNullable(this.kafka);
    }

    /**
     * Override the default endpoint for Amazon Kinesis
     * 
     */
    @Import(name="kinesis")
    private @Nullable Output<String> kinesis;

    public Optional<Output<String>> kinesis() {
        return Optional.ofNullable(this.kinesis);
    }

    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics
     * 
     */
    @Import(name="kinesisanalytics")
    private @Nullable Output<String> kinesisanalytics;

    public Optional<Output<String>> kinesisanalytics() {
        return Optional.ofNullable(this.kinesisanalytics);
    }

    /**
     * Override the default endpoint for Amazon Kinesis Data Analytics V2
     * 
     */
    @Import(name="kinesisanalyticsv2")
    private @Nullable Output<String> kinesisanalyticsv2;

    public Optional<Output<String>> kinesisanalyticsv2() {
        return Optional.ofNullable(this.kinesisanalyticsv2);
    }

    /**
     * Override the default endpoint for Amazon Kinesis Video Streams
     * 
     */
    @Import(name="kinesisvideo")
    private @Nullable Output<String> kinesisvideo;

    public Optional<Output<String>> kinesisvideo() {
        return Optional.ofNullable(this.kinesisvideo);
    }

    /**
     * Override the default endpoint for AWS Key Management Service
     * 
     */
    @Import(name="kms")
    private @Nullable Output<String> kms;

    public Optional<Output<String>> kms() {
        return Optional.ofNullable(this.kms);
    }

    /**
     * Override the default endpoint for AWS Lake Formation
     * 
     */
    @Import(name="lakeformation")
    private @Nullable Output<String> lakeformation;

    public Optional<Output<String>> lakeformation() {
        return Optional.ofNullable(this.lakeformation);
    }

    /**
     * Override the default endpoint for AWS Lambda
     * 
     */
    @Import(name="lambda")
    private @Nullable Output<String> lambda;

    public Optional<Output<String>> lambda() {
        return Optional.ofNullable(this.lambda);
    }

    /**
     * Override the default endpoint for Amazon Lex
     * 
     */
    @Import(name="lexmodels")
    private @Nullable Output<String> lexmodels;

    public Optional<Output<String>> lexmodels() {
        return Optional.ofNullable(this.lexmodels);
    }

    /**
     * Override the default endpoint for AWS License Manager
     * 
     */
    @Import(name="licensemanager")
    private @Nullable Output<String> licensemanager;

    public Optional<Output<String>> licensemanager() {
        return Optional.ofNullable(this.licensemanager);
    }

    /**
     * Override the default endpoint for Amazon Lightsail
     * 
     */
    @Import(name="lightsail")
    private @Nullable Output<String> lightsail;

    public Optional<Output<String>> lightsail() {
        return Optional.ofNullable(this.lightsail);
    }

    /**
     * Override the default endpoint for Amazon Location
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Override the default endpoint for Amazon Macie
     * 
     */
    @Import(name="macie")
    private @Nullable Output<String> macie;

    public Optional<Output<String>> macie() {
        return Optional.ofNullable(this.macie);
    }

    /**
     * Override the default endpoint for Amazon Macie V2
     * 
     */
    @Import(name="macie2")
    private @Nullable Output<String> macie2;

    public Optional<Output<String>> macie2() {
        return Optional.ofNullable(this.macie2);
    }

    /**
     * Override the default endpoint for Amazon Managed Blockchain
     * 
     */
    @Import(name="managedblockchain")
    private @Nullable Output<String> managedblockchain;

    public Optional<Output<String>> managedblockchain() {
        return Optional.ofNullable(this.managedblockchain);
    }

    /**
     * Override the default endpoint for AWS Marketplace Catalog
     * 
     */
    @Import(name="marketplacecatalog")
    private @Nullable Output<String> marketplacecatalog;

    public Optional<Output<String>> marketplacecatalog() {
        return Optional.ofNullable(this.marketplacecatalog);
    }

    /**
     * Override the default endpoint for AWS MediaConnect
     * 
     */
    @Import(name="mediaconnect")
    private @Nullable Output<String> mediaconnect;

    public Optional<Output<String>> mediaconnect() {
        return Optional.ofNullable(this.mediaconnect);
    }

    /**
     * Override the default endpoint for AWS MediaConvert
     * 
     */
    @Import(name="mediaconvert")
    private @Nullable Output<String> mediaconvert;

    public Optional<Output<String>> mediaconvert() {
        return Optional.ofNullable(this.mediaconvert);
    }

    /**
     * Override the default endpoint for AWS MediaLive
     * 
     */
    @Import(name="medialive")
    private @Nullable Output<String> medialive;

    public Optional<Output<String>> medialive() {
        return Optional.ofNullable(this.medialive);
    }

    /**
     * Override the default endpoint for AWS MediaPackage
     * 
     */
    @Import(name="mediapackage")
    private @Nullable Output<String> mediapackage;

    public Optional<Output<String>> mediapackage() {
        return Optional.ofNullable(this.mediapackage);
    }

    /**
     * Override the default endpoint for AWS Elemental MediaStore container
     * 
     */
    @Import(name="mediastore")
    private @Nullable Output<String> mediastore;

    public Optional<Output<String>> mediastore() {
        return Optional.ofNullable(this.mediastore);
    }

    /**
     * Override the default endpoint for AWS Elemental MediaStore asset
     * 
     */
    @Import(name="mediastoredata")
    private @Nullable Output<String> mediastoredata;

    public Optional<Output<String>> mediastoredata() {
        return Optional.ofNullable(this.mediastoredata);
    }

    /**
     * Override the default endpoint for AWS MemoryDB for Redis
     * 
     */
    @Import(name="memorydb")
    private @Nullable Output<String> memorydb;

    public Optional<Output<String>> memorydb() {
        return Optional.ofNullable(this.memorydb);
    }

    /**
     * Override the default endpoint for Amazon MQ
     * 
     */
    @Import(name="mq")
    private @Nullable Output<String> mq;

    public Optional<Output<String>> mq() {
        return Optional.ofNullable(this.mq);
    }

    /**
     * Override the default endpoint for Amazon Managed Workflows for Apache Airflow
     * 
     */
    @Import(name="mwaa")
    private @Nullable Output<String> mwaa;

    public Optional<Output<String>> mwaa() {
        return Optional.ofNullable(this.mwaa);
    }

    /**
     * Override the default endpoint for Amazon Neptune
     * 
     */
    @Import(name="neptune")
    private @Nullable Output<String> neptune;

    public Optional<Output<String>> neptune() {
        return Optional.ofNullable(this.neptune);
    }

    /**
     * Override the default endpoint for AWS Network Firewall
     * 
     */
    @Import(name="networkfirewall")
    private @Nullable Output<String> networkfirewall;

    public Optional<Output<String>> networkfirewall() {
        return Optional.ofNullable(this.networkfirewall);
    }

    /**
     * Override the default endpoint for AWS Network Manager
     * 
     */
    @Import(name="networkmanager")
    private @Nullable Output<String> networkmanager;

    public Optional<Output<String>> networkmanager() {
        return Optional.ofNullable(this.networkmanager);
    }

    /**
     * Override the default endpoint for AWS OpsWorks
     * 
     */
    @Import(name="opsworks")
    private @Nullable Output<String> opsworks;

    public Optional<Output<String>> opsworks() {
        return Optional.ofNullable(this.opsworks);
    }

    /**
     * Override the default endpoint for AWS Organizations
     * 
     */
    @Import(name="organizations")
    private @Nullable Output<String> organizations;

    public Optional<Output<String>> organizations() {
        return Optional.ofNullable(this.organizations);
    }

    /**
     * Override the default endpoint for AWS Outposts
     * 
     */
    @Import(name="outposts")
    private @Nullable Output<String> outposts;

    public Optional<Output<String>> outposts() {
        return Optional.ofNullable(this.outposts);
    }

    /**
     * Override the default endpoint for Amazon Personalize
     * 
     */
    @Import(name="personalize")
    private @Nullable Output<String> personalize;

    public Optional<Output<String>> personalize() {
        return Optional.ofNullable(this.personalize);
    }

    /**
     * Override the default endpoint for Amazon Pinpoint
     * 
     */
    @Import(name="pinpoint")
    private @Nullable Output<String> pinpoint;

    public Optional<Output<String>> pinpoint() {
        return Optional.ofNullable(this.pinpoint);
    }

    /**
     * Override the default endpoint for Amazon Web Services Price List Service
     * 
     */
    @Import(name="pricing")
    private @Nullable Output<String> pricing;

    public Optional<Output<String>> pricing() {
        return Optional.ofNullable(this.pricing);
    }

    /**
     * Override the default endpoint for Amazon QLDB
     * 
     */
    @Import(name="qldb")
    private @Nullable Output<String> qldb;

    public Optional<Output<String>> qldb() {
        return Optional.ofNullable(this.qldb);
    }

    /**
     * Override the default endpoint for Amazon QuickSight
     * 
     */
    @Import(name="quicksight")
    private @Nullable Output<String> quicksight;

    public Optional<Output<String>> quicksight() {
        return Optional.ofNullable(this.quicksight);
    }

    /**
     * Override the default endpoint for AWS Resource Access Manager
     * 
     */
    @Import(name="ram")
    private @Nullable Output<String> ram;

    public Optional<Output<String>> ram() {
        return Optional.ofNullable(this.ram);
    }

    /**
     * Override the default endpoint for Amazon Relational Database Service
     * 
     */
    @Import(name="rds")
    private @Nullable Output<String> rds;

    public Optional<Output<String>> rds() {
        return Optional.ofNullable(this.rds);
    }

    /**
     * Override the default endpoint for Amazon Redshift
     * 
     */
    @Import(name="redshift")
    private @Nullable Output<String> redshift;

    public Optional<Output<String>> redshift() {
        return Optional.ofNullable(this.redshift);
    }

    /**
     * Override the default endpoint for AWS Resource Groups
     * 
     */
    @Import(name="resourcegroups")
    private @Nullable Output<String> resourcegroups;

    public Optional<Output<String>> resourcegroups() {
        return Optional.ofNullable(this.resourcegroups);
    }

    /**
     * Override the default endpoint for AWS Resource Groups Tagging API
     * 
     */
    @Import(name="resourcegroupstaggingapi")
    private @Nullable Output<String> resourcegroupstaggingapi;

    public Optional<Output<String>> resourcegroupstaggingapi() {
        return Optional.ofNullable(this.resourcegroupstaggingapi);
    }

    /**
     * Override the default endpoint for Amazon Route 53
     * 
     */
    @Import(name="route53")
    private @Nullable Output<String> route53;

    public Optional<Output<String>> route53() {
        return Optional.ofNullable(this.route53);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Domains
     * 
     */
    @Import(name="route53domains")
    private @Nullable Output<String> route53domains;

    public Optional<Output<String>> route53domains() {
        return Optional.ofNullable(this.route53domains);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Recovery Control
     * 
     */
    @Import(name="route53recoverycontrolconfig")
    private @Nullable Output<String> route53recoverycontrolconfig;

    public Optional<Output<String>> route53recoverycontrolconfig() {
        return Optional.ofNullable(this.route53recoverycontrolconfig);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Recovery Readiness
     * 
     */
    @Import(name="route53recoveryreadiness")
    private @Nullable Output<String> route53recoveryreadiness;

    public Optional<Output<String>> route53recoveryreadiness() {
        return Optional.ofNullable(this.route53recoveryreadiness);
    }

    /**
     * Override the default endpoint for Amazon Route 53 Resolver
     * 
     */
    @Import(name="route53resolver")
    private @Nullable Output<String> route53resolver;

    public Optional<Output<String>> route53resolver() {
        return Optional.ofNullable(this.route53resolver);
    }

    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3)
     * 
     */
    @Import(name="s3")
    private @Nullable Output<String> s3;

    public Optional<Output<String>> s3() {
        return Optional.ofNullable(this.s3);
    }

    /**
     * Override the default endpoint for Amazon Simple Storage Service (S3) Control
     * 
     */
    @Import(name="s3control")
    private @Nullable Output<String> s3control;

    public Optional<Output<String>> s3control() {
        return Optional.ofNullable(this.s3control);
    }

    /**
     * Override the default endpoint for Amazon S3 on Outposts
     * 
     */
    @Import(name="s3outposts")
    private @Nullable Output<String> s3outposts;

    public Optional<Output<String>> s3outposts() {
        return Optional.ofNullable(this.s3outposts);
    }

    /**
     * Override the default endpoint for AWS SageMaker
     * 
     */
    @Import(name="sagemaker")
    private @Nullable Output<String> sagemaker;

    public Optional<Output<String>> sagemaker() {
        return Optional.ofNullable(this.sagemaker);
    }

    /**
     * Override the default endpoint for Amazon EventBridge Schema Registry
     * 
     */
    @Import(name="schemas")
    private @Nullable Output<String> schemas;

    public Optional<Output<String>> schemas() {
        return Optional.ofNullable(this.schemas);
    }

    /**
     * Override the default endpoint for Amazon SimpleDB
     * 
     */
    @Import(name="sdb")
    private @Nullable Output<String> sdb;

    public Optional<Output<String>> sdb() {
        return Optional.ofNullable(this.sdb);
    }

    /**
     * Override the default endpoint for AWS Secrets Manager
     * 
     */
    @Import(name="secretsmanager")
    private @Nullable Output<String> secretsmanager;

    public Optional<Output<String>> secretsmanager() {
        return Optional.ofNullable(this.secretsmanager);
    }

    /**
     * Override the default endpoint for AWS Security Hub
     * 
     */
    @Import(name="securityhub")
    private @Nullable Output<String> securityhub;

    public Optional<Output<String>> securityhub() {
        return Optional.ofNullable(this.securityhub);
    }

    /**
     * Override the default endpoint for AWS Serverless Application Repository
     * 
     */
    @Import(name="serverlessrepo")
    private @Nullable Output<String> serverlessrepo;

    public Optional<Output<String>> serverlessrepo() {
        return Optional.ofNullable(this.serverlessrepo);
    }

    /**
     * Override the default endpoint for AWS Service Catalog
     * 
     */
    @Import(name="servicecatalog")
    private @Nullable Output<String> servicecatalog;

    public Optional<Output<String>> servicecatalog() {
        return Optional.ofNullable(this.servicecatalog);
    }

    /**
     * Override the default endpoint for AWS Cloud Map
     * 
     */
    @Import(name="servicediscovery")
    private @Nullable Output<String> servicediscovery;

    public Optional<Output<String>> servicediscovery() {
        return Optional.ofNullable(this.servicediscovery);
    }

    /**
     * Override the default endpoint for AWS Service Quotas
     * 
     */
    @Import(name="servicequotas")
    private @Nullable Output<String> servicequotas;

    public Optional<Output<String>> servicequotas() {
        return Optional.ofNullable(this.servicequotas);
    }

    /**
     * Override the default endpoint for Amazon Simple Email Service (SES)
     * 
     */
    @Import(name="ses")
    private @Nullable Output<String> ses;

    public Optional<Output<String>> ses() {
        return Optional.ofNullable(this.ses);
    }

    /**
     * Override the default endpoint for AWS Shield Advanced API
     * 
     */
    @Import(name="shield")
    private @Nullable Output<String> shield;

    public Optional<Output<String>> shield() {
        return Optional.ofNullable(this.shield);
    }

    /**
     * Override the default endpoint for AWS Signer
     * 
     */
    @Import(name="signer")
    private @Nullable Output<String> signer;

    public Optional<Output<String>> signer() {
        return Optional.ofNullable(this.signer);
    }

    /**
     * Override the default endpoint for Amazon Simple Notification Service (SNS)
     * 
     */
    @Import(name="sns")
    private @Nullable Output<String> sns;

    public Optional<Output<String>> sns() {
        return Optional.ofNullable(this.sns);
    }

    /**
     * Override the default endpoint for Amazon Simple Queue Service (SQS)
     * 
     */
    @Import(name="sqs")
    private @Nullable Output<String> sqs;

    public Optional<Output<String>> sqs() {
        return Optional.ofNullable(this.sqs);
    }

    /**
     * Override the default endpoint for AWS Systems Manager
     * 
     */
    @Import(name="ssm")
    private @Nullable Output<String> ssm;

    public Optional<Output<String>> ssm() {
        return Optional.ofNullable(this.ssm);
    }

    /**
     * Override the default endpoint for AWS Single Sign On (SSO)
     * 
     */
    @Import(name="ssoadmin")
    private @Nullable Output<String> ssoadmin;

    public Optional<Output<String>> ssoadmin() {
        return Optional.ofNullable(this.ssoadmin);
    }

    /**
     * Override the default endpoint for AWS Step Functions
     * 
     */
    @Import(name="stepfunctions")
    private @Nullable Output<String> stepfunctions;

    public Optional<Output<String>> stepfunctions() {
        return Optional.ofNullable(this.stepfunctions);
    }

    /**
     * Override the default endpoint for AWS Storage Gateway
     * 
     */
    @Import(name="storagegateway")
    private @Nullable Output<String> storagegateway;

    public Optional<Output<String>> storagegateway() {
        return Optional.ofNullable(this.storagegateway);
    }

    /**
     * Override the default endpoint for AWS Security Token Service (STS)
     * 
     */
    @Import(name="sts")
    private @Nullable Output<String> sts;

    public Optional<Output<String>> sts() {
        return Optional.ofNullable(this.sts);
    }

    /**
     * Override the default endpoint for Amazon Simple Workflow Service (SWF)
     * 
     */
    @Import(name="swf")
    private @Nullable Output<String> swf;

    public Optional<Output<String>> swf() {
        return Optional.ofNullable(this.swf);
    }

    /**
     * Override the default endpoint for Amazon CloudWatch Synthetics
     * 
     */
    @Import(name="synthetics")
    private @Nullable Output<String> synthetics;

    public Optional<Output<String>> synthetics() {
        return Optional.ofNullable(this.synthetics);
    }

    /**
     * Override the default endpoint for Amazon Timestream
     * 
     */
    @Import(name="timestreamwrite")
    private @Nullable Output<String> timestreamwrite;

    public Optional<Output<String>> timestreamwrite() {
        return Optional.ofNullable(this.timestreamwrite);
    }

    /**
     * Override the default endpoint for AWS Transfer Family
     * 
     */
    @Import(name="transfer")
    private @Nullable Output<String> transfer;

    public Optional<Output<String>> transfer() {
        return Optional.ofNullable(this.transfer);
    }

    /**
     * Override the default endpoint for AWS WAF Classic
     * 
     */
    @Import(name="waf")
    private @Nullable Output<String> waf;

    public Optional<Output<String>> waf() {
        return Optional.ofNullable(this.waf);
    }

    /**
     * Override the default endpoint for AWS WAF Regional Classic
     * 
     */
    @Import(name="wafregional")
    private @Nullable Output<String> wafregional;

    public Optional<Output<String>> wafregional() {
        return Optional.ofNullable(this.wafregional);
    }

    /**
     * Override the default endpoint for AWS WAF V2
     * 
     */
    @Import(name="wafv2")
    private @Nullable Output<String> wafv2;

    public Optional<Output<String>> wafv2() {
        return Optional.ofNullable(this.wafv2);
    }

    /**
     * Override the default endpoint for Amazon WorkLink
     * 
     */
    @Import(name="worklink")
    private @Nullable Output<String> worklink;

    public Optional<Output<String>> worklink() {
        return Optional.ofNullable(this.worklink);
    }

    /**
     * Override the default endpoint for Amazon WorkMail
     * 
     */
    @Import(name="workmail")
    private @Nullable Output<String> workmail;

    public Optional<Output<String>> workmail() {
        return Optional.ofNullable(this.workmail);
    }

    /**
     * Override the default endpoint for Amazon WorkSpaces
     * 
     */
    @Import(name="workspaces")
    private @Nullable Output<String> workspaces;

    public Optional<Output<String>> workspaces() {
        return Optional.ofNullable(this.workspaces);
    }

    /**
     * Override the default endpoint for AWS X-Ray
     * 
     */
    @Import(name="xray")
    private @Nullable Output<String> xray;

    public Optional<Output<String>> xray() {
        return Optional.ofNullable(this.xray);
    }

    private ProviderEndpointArgs() {}

    private ProviderEndpointArgs(ProviderEndpointArgs $) {
        this.accessanalyzer = $.accessanalyzer;
        this.acm = $.acm;
        this.acmpca = $.acmpca;
        this.amplify = $.amplify;
        this.appconfig = $.appconfig;
        this.applicationautoscaling = $.applicationautoscaling;
        this.applicationinsights = $.applicationinsights;
        this.appmesh = $.appmesh;
        this.apprunner = $.apprunner;
        this.appstream = $.appstream;
        this.appsync = $.appsync;
        this.athena = $.athena;
        this.auditmanager = $.auditmanager;
        this.autoscaling = $.autoscaling;
        this.backup = $.backup;
        this.batch = $.batch;
        this.budgets = $.budgets;
        this.chime = $.chime;
        this.cloud9 = $.cloud9;
        this.cloudformation = $.cloudformation;
        this.cloudfront = $.cloudfront;
        this.cloudhsm = $.cloudhsm;
        this.cloudsearch = $.cloudsearch;
        this.cloudtrail = $.cloudtrail;
        this.cloudwatch = $.cloudwatch;
        this.cloudwatchevents = $.cloudwatchevents;
        this.cloudwatchlogs = $.cloudwatchlogs;
        this.codeartifact = $.codeartifact;
        this.codebuild = $.codebuild;
        this.codecommit = $.codecommit;
        this.codedeploy = $.codedeploy;
        this.codepipeline = $.codepipeline;
        this.codestarconnections = $.codestarconnections;
        this.cognitoidentity = $.cognitoidentity;
        this.configservice = $.configservice;
        this.connect = $.connect;
        this.cur = $.cur;
        this.dataexchange = $.dataexchange;
        this.datapipeline = $.datapipeline;
        this.datasync = $.datasync;
        this.dax = $.dax;
        this.detective = $.detective;
        this.devicefarm = $.devicefarm;
        this.directconnect = $.directconnect;
        this.dlm = $.dlm;
        this.dms = $.dms;
        this.docdb = $.docdb;
        this.ds = $.ds;
        this.dynamodb = $.dynamodb;
        this.ec2 = $.ec2;
        this.ecr = $.ecr;
        this.ecrpublic = $.ecrpublic;
        this.ecs = $.ecs;
        this.efs = $.efs;
        this.eks = $.eks;
        this.elasticache = $.elasticache;
        this.elasticbeanstalk = $.elasticbeanstalk;
        this.elastictranscoder = $.elastictranscoder;
        this.elb = $.elb;
        this.elbv2 = $.elbv2;
        this.emr = $.emr;
        this.emrcontainers = $.emrcontainers;
        this.es = $.es;
        this.firehose = $.firehose;
        this.fms = $.fms;
        this.forecast = $.forecast;
        this.fsx = $.fsx;
        this.gamelift = $.gamelift;
        this.glacier = $.glacier;
        this.globalaccelerator = $.globalaccelerator;
        this.glue = $.glue;
        this.greengrass = $.greengrass;
        this.guardduty = $.guardduty;
        this.iam = $.iam;
        this.identitystore = $.identitystore;
        this.imagebuilder = $.imagebuilder;
        this.inspector = $.inspector;
        this.iot = $.iot;
        this.iotanalytics = $.iotanalytics;
        this.iotevents = $.iotevents;
        this.kafka = $.kafka;
        this.kinesis = $.kinesis;
        this.kinesisanalytics = $.kinesisanalytics;
        this.kinesisanalyticsv2 = $.kinesisanalyticsv2;
        this.kinesisvideo = $.kinesisvideo;
        this.kms = $.kms;
        this.lakeformation = $.lakeformation;
        this.lambda = $.lambda;
        this.lexmodels = $.lexmodels;
        this.licensemanager = $.licensemanager;
        this.lightsail = $.lightsail;
        this.location = $.location;
        this.macie = $.macie;
        this.macie2 = $.macie2;
        this.managedblockchain = $.managedblockchain;
        this.marketplacecatalog = $.marketplacecatalog;
        this.mediaconnect = $.mediaconnect;
        this.mediaconvert = $.mediaconvert;
        this.medialive = $.medialive;
        this.mediapackage = $.mediapackage;
        this.mediastore = $.mediastore;
        this.mediastoredata = $.mediastoredata;
        this.memorydb = $.memorydb;
        this.mq = $.mq;
        this.mwaa = $.mwaa;
        this.neptune = $.neptune;
        this.networkfirewall = $.networkfirewall;
        this.networkmanager = $.networkmanager;
        this.opsworks = $.opsworks;
        this.organizations = $.organizations;
        this.outposts = $.outposts;
        this.personalize = $.personalize;
        this.pinpoint = $.pinpoint;
        this.pricing = $.pricing;
        this.qldb = $.qldb;
        this.quicksight = $.quicksight;
        this.ram = $.ram;
        this.rds = $.rds;
        this.redshift = $.redshift;
        this.resourcegroups = $.resourcegroups;
        this.resourcegroupstaggingapi = $.resourcegroupstaggingapi;
        this.route53 = $.route53;
        this.route53domains = $.route53domains;
        this.route53recoverycontrolconfig = $.route53recoverycontrolconfig;
        this.route53recoveryreadiness = $.route53recoveryreadiness;
        this.route53resolver = $.route53resolver;
        this.s3 = $.s3;
        this.s3control = $.s3control;
        this.s3outposts = $.s3outposts;
        this.sagemaker = $.sagemaker;
        this.schemas = $.schemas;
        this.sdb = $.sdb;
        this.secretsmanager = $.secretsmanager;
        this.securityhub = $.securityhub;
        this.serverlessrepo = $.serverlessrepo;
        this.servicecatalog = $.servicecatalog;
        this.servicediscovery = $.servicediscovery;
        this.servicequotas = $.servicequotas;
        this.ses = $.ses;
        this.shield = $.shield;
        this.signer = $.signer;
        this.sns = $.sns;
        this.sqs = $.sqs;
        this.ssm = $.ssm;
        this.ssoadmin = $.ssoadmin;
        this.stepfunctions = $.stepfunctions;
        this.storagegateway = $.storagegateway;
        this.sts = $.sts;
        this.swf = $.swf;
        this.synthetics = $.synthetics;
        this.timestreamwrite = $.timestreamwrite;
        this.transfer = $.transfer;
        this.waf = $.waf;
        this.wafregional = $.wafregional;
        this.wafv2 = $.wafv2;
        this.worklink = $.worklink;
        this.workmail = $.workmail;
        this.workspaces = $.workspaces;
        this.xray = $.xray;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderEndpointArgs $;

        public Builder() {
            $ = new ProviderEndpointArgs();
        }

        public Builder(ProviderEndpointArgs defaults) {
            $ = new ProviderEndpointArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessanalyzer(@Nullable Output<String> accessanalyzer) {
            $.accessanalyzer = accessanalyzer;
            return this;
        }

        public Builder accessanalyzer(String accessanalyzer) {
            return accessanalyzer(Output.of(accessanalyzer));
        }

        public Builder acm(@Nullable Output<String> acm) {
            $.acm = acm;
            return this;
        }

        public Builder acm(String acm) {
            return acm(Output.of(acm));
        }

        public Builder acmpca(@Nullable Output<String> acmpca) {
            $.acmpca = acmpca;
            return this;
        }

        public Builder acmpca(String acmpca) {
            return acmpca(Output.of(acmpca));
        }

        public Builder amplify(@Nullable Output<String> amplify) {
            $.amplify = amplify;
            return this;
        }

        public Builder amplify(String amplify) {
            return amplify(Output.of(amplify));
        }

        public Builder appconfig(@Nullable Output<String> appconfig) {
            $.appconfig = appconfig;
            return this;
        }

        public Builder appconfig(String appconfig) {
            return appconfig(Output.of(appconfig));
        }

        public Builder applicationautoscaling(@Nullable Output<String> applicationautoscaling) {
            $.applicationautoscaling = applicationautoscaling;
            return this;
        }

        public Builder applicationautoscaling(String applicationautoscaling) {
            return applicationautoscaling(Output.of(applicationautoscaling));
        }

        public Builder applicationinsights(@Nullable Output<String> applicationinsights) {
            $.applicationinsights = applicationinsights;
            return this;
        }

        public Builder applicationinsights(String applicationinsights) {
            return applicationinsights(Output.of(applicationinsights));
        }

        public Builder appmesh(@Nullable Output<String> appmesh) {
            $.appmesh = appmesh;
            return this;
        }

        public Builder appmesh(String appmesh) {
            return appmesh(Output.of(appmesh));
        }

        public Builder apprunner(@Nullable Output<String> apprunner) {
            $.apprunner = apprunner;
            return this;
        }

        public Builder apprunner(String apprunner) {
            return apprunner(Output.of(apprunner));
        }

        public Builder appstream(@Nullable Output<String> appstream) {
            $.appstream = appstream;
            return this;
        }

        public Builder appstream(String appstream) {
            return appstream(Output.of(appstream));
        }

        public Builder appsync(@Nullable Output<String> appsync) {
            $.appsync = appsync;
            return this;
        }

        public Builder appsync(String appsync) {
            return appsync(Output.of(appsync));
        }

        public Builder athena(@Nullable Output<String> athena) {
            $.athena = athena;
            return this;
        }

        public Builder athena(String athena) {
            return athena(Output.of(athena));
        }

        public Builder auditmanager(@Nullable Output<String> auditmanager) {
            $.auditmanager = auditmanager;
            return this;
        }

        public Builder auditmanager(String auditmanager) {
            return auditmanager(Output.of(auditmanager));
        }

        public Builder autoscaling(@Nullable Output<String> autoscaling) {
            $.autoscaling = autoscaling;
            return this;
        }

        public Builder autoscaling(String autoscaling) {
            return autoscaling(Output.of(autoscaling));
        }

        public Builder backup(@Nullable Output<String> backup) {
            $.backup = backup;
            return this;
        }

        public Builder backup(String backup) {
            return backup(Output.of(backup));
        }

        public Builder batch(@Nullable Output<String> batch) {
            $.batch = batch;
            return this;
        }

        public Builder batch(String batch) {
            return batch(Output.of(batch));
        }

        public Builder budgets(@Nullable Output<String> budgets) {
            $.budgets = budgets;
            return this;
        }

        public Builder budgets(String budgets) {
            return budgets(Output.of(budgets));
        }

        public Builder chime(@Nullable Output<String> chime) {
            $.chime = chime;
            return this;
        }

        public Builder chime(String chime) {
            return chime(Output.of(chime));
        }

        public Builder cloud9(@Nullable Output<String> cloud9) {
            $.cloud9 = cloud9;
            return this;
        }

        public Builder cloud9(String cloud9) {
            return cloud9(Output.of(cloud9));
        }

        public Builder cloudformation(@Nullable Output<String> cloudformation) {
            $.cloudformation = cloudformation;
            return this;
        }

        public Builder cloudformation(String cloudformation) {
            return cloudformation(Output.of(cloudformation));
        }

        public Builder cloudfront(@Nullable Output<String> cloudfront) {
            $.cloudfront = cloudfront;
            return this;
        }

        public Builder cloudfront(String cloudfront) {
            return cloudfront(Output.of(cloudfront));
        }

        public Builder cloudhsm(@Nullable Output<String> cloudhsm) {
            $.cloudhsm = cloudhsm;
            return this;
        }

        public Builder cloudhsm(String cloudhsm) {
            return cloudhsm(Output.of(cloudhsm));
        }

        public Builder cloudsearch(@Nullable Output<String> cloudsearch) {
            $.cloudsearch = cloudsearch;
            return this;
        }

        public Builder cloudsearch(String cloudsearch) {
            return cloudsearch(Output.of(cloudsearch));
        }

        public Builder cloudtrail(@Nullable Output<String> cloudtrail) {
            $.cloudtrail = cloudtrail;
            return this;
        }

        public Builder cloudtrail(String cloudtrail) {
            return cloudtrail(Output.of(cloudtrail));
        }

        public Builder cloudwatch(@Nullable Output<String> cloudwatch) {
            $.cloudwatch = cloudwatch;
            return this;
        }

        public Builder cloudwatch(String cloudwatch) {
            return cloudwatch(Output.of(cloudwatch));
        }

        public Builder cloudwatchevents(@Nullable Output<String> cloudwatchevents) {
            $.cloudwatchevents = cloudwatchevents;
            return this;
        }

        public Builder cloudwatchevents(String cloudwatchevents) {
            return cloudwatchevents(Output.of(cloudwatchevents));
        }

        public Builder cloudwatchlogs(@Nullable Output<String> cloudwatchlogs) {
            $.cloudwatchlogs = cloudwatchlogs;
            return this;
        }

        public Builder cloudwatchlogs(String cloudwatchlogs) {
            return cloudwatchlogs(Output.of(cloudwatchlogs));
        }

        public Builder codeartifact(@Nullable Output<String> codeartifact) {
            $.codeartifact = codeartifact;
            return this;
        }

        public Builder codeartifact(String codeartifact) {
            return codeartifact(Output.of(codeartifact));
        }

        public Builder codebuild(@Nullable Output<String> codebuild) {
            $.codebuild = codebuild;
            return this;
        }

        public Builder codebuild(String codebuild) {
            return codebuild(Output.of(codebuild));
        }

        public Builder codecommit(@Nullable Output<String> codecommit) {
            $.codecommit = codecommit;
            return this;
        }

        public Builder codecommit(String codecommit) {
            return codecommit(Output.of(codecommit));
        }

        public Builder codedeploy(@Nullable Output<String> codedeploy) {
            $.codedeploy = codedeploy;
            return this;
        }

        public Builder codedeploy(String codedeploy) {
            return codedeploy(Output.of(codedeploy));
        }

        public Builder codepipeline(@Nullable Output<String> codepipeline) {
            $.codepipeline = codepipeline;
            return this;
        }

        public Builder codepipeline(String codepipeline) {
            return codepipeline(Output.of(codepipeline));
        }

        public Builder codestarconnections(@Nullable Output<String> codestarconnections) {
            $.codestarconnections = codestarconnections;
            return this;
        }

        public Builder codestarconnections(String codestarconnections) {
            return codestarconnections(Output.of(codestarconnections));
        }

        public Builder cognitoidentity(@Nullable Output<String> cognitoidentity) {
            $.cognitoidentity = cognitoidentity;
            return this;
        }

        public Builder cognitoidentity(String cognitoidentity) {
            return cognitoidentity(Output.of(cognitoidentity));
        }

        public Builder configservice(@Nullable Output<String> configservice) {
            $.configservice = configservice;
            return this;
        }

        public Builder configservice(String configservice) {
            return configservice(Output.of(configservice));
        }

        public Builder connect(@Nullable Output<String> connect) {
            $.connect = connect;
            return this;
        }

        public Builder connect(String connect) {
            return connect(Output.of(connect));
        }

        public Builder cur(@Nullable Output<String> cur) {
            $.cur = cur;
            return this;
        }

        public Builder cur(String cur) {
            return cur(Output.of(cur));
        }

        public Builder dataexchange(@Nullable Output<String> dataexchange) {
            $.dataexchange = dataexchange;
            return this;
        }

        public Builder dataexchange(String dataexchange) {
            return dataexchange(Output.of(dataexchange));
        }

        public Builder datapipeline(@Nullable Output<String> datapipeline) {
            $.datapipeline = datapipeline;
            return this;
        }

        public Builder datapipeline(String datapipeline) {
            return datapipeline(Output.of(datapipeline));
        }

        public Builder datasync(@Nullable Output<String> datasync) {
            $.datasync = datasync;
            return this;
        }

        public Builder datasync(String datasync) {
            return datasync(Output.of(datasync));
        }

        public Builder dax(@Nullable Output<String> dax) {
            $.dax = dax;
            return this;
        }

        public Builder dax(String dax) {
            return dax(Output.of(dax));
        }

        public Builder detective(@Nullable Output<String> detective) {
            $.detective = detective;
            return this;
        }

        public Builder detective(String detective) {
            return detective(Output.of(detective));
        }

        public Builder devicefarm(@Nullable Output<String> devicefarm) {
            $.devicefarm = devicefarm;
            return this;
        }

        public Builder devicefarm(String devicefarm) {
            return devicefarm(Output.of(devicefarm));
        }

        public Builder directconnect(@Nullable Output<String> directconnect) {
            $.directconnect = directconnect;
            return this;
        }

        public Builder directconnect(String directconnect) {
            return directconnect(Output.of(directconnect));
        }

        public Builder dlm(@Nullable Output<String> dlm) {
            $.dlm = dlm;
            return this;
        }

        public Builder dlm(String dlm) {
            return dlm(Output.of(dlm));
        }

        public Builder dms(@Nullable Output<String> dms) {
            $.dms = dms;
            return this;
        }

        public Builder dms(String dms) {
            return dms(Output.of(dms));
        }

        public Builder docdb(@Nullable Output<String> docdb) {
            $.docdb = docdb;
            return this;
        }

        public Builder docdb(String docdb) {
            return docdb(Output.of(docdb));
        }

        public Builder ds(@Nullable Output<String> ds) {
            $.ds = ds;
            return this;
        }

        public Builder ds(String ds) {
            return ds(Output.of(ds));
        }

        public Builder dynamodb(@Nullable Output<String> dynamodb) {
            $.dynamodb = dynamodb;
            return this;
        }

        public Builder dynamodb(String dynamodb) {
            return dynamodb(Output.of(dynamodb));
        }

        public Builder ec2(@Nullable Output<String> ec2) {
            $.ec2 = ec2;
            return this;
        }

        public Builder ec2(String ec2) {
            return ec2(Output.of(ec2));
        }

        public Builder ecr(@Nullable Output<String> ecr) {
            $.ecr = ecr;
            return this;
        }

        public Builder ecr(String ecr) {
            return ecr(Output.of(ecr));
        }

        public Builder ecrpublic(@Nullable Output<String> ecrpublic) {
            $.ecrpublic = ecrpublic;
            return this;
        }

        public Builder ecrpublic(String ecrpublic) {
            return ecrpublic(Output.of(ecrpublic));
        }

        public Builder ecs(@Nullable Output<String> ecs) {
            $.ecs = ecs;
            return this;
        }

        public Builder ecs(String ecs) {
            return ecs(Output.of(ecs));
        }

        public Builder efs(@Nullable Output<String> efs) {
            $.efs = efs;
            return this;
        }

        public Builder efs(String efs) {
            return efs(Output.of(efs));
        }

        public Builder eks(@Nullable Output<String> eks) {
            $.eks = eks;
            return this;
        }

        public Builder eks(String eks) {
            return eks(Output.of(eks));
        }

        public Builder elasticache(@Nullable Output<String> elasticache) {
            $.elasticache = elasticache;
            return this;
        }

        public Builder elasticache(String elasticache) {
            return elasticache(Output.of(elasticache));
        }

        public Builder elasticbeanstalk(@Nullable Output<String> elasticbeanstalk) {
            $.elasticbeanstalk = elasticbeanstalk;
            return this;
        }

        public Builder elasticbeanstalk(String elasticbeanstalk) {
            return elasticbeanstalk(Output.of(elasticbeanstalk));
        }

        public Builder elastictranscoder(@Nullable Output<String> elastictranscoder) {
            $.elastictranscoder = elastictranscoder;
            return this;
        }

        public Builder elastictranscoder(String elastictranscoder) {
            return elastictranscoder(Output.of(elastictranscoder));
        }

        public Builder elb(@Nullable Output<String> elb) {
            $.elb = elb;
            return this;
        }

        public Builder elb(String elb) {
            return elb(Output.of(elb));
        }

        public Builder elbv2(@Nullable Output<String> elbv2) {
            $.elbv2 = elbv2;
            return this;
        }

        public Builder elbv2(String elbv2) {
            return elbv2(Output.of(elbv2));
        }

        public Builder emr(@Nullable Output<String> emr) {
            $.emr = emr;
            return this;
        }

        public Builder emr(String emr) {
            return emr(Output.of(emr));
        }

        public Builder emrcontainers(@Nullable Output<String> emrcontainers) {
            $.emrcontainers = emrcontainers;
            return this;
        }

        public Builder emrcontainers(String emrcontainers) {
            return emrcontainers(Output.of(emrcontainers));
        }

        public Builder es(@Nullable Output<String> es) {
            $.es = es;
            return this;
        }

        public Builder es(String es) {
            return es(Output.of(es));
        }

        public Builder firehose(@Nullable Output<String> firehose) {
            $.firehose = firehose;
            return this;
        }

        public Builder firehose(String firehose) {
            return firehose(Output.of(firehose));
        }

        public Builder fms(@Nullable Output<String> fms) {
            $.fms = fms;
            return this;
        }

        public Builder fms(String fms) {
            return fms(Output.of(fms));
        }

        public Builder forecast(@Nullable Output<String> forecast) {
            $.forecast = forecast;
            return this;
        }

        public Builder forecast(String forecast) {
            return forecast(Output.of(forecast));
        }

        public Builder fsx(@Nullable Output<String> fsx) {
            $.fsx = fsx;
            return this;
        }

        public Builder fsx(String fsx) {
            return fsx(Output.of(fsx));
        }

        public Builder gamelift(@Nullable Output<String> gamelift) {
            $.gamelift = gamelift;
            return this;
        }

        public Builder gamelift(String gamelift) {
            return gamelift(Output.of(gamelift));
        }

        public Builder glacier(@Nullable Output<String> glacier) {
            $.glacier = glacier;
            return this;
        }

        public Builder glacier(String glacier) {
            return glacier(Output.of(glacier));
        }

        public Builder globalaccelerator(@Nullable Output<String> globalaccelerator) {
            $.globalaccelerator = globalaccelerator;
            return this;
        }

        public Builder globalaccelerator(String globalaccelerator) {
            return globalaccelerator(Output.of(globalaccelerator));
        }

        public Builder glue(@Nullable Output<String> glue) {
            $.glue = glue;
            return this;
        }

        public Builder glue(String glue) {
            return glue(Output.of(glue));
        }

        public Builder greengrass(@Nullable Output<String> greengrass) {
            $.greengrass = greengrass;
            return this;
        }

        public Builder greengrass(String greengrass) {
            return greengrass(Output.of(greengrass));
        }

        public Builder guardduty(@Nullable Output<String> guardduty) {
            $.guardduty = guardduty;
            return this;
        }

        public Builder guardduty(String guardduty) {
            return guardduty(Output.of(guardduty));
        }

        public Builder iam(@Nullable Output<String> iam) {
            $.iam = iam;
            return this;
        }

        public Builder iam(String iam) {
            return iam(Output.of(iam));
        }

        public Builder identitystore(@Nullable Output<String> identitystore) {
            $.identitystore = identitystore;
            return this;
        }

        public Builder identitystore(String identitystore) {
            return identitystore(Output.of(identitystore));
        }

        public Builder imagebuilder(@Nullable Output<String> imagebuilder) {
            $.imagebuilder = imagebuilder;
            return this;
        }

        public Builder imagebuilder(String imagebuilder) {
            return imagebuilder(Output.of(imagebuilder));
        }

        public Builder inspector(@Nullable Output<String> inspector) {
            $.inspector = inspector;
            return this;
        }

        public Builder inspector(String inspector) {
            return inspector(Output.of(inspector));
        }

        public Builder iot(@Nullable Output<String> iot) {
            $.iot = iot;
            return this;
        }

        public Builder iot(String iot) {
            return iot(Output.of(iot));
        }

        public Builder iotanalytics(@Nullable Output<String> iotanalytics) {
            $.iotanalytics = iotanalytics;
            return this;
        }

        public Builder iotanalytics(String iotanalytics) {
            return iotanalytics(Output.of(iotanalytics));
        }

        public Builder iotevents(@Nullable Output<String> iotevents) {
            $.iotevents = iotevents;
            return this;
        }

        public Builder iotevents(String iotevents) {
            return iotevents(Output.of(iotevents));
        }

        public Builder kafka(@Nullable Output<String> kafka) {
            $.kafka = kafka;
            return this;
        }

        public Builder kafka(String kafka) {
            return kafka(Output.of(kafka));
        }

        public Builder kinesis(@Nullable Output<String> kinesis) {
            $.kinesis = kinesis;
            return this;
        }

        public Builder kinesis(String kinesis) {
            return kinesis(Output.of(kinesis));
        }

        public Builder kinesisanalytics(@Nullable Output<String> kinesisanalytics) {
            $.kinesisanalytics = kinesisanalytics;
            return this;
        }

        public Builder kinesisanalytics(String kinesisanalytics) {
            return kinesisanalytics(Output.of(kinesisanalytics));
        }

        public Builder kinesisanalyticsv2(@Nullable Output<String> kinesisanalyticsv2) {
            $.kinesisanalyticsv2 = kinesisanalyticsv2;
            return this;
        }

        public Builder kinesisanalyticsv2(String kinesisanalyticsv2) {
            return kinesisanalyticsv2(Output.of(kinesisanalyticsv2));
        }

        public Builder kinesisvideo(@Nullable Output<String> kinesisvideo) {
            $.kinesisvideo = kinesisvideo;
            return this;
        }

        public Builder kinesisvideo(String kinesisvideo) {
            return kinesisvideo(Output.of(kinesisvideo));
        }

        public Builder kms(@Nullable Output<String> kms) {
            $.kms = kms;
            return this;
        }

        public Builder kms(String kms) {
            return kms(Output.of(kms));
        }

        public Builder lakeformation(@Nullable Output<String> lakeformation) {
            $.lakeformation = lakeformation;
            return this;
        }

        public Builder lakeformation(String lakeformation) {
            return lakeformation(Output.of(lakeformation));
        }

        public Builder lambda(@Nullable Output<String> lambda) {
            $.lambda = lambda;
            return this;
        }

        public Builder lambda(String lambda) {
            return lambda(Output.of(lambda));
        }

        public Builder lexmodels(@Nullable Output<String> lexmodels) {
            $.lexmodels = lexmodels;
            return this;
        }

        public Builder lexmodels(String lexmodels) {
            return lexmodels(Output.of(lexmodels));
        }

        public Builder licensemanager(@Nullable Output<String> licensemanager) {
            $.licensemanager = licensemanager;
            return this;
        }

        public Builder licensemanager(String licensemanager) {
            return licensemanager(Output.of(licensemanager));
        }

        public Builder lightsail(@Nullable Output<String> lightsail) {
            $.lightsail = lightsail;
            return this;
        }

        public Builder lightsail(String lightsail) {
            return lightsail(Output.of(lightsail));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder macie(@Nullable Output<String> macie) {
            $.macie = macie;
            return this;
        }

        public Builder macie(String macie) {
            return macie(Output.of(macie));
        }

        public Builder macie2(@Nullable Output<String> macie2) {
            $.macie2 = macie2;
            return this;
        }

        public Builder macie2(String macie2) {
            return macie2(Output.of(macie2));
        }

        public Builder managedblockchain(@Nullable Output<String> managedblockchain) {
            $.managedblockchain = managedblockchain;
            return this;
        }

        public Builder managedblockchain(String managedblockchain) {
            return managedblockchain(Output.of(managedblockchain));
        }

        public Builder marketplacecatalog(@Nullable Output<String> marketplacecatalog) {
            $.marketplacecatalog = marketplacecatalog;
            return this;
        }

        public Builder marketplacecatalog(String marketplacecatalog) {
            return marketplacecatalog(Output.of(marketplacecatalog));
        }

        public Builder mediaconnect(@Nullable Output<String> mediaconnect) {
            $.mediaconnect = mediaconnect;
            return this;
        }

        public Builder mediaconnect(String mediaconnect) {
            return mediaconnect(Output.of(mediaconnect));
        }

        public Builder mediaconvert(@Nullable Output<String> mediaconvert) {
            $.mediaconvert = mediaconvert;
            return this;
        }

        public Builder mediaconvert(String mediaconvert) {
            return mediaconvert(Output.of(mediaconvert));
        }

        public Builder medialive(@Nullable Output<String> medialive) {
            $.medialive = medialive;
            return this;
        }

        public Builder medialive(String medialive) {
            return medialive(Output.of(medialive));
        }

        public Builder mediapackage(@Nullable Output<String> mediapackage) {
            $.mediapackage = mediapackage;
            return this;
        }

        public Builder mediapackage(String mediapackage) {
            return mediapackage(Output.of(mediapackage));
        }

        public Builder mediastore(@Nullable Output<String> mediastore) {
            $.mediastore = mediastore;
            return this;
        }

        public Builder mediastore(String mediastore) {
            return mediastore(Output.of(mediastore));
        }

        public Builder mediastoredata(@Nullable Output<String> mediastoredata) {
            $.mediastoredata = mediastoredata;
            return this;
        }

        public Builder mediastoredata(String mediastoredata) {
            return mediastoredata(Output.of(mediastoredata));
        }

        public Builder memorydb(@Nullable Output<String> memorydb) {
            $.memorydb = memorydb;
            return this;
        }

        public Builder memorydb(String memorydb) {
            return memorydb(Output.of(memorydb));
        }

        public Builder mq(@Nullable Output<String> mq) {
            $.mq = mq;
            return this;
        }

        public Builder mq(String mq) {
            return mq(Output.of(mq));
        }

        public Builder mwaa(@Nullable Output<String> mwaa) {
            $.mwaa = mwaa;
            return this;
        }

        public Builder mwaa(String mwaa) {
            return mwaa(Output.of(mwaa));
        }

        public Builder neptune(@Nullable Output<String> neptune) {
            $.neptune = neptune;
            return this;
        }

        public Builder neptune(String neptune) {
            return neptune(Output.of(neptune));
        }

        public Builder networkfirewall(@Nullable Output<String> networkfirewall) {
            $.networkfirewall = networkfirewall;
            return this;
        }

        public Builder networkfirewall(String networkfirewall) {
            return networkfirewall(Output.of(networkfirewall));
        }

        public Builder networkmanager(@Nullable Output<String> networkmanager) {
            $.networkmanager = networkmanager;
            return this;
        }

        public Builder networkmanager(String networkmanager) {
            return networkmanager(Output.of(networkmanager));
        }

        public Builder opsworks(@Nullable Output<String> opsworks) {
            $.opsworks = opsworks;
            return this;
        }

        public Builder opsworks(String opsworks) {
            return opsworks(Output.of(opsworks));
        }

        public Builder organizations(@Nullable Output<String> organizations) {
            $.organizations = organizations;
            return this;
        }

        public Builder organizations(String organizations) {
            return organizations(Output.of(organizations));
        }

        public Builder outposts(@Nullable Output<String> outposts) {
            $.outposts = outposts;
            return this;
        }

        public Builder outposts(String outposts) {
            return outposts(Output.of(outposts));
        }

        public Builder personalize(@Nullable Output<String> personalize) {
            $.personalize = personalize;
            return this;
        }

        public Builder personalize(String personalize) {
            return personalize(Output.of(personalize));
        }

        public Builder pinpoint(@Nullable Output<String> pinpoint) {
            $.pinpoint = pinpoint;
            return this;
        }

        public Builder pinpoint(String pinpoint) {
            return pinpoint(Output.of(pinpoint));
        }

        public Builder pricing(@Nullable Output<String> pricing) {
            $.pricing = pricing;
            return this;
        }

        public Builder pricing(String pricing) {
            return pricing(Output.of(pricing));
        }

        public Builder qldb(@Nullable Output<String> qldb) {
            $.qldb = qldb;
            return this;
        }

        public Builder qldb(String qldb) {
            return qldb(Output.of(qldb));
        }

        public Builder quicksight(@Nullable Output<String> quicksight) {
            $.quicksight = quicksight;
            return this;
        }

        public Builder quicksight(String quicksight) {
            return quicksight(Output.of(quicksight));
        }

        public Builder ram(@Nullable Output<String> ram) {
            $.ram = ram;
            return this;
        }

        public Builder ram(String ram) {
            return ram(Output.of(ram));
        }

        public Builder rds(@Nullable Output<String> rds) {
            $.rds = rds;
            return this;
        }

        public Builder rds(String rds) {
            return rds(Output.of(rds));
        }

        public Builder redshift(@Nullable Output<String> redshift) {
            $.redshift = redshift;
            return this;
        }

        public Builder redshift(String redshift) {
            return redshift(Output.of(redshift));
        }

        public Builder resourcegroups(@Nullable Output<String> resourcegroups) {
            $.resourcegroups = resourcegroups;
            return this;
        }

        public Builder resourcegroups(String resourcegroups) {
            return resourcegroups(Output.of(resourcegroups));
        }

        public Builder resourcegroupstaggingapi(@Nullable Output<String> resourcegroupstaggingapi) {
            $.resourcegroupstaggingapi = resourcegroupstaggingapi;
            return this;
        }

        public Builder resourcegroupstaggingapi(String resourcegroupstaggingapi) {
            return resourcegroupstaggingapi(Output.of(resourcegroupstaggingapi));
        }

        public Builder route53(@Nullable Output<String> route53) {
            $.route53 = route53;
            return this;
        }

        public Builder route53(String route53) {
            return route53(Output.of(route53));
        }

        public Builder route53domains(@Nullable Output<String> route53domains) {
            $.route53domains = route53domains;
            return this;
        }

        public Builder route53domains(String route53domains) {
            return route53domains(Output.of(route53domains));
        }

        public Builder route53recoverycontrolconfig(@Nullable Output<String> route53recoverycontrolconfig) {
            $.route53recoverycontrolconfig = route53recoverycontrolconfig;
            return this;
        }

        public Builder route53recoverycontrolconfig(String route53recoverycontrolconfig) {
            return route53recoverycontrolconfig(Output.of(route53recoverycontrolconfig));
        }

        public Builder route53recoveryreadiness(@Nullable Output<String> route53recoveryreadiness) {
            $.route53recoveryreadiness = route53recoveryreadiness;
            return this;
        }

        public Builder route53recoveryreadiness(String route53recoveryreadiness) {
            return route53recoveryreadiness(Output.of(route53recoveryreadiness));
        }

        public Builder route53resolver(@Nullable Output<String> route53resolver) {
            $.route53resolver = route53resolver;
            return this;
        }

        public Builder route53resolver(String route53resolver) {
            return route53resolver(Output.of(route53resolver));
        }

        public Builder s3(@Nullable Output<String> s3) {
            $.s3 = s3;
            return this;
        }

        public Builder s3(String s3) {
            return s3(Output.of(s3));
        }

        public Builder s3control(@Nullable Output<String> s3control) {
            $.s3control = s3control;
            return this;
        }

        public Builder s3control(String s3control) {
            return s3control(Output.of(s3control));
        }

        public Builder s3outposts(@Nullable Output<String> s3outposts) {
            $.s3outposts = s3outposts;
            return this;
        }

        public Builder s3outposts(String s3outposts) {
            return s3outposts(Output.of(s3outposts));
        }

        public Builder sagemaker(@Nullable Output<String> sagemaker) {
            $.sagemaker = sagemaker;
            return this;
        }

        public Builder sagemaker(String sagemaker) {
            return sagemaker(Output.of(sagemaker));
        }

        public Builder schemas(@Nullable Output<String> schemas) {
            $.schemas = schemas;
            return this;
        }

        public Builder schemas(String schemas) {
            return schemas(Output.of(schemas));
        }

        public Builder sdb(@Nullable Output<String> sdb) {
            $.sdb = sdb;
            return this;
        }

        public Builder sdb(String sdb) {
            return sdb(Output.of(sdb));
        }

        public Builder secretsmanager(@Nullable Output<String> secretsmanager) {
            $.secretsmanager = secretsmanager;
            return this;
        }

        public Builder secretsmanager(String secretsmanager) {
            return secretsmanager(Output.of(secretsmanager));
        }

        public Builder securityhub(@Nullable Output<String> securityhub) {
            $.securityhub = securityhub;
            return this;
        }

        public Builder securityhub(String securityhub) {
            return securityhub(Output.of(securityhub));
        }

        public Builder serverlessrepo(@Nullable Output<String> serverlessrepo) {
            $.serverlessrepo = serverlessrepo;
            return this;
        }

        public Builder serverlessrepo(String serverlessrepo) {
            return serverlessrepo(Output.of(serverlessrepo));
        }

        public Builder servicecatalog(@Nullable Output<String> servicecatalog) {
            $.servicecatalog = servicecatalog;
            return this;
        }

        public Builder servicecatalog(String servicecatalog) {
            return servicecatalog(Output.of(servicecatalog));
        }

        public Builder servicediscovery(@Nullable Output<String> servicediscovery) {
            $.servicediscovery = servicediscovery;
            return this;
        }

        public Builder servicediscovery(String servicediscovery) {
            return servicediscovery(Output.of(servicediscovery));
        }

        public Builder servicequotas(@Nullable Output<String> servicequotas) {
            $.servicequotas = servicequotas;
            return this;
        }

        public Builder servicequotas(String servicequotas) {
            return servicequotas(Output.of(servicequotas));
        }

        public Builder ses(@Nullable Output<String> ses) {
            $.ses = ses;
            return this;
        }

        public Builder ses(String ses) {
            return ses(Output.of(ses));
        }

        public Builder shield(@Nullable Output<String> shield) {
            $.shield = shield;
            return this;
        }

        public Builder shield(String shield) {
            return shield(Output.of(shield));
        }

        public Builder signer(@Nullable Output<String> signer) {
            $.signer = signer;
            return this;
        }

        public Builder signer(String signer) {
            return signer(Output.of(signer));
        }

        public Builder sns(@Nullable Output<String> sns) {
            $.sns = sns;
            return this;
        }

        public Builder sns(String sns) {
            return sns(Output.of(sns));
        }

        public Builder sqs(@Nullable Output<String> sqs) {
            $.sqs = sqs;
            return this;
        }

        public Builder sqs(String sqs) {
            return sqs(Output.of(sqs));
        }

        public Builder ssm(@Nullable Output<String> ssm) {
            $.ssm = ssm;
            return this;
        }

        public Builder ssm(String ssm) {
            return ssm(Output.of(ssm));
        }

        public Builder ssoadmin(@Nullable Output<String> ssoadmin) {
            $.ssoadmin = ssoadmin;
            return this;
        }

        public Builder ssoadmin(String ssoadmin) {
            return ssoadmin(Output.of(ssoadmin));
        }

        public Builder stepfunctions(@Nullable Output<String> stepfunctions) {
            $.stepfunctions = stepfunctions;
            return this;
        }

        public Builder stepfunctions(String stepfunctions) {
            return stepfunctions(Output.of(stepfunctions));
        }

        public Builder storagegateway(@Nullable Output<String> storagegateway) {
            $.storagegateway = storagegateway;
            return this;
        }

        public Builder storagegateway(String storagegateway) {
            return storagegateway(Output.of(storagegateway));
        }

        public Builder sts(@Nullable Output<String> sts) {
            $.sts = sts;
            return this;
        }

        public Builder sts(String sts) {
            return sts(Output.of(sts));
        }

        public Builder swf(@Nullable Output<String> swf) {
            $.swf = swf;
            return this;
        }

        public Builder swf(String swf) {
            return swf(Output.of(swf));
        }

        public Builder synthetics(@Nullable Output<String> synthetics) {
            $.synthetics = synthetics;
            return this;
        }

        public Builder synthetics(String synthetics) {
            return synthetics(Output.of(synthetics));
        }

        public Builder timestreamwrite(@Nullable Output<String> timestreamwrite) {
            $.timestreamwrite = timestreamwrite;
            return this;
        }

        public Builder timestreamwrite(String timestreamwrite) {
            return timestreamwrite(Output.of(timestreamwrite));
        }

        public Builder transfer(@Nullable Output<String> transfer) {
            $.transfer = transfer;
            return this;
        }

        public Builder transfer(String transfer) {
            return transfer(Output.of(transfer));
        }

        public Builder waf(@Nullable Output<String> waf) {
            $.waf = waf;
            return this;
        }

        public Builder waf(String waf) {
            return waf(Output.of(waf));
        }

        public Builder wafregional(@Nullable Output<String> wafregional) {
            $.wafregional = wafregional;
            return this;
        }

        public Builder wafregional(String wafregional) {
            return wafregional(Output.of(wafregional));
        }

        public Builder wafv2(@Nullable Output<String> wafv2) {
            $.wafv2 = wafv2;
            return this;
        }

        public Builder wafv2(String wafv2) {
            return wafv2(Output.of(wafv2));
        }

        public Builder worklink(@Nullable Output<String> worklink) {
            $.worklink = worklink;
            return this;
        }

        public Builder worklink(String worklink) {
            return worklink(Output.of(worklink));
        }

        public Builder workmail(@Nullable Output<String> workmail) {
            $.workmail = workmail;
            return this;
        }

        public Builder workmail(String workmail) {
            return workmail(Output.of(workmail));
        }

        public Builder workspaces(@Nullable Output<String> workspaces) {
            $.workspaces = workspaces;
            return this;
        }

        public Builder workspaces(String workspaces) {
            return workspaces(Output.of(workspaces));
        }

        public Builder xray(@Nullable Output<String> xray) {
            $.xray = xray;
            return this;
        }

        public Builder xray(String xray) {
            return xray(Output.of(xray));
        }

        public ProviderEndpointArgs build() {
            return $;
        }
    }

}
