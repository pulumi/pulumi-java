// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketTransitionStorageClass;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * You must specify at least one of &#34;TransitionDate&#34; and &#34;TransitionInDays&#34;
 * 
 */
public final class BucketTransition extends com.pulumi.resources.InvokeArgs {

    public static final BucketTransition Empty = new BucketTransition();

    @Import(name="storageClass", required=true)
    private BucketTransitionStorageClass storageClass;

    public BucketTransitionStorageClass storageClass() {
        return this.storageClass;
    }

    @Import(name="transitionDate")
    private @Nullable String transitionDate;

    public Optional<String> transitionDate() {
        return Optional.ofNullable(this.transitionDate);
    }

    @Import(name="transitionInDays")
    private @Nullable Integer transitionInDays;

    public Optional<Integer> transitionInDays() {
        return Optional.ofNullable(this.transitionInDays);
    }

    private BucketTransition() {}

    private BucketTransition(BucketTransition $) {
        this.storageClass = $.storageClass;
        this.transitionDate = $.transitionDate;
        this.transitionInDays = $.transitionInDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketTransition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketTransition $;

        public Builder() {
            $ = new BucketTransition();
        }

        public Builder(BucketTransition defaults) {
            $ = new BucketTransition(Objects.requireNonNull(defaults));
        }

        public Builder storageClass(BucketTransitionStorageClass storageClass) {
            $.storageClass = storageClass;
            return this;
        }

        public Builder transitionDate(@Nullable String transitionDate) {
            $.transitionDate = transitionDate;
            return this;
        }

        public Builder transitionInDays(@Nullable Integer transitionInDays) {
            $.transitionInDays = transitionInDays;
            return this;
        }

        public BucketTransition build() {
            $.storageClass = Objects.requireNonNull($.storageClass, "expected parameter 'storageClass' to be non-null");
            return $;
        }
    }

}
