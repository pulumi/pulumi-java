// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.applicationinsights.inputs;

import com.pulumi.awsnative.applicationinsights.inputs.ApplicationLogPattern;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The log pattern set.
 * 
 */
public final class ApplicationLogPatternSet extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationLogPatternSet Empty = new ApplicationLogPatternSet();

    /**
     * The log patterns of a set.
     * 
     */
    @Import(name="logPatterns", required=true)
      private final List<ApplicationLogPattern> logPatterns;

    public List<ApplicationLogPattern> logPatterns() {
        return this.logPatterns;
    }

    /**
     * The name of the log pattern set.
     * 
     */
    @Import(name="patternSetName", required=true)
      private final String patternSetName;

    public String patternSetName() {
        return this.patternSetName;
    }

    public ApplicationLogPatternSet(
        List<ApplicationLogPattern> logPatterns,
        String patternSetName) {
        this.logPatterns = Objects.requireNonNull(logPatterns, "expected parameter 'logPatterns' to be non-null");
        this.patternSetName = Objects.requireNonNull(patternSetName, "expected parameter 'patternSetName' to be non-null");
    }

    private ApplicationLogPatternSet() {
        this.logPatterns = List.of();
        this.patternSetName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationLogPatternSet defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ApplicationLogPattern> logPatterns;
        private String patternSetName;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationLogPatternSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logPatterns = defaults.logPatterns;
    	      this.patternSetName = defaults.patternSetName;
        }

        public Builder logPatterns(List<ApplicationLogPattern> logPatterns) {
            this.logPatterns = Objects.requireNonNull(logPatterns);
            return this;
        }
        public Builder logPatterns(ApplicationLogPattern... logPatterns) {
            return logPatterns(List.of(logPatterns));
        }
        public Builder patternSetName(String patternSetName) {
            this.patternSetName = Objects.requireNonNull(patternSetName);
            return this;
        }        public ApplicationLogPatternSet build() {
            return new ApplicationLogPatternSet(logPatterns, patternSetName);
        }
    }
}
