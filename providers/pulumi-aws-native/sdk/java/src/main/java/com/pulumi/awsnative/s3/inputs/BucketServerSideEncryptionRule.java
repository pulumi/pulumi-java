// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.inputs.BucketServerSideEncryptionByDefault;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies the default server-side encryption configuration.
 * 
 */
public final class BucketServerSideEncryptionRule extends com.pulumi.resources.InvokeArgs {

    public static final BucketServerSideEncryptionRule Empty = new BucketServerSideEncryptionRule();

    /**
     * Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the BucketKeyEnabled element to true causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.
     * 
     */
    @Import(name="bucketKeyEnabled")
    private @Nullable Boolean bucketKeyEnabled;

    public Optional<Boolean> bucketKeyEnabled() {
        return Optional.ofNullable(this.bucketKeyEnabled);
    }

    @Import(name="serverSideEncryptionByDefault")
    private @Nullable BucketServerSideEncryptionByDefault serverSideEncryptionByDefault;

    public Optional<BucketServerSideEncryptionByDefault> serverSideEncryptionByDefault() {
        return Optional.ofNullable(this.serverSideEncryptionByDefault);
    }

    private BucketServerSideEncryptionRule() {}

    private BucketServerSideEncryptionRule(BucketServerSideEncryptionRule $) {
        this.bucketKeyEnabled = $.bucketKeyEnabled;
        this.serverSideEncryptionByDefault = $.serverSideEncryptionByDefault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketServerSideEncryptionRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketServerSideEncryptionRule $;

        public Builder() {
            $ = new BucketServerSideEncryptionRule();
        }

        public Builder(BucketServerSideEncryptionRule defaults) {
            $ = new BucketServerSideEncryptionRule(Objects.requireNonNull(defaults));
        }

        public Builder bucketKeyEnabled(@Nullable Boolean bucketKeyEnabled) {
            $.bucketKeyEnabled = bucketKeyEnabled;
            return this;
        }

        public Builder serverSideEncryptionByDefault(@Nullable BucketServerSideEncryptionByDefault serverSideEncryptionByDefault) {
            $.serverSideEncryptionByDefault = serverSideEncryptionByDefault;
            return this;
        }

        public BucketServerSideEncryptionRule build() {
            return $;
        }
    }

}
