// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.inputs;

import com.pulumi.awsnative.quicksight.enums.DataSetRowLevelPermissionFormatVersion;
import com.pulumi.awsnative.quicksight.enums.DataSetRowLevelPermissionPolicy;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * &lt;p&gt;The row-level security configuration for the dataset.&lt;/p&gt;
 * 
 */
public final class DataSetRowLevelPermissionDataSet extends com.pulumi.resources.InvokeArgs {

    public static final DataSetRowLevelPermissionDataSet Empty = new DataSetRowLevelPermissionDataSet();

    /**
     * &lt;p&gt;The Amazon Resource Name (ARN) of the permission dataset.&lt;/p&gt;
     * 
     */
    @Import(name="arn", required=true)
    private String arn;

    public String arn() {
        return this.arn;
    }

    @Import(name="formatVersion")
    private @Nullable DataSetRowLevelPermissionFormatVersion formatVersion;

    public Optional<DataSetRowLevelPermissionFormatVersion> formatVersion() {
        return Optional.ofNullable(this.formatVersion);
    }

    /**
     * &lt;p&gt;The namespace associated with the row-level permissions dataset.&lt;/p&gt;
     * 
     */
    @Import(name="namespace")
    private @Nullable String namespace;

    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="permissionPolicy", required=true)
    private DataSetRowLevelPermissionPolicy permissionPolicy;

    public DataSetRowLevelPermissionPolicy permissionPolicy() {
        return this.permissionPolicy;
    }

    private DataSetRowLevelPermissionDataSet() {}

    private DataSetRowLevelPermissionDataSet(DataSetRowLevelPermissionDataSet $) {
        this.arn = $.arn;
        this.formatVersion = $.formatVersion;
        this.namespace = $.namespace;
        this.permissionPolicy = $.permissionPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSetRowLevelPermissionDataSet defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSetRowLevelPermissionDataSet $;

        public Builder() {
            $ = new DataSetRowLevelPermissionDataSet();
        }

        public Builder(DataSetRowLevelPermissionDataSet defaults) {
            $ = new DataSetRowLevelPermissionDataSet(Objects.requireNonNull(defaults));
        }

        public Builder arn(String arn) {
            $.arn = arn;
            return this;
        }

        public Builder formatVersion(@Nullable DataSetRowLevelPermissionFormatVersion formatVersion) {
            $.formatVersion = formatVersion;
            return this;
        }

        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder permissionPolicy(DataSetRowLevelPermissionPolicy permissionPolicy) {
            $.permissionPolicy = permissionPolicy;
            return this;
        }

        public DataSetRowLevelPermissionDataSet build() {
            $.arn = Objects.requireNonNull($.arn, "expected parameter 'arn' to be non-null");
            $.permissionPolicy = Objects.requireNonNull($.permissionPolicy, "expected parameter 'permissionPolicy' to be non-null");
            return $;
        }
    }

}
