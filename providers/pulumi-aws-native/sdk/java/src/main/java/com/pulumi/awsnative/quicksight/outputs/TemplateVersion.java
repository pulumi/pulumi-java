// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.outputs;

import com.pulumi.awsnative.quicksight.enums.TemplateResourceStatus;
import com.pulumi.awsnative.quicksight.outputs.TemplateDataSetConfiguration;
import com.pulumi.awsnative.quicksight.outputs.TemplateError;
import com.pulumi.awsnative.quicksight.outputs.TemplateSheet;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TemplateVersion {
    /**
     * <p>The time that this template version was created.</p>
     * 
     */
    private final @Nullable String createdTime;
    /**
     * <p>Schema of the dataset identified by the placeholder. Any dashboard created from this
     *             template should be bound to new datasets matching the same schema described through this
     *             API operation.</p>
     * 
     */
    private final @Nullable List<TemplateDataSetConfiguration> dataSetConfigurations;
    /**
     * <p>The description of the template.</p>
     * 
     */
    private final @Nullable String description;
    /**
     * <p>Errors associated with this template version.</p>
     * 
     */
    private final @Nullable List<TemplateError> errors;
    /**
     * <p>A list of the associated sheets with the unique identifier and name of each sheet.</p>
     * 
     */
    private final @Nullable List<TemplateSheet> sheets;
    /**
     * <p>The Amazon Resource Name (ARN) of an analysis or template that was used to create this
     *             template.</p>
     * 
     */
    private final @Nullable String sourceEntityArn;
    private final @Nullable TemplateResourceStatus status;
    /**
     * <p>The ARN of the theme associated with this version of the template.</p>
     * 
     */
    private final @Nullable String themeArn;
    /**
     * <p>The version number of the template version.</p>
     * 
     */
    private final @Nullable Double versionNumber;

    @CustomType.Constructor
    private TemplateVersion(
        @CustomType.Parameter("createdTime") @Nullable String createdTime,
        @CustomType.Parameter("dataSetConfigurations") @Nullable List<TemplateDataSetConfiguration> dataSetConfigurations,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("errors") @Nullable List<TemplateError> errors,
        @CustomType.Parameter("sheets") @Nullable List<TemplateSheet> sheets,
        @CustomType.Parameter("sourceEntityArn") @Nullable String sourceEntityArn,
        @CustomType.Parameter("status") @Nullable TemplateResourceStatus status,
        @CustomType.Parameter("themeArn") @Nullable String themeArn,
        @CustomType.Parameter("versionNumber") @Nullable Double versionNumber) {
        this.createdTime = createdTime;
        this.dataSetConfigurations = dataSetConfigurations;
        this.description = description;
        this.errors = errors;
        this.sheets = sheets;
        this.sourceEntityArn = sourceEntityArn;
        this.status = status;
        this.themeArn = themeArn;
        this.versionNumber = versionNumber;
    }

    /**
     * <p>The time that this template version was created.</p>
     * 
    */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * <p>Schema of the dataset identified by the placeholder. Any dashboard created from this
     *             template should be bound to new datasets matching the same schema described through this
     *             API operation.</p>
     * 
    */
    public List<TemplateDataSetConfiguration> dataSetConfigurations() {
        return this.dataSetConfigurations == null ? List.of() : this.dataSetConfigurations;
    }
    /**
     * <p>The description of the template.</p>
     * 
    */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * <p>Errors associated with this template version.</p>
     * 
    */
    public List<TemplateError> errors() {
        return this.errors == null ? List.of() : this.errors;
    }
    /**
     * <p>A list of the associated sheets with the unique identifier and name of each sheet.</p>
     * 
    */
    public List<TemplateSheet> sheets() {
        return this.sheets == null ? List.of() : this.sheets;
    }
    /**
     * <p>The Amazon Resource Name (ARN) of an analysis or template that was used to create this
     *             template.</p>
     * 
    */
    public Optional<String> sourceEntityArn() {
        return Optional.ofNullable(this.sourceEntityArn);
    }
    public Optional<TemplateResourceStatus> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * <p>The ARN of the theme associated with this version of the template.</p>
     * 
    */
    public Optional<String> themeArn() {
        return Optional.ofNullable(this.themeArn);
    }
    /**
     * <p>The version number of the template version.</p>
     * 
    */
    public Optional<Double> versionNumber() {
        return Optional.ofNullable(this.versionNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TemplateVersion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String createdTime;
        private @Nullable List<TemplateDataSetConfiguration> dataSetConfigurations;
        private @Nullable String description;
        private @Nullable List<TemplateError> errors;
        private @Nullable List<TemplateSheet> sheets;
        private @Nullable String sourceEntityArn;
        private @Nullable TemplateResourceStatus status;
        private @Nullable String themeArn;
        private @Nullable Double versionNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(TemplateVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTime = defaults.createdTime;
    	      this.dataSetConfigurations = defaults.dataSetConfigurations;
    	      this.description = defaults.description;
    	      this.errors = defaults.errors;
    	      this.sheets = defaults.sheets;
    	      this.sourceEntityArn = defaults.sourceEntityArn;
    	      this.status = defaults.status;
    	      this.themeArn = defaults.themeArn;
    	      this.versionNumber = defaults.versionNumber;
        }

        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        public Builder dataSetConfigurations(@Nullable List<TemplateDataSetConfiguration> dataSetConfigurations) {
            this.dataSetConfigurations = dataSetConfigurations;
            return this;
        }
        public Builder dataSetConfigurations(TemplateDataSetConfiguration... dataSetConfigurations) {
            return dataSetConfigurations(List.of(dataSetConfigurations));
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder errors(@Nullable List<TemplateError> errors) {
            this.errors = errors;
            return this;
        }
        public Builder errors(TemplateError... errors) {
            return errors(List.of(errors));
        }
        public Builder sheets(@Nullable List<TemplateSheet> sheets) {
            this.sheets = sheets;
            return this;
        }
        public Builder sheets(TemplateSheet... sheets) {
            return sheets(List.of(sheets));
        }
        public Builder sourceEntityArn(@Nullable String sourceEntityArn) {
            this.sourceEntityArn = sourceEntityArn;
            return this;
        }
        public Builder status(@Nullable TemplateResourceStatus status) {
            this.status = status;
            return this;
        }
        public Builder themeArn(@Nullable String themeArn) {
            this.themeArn = themeArn;
            return this;
        }
        public Builder versionNumber(@Nullable Double versionNumber) {
            this.versionNumber = versionNumber;
            return this;
        }        public TemplateVersion build() {
            return new TemplateVersion(createdTime, dataSetConfigurations, description, errors, sheets, sourceEntityArn, status, themeArn, versionNumber);
        }
    }
}
