// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.appflow.inputs;

import com.pulumi.awsnative.appflow.enums.FlowConnectorType;
import com.pulumi.awsnative.appflow.inputs.FlowDestinationConnectorProperties;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configurations of destination connector.
 * 
 */
public final class FlowDestinationFlowConfig extends com.pulumi.resources.InvokeArgs {

    public static final FlowDestinationFlowConfig Empty = new FlowDestinationFlowConfig();

    /**
     * Name of destination connector profile
     * 
     */
    @Import(name="connectorProfileName")
    private @Nullable String connectorProfileName;

    /**
     * @return Name of destination connector profile
     * 
     */
    public Optional<String> connectorProfileName() {
        return Optional.ofNullable(this.connectorProfileName);
    }

    /**
     * Destination connector type
     * 
     */
    @Import(name="connectorType", required=true)
    private FlowConnectorType connectorType;

    /**
     * @return Destination connector type
     * 
     */
    public FlowConnectorType connectorType() {
        return this.connectorType;
    }

    /**
     * Destination connector details
     * 
     */
    @Import(name="destinationConnectorProperties", required=true)
    private FlowDestinationConnectorProperties destinationConnectorProperties;

    /**
     * @return Destination connector details
     * 
     */
    public FlowDestinationConnectorProperties destinationConnectorProperties() {
        return this.destinationConnectorProperties;
    }

    private FlowDestinationFlowConfig() {}

    private FlowDestinationFlowConfig(FlowDestinationFlowConfig $) {
        this.connectorProfileName = $.connectorProfileName;
        this.connectorType = $.connectorType;
        this.destinationConnectorProperties = $.destinationConnectorProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowDestinationFlowConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowDestinationFlowConfig $;

        public Builder() {
            $ = new FlowDestinationFlowConfig();
        }

        public Builder(FlowDestinationFlowConfig defaults) {
            $ = new FlowDestinationFlowConfig(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectorProfileName Name of destination connector profile
         * 
         * @return builder
         * 
         */
        public Builder connectorProfileName(@Nullable String connectorProfileName) {
            $.connectorProfileName = connectorProfileName;
            return this;
        }

        /**
         * @param connectorType Destination connector type
         * 
         * @return builder
         * 
         */
        public Builder connectorType(FlowConnectorType connectorType) {
            $.connectorType = connectorType;
            return this;
        }

        /**
         * @param destinationConnectorProperties Destination connector details
         * 
         * @return builder
         * 
         */
        public Builder destinationConnectorProperties(FlowDestinationConnectorProperties destinationConnectorProperties) {
            $.destinationConnectorProperties = destinationConnectorProperties;
            return this;
        }

        public FlowDestinationFlowConfig build() {
            $.connectorType = Objects.requireNonNull($.connectorType, "expected parameter 'connectorType' to be non-null");
            $.destinationConnectorProperties = Objects.requireNonNull($.destinationConnectorProperties, "expected parameter 'destinationConnectorProperties' to be non-null");
            return $;
        }
    }

}
