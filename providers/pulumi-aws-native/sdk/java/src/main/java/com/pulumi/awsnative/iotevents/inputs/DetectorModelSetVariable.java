// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Information about the variable and its new value.
 * 
 */
public final class DetectorModelSetVariable extends com.pulumi.resources.InvokeArgs {

    public static final DetectorModelSetVariable Empty = new DetectorModelSetVariable();

    /**
     * The new value of the variable.
     * 
     */
    @Import(name="value", required=true)
    private String value;

    public String value() {
        return this.value;
    }

    /**
     * The name of the variable.
     * 
     */
    @Import(name="variableName", required=true)
    private String variableName;

    public String variableName() {
        return this.variableName;
    }

    private DetectorModelSetVariable() {}

    private DetectorModelSetVariable(DetectorModelSetVariable $) {
        this.value = $.value;
        this.variableName = $.variableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorModelSetVariable defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorModelSetVariable $;

        public Builder() {
            $ = new DetectorModelSetVariable();
        }

        public Builder(DetectorModelSetVariable defaults) {
            $ = new DetectorModelSetVariable(Objects.requireNonNull(defaults));
        }

        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public Builder variableName(String variableName) {
            $.variableName = variableName;
            return this;
        }

        public DetectorModelSetVariable build() {
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            $.variableName = Objects.requireNonNull($.variableName, "expected parameter 'variableName' to be non-null");
            return $;
        }
    }

}
