// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.events;

import com.pulumi.awsnative.events.enums.ApiDestinationHttpMethod;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApiDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiDestinationArgs Empty = new ApiDestinationArgs();

    /**
     * The arn of the connection.
     * 
     */
    @Import(name="connectionArn", required=true)
      private final Output<String> connectionArn;

    public Output<String> connectionArn() {
        return this.connectionArn;
    }

    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    @Import(name="httpMethod", required=true)
      private final Output<ApiDestinationHttpMethod> httpMethod;

    public Output<ApiDestinationHttpMethod> httpMethod() {
        return this.httpMethod;
    }

    /**
     * Url endpoint to invoke.
     * 
     */
    @Import(name="invocationEndpoint", required=true)
      private final Output<String> invocationEndpoint;

    public Output<String> invocationEndpoint() {
        return this.invocationEndpoint;
    }

    @Import(name="invocationRateLimitPerSecond")
      private final @Nullable Output<Integer> invocationRateLimitPerSecond;

    public Output<Integer> invocationRateLimitPerSecond() {
        return this.invocationRateLimitPerSecond == null ? Codegen.empty() : this.invocationRateLimitPerSecond;
    }

    /**
     * Name of the apiDestination.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    public ApiDestinationArgs(
        Output<String> connectionArn,
        @Nullable Output<String> description,
        Output<ApiDestinationHttpMethod> httpMethod,
        Output<String> invocationEndpoint,
        @Nullable Output<Integer> invocationRateLimitPerSecond,
        @Nullable Output<String> name) {
        this.connectionArn = Objects.requireNonNull(connectionArn, "expected parameter 'connectionArn' to be non-null");
        this.description = description;
        this.httpMethod = Objects.requireNonNull(httpMethod, "expected parameter 'httpMethod' to be non-null");
        this.invocationEndpoint = Objects.requireNonNull(invocationEndpoint, "expected parameter 'invocationEndpoint' to be non-null");
        this.invocationRateLimitPerSecond = invocationRateLimitPerSecond;
        this.name = name;
    }

    private ApiDestinationArgs() {
        this.connectionArn = Codegen.empty();
        this.description = Codegen.empty();
        this.httpMethod = Codegen.empty();
        this.invocationEndpoint = Codegen.empty();
        this.invocationRateLimitPerSecond = Codegen.empty();
        this.name = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> connectionArn;
        private @Nullable Output<String> description;
        private Output<ApiDestinationHttpMethod> httpMethod;
        private Output<String> invocationEndpoint;
        private @Nullable Output<Integer> invocationRateLimitPerSecond;
        private @Nullable Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiDestinationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionArn = defaults.connectionArn;
    	      this.description = defaults.description;
    	      this.httpMethod = defaults.httpMethod;
    	      this.invocationEndpoint = defaults.invocationEndpoint;
    	      this.invocationRateLimitPerSecond = defaults.invocationRateLimitPerSecond;
    	      this.name = defaults.name;
        }

        public Builder connectionArn(Output<String> connectionArn) {
            this.connectionArn = Objects.requireNonNull(connectionArn);
            return this;
        }
        public Builder connectionArn(String connectionArn) {
            this.connectionArn = Output.of(Objects.requireNonNull(connectionArn));
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder httpMethod(Output<ApiDestinationHttpMethod> httpMethod) {
            this.httpMethod = Objects.requireNonNull(httpMethod);
            return this;
        }
        public Builder httpMethod(ApiDestinationHttpMethod httpMethod) {
            this.httpMethod = Output.of(Objects.requireNonNull(httpMethod));
            return this;
        }
        public Builder invocationEndpoint(Output<String> invocationEndpoint) {
            this.invocationEndpoint = Objects.requireNonNull(invocationEndpoint);
            return this;
        }
        public Builder invocationEndpoint(String invocationEndpoint) {
            this.invocationEndpoint = Output.of(Objects.requireNonNull(invocationEndpoint));
            return this;
        }
        public Builder invocationRateLimitPerSecond(@Nullable Output<Integer> invocationRateLimitPerSecond) {
            this.invocationRateLimitPerSecond = invocationRateLimitPerSecond;
            return this;
        }
        public Builder invocationRateLimitPerSecond(@Nullable Integer invocationRateLimitPerSecond) {
            this.invocationRateLimitPerSecond = Codegen.ofNullable(invocationRateLimitPerSecond);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }        public ApiDestinationArgs build() {
            return new ApiDestinationArgs(connectionArn, description, httpMethod, invocationEndpoint, invocationRateLimitPerSecond, name);
        }
    }
}
