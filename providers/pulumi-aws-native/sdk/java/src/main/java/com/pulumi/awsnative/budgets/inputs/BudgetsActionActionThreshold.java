// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.budgets.inputs;

import com.pulumi.awsnative.budgets.enums.BudgetsActionActionThresholdType;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


public final class BudgetsActionActionThreshold extends com.pulumi.resources.InvokeArgs {

    public static final BudgetsActionActionThreshold Empty = new BudgetsActionActionThreshold();

    @Import(name="type", required=true)
    private BudgetsActionActionThresholdType type;

    public BudgetsActionActionThresholdType type() {
        return this.type;
    }

    @Import(name="value", required=true)
    private Double value;

    public Double value() {
        return this.value;
    }

    private BudgetsActionActionThreshold() {}

    private BudgetsActionActionThreshold(BudgetsActionActionThreshold $) {
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BudgetsActionActionThreshold defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BudgetsActionActionThreshold $;

        public Builder() {
            $ = new BudgetsActionActionThreshold();
        }

        public Builder(BudgetsActionActionThreshold defaults) {
            $ = new BudgetsActionActionThreshold(Objects.requireNonNull(defaults));
        }

        public Builder type(BudgetsActionActionThresholdType type) {
            $.type = type;
            return this;
        }

        public Builder value(Double value) {
            $.value = value;
            return this;
        }

        public BudgetsActionActionThreshold build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
