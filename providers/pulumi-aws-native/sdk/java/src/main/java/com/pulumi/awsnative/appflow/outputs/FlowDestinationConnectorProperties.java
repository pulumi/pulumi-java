// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.appflow.outputs;

import com.pulumi.awsnative.appflow.outputs.FlowEventBridgeDestinationProperties;
import com.pulumi.awsnative.appflow.outputs.FlowLookoutMetricsDestinationProperties;
import com.pulumi.awsnative.appflow.outputs.FlowMarketoDestinationProperties;
import com.pulumi.awsnative.appflow.outputs.FlowRedshiftDestinationProperties;
import com.pulumi.awsnative.appflow.outputs.FlowS3DestinationProperties;
import com.pulumi.awsnative.appflow.outputs.FlowSAPODataDestinationProperties;
import com.pulumi.awsnative.appflow.outputs.FlowSalesforceDestinationProperties;
import com.pulumi.awsnative.appflow.outputs.FlowSnowflakeDestinationProperties;
import com.pulumi.awsnative.appflow.outputs.FlowUpsolverDestinationProperties;
import com.pulumi.awsnative.appflow.outputs.FlowZendeskDestinationProperties;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowDestinationConnectorProperties {
    private final @Nullable FlowEventBridgeDestinationProperties eventBridge;
    private final @Nullable FlowLookoutMetricsDestinationProperties lookoutMetrics;
    private final @Nullable FlowMarketoDestinationProperties marketo;
    private final @Nullable FlowRedshiftDestinationProperties redshift;
    private final @Nullable FlowS3DestinationProperties s3;
    private final @Nullable FlowSAPODataDestinationProperties sAPOData;
    private final @Nullable FlowSalesforceDestinationProperties salesforce;
    private final @Nullable FlowSnowflakeDestinationProperties snowflake;
    private final @Nullable FlowUpsolverDestinationProperties upsolver;
    private final @Nullable FlowZendeskDestinationProperties zendesk;

    @CustomType.Constructor
    private FlowDestinationConnectorProperties(
        @CustomType.Parameter("eventBridge") @Nullable FlowEventBridgeDestinationProperties eventBridge,
        @CustomType.Parameter("lookoutMetrics") @Nullable FlowLookoutMetricsDestinationProperties lookoutMetrics,
        @CustomType.Parameter("marketo") @Nullable FlowMarketoDestinationProperties marketo,
        @CustomType.Parameter("redshift") @Nullable FlowRedshiftDestinationProperties redshift,
        @CustomType.Parameter("s3") @Nullable FlowS3DestinationProperties s3,
        @CustomType.Parameter("sAPOData") @Nullable FlowSAPODataDestinationProperties sAPOData,
        @CustomType.Parameter("salesforce") @Nullable FlowSalesforceDestinationProperties salesforce,
        @CustomType.Parameter("snowflake") @Nullable FlowSnowflakeDestinationProperties snowflake,
        @CustomType.Parameter("upsolver") @Nullable FlowUpsolverDestinationProperties upsolver,
        @CustomType.Parameter("zendesk") @Nullable FlowZendeskDestinationProperties zendesk) {
        this.eventBridge = eventBridge;
        this.lookoutMetrics = lookoutMetrics;
        this.marketo = marketo;
        this.redshift = redshift;
        this.s3 = s3;
        this.sAPOData = sAPOData;
        this.salesforce = salesforce;
        this.snowflake = snowflake;
        this.upsolver = upsolver;
        this.zendesk = zendesk;
    }

    public Optional<FlowEventBridgeDestinationProperties> eventBridge() {
        return Optional.ofNullable(this.eventBridge);
    }
    public Optional<FlowLookoutMetricsDestinationProperties> lookoutMetrics() {
        return Optional.ofNullable(this.lookoutMetrics);
    }
    public Optional<FlowMarketoDestinationProperties> marketo() {
        return Optional.ofNullable(this.marketo);
    }
    public Optional<FlowRedshiftDestinationProperties> redshift() {
        return Optional.ofNullable(this.redshift);
    }
    public Optional<FlowS3DestinationProperties> s3() {
        return Optional.ofNullable(this.s3);
    }
    public Optional<FlowSAPODataDestinationProperties> sAPOData() {
        return Optional.ofNullable(this.sAPOData);
    }
    public Optional<FlowSalesforceDestinationProperties> salesforce() {
        return Optional.ofNullable(this.salesforce);
    }
    public Optional<FlowSnowflakeDestinationProperties> snowflake() {
        return Optional.ofNullable(this.snowflake);
    }
    public Optional<FlowUpsolverDestinationProperties> upsolver() {
        return Optional.ofNullable(this.upsolver);
    }
    public Optional<FlowZendeskDestinationProperties> zendesk() {
        return Optional.ofNullable(this.zendesk);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDestinationConnectorProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable FlowEventBridgeDestinationProperties eventBridge;
        private @Nullable FlowLookoutMetricsDestinationProperties lookoutMetrics;
        private @Nullable FlowMarketoDestinationProperties marketo;
        private @Nullable FlowRedshiftDestinationProperties redshift;
        private @Nullable FlowS3DestinationProperties s3;
        private @Nullable FlowSAPODataDestinationProperties sAPOData;
        private @Nullable FlowSalesforceDestinationProperties salesforce;
        private @Nullable FlowSnowflakeDestinationProperties snowflake;
        private @Nullable FlowUpsolverDestinationProperties upsolver;
        private @Nullable FlowZendeskDestinationProperties zendesk;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowDestinationConnectorProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventBridge = defaults.eventBridge;
    	      this.lookoutMetrics = defaults.lookoutMetrics;
    	      this.marketo = defaults.marketo;
    	      this.redshift = defaults.redshift;
    	      this.s3 = defaults.s3;
    	      this.sAPOData = defaults.sAPOData;
    	      this.salesforce = defaults.salesforce;
    	      this.snowflake = defaults.snowflake;
    	      this.upsolver = defaults.upsolver;
    	      this.zendesk = defaults.zendesk;
        }

        public Builder eventBridge(@Nullable FlowEventBridgeDestinationProperties eventBridge) {
            this.eventBridge = eventBridge;
            return this;
        }
        public Builder lookoutMetrics(@Nullable FlowLookoutMetricsDestinationProperties lookoutMetrics) {
            this.lookoutMetrics = lookoutMetrics;
            return this;
        }
        public Builder marketo(@Nullable FlowMarketoDestinationProperties marketo) {
            this.marketo = marketo;
            return this;
        }
        public Builder redshift(@Nullable FlowRedshiftDestinationProperties redshift) {
            this.redshift = redshift;
            return this;
        }
        public Builder s3(@Nullable FlowS3DestinationProperties s3) {
            this.s3 = s3;
            return this;
        }
        public Builder sAPOData(@Nullable FlowSAPODataDestinationProperties sAPOData) {
            this.sAPOData = sAPOData;
            return this;
        }
        public Builder salesforce(@Nullable FlowSalesforceDestinationProperties salesforce) {
            this.salesforce = salesforce;
            return this;
        }
        public Builder snowflake(@Nullable FlowSnowflakeDestinationProperties snowflake) {
            this.snowflake = snowflake;
            return this;
        }
        public Builder upsolver(@Nullable FlowUpsolverDestinationProperties upsolver) {
            this.upsolver = upsolver;
            return this;
        }
        public Builder zendesk(@Nullable FlowZendeskDestinationProperties zendesk) {
            this.zendesk = zendesk;
            return this;
        }        public FlowDestinationConnectorProperties build() {
            return new FlowDestinationConnectorProperties(eventBridge, lookoutMetrics, marketo, redshift, s3, sAPOData, salesforce, snowflake, upsolver, zendesk);
        }
    }
}
