// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents;

import com.pulumi.awsnative.iotevents.inputs.InputDefinitionArgs;
import com.pulumi.awsnative.iotevents.inputs.InputTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InputArgs extends com.pulumi.resources.ResourceArgs {

    public static final InputArgs Empty = new InputArgs();

    @Import(name="inputDefinition", required=true)
    private Output<InputDefinitionArgs> inputDefinition;

    public Output<InputDefinitionArgs> inputDefinition() {
        return this.inputDefinition;
    }

    /**
     * A brief description of the input.
     * 
     */
    @Import(name="inputDescription")
    private @Nullable Output<String> inputDescription;

    public Optional<Output<String>> inputDescription() {
        return Optional.ofNullable(this.inputDescription);
    }

    /**
     * The name of the input.
     * 
     */
    @Import(name="inputName")
    private @Nullable Output<String> inputName;

    public Optional<Output<String>> inputName() {
        return Optional.ofNullable(this.inputName);
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<InputTagArgs>> tags;

    public Optional<Output<List<InputTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private InputArgs() {}

    private InputArgs(InputArgs $) {
        this.inputDefinition = $.inputDefinition;
        this.inputDescription = $.inputDescription;
        this.inputName = $.inputName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InputArgs $;

        public Builder() {
            $ = new InputArgs();
        }

        public Builder(InputArgs defaults) {
            $ = new InputArgs(Objects.requireNonNull(defaults));
        }

        public Builder inputDefinition(Output<InputDefinitionArgs> inputDefinition) {
            $.inputDefinition = inputDefinition;
            return this;
        }

        public Builder inputDefinition(InputDefinitionArgs inputDefinition) {
            return inputDefinition(Output.of(inputDefinition));
        }

        public Builder inputDescription(@Nullable Output<String> inputDescription) {
            $.inputDescription = inputDescription;
            return this;
        }

        public Builder inputDescription(String inputDescription) {
            return inputDescription(Output.of(inputDescription));
        }

        public Builder inputName(@Nullable Output<String> inputName) {
            $.inputName = inputName;
            return this;
        }

        public Builder inputName(String inputName) {
            return inputName(Output.of(inputName));
        }

        public Builder tags(@Nullable Output<List<InputTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<InputTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(InputTagArgs... tags) {
            return tags(List.of(tags));
        }

        public InputArgs build() {
            $.inputDefinition = Objects.requireNonNull($.inputDefinition, "expected parameter 'inputDefinition' to be non-null");
            return $;
        }
    }

}
