// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.enums.MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Summary of information about monitoring job
 * 
 */
public final class MonitoringScheduleMonitoringExecutionSummaryArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoringScheduleMonitoringExecutionSummaryArgs Empty = new MonitoringScheduleMonitoringExecutionSummaryArgs();

    /**
     * The time at which the monitoring job was created.
     * 
     */
    @Import(name="creationTime", required=true)
      private final Output<String> creationTime;

    public Output<String> creationTime() {
        return this.creationTime;
    }

    @Import(name="endpointName")
      private final @Nullable Output<String> endpointName;

    public Output<String> endpointName() {
        return this.endpointName == null ? Codegen.empty() : this.endpointName;
    }

    /**
     * Contains the reason a monitoring job failed, if it failed.
     * 
     */
    @Import(name="failureReason")
      private final @Nullable Output<String> failureReason;

    public Output<String> failureReason() {
        return this.failureReason == null ? Codegen.empty() : this.failureReason;
    }

    /**
     * A timestamp that indicates the last time the monitoring job was modified.
     * 
     */
    @Import(name="lastModifiedTime", required=true)
      private final Output<String> lastModifiedTime;

    public Output<String> lastModifiedTime() {
        return this.lastModifiedTime;
    }

    /**
     * The status of the monitoring job.
     * 
     */
    @Import(name="monitoringExecutionStatus", required=true)
      private final Output<MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus> monitoringExecutionStatus;

    public Output<MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus> monitoringExecutionStatus() {
        return this.monitoringExecutionStatus;
    }

    @Import(name="monitoringScheduleName", required=true)
      private final Output<String> monitoringScheduleName;

    public Output<String> monitoringScheduleName() {
        return this.monitoringScheduleName;
    }

    /**
     * The Amazon Resource Name (ARN) of the monitoring job.
     * 
     */
    @Import(name="processingJobArn")
      private final @Nullable Output<String> processingJobArn;

    public Output<String> processingJobArn() {
        return this.processingJobArn == null ? Codegen.empty() : this.processingJobArn;
    }

    /**
     * The time the monitoring job was scheduled.
     * 
     */
    @Import(name="scheduledTime", required=true)
      private final Output<String> scheduledTime;

    public Output<String> scheduledTime() {
        return this.scheduledTime;
    }

    public MonitoringScheduleMonitoringExecutionSummaryArgs(
        Output<String> creationTime,
        @Nullable Output<String> endpointName,
        @Nullable Output<String> failureReason,
        Output<String> lastModifiedTime,
        Output<MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus> monitoringExecutionStatus,
        Output<String> monitoringScheduleName,
        @Nullable Output<String> processingJobArn,
        Output<String> scheduledTime) {
        this.creationTime = Objects.requireNonNull(creationTime, "expected parameter 'creationTime' to be non-null");
        this.endpointName = endpointName;
        this.failureReason = failureReason;
        this.lastModifiedTime = Objects.requireNonNull(lastModifiedTime, "expected parameter 'lastModifiedTime' to be non-null");
        this.monitoringExecutionStatus = Objects.requireNonNull(monitoringExecutionStatus, "expected parameter 'monitoringExecutionStatus' to be non-null");
        this.monitoringScheduleName = Objects.requireNonNull(monitoringScheduleName, "expected parameter 'monitoringScheduleName' to be non-null");
        this.processingJobArn = processingJobArn;
        this.scheduledTime = Objects.requireNonNull(scheduledTime, "expected parameter 'scheduledTime' to be non-null");
    }

    private MonitoringScheduleMonitoringExecutionSummaryArgs() {
        this.creationTime = Codegen.empty();
        this.endpointName = Codegen.empty();
        this.failureReason = Codegen.empty();
        this.lastModifiedTime = Codegen.empty();
        this.monitoringExecutionStatus = Codegen.empty();
        this.monitoringScheduleName = Codegen.empty();
        this.processingJobArn = Codegen.empty();
        this.scheduledTime = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringScheduleMonitoringExecutionSummaryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> creationTime;
        private @Nullable Output<String> endpointName;
        private @Nullable Output<String> failureReason;
        private Output<String> lastModifiedTime;
        private Output<MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus> monitoringExecutionStatus;
        private Output<String> monitoringScheduleName;
        private @Nullable Output<String> processingJobArn;
        private Output<String> scheduledTime;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoringScheduleMonitoringExecutionSummaryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTime = defaults.creationTime;
    	      this.endpointName = defaults.endpointName;
    	      this.failureReason = defaults.failureReason;
    	      this.lastModifiedTime = defaults.lastModifiedTime;
    	      this.monitoringExecutionStatus = defaults.monitoringExecutionStatus;
    	      this.monitoringScheduleName = defaults.monitoringScheduleName;
    	      this.processingJobArn = defaults.processingJobArn;
    	      this.scheduledTime = defaults.scheduledTime;
        }

        public Builder creationTime(Output<String> creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        public Builder creationTime(String creationTime) {
            this.creationTime = Output.of(Objects.requireNonNull(creationTime));
            return this;
        }
        public Builder endpointName(@Nullable Output<String> endpointName) {
            this.endpointName = endpointName;
            return this;
        }
        public Builder endpointName(@Nullable String endpointName) {
            this.endpointName = Codegen.ofNullable(endpointName);
            return this;
        }
        public Builder failureReason(@Nullable Output<String> failureReason) {
            this.failureReason = failureReason;
            return this;
        }
        public Builder failureReason(@Nullable String failureReason) {
            this.failureReason = Codegen.ofNullable(failureReason);
            return this;
        }
        public Builder lastModifiedTime(Output<String> lastModifiedTime) {
            this.lastModifiedTime = Objects.requireNonNull(lastModifiedTime);
            return this;
        }
        public Builder lastModifiedTime(String lastModifiedTime) {
            this.lastModifiedTime = Output.of(Objects.requireNonNull(lastModifiedTime));
            return this;
        }
        public Builder monitoringExecutionStatus(Output<MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus> monitoringExecutionStatus) {
            this.monitoringExecutionStatus = Objects.requireNonNull(monitoringExecutionStatus);
            return this;
        }
        public Builder monitoringExecutionStatus(MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus monitoringExecutionStatus) {
            this.monitoringExecutionStatus = Output.of(Objects.requireNonNull(monitoringExecutionStatus));
            return this;
        }
        public Builder monitoringScheduleName(Output<String> monitoringScheduleName) {
            this.monitoringScheduleName = Objects.requireNonNull(monitoringScheduleName);
            return this;
        }
        public Builder monitoringScheduleName(String monitoringScheduleName) {
            this.monitoringScheduleName = Output.of(Objects.requireNonNull(monitoringScheduleName));
            return this;
        }
        public Builder processingJobArn(@Nullable Output<String> processingJobArn) {
            this.processingJobArn = processingJobArn;
            return this;
        }
        public Builder processingJobArn(@Nullable String processingJobArn) {
            this.processingJobArn = Codegen.ofNullable(processingJobArn);
            return this;
        }
        public Builder scheduledTime(Output<String> scheduledTime) {
            this.scheduledTime = Objects.requireNonNull(scheduledTime);
            return this;
        }
        public Builder scheduledTime(String scheduledTime) {
            this.scheduledTime = Output.of(Objects.requireNonNull(scheduledTime));
            return this;
        }        public MonitoringScheduleMonitoringExecutionSummaryArgs build() {
            return new MonitoringScheduleMonitoringExecutionSummaryArgs(creationTime, endpointName, failureReason, lastModifiedTime, monitoringExecutionStatus, monitoringScheduleName, processingJobArn, scheduledTime);
        }
    }
}
