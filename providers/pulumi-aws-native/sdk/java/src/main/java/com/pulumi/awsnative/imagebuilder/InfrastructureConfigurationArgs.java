// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder;

import com.pulumi.awsnative.imagebuilder.inputs.InfrastructureConfigurationInstanceMetadataOptionsArgs;
import com.pulumi.awsnative.imagebuilder.inputs.InfrastructureConfigurationLoggingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InfrastructureConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureConfigurationArgs Empty = new InfrastructureConfigurationArgs();

    /**
     * The description of the infrastructure configuration.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The instance metadata option settings for the infrastructure configuration.
     * 
     */
    @Import(name="instanceMetadataOptions")
    private @Nullable Output<InfrastructureConfigurationInstanceMetadataOptionsArgs> instanceMetadataOptions;

    public Optional<Output<InfrastructureConfigurationInstanceMetadataOptionsArgs>> instanceMetadataOptions() {
        return Optional.ofNullable(this.instanceMetadataOptions);
    }

    /**
     * The instance profile of the infrastructure configuration.
     * 
     */
    @Import(name="instanceProfileName", required=true)
    private Output<String> instanceProfileName;

    public Output<String> instanceProfileName() {
        return this.instanceProfileName;
    }

    /**
     * The instance types of the infrastructure configuration.
     * 
     */
    @Import(name="instanceTypes")
    private @Nullable Output<List<String>> instanceTypes;

    public Optional<Output<List<String>>> instanceTypes() {
        return Optional.ofNullable(this.instanceTypes);
    }

    /**
     * The EC2 key pair of the infrastructure configuration..
     * 
     */
    @Import(name="keyPair")
    private @Nullable Output<String> keyPair;

    public Optional<Output<String>> keyPair() {
        return Optional.ofNullable(this.keyPair);
    }

    /**
     * The logging configuration of the infrastructure configuration.
     * 
     */
    @Import(name="logging")
    private @Nullable Output<InfrastructureConfigurationLoggingArgs> logging;

    public Optional<Output<InfrastructureConfigurationLoggingArgs>> logging() {
        return Optional.ofNullable(this.logging);
    }

    /**
     * The name of the infrastructure configuration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The tags attached to the resource created by Image Builder.
     * 
     */
    @Import(name="resourceTags")
    private @Nullable Output<Object> resourceTags;

    public Optional<Output<Object>> resourceTags() {
        return Optional.ofNullable(this.resourceTags);
    }

    /**
     * The security group IDs of the infrastructure configuration.
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * The SNS Topic Amazon Resource Name (ARN) of the infrastructure configuration.
     * 
     */
    @Import(name="snsTopicArn")
    private @Nullable Output<String> snsTopicArn;

    public Optional<Output<String>> snsTopicArn() {
        return Optional.ofNullable(this.snsTopicArn);
    }

    /**
     * The subnet ID of the infrastructure configuration.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * The tags associated with the component.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Object> tags;

    public Optional<Output<Object>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The terminate instance on failure configuration of the infrastructure configuration.
     * 
     */
    @Import(name="terminateInstanceOnFailure")
    private @Nullable Output<Boolean> terminateInstanceOnFailure;

    public Optional<Output<Boolean>> terminateInstanceOnFailure() {
        return Optional.ofNullable(this.terminateInstanceOnFailure);
    }

    private InfrastructureConfigurationArgs() {}

    private InfrastructureConfigurationArgs(InfrastructureConfigurationArgs $) {
        this.description = $.description;
        this.instanceMetadataOptions = $.instanceMetadataOptions;
        this.instanceProfileName = $.instanceProfileName;
        this.instanceTypes = $.instanceTypes;
        this.keyPair = $.keyPair;
        this.logging = $.logging;
        this.name = $.name;
        this.resourceTags = $.resourceTags;
        this.securityGroupIds = $.securityGroupIds;
        this.snsTopicArn = $.snsTopicArn;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.terminateInstanceOnFailure = $.terminateInstanceOnFailure;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InfrastructureConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InfrastructureConfigurationArgs $;

        public Builder() {
            $ = new InfrastructureConfigurationArgs();
        }

        public Builder(InfrastructureConfigurationArgs defaults) {
            $ = new InfrastructureConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder instanceMetadataOptions(@Nullable Output<InfrastructureConfigurationInstanceMetadataOptionsArgs> instanceMetadataOptions) {
            $.instanceMetadataOptions = instanceMetadataOptions;
            return this;
        }

        public Builder instanceMetadataOptions(InfrastructureConfigurationInstanceMetadataOptionsArgs instanceMetadataOptions) {
            return instanceMetadataOptions(Output.of(instanceMetadataOptions));
        }

        public Builder instanceProfileName(Output<String> instanceProfileName) {
            $.instanceProfileName = instanceProfileName;
            return this;
        }

        public Builder instanceProfileName(String instanceProfileName) {
            return instanceProfileName(Output.of(instanceProfileName));
        }

        public Builder instanceTypes(@Nullable Output<List<String>> instanceTypes) {
            $.instanceTypes = instanceTypes;
            return this;
        }

        public Builder instanceTypes(List<String> instanceTypes) {
            return instanceTypes(Output.of(instanceTypes));
        }

        public Builder instanceTypes(String... instanceTypes) {
            return instanceTypes(List.of(instanceTypes));
        }

        public Builder keyPair(@Nullable Output<String> keyPair) {
            $.keyPair = keyPair;
            return this;
        }

        public Builder keyPair(String keyPair) {
            return keyPair(Output.of(keyPair));
        }

        public Builder logging(@Nullable Output<InfrastructureConfigurationLoggingArgs> logging) {
            $.logging = logging;
            return this;
        }

        public Builder logging(InfrastructureConfigurationLoggingArgs logging) {
            return logging(Output.of(logging));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceTags(@Nullable Output<Object> resourceTags) {
            $.resourceTags = resourceTags;
            return this;
        }

        public Builder resourceTags(Object resourceTags) {
            return resourceTags(Output.of(resourceTags));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder snsTopicArn(@Nullable Output<String> snsTopicArn) {
            $.snsTopicArn = snsTopicArn;
            return this;
        }

        public Builder snsTopicArn(String snsTopicArn) {
            return snsTopicArn(Output.of(snsTopicArn));
        }

        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder tags(@Nullable Output<Object> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Object tags) {
            return tags(Output.of(tags));
        }

        public Builder terminateInstanceOnFailure(@Nullable Output<Boolean> terminateInstanceOnFailure) {
            $.terminateInstanceOnFailure = terminateInstanceOnFailure;
            return this;
        }

        public Builder terminateInstanceOnFailure(Boolean terminateInstanceOnFailure) {
            return terminateInstanceOnFailure(Output.of(terminateInstanceOnFailure));
        }

        public InfrastructureConfigurationArgs build() {
            $.instanceProfileName = Objects.requireNonNull($.instanceProfileName, "expected parameter 'instanceProfileName' to be non-null");
            return $;
        }
    }

}
