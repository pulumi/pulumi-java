// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kafkaconnect.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details about a fixed capacity allocated to a connector.
 * 
 */
public final class ConnectorProvisionedCapacity extends com.pulumi.resources.InvokeArgs {

    public static final ConnectorProvisionedCapacity Empty = new ConnectorProvisionedCapacity();

    /**
     * Specifies how many MSK Connect Units (MCU) are allocated to the connector.
     * 
     */
    @Import(name="mcuCount")
    private @Nullable Integer mcuCount;

    public Optional<Integer> mcuCount() {
        return Optional.ofNullable(this.mcuCount);
    }

    /**
     * Number of workers for a connector.
     * 
     */
    @Import(name="workerCount", required=true)
    private Integer workerCount;

    public Integer workerCount() {
        return this.workerCount;
    }

    private ConnectorProvisionedCapacity() {}

    private ConnectorProvisionedCapacity(ConnectorProvisionedCapacity $) {
        this.mcuCount = $.mcuCount;
        this.workerCount = $.workerCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorProvisionedCapacity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorProvisionedCapacity $;

        public Builder() {
            $ = new ConnectorProvisionedCapacity();
        }

        public Builder(ConnectorProvisionedCapacity defaults) {
            $ = new ConnectorProvisionedCapacity(Objects.requireNonNull(defaults));
        }

        public Builder mcuCount(@Nullable Integer mcuCount) {
            $.mcuCount = mcuCount;
            return this;
        }

        public Builder workerCount(Integer workerCount) {
            $.workerCount = workerCount;
            return this;
        }

        public ConnectorProvisionedCapacity build() {
            $.workerCount = Objects.requireNonNull($.workerCount, "expected parameter 'workerCount' to be non-null");
            return $;
        }
    }

}
