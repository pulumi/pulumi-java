// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.route53.inputs;

import com.pulumi.awsnative.route53.enums.HealthCheckConfigPropertiesInsufficientDataHealthStatus;
import com.pulumi.awsnative.route53.enums.HealthCheckConfigPropertiesType;
import com.pulumi.awsnative.route53.inputs.HealthCheckAlarmIdentifier;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A complex type that contains information about the health check.
 * 
 */
public final class HealthCheckConfigProperties extends com.pulumi.resources.InvokeArgs {

    public static final HealthCheckConfigProperties Empty = new HealthCheckConfigProperties();

    @Import(name="alarmIdentifier")
    private @Nullable HealthCheckAlarmIdentifier alarmIdentifier;

    public Optional<HealthCheckAlarmIdentifier> alarmIdentifier() {
        return Optional.ofNullable(this.alarmIdentifier);
    }

    @Import(name="childHealthChecks")
    private @Nullable List<String> childHealthChecks;

    public Optional<List<String>> childHealthChecks() {
        return Optional.ofNullable(this.childHealthChecks);
    }

    @Import(name="enableSNI")
    private @Nullable Boolean enableSNI;

    public Optional<Boolean> enableSNI() {
        return Optional.ofNullable(this.enableSNI);
    }

    @Import(name="failureThreshold")
    private @Nullable Integer failureThreshold;

    public Optional<Integer> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }

    @Import(name="fullyQualifiedDomainName")
    private @Nullable String fullyQualifiedDomainName;

    public Optional<String> fullyQualifiedDomainName() {
        return Optional.ofNullable(this.fullyQualifiedDomainName);
    }

    @Import(name="healthThreshold")
    private @Nullable Integer healthThreshold;

    public Optional<Integer> healthThreshold() {
        return Optional.ofNullable(this.healthThreshold);
    }

    @Import(name="iPAddress")
    private @Nullable String iPAddress;

    public Optional<String> iPAddress() {
        return Optional.ofNullable(this.iPAddress);
    }

    @Import(name="insufficientDataHealthStatus")
    private @Nullable HealthCheckConfigPropertiesInsufficientDataHealthStatus insufficientDataHealthStatus;

    public Optional<HealthCheckConfigPropertiesInsufficientDataHealthStatus> insufficientDataHealthStatus() {
        return Optional.ofNullable(this.insufficientDataHealthStatus);
    }

    @Import(name="inverted")
    private @Nullable Boolean inverted;

    public Optional<Boolean> inverted() {
        return Optional.ofNullable(this.inverted);
    }

    @Import(name="measureLatency")
    private @Nullable Boolean measureLatency;

    public Optional<Boolean> measureLatency() {
        return Optional.ofNullable(this.measureLatency);
    }

    @Import(name="port")
    private @Nullable Integer port;

    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="regions")
    private @Nullable List<String> regions;

    public Optional<List<String>> regions() {
        return Optional.ofNullable(this.regions);
    }

    @Import(name="requestInterval")
    private @Nullable Integer requestInterval;

    public Optional<Integer> requestInterval() {
        return Optional.ofNullable(this.requestInterval);
    }

    @Import(name="resourcePath")
    private @Nullable String resourcePath;

    public Optional<String> resourcePath() {
        return Optional.ofNullable(this.resourcePath);
    }

    @Import(name="routingControlArn")
    private @Nullable String routingControlArn;

    public Optional<String> routingControlArn() {
        return Optional.ofNullable(this.routingControlArn);
    }

    @Import(name="searchString")
    private @Nullable String searchString;

    public Optional<String> searchString() {
        return Optional.ofNullable(this.searchString);
    }

    @Import(name="type", required=true)
    private HealthCheckConfigPropertiesType type;

    public HealthCheckConfigPropertiesType type() {
        return this.type;
    }

    private HealthCheckConfigProperties() {}

    private HealthCheckConfigProperties(HealthCheckConfigProperties $) {
        this.alarmIdentifier = $.alarmIdentifier;
        this.childHealthChecks = $.childHealthChecks;
        this.enableSNI = $.enableSNI;
        this.failureThreshold = $.failureThreshold;
        this.fullyQualifiedDomainName = $.fullyQualifiedDomainName;
        this.healthThreshold = $.healthThreshold;
        this.iPAddress = $.iPAddress;
        this.insufficientDataHealthStatus = $.insufficientDataHealthStatus;
        this.inverted = $.inverted;
        this.measureLatency = $.measureLatency;
        this.port = $.port;
        this.regions = $.regions;
        this.requestInterval = $.requestInterval;
        this.resourcePath = $.resourcePath;
        this.routingControlArn = $.routingControlArn;
        this.searchString = $.searchString;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HealthCheckConfigProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HealthCheckConfigProperties $;

        public Builder() {
            $ = new HealthCheckConfigProperties();
        }

        public Builder(HealthCheckConfigProperties defaults) {
            $ = new HealthCheckConfigProperties(Objects.requireNonNull(defaults));
        }

        public Builder alarmIdentifier(@Nullable HealthCheckAlarmIdentifier alarmIdentifier) {
            $.alarmIdentifier = alarmIdentifier;
            return this;
        }

        public Builder childHealthChecks(@Nullable List<String> childHealthChecks) {
            $.childHealthChecks = childHealthChecks;
            return this;
        }

        public Builder childHealthChecks(String... childHealthChecks) {
            return childHealthChecks(List.of(childHealthChecks));
        }

        public Builder enableSNI(@Nullable Boolean enableSNI) {
            $.enableSNI = enableSNI;
            return this;
        }

        public Builder failureThreshold(@Nullable Integer failureThreshold) {
            $.failureThreshold = failureThreshold;
            return this;
        }

        public Builder fullyQualifiedDomainName(@Nullable String fullyQualifiedDomainName) {
            $.fullyQualifiedDomainName = fullyQualifiedDomainName;
            return this;
        }

        public Builder healthThreshold(@Nullable Integer healthThreshold) {
            $.healthThreshold = healthThreshold;
            return this;
        }

        public Builder iPAddress(@Nullable String iPAddress) {
            $.iPAddress = iPAddress;
            return this;
        }

        public Builder insufficientDataHealthStatus(@Nullable HealthCheckConfigPropertiesInsufficientDataHealthStatus insufficientDataHealthStatus) {
            $.insufficientDataHealthStatus = insufficientDataHealthStatus;
            return this;
        }

        public Builder inverted(@Nullable Boolean inverted) {
            $.inverted = inverted;
            return this;
        }

        public Builder measureLatency(@Nullable Boolean measureLatency) {
            $.measureLatency = measureLatency;
            return this;
        }

        public Builder port(@Nullable Integer port) {
            $.port = port;
            return this;
        }

        public Builder regions(@Nullable List<String> regions) {
            $.regions = regions;
            return this;
        }

        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        public Builder requestInterval(@Nullable Integer requestInterval) {
            $.requestInterval = requestInterval;
            return this;
        }

        public Builder resourcePath(@Nullable String resourcePath) {
            $.resourcePath = resourcePath;
            return this;
        }

        public Builder routingControlArn(@Nullable String routingControlArn) {
            $.routingControlArn = routingControlArn;
            return this;
        }

        public Builder searchString(@Nullable String searchString) {
            $.searchString = searchString;
            return this;
        }

        public Builder type(HealthCheckConfigPropertiesType type) {
            $.type = type;
            return this;
        }

        public HealthCheckConfigProperties build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
