// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediapackage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
 * 
 */
public final class OriginEndpointSpekeKeyProvider extends com.pulumi.resources.InvokeArgs {

    public static final OriginEndpointSpekeKeyProvider Empty = new OriginEndpointSpekeKeyProvider();

    /**
     * An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service.
     * 
     */
    @Import(name="certificateArn")
    private @Nullable String certificateArn;

    /**
     * @return An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service.
     * 
     */
    public Optional<String> certificateArn() {
        return Optional.ofNullable(this.certificateArn);
    }

    /**
     * The resource ID to include in key requests.
     * 
     */
    @Import(name="resourceId", required=true)
    private String resourceId;

    /**
     * @return The resource ID to include in key requests.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service.
     * 
     */
    @Import(name="roleArn", required=true)
    private String roleArn;

    /**
     * @return An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }

    /**
     * The system IDs to include in key requests.
     * 
     */
    @Import(name="systemIds", required=true)
    private List<String> systemIds;

    /**
     * @return The system IDs to include in key requests.
     * 
     */
    public List<String> systemIds() {
        return this.systemIds;
    }

    /**
     * The URL of the external key provider service.
     * 
     */
    @Import(name="url", required=true)
    private String url;

    /**
     * @return The URL of the external key provider service.
     * 
     */
    public String url() {
        return this.url;
    }

    private OriginEndpointSpekeKeyProvider() {}

    private OriginEndpointSpekeKeyProvider(OriginEndpointSpekeKeyProvider $) {
        this.certificateArn = $.certificateArn;
        this.resourceId = $.resourceId;
        this.roleArn = $.roleArn;
        this.systemIds = $.systemIds;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OriginEndpointSpekeKeyProvider defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OriginEndpointSpekeKeyProvider $;

        public Builder() {
            $ = new OriginEndpointSpekeKeyProvider();
        }

        public Builder(OriginEndpointSpekeKeyProvider defaults) {
            $ = new OriginEndpointSpekeKeyProvider(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateArn An Amazon Resource Name (ARN) of a Certificate Manager certificate that MediaPackage will use for enforcing secure end-to-end data transfer with the key provider service.
         * 
         * @return builder
         * 
         */
        public Builder certificateArn(@Nullable String certificateArn) {
            $.certificateArn = certificateArn;
            return this;
        }

        /**
         * @param resourceId The resource ID to include in key requests.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param roleArn An Amazon Resource Name (ARN) of an IAM role that AWS Elemental MediaPackage will assume when accessing the key provider service.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param systemIds The system IDs to include in key requests.
         * 
         * @return builder
         * 
         */
        public Builder systemIds(List<String> systemIds) {
            $.systemIds = systemIds;
            return this;
        }

        /**
         * @param systemIds The system IDs to include in key requests.
         * 
         * @return builder
         * 
         */
        public Builder systemIds(String... systemIds) {
            return systemIds(List.of(systemIds));
        }

        /**
         * @param url The URL of the external key provider service.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            $.url = url;
            return this;
        }

        public OriginEndpointSpekeKeyProvider build() {
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            $.systemIds = Objects.requireNonNull($.systemIds, "expected parameter 'systemIds' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
