// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lambda.inputs;

import com.pulumi.awsnative.lambda.enums.CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * Policies to control how to act if a signature is invalid
 * 
 */
public final class CodeSigningConfigCodeSigningPolicies extends com.pulumi.resources.InvokeArgs {

    public static final CodeSigningConfigCodeSigningPolicies Empty = new CodeSigningConfigCodeSigningPolicies();

    /**
     * Indicates how Lambda operations involve updating the code artifact will operate. Default to Warn if not provided
     * 
     */
    @Import(name="untrustedArtifactOnDeployment", required=true)
    private CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment untrustedArtifactOnDeployment;

    public CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment untrustedArtifactOnDeployment() {
        return this.untrustedArtifactOnDeployment;
    }

    private CodeSigningConfigCodeSigningPolicies() {}

    private CodeSigningConfigCodeSigningPolicies(CodeSigningConfigCodeSigningPolicies $) {
        this.untrustedArtifactOnDeployment = $.untrustedArtifactOnDeployment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CodeSigningConfigCodeSigningPolicies defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CodeSigningConfigCodeSigningPolicies $;

        public Builder() {
            $ = new CodeSigningConfigCodeSigningPolicies();
        }

        public Builder(CodeSigningConfigCodeSigningPolicies defaults) {
            $ = new CodeSigningConfigCodeSigningPolicies(Objects.requireNonNull(defaults));
        }

        public Builder untrustedArtifactOnDeployment(CodeSigningConfigCodeSigningPoliciesUntrustedArtifactOnDeployment untrustedArtifactOnDeployment) {
            $.untrustedArtifactOnDeployment = untrustedArtifactOnDeployment;
            return this;
        }

        public CodeSigningConfigCodeSigningPolicies build() {
            $.untrustedArtifactOnDeployment = Objects.requireNonNull($.untrustedArtifactOnDeployment, "expected parameter 'untrustedArtifactOnDeployment' to be non-null");
            return $;
        }
    }

}
