// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediatailor.outputs;

import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationAvailSuppression;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationBumper;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationCdnConfiguration;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationConfigurationAliases;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationDashConfigurationForPut;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationLivePreRollConfiguration;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationManifestProcessingRules;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPlaybackConfigurationResult {
    /**
     * @return The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
     * 
     */
    private final @Nullable String adDecisionServerUrl;
    /**
     * @return The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    private final @Nullable PlaybackConfigurationAvailSuppression availSuppression;
    /**
     * @return The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers (https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
     * 
     */
    private final @Nullable PlaybackConfigurationBumper bumper;
    /**
     * @return The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
     * 
     */
    private final @Nullable PlaybackConfigurationCdnConfiguration cdnConfiguration;
    /**
     * @return The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables.
     * 
     */
    private final @Nullable PlaybackConfigurationConfigurationAliases configurationAliases;
    /**
     * @return The configuration for DASH content.
     * 
     */
    private final @Nullable PlaybackConfigurationDashConfigurationForPut dashConfiguration;
    /**
     * @return The configuration for pre-roll ad insertion.
     * 
     */
    private final @Nullable PlaybackConfigurationLivePreRollConfiguration livePreRollConfiguration;
    /**
     * @return The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
     * 
     */
    private final @Nullable PlaybackConfigurationManifestProcessingRules manifestProcessingRules;
    /**
     * @return Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    private final @Nullable Integer personalizationThresholdSeconds;
    /**
     * @return The URL that the player uses to initialize a session that uses client-side reporting.
     * 
     */
    private final @Nullable String sessionInitializationEndpointPrefix;
    /**
     * @return The URL for a high-quality video asset to transcode and use to fill in time that&#39;s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
     * 
     */
    private final @Nullable String slateAdUrl;
    /**
     * @return The tags to assign to the playback configuration.
     * 
     */
    private final @Nullable List<PlaybackConfigurationTag> tags;
    /**
     * @return The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
     * 
     */
    private final @Nullable String transcodeProfileName;
    /**
     * @return The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
     * 
     */
    private final @Nullable String videoContentSourceUrl;

    @CustomType.Constructor
    private GetPlaybackConfigurationResult(
        @CustomType.Parameter("adDecisionServerUrl") @Nullable String adDecisionServerUrl,
        @CustomType.Parameter("availSuppression") @Nullable PlaybackConfigurationAvailSuppression availSuppression,
        @CustomType.Parameter("bumper") @Nullable PlaybackConfigurationBumper bumper,
        @CustomType.Parameter("cdnConfiguration") @Nullable PlaybackConfigurationCdnConfiguration cdnConfiguration,
        @CustomType.Parameter("configurationAliases") @Nullable PlaybackConfigurationConfigurationAliases configurationAliases,
        @CustomType.Parameter("dashConfiguration") @Nullable PlaybackConfigurationDashConfigurationForPut dashConfiguration,
        @CustomType.Parameter("livePreRollConfiguration") @Nullable PlaybackConfigurationLivePreRollConfiguration livePreRollConfiguration,
        @CustomType.Parameter("manifestProcessingRules") @Nullable PlaybackConfigurationManifestProcessingRules manifestProcessingRules,
        @CustomType.Parameter("personalizationThresholdSeconds") @Nullable Integer personalizationThresholdSeconds,
        @CustomType.Parameter("sessionInitializationEndpointPrefix") @Nullable String sessionInitializationEndpointPrefix,
        @CustomType.Parameter("slateAdUrl") @Nullable String slateAdUrl,
        @CustomType.Parameter("tags") @Nullable List<PlaybackConfigurationTag> tags,
        @CustomType.Parameter("transcodeProfileName") @Nullable String transcodeProfileName,
        @CustomType.Parameter("videoContentSourceUrl") @Nullable String videoContentSourceUrl) {
        this.adDecisionServerUrl = adDecisionServerUrl;
        this.availSuppression = availSuppression;
        this.bumper = bumper;
        this.cdnConfiguration = cdnConfiguration;
        this.configurationAliases = configurationAliases;
        this.dashConfiguration = dashConfiguration;
        this.livePreRollConfiguration = livePreRollConfiguration;
        this.manifestProcessingRules = manifestProcessingRules;
        this.personalizationThresholdSeconds = personalizationThresholdSeconds;
        this.sessionInitializationEndpointPrefix = sessionInitializationEndpointPrefix;
        this.slateAdUrl = slateAdUrl;
        this.tags = tags;
        this.transcodeProfileName = transcodeProfileName;
        this.videoContentSourceUrl = videoContentSourceUrl;
    }

    /**
     * @return The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
     * 
     */
    public Optional<String> adDecisionServerUrl() {
        return Optional.ofNullable(this.adDecisionServerUrl);
    }
    /**
     * @return The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    public Optional<PlaybackConfigurationAvailSuppression> availSuppression() {
        return Optional.ofNullable(this.availSuppression);
    }
    /**
     * @return The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers (https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
     * 
     */
    public Optional<PlaybackConfigurationBumper> bumper() {
        return Optional.ofNullable(this.bumper);
    }
    /**
     * @return The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
     * 
     */
    public Optional<PlaybackConfigurationCdnConfiguration> cdnConfiguration() {
        return Optional.ofNullable(this.cdnConfiguration);
    }
    /**
     * @return The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables.
     * 
     */
    public Optional<PlaybackConfigurationConfigurationAliases> configurationAliases() {
        return Optional.ofNullable(this.configurationAliases);
    }
    /**
     * @return The configuration for DASH content.
     * 
     */
    public Optional<PlaybackConfigurationDashConfigurationForPut> dashConfiguration() {
        return Optional.ofNullable(this.dashConfiguration);
    }
    /**
     * @return The configuration for pre-roll ad insertion.
     * 
     */
    public Optional<PlaybackConfigurationLivePreRollConfiguration> livePreRollConfiguration() {
        return Optional.ofNullable(this.livePreRollConfiguration);
    }
    /**
     * @return The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
     * 
     */
    public Optional<PlaybackConfigurationManifestProcessingRules> manifestProcessingRules() {
        return Optional.ofNullable(this.manifestProcessingRules);
    }
    /**
     * @return Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    public Optional<Integer> personalizationThresholdSeconds() {
        return Optional.ofNullable(this.personalizationThresholdSeconds);
    }
    /**
     * @return The URL that the player uses to initialize a session that uses client-side reporting.
     * 
     */
    public Optional<String> sessionInitializationEndpointPrefix() {
        return Optional.ofNullable(this.sessionInitializationEndpointPrefix);
    }
    /**
     * @return The URL for a high-quality video asset to transcode and use to fill in time that&#39;s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
     * 
     */
    public Optional<String> slateAdUrl() {
        return Optional.ofNullable(this.slateAdUrl);
    }
    /**
     * @return The tags to assign to the playback configuration.
     * 
     */
    public List<PlaybackConfigurationTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
     * 
     */
    public Optional<String> transcodeProfileName() {
        return Optional.ofNullable(this.transcodeProfileName);
    }
    /**
     * @return The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
     * 
     */
    public Optional<String> videoContentSourceUrl() {
        return Optional.ofNullable(this.videoContentSourceUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPlaybackConfigurationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String adDecisionServerUrl;
        private @Nullable PlaybackConfigurationAvailSuppression availSuppression;
        private @Nullable PlaybackConfigurationBumper bumper;
        private @Nullable PlaybackConfigurationCdnConfiguration cdnConfiguration;
        private @Nullable PlaybackConfigurationConfigurationAliases configurationAliases;
        private @Nullable PlaybackConfigurationDashConfigurationForPut dashConfiguration;
        private @Nullable PlaybackConfigurationLivePreRollConfiguration livePreRollConfiguration;
        private @Nullable PlaybackConfigurationManifestProcessingRules manifestProcessingRules;
        private @Nullable Integer personalizationThresholdSeconds;
        private @Nullable String sessionInitializationEndpointPrefix;
        private @Nullable String slateAdUrl;
        private @Nullable List<PlaybackConfigurationTag> tags;
        private @Nullable String transcodeProfileName;
        private @Nullable String videoContentSourceUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPlaybackConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adDecisionServerUrl = defaults.adDecisionServerUrl;
    	      this.availSuppression = defaults.availSuppression;
    	      this.bumper = defaults.bumper;
    	      this.cdnConfiguration = defaults.cdnConfiguration;
    	      this.configurationAliases = defaults.configurationAliases;
    	      this.dashConfiguration = defaults.dashConfiguration;
    	      this.livePreRollConfiguration = defaults.livePreRollConfiguration;
    	      this.manifestProcessingRules = defaults.manifestProcessingRules;
    	      this.personalizationThresholdSeconds = defaults.personalizationThresholdSeconds;
    	      this.sessionInitializationEndpointPrefix = defaults.sessionInitializationEndpointPrefix;
    	      this.slateAdUrl = defaults.slateAdUrl;
    	      this.tags = defaults.tags;
    	      this.transcodeProfileName = defaults.transcodeProfileName;
    	      this.videoContentSourceUrl = defaults.videoContentSourceUrl;
        }

        public Builder adDecisionServerUrl(@Nullable String adDecisionServerUrl) {
            this.adDecisionServerUrl = adDecisionServerUrl;
            return this;
        }
        public Builder availSuppression(@Nullable PlaybackConfigurationAvailSuppression availSuppression) {
            this.availSuppression = availSuppression;
            return this;
        }
        public Builder bumper(@Nullable PlaybackConfigurationBumper bumper) {
            this.bumper = bumper;
            return this;
        }
        public Builder cdnConfiguration(@Nullable PlaybackConfigurationCdnConfiguration cdnConfiguration) {
            this.cdnConfiguration = cdnConfiguration;
            return this;
        }
        public Builder configurationAliases(@Nullable PlaybackConfigurationConfigurationAliases configurationAliases) {
            this.configurationAliases = configurationAliases;
            return this;
        }
        public Builder dashConfiguration(@Nullable PlaybackConfigurationDashConfigurationForPut dashConfiguration) {
            this.dashConfiguration = dashConfiguration;
            return this;
        }
        public Builder livePreRollConfiguration(@Nullable PlaybackConfigurationLivePreRollConfiguration livePreRollConfiguration) {
            this.livePreRollConfiguration = livePreRollConfiguration;
            return this;
        }
        public Builder manifestProcessingRules(@Nullable PlaybackConfigurationManifestProcessingRules manifestProcessingRules) {
            this.manifestProcessingRules = manifestProcessingRules;
            return this;
        }
        public Builder personalizationThresholdSeconds(@Nullable Integer personalizationThresholdSeconds) {
            this.personalizationThresholdSeconds = personalizationThresholdSeconds;
            return this;
        }
        public Builder sessionInitializationEndpointPrefix(@Nullable String sessionInitializationEndpointPrefix) {
            this.sessionInitializationEndpointPrefix = sessionInitializationEndpointPrefix;
            return this;
        }
        public Builder slateAdUrl(@Nullable String slateAdUrl) {
            this.slateAdUrl = slateAdUrl;
            return this;
        }
        public Builder tags(@Nullable List<PlaybackConfigurationTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(PlaybackConfigurationTag... tags) {
            return tags(List.of(tags));
        }
        public Builder transcodeProfileName(@Nullable String transcodeProfileName) {
            this.transcodeProfileName = transcodeProfileName;
            return this;
        }
        public Builder videoContentSourceUrl(@Nullable String videoContentSourceUrl) {
            this.videoContentSourceUrl = videoContentSourceUrl;
            return this;
        }        public GetPlaybackConfigurationResult build() {
            return new GetPlaybackConfigurationResult(adDecisionServerUrl, availSuppression, bumper, cdnConfiguration, configurationAliases, dashConfiguration, livePreRollConfiguration, manifestProcessingRules, personalizationThresholdSeconds, sessionInitializationEndpointPrefix, slateAdUrl, tags, transcodeProfileName, videoContentSourceUrl);
        }
    }
}
