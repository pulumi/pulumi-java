// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.inputs;

import com.pulumi.awsnative.quicksight.inputs.DataSourceAmazonElasticsearchParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceAmazonOpenSearchParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceAthenaParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceAuroraParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceAuroraPostgreSqlParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceMariaDbParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceMySqlParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceOracleParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourcePostgreSqlParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourcePrestoParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceRdsParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceRedshiftParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceS3Parameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceSnowflakeParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceSparkParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceSqlServerParameters;
import com.pulumi.awsnative.quicksight.inputs.DataSourceTeradataParameters;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * &lt;p&gt;The parameters that Amazon QuickSight uses to connect to your underlying data source.
 *             This is a variant type structure. For this structure to be valid, only one of the
 *             attributes can be non-null.&lt;/p&gt;
 * 
 */
public final class DataSourceParameters extends com.pulumi.resources.InvokeArgs {

    public static final DataSourceParameters Empty = new DataSourceParameters();

    @Import(name="amazonElasticsearchParameters")
    private @Nullable DataSourceAmazonElasticsearchParameters amazonElasticsearchParameters;

    public Optional<DataSourceAmazonElasticsearchParameters> amazonElasticsearchParameters() {
        return Optional.ofNullable(this.amazonElasticsearchParameters);
    }

    @Import(name="amazonOpenSearchParameters")
    private @Nullable DataSourceAmazonOpenSearchParameters amazonOpenSearchParameters;

    public Optional<DataSourceAmazonOpenSearchParameters> amazonOpenSearchParameters() {
        return Optional.ofNullable(this.amazonOpenSearchParameters);
    }

    @Import(name="athenaParameters")
    private @Nullable DataSourceAthenaParameters athenaParameters;

    public Optional<DataSourceAthenaParameters> athenaParameters() {
        return Optional.ofNullable(this.athenaParameters);
    }

    @Import(name="auroraParameters")
    private @Nullable DataSourceAuroraParameters auroraParameters;

    public Optional<DataSourceAuroraParameters> auroraParameters() {
        return Optional.ofNullable(this.auroraParameters);
    }

    @Import(name="auroraPostgreSqlParameters")
    private @Nullable DataSourceAuroraPostgreSqlParameters auroraPostgreSqlParameters;

    public Optional<DataSourceAuroraPostgreSqlParameters> auroraPostgreSqlParameters() {
        return Optional.ofNullable(this.auroraPostgreSqlParameters);
    }

    @Import(name="mariaDbParameters")
    private @Nullable DataSourceMariaDbParameters mariaDbParameters;

    public Optional<DataSourceMariaDbParameters> mariaDbParameters() {
        return Optional.ofNullable(this.mariaDbParameters);
    }

    @Import(name="mySqlParameters")
    private @Nullable DataSourceMySqlParameters mySqlParameters;

    public Optional<DataSourceMySqlParameters> mySqlParameters() {
        return Optional.ofNullable(this.mySqlParameters);
    }

    @Import(name="oracleParameters")
    private @Nullable DataSourceOracleParameters oracleParameters;

    public Optional<DataSourceOracleParameters> oracleParameters() {
        return Optional.ofNullable(this.oracleParameters);
    }

    @Import(name="postgreSqlParameters")
    private @Nullable DataSourcePostgreSqlParameters postgreSqlParameters;

    public Optional<DataSourcePostgreSqlParameters> postgreSqlParameters() {
        return Optional.ofNullable(this.postgreSqlParameters);
    }

    @Import(name="prestoParameters")
    private @Nullable DataSourcePrestoParameters prestoParameters;

    public Optional<DataSourcePrestoParameters> prestoParameters() {
        return Optional.ofNullable(this.prestoParameters);
    }

    @Import(name="rdsParameters")
    private @Nullable DataSourceRdsParameters rdsParameters;

    public Optional<DataSourceRdsParameters> rdsParameters() {
        return Optional.ofNullable(this.rdsParameters);
    }

    @Import(name="redshiftParameters")
    private @Nullable DataSourceRedshiftParameters redshiftParameters;

    public Optional<DataSourceRedshiftParameters> redshiftParameters() {
        return Optional.ofNullable(this.redshiftParameters);
    }

    @Import(name="s3Parameters")
    private @Nullable DataSourceS3Parameters s3Parameters;

    public Optional<DataSourceS3Parameters> s3Parameters() {
        return Optional.ofNullable(this.s3Parameters);
    }

    @Import(name="snowflakeParameters")
    private @Nullable DataSourceSnowflakeParameters snowflakeParameters;

    public Optional<DataSourceSnowflakeParameters> snowflakeParameters() {
        return Optional.ofNullable(this.snowflakeParameters);
    }

    @Import(name="sparkParameters")
    private @Nullable DataSourceSparkParameters sparkParameters;

    public Optional<DataSourceSparkParameters> sparkParameters() {
        return Optional.ofNullable(this.sparkParameters);
    }

    @Import(name="sqlServerParameters")
    private @Nullable DataSourceSqlServerParameters sqlServerParameters;

    public Optional<DataSourceSqlServerParameters> sqlServerParameters() {
        return Optional.ofNullable(this.sqlServerParameters);
    }

    @Import(name="teradataParameters")
    private @Nullable DataSourceTeradataParameters teradataParameters;

    public Optional<DataSourceTeradataParameters> teradataParameters() {
        return Optional.ofNullable(this.teradataParameters);
    }

    private DataSourceParameters() {}

    private DataSourceParameters(DataSourceParameters $) {
        this.amazonElasticsearchParameters = $.amazonElasticsearchParameters;
        this.amazonOpenSearchParameters = $.amazonOpenSearchParameters;
        this.athenaParameters = $.athenaParameters;
        this.auroraParameters = $.auroraParameters;
        this.auroraPostgreSqlParameters = $.auroraPostgreSqlParameters;
        this.mariaDbParameters = $.mariaDbParameters;
        this.mySqlParameters = $.mySqlParameters;
        this.oracleParameters = $.oracleParameters;
        this.postgreSqlParameters = $.postgreSqlParameters;
        this.prestoParameters = $.prestoParameters;
        this.rdsParameters = $.rdsParameters;
        this.redshiftParameters = $.redshiftParameters;
        this.s3Parameters = $.s3Parameters;
        this.snowflakeParameters = $.snowflakeParameters;
        this.sparkParameters = $.sparkParameters;
        this.sqlServerParameters = $.sqlServerParameters;
        this.teradataParameters = $.teradataParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceParameters defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceParameters $;

        public Builder() {
            $ = new DataSourceParameters();
        }

        public Builder(DataSourceParameters defaults) {
            $ = new DataSourceParameters(Objects.requireNonNull(defaults));
        }

        public Builder amazonElasticsearchParameters(@Nullable DataSourceAmazonElasticsearchParameters amazonElasticsearchParameters) {
            $.amazonElasticsearchParameters = amazonElasticsearchParameters;
            return this;
        }

        public Builder amazonOpenSearchParameters(@Nullable DataSourceAmazonOpenSearchParameters amazonOpenSearchParameters) {
            $.amazonOpenSearchParameters = amazonOpenSearchParameters;
            return this;
        }

        public Builder athenaParameters(@Nullable DataSourceAthenaParameters athenaParameters) {
            $.athenaParameters = athenaParameters;
            return this;
        }

        public Builder auroraParameters(@Nullable DataSourceAuroraParameters auroraParameters) {
            $.auroraParameters = auroraParameters;
            return this;
        }

        public Builder auroraPostgreSqlParameters(@Nullable DataSourceAuroraPostgreSqlParameters auroraPostgreSqlParameters) {
            $.auroraPostgreSqlParameters = auroraPostgreSqlParameters;
            return this;
        }

        public Builder mariaDbParameters(@Nullable DataSourceMariaDbParameters mariaDbParameters) {
            $.mariaDbParameters = mariaDbParameters;
            return this;
        }

        public Builder mySqlParameters(@Nullable DataSourceMySqlParameters mySqlParameters) {
            $.mySqlParameters = mySqlParameters;
            return this;
        }

        public Builder oracleParameters(@Nullable DataSourceOracleParameters oracleParameters) {
            $.oracleParameters = oracleParameters;
            return this;
        }

        public Builder postgreSqlParameters(@Nullable DataSourcePostgreSqlParameters postgreSqlParameters) {
            $.postgreSqlParameters = postgreSqlParameters;
            return this;
        }

        public Builder prestoParameters(@Nullable DataSourcePrestoParameters prestoParameters) {
            $.prestoParameters = prestoParameters;
            return this;
        }

        public Builder rdsParameters(@Nullable DataSourceRdsParameters rdsParameters) {
            $.rdsParameters = rdsParameters;
            return this;
        }

        public Builder redshiftParameters(@Nullable DataSourceRedshiftParameters redshiftParameters) {
            $.redshiftParameters = redshiftParameters;
            return this;
        }

        public Builder s3Parameters(@Nullable DataSourceS3Parameters s3Parameters) {
            $.s3Parameters = s3Parameters;
            return this;
        }

        public Builder snowflakeParameters(@Nullable DataSourceSnowflakeParameters snowflakeParameters) {
            $.snowflakeParameters = snowflakeParameters;
            return this;
        }

        public Builder sparkParameters(@Nullable DataSourceSparkParameters sparkParameters) {
            $.sparkParameters = sparkParameters;
            return this;
        }

        public Builder sqlServerParameters(@Nullable DataSourceSqlServerParameters sqlServerParameters) {
            $.sqlServerParameters = sqlServerParameters;
            return this;
        }

        public Builder teradataParameters(@Nullable DataSourceTeradataParameters teradataParameters) {
            $.teradataParameters = teradataParameters;
            return this;
        }

        public DataSourceParameters build() {
            return $;
        }
    }

}
