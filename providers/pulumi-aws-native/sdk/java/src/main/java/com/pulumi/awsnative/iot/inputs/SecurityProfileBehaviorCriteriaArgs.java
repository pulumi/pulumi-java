// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.inputs;

import com.pulumi.awsnative.iot.enums.SecurityProfileBehaviorCriteriaComparisonOperator;
import com.pulumi.awsnative.iot.inputs.SecurityProfileMachineLearningDetectionConfigArgs;
import com.pulumi.awsnative.iot.inputs.SecurityProfileMetricValueArgs;
import com.pulumi.awsnative.iot.inputs.SecurityProfileStatisticalThresholdArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The criteria by which the behavior is determined to be normal.
 * 
 */
public final class SecurityProfileBehaviorCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityProfileBehaviorCriteriaArgs Empty = new SecurityProfileBehaviorCriteriaArgs();

    /**
     * The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
     * 
     */
    @Import(name="comparisonOperator")
      private final @Nullable Output<SecurityProfileBehaviorCriteriaComparisonOperator> comparisonOperator;

    public Output<SecurityProfileBehaviorCriteriaComparisonOperator> comparisonOperator() {
        return this.comparisonOperator == null ? Codegen.empty() : this.comparisonOperator;
    }

    /**
     * If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
     * 
     */
    @Import(name="consecutiveDatapointsToAlarm")
      private final @Nullable Output<Integer> consecutiveDatapointsToAlarm;

    public Output<Integer> consecutiveDatapointsToAlarm() {
        return this.consecutiveDatapointsToAlarm == null ? Codegen.empty() : this.consecutiveDatapointsToAlarm;
    }

    /**
     * If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
     * 
     */
    @Import(name="consecutiveDatapointsToClear")
      private final @Nullable Output<Integer> consecutiveDatapointsToClear;

    public Output<Integer> consecutiveDatapointsToClear() {
        return this.consecutiveDatapointsToClear == null ? Codegen.empty() : this.consecutiveDatapointsToClear;
    }

    /**
     * Use this to specify the time duration over which the behavior is evaluated.
     * 
     */
    @Import(name="durationSeconds")
      private final @Nullable Output<Integer> durationSeconds;

    public Output<Integer> durationSeconds() {
        return this.durationSeconds == null ? Codegen.empty() : this.durationSeconds;
    }

    @Import(name="mlDetectionConfig")
      private final @Nullable Output<SecurityProfileMachineLearningDetectionConfigArgs> mlDetectionConfig;

    public Output<SecurityProfileMachineLearningDetectionConfigArgs> mlDetectionConfig() {
        return this.mlDetectionConfig == null ? Codegen.empty() : this.mlDetectionConfig;
    }

    @Import(name="statisticalThreshold")
      private final @Nullable Output<SecurityProfileStatisticalThresholdArgs> statisticalThreshold;

    public Output<SecurityProfileStatisticalThresholdArgs> statisticalThreshold() {
        return this.statisticalThreshold == null ? Codegen.empty() : this.statisticalThreshold;
    }

    @Import(name="value")
      private final @Nullable Output<SecurityProfileMetricValueArgs> value;

    public Output<SecurityProfileMetricValueArgs> value() {
        return this.value == null ? Codegen.empty() : this.value;
    }

    public SecurityProfileBehaviorCriteriaArgs(
        @Nullable Output<SecurityProfileBehaviorCriteriaComparisonOperator> comparisonOperator,
        @Nullable Output<Integer> consecutiveDatapointsToAlarm,
        @Nullable Output<Integer> consecutiveDatapointsToClear,
        @Nullable Output<Integer> durationSeconds,
        @Nullable Output<SecurityProfileMachineLearningDetectionConfigArgs> mlDetectionConfig,
        @Nullable Output<SecurityProfileStatisticalThresholdArgs> statisticalThreshold,
        @Nullable Output<SecurityProfileMetricValueArgs> value) {
        this.comparisonOperator = comparisonOperator;
        this.consecutiveDatapointsToAlarm = consecutiveDatapointsToAlarm;
        this.consecutiveDatapointsToClear = consecutiveDatapointsToClear;
        this.durationSeconds = durationSeconds;
        this.mlDetectionConfig = mlDetectionConfig;
        this.statisticalThreshold = statisticalThreshold;
        this.value = value;
    }

    private SecurityProfileBehaviorCriteriaArgs() {
        this.comparisonOperator = Codegen.empty();
        this.consecutiveDatapointsToAlarm = Codegen.empty();
        this.consecutiveDatapointsToClear = Codegen.empty();
        this.durationSeconds = Codegen.empty();
        this.mlDetectionConfig = Codegen.empty();
        this.statisticalThreshold = Codegen.empty();
        this.value = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityProfileBehaviorCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SecurityProfileBehaviorCriteriaComparisonOperator> comparisonOperator;
        private @Nullable Output<Integer> consecutiveDatapointsToAlarm;
        private @Nullable Output<Integer> consecutiveDatapointsToClear;
        private @Nullable Output<Integer> durationSeconds;
        private @Nullable Output<SecurityProfileMachineLearningDetectionConfigArgs> mlDetectionConfig;
        private @Nullable Output<SecurityProfileStatisticalThresholdArgs> statisticalThreshold;
        private @Nullable Output<SecurityProfileMetricValueArgs> value;

        public Builder() {
    	      // Empty
        }

        public Builder(SecurityProfileBehaviorCriteriaArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comparisonOperator = defaults.comparisonOperator;
    	      this.consecutiveDatapointsToAlarm = defaults.consecutiveDatapointsToAlarm;
    	      this.consecutiveDatapointsToClear = defaults.consecutiveDatapointsToClear;
    	      this.durationSeconds = defaults.durationSeconds;
    	      this.mlDetectionConfig = defaults.mlDetectionConfig;
    	      this.statisticalThreshold = defaults.statisticalThreshold;
    	      this.value = defaults.value;
        }

        public Builder comparisonOperator(@Nullable Output<SecurityProfileBehaviorCriteriaComparisonOperator> comparisonOperator) {
            this.comparisonOperator = comparisonOperator;
            return this;
        }
        public Builder comparisonOperator(@Nullable SecurityProfileBehaviorCriteriaComparisonOperator comparisonOperator) {
            this.comparisonOperator = Codegen.ofNullable(comparisonOperator);
            return this;
        }
        public Builder consecutiveDatapointsToAlarm(@Nullable Output<Integer> consecutiveDatapointsToAlarm) {
            this.consecutiveDatapointsToAlarm = consecutiveDatapointsToAlarm;
            return this;
        }
        public Builder consecutiveDatapointsToAlarm(@Nullable Integer consecutiveDatapointsToAlarm) {
            this.consecutiveDatapointsToAlarm = Codegen.ofNullable(consecutiveDatapointsToAlarm);
            return this;
        }
        public Builder consecutiveDatapointsToClear(@Nullable Output<Integer> consecutiveDatapointsToClear) {
            this.consecutiveDatapointsToClear = consecutiveDatapointsToClear;
            return this;
        }
        public Builder consecutiveDatapointsToClear(@Nullable Integer consecutiveDatapointsToClear) {
            this.consecutiveDatapointsToClear = Codegen.ofNullable(consecutiveDatapointsToClear);
            return this;
        }
        public Builder durationSeconds(@Nullable Output<Integer> durationSeconds) {
            this.durationSeconds = durationSeconds;
            return this;
        }
        public Builder durationSeconds(@Nullable Integer durationSeconds) {
            this.durationSeconds = Codegen.ofNullable(durationSeconds);
            return this;
        }
        public Builder mlDetectionConfig(@Nullable Output<SecurityProfileMachineLearningDetectionConfigArgs> mlDetectionConfig) {
            this.mlDetectionConfig = mlDetectionConfig;
            return this;
        }
        public Builder mlDetectionConfig(@Nullable SecurityProfileMachineLearningDetectionConfigArgs mlDetectionConfig) {
            this.mlDetectionConfig = Codegen.ofNullable(mlDetectionConfig);
            return this;
        }
        public Builder statisticalThreshold(@Nullable Output<SecurityProfileStatisticalThresholdArgs> statisticalThreshold) {
            this.statisticalThreshold = statisticalThreshold;
            return this;
        }
        public Builder statisticalThreshold(@Nullable SecurityProfileStatisticalThresholdArgs statisticalThreshold) {
            this.statisticalThreshold = Codegen.ofNullable(statisticalThreshold);
            return this;
        }
        public Builder value(@Nullable Output<SecurityProfileMetricValueArgs> value) {
            this.value = value;
            return this;
        }
        public Builder value(@Nullable SecurityProfileMetricValueArgs value) {
            this.value = Codegen.ofNullable(value);
            return this;
        }        public SecurityProfileBehaviorCriteriaArgs build() {
            return new SecurityProfileBehaviorCriteriaArgs(comparisonOperator, consecutiveDatapointsToAlarm, consecutiveDatapointsToClear, durationSeconds, mlDetectionConfig, statisticalThreshold, value);
        }
    }
}
