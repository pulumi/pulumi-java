// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.backup.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPlanLifecycleResourceType extends com.pulumi.resources.InvokeArgs {

    public static final BackupPlanLifecycleResourceType Empty = new BackupPlanLifecycleResourceType();

    @Import(name="deleteAfterDays")
    private @Nullable Double deleteAfterDays;

    public Optional<Double> deleteAfterDays() {
        return Optional.ofNullable(this.deleteAfterDays);
    }

    @Import(name="moveToColdStorageAfterDays")
    private @Nullable Double moveToColdStorageAfterDays;

    public Optional<Double> moveToColdStorageAfterDays() {
        return Optional.ofNullable(this.moveToColdStorageAfterDays);
    }

    private BackupPlanLifecycleResourceType() {}

    private BackupPlanLifecycleResourceType(BackupPlanLifecycleResourceType $) {
        this.deleteAfterDays = $.deleteAfterDays;
        this.moveToColdStorageAfterDays = $.moveToColdStorageAfterDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPlanLifecycleResourceType defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPlanLifecycleResourceType $;

        public Builder() {
            $ = new BackupPlanLifecycleResourceType();
        }

        public Builder(BackupPlanLifecycleResourceType defaults) {
            $ = new BackupPlanLifecycleResourceType(Objects.requireNonNull(defaults));
        }

        public Builder deleteAfterDays(@Nullable Double deleteAfterDays) {
            $.deleteAfterDays = deleteAfterDays;
            return this;
        }

        public Builder moveToColdStorageAfterDays(@Nullable Double moveToColdStorageAfterDays) {
            $.moveToColdStorageAfterDays = moveToColdStorageAfterDays;
            return this;
        }

        public BackupPlanLifecycleResourceType build() {
            return $;
        }
    }

}
