// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise;

import com.pulumi.awsnative.iotsitewise.inputs.AssetModelCompositeModelArgs;
import com.pulumi.awsnative.iotsitewise.inputs.AssetModelHierarchyArgs;
import com.pulumi.awsnative.iotsitewise.inputs.AssetModelPropertyArgs;
import com.pulumi.awsnative.iotsitewise.inputs.AssetModelTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AssetModelArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetModelArgs Empty = new AssetModelArgs();

    /**
     * The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties.
     * 
     */
    @Import(name="assetModelCompositeModels")
      private final @Nullable Output<List<AssetModelCompositeModelArgs>> assetModelCompositeModels;

    public Output<List<AssetModelCompositeModelArgs>> assetModelCompositeModels() {
        return this.assetModelCompositeModels == null ? Codegen.empty() : this.assetModelCompositeModels;
    }

    /**
     * A description for the asset model.
     * 
     */
    @Import(name="assetModelDescription")
      private final @Nullable Output<String> assetModelDescription;

    public Output<String> assetModelDescription() {
        return this.assetModelDescription == null ? Codegen.empty() : this.assetModelDescription;
    }

    /**
     * The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. You can specify up to 10 hierarchies per asset model.
     * 
     */
    @Import(name="assetModelHierarchies")
      private final @Nullable Output<List<AssetModelHierarchyArgs>> assetModelHierarchies;

    public Output<List<AssetModelHierarchyArgs>> assetModelHierarchies() {
        return this.assetModelHierarchies == null ? Codegen.empty() : this.assetModelHierarchies;
    }

    /**
     * A unique, friendly name for the asset model.
     * 
     */
    @Import(name="assetModelName")
      private final @Nullable Output<String> assetModelName;

    public Output<String> assetModelName() {
        return this.assetModelName == null ? Codegen.empty() : this.assetModelName;
    }

    /**
     * The property definitions of the asset model. You can specify up to 200 properties per asset model.
     * 
     */
    @Import(name="assetModelProperties")
      private final @Nullable Output<List<AssetModelPropertyArgs>> assetModelProperties;

    public Output<List<AssetModelPropertyArgs>> assetModelProperties() {
        return this.assetModelProperties == null ? Codegen.empty() : this.assetModelProperties;
    }

    /**
     * A list of key-value pairs that contain metadata for the asset model.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<AssetModelTagArgs>> tags;

    public Output<List<AssetModelTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public AssetModelArgs(
        @Nullable Output<List<AssetModelCompositeModelArgs>> assetModelCompositeModels,
        @Nullable Output<String> assetModelDescription,
        @Nullable Output<List<AssetModelHierarchyArgs>> assetModelHierarchies,
        @Nullable Output<String> assetModelName,
        @Nullable Output<List<AssetModelPropertyArgs>> assetModelProperties,
        @Nullable Output<List<AssetModelTagArgs>> tags) {
        this.assetModelCompositeModels = assetModelCompositeModels;
        this.assetModelDescription = assetModelDescription;
        this.assetModelHierarchies = assetModelHierarchies;
        this.assetModelName = assetModelName;
        this.assetModelProperties = assetModelProperties;
        this.tags = tags;
    }

    private AssetModelArgs() {
        this.assetModelCompositeModels = Codegen.empty();
        this.assetModelDescription = Codegen.empty();
        this.assetModelHierarchies = Codegen.empty();
        this.assetModelName = Codegen.empty();
        this.assetModelProperties = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetModelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<AssetModelCompositeModelArgs>> assetModelCompositeModels;
        private @Nullable Output<String> assetModelDescription;
        private @Nullable Output<List<AssetModelHierarchyArgs>> assetModelHierarchies;
        private @Nullable Output<String> assetModelName;
        private @Nullable Output<List<AssetModelPropertyArgs>> assetModelProperties;
        private @Nullable Output<List<AssetModelTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetModelArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetModelCompositeModels = defaults.assetModelCompositeModels;
    	      this.assetModelDescription = defaults.assetModelDescription;
    	      this.assetModelHierarchies = defaults.assetModelHierarchies;
    	      this.assetModelName = defaults.assetModelName;
    	      this.assetModelProperties = defaults.assetModelProperties;
    	      this.tags = defaults.tags;
        }

        public Builder assetModelCompositeModels(@Nullable Output<List<AssetModelCompositeModelArgs>> assetModelCompositeModels) {
            this.assetModelCompositeModels = assetModelCompositeModels;
            return this;
        }
        public Builder assetModelCompositeModels(@Nullable List<AssetModelCompositeModelArgs> assetModelCompositeModels) {
            this.assetModelCompositeModels = Codegen.ofNullable(assetModelCompositeModels);
            return this;
        }
        public Builder assetModelCompositeModels(AssetModelCompositeModelArgs... assetModelCompositeModels) {
            return assetModelCompositeModels(List.of(assetModelCompositeModels));
        }
        public Builder assetModelDescription(@Nullable Output<String> assetModelDescription) {
            this.assetModelDescription = assetModelDescription;
            return this;
        }
        public Builder assetModelDescription(@Nullable String assetModelDescription) {
            this.assetModelDescription = Codegen.ofNullable(assetModelDescription);
            return this;
        }
        public Builder assetModelHierarchies(@Nullable Output<List<AssetModelHierarchyArgs>> assetModelHierarchies) {
            this.assetModelHierarchies = assetModelHierarchies;
            return this;
        }
        public Builder assetModelHierarchies(@Nullable List<AssetModelHierarchyArgs> assetModelHierarchies) {
            this.assetModelHierarchies = Codegen.ofNullable(assetModelHierarchies);
            return this;
        }
        public Builder assetModelHierarchies(AssetModelHierarchyArgs... assetModelHierarchies) {
            return assetModelHierarchies(List.of(assetModelHierarchies));
        }
        public Builder assetModelName(@Nullable Output<String> assetModelName) {
            this.assetModelName = assetModelName;
            return this;
        }
        public Builder assetModelName(@Nullable String assetModelName) {
            this.assetModelName = Codegen.ofNullable(assetModelName);
            return this;
        }
        public Builder assetModelProperties(@Nullable Output<List<AssetModelPropertyArgs>> assetModelProperties) {
            this.assetModelProperties = assetModelProperties;
            return this;
        }
        public Builder assetModelProperties(@Nullable List<AssetModelPropertyArgs> assetModelProperties) {
            this.assetModelProperties = Codegen.ofNullable(assetModelProperties);
            return this;
        }
        public Builder assetModelProperties(AssetModelPropertyArgs... assetModelProperties) {
            return assetModelProperties(List.of(assetModelProperties));
        }
        public Builder tags(@Nullable Output<List<AssetModelTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<AssetModelTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(AssetModelTagArgs... tags) {
            return tags(List.of(tags));
        }        public AssetModelArgs build() {
            return new AssetModelArgs(assetModelCompositeModels, assetModelDescription, assetModelHierarchies, assetModelName, assetModelProperties, tags);
        }
    }
}
