// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleCloudwatchMetricAction extends com.pulumi.resources.InvokeArgs {

    public static final TopicRuleCloudwatchMetricAction Empty = new TopicRuleCloudwatchMetricAction();

    @Import(name="metricName", required=true)
    private String metricName;

    public String metricName() {
        return this.metricName;
    }

    @Import(name="metricNamespace", required=true)
    private String metricNamespace;

    public String metricNamespace() {
        return this.metricNamespace;
    }

    @Import(name="metricTimestamp")
    private @Nullable String metricTimestamp;

    public Optional<String> metricTimestamp() {
        return Optional.ofNullable(this.metricTimestamp);
    }

    @Import(name="metricUnit", required=true)
    private String metricUnit;

    public String metricUnit() {
        return this.metricUnit;
    }

    @Import(name="metricValue", required=true)
    private String metricValue;

    public String metricValue() {
        return this.metricValue;
    }

    @Import(name="roleArn", required=true)
    private String roleArn;

    public String roleArn() {
        return this.roleArn;
    }

    private TopicRuleCloudwatchMetricAction() {}

    private TopicRuleCloudwatchMetricAction(TopicRuleCloudwatchMetricAction $) {
        this.metricName = $.metricName;
        this.metricNamespace = $.metricNamespace;
        this.metricTimestamp = $.metricTimestamp;
        this.metricUnit = $.metricUnit;
        this.metricValue = $.metricValue;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleCloudwatchMetricAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleCloudwatchMetricAction $;

        public Builder() {
            $ = new TopicRuleCloudwatchMetricAction();
        }

        public Builder(TopicRuleCloudwatchMetricAction defaults) {
            $ = new TopicRuleCloudwatchMetricAction(Objects.requireNonNull(defaults));
        }

        public Builder metricName(String metricName) {
            $.metricName = metricName;
            return this;
        }

        public Builder metricNamespace(String metricNamespace) {
            $.metricNamespace = metricNamespace;
            return this;
        }

        public Builder metricTimestamp(@Nullable String metricTimestamp) {
            $.metricTimestamp = metricTimestamp;
            return this;
        }

        public Builder metricUnit(String metricUnit) {
            $.metricUnit = metricUnit;
            return this;
        }

        public Builder metricValue(String metricValue) {
            $.metricValue = metricValue;
            return this;
        }

        public Builder roleArn(String roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public TopicRuleCloudwatchMetricAction build() {
            $.metricName = Objects.requireNonNull($.metricName, "expected parameter 'metricName' to be non-null");
            $.metricNamespace = Objects.requireNonNull($.metricNamespace, "expected parameter 'metricNamespace' to be non-null");
            $.metricUnit = Objects.requireNonNull($.metricUnit, "expected parameter 'metricUnit' to be non-null");
            $.metricValue = Objects.requireNonNull($.metricValue, "expected parameter 'metricValue' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
