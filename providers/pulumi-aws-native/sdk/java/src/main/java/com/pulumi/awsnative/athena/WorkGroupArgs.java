// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.athena;

import com.pulumi.awsnative.athena.enums.WorkGroupState;
import com.pulumi.awsnative.athena.inputs.WorkGroupConfigurationArgs;
import com.pulumi.awsnative.athena.inputs.WorkGroupConfigurationUpdatesArgs;
import com.pulumi.awsnative.athena.inputs.WorkGroupTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkGroupArgs Empty = new WorkGroupArgs();

    /**
     * The workgroup description.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The workGroup name.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The option to delete the workgroup and its contents even if the workgroup contains any named queries.
     * 
     */
    @Import(name="recursiveDeleteOption")
      private final @Nullable Output<Boolean> recursiveDeleteOption;

    public Output<Boolean> recursiveDeleteOption() {
        return this.recursiveDeleteOption == null ? Codegen.empty() : this.recursiveDeleteOption;
    }

    /**
     * The state of the workgroup: ENABLED or DISABLED.
     * 
     */
    @Import(name="state")
      private final @Nullable Output<WorkGroupState> state;

    public Output<WorkGroupState> state() {
        return this.state == null ? Codegen.empty() : this.state;
    }

    /**
     * One or more tags, separated by commas, that you want to attach to the workgroup as you create it
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<WorkGroupTagArgs>> tags;

    public Output<List<WorkGroupTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The workgroup configuration
     * 
     */
    @Import(name="workGroupConfiguration")
      private final @Nullable Output<WorkGroupConfigurationArgs> workGroupConfiguration;

    public Output<WorkGroupConfigurationArgs> workGroupConfiguration() {
        return this.workGroupConfiguration == null ? Codegen.empty() : this.workGroupConfiguration;
    }

    /**
     * The workgroup configuration update object
     * 
     */
    @Import(name="workGroupConfigurationUpdates")
      private final @Nullable Output<WorkGroupConfigurationUpdatesArgs> workGroupConfigurationUpdates;

    public Output<WorkGroupConfigurationUpdatesArgs> workGroupConfigurationUpdates() {
        return this.workGroupConfigurationUpdates == null ? Codegen.empty() : this.workGroupConfigurationUpdates;
    }

    public WorkGroupArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> name,
        @Nullable Output<Boolean> recursiveDeleteOption,
        @Nullable Output<WorkGroupState> state,
        @Nullable Output<List<WorkGroupTagArgs>> tags,
        @Nullable Output<WorkGroupConfigurationArgs> workGroupConfiguration,
        @Nullable Output<WorkGroupConfigurationUpdatesArgs> workGroupConfigurationUpdates) {
        this.description = description;
        this.name = name;
        this.recursiveDeleteOption = recursiveDeleteOption;
        this.state = state;
        this.tags = tags;
        this.workGroupConfiguration = workGroupConfiguration;
        this.workGroupConfigurationUpdates = workGroupConfigurationUpdates;
    }

    private WorkGroupArgs() {
        this.description = Codegen.empty();
        this.name = Codegen.empty();
        this.recursiveDeleteOption = Codegen.empty();
        this.state = Codegen.empty();
        this.tags = Codegen.empty();
        this.workGroupConfiguration = Codegen.empty();
        this.workGroupConfigurationUpdates = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> name;
        private @Nullable Output<Boolean> recursiveDeleteOption;
        private @Nullable Output<WorkGroupState> state;
        private @Nullable Output<List<WorkGroupTagArgs>> tags;
        private @Nullable Output<WorkGroupConfigurationArgs> workGroupConfiguration;
        private @Nullable Output<WorkGroupConfigurationUpdatesArgs> workGroupConfigurationUpdates;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.recursiveDeleteOption = defaults.recursiveDeleteOption;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
    	      this.workGroupConfiguration = defaults.workGroupConfiguration;
    	      this.workGroupConfigurationUpdates = defaults.workGroupConfigurationUpdates;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder recursiveDeleteOption(@Nullable Output<Boolean> recursiveDeleteOption) {
            this.recursiveDeleteOption = recursiveDeleteOption;
            return this;
        }
        public Builder recursiveDeleteOption(@Nullable Boolean recursiveDeleteOption) {
            this.recursiveDeleteOption = Codegen.ofNullable(recursiveDeleteOption);
            return this;
        }
        public Builder state(@Nullable Output<WorkGroupState> state) {
            this.state = state;
            return this;
        }
        public Builder state(@Nullable WorkGroupState state) {
            this.state = Codegen.ofNullable(state);
            return this;
        }
        public Builder tags(@Nullable Output<List<WorkGroupTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<WorkGroupTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(WorkGroupTagArgs... tags) {
            return tags(List.of(tags));
        }
        public Builder workGroupConfiguration(@Nullable Output<WorkGroupConfigurationArgs> workGroupConfiguration) {
            this.workGroupConfiguration = workGroupConfiguration;
            return this;
        }
        public Builder workGroupConfiguration(@Nullable WorkGroupConfigurationArgs workGroupConfiguration) {
            this.workGroupConfiguration = Codegen.ofNullable(workGroupConfiguration);
            return this;
        }
        public Builder workGroupConfigurationUpdates(@Nullable Output<WorkGroupConfigurationUpdatesArgs> workGroupConfigurationUpdates) {
            this.workGroupConfigurationUpdates = workGroupConfigurationUpdates;
            return this;
        }
        public Builder workGroupConfigurationUpdates(@Nullable WorkGroupConfigurationUpdatesArgs workGroupConfigurationUpdates) {
            this.workGroupConfigurationUpdates = Codegen.ofNullable(workGroupConfigurationUpdates);
            return this;
        }        public WorkGroupArgs build() {
            return new WorkGroupArgs(description, name, recursiveDeleteOption, state, tags, workGroupConfiguration, workGroupConfigurationUpdates);
        }
    }
}
