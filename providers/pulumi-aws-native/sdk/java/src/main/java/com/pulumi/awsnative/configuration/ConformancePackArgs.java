// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.configuration;

import com.pulumi.awsnative.configuration.inputs.ConformancePackInputParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConformancePackArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConformancePackArgs Empty = new ConformancePackArgs();

    /**
     * A list of ConformancePackInputParameter objects.
     * 
     */
    @Import(name="conformancePackInputParameters")
    private @Nullable Output<List<ConformancePackInputParameterArgs>> conformancePackInputParameters;

    public Optional<Output<List<ConformancePackInputParameterArgs>>> conformancePackInputParameters() {
        return Optional.ofNullable(this.conformancePackInputParameters);
    }

    /**
     * Name of the conformance pack which will be assigned as the unique identifier.
     * 
     */
    @Import(name="conformancePackName")
    private @Nullable Output<String> conformancePackName;

    public Optional<Output<String>> conformancePackName() {
        return Optional.ofNullable(this.conformancePackName);
    }

    /**
     * AWS Config stores intermediate files while processing conformance pack template.
     * 
     */
    @Import(name="deliveryS3Bucket")
    private @Nullable Output<String> deliveryS3Bucket;

    public Optional<Output<String>> deliveryS3Bucket() {
        return Optional.ofNullable(this.deliveryS3Bucket);
    }

    /**
     * The prefix for delivery S3 bucket.
     * 
     */
    @Import(name="deliveryS3KeyPrefix")
    private @Nullable Output<String> deliveryS3KeyPrefix;

    public Optional<Output<String>> deliveryS3KeyPrefix() {
        return Optional.ofNullable(this.deliveryS3KeyPrefix);
    }

    /**
     * A string containing full conformance pack template body. You can only specify one of the template body or template S3Uri fields.
     * 
     */
    @Import(name="templateBody")
    private @Nullable Output<String> templateBody;

    public Optional<Output<String>> templateBody() {
        return Optional.ofNullable(this.templateBody);
    }

    /**
     * Location of file containing the template body which points to the conformance pack template that is located in an Amazon S3 bucket. You can only specify one of the template body or template S3Uri fields.
     * 
     */
    @Import(name="templateS3Uri")
    private @Nullable Output<String> templateS3Uri;

    public Optional<Output<String>> templateS3Uri() {
        return Optional.ofNullable(this.templateS3Uri);
    }

    private ConformancePackArgs() {}

    private ConformancePackArgs(ConformancePackArgs $) {
        this.conformancePackInputParameters = $.conformancePackInputParameters;
        this.conformancePackName = $.conformancePackName;
        this.deliveryS3Bucket = $.deliveryS3Bucket;
        this.deliveryS3KeyPrefix = $.deliveryS3KeyPrefix;
        this.templateBody = $.templateBody;
        this.templateS3Uri = $.templateS3Uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConformancePackArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConformancePackArgs $;

        public Builder() {
            $ = new ConformancePackArgs();
        }

        public Builder(ConformancePackArgs defaults) {
            $ = new ConformancePackArgs(Objects.requireNonNull(defaults));
        }

        public Builder conformancePackInputParameters(@Nullable Output<List<ConformancePackInputParameterArgs>> conformancePackInputParameters) {
            $.conformancePackInputParameters = conformancePackInputParameters;
            return this;
        }

        public Builder conformancePackInputParameters(List<ConformancePackInputParameterArgs> conformancePackInputParameters) {
            return conformancePackInputParameters(Output.of(conformancePackInputParameters));
        }

        public Builder conformancePackInputParameters(ConformancePackInputParameterArgs... conformancePackInputParameters) {
            return conformancePackInputParameters(List.of(conformancePackInputParameters));
        }

        public Builder conformancePackName(@Nullable Output<String> conformancePackName) {
            $.conformancePackName = conformancePackName;
            return this;
        }

        public Builder conformancePackName(String conformancePackName) {
            return conformancePackName(Output.of(conformancePackName));
        }

        public Builder deliveryS3Bucket(@Nullable Output<String> deliveryS3Bucket) {
            $.deliveryS3Bucket = deliveryS3Bucket;
            return this;
        }

        public Builder deliveryS3Bucket(String deliveryS3Bucket) {
            return deliveryS3Bucket(Output.of(deliveryS3Bucket));
        }

        public Builder deliveryS3KeyPrefix(@Nullable Output<String> deliveryS3KeyPrefix) {
            $.deliveryS3KeyPrefix = deliveryS3KeyPrefix;
            return this;
        }

        public Builder deliveryS3KeyPrefix(String deliveryS3KeyPrefix) {
            return deliveryS3KeyPrefix(Output.of(deliveryS3KeyPrefix));
        }

        public Builder templateBody(@Nullable Output<String> templateBody) {
            $.templateBody = templateBody;
            return this;
        }

        public Builder templateBody(String templateBody) {
            return templateBody(Output.of(templateBody));
        }

        public Builder templateS3Uri(@Nullable Output<String> templateS3Uri) {
            $.templateS3Uri = templateS3Uri;
            return this;
        }

        public Builder templateS3Uri(String templateS3Uri) {
            return templateS3Uri(Output.of(templateS3Uri));
        }

        public ConformancePackArgs build() {
            return $;
        }
    }

}
