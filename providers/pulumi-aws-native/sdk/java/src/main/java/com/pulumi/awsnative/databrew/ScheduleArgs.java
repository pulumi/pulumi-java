// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew;

import com.pulumi.awsnative.databrew.inputs.ScheduleTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleArgs Empty = new ScheduleArgs();

    /**
     * Schedule cron
     * 
     */
    @Import(name="cronExpression", required=true)
      private final Output<String> cronExpression;

    public Output<String> cronExpression() {
        return this.cronExpression;
    }

    @Import(name="jobNames")
      private final @Nullable Output<List<String>> jobNames;

    public Output<List<String>> jobNames() {
        return this.jobNames == null ? Codegen.empty() : this.jobNames;
    }

    /**
     * Schedule Name
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="tags")
      private final @Nullable Output<List<ScheduleTagArgs>> tags;

    public Output<List<ScheduleTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public ScheduleArgs(
        Output<String> cronExpression,
        @Nullable Output<List<String>> jobNames,
        @Nullable Output<String> name,
        @Nullable Output<List<ScheduleTagArgs>> tags) {
        this.cronExpression = Objects.requireNonNull(cronExpression, "expected parameter 'cronExpression' to be non-null");
        this.jobNames = jobNames;
        this.name = name;
        this.tags = tags;
    }

    private ScheduleArgs() {
        this.cronExpression = Codegen.empty();
        this.jobNames = Codegen.empty();
        this.name = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> cronExpression;
        private @Nullable Output<List<String>> jobNames;
        private @Nullable Output<String> name;
        private @Nullable Output<List<ScheduleTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cronExpression = defaults.cronExpression;
    	      this.jobNames = defaults.jobNames;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        public Builder cronExpression(Output<String> cronExpression) {
            this.cronExpression = Objects.requireNonNull(cronExpression);
            return this;
        }
        public Builder cronExpression(String cronExpression) {
            this.cronExpression = Output.of(Objects.requireNonNull(cronExpression));
            return this;
        }
        public Builder jobNames(@Nullable Output<List<String>> jobNames) {
            this.jobNames = jobNames;
            return this;
        }
        public Builder jobNames(@Nullable List<String> jobNames) {
            this.jobNames = Codegen.ofNullable(jobNames);
            return this;
        }
        public Builder jobNames(String... jobNames) {
            return jobNames(List.of(jobNames));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder tags(@Nullable Output<List<ScheduleTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<ScheduleTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(ScheduleTagArgs... tags) {
            return tags(List.of(tags));
        }        public ScheduleArgs build() {
            return new ScheduleArgs(cronExpression, jobNames, name, tags);
        }
    }
}
