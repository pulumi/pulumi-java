// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.inputs;

import com.pulumi.awsnative.ec2.inputs.NetworkInsightsAnalysisAnalysisAclRule;
import com.pulumi.awsnative.ec2.inputs.NetworkInsightsAnalysisAnalysisComponent;
import com.pulumi.awsnative.ec2.inputs.NetworkInsightsAnalysisAnalysisLoadBalancerListener;
import com.pulumi.awsnative.ec2.inputs.NetworkInsightsAnalysisAnalysisLoadBalancerTarget;
import com.pulumi.awsnative.ec2.inputs.NetworkInsightsAnalysisAnalysisRouteTableRoute;
import com.pulumi.awsnative.ec2.inputs.NetworkInsightsAnalysisAnalysisSecurityGroupRule;
import com.pulumi.awsnative.ec2.inputs.NetworkInsightsAnalysisPortRange;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkInsightsAnalysisExplanation extends com.pulumi.resources.InvokeArgs {

    public static final NetworkInsightsAnalysisExplanation Empty = new NetworkInsightsAnalysisExplanation();

    @Import(name="acl")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent acl;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> acl() {
        return Optional.ofNullable(this.acl);
    }

    @Import(name="aclRule")
    private @Nullable NetworkInsightsAnalysisAnalysisAclRule aclRule;

    public Optional<NetworkInsightsAnalysisAnalysisAclRule> aclRule() {
        return Optional.ofNullable(this.aclRule);
    }

    @Import(name="address")
    private @Nullable String address;

    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }

    @Import(name="addresses")
    private @Nullable List<String> addresses;

    public Optional<List<String>> addresses() {
        return Optional.ofNullable(this.addresses);
    }

    @Import(name="attachedTo")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent attachedTo;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> attachedTo() {
        return Optional.ofNullable(this.attachedTo);
    }

    @Import(name="availabilityZones")
    private @Nullable List<String> availabilityZones;

    public Optional<List<String>> availabilityZones() {
        return Optional.ofNullable(this.availabilityZones);
    }

    @Import(name="cidrs")
    private @Nullable List<String> cidrs;

    public Optional<List<String>> cidrs() {
        return Optional.ofNullable(this.cidrs);
    }

    @Import(name="classicLoadBalancerListener")
    private @Nullable NetworkInsightsAnalysisAnalysisLoadBalancerListener classicLoadBalancerListener;

    public Optional<NetworkInsightsAnalysisAnalysisLoadBalancerListener> classicLoadBalancerListener() {
        return Optional.ofNullable(this.classicLoadBalancerListener);
    }

    @Import(name="component")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent component;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> component() {
        return Optional.ofNullable(this.component);
    }

    @Import(name="customerGateway")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent customerGateway;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> customerGateway() {
        return Optional.ofNullable(this.customerGateway);
    }

    @Import(name="destination")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent destination;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> destination() {
        return Optional.ofNullable(this.destination);
    }

    @Import(name="destinationVpc")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent destinationVpc;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> destinationVpc() {
        return Optional.ofNullable(this.destinationVpc);
    }

    @Import(name="direction")
    private @Nullable String direction;

    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }

    @Import(name="elasticLoadBalancerListener")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent elasticLoadBalancerListener;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> elasticLoadBalancerListener() {
        return Optional.ofNullable(this.elasticLoadBalancerListener);
    }

    @Import(name="explanationCode")
    private @Nullable String explanationCode;

    public Optional<String> explanationCode() {
        return Optional.ofNullable(this.explanationCode);
    }

    @Import(name="ingressRouteTable")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent ingressRouteTable;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> ingressRouteTable() {
        return Optional.ofNullable(this.ingressRouteTable);
    }

    @Import(name="internetGateway")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent internetGateway;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> internetGateway() {
        return Optional.ofNullable(this.internetGateway);
    }

    @Import(name="loadBalancerArn")
    private @Nullable String loadBalancerArn;

    public Optional<String> loadBalancerArn() {
        return Optional.ofNullable(this.loadBalancerArn);
    }

    @Import(name="loadBalancerListenerPort")
    private @Nullable Integer loadBalancerListenerPort;

    public Optional<Integer> loadBalancerListenerPort() {
        return Optional.ofNullable(this.loadBalancerListenerPort);
    }

    @Import(name="loadBalancerTarget")
    private @Nullable NetworkInsightsAnalysisAnalysisLoadBalancerTarget loadBalancerTarget;

    public Optional<NetworkInsightsAnalysisAnalysisLoadBalancerTarget> loadBalancerTarget() {
        return Optional.ofNullable(this.loadBalancerTarget);
    }

    @Import(name="loadBalancerTargetGroup")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent loadBalancerTargetGroup;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> loadBalancerTargetGroup() {
        return Optional.ofNullable(this.loadBalancerTargetGroup);
    }

    @Import(name="loadBalancerTargetGroups")
    private @Nullable List<NetworkInsightsAnalysisAnalysisComponent> loadBalancerTargetGroups;

    public Optional<List<NetworkInsightsAnalysisAnalysisComponent>> loadBalancerTargetGroups() {
        return Optional.ofNullable(this.loadBalancerTargetGroups);
    }

    @Import(name="loadBalancerTargetPort")
    private @Nullable Integer loadBalancerTargetPort;

    public Optional<Integer> loadBalancerTargetPort() {
        return Optional.ofNullable(this.loadBalancerTargetPort);
    }

    @Import(name="missingComponent")
    private @Nullable String missingComponent;

    public Optional<String> missingComponent() {
        return Optional.ofNullable(this.missingComponent);
    }

    @Import(name="natGateway")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent natGateway;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> natGateway() {
        return Optional.ofNullable(this.natGateway);
    }

    @Import(name="networkInterface")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent networkInterface;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> networkInterface() {
        return Optional.ofNullable(this.networkInterface);
    }

    @Import(name="packetField")
    private @Nullable String packetField;

    public Optional<String> packetField() {
        return Optional.ofNullable(this.packetField);
    }

    @Import(name="port")
    private @Nullable Integer port;

    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="portRanges")
    private @Nullable List<NetworkInsightsAnalysisPortRange> portRanges;

    public Optional<List<NetworkInsightsAnalysisPortRange>> portRanges() {
        return Optional.ofNullable(this.portRanges);
    }

    @Import(name="prefixList")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent prefixList;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> prefixList() {
        return Optional.ofNullable(this.prefixList);
    }

    @Import(name="protocols")
    private @Nullable List<String> protocols;

    public Optional<List<String>> protocols() {
        return Optional.ofNullable(this.protocols);
    }

    @Import(name="routeTable")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent routeTable;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> routeTable() {
        return Optional.ofNullable(this.routeTable);
    }

    @Import(name="routeTableRoute")
    private @Nullable NetworkInsightsAnalysisAnalysisRouteTableRoute routeTableRoute;

    public Optional<NetworkInsightsAnalysisAnalysisRouteTableRoute> routeTableRoute() {
        return Optional.ofNullable(this.routeTableRoute);
    }

    @Import(name="securityGroup")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent securityGroup;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> securityGroup() {
        return Optional.ofNullable(this.securityGroup);
    }

    @Import(name="securityGroupRule")
    private @Nullable NetworkInsightsAnalysisAnalysisSecurityGroupRule securityGroupRule;

    public Optional<NetworkInsightsAnalysisAnalysisSecurityGroupRule> securityGroupRule() {
        return Optional.ofNullable(this.securityGroupRule);
    }

    @Import(name="securityGroups")
    private @Nullable List<NetworkInsightsAnalysisAnalysisComponent> securityGroups;

    public Optional<List<NetworkInsightsAnalysisAnalysisComponent>> securityGroups() {
        return Optional.ofNullable(this.securityGroups);
    }

    @Import(name="sourceVpc")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent sourceVpc;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> sourceVpc() {
        return Optional.ofNullable(this.sourceVpc);
    }

    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="subnet")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent subnet;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    @Import(name="subnetRouteTable")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent subnetRouteTable;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> subnetRouteTable() {
        return Optional.ofNullable(this.subnetRouteTable);
    }

    @Import(name="vpc")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpc;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpc() {
        return Optional.ofNullable(this.vpc);
    }

    @Import(name="vpcEndpoint")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpcEndpoint;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpcEndpoint() {
        return Optional.ofNullable(this.vpcEndpoint);
    }

    @Import(name="vpcPeeringConnection")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpcPeeringConnection;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpcPeeringConnection() {
        return Optional.ofNullable(this.vpcPeeringConnection);
    }

    @Import(name="vpnConnection")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpnConnection;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpnConnection() {
        return Optional.ofNullable(this.vpnConnection);
    }

    @Import(name="vpnGateway")
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpnGateway;

    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpnGateway() {
        return Optional.ofNullable(this.vpnGateway);
    }

    private NetworkInsightsAnalysisExplanation() {}

    private NetworkInsightsAnalysisExplanation(NetworkInsightsAnalysisExplanation $) {
        this.acl = $.acl;
        this.aclRule = $.aclRule;
        this.address = $.address;
        this.addresses = $.addresses;
        this.attachedTo = $.attachedTo;
        this.availabilityZones = $.availabilityZones;
        this.cidrs = $.cidrs;
        this.classicLoadBalancerListener = $.classicLoadBalancerListener;
        this.component = $.component;
        this.customerGateway = $.customerGateway;
        this.destination = $.destination;
        this.destinationVpc = $.destinationVpc;
        this.direction = $.direction;
        this.elasticLoadBalancerListener = $.elasticLoadBalancerListener;
        this.explanationCode = $.explanationCode;
        this.ingressRouteTable = $.ingressRouteTable;
        this.internetGateway = $.internetGateway;
        this.loadBalancerArn = $.loadBalancerArn;
        this.loadBalancerListenerPort = $.loadBalancerListenerPort;
        this.loadBalancerTarget = $.loadBalancerTarget;
        this.loadBalancerTargetGroup = $.loadBalancerTargetGroup;
        this.loadBalancerTargetGroups = $.loadBalancerTargetGroups;
        this.loadBalancerTargetPort = $.loadBalancerTargetPort;
        this.missingComponent = $.missingComponent;
        this.natGateway = $.natGateway;
        this.networkInterface = $.networkInterface;
        this.packetField = $.packetField;
        this.port = $.port;
        this.portRanges = $.portRanges;
        this.prefixList = $.prefixList;
        this.protocols = $.protocols;
        this.routeTable = $.routeTable;
        this.routeTableRoute = $.routeTableRoute;
        this.securityGroup = $.securityGroup;
        this.securityGroupRule = $.securityGroupRule;
        this.securityGroups = $.securityGroups;
        this.sourceVpc = $.sourceVpc;
        this.state = $.state;
        this.subnet = $.subnet;
        this.subnetRouteTable = $.subnetRouteTable;
        this.vpc = $.vpc;
        this.vpcEndpoint = $.vpcEndpoint;
        this.vpcPeeringConnection = $.vpcPeeringConnection;
        this.vpnConnection = $.vpnConnection;
        this.vpnGateway = $.vpnGateway;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInsightsAnalysisExplanation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInsightsAnalysisExplanation $;

        public Builder() {
            $ = new NetworkInsightsAnalysisExplanation();
        }

        public Builder(NetworkInsightsAnalysisExplanation defaults) {
            $ = new NetworkInsightsAnalysisExplanation(Objects.requireNonNull(defaults));
        }

        public Builder acl(@Nullable NetworkInsightsAnalysisAnalysisComponent acl) {
            $.acl = acl;
            return this;
        }

        public Builder aclRule(@Nullable NetworkInsightsAnalysisAnalysisAclRule aclRule) {
            $.aclRule = aclRule;
            return this;
        }

        public Builder address(@Nullable String address) {
            $.address = address;
            return this;
        }

        public Builder addresses(@Nullable List<String> addresses) {
            $.addresses = addresses;
            return this;
        }

        public Builder addresses(String... addresses) {
            return addresses(List.of(addresses));
        }

        public Builder attachedTo(@Nullable NetworkInsightsAnalysisAnalysisComponent attachedTo) {
            $.attachedTo = attachedTo;
            return this;
        }

        public Builder availabilityZones(@Nullable List<String> availabilityZones) {
            $.availabilityZones = availabilityZones;
            return this;
        }

        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }

        public Builder cidrs(@Nullable List<String> cidrs) {
            $.cidrs = cidrs;
            return this;
        }

        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }

        public Builder classicLoadBalancerListener(@Nullable NetworkInsightsAnalysisAnalysisLoadBalancerListener classicLoadBalancerListener) {
            $.classicLoadBalancerListener = classicLoadBalancerListener;
            return this;
        }

        public Builder component(@Nullable NetworkInsightsAnalysisAnalysisComponent component) {
            $.component = component;
            return this;
        }

        public Builder customerGateway(@Nullable NetworkInsightsAnalysisAnalysisComponent customerGateway) {
            $.customerGateway = customerGateway;
            return this;
        }

        public Builder destination(@Nullable NetworkInsightsAnalysisAnalysisComponent destination) {
            $.destination = destination;
            return this;
        }

        public Builder destinationVpc(@Nullable NetworkInsightsAnalysisAnalysisComponent destinationVpc) {
            $.destinationVpc = destinationVpc;
            return this;
        }

        public Builder direction(@Nullable String direction) {
            $.direction = direction;
            return this;
        }

        public Builder elasticLoadBalancerListener(@Nullable NetworkInsightsAnalysisAnalysisComponent elasticLoadBalancerListener) {
            $.elasticLoadBalancerListener = elasticLoadBalancerListener;
            return this;
        }

        public Builder explanationCode(@Nullable String explanationCode) {
            $.explanationCode = explanationCode;
            return this;
        }

        public Builder ingressRouteTable(@Nullable NetworkInsightsAnalysisAnalysisComponent ingressRouteTable) {
            $.ingressRouteTable = ingressRouteTable;
            return this;
        }

        public Builder internetGateway(@Nullable NetworkInsightsAnalysisAnalysisComponent internetGateway) {
            $.internetGateway = internetGateway;
            return this;
        }

        public Builder loadBalancerArn(@Nullable String loadBalancerArn) {
            $.loadBalancerArn = loadBalancerArn;
            return this;
        }

        public Builder loadBalancerListenerPort(@Nullable Integer loadBalancerListenerPort) {
            $.loadBalancerListenerPort = loadBalancerListenerPort;
            return this;
        }

        public Builder loadBalancerTarget(@Nullable NetworkInsightsAnalysisAnalysisLoadBalancerTarget loadBalancerTarget) {
            $.loadBalancerTarget = loadBalancerTarget;
            return this;
        }

        public Builder loadBalancerTargetGroup(@Nullable NetworkInsightsAnalysisAnalysisComponent loadBalancerTargetGroup) {
            $.loadBalancerTargetGroup = loadBalancerTargetGroup;
            return this;
        }

        public Builder loadBalancerTargetGroups(@Nullable List<NetworkInsightsAnalysisAnalysisComponent> loadBalancerTargetGroups) {
            $.loadBalancerTargetGroups = loadBalancerTargetGroups;
            return this;
        }

        public Builder loadBalancerTargetGroups(NetworkInsightsAnalysisAnalysisComponent... loadBalancerTargetGroups) {
            return loadBalancerTargetGroups(List.of(loadBalancerTargetGroups));
        }

        public Builder loadBalancerTargetPort(@Nullable Integer loadBalancerTargetPort) {
            $.loadBalancerTargetPort = loadBalancerTargetPort;
            return this;
        }

        public Builder missingComponent(@Nullable String missingComponent) {
            $.missingComponent = missingComponent;
            return this;
        }

        public Builder natGateway(@Nullable NetworkInsightsAnalysisAnalysisComponent natGateway) {
            $.natGateway = natGateway;
            return this;
        }

        public Builder networkInterface(@Nullable NetworkInsightsAnalysisAnalysisComponent networkInterface) {
            $.networkInterface = networkInterface;
            return this;
        }

        public Builder packetField(@Nullable String packetField) {
            $.packetField = packetField;
            return this;
        }

        public Builder port(@Nullable Integer port) {
            $.port = port;
            return this;
        }

        public Builder portRanges(@Nullable List<NetworkInsightsAnalysisPortRange> portRanges) {
            $.portRanges = portRanges;
            return this;
        }

        public Builder portRanges(NetworkInsightsAnalysisPortRange... portRanges) {
            return portRanges(List.of(portRanges));
        }

        public Builder prefixList(@Nullable NetworkInsightsAnalysisAnalysisComponent prefixList) {
            $.prefixList = prefixList;
            return this;
        }

        public Builder protocols(@Nullable List<String> protocols) {
            $.protocols = protocols;
            return this;
        }

        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }

        public Builder routeTable(@Nullable NetworkInsightsAnalysisAnalysisComponent routeTable) {
            $.routeTable = routeTable;
            return this;
        }

        public Builder routeTableRoute(@Nullable NetworkInsightsAnalysisAnalysisRouteTableRoute routeTableRoute) {
            $.routeTableRoute = routeTableRoute;
            return this;
        }

        public Builder securityGroup(@Nullable NetworkInsightsAnalysisAnalysisComponent securityGroup) {
            $.securityGroup = securityGroup;
            return this;
        }

        public Builder securityGroupRule(@Nullable NetworkInsightsAnalysisAnalysisSecurityGroupRule securityGroupRule) {
            $.securityGroupRule = securityGroupRule;
            return this;
        }

        public Builder securityGroups(@Nullable List<NetworkInsightsAnalysisAnalysisComponent> securityGroups) {
            $.securityGroups = securityGroups;
            return this;
        }

        public Builder securityGroups(NetworkInsightsAnalysisAnalysisComponent... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }

        public Builder sourceVpc(@Nullable NetworkInsightsAnalysisAnalysisComponent sourceVpc) {
            $.sourceVpc = sourceVpc;
            return this;
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public Builder subnet(@Nullable NetworkInsightsAnalysisAnalysisComponent subnet) {
            $.subnet = subnet;
            return this;
        }

        public Builder subnetRouteTable(@Nullable NetworkInsightsAnalysisAnalysisComponent subnetRouteTable) {
            $.subnetRouteTable = subnetRouteTable;
            return this;
        }

        public Builder vpc(@Nullable NetworkInsightsAnalysisAnalysisComponent vpc) {
            $.vpc = vpc;
            return this;
        }

        public Builder vpcEndpoint(@Nullable NetworkInsightsAnalysisAnalysisComponent vpcEndpoint) {
            $.vpcEndpoint = vpcEndpoint;
            return this;
        }

        public Builder vpcPeeringConnection(@Nullable NetworkInsightsAnalysisAnalysisComponent vpcPeeringConnection) {
            $.vpcPeeringConnection = vpcPeeringConnection;
            return this;
        }

        public Builder vpnConnection(@Nullable NetworkInsightsAnalysisAnalysisComponent vpnConnection) {
            $.vpnConnection = vpnConnection;
            return this;
        }

        public Builder vpnGateway(@Nullable NetworkInsightsAnalysisAnalysisComponent vpnGateway) {
            $.vpnGateway = vpnGateway;
            return this;
        }

        public NetworkInsightsAnalysisExplanation build() {
            return $;
        }
    }

}
