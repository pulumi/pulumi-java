// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Contains information about an asset model hierarchy.
 * 
 */
public final class AssetModelHierarchyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetModelHierarchyArgs Empty = new AssetModelHierarchyArgs();

    /**
     * The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model.
     * 
     */
    @Import(name="childAssetModelId", required=true)
      private final Output<String> childAssetModelId;

    public Output<String> childAssetModelId() {
        return this.childAssetModelId;
    }

    /**
     * Customer provided ID for hierarchy.
     * 
     */
    @Import(name="logicalId", required=true)
      private final Output<String> logicalId;

    public Output<String> logicalId() {
        return this.logicalId;
    }

    /**
     * The name of the asset model hierarchy.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    public AssetModelHierarchyArgs(
        Output<String> childAssetModelId,
        Output<String> logicalId,
        Output<String> name) {
        this.childAssetModelId = Objects.requireNonNull(childAssetModelId, "expected parameter 'childAssetModelId' to be non-null");
        this.logicalId = Objects.requireNonNull(logicalId, "expected parameter 'logicalId' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private AssetModelHierarchyArgs() {
        this.childAssetModelId = Codegen.empty();
        this.logicalId = Codegen.empty();
        this.name = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetModelHierarchyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> childAssetModelId;
        private Output<String> logicalId;
        private Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetModelHierarchyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childAssetModelId = defaults.childAssetModelId;
    	      this.logicalId = defaults.logicalId;
    	      this.name = defaults.name;
        }

        public Builder childAssetModelId(Output<String> childAssetModelId) {
            this.childAssetModelId = Objects.requireNonNull(childAssetModelId);
            return this;
        }
        public Builder childAssetModelId(String childAssetModelId) {
            this.childAssetModelId = Output.of(Objects.requireNonNull(childAssetModelId));
            return this;
        }
        public Builder logicalId(Output<String> logicalId) {
            this.logicalId = Objects.requireNonNull(logicalId);
            return this;
        }
        public Builder logicalId(String logicalId) {
            this.logicalId = Output.of(Objects.requireNonNull(logicalId));
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }        public AssetModelHierarchyArgs build() {
            return new AssetModelHierarchyArgs(childAssetModelId, logicalId, name);
        }
    }
}
