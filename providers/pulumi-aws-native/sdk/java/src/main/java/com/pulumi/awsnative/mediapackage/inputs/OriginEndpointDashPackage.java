// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediapackage.inputs;

import com.pulumi.awsnative.mediapackage.enums.OriginEndpointAdsOnDeliveryRestrictions;
import com.pulumi.awsnative.mediapackage.enums.OriginEndpointDashPackageAdTriggersItem;
import com.pulumi.awsnative.mediapackage.enums.OriginEndpointDashPackageManifestLayout;
import com.pulumi.awsnative.mediapackage.enums.OriginEndpointDashPackagePeriodTriggersItem;
import com.pulumi.awsnative.mediapackage.enums.OriginEndpointDashPackageProfile;
import com.pulumi.awsnative.mediapackage.enums.OriginEndpointDashPackageSegmentTemplateFormat;
import com.pulumi.awsnative.mediapackage.enums.OriginEndpointDashPackageUtcTiming;
import com.pulumi.awsnative.mediapackage.inputs.OriginEndpointDashEncryption;
import com.pulumi.awsnative.mediapackage.inputs.OriginEndpointStreamSelection;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
 * 
 */
public final class OriginEndpointDashPackage extends com.pulumi.resources.InvokeArgs {

    public static final OriginEndpointDashPackage Empty = new OriginEndpointDashPackage();

    /**
     * A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
     * 
     */
    @Import(name="adTriggers")
    private @Nullable List<OriginEndpointDashPackageAdTriggersItem> adTriggers;

    /**
     * @return A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
     * 
     */
    public Optional<List<OriginEndpointDashPackageAdTriggersItem>> adTriggers() {
        return Optional.ofNullable(this.adTriggers);
    }

    @Import(name="adsOnDeliveryRestrictions")
    private @Nullable OriginEndpointAdsOnDeliveryRestrictions adsOnDeliveryRestrictions;

    public Optional<OriginEndpointAdsOnDeliveryRestrictions> adsOnDeliveryRestrictions() {
        return Optional.ofNullable(this.adsOnDeliveryRestrictions);
    }

    @Import(name="encryption")
    private @Nullable OriginEndpointDashEncryption encryption;

    public Optional<OriginEndpointDashEncryption> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
     * 
     */
    @Import(name="manifestLayout")
    private @Nullable OriginEndpointDashPackageManifestLayout manifestLayout;

    /**
     * @return Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
     * 
     */
    public Optional<OriginEndpointDashPackageManifestLayout> manifestLayout() {
        return Optional.ofNullable(this.manifestLayout);
    }

    /**
     * Time window (in seconds) contained in each manifest.
     * 
     */
    @Import(name="manifestWindowSeconds")
    private @Nullable Integer manifestWindowSeconds;

    /**
     * @return Time window (in seconds) contained in each manifest.
     * 
     */
    public Optional<Integer> manifestWindowSeconds() {
        return Optional.ofNullable(this.manifestWindowSeconds);
    }

    /**
     * Minimum duration (in seconds) that a player will buffer media before starting the presentation.
     * 
     */
    @Import(name="minBufferTimeSeconds")
    private @Nullable Integer minBufferTimeSeconds;

    /**
     * @return Minimum duration (in seconds) that a player will buffer media before starting the presentation.
     * 
     */
    public Optional<Integer> minBufferTimeSeconds() {
        return Optional.ofNullable(this.minBufferTimeSeconds);
    }

    /**
     * Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
     * 
     */
    @Import(name="minUpdatePeriodSeconds")
    private @Nullable Integer minUpdatePeriodSeconds;

    /**
     * @return Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
     * 
     */
    public Optional<Integer> minUpdatePeriodSeconds() {
        return Optional.ofNullable(this.minUpdatePeriodSeconds);
    }

    /**
     * A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains &#34;ADS&#34;, new periods will be created where the Channel source contains SCTE-35 ad markers.
     * 
     */
    @Import(name="periodTriggers")
    private @Nullable List<OriginEndpointDashPackagePeriodTriggersItem> periodTriggers;

    /**
     * @return A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains &#34;ADS&#34;, new periods will be created where the Channel source contains SCTE-35 ad markers.
     * 
     */
    public Optional<List<OriginEndpointDashPackagePeriodTriggersItem>> periodTriggers() {
        return Optional.ofNullable(this.periodTriggers);
    }

    /**
     * The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to &#34;HBBTV_1_5&#34;, HbbTV 1.5 compliant output is enabled.
     * 
     */
    @Import(name="profile")
    private @Nullable OriginEndpointDashPackageProfile profile;

    /**
     * @return The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to &#34;HBBTV_1_5&#34;, HbbTV 1.5 compliant output is enabled.
     * 
     */
    public Optional<OriginEndpointDashPackageProfile> profile() {
        return Optional.ofNullable(this.profile);
    }

    /**
     * Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
     * 
     */
    @Import(name="segmentDurationSeconds")
    private @Nullable Integer segmentDurationSeconds;

    /**
     * @return Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
     * 
     */
    public Optional<Integer> segmentDurationSeconds() {
        return Optional.ofNullable(this.segmentDurationSeconds);
    }

    /**
     * Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
     * 
     */
    @Import(name="segmentTemplateFormat")
    private @Nullable OriginEndpointDashPackageSegmentTemplateFormat segmentTemplateFormat;

    /**
     * @return Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
     * 
     */
    public Optional<OriginEndpointDashPackageSegmentTemplateFormat> segmentTemplateFormat() {
        return Optional.ofNullable(this.segmentTemplateFormat);
    }

    @Import(name="streamSelection")
    private @Nullable OriginEndpointStreamSelection streamSelection;

    public Optional<OriginEndpointStreamSelection> streamSelection() {
        return Optional.ofNullable(this.streamSelection);
    }

    /**
     * Duration (in seconds) to delay live content before presentation.
     * 
     */
    @Import(name="suggestedPresentationDelaySeconds")
    private @Nullable Integer suggestedPresentationDelaySeconds;

    /**
     * @return Duration (in seconds) to delay live content before presentation.
     * 
     */
    public Optional<Integer> suggestedPresentationDelaySeconds() {
        return Optional.ofNullable(this.suggestedPresentationDelaySeconds);
    }

    /**
     * Determines the type of UTCTiming included in the Media Presentation Description (MPD)
     * 
     */
    @Import(name="utcTiming")
    private @Nullable OriginEndpointDashPackageUtcTiming utcTiming;

    /**
     * @return Determines the type of UTCTiming included in the Media Presentation Description (MPD)
     * 
     */
    public Optional<OriginEndpointDashPackageUtcTiming> utcTiming() {
        return Optional.ofNullable(this.utcTiming);
    }

    /**
     * Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
     * 
     */
    @Import(name="utcTimingUri")
    private @Nullable String utcTimingUri;

    /**
     * @return Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
     * 
     */
    public Optional<String> utcTimingUri() {
        return Optional.ofNullable(this.utcTimingUri);
    }

    private OriginEndpointDashPackage() {}

    private OriginEndpointDashPackage(OriginEndpointDashPackage $) {
        this.adTriggers = $.adTriggers;
        this.adsOnDeliveryRestrictions = $.adsOnDeliveryRestrictions;
        this.encryption = $.encryption;
        this.manifestLayout = $.manifestLayout;
        this.manifestWindowSeconds = $.manifestWindowSeconds;
        this.minBufferTimeSeconds = $.minBufferTimeSeconds;
        this.minUpdatePeriodSeconds = $.minUpdatePeriodSeconds;
        this.periodTriggers = $.periodTriggers;
        this.profile = $.profile;
        this.segmentDurationSeconds = $.segmentDurationSeconds;
        this.segmentTemplateFormat = $.segmentTemplateFormat;
        this.streamSelection = $.streamSelection;
        this.suggestedPresentationDelaySeconds = $.suggestedPresentationDelaySeconds;
        this.utcTiming = $.utcTiming;
        this.utcTimingUri = $.utcTimingUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OriginEndpointDashPackage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OriginEndpointDashPackage $;

        public Builder() {
            $ = new OriginEndpointDashPackage();
        }

        public Builder(OriginEndpointDashPackage defaults) {
            $ = new OriginEndpointDashPackage(Objects.requireNonNull(defaults));
        }

        /**
         * @param adTriggers A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
         * 
         * @return builder
         * 
         */
        public Builder adTriggers(@Nullable List<OriginEndpointDashPackageAdTriggersItem> adTriggers) {
            $.adTriggers = adTriggers;
            return this;
        }

        /**
         * @param adTriggers A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
         * 
         * @return builder
         * 
         */
        public Builder adTriggers(OriginEndpointDashPackageAdTriggersItem... adTriggers) {
            return adTriggers(List.of(adTriggers));
        }

        public Builder adsOnDeliveryRestrictions(@Nullable OriginEndpointAdsOnDeliveryRestrictions adsOnDeliveryRestrictions) {
            $.adsOnDeliveryRestrictions = adsOnDeliveryRestrictions;
            return this;
        }

        public Builder encryption(@Nullable OriginEndpointDashEncryption encryption) {
            $.encryption = encryption;
            return this;
        }

        /**
         * @param manifestLayout Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.
         * 
         * @return builder
         * 
         */
        public Builder manifestLayout(@Nullable OriginEndpointDashPackageManifestLayout manifestLayout) {
            $.manifestLayout = manifestLayout;
            return this;
        }

        /**
         * @param manifestWindowSeconds Time window (in seconds) contained in each manifest.
         * 
         * @return builder
         * 
         */
        public Builder manifestWindowSeconds(@Nullable Integer manifestWindowSeconds) {
            $.manifestWindowSeconds = manifestWindowSeconds;
            return this;
        }

        /**
         * @param minBufferTimeSeconds Minimum duration (in seconds) that a player will buffer media before starting the presentation.
         * 
         * @return builder
         * 
         */
        public Builder minBufferTimeSeconds(@Nullable Integer minBufferTimeSeconds) {
            $.minBufferTimeSeconds = minBufferTimeSeconds;
            return this;
        }

        /**
         * @param minUpdatePeriodSeconds Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
         * 
         * @return builder
         * 
         */
        public Builder minUpdatePeriodSeconds(@Nullable Integer minUpdatePeriodSeconds) {
            $.minUpdatePeriodSeconds = minUpdatePeriodSeconds;
            return this;
        }

        /**
         * @param periodTriggers A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains &#34;ADS&#34;, new periods will be created where the Channel source contains SCTE-35 ad markers.
         * 
         * @return builder
         * 
         */
        public Builder periodTriggers(@Nullable List<OriginEndpointDashPackagePeriodTriggersItem> periodTriggers) {
            $.periodTriggers = periodTriggers;
            return this;
        }

        /**
         * @param periodTriggers A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains &#34;ADS&#34;, new periods will be created where the Channel source contains SCTE-35 ad markers.
         * 
         * @return builder
         * 
         */
        public Builder periodTriggers(OriginEndpointDashPackagePeriodTriggersItem... periodTriggers) {
            return periodTriggers(List.of(periodTriggers));
        }

        /**
         * @param profile The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to &#34;HBBTV_1_5&#34;, HbbTV 1.5 compliant output is enabled.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable OriginEndpointDashPackageProfile profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param segmentDurationSeconds Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.
         * 
         * @return builder
         * 
         */
        public Builder segmentDurationSeconds(@Nullable Integer segmentDurationSeconds) {
            $.segmentDurationSeconds = segmentDurationSeconds;
            return this;
        }

        /**
         * @param segmentTemplateFormat Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.
         * 
         * @return builder
         * 
         */
        public Builder segmentTemplateFormat(@Nullable OriginEndpointDashPackageSegmentTemplateFormat segmentTemplateFormat) {
            $.segmentTemplateFormat = segmentTemplateFormat;
            return this;
        }

        public Builder streamSelection(@Nullable OriginEndpointStreamSelection streamSelection) {
            $.streamSelection = streamSelection;
            return this;
        }

        /**
         * @param suggestedPresentationDelaySeconds Duration (in seconds) to delay live content before presentation.
         * 
         * @return builder
         * 
         */
        public Builder suggestedPresentationDelaySeconds(@Nullable Integer suggestedPresentationDelaySeconds) {
            $.suggestedPresentationDelaySeconds = suggestedPresentationDelaySeconds;
            return this;
        }

        /**
         * @param utcTiming Determines the type of UTCTiming included in the Media Presentation Description (MPD)
         * 
         * @return builder
         * 
         */
        public Builder utcTiming(@Nullable OriginEndpointDashPackageUtcTiming utcTiming) {
            $.utcTiming = utcTiming;
            return this;
        }

        /**
         * @param utcTimingUri Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD
         * 
         * @return builder
         * 
         */
        public Builder utcTimingUri(@Nullable String utcTimingUri) {
            $.utcTimingUri = utcTimingUri;
            return this;
        }

        public OriginEndpointDashPackage build() {
            return $;
        }
    }

}
