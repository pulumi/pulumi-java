// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kafkaconnect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details about delivering logs to Amazon CloudWatch Logs.
 * 
 */
public final class ConnectorCloudWatchLogsLogDeliveryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorCloudWatchLogsLogDeliveryArgs Empty = new ConnectorCloudWatchLogsLogDeliveryArgs();

    /**
     * Specifies whether the logs get sent to the specified CloudWatch Logs destination.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The CloudWatch log group that is the destination for log delivery.
     * 
     */
    @Import(name="logGroup")
    private @Nullable Output<String> logGroup;

    public Optional<Output<String>> logGroup() {
        return Optional.ofNullable(this.logGroup);
    }

    private ConnectorCloudWatchLogsLogDeliveryArgs() {}

    private ConnectorCloudWatchLogsLogDeliveryArgs(ConnectorCloudWatchLogsLogDeliveryArgs $) {
        this.enabled = $.enabled;
        this.logGroup = $.logGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorCloudWatchLogsLogDeliveryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorCloudWatchLogsLogDeliveryArgs $;

        public Builder() {
            $ = new ConnectorCloudWatchLogsLogDeliveryArgs();
        }

        public Builder(ConnectorCloudWatchLogsLogDeliveryArgs defaults) {
            $ = new ConnectorCloudWatchLogsLogDeliveryArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder logGroup(@Nullable Output<String> logGroup) {
            $.logGroup = logGroup;
            return this;
        }

        public Builder logGroup(String logGroup) {
            return logGroup(Output.of(logGroup));
        }

        public ConnectorCloudWatchLogsLogDeliveryArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
