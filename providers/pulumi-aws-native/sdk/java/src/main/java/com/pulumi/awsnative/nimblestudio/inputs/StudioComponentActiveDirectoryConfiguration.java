// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.nimblestudio.inputs;

import com.pulumi.awsnative.nimblestudio.inputs.StudioComponentActiveDirectoryComputerAttribute;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * &lt;p&gt;The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.&lt;/p&gt;
 * 
 */
public final class StudioComponentActiveDirectoryConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final StudioComponentActiveDirectoryConfiguration Empty = new StudioComponentActiveDirectoryConfiguration();

    /**
     * &lt;p&gt;A collection of custom attributes for an Active Directory computer.&lt;/p&gt;
     * 
     */
    @Import(name="computerAttributes")
    private @Nullable List<StudioComponentActiveDirectoryComputerAttribute> computerAttributes;

    /**
     * @return &lt;p&gt;A collection of custom attributes for an Active Directory computer.&lt;/p&gt;
     * 
     */
    public Optional<List<StudioComponentActiveDirectoryComputerAttribute>> computerAttributes() {
        return Optional.ofNullable(this.computerAttributes);
    }

    /**
     * &lt;p&gt;The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.&lt;/p&gt;
     * 
     */
    @Import(name="directoryId")
    private @Nullable String directoryId;

    /**
     * @return &lt;p&gt;The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.&lt;/p&gt;
     * 
     */
    public Optional<String> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }

    /**
     * &lt;p&gt;The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.&lt;/p&gt;
     * 
     */
    @Import(name="organizationalUnitDistinguishedName")
    private @Nullable String organizationalUnitDistinguishedName;

    /**
     * @return &lt;p&gt;The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.&lt;/p&gt;
     * 
     */
    public Optional<String> organizationalUnitDistinguishedName() {
        return Optional.ofNullable(this.organizationalUnitDistinguishedName);
    }

    private StudioComponentActiveDirectoryConfiguration() {}

    private StudioComponentActiveDirectoryConfiguration(StudioComponentActiveDirectoryConfiguration $) {
        this.computerAttributes = $.computerAttributes;
        this.directoryId = $.directoryId;
        this.organizationalUnitDistinguishedName = $.organizationalUnitDistinguishedName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StudioComponentActiveDirectoryConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StudioComponentActiveDirectoryConfiguration $;

        public Builder() {
            $ = new StudioComponentActiveDirectoryConfiguration();
        }

        public Builder(StudioComponentActiveDirectoryConfiguration defaults) {
            $ = new StudioComponentActiveDirectoryConfiguration(Objects.requireNonNull(defaults));
        }

        /**
         * @param computerAttributes &lt;p&gt;A collection of custom attributes for an Active Directory computer.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder computerAttributes(@Nullable List<StudioComponentActiveDirectoryComputerAttribute> computerAttributes) {
            $.computerAttributes = computerAttributes;
            return this;
        }

        /**
         * @param computerAttributes &lt;p&gt;A collection of custom attributes for an Active Directory computer.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder computerAttributes(StudioComponentActiveDirectoryComputerAttribute... computerAttributes) {
            return computerAttributes(List.of(computerAttributes));
        }

        /**
         * @param directoryId &lt;p&gt;The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder directoryId(@Nullable String directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        /**
         * @param organizationalUnitDistinguishedName &lt;p&gt;The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitDistinguishedName(@Nullable String organizationalUnitDistinguishedName) {
            $.organizationalUnitDistinguishedName = organizationalUnitDistinguishedName;
            return this;
        }

        public StudioComponentActiveDirectoryConfiguration build() {
            return $;
        }
    }

}
