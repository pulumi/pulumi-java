// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail.inputs;

import com.pulumi.awsnative.lightsail.enums.DiskAddOnStatus;
import com.pulumi.awsnative.lightsail.inputs.DiskAutoSnapshotAddOnArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A addon associate with a resource.
 * 
 */
public final class DiskAddOnArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiskAddOnArgs Empty = new DiskAddOnArgs();

    /**
     * The add-on type
     * 
     */
    @Import(name="addOnType", required=true)
      private final Output<String> addOnType;

    public Output<String> addOnType() {
        return this.addOnType;
    }

    @Import(name="autoSnapshotAddOnRequest")
      private final @Nullable Output<DiskAutoSnapshotAddOnArgs> autoSnapshotAddOnRequest;

    public Output<DiskAutoSnapshotAddOnArgs> autoSnapshotAddOnRequest() {
        return this.autoSnapshotAddOnRequest == null ? Codegen.empty() : this.autoSnapshotAddOnRequest;
    }

    /**
     * Status of the Addon
     * 
     */
    @Import(name="status")
      private final @Nullable Output<DiskAddOnStatus> status;

    public Output<DiskAddOnStatus> status() {
        return this.status == null ? Codegen.empty() : this.status;
    }

    public DiskAddOnArgs(
        Output<String> addOnType,
        @Nullable Output<DiskAutoSnapshotAddOnArgs> autoSnapshotAddOnRequest,
        @Nullable Output<DiskAddOnStatus> status) {
        this.addOnType = Objects.requireNonNull(addOnType, "expected parameter 'addOnType' to be non-null");
        this.autoSnapshotAddOnRequest = autoSnapshotAddOnRequest;
        this.status = status;
    }

    private DiskAddOnArgs() {
        this.addOnType = Codegen.empty();
        this.autoSnapshotAddOnRequest = Codegen.empty();
        this.status = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskAddOnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> addOnType;
        private @Nullable Output<DiskAutoSnapshotAddOnArgs> autoSnapshotAddOnRequest;
        private @Nullable Output<DiskAddOnStatus> status;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskAddOnArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addOnType = defaults.addOnType;
    	      this.autoSnapshotAddOnRequest = defaults.autoSnapshotAddOnRequest;
    	      this.status = defaults.status;
        }

        public Builder addOnType(Output<String> addOnType) {
            this.addOnType = Objects.requireNonNull(addOnType);
            return this;
        }
        public Builder addOnType(String addOnType) {
            this.addOnType = Output.of(Objects.requireNonNull(addOnType));
            return this;
        }
        public Builder autoSnapshotAddOnRequest(@Nullable Output<DiskAutoSnapshotAddOnArgs> autoSnapshotAddOnRequest) {
            this.autoSnapshotAddOnRequest = autoSnapshotAddOnRequest;
            return this;
        }
        public Builder autoSnapshotAddOnRequest(@Nullable DiskAutoSnapshotAddOnArgs autoSnapshotAddOnRequest) {
            this.autoSnapshotAddOnRequest = Codegen.ofNullable(autoSnapshotAddOnRequest);
            return this;
        }
        public Builder status(@Nullable Output<DiskAddOnStatus> status) {
            this.status = status;
            return this;
        }
        public Builder status(@Nullable DiskAddOnStatus status) {
            this.status = Codegen.ofNullable(status);
            return this;
        }        public DiskAddOnArgs build() {
            return new DiskAddOnArgs(addOnType, autoSnapshotAddOnRequest, status);
        }
    }
}
