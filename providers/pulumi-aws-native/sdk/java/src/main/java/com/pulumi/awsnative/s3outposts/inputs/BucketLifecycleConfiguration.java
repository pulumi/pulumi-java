// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3outposts.inputs;

import com.pulumi.awsnative.s3outposts.inputs.BucketRule;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class BucketLifecycleConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final BucketLifecycleConfiguration Empty = new BucketLifecycleConfiguration();

    /**
     * A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
     * 
     */
    @Import(name="rules", required=true)
    private List<BucketRule> rules;

    /**
     * @return A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
     * 
     */
    public List<BucketRule> rules() {
        return this.rules;
    }

    private BucketLifecycleConfiguration() {}

    private BucketLifecycleConfiguration(BucketLifecycleConfiguration $) {
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLifecycleConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleConfiguration $;

        public Builder() {
            $ = new BucketLifecycleConfiguration();
        }

        public Builder(BucketLifecycleConfiguration defaults) {
            $ = new BucketLifecycleConfiguration(Objects.requireNonNull(defaults));
        }

        /**
         * @param rules A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<BucketRule> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
         * 
         * @return builder
         * 
         */
        public Builder rules(BucketRule... rules) {
            return rules(List.of(rules));
        }

        public BucketLifecycleConfiguration build() {
            $.rules = Objects.requireNonNull($.rules, "expected parameter 'rules' to be non-null");
            return $;
        }
    }

}
