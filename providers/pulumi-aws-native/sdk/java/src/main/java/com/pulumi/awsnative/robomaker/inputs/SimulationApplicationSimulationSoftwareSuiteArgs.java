// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.robomaker.inputs;

import com.pulumi.awsnative.robomaker.enums.SimulationApplicationSimulationSoftwareSuiteName;
import com.pulumi.awsnative.robomaker.enums.SimulationApplicationSimulationSoftwareSuiteVersion;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Information about a simulation software suite.
 * 
 */
public final class SimulationApplicationSimulationSoftwareSuiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final SimulationApplicationSimulationSoftwareSuiteArgs Empty = new SimulationApplicationSimulationSoftwareSuiteArgs();

    /**
     * The name of the simulation software suite.
     * 
     */
    @Import(name="name", required=true)
      private final Output<SimulationApplicationSimulationSoftwareSuiteName> name;

    public Output<SimulationApplicationSimulationSoftwareSuiteName> name() {
        return this.name;
    }

    /**
     * The version of the simulation software suite.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<SimulationApplicationSimulationSoftwareSuiteVersion> version;

    public Output<SimulationApplicationSimulationSoftwareSuiteVersion> version() {
        return this.version == null ? Codegen.empty() : this.version;
    }

    public SimulationApplicationSimulationSoftwareSuiteArgs(
        Output<SimulationApplicationSimulationSoftwareSuiteName> name,
        @Nullable Output<SimulationApplicationSimulationSoftwareSuiteVersion> version) {
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.version = version;
    }

    private SimulationApplicationSimulationSoftwareSuiteArgs() {
        this.name = Codegen.empty();
        this.version = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SimulationApplicationSimulationSoftwareSuiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<SimulationApplicationSimulationSoftwareSuiteName> name;
        private @Nullable Output<SimulationApplicationSimulationSoftwareSuiteVersion> version;

        public Builder() {
    	      // Empty
        }

        public Builder(SimulationApplicationSimulationSoftwareSuiteArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.version = defaults.version;
        }

        public Builder name(Output<SimulationApplicationSimulationSoftwareSuiteName> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(SimulationApplicationSimulationSoftwareSuiteName name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }
        public Builder version(@Nullable Output<SimulationApplicationSimulationSoftwareSuiteVersion> version) {
            this.version = version;
            return this;
        }
        public Builder version(@Nullable SimulationApplicationSimulationSoftwareSuiteVersion version) {
            this.version = Codegen.ofNullable(version);
            return this;
        }        public SimulationApplicationSimulationSoftwareSuiteArgs build() {
            return new SimulationApplicationSimulationSoftwareSuiteArgs(name, version);
        }
    }
}
