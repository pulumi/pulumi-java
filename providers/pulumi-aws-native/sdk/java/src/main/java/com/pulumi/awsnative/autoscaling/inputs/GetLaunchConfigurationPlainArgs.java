// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.autoscaling.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetLaunchConfigurationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLaunchConfigurationPlainArgs Empty = new GetLaunchConfigurationPlainArgs();

    /**
     * The name of the launch configuration. This name must be unique per Region per account.
     * 
     */
    @Import(name="launchConfigurationName", required=true)
    private String launchConfigurationName;

    /**
     * @return The name of the launch configuration. This name must be unique per Region per account.
     * 
     */
    public String launchConfigurationName() {
        return this.launchConfigurationName;
    }

    private GetLaunchConfigurationPlainArgs() {}

    private GetLaunchConfigurationPlainArgs(GetLaunchConfigurationPlainArgs $) {
        this.launchConfigurationName = $.launchConfigurationName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLaunchConfigurationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLaunchConfigurationPlainArgs $;

        public Builder() {
            $ = new GetLaunchConfigurationPlainArgs();
        }

        public Builder(GetLaunchConfigurationPlainArgs defaults) {
            $ = new GetLaunchConfigurationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param launchConfigurationName The name of the launch configuration. This name must be unique per Region per account.
         * 
         * @return builder
         * 
         */
        public Builder launchConfigurationName(String launchConfigurationName) {
            $.launchConfigurationName = launchConfigurationName;
            return this;
        }

        public GetLaunchConfigurationPlainArgs build() {
            $.launchConfigurationName = Objects.requireNonNull($.launchConfigurationName, "expected parameter 'launchConfigurationName' to be non-null");
            return $;
        }
    }

}
