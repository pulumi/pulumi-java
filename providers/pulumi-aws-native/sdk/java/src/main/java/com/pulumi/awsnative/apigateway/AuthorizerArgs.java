// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthorizerArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthorizerArgs Empty = new AuthorizerArgs();

    /**
     * Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
     * 
     */
    @Import(name="authType")
    private @Nullable Output<String> authType;

    public Optional<Output<String>> authType() {
        return Optional.ofNullable(this.authType);
    }

    /**
     * Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
     * 
     */
    @Import(name="authorizerCredentials")
    private @Nullable Output<String> authorizerCredentials;

    public Optional<Output<String>> authorizerCredentials() {
        return Optional.ofNullable(this.authorizerCredentials);
    }

    /**
     * The TTL in seconds of cached authorizer results.
     * 
     */
    @Import(name="authorizerResultTtlInSeconds")
    private @Nullable Output<Integer> authorizerResultTtlInSeconds;

    public Optional<Output<Integer>> authorizerResultTtlInSeconds() {
        return Optional.ofNullable(this.authorizerResultTtlInSeconds);
    }

    /**
     * Specifies the authorizer&#39;s Uniform Resource Identifier (URI).
     * 
     */
    @Import(name="authorizerUri")
    private @Nullable Output<String> authorizerUri;

    public Optional<Output<String>> authorizerUri() {
        return Optional.ofNullable(this.authorizerUri);
    }

    /**
     * The identity source for which authorization is requested.
     * 
     */
    @Import(name="identitySource")
    private @Nullable Output<String> identitySource;

    public Optional<Output<String>> identitySource() {
        return Optional.ofNullable(this.identitySource);
    }

    /**
     * A validation expression for the incoming identity token.
     * 
     */
    @Import(name="identityValidationExpression")
    private @Nullable Output<String> identityValidationExpression;

    public Optional<Output<String>> identityValidationExpression() {
        return Optional.ofNullable(this.identityValidationExpression);
    }

    /**
     * The name of the authorizer.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
     * 
     */
    @Import(name="providerARNs")
    private @Nullable Output<List<String>> providerARNs;

    public Optional<Output<List<String>>> providerARNs() {
        return Optional.ofNullable(this.providerARNs);
    }

    /**
     * The identifier of the API.
     * 
     */
    @Import(name="restApiId", required=true)
    private Output<String> restApiId;

    public Output<String> restApiId() {
        return this.restApiId;
    }

    /**
     * The authorizer type.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private AuthorizerArgs() {}

    private AuthorizerArgs(AuthorizerArgs $) {
        this.authType = $.authType;
        this.authorizerCredentials = $.authorizerCredentials;
        this.authorizerResultTtlInSeconds = $.authorizerResultTtlInSeconds;
        this.authorizerUri = $.authorizerUri;
        this.identitySource = $.identitySource;
        this.identityValidationExpression = $.identityValidationExpression;
        this.name = $.name;
        this.providerARNs = $.providerARNs;
        this.restApiId = $.restApiId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthorizerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorizerArgs $;

        public Builder() {
            $ = new AuthorizerArgs();
        }

        public Builder(AuthorizerArgs defaults) {
            $ = new AuthorizerArgs(Objects.requireNonNull(defaults));
        }

        public Builder authType(@Nullable Output<String> authType) {
            $.authType = authType;
            return this;
        }

        public Builder authType(String authType) {
            return authType(Output.of(authType));
        }

        public Builder authorizerCredentials(@Nullable Output<String> authorizerCredentials) {
            $.authorizerCredentials = authorizerCredentials;
            return this;
        }

        public Builder authorizerCredentials(String authorizerCredentials) {
            return authorizerCredentials(Output.of(authorizerCredentials));
        }

        public Builder authorizerResultTtlInSeconds(@Nullable Output<Integer> authorizerResultTtlInSeconds) {
            $.authorizerResultTtlInSeconds = authorizerResultTtlInSeconds;
            return this;
        }

        public Builder authorizerResultTtlInSeconds(Integer authorizerResultTtlInSeconds) {
            return authorizerResultTtlInSeconds(Output.of(authorizerResultTtlInSeconds));
        }

        public Builder authorizerUri(@Nullable Output<String> authorizerUri) {
            $.authorizerUri = authorizerUri;
            return this;
        }

        public Builder authorizerUri(String authorizerUri) {
            return authorizerUri(Output.of(authorizerUri));
        }

        public Builder identitySource(@Nullable Output<String> identitySource) {
            $.identitySource = identitySource;
            return this;
        }

        public Builder identitySource(String identitySource) {
            return identitySource(Output.of(identitySource));
        }

        public Builder identityValidationExpression(@Nullable Output<String> identityValidationExpression) {
            $.identityValidationExpression = identityValidationExpression;
            return this;
        }

        public Builder identityValidationExpression(String identityValidationExpression) {
            return identityValidationExpression(Output.of(identityValidationExpression));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder providerARNs(@Nullable Output<List<String>> providerARNs) {
            $.providerARNs = providerARNs;
            return this;
        }

        public Builder providerARNs(List<String> providerARNs) {
            return providerARNs(Output.of(providerARNs));
        }

        public Builder providerARNs(String... providerARNs) {
            return providerARNs(List.of(providerARNs));
        }

        public Builder restApiId(Output<String> restApiId) {
            $.restApiId = restApiId;
            return this;
        }

        public Builder restApiId(String restApiId) {
            return restApiId(Output.of(restApiId));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AuthorizerArgs build() {
            $.restApiId = Objects.requireNonNull($.restApiId, "expected parameter 'restApiId' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
