// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.inputs.BucketStorageClassAnalysisArgs;
import com.pulumi.awsnative.s3.inputs.BucketTagFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
 * 
 */
public final class BucketAnalyticsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketAnalyticsConfigurationArgs Empty = new BucketAnalyticsConfigurationArgs();

    /**
     * The ID that identifies the analytics configuration.
     * 
     */
    @Import(name="id", required=true)
      private final Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    /**
     * The prefix that an object must have to be included in the analytics results.
     * 
     */
    @Import(name="prefix")
      private final @Nullable Output<String> prefix;

    public Output<String> prefix() {
        return this.prefix == null ? Codegen.empty() : this.prefix;
    }

    @Import(name="storageClassAnalysis", required=true)
      private final Output<BucketStorageClassAnalysisArgs> storageClassAnalysis;

    public Output<BucketStorageClassAnalysisArgs> storageClassAnalysis() {
        return this.storageClassAnalysis;
    }

    @Import(name="tagFilters")
      private final @Nullable Output<List<BucketTagFilterArgs>> tagFilters;

    public Output<List<BucketTagFilterArgs>> tagFilters() {
        return this.tagFilters == null ? Codegen.empty() : this.tagFilters;
    }

    public BucketAnalyticsConfigurationArgs(
        Output<String> id,
        @Nullable Output<String> prefix,
        Output<BucketStorageClassAnalysisArgs> storageClassAnalysis,
        @Nullable Output<List<BucketTagFilterArgs>> tagFilters) {
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.prefix = prefix;
        this.storageClassAnalysis = Objects.requireNonNull(storageClassAnalysis, "expected parameter 'storageClassAnalysis' to be non-null");
        this.tagFilters = tagFilters;
    }

    private BucketAnalyticsConfigurationArgs() {
        this.id = Codegen.empty();
        this.prefix = Codegen.empty();
        this.storageClassAnalysis = Codegen.empty();
        this.tagFilters = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketAnalyticsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> id;
        private @Nullable Output<String> prefix;
        private Output<BucketStorageClassAnalysisArgs> storageClassAnalysis;
        private @Nullable Output<List<BucketTagFilterArgs>> tagFilters;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketAnalyticsConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.prefix = defaults.prefix;
    	      this.storageClassAnalysis = defaults.storageClassAnalysis;
    	      this.tagFilters = defaults.tagFilters;
        }

        public Builder id(Output<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder id(String id) {
            this.id = Output.of(Objects.requireNonNull(id));
            return this;
        }
        public Builder prefix(@Nullable Output<String> prefix) {
            this.prefix = prefix;
            return this;
        }
        public Builder prefix(@Nullable String prefix) {
            this.prefix = Codegen.ofNullable(prefix);
            return this;
        }
        public Builder storageClassAnalysis(Output<BucketStorageClassAnalysisArgs> storageClassAnalysis) {
            this.storageClassAnalysis = Objects.requireNonNull(storageClassAnalysis);
            return this;
        }
        public Builder storageClassAnalysis(BucketStorageClassAnalysisArgs storageClassAnalysis) {
            this.storageClassAnalysis = Output.of(Objects.requireNonNull(storageClassAnalysis));
            return this;
        }
        public Builder tagFilters(@Nullable Output<List<BucketTagFilterArgs>> tagFilters) {
            this.tagFilters = tagFilters;
            return this;
        }
        public Builder tagFilters(@Nullable List<BucketTagFilterArgs> tagFilters) {
            this.tagFilters = Codegen.ofNullable(tagFilters);
            return this;
        }
        public Builder tagFilters(BucketTagFilterArgs... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }        public BucketAnalyticsConfigurationArgs build() {
            return new BucketAnalyticsConfigurationArgs(id, prefix, storageClassAnalysis, tagFilters);
        }
    }
}
