// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.nimblestudio.inputs;

import com.pulumi.awsnative.nimblestudio.enums.LaunchProfileStreamingSessionStorageMode;
import com.pulumi.awsnative.nimblestudio.inputs.LaunchProfileStreamingSessionStorageRoot;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * &lt;p&gt;The configuration for a streaming sessionâ€™s upload storage.&lt;/p&gt;
 * 
 */
public final class LaunchProfileStreamConfigurationSessionStorage extends com.pulumi.resources.InvokeArgs {

    public static final LaunchProfileStreamConfigurationSessionStorage Empty = new LaunchProfileStreamConfigurationSessionStorage();

    /**
     * &lt;p&gt;Allows artists to upload files to their workstations. The only valid option is
     *                 &lt;code&gt;UPLOAD&lt;/code&gt;.&lt;/p&gt;
     * 
     */
    @Import(name="mode")
    private @Nullable List<LaunchProfileStreamingSessionStorageMode> mode;

    /**
     * @return &lt;p&gt;Allows artists to upload files to their workstations. The only valid option is
     *                 &lt;code&gt;UPLOAD&lt;/code&gt;.&lt;/p&gt;
     * 
     */
    public Optional<List<LaunchProfileStreamingSessionStorageMode>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="root")
    private @Nullable LaunchProfileStreamingSessionStorageRoot root;

    public Optional<LaunchProfileStreamingSessionStorageRoot> root() {
        return Optional.ofNullable(this.root);
    }

    private LaunchProfileStreamConfigurationSessionStorage() {}

    private LaunchProfileStreamConfigurationSessionStorage(LaunchProfileStreamConfigurationSessionStorage $) {
        this.mode = $.mode;
        this.root = $.root;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LaunchProfileStreamConfigurationSessionStorage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LaunchProfileStreamConfigurationSessionStorage $;

        public Builder() {
            $ = new LaunchProfileStreamConfigurationSessionStorage();
        }

        public Builder(LaunchProfileStreamConfigurationSessionStorage defaults) {
            $ = new LaunchProfileStreamConfigurationSessionStorage(Objects.requireNonNull(defaults));
        }

        /**
         * @param mode &lt;p&gt;Allows artists to upload files to their workstations. The only valid option is
         *                 &lt;code&gt;UPLOAD&lt;/code&gt;.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable List<LaunchProfileStreamingSessionStorageMode> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode &lt;p&gt;Allows artists to upload files to their workstations. The only valid option is
         *                 &lt;code&gt;UPLOAD&lt;/code&gt;.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder mode(LaunchProfileStreamingSessionStorageMode... mode) {
            return mode(List.of(mode));
        }

        public Builder root(@Nullable LaunchProfileStreamingSessionStorageRoot root) {
            $.root = root;
            return this;
        }

        public LaunchProfileStreamConfigurationSessionStorage build() {
            return $;
        }
    }

}
