// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleKafkaAction extends com.pulumi.resources.InvokeArgs {

    public static final TopicRuleKafkaAction Empty = new TopicRuleKafkaAction();

    @Import(name="clientProperties", required=true)
    private Object clientProperties;

    public Object clientProperties() {
        return this.clientProperties;
    }

    @Import(name="destinationArn", required=true)
    private String destinationArn;

    public String destinationArn() {
        return this.destinationArn;
    }

    @Import(name="key")
    private @Nullable String key;

    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }

    @Import(name="partition")
    private @Nullable String partition;

    public Optional<String> partition() {
        return Optional.ofNullable(this.partition);
    }

    @Import(name="topic", required=true)
    private String topic;

    public String topic() {
        return this.topic;
    }

    private TopicRuleKafkaAction() {}

    private TopicRuleKafkaAction(TopicRuleKafkaAction $) {
        this.clientProperties = $.clientProperties;
        this.destinationArn = $.destinationArn;
        this.key = $.key;
        this.partition = $.partition;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleKafkaAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleKafkaAction $;

        public Builder() {
            $ = new TopicRuleKafkaAction();
        }

        public Builder(TopicRuleKafkaAction defaults) {
            $ = new TopicRuleKafkaAction(Objects.requireNonNull(defaults));
        }

        public Builder clientProperties(Object clientProperties) {
            $.clientProperties = clientProperties;
            return this;
        }

        public Builder destinationArn(String destinationArn) {
            $.destinationArn = destinationArn;
            return this;
        }

        public Builder key(@Nullable String key) {
            $.key = key;
            return this;
        }

        public Builder partition(@Nullable String partition) {
            $.partition = partition;
            return this;
        }

        public Builder topic(String topic) {
            $.topic = topic;
            return this;
        }

        public TopicRuleKafkaAction build() {
            $.clientProperties = Objects.requireNonNull($.clientProperties, "expected parameter 'clientProperties' to be non-null");
            $.destinationArn = Objects.requireNonNull($.destinationArn, "expected parameter 'destinationArn' to be non-null");
            $.topic = Objects.requireNonNull($.topic, "expected parameter 'topic' to be non-null");
            return $;
        }
    }

}
