// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.gamelift.inputs;

import com.pulumi.awsnative.gamelift.inputs.FleetLocationCapacity;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A remote location where a multi-location fleet can deploy EC2 instances for game hosting.
 * 
 */
public final class FleetLocationConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final FleetLocationConfiguration Empty = new FleetLocationConfiguration();

    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    @Import(name="locationCapacity")
    private @Nullable FleetLocationCapacity locationCapacity;

    public Optional<FleetLocationCapacity> locationCapacity() {
        return Optional.ofNullable(this.locationCapacity);
    }

    private FleetLocationConfiguration() {}

    private FleetLocationConfiguration(FleetLocationConfiguration $) {
        this.location = $.location;
        this.locationCapacity = $.locationCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetLocationConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetLocationConfiguration $;

        public Builder() {
            $ = new FleetLocationConfiguration();
        }

        public Builder(FleetLocationConfiguration defaults) {
            $ = new FleetLocationConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder locationCapacity(@Nullable FleetLocationCapacity locationCapacity) {
            $.locationCapacity = locationCapacity;
            return this;
        }

        public FleetLocationConfiguration build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
