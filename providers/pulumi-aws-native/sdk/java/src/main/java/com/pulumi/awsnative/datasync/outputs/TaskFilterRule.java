// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.datasync.outputs;

import com.pulumi.awsnative.datasync.enums.TaskFilterRuleFilterType;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskFilterRule {
    /**
     * @return The type of filter rule to apply. AWS DataSync only supports the SIMPLE_PATTERN rule type.
     * 
     */
    private final @Nullable TaskFilterRuleFilterType filterType;
    /**
     * @return A single filter string that consists of the patterns to include or exclude. The patterns are delimited by &#34;|&#34;.
     * 
     */
    private final @Nullable String value;

    @CustomType.Constructor
    private TaskFilterRule(
        @CustomType.Parameter("filterType") @Nullable TaskFilterRuleFilterType filterType,
        @CustomType.Parameter("value") @Nullable String value) {
        this.filterType = filterType;
        this.value = value;
    }

    /**
     * @return The type of filter rule to apply. AWS DataSync only supports the SIMPLE_PATTERN rule type.
     * 
     */
    public Optional<TaskFilterRuleFilterType> filterType() {
        return Optional.ofNullable(this.filterType);
    }
    /**
     * @return A single filter string that consists of the patterns to include or exclude. The patterns are delimited by &#34;|&#34;.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskFilterRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable TaskFilterRuleFilterType filterType;
        private @Nullable String value;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskFilterRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterType = defaults.filterType;
    	      this.value = defaults.value;
        }

        public Builder filterType(@Nullable TaskFilterRuleFilterType filterType) {
            this.filterType = filterType;
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }        public TaskFilterRule build() {
            return new TaskFilterRule(filterType, value);
        }
    }
}
