// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.amplifyuibuilder.inputs;

import com.pulumi.awsnative.amplifyuibuilder.inputs.ComponentProperties;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComponentChild extends com.pulumi.resources.InvokeArgs {

    public static final ComponentChild Empty = new ComponentChild();

    @Import(name="children")
    private @Nullable List<ComponentChild> children;

    public Optional<List<ComponentChild>> children() {
        return Optional.ofNullable(this.children);
    }

    @Import(name="componentType", required=true)
    private String componentType;

    public String componentType() {
        return this.componentType;
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="properties", required=true)
    private ComponentProperties properties;

    public ComponentProperties properties() {
        return this.properties;
    }

    private ComponentChild() {}

    private ComponentChild(ComponentChild $) {
        this.children = $.children;
        this.componentType = $.componentType;
        this.name = $.name;
        this.properties = $.properties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComponentChild defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComponentChild $;

        public Builder() {
            $ = new ComponentChild();
        }

        public Builder(ComponentChild defaults) {
            $ = new ComponentChild(Objects.requireNonNull(defaults));
        }

        public Builder children(@Nullable List<ComponentChild> children) {
            $.children = children;
            return this;
        }

        public Builder children(ComponentChild... children) {
            return children(List.of(children));
        }

        public Builder componentType(String componentType) {
            $.componentType = componentType;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder properties(ComponentProperties properties) {
            $.properties = properties;
            return this;
        }

        public ComponentChild build() {
            $.componentType = Objects.requireNonNull($.componentType, "expected parameter 'componentType' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.properties = Objects.requireNonNull($.properties, "expected parameter 'properties' to be non-null");
            return $;
        }
    }

}
