// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.applicationinsights.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The HANA DB Prometheus Exporter settings.
 * 
 */
public final class ApplicationHANAPrometheusExporter extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationHANAPrometheusExporter Empty = new ApplicationHANAPrometheusExporter();

    /**
     * A flag which indicates agreeing to install SAP HANA DB client.
     * 
     */
    @Import(name="agreeToInstallHANADBClient", required=true)
    private Boolean agreeToInstallHANADBClient;

    public Boolean agreeToInstallHANADBClient() {
        return this.agreeToInstallHANADBClient;
    }

    /**
     * The HANA DB port.
     * 
     */
    @Import(name="hANAPort", required=true)
    private String hANAPort;

    public String hANAPort() {
        return this.hANAPort;
    }

    /**
     * HANA DB SID.
     * 
     */
    @Import(name="hANASID", required=true)
    private String hANASID;

    public String hANASID() {
        return this.hANASID;
    }

    /**
     * The secret name which manages the HANA DB credentials e.g. {
     *   &#34;username&#34;: &#34;&lt;&gt;&#34;,
     *   &#34;password&#34;: &#34;&lt;&gt;&#34;
     * }.
     * 
     */
    @Import(name="hANASecretName", required=true)
    private String hANASecretName;

    public String hANASecretName() {
        return this.hANASecretName;
    }

    /**
     * Prometheus exporter port.
     * 
     */
    @Import(name="prometheusPort")
    private @Nullable String prometheusPort;

    public Optional<String> prometheusPort() {
        return Optional.ofNullable(this.prometheusPort);
    }

    private ApplicationHANAPrometheusExporter() {}

    private ApplicationHANAPrometheusExporter(ApplicationHANAPrometheusExporter $) {
        this.agreeToInstallHANADBClient = $.agreeToInstallHANADBClient;
        this.hANAPort = $.hANAPort;
        this.hANASID = $.hANASID;
        this.hANASecretName = $.hANASecretName;
        this.prometheusPort = $.prometheusPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationHANAPrometheusExporter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationHANAPrometheusExporter $;

        public Builder() {
            $ = new ApplicationHANAPrometheusExporter();
        }

        public Builder(ApplicationHANAPrometheusExporter defaults) {
            $ = new ApplicationHANAPrometheusExporter(Objects.requireNonNull(defaults));
        }

        public Builder agreeToInstallHANADBClient(Boolean agreeToInstallHANADBClient) {
            $.agreeToInstallHANADBClient = agreeToInstallHANADBClient;
            return this;
        }

        public Builder hANAPort(String hANAPort) {
            $.hANAPort = hANAPort;
            return this;
        }

        public Builder hANASID(String hANASID) {
            $.hANASID = hANASID;
            return this;
        }

        public Builder hANASecretName(String hANASecretName) {
            $.hANASecretName = hANASecretName;
            return this;
        }

        public Builder prometheusPort(@Nullable String prometheusPort) {
            $.prometheusPort = prometheusPort;
            return this;
        }

        public ApplicationHANAPrometheusExporter build() {
            $.agreeToInstallHANADBClient = Objects.requireNonNull($.agreeToInstallHANADBClient, "expected parameter 'agreeToInstallHANADBClient' to be non-null");
            $.hANAPort = Objects.requireNonNull($.hANAPort, "expected parameter 'hANAPort' to be non-null");
            $.hANASID = Objects.requireNonNull($.hANASID, "expected parameter 'hANASID' to be non-null");
            $.hANASecretName = Objects.requireNonNull($.hANASecretName, "expected parameter 'hANASecretName' to be non-null");
            return $;
        }
    }

}
