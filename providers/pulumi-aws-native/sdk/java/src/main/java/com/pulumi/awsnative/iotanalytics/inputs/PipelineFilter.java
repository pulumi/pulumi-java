// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineFilter extends com.pulumi.resources.InvokeArgs {

    public static final PipelineFilter Empty = new PipelineFilter();

    @Import(name="filter", required=true)
    private String filter;

    public String filter() {
        return this.filter;
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="next")
    private @Nullable String next;

    public Optional<String> next() {
        return Optional.ofNullable(this.next);
    }

    private PipelineFilter() {}

    private PipelineFilter(PipelineFilter $) {
        this.filter = $.filter;
        this.name = $.name;
        this.next = $.next;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineFilter $;

        public Builder() {
            $ = new PipelineFilter();
        }

        public Builder(PipelineFilter defaults) {
            $ = new PipelineFilter(Objects.requireNonNull(defaults));
        }

        public Builder filter(String filter) {
            $.filter = filter;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder next(@Nullable String next) {
            $.next = next;
            return this;
        }

        public PipelineFilter build() {
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
