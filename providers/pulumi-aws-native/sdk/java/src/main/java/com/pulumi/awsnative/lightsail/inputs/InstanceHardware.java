// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail.inputs;

import com.pulumi.awsnative.lightsail.inputs.InstanceDisk;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Hardware of the Instance.
 * 
 */
public final class InstanceHardware extends com.pulumi.resources.InvokeArgs {

    public static final InstanceHardware Empty = new InstanceHardware();

    /**
     * CPU count of the Instance.
     * 
     */
    @Import(name="cpuCount")
    private @Nullable Integer cpuCount;

    public Optional<Integer> cpuCount() {
        return Optional.ofNullable(this.cpuCount);
    }

    /**
     * Disks attached to the Instance.
     * 
     */
    @Import(name="disks")
    private @Nullable List<InstanceDisk> disks;

    public Optional<List<InstanceDisk>> disks() {
        return Optional.ofNullable(this.disks);
    }

    /**
     * RAM Size of the Instance.
     * 
     */
    @Import(name="ramSizeInGb")
    private @Nullable Integer ramSizeInGb;

    public Optional<Integer> ramSizeInGb() {
        return Optional.ofNullable(this.ramSizeInGb);
    }

    private InstanceHardware() {}

    private InstanceHardware(InstanceHardware $) {
        this.cpuCount = $.cpuCount;
        this.disks = $.disks;
        this.ramSizeInGb = $.ramSizeInGb;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceHardware defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceHardware $;

        public Builder() {
            $ = new InstanceHardware();
        }

        public Builder(InstanceHardware defaults) {
            $ = new InstanceHardware(Objects.requireNonNull(defaults));
        }

        public Builder cpuCount(@Nullable Integer cpuCount) {
            $.cpuCount = cpuCount;
            return this;
        }

        public Builder disks(@Nullable List<InstanceDisk> disks) {
            $.disks = disks;
            return this;
        }

        public Builder disks(InstanceDisk... disks) {
            return disks(List.of(disks));
        }

        public Builder ramSizeInGb(@Nullable Integer ramSizeInGb) {
            $.ramSizeInGb = ramSizeInGb;
            return this;
        }

        public InstanceHardware build() {
            return $;
        }
    }

}
