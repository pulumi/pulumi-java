// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * A hierarchy specifies allowed parent/child asset relationships.
 * 
 */
public final class AssetHierarchyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetHierarchyArgs Empty = new AssetHierarchyArgs();

    /**
     * The ID of the child asset to be associated.
     * 
     */
    @Import(name="childAssetId", required=true)
      private final Output<String> childAssetId;

    public Output<String> childAssetId() {
        return this.childAssetId;
    }

    /**
     * The LogicalID of a hierarchy in the parent asset&#39;s model.
     * 
     */
    @Import(name="logicalId", required=true)
      private final Output<String> logicalId;

    public Output<String> logicalId() {
        return this.logicalId;
    }

    public AssetHierarchyArgs(
        Output<String> childAssetId,
        Output<String> logicalId) {
        this.childAssetId = Objects.requireNonNull(childAssetId, "expected parameter 'childAssetId' to be non-null");
        this.logicalId = Objects.requireNonNull(logicalId, "expected parameter 'logicalId' to be non-null");
    }

    private AssetHierarchyArgs() {
        this.childAssetId = Codegen.empty();
        this.logicalId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetHierarchyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> childAssetId;
        private Output<String> logicalId;

        public Builder() {
    	      // Empty
        }

        public Builder(AssetHierarchyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childAssetId = defaults.childAssetId;
    	      this.logicalId = defaults.logicalId;
        }

        public Builder childAssetId(Output<String> childAssetId) {
            this.childAssetId = Objects.requireNonNull(childAssetId);
            return this;
        }
        public Builder childAssetId(String childAssetId) {
            this.childAssetId = Output.of(Objects.requireNonNull(childAssetId));
            return this;
        }
        public Builder logicalId(Output<String> logicalId) {
            this.logicalId = Objects.requireNonNull(logicalId);
            return this;
        }
        public Builder logicalId(String logicalId) {
            this.logicalId = Output.of(Objects.requireNonNull(logicalId));
            return this;
        }        public AssetHierarchyArgs build() {
            return new AssetHierarchyArgs(childAssetId, logicalId);
        }
    }
}
