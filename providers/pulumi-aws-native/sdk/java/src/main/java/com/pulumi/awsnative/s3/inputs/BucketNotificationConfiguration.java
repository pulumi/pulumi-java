// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.inputs.BucketEventBridgeConfiguration;
import com.pulumi.awsnative.s3.inputs.BucketLambdaConfiguration;
import com.pulumi.awsnative.s3.inputs.BucketQueueConfiguration;
import com.pulumi.awsnative.s3.inputs.BucketTopicConfiguration;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the notification configuration for an Amazon S3 bucket.
 * 
 */
public final class BucketNotificationConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final BucketNotificationConfiguration Empty = new BucketNotificationConfiguration();

    @Import(name="eventBridgeConfiguration")
    private @Nullable BucketEventBridgeConfiguration eventBridgeConfiguration;

    public Optional<BucketEventBridgeConfiguration> eventBridgeConfiguration() {
        return Optional.ofNullable(this.eventBridgeConfiguration);
    }

    @Import(name="lambdaConfigurations")
    private @Nullable List<BucketLambdaConfiguration> lambdaConfigurations;

    public Optional<List<BucketLambdaConfiguration>> lambdaConfigurations() {
        return Optional.ofNullable(this.lambdaConfigurations);
    }

    @Import(name="queueConfigurations")
    private @Nullable List<BucketQueueConfiguration> queueConfigurations;

    public Optional<List<BucketQueueConfiguration>> queueConfigurations() {
        return Optional.ofNullable(this.queueConfigurations);
    }

    @Import(name="topicConfigurations")
    private @Nullable List<BucketTopicConfiguration> topicConfigurations;

    public Optional<List<BucketTopicConfiguration>> topicConfigurations() {
        return Optional.ofNullable(this.topicConfigurations);
    }

    private BucketNotificationConfiguration() {}

    private BucketNotificationConfiguration(BucketNotificationConfiguration $) {
        this.eventBridgeConfiguration = $.eventBridgeConfiguration;
        this.lambdaConfigurations = $.lambdaConfigurations;
        this.queueConfigurations = $.queueConfigurations;
        this.topicConfigurations = $.topicConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketNotificationConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketNotificationConfiguration $;

        public Builder() {
            $ = new BucketNotificationConfiguration();
        }

        public Builder(BucketNotificationConfiguration defaults) {
            $ = new BucketNotificationConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder eventBridgeConfiguration(@Nullable BucketEventBridgeConfiguration eventBridgeConfiguration) {
            $.eventBridgeConfiguration = eventBridgeConfiguration;
            return this;
        }

        public Builder lambdaConfigurations(@Nullable List<BucketLambdaConfiguration> lambdaConfigurations) {
            $.lambdaConfigurations = lambdaConfigurations;
            return this;
        }

        public Builder lambdaConfigurations(BucketLambdaConfiguration... lambdaConfigurations) {
            return lambdaConfigurations(List.of(lambdaConfigurations));
        }

        public Builder queueConfigurations(@Nullable List<BucketQueueConfiguration> queueConfigurations) {
            $.queueConfigurations = queueConfigurations;
            return this;
        }

        public Builder queueConfigurations(BucketQueueConfiguration... queueConfigurations) {
            return queueConfigurations(List.of(queueConfigurations));
        }

        public Builder topicConfigurations(@Nullable List<BucketTopicConfiguration> topicConfigurations) {
            $.topicConfigurations = topicConfigurations;
            return this;
        }

        public Builder topicConfigurations(BucketTopicConfiguration... topicConfigurations) {
            return topicConfigurations(List.of(topicConfigurations));
        }

        public BucketNotificationConfiguration build() {
            return $;
        }
    }

}
