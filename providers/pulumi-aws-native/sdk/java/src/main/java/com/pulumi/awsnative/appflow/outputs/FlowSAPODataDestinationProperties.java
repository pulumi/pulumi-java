// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.appflow.outputs;

import com.pulumi.awsnative.appflow.enums.FlowWriteOperationType;
import com.pulumi.awsnative.appflow.outputs.FlowErrorHandlingConfig;
import com.pulumi.awsnative.appflow.outputs.FlowSuccessResponseHandlingConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowSAPODataDestinationProperties {
    private final @Nullable FlowErrorHandlingConfig errorHandlingConfig;
    /**
     * @return List of fields used as ID when performing a write operation.
     * 
     */
    private final @Nullable List<String> idFieldNames;
    private final String objectPath;
    private final @Nullable FlowSuccessResponseHandlingConfig successResponseHandlingConfig;
    private final @Nullable FlowWriteOperationType writeOperationType;

    @CustomType.Constructor
    private FlowSAPODataDestinationProperties(
        @CustomType.Parameter("errorHandlingConfig") @Nullable FlowErrorHandlingConfig errorHandlingConfig,
        @CustomType.Parameter("idFieldNames") @Nullable List<String> idFieldNames,
        @CustomType.Parameter("objectPath") String objectPath,
        @CustomType.Parameter("successResponseHandlingConfig") @Nullable FlowSuccessResponseHandlingConfig successResponseHandlingConfig,
        @CustomType.Parameter("writeOperationType") @Nullable FlowWriteOperationType writeOperationType) {
        this.errorHandlingConfig = errorHandlingConfig;
        this.idFieldNames = idFieldNames;
        this.objectPath = objectPath;
        this.successResponseHandlingConfig = successResponseHandlingConfig;
        this.writeOperationType = writeOperationType;
    }

    public Optional<FlowErrorHandlingConfig> errorHandlingConfig() {
        return Optional.ofNullable(this.errorHandlingConfig);
    }
    /**
     * @return List of fields used as ID when performing a write operation.
     * 
     */
    public List<String> idFieldNames() {
        return this.idFieldNames == null ? List.of() : this.idFieldNames;
    }
    public String objectPath() {
        return this.objectPath;
    }
    public Optional<FlowSuccessResponseHandlingConfig> successResponseHandlingConfig() {
        return Optional.ofNullable(this.successResponseHandlingConfig);
    }
    public Optional<FlowWriteOperationType> writeOperationType() {
        return Optional.ofNullable(this.writeOperationType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowSAPODataDestinationProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable FlowErrorHandlingConfig errorHandlingConfig;
        private @Nullable List<String> idFieldNames;
        private String objectPath;
        private @Nullable FlowSuccessResponseHandlingConfig successResponseHandlingConfig;
        private @Nullable FlowWriteOperationType writeOperationType;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowSAPODataDestinationProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorHandlingConfig = defaults.errorHandlingConfig;
    	      this.idFieldNames = defaults.idFieldNames;
    	      this.objectPath = defaults.objectPath;
    	      this.successResponseHandlingConfig = defaults.successResponseHandlingConfig;
    	      this.writeOperationType = defaults.writeOperationType;
        }

        public Builder errorHandlingConfig(@Nullable FlowErrorHandlingConfig errorHandlingConfig) {
            this.errorHandlingConfig = errorHandlingConfig;
            return this;
        }
        public Builder idFieldNames(@Nullable List<String> idFieldNames) {
            this.idFieldNames = idFieldNames;
            return this;
        }
        public Builder idFieldNames(String... idFieldNames) {
            return idFieldNames(List.of(idFieldNames));
        }
        public Builder objectPath(String objectPath) {
            this.objectPath = Objects.requireNonNull(objectPath);
            return this;
        }
        public Builder successResponseHandlingConfig(@Nullable FlowSuccessResponseHandlingConfig successResponseHandlingConfig) {
            this.successResponseHandlingConfig = successResponseHandlingConfig;
            return this;
        }
        public Builder writeOperationType(@Nullable FlowWriteOperationType writeOperationType) {
            this.writeOperationType = writeOperationType;
            return this;
        }        public FlowSAPODataDestinationProperties build() {
            return new FlowSAPODataDestinationProperties(errorHandlingConfig, idFieldNames, objectPath, successResponseHandlingConfig, writeOperationType);
        }
    }
}
