// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.gamelift.inputs;

import com.pulumi.awsnative.gamelift.inputs.GameServerGroupTargetTrackingConfiguration;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
 * 
 */
public final class GameServerGroupAutoScalingPolicy extends com.pulumi.resources.InvokeArgs {

    public static final GameServerGroupAutoScalingPolicy Empty = new GameServerGroupAutoScalingPolicy();

    @Import(name="estimatedInstanceWarmup")
    private @Nullable Double estimatedInstanceWarmup;

    public Optional<Double> estimatedInstanceWarmup() {
        return Optional.ofNullable(this.estimatedInstanceWarmup);
    }

    @Import(name="targetTrackingConfiguration", required=true)
    private GameServerGroupTargetTrackingConfiguration targetTrackingConfiguration;

    public GameServerGroupTargetTrackingConfiguration targetTrackingConfiguration() {
        return this.targetTrackingConfiguration;
    }

    private GameServerGroupAutoScalingPolicy() {}

    private GameServerGroupAutoScalingPolicy(GameServerGroupAutoScalingPolicy $) {
        this.estimatedInstanceWarmup = $.estimatedInstanceWarmup;
        this.targetTrackingConfiguration = $.targetTrackingConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GameServerGroupAutoScalingPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GameServerGroupAutoScalingPolicy $;

        public Builder() {
            $ = new GameServerGroupAutoScalingPolicy();
        }

        public Builder(GameServerGroupAutoScalingPolicy defaults) {
            $ = new GameServerGroupAutoScalingPolicy(Objects.requireNonNull(defaults));
        }

        public Builder estimatedInstanceWarmup(@Nullable Double estimatedInstanceWarmup) {
            $.estimatedInstanceWarmup = estimatedInstanceWarmup;
            return this;
        }

        public Builder targetTrackingConfiguration(GameServerGroupTargetTrackingConfiguration targetTrackingConfiguration) {
            $.targetTrackingConfiguration = targetTrackingConfiguration;
            return this;
        }

        public GameServerGroupAutoScalingPolicy build() {
            $.targetTrackingConfiguration = Objects.requireNonNull($.targetTrackingConfiguration, "expected parameter 'targetTrackingConfiguration' to be non-null");
            return $;
        }
    }

}
