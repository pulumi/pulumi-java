// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.elasticloadbalancingv2.inputs;

import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleAuthenticateCognitoConfig;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleAuthenticateOidcConfig;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleFixedResponseConfig;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleForwardConfig;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerRuleRedirectConfig;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerRuleAction extends com.pulumi.resources.InvokeArgs {

    public static final ListenerRuleAction Empty = new ListenerRuleAction();

    @Import(name="authenticateCognitoConfig")
    private @Nullable ListenerRuleAuthenticateCognitoConfig authenticateCognitoConfig;

    public Optional<ListenerRuleAuthenticateCognitoConfig> authenticateCognitoConfig() {
        return Optional.ofNullable(this.authenticateCognitoConfig);
    }

    @Import(name="authenticateOidcConfig")
    private @Nullable ListenerRuleAuthenticateOidcConfig authenticateOidcConfig;

    public Optional<ListenerRuleAuthenticateOidcConfig> authenticateOidcConfig() {
        return Optional.ofNullable(this.authenticateOidcConfig);
    }

    @Import(name="fixedResponseConfig")
    private @Nullable ListenerRuleFixedResponseConfig fixedResponseConfig;

    public Optional<ListenerRuleFixedResponseConfig> fixedResponseConfig() {
        return Optional.ofNullable(this.fixedResponseConfig);
    }

    @Import(name="forwardConfig")
    private @Nullable ListenerRuleForwardConfig forwardConfig;

    public Optional<ListenerRuleForwardConfig> forwardConfig() {
        return Optional.ofNullable(this.forwardConfig);
    }

    @Import(name="order")
    private @Nullable Integer order;

    public Optional<Integer> order() {
        return Optional.ofNullable(this.order);
    }

    @Import(name="redirectConfig")
    private @Nullable ListenerRuleRedirectConfig redirectConfig;

    public Optional<ListenerRuleRedirectConfig> redirectConfig() {
        return Optional.ofNullable(this.redirectConfig);
    }

    @Import(name="targetGroupArn")
    private @Nullable String targetGroupArn;

    public Optional<String> targetGroupArn() {
        return Optional.ofNullable(this.targetGroupArn);
    }

    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private ListenerRuleAction() {}

    private ListenerRuleAction(ListenerRuleAction $) {
        this.authenticateCognitoConfig = $.authenticateCognitoConfig;
        this.authenticateOidcConfig = $.authenticateOidcConfig;
        this.fixedResponseConfig = $.fixedResponseConfig;
        this.forwardConfig = $.forwardConfig;
        this.order = $.order;
        this.redirectConfig = $.redirectConfig;
        this.targetGroupArn = $.targetGroupArn;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerRuleAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerRuleAction $;

        public Builder() {
            $ = new ListenerRuleAction();
        }

        public Builder(ListenerRuleAction defaults) {
            $ = new ListenerRuleAction(Objects.requireNonNull(defaults));
        }

        public Builder authenticateCognitoConfig(@Nullable ListenerRuleAuthenticateCognitoConfig authenticateCognitoConfig) {
            $.authenticateCognitoConfig = authenticateCognitoConfig;
            return this;
        }

        public Builder authenticateOidcConfig(@Nullable ListenerRuleAuthenticateOidcConfig authenticateOidcConfig) {
            $.authenticateOidcConfig = authenticateOidcConfig;
            return this;
        }

        public Builder fixedResponseConfig(@Nullable ListenerRuleFixedResponseConfig fixedResponseConfig) {
            $.fixedResponseConfig = fixedResponseConfig;
            return this;
        }

        public Builder forwardConfig(@Nullable ListenerRuleForwardConfig forwardConfig) {
            $.forwardConfig = forwardConfig;
            return this;
        }

        public Builder order(@Nullable Integer order) {
            $.order = order;
            return this;
        }

        public Builder redirectConfig(@Nullable ListenerRuleRedirectConfig redirectConfig) {
            $.redirectConfig = redirectConfig;
            return this;
        }

        public Builder targetGroupArn(@Nullable String targetGroupArn) {
            $.targetGroupArn = targetGroupArn;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public ListenerRuleAction build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
