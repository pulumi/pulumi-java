// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.customerprofiles.inputs;

import com.pulumi.awsnative.customerprofiles.inputs.ObjectTypeKey;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectTypeKeyMap extends com.pulumi.resources.InvokeArgs {

    public static final ObjectTypeKeyMap Empty = new ObjectTypeKeyMap();

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="objectTypeKeyList")
    private @Nullable List<ObjectTypeKey> objectTypeKeyList;

    public Optional<List<ObjectTypeKey>> objectTypeKeyList() {
        return Optional.ofNullable(this.objectTypeKeyList);
    }

    private ObjectTypeKeyMap() {}

    private ObjectTypeKeyMap(ObjectTypeKeyMap $) {
        this.name = $.name;
        this.objectTypeKeyList = $.objectTypeKeyList;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectTypeKeyMap defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectTypeKeyMap $;

        public Builder() {
            $ = new ObjectTypeKeyMap();
        }

        public Builder(ObjectTypeKeyMap defaults) {
            $ = new ObjectTypeKeyMap(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder objectTypeKeyList(@Nullable List<ObjectTypeKey> objectTypeKeyList) {
            $.objectTypeKeyList = objectTypeKeyList;
            return this;
        }

        public Builder objectTypeKeyList(ObjectTypeKey... objectTypeKeyList) {
            return objectTypeKeyList(List.of(objectTypeKeyList));
        }

        public ObjectTypeKeyMap build() {
            return $;
        }
    }

}
