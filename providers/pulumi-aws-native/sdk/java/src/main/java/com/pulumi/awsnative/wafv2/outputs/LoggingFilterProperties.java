// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2.outputs;

import com.pulumi.awsnative.wafv2.enums.LoggingConfigurationLoggingFilterPropertiesDefaultBehavior;
import com.pulumi.awsnative.wafv2.outputs.LoggingConfigurationFilter;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;

@CustomType
public final class LoggingFilterProperties {
    /**
     * Default handling for logs that don&#39;t match any of the specified filtering conditions.
     * 
     */
    private final LoggingConfigurationLoggingFilterPropertiesDefaultBehavior defaultBehavior;
    /**
     * The filters that you want to apply to the logs.
     * 
     */
    private final List<LoggingConfigurationFilter> filters;

    @CustomType.Constructor
    private LoggingFilterProperties(
        @CustomType.Parameter("defaultBehavior") LoggingConfigurationLoggingFilterPropertiesDefaultBehavior defaultBehavior,
        @CustomType.Parameter("filters") List<LoggingConfigurationFilter> filters) {
        this.defaultBehavior = defaultBehavior;
        this.filters = filters;
    }

    /**
     * Default handling for logs that don&#39;t match any of the specified filtering conditions.
     * 
    */
    public LoggingConfigurationLoggingFilterPropertiesDefaultBehavior defaultBehavior() {
        return this.defaultBehavior;
    }
    /**
     * The filters that you want to apply to the logs.
     * 
    */
    public List<LoggingConfigurationFilter> filters() {
        return this.filters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoggingFilterProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingConfigurationLoggingFilterPropertiesDefaultBehavior defaultBehavior;
        private List<LoggingConfigurationFilter> filters;

        public Builder() {
    	      // Empty
        }

        public Builder(LoggingFilterProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultBehavior = defaults.defaultBehavior;
    	      this.filters = defaults.filters;
        }

        public Builder defaultBehavior(LoggingConfigurationLoggingFilterPropertiesDefaultBehavior defaultBehavior) {
            this.defaultBehavior = Objects.requireNonNull(defaultBehavior);
            return this;
        }
        public Builder filters(List<LoggingConfigurationFilter> filters) {
            this.filters = Objects.requireNonNull(filters);
            return this;
        }
        public Builder filters(LoggingConfigurationFilter... filters) {
            return filters(List.of(filters));
        }        public LoggingFilterProperties build() {
            return new LoggingFilterProperties(defaultBehavior, filters);
        }
    }
}
