// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rds.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DBProxyTargetGroupConnectionPoolConfigurationInfoFormat {
    /**
     * @return The number of seconds for a proxy to wait for a connection to become available in the connection pool.
     * 
     */
    private final @Nullable Integer connectionBorrowTimeout;
    /**
     * @return One or more SQL statements for the proxy to run when opening each new database connection.
     * 
     */
    private final @Nullable String initQuery;
    /**
     * @return The maximum size of the connection pool for each target in a target group.
     * 
     */
    private final @Nullable Integer maxConnectionsPercent;
    /**
     * @return Controls how actively the proxy closes idle database connections in the connection pool.
     * 
     */
    private final @Nullable Integer maxIdleConnectionsPercent;
    /**
     * @return Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
     * 
     */
    private final @Nullable List<String> sessionPinningFilters;

    @CustomType.Constructor
    private DBProxyTargetGroupConnectionPoolConfigurationInfoFormat(
        @CustomType.Parameter("connectionBorrowTimeout") @Nullable Integer connectionBorrowTimeout,
        @CustomType.Parameter("initQuery") @Nullable String initQuery,
        @CustomType.Parameter("maxConnectionsPercent") @Nullable Integer maxConnectionsPercent,
        @CustomType.Parameter("maxIdleConnectionsPercent") @Nullable Integer maxIdleConnectionsPercent,
        @CustomType.Parameter("sessionPinningFilters") @Nullable List<String> sessionPinningFilters) {
        this.connectionBorrowTimeout = connectionBorrowTimeout;
        this.initQuery = initQuery;
        this.maxConnectionsPercent = maxConnectionsPercent;
        this.maxIdleConnectionsPercent = maxIdleConnectionsPercent;
        this.sessionPinningFilters = sessionPinningFilters;
    }

    /**
     * @return The number of seconds for a proxy to wait for a connection to become available in the connection pool.
     * 
     */
    public Optional<Integer> connectionBorrowTimeout() {
        return Optional.ofNullable(this.connectionBorrowTimeout);
    }
    /**
     * @return One or more SQL statements for the proxy to run when opening each new database connection.
     * 
     */
    public Optional<String> initQuery() {
        return Optional.ofNullable(this.initQuery);
    }
    /**
     * @return The maximum size of the connection pool for each target in a target group.
     * 
     */
    public Optional<Integer> maxConnectionsPercent() {
        return Optional.ofNullable(this.maxConnectionsPercent);
    }
    /**
     * @return Controls how actively the proxy closes idle database connections in the connection pool.
     * 
     */
    public Optional<Integer> maxIdleConnectionsPercent() {
        return Optional.ofNullable(this.maxIdleConnectionsPercent);
    }
    /**
     * @return Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
     * 
     */
    public List<String> sessionPinningFilters() {
        return this.sessionPinningFilters == null ? List.of() : this.sessionPinningFilters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DBProxyTargetGroupConnectionPoolConfigurationInfoFormat defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer connectionBorrowTimeout;
        private @Nullable String initQuery;
        private @Nullable Integer maxConnectionsPercent;
        private @Nullable Integer maxIdleConnectionsPercent;
        private @Nullable List<String> sessionPinningFilters;

        public Builder() {
    	      // Empty
        }

        public Builder(DBProxyTargetGroupConnectionPoolConfigurationInfoFormat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionBorrowTimeout = defaults.connectionBorrowTimeout;
    	      this.initQuery = defaults.initQuery;
    	      this.maxConnectionsPercent = defaults.maxConnectionsPercent;
    	      this.maxIdleConnectionsPercent = defaults.maxIdleConnectionsPercent;
    	      this.sessionPinningFilters = defaults.sessionPinningFilters;
        }

        public Builder connectionBorrowTimeout(@Nullable Integer connectionBorrowTimeout) {
            this.connectionBorrowTimeout = connectionBorrowTimeout;
            return this;
        }
        public Builder initQuery(@Nullable String initQuery) {
            this.initQuery = initQuery;
            return this;
        }
        public Builder maxConnectionsPercent(@Nullable Integer maxConnectionsPercent) {
            this.maxConnectionsPercent = maxConnectionsPercent;
            return this;
        }
        public Builder maxIdleConnectionsPercent(@Nullable Integer maxIdleConnectionsPercent) {
            this.maxIdleConnectionsPercent = maxIdleConnectionsPercent;
            return this;
        }
        public Builder sessionPinningFilters(@Nullable List<String> sessionPinningFilters) {
            this.sessionPinningFilters = sessionPinningFilters;
            return this;
        }
        public Builder sessionPinningFilters(String... sessionPinningFilters) {
            return sessionPinningFilters(List.of(sessionPinningFilters));
        }        public DBProxyTargetGroupConnectionPoolConfigurationInfoFormat build() {
            return new DBProxyTargetGroupConnectionPoolConfigurationInfoFormat(connectionBorrowTimeout, initQuery, maxConnectionsPercent, maxIdleConnectionsPercent, sessionPinningFilters);
        }
    }
}
