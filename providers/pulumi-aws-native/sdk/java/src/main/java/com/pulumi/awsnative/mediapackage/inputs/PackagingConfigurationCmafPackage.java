// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediapackage.inputs;

import com.pulumi.awsnative.mediapackage.inputs.PackagingConfigurationCmafEncryption;
import com.pulumi.awsnative.mediapackage.inputs.PackagingConfigurationHlsManifest;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A CMAF packaging configuration.
 * 
 */
public final class PackagingConfigurationCmafPackage extends com.pulumi.resources.InvokeArgs {

    public static final PackagingConfigurationCmafPackage Empty = new PackagingConfigurationCmafPackage();

    @Import(name="encryption")
      private final @Nullable PackagingConfigurationCmafEncryption encryption;

    public Optional<PackagingConfigurationCmafEncryption> encryption() {
        return this.encryption == null ? Optional.empty() : Optional.ofNullable(this.encryption);
    }

    /**
     * A list of HLS manifest configurations.
     * 
     */
    @Import(name="hlsManifests", required=true)
      private final List<PackagingConfigurationHlsManifest> hlsManifests;

    public List<PackagingConfigurationHlsManifest> hlsManifests() {
        return this.hlsManifests;
    }

    /**
     * When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder&#39;s Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
     * 
     */
    @Import(name="includeEncoderConfigurationInSegments")
      private final @Nullable Boolean includeEncoderConfigurationInSegments;

    public Optional<Boolean> includeEncoderConfigurationInSegments() {
        return this.includeEncoderConfigurationInSegments == null ? Optional.empty() : Optional.ofNullable(this.includeEncoderConfigurationInSegments);
    }

    @Import(name="segmentDurationSeconds")
      private final @Nullable Integer segmentDurationSeconds;

    public Optional<Integer> segmentDurationSeconds() {
        return this.segmentDurationSeconds == null ? Optional.empty() : Optional.ofNullable(this.segmentDurationSeconds);
    }

    public PackagingConfigurationCmafPackage(
        @Nullable PackagingConfigurationCmafEncryption encryption,
        List<PackagingConfigurationHlsManifest> hlsManifests,
        @Nullable Boolean includeEncoderConfigurationInSegments,
        @Nullable Integer segmentDurationSeconds) {
        this.encryption = encryption;
        this.hlsManifests = Objects.requireNonNull(hlsManifests, "expected parameter 'hlsManifests' to be non-null");
        this.includeEncoderConfigurationInSegments = includeEncoderConfigurationInSegments;
        this.segmentDurationSeconds = segmentDurationSeconds;
    }

    private PackagingConfigurationCmafPackage() {
        this.encryption = null;
        this.hlsManifests = List.of();
        this.includeEncoderConfigurationInSegments = null;
        this.segmentDurationSeconds = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PackagingConfigurationCmafPackage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable PackagingConfigurationCmafEncryption encryption;
        private List<PackagingConfigurationHlsManifest> hlsManifests;
        private @Nullable Boolean includeEncoderConfigurationInSegments;
        private @Nullable Integer segmentDurationSeconds;

        public Builder() {
    	      // Empty
        }

        public Builder(PackagingConfigurationCmafPackage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryption = defaults.encryption;
    	      this.hlsManifests = defaults.hlsManifests;
    	      this.includeEncoderConfigurationInSegments = defaults.includeEncoderConfigurationInSegments;
    	      this.segmentDurationSeconds = defaults.segmentDurationSeconds;
        }

        public Builder encryption(@Nullable PackagingConfigurationCmafEncryption encryption) {
            this.encryption = encryption;
            return this;
        }
        public Builder hlsManifests(List<PackagingConfigurationHlsManifest> hlsManifests) {
            this.hlsManifests = Objects.requireNonNull(hlsManifests);
            return this;
        }
        public Builder hlsManifests(PackagingConfigurationHlsManifest... hlsManifests) {
            return hlsManifests(List.of(hlsManifests));
        }
        public Builder includeEncoderConfigurationInSegments(@Nullable Boolean includeEncoderConfigurationInSegments) {
            this.includeEncoderConfigurationInSegments = includeEncoderConfigurationInSegments;
            return this;
        }
        public Builder segmentDurationSeconds(@Nullable Integer segmentDurationSeconds) {
            this.segmentDurationSeconds = segmentDurationSeconds;
            return this;
        }        public PackagingConfigurationCmafPackage build() {
            return new PackagingConfigurationCmafPackage(encryption, hlsManifests, includeEncoderConfigurationInSegments, segmentDurationSeconds);
        }
    }
}
