// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediapackage.inputs;

import com.pulumi.awsnative.mediapackage.inputs.PackagingConfigurationCmafEncryption;
import com.pulumi.awsnative.mediapackage.inputs.PackagingConfigurationHlsManifest;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A CMAF packaging configuration.
 * 
 */
public final class PackagingConfigurationCmafPackage extends com.pulumi.resources.InvokeArgs {

    public static final PackagingConfigurationCmafPackage Empty = new PackagingConfigurationCmafPackage();

    @Import(name="encryption")
    private @Nullable PackagingConfigurationCmafEncryption encryption;

    public Optional<PackagingConfigurationCmafEncryption> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * A list of HLS manifest configurations.
     * 
     */
    @Import(name="hlsManifests", required=true)
    private List<PackagingConfigurationHlsManifest> hlsManifests;

    public List<PackagingConfigurationHlsManifest> hlsManifests() {
        return this.hlsManifests;
    }

    /**
     * When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder&#39;s Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
     * 
     */
    @Import(name="includeEncoderConfigurationInSegments")
    private @Nullable Boolean includeEncoderConfigurationInSegments;

    public Optional<Boolean> includeEncoderConfigurationInSegments() {
        return Optional.ofNullable(this.includeEncoderConfigurationInSegments);
    }

    @Import(name="segmentDurationSeconds")
    private @Nullable Integer segmentDurationSeconds;

    public Optional<Integer> segmentDurationSeconds() {
        return Optional.ofNullable(this.segmentDurationSeconds);
    }

    private PackagingConfigurationCmafPackage() {}

    private PackagingConfigurationCmafPackage(PackagingConfigurationCmafPackage $) {
        this.encryption = $.encryption;
        this.hlsManifests = $.hlsManifests;
        this.includeEncoderConfigurationInSegments = $.includeEncoderConfigurationInSegments;
        this.segmentDurationSeconds = $.segmentDurationSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PackagingConfigurationCmafPackage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PackagingConfigurationCmafPackage $;

        public Builder() {
            $ = new PackagingConfigurationCmafPackage();
        }

        public Builder(PackagingConfigurationCmafPackage defaults) {
            $ = new PackagingConfigurationCmafPackage(Objects.requireNonNull(defaults));
        }

        public Builder encryption(@Nullable PackagingConfigurationCmafEncryption encryption) {
            $.encryption = encryption;
            return this;
        }

        public Builder hlsManifests(List<PackagingConfigurationHlsManifest> hlsManifests) {
            $.hlsManifests = hlsManifests;
            return this;
        }

        public Builder hlsManifests(PackagingConfigurationHlsManifest... hlsManifests) {
            return hlsManifests(List.of(hlsManifests));
        }

        public Builder includeEncoderConfigurationInSegments(@Nullable Boolean includeEncoderConfigurationInSegments) {
            $.includeEncoderConfigurationInSegments = includeEncoderConfigurationInSegments;
            return this;
        }

        public Builder segmentDurationSeconds(@Nullable Integer segmentDurationSeconds) {
            $.segmentDurationSeconds = segmentDurationSeconds;
            return this;
        }

        public PackagingConfigurationCmafPackage build() {
            $.hlsManifests = Objects.requireNonNull($.hlsManifests, "expected parameter 'hlsManifests' to be non-null");
            return $;
        }
    }

}
