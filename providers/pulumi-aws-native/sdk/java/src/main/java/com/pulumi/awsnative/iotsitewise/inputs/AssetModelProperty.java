// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise.inputs;

import com.pulumi.awsnative.iotsitewise.enums.AssetModelDataType;
import com.pulumi.awsnative.iotsitewise.enums.AssetModelDataTypeSpec;
import com.pulumi.awsnative.iotsitewise.inputs.AssetModelPropertyType;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Contains information about an asset model property.
 * 
 */
public final class AssetModelProperty extends com.pulumi.resources.InvokeArgs {

    public static final AssetModelProperty Empty = new AssetModelProperty();

    /**
     * The data type of the asset model property.
     * 
     */
    @Import(name="dataType", required=true)
    private AssetModelDataType dataType;

    /**
     * @return The data type of the asset model property.
     * 
     */
    public AssetModelDataType dataType() {
        return this.dataType;
    }

    /**
     * The data type of the structure for this property.
     * 
     */
    @Import(name="dataTypeSpec")
    private @Nullable AssetModelDataTypeSpec dataTypeSpec;

    /**
     * @return The data type of the structure for this property.
     * 
     */
    public Optional<AssetModelDataTypeSpec> dataTypeSpec() {
        return Optional.ofNullable(this.dataTypeSpec);
    }

    /**
     * Customer provided ID for property.
     * 
     */
    @Import(name="logicalId", required=true)
    private String logicalId;

    /**
     * @return Customer provided ID for property.
     * 
     */
    public String logicalId() {
        return this.logicalId;
    }

    /**
     * The name of the asset model property.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the asset model property.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The property type
     * 
     */
    @Import(name="type", required=true)
    private AssetModelPropertyType type;

    /**
     * @return The property type
     * 
     */
    public AssetModelPropertyType type() {
        return this.type;
    }

    /**
     * The unit of the asset model property, such as Newtons or RPM.
     * 
     */
    @Import(name="unit")
    private @Nullable String unit;

    /**
     * @return The unit of the asset model property, such as Newtons or RPM.
     * 
     */
    public Optional<String> unit() {
        return Optional.ofNullable(this.unit);
    }

    private AssetModelProperty() {}

    private AssetModelProperty(AssetModelProperty $) {
        this.dataType = $.dataType;
        this.dataTypeSpec = $.dataTypeSpec;
        this.logicalId = $.logicalId;
        this.name = $.name;
        this.type = $.type;
        this.unit = $.unit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetModelProperty defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetModelProperty $;

        public Builder() {
            $ = new AssetModelProperty();
        }

        public Builder(AssetModelProperty defaults) {
            $ = new AssetModelProperty(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataType The data type of the asset model property.
         * 
         * @return builder
         * 
         */
        public Builder dataType(AssetModelDataType dataType) {
            $.dataType = dataType;
            return this;
        }

        /**
         * @param dataTypeSpec The data type of the structure for this property.
         * 
         * @return builder
         * 
         */
        public Builder dataTypeSpec(@Nullable AssetModelDataTypeSpec dataTypeSpec) {
            $.dataTypeSpec = dataTypeSpec;
            return this;
        }

        /**
         * @param logicalId Customer provided ID for property.
         * 
         * @return builder
         * 
         */
        public Builder logicalId(String logicalId) {
            $.logicalId = logicalId;
            return this;
        }

        /**
         * @param name The name of the asset model property.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param type The property type
         * 
         * @return builder
         * 
         */
        public Builder type(AssetModelPropertyType type) {
            $.type = type;
            return this;
        }

        /**
         * @param unit The unit of the asset model property, such as Newtons or RPM.
         * 
         * @return builder
         * 
         */
        public Builder unit(@Nullable String unit) {
            $.unit = unit;
            return this;
        }

        public AssetModelProperty build() {
            $.dataType = Objects.requireNonNull($.dataType, "expected parameter 'dataType' to be non-null");
            $.logicalId = Objects.requireNonNull($.logicalId, "expected parameter 'logicalId' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
