// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.elasticloadbalancingv2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerRuleAuthenticateOidcConfig extends com.pulumi.resources.InvokeArgs {

    public static final ListenerRuleAuthenticateOidcConfig Empty = new ListenerRuleAuthenticateOidcConfig();

    @Import(name="authenticationRequestExtraParams")
    private @Nullable Object authenticationRequestExtraParams;

    public Optional<Object> authenticationRequestExtraParams() {
        return Optional.ofNullable(this.authenticationRequestExtraParams);
    }

    @Import(name="authorizationEndpoint", required=true)
    private String authorizationEndpoint;

    public String authorizationEndpoint() {
        return this.authorizationEndpoint;
    }

    @Import(name="clientId", required=true)
    private String clientId;

    public String clientId() {
        return this.clientId;
    }

    @Import(name="clientSecret", required=true)
    private String clientSecret;

    public String clientSecret() {
        return this.clientSecret;
    }

    @Import(name="issuer", required=true)
    private String issuer;

    public String issuer() {
        return this.issuer;
    }

    @Import(name="onUnauthenticatedRequest")
    private @Nullable String onUnauthenticatedRequest;

    public Optional<String> onUnauthenticatedRequest() {
        return Optional.ofNullable(this.onUnauthenticatedRequest);
    }

    @Import(name="scope")
    private @Nullable String scope;

    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }

    @Import(name="sessionCookieName")
    private @Nullable String sessionCookieName;

    public Optional<String> sessionCookieName() {
        return Optional.ofNullable(this.sessionCookieName);
    }

    @Import(name="sessionTimeout")
    private @Nullable Integer sessionTimeout;

    public Optional<Integer> sessionTimeout() {
        return Optional.ofNullable(this.sessionTimeout);
    }

    @Import(name="tokenEndpoint", required=true)
    private String tokenEndpoint;

    public String tokenEndpoint() {
        return this.tokenEndpoint;
    }

    @Import(name="useExistingClientSecret")
    private @Nullable Boolean useExistingClientSecret;

    public Optional<Boolean> useExistingClientSecret() {
        return Optional.ofNullable(this.useExistingClientSecret);
    }

    @Import(name="userInfoEndpoint", required=true)
    private String userInfoEndpoint;

    public String userInfoEndpoint() {
        return this.userInfoEndpoint;
    }

    private ListenerRuleAuthenticateOidcConfig() {}

    private ListenerRuleAuthenticateOidcConfig(ListenerRuleAuthenticateOidcConfig $) {
        this.authenticationRequestExtraParams = $.authenticationRequestExtraParams;
        this.authorizationEndpoint = $.authorizationEndpoint;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.issuer = $.issuer;
        this.onUnauthenticatedRequest = $.onUnauthenticatedRequest;
        this.scope = $.scope;
        this.sessionCookieName = $.sessionCookieName;
        this.sessionTimeout = $.sessionTimeout;
        this.tokenEndpoint = $.tokenEndpoint;
        this.useExistingClientSecret = $.useExistingClientSecret;
        this.userInfoEndpoint = $.userInfoEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerRuleAuthenticateOidcConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerRuleAuthenticateOidcConfig $;

        public Builder() {
            $ = new ListenerRuleAuthenticateOidcConfig();
        }

        public Builder(ListenerRuleAuthenticateOidcConfig defaults) {
            $ = new ListenerRuleAuthenticateOidcConfig(Objects.requireNonNull(defaults));
        }

        public Builder authenticationRequestExtraParams(@Nullable Object authenticationRequestExtraParams) {
            $.authenticationRequestExtraParams = authenticationRequestExtraParams;
            return this;
        }

        public Builder authorizationEndpoint(String authorizationEndpoint) {
            $.authorizationEndpoint = authorizationEndpoint;
            return this;
        }

        public Builder clientId(String clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder issuer(String issuer) {
            $.issuer = issuer;
            return this;
        }

        public Builder onUnauthenticatedRequest(@Nullable String onUnauthenticatedRequest) {
            $.onUnauthenticatedRequest = onUnauthenticatedRequest;
            return this;
        }

        public Builder scope(@Nullable String scope) {
            $.scope = scope;
            return this;
        }

        public Builder sessionCookieName(@Nullable String sessionCookieName) {
            $.sessionCookieName = sessionCookieName;
            return this;
        }

        public Builder sessionTimeout(@Nullable Integer sessionTimeout) {
            $.sessionTimeout = sessionTimeout;
            return this;
        }

        public Builder tokenEndpoint(String tokenEndpoint) {
            $.tokenEndpoint = tokenEndpoint;
            return this;
        }

        public Builder useExistingClientSecret(@Nullable Boolean useExistingClientSecret) {
            $.useExistingClientSecret = useExistingClientSecret;
            return this;
        }

        public Builder userInfoEndpoint(String userInfoEndpoint) {
            $.userInfoEndpoint = userInfoEndpoint;
            return this;
        }

        public ListenerRuleAuthenticateOidcConfig build() {
            $.authorizationEndpoint = Objects.requireNonNull($.authorizationEndpoint, "expected parameter 'authorizationEndpoint' to be non-null");
            $.clientId = Objects.requireNonNull($.clientId, "expected parameter 'clientId' to be non-null");
            $.clientSecret = Objects.requireNonNull($.clientSecret, "expected parameter 'clientSecret' to be non-null");
            $.issuer = Objects.requireNonNull($.issuer, "expected parameter 'issuer' to be non-null");
            $.tokenEndpoint = Objects.requireNonNull($.tokenEndpoint, "expected parameter 'tokenEndpoint' to be non-null");
            $.userInfoEndpoint = Objects.requireNonNull($.userInfoEndpoint, "expected parameter 'userInfoEndpoint' to be non-null");
            return $;
        }
    }

}
