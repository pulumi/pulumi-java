// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lex.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
 * 
 */
public final class SentimentAnalysisSettingsProperties extends com.pulumi.resources.InvokeArgs {

    public static final SentimentAnalysisSettingsProperties Empty = new SentimentAnalysisSettingsProperties();

    /**
     * Enable to call Amazon Comprehend for Sentiment natively within Lex
     * 
     */
    @Import(name="detectSentiment", required=true)
      private final Boolean detectSentiment;

    public Boolean detectSentiment() {
        return this.detectSentiment;
    }

    public SentimentAnalysisSettingsProperties(Boolean detectSentiment) {
        this.detectSentiment = Objects.requireNonNull(detectSentiment, "expected parameter 'detectSentiment' to be non-null");
    }

    private SentimentAnalysisSettingsProperties() {
        this.detectSentiment = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SentimentAnalysisSettingsProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean detectSentiment;

        public Builder() {
    	      // Empty
        }

        public Builder(SentimentAnalysisSettingsProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detectSentiment = defaults.detectSentiment;
        }

        public Builder detectSentiment(Boolean detectSentiment) {
            this.detectSentiment = Objects.requireNonNull(detectSentiment);
            return this;
        }        public SentimentAnalysisSettingsProperties build() {
            return new SentimentAnalysisSettingsProperties(detectSentiment);
        }
    }
}
