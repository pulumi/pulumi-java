// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.enums.RulesetThresholdType;
import com.pulumi.awsnative.databrew.enums.RulesetThresholdUnit;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RulesetThreshold extends com.pulumi.resources.InvokeArgs {

    public static final RulesetThreshold Empty = new RulesetThreshold();

    @Import(name="type")
    private @Nullable RulesetThresholdType type;

    public Optional<RulesetThresholdType> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="unit")
    private @Nullable RulesetThresholdUnit unit;

    public Optional<RulesetThresholdUnit> unit() {
        return Optional.ofNullable(this.unit);
    }

    @Import(name="value", required=true)
    private Double value;

    public Double value() {
        return this.value;
    }

    private RulesetThreshold() {}

    private RulesetThreshold(RulesetThreshold $) {
        this.type = $.type;
        this.unit = $.unit;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesetThreshold defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesetThreshold $;

        public Builder() {
            $ = new RulesetThreshold();
        }

        public Builder(RulesetThreshold defaults) {
            $ = new RulesetThreshold(Objects.requireNonNull(defaults));
        }

        public Builder type(@Nullable RulesetThresholdType type) {
            $.type = type;
            return this;
        }

        public Builder unit(@Nullable RulesetThresholdUnit unit) {
            $.unit = unit;
            return this;
        }

        public Builder value(Double value) {
            $.value = value;
            return this;
        }

        public RulesetThreshold build() {
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
