// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MethodResponse {
    /**
     * The resources used for the response's content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
     * 
     */
    private final @Nullable Object responseModels;
    /**
     * Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
     * 
     */
    private final @Nullable Object responseParameters;
    /**
     * The method response's status code, which you map to an IntegrationResponse.
     * 
     */
    private final String statusCode;

    @CustomType.Constructor
    private MethodResponse(
        @CustomType.Parameter("responseModels") @Nullable Object responseModels,
        @CustomType.Parameter("responseParameters") @Nullable Object responseParameters,
        @CustomType.Parameter("statusCode") String statusCode) {
        this.responseModels = responseModels;
        this.responseParameters = responseParameters;
        this.statusCode = statusCode;
    }

    /**
     * The resources used for the response's content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
     * 
    */
    public Optional<Object> responseModels() {
        return Optional.ofNullable(this.responseModels);
    }
    /**
     * Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
     * 
    */
    public Optional<Object> responseParameters() {
        return Optional.ofNullable(this.responseParameters);
    }
    /**
     * The method response's status code, which you map to an IntegrationResponse.
     * 
    */
    public String statusCode() {
        return this.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MethodResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Object responseModels;
        private @Nullable Object responseParameters;
        private String statusCode;

        public Builder() {
    	      // Empty
        }

        public Builder(MethodResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.responseModels = defaults.responseModels;
    	      this.responseParameters = defaults.responseParameters;
    	      this.statusCode = defaults.statusCode;
        }

        public Builder responseModels(@Nullable Object responseModels) {
            this.responseModels = responseModels;
            return this;
        }
        public Builder responseParameters(@Nullable Object responseParameters) {
            this.responseParameters = responseParameters;
            return this;
        }
        public Builder statusCode(String statusCode) {
            this.statusCode = Objects.requireNonNull(statusCode);
            return this;
        }        public MethodResponse build() {
            return new MethodResponse(responseModels, responseParameters, statusCode);
        }
    }
}
