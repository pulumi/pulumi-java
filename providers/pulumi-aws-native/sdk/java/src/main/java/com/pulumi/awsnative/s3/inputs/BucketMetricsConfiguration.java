// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.inputs.BucketTagFilter;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketMetricsConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final BucketMetricsConfiguration Empty = new BucketMetricsConfiguration();

    @Import(name="accessPointArn")
    private @Nullable String accessPointArn;

    public Optional<String> accessPointArn() {
        return Optional.ofNullable(this.accessPointArn);
    }

    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    @Import(name="prefix")
    private @Nullable String prefix;

    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="tagFilters")
    private @Nullable List<BucketTagFilter> tagFilters;

    public Optional<List<BucketTagFilter>> tagFilters() {
        return Optional.ofNullable(this.tagFilters);
    }

    private BucketMetricsConfiguration() {}

    private BucketMetricsConfiguration(BucketMetricsConfiguration $) {
        this.accessPointArn = $.accessPointArn;
        this.id = $.id;
        this.prefix = $.prefix;
        this.tagFilters = $.tagFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketMetricsConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketMetricsConfiguration $;

        public Builder() {
            $ = new BucketMetricsConfiguration();
        }

        public Builder(BucketMetricsConfiguration defaults) {
            $ = new BucketMetricsConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder accessPointArn(@Nullable String accessPointArn) {
            $.accessPointArn = accessPointArn;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder prefix(@Nullable String prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder tagFilters(@Nullable List<BucketTagFilter> tagFilters) {
            $.tagFilters = tagFilters;
            return this;
        }

        public Builder tagFilters(BucketTagFilter... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }

        public BucketMetricsConfiguration build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
