// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.enums.JobOutputCompressionFormat;
import com.pulumi.awsnative.databrew.enums.JobOutputFormat;
import com.pulumi.awsnative.databrew.inputs.JobOutputFormatOptions;
import com.pulumi.awsnative.databrew.inputs.JobS3Location;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobOutput extends com.pulumi.resources.InvokeArgs {

    public static final JobOutput Empty = new JobOutput();

    @Import(name="compressionFormat")
    private @Nullable JobOutputCompressionFormat compressionFormat;

    public Optional<JobOutputCompressionFormat> compressionFormat() {
        return Optional.ofNullable(this.compressionFormat);
    }

    @Import(name="format")
    private @Nullable JobOutputFormat format;

    public Optional<JobOutputFormat> format() {
        return Optional.ofNullable(this.format);
    }

    @Import(name="formatOptions")
    private @Nullable JobOutputFormatOptions formatOptions;

    public Optional<JobOutputFormatOptions> formatOptions() {
        return Optional.ofNullable(this.formatOptions);
    }

    @Import(name="location", required=true)
    private JobS3Location location;

    public JobS3Location location() {
        return this.location;
    }

    @Import(name="overwrite")
    private @Nullable Boolean overwrite;

    public Optional<Boolean> overwrite() {
        return Optional.ofNullable(this.overwrite);
    }

    @Import(name="partitionColumns")
    private @Nullable List<String> partitionColumns;

    public Optional<List<String>> partitionColumns() {
        return Optional.ofNullable(this.partitionColumns);
    }

    private JobOutput() {}

    private JobOutput(JobOutput $) {
        this.compressionFormat = $.compressionFormat;
        this.format = $.format;
        this.formatOptions = $.formatOptions;
        this.location = $.location;
        this.overwrite = $.overwrite;
        this.partitionColumns = $.partitionColumns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobOutput defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobOutput $;

        public Builder() {
            $ = new JobOutput();
        }

        public Builder(JobOutput defaults) {
            $ = new JobOutput(Objects.requireNonNull(defaults));
        }

        public Builder compressionFormat(@Nullable JobOutputCompressionFormat compressionFormat) {
            $.compressionFormat = compressionFormat;
            return this;
        }

        public Builder format(@Nullable JobOutputFormat format) {
            $.format = format;
            return this;
        }

        public Builder formatOptions(@Nullable JobOutputFormatOptions formatOptions) {
            $.formatOptions = formatOptions;
            return this;
        }

        public Builder location(JobS3Location location) {
            $.location = location;
            return this;
        }

        public Builder overwrite(@Nullable Boolean overwrite) {
            $.overwrite = overwrite;
            return this;
        }

        public Builder partitionColumns(@Nullable List<String> partitionColumns) {
            $.partitionColumns = partitionColumns;
            return this;
        }

        public Builder partitionColumns(String... partitionColumns) {
            return partitionColumns(List.of(partitionColumns));
        }

        public JobOutput build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
