// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.nimblestudio.inputs;

import com.pulumi.awsnative.nimblestudio.inputs.StudioComponentActiveDirectoryConfiguration;
import com.pulumi.awsnative.nimblestudio.inputs.StudioComponentComputeFarmConfiguration;
import com.pulumi.awsnative.nimblestudio.inputs.StudioComponentLicenseServiceConfiguration;
import com.pulumi.awsnative.nimblestudio.inputs.StudioComponentSharedFileSystemConfiguration;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * &lt;p&gt;The configuration of the studio component, based on component type.&lt;/p&gt;
 * 
 */
public final class StudioComponentConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final StudioComponentConfiguration Empty = new StudioComponentConfiguration();

    @Import(name="activeDirectoryConfiguration")
    private @Nullable StudioComponentActiveDirectoryConfiguration activeDirectoryConfiguration;

    public Optional<StudioComponentActiveDirectoryConfiguration> activeDirectoryConfiguration() {
        return Optional.ofNullable(this.activeDirectoryConfiguration);
    }

    @Import(name="computeFarmConfiguration")
    private @Nullable StudioComponentComputeFarmConfiguration computeFarmConfiguration;

    public Optional<StudioComponentComputeFarmConfiguration> computeFarmConfiguration() {
        return Optional.ofNullable(this.computeFarmConfiguration);
    }

    @Import(name="licenseServiceConfiguration")
    private @Nullable StudioComponentLicenseServiceConfiguration licenseServiceConfiguration;

    public Optional<StudioComponentLicenseServiceConfiguration> licenseServiceConfiguration() {
        return Optional.ofNullable(this.licenseServiceConfiguration);
    }

    @Import(name="sharedFileSystemConfiguration")
    private @Nullable StudioComponentSharedFileSystemConfiguration sharedFileSystemConfiguration;

    public Optional<StudioComponentSharedFileSystemConfiguration> sharedFileSystemConfiguration() {
        return Optional.ofNullable(this.sharedFileSystemConfiguration);
    }

    private StudioComponentConfiguration() {}

    private StudioComponentConfiguration(StudioComponentConfiguration $) {
        this.activeDirectoryConfiguration = $.activeDirectoryConfiguration;
        this.computeFarmConfiguration = $.computeFarmConfiguration;
        this.licenseServiceConfiguration = $.licenseServiceConfiguration;
        this.sharedFileSystemConfiguration = $.sharedFileSystemConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StudioComponentConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StudioComponentConfiguration $;

        public Builder() {
            $ = new StudioComponentConfiguration();
        }

        public Builder(StudioComponentConfiguration defaults) {
            $ = new StudioComponentConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder activeDirectoryConfiguration(@Nullable StudioComponentActiveDirectoryConfiguration activeDirectoryConfiguration) {
            $.activeDirectoryConfiguration = activeDirectoryConfiguration;
            return this;
        }

        public Builder computeFarmConfiguration(@Nullable StudioComponentComputeFarmConfiguration computeFarmConfiguration) {
            $.computeFarmConfiguration = computeFarmConfiguration;
            return this;
        }

        public Builder licenseServiceConfiguration(@Nullable StudioComponentLicenseServiceConfiguration licenseServiceConfiguration) {
            $.licenseServiceConfiguration = licenseServiceConfiguration;
            return this;
        }

        public Builder sharedFileSystemConfiguration(@Nullable StudioComponentSharedFileSystemConfiguration sharedFileSystemConfiguration) {
            $.sharedFileSystemConfiguration = sharedFileSystemConfiguration;
            return this;
        }

        public StudioComponentConfiguration build() {
            return $;
        }
    }

}
