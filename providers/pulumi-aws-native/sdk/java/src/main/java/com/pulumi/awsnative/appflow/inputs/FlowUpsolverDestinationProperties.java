// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.appflow.inputs;

import com.pulumi.awsnative.appflow.inputs.FlowUpsolverS3OutputFormatConfig;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowUpsolverDestinationProperties extends com.pulumi.resources.InvokeArgs {

    public static final FlowUpsolverDestinationProperties Empty = new FlowUpsolverDestinationProperties();

    @Import(name="bucketName", required=true)
    private String bucketName;

    public String bucketName() {
        return this.bucketName;
    }

    @Import(name="bucketPrefix")
    private @Nullable String bucketPrefix;

    public Optional<String> bucketPrefix() {
        return Optional.ofNullable(this.bucketPrefix);
    }

    @Import(name="s3OutputFormatConfig", required=true)
    private FlowUpsolverS3OutputFormatConfig s3OutputFormatConfig;

    public FlowUpsolverS3OutputFormatConfig s3OutputFormatConfig() {
        return this.s3OutputFormatConfig;
    }

    private FlowUpsolverDestinationProperties() {}

    private FlowUpsolverDestinationProperties(FlowUpsolverDestinationProperties $) {
        this.bucketName = $.bucketName;
        this.bucketPrefix = $.bucketPrefix;
        this.s3OutputFormatConfig = $.s3OutputFormatConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowUpsolverDestinationProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowUpsolverDestinationProperties $;

        public Builder() {
            $ = new FlowUpsolverDestinationProperties();
        }

        public Builder(FlowUpsolverDestinationProperties defaults) {
            $ = new FlowUpsolverDestinationProperties(Objects.requireNonNull(defaults));
        }

        public Builder bucketName(String bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        public Builder bucketPrefix(@Nullable String bucketPrefix) {
            $.bucketPrefix = bucketPrefix;
            return this;
        }

        public Builder s3OutputFormatConfig(FlowUpsolverS3OutputFormatConfig s3OutputFormatConfig) {
            $.s3OutputFormatConfig = s3OutputFormatConfig;
            return this;
        }

        public FlowUpsolverDestinationProperties build() {
            $.bucketName = Objects.requireNonNull($.bucketName, "expected parameter 'bucketName' to be non-null");
            $.s3OutputFormatConfig = Objects.requireNonNull($.s3OutputFormatConfig, "expected parameter 's3OutputFormatConfig' to be non-null");
            return $;
        }
    }

}
