// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes the Amazon S3 bucket name and location for the grammar that is the source for the slot type.
 * 
 */
public final class BotGrammarSlotTypeSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final BotGrammarSlotTypeSourceArgs Empty = new BotGrammarSlotTypeSourceArgs();

    /**
     * The Amazon KMS key required to decrypt the contents of the grammar, if any.
     * 
     */
    @Import(name="kmsKeyArn")
      private final @Nullable Output<String> kmsKeyArn;

    public Output<String> kmsKeyArn() {
        return this.kmsKeyArn == null ? Codegen.empty() : this.kmsKeyArn;
    }

    /**
     * The name of the S3 bucket that contains the grammar source.
     * 
     */
    @Import(name="s3BucketName", required=true)
      private final Output<String> s3BucketName;

    public Output<String> s3BucketName() {
        return this.s3BucketName;
    }

    /**
     * The path to the grammar in the S3 bucket.
     * 
     */
    @Import(name="s3ObjectKey", required=true)
      private final Output<String> s3ObjectKey;

    public Output<String> s3ObjectKey() {
        return this.s3ObjectKey;
    }

    public BotGrammarSlotTypeSourceArgs(
        @Nullable Output<String> kmsKeyArn,
        Output<String> s3BucketName,
        Output<String> s3ObjectKey) {
        this.kmsKeyArn = kmsKeyArn;
        this.s3BucketName = Objects.requireNonNull(s3BucketName, "expected parameter 's3BucketName' to be non-null");
        this.s3ObjectKey = Objects.requireNonNull(s3ObjectKey, "expected parameter 's3ObjectKey' to be non-null");
    }

    private BotGrammarSlotTypeSourceArgs() {
        this.kmsKeyArn = Codegen.empty();
        this.s3BucketName = Codegen.empty();
        this.s3ObjectKey = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BotGrammarSlotTypeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> kmsKeyArn;
        private Output<String> s3BucketName;
        private Output<String> s3ObjectKey;

        public Builder() {
    	      // Empty
        }

        public Builder(BotGrammarSlotTypeSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.s3BucketName = defaults.s3BucketName;
    	      this.s3ObjectKey = defaults.s3ObjectKey;
        }

        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            this.kmsKeyArn = kmsKeyArn;
            return this;
        }
        public Builder kmsKeyArn(@Nullable String kmsKeyArn) {
            this.kmsKeyArn = Codegen.ofNullable(kmsKeyArn);
            return this;
        }
        public Builder s3BucketName(Output<String> s3BucketName) {
            this.s3BucketName = Objects.requireNonNull(s3BucketName);
            return this;
        }
        public Builder s3BucketName(String s3BucketName) {
            this.s3BucketName = Output.of(Objects.requireNonNull(s3BucketName));
            return this;
        }
        public Builder s3ObjectKey(Output<String> s3ObjectKey) {
            this.s3ObjectKey = Objects.requireNonNull(s3ObjectKey);
            return this;
        }
        public Builder s3ObjectKey(String s3ObjectKey) {
            this.s3ObjectKey = Output.of(Objects.requireNonNull(s3ObjectKey));
            return this;
        }        public BotGrammarSlotTypeSourceArgs build() {
            return new BotGrammarSlotTypeSourceArgs(kmsKeyArn, s3BucketName, s3ObjectKey);
        }
    }
}
