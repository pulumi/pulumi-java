// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.datasync.outputs;

import com.pulumi.awsnative.datasync.enums.TaskStatus;
import com.pulumi.awsnative.datasync.outputs.TaskFilterRule;
import com.pulumi.awsnative.datasync.outputs.TaskOptions;
import com.pulumi.awsnative.datasync.outputs.TaskSchedule;
import com.pulumi.awsnative.datasync.outputs.TaskTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTaskResult {
    /**
     * The ARN of the Amazon CloudWatch log group that is used to monitor and log events in the task.
     * 
     */
    private final @Nullable String cloudWatchLogGroupArn;
    private final @Nullable List<String> destinationNetworkInterfaceArns;
    /**
     * Errors that AWS DataSync encountered during execution of the task. You can use this error code to help troubleshoot issues.
     * 
     */
    private final @Nullable String errorCode;
    /**
     * Detailed description of an error that was encountered during the task execution.
     * 
     */
    private final @Nullable String errorDetail;
    private final @Nullable List<TaskFilterRule> excludes;
    private final @Nullable List<TaskFilterRule> includes;
    /**
     * The name of a task. This value is a text reference that is used to identify the task in the console.
     * 
     */
    private final @Nullable String name;
    private final @Nullable TaskOptions options;
    private final @Nullable TaskSchedule schedule;
    private final @Nullable List<String> sourceNetworkInterfaceArns;
    /**
     * The status of the task that was described.
     * 
     */
    private final @Nullable TaskStatus status;
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    private final @Nullable List<TaskTag> tags;
    /**
     * The ARN of the task.
     * 
     */
    private final @Nullable String taskArn;

    @CustomType.Constructor
    private GetTaskResult(
        @CustomType.Parameter("cloudWatchLogGroupArn") @Nullable String cloudWatchLogGroupArn,
        @CustomType.Parameter("destinationNetworkInterfaceArns") @Nullable List<String> destinationNetworkInterfaceArns,
        @CustomType.Parameter("errorCode") @Nullable String errorCode,
        @CustomType.Parameter("errorDetail") @Nullable String errorDetail,
        @CustomType.Parameter("excludes") @Nullable List<TaskFilterRule> excludes,
        @CustomType.Parameter("includes") @Nullable List<TaskFilterRule> includes,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("options") @Nullable TaskOptions options,
        @CustomType.Parameter("schedule") @Nullable TaskSchedule schedule,
        @CustomType.Parameter("sourceNetworkInterfaceArns") @Nullable List<String> sourceNetworkInterfaceArns,
        @CustomType.Parameter("status") @Nullable TaskStatus status,
        @CustomType.Parameter("tags") @Nullable List<TaskTag> tags,
        @CustomType.Parameter("taskArn") @Nullable String taskArn) {
        this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
        this.destinationNetworkInterfaceArns = destinationNetworkInterfaceArns;
        this.errorCode = errorCode;
        this.errorDetail = errorDetail;
        this.excludes = excludes;
        this.includes = includes;
        this.name = name;
        this.options = options;
        this.schedule = schedule;
        this.sourceNetworkInterfaceArns = sourceNetworkInterfaceArns;
        this.status = status;
        this.tags = tags;
        this.taskArn = taskArn;
    }

    /**
     * The ARN of the Amazon CloudWatch log group that is used to monitor and log events in the task.
     * 
    */
    public Optional<String> cloudWatchLogGroupArn() {
        return Optional.ofNullable(this.cloudWatchLogGroupArn);
    }
    public List<String> destinationNetworkInterfaceArns() {
        return this.destinationNetworkInterfaceArns == null ? List.of() : this.destinationNetworkInterfaceArns;
    }
    /**
     * Errors that AWS DataSync encountered during execution of the task. You can use this error code to help troubleshoot issues.
     * 
    */
    public Optional<String> errorCode() {
        return Optional.ofNullable(this.errorCode);
    }
    /**
     * Detailed description of an error that was encountered during the task execution.
     * 
    */
    public Optional<String> errorDetail() {
        return Optional.ofNullable(this.errorDetail);
    }
    public List<TaskFilterRule> excludes() {
        return this.excludes == null ? List.of() : this.excludes;
    }
    public List<TaskFilterRule> includes() {
        return this.includes == null ? List.of() : this.includes;
    }
    /**
     * The name of a task. This value is a text reference that is used to identify the task in the console.
     * 
    */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<TaskOptions> options() {
        return Optional.ofNullable(this.options);
    }
    public Optional<TaskSchedule> schedule() {
        return Optional.ofNullable(this.schedule);
    }
    public List<String> sourceNetworkInterfaceArns() {
        return this.sourceNetworkInterfaceArns == null ? List.of() : this.sourceNetworkInterfaceArns;
    }
    /**
     * The status of the task that was described.
     * 
    */
    public Optional<TaskStatus> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
    */
    public List<TaskTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * The ARN of the task.
     * 
    */
    public Optional<String> taskArn() {
        return Optional.ofNullable(this.taskArn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTaskResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cloudWatchLogGroupArn;
        private @Nullable List<String> destinationNetworkInterfaceArns;
        private @Nullable String errorCode;
        private @Nullable String errorDetail;
        private @Nullable List<TaskFilterRule> excludes;
        private @Nullable List<TaskFilterRule> includes;
        private @Nullable String name;
        private @Nullable TaskOptions options;
        private @Nullable TaskSchedule schedule;
        private @Nullable List<String> sourceNetworkInterfaceArns;
        private @Nullable TaskStatus status;
        private @Nullable List<TaskTag> tags;
        private @Nullable String taskArn;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTaskResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudWatchLogGroupArn = defaults.cloudWatchLogGroupArn;
    	      this.destinationNetworkInterfaceArns = defaults.destinationNetworkInterfaceArns;
    	      this.errorCode = defaults.errorCode;
    	      this.errorDetail = defaults.errorDetail;
    	      this.excludes = defaults.excludes;
    	      this.includes = defaults.includes;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.schedule = defaults.schedule;
    	      this.sourceNetworkInterfaceArns = defaults.sourceNetworkInterfaceArns;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.taskArn = defaults.taskArn;
        }

        public Builder cloudWatchLogGroupArn(@Nullable String cloudWatchLogGroupArn) {
            this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
            return this;
        }
        public Builder destinationNetworkInterfaceArns(@Nullable List<String> destinationNetworkInterfaceArns) {
            this.destinationNetworkInterfaceArns = destinationNetworkInterfaceArns;
            return this;
        }
        public Builder destinationNetworkInterfaceArns(String... destinationNetworkInterfaceArns) {
            return destinationNetworkInterfaceArns(List.of(destinationNetworkInterfaceArns));
        }
        public Builder errorCode(@Nullable String errorCode) {
            this.errorCode = errorCode;
            return this;
        }
        public Builder errorDetail(@Nullable String errorDetail) {
            this.errorDetail = errorDetail;
            return this;
        }
        public Builder excludes(@Nullable List<TaskFilterRule> excludes) {
            this.excludes = excludes;
            return this;
        }
        public Builder excludes(TaskFilterRule... excludes) {
            return excludes(List.of(excludes));
        }
        public Builder includes(@Nullable List<TaskFilterRule> includes) {
            this.includes = includes;
            return this;
        }
        public Builder includes(TaskFilterRule... includes) {
            return includes(List.of(includes));
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder options(@Nullable TaskOptions options) {
            this.options = options;
            return this;
        }
        public Builder schedule(@Nullable TaskSchedule schedule) {
            this.schedule = schedule;
            return this;
        }
        public Builder sourceNetworkInterfaceArns(@Nullable List<String> sourceNetworkInterfaceArns) {
            this.sourceNetworkInterfaceArns = sourceNetworkInterfaceArns;
            return this;
        }
        public Builder sourceNetworkInterfaceArns(String... sourceNetworkInterfaceArns) {
            return sourceNetworkInterfaceArns(List.of(sourceNetworkInterfaceArns));
        }
        public Builder status(@Nullable TaskStatus status) {
            this.status = status;
            return this;
        }
        public Builder tags(@Nullable List<TaskTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(TaskTag... tags) {
            return tags(List.of(tags));
        }
        public Builder taskArn(@Nullable String taskArn) {
            this.taskArn = taskArn;
            return this;
        }        public GetTaskResult build() {
            return new GetTaskResult(cloudWatchLogGroupArn, destinationNetworkInterfaceArns, errorCode, errorDetail, excludes, includes, name, options, schedule, sourceNetworkInterfaceArns, status, tags, taskArn);
        }
    }
}
