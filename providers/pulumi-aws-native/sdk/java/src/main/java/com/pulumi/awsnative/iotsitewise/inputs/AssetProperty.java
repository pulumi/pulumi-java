// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise.inputs;

import com.pulumi.awsnative.iotsitewise.enums.AssetPropertyNotificationState;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The asset property&#39;s definition, alias, and notification state.
 * 
 */
public final class AssetProperty extends com.pulumi.resources.InvokeArgs {

    public static final AssetProperty Empty = new AssetProperty();

    /**
     * The property alias that identifies the property.
     * 
     */
    @Import(name="alias")
    private @Nullable String alias;

    public Optional<String> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * Customer provided ID for property.
     * 
     */
    @Import(name="logicalId", required=true)
    private String logicalId;

    public String logicalId() {
        return this.logicalId;
    }

    /**
     * The MQTT notification state (ENABLED or DISABLED) for this asset property.
     * 
     */
    @Import(name="notificationState")
    private @Nullable AssetPropertyNotificationState notificationState;

    public Optional<AssetPropertyNotificationState> notificationState() {
        return Optional.ofNullable(this.notificationState);
    }

    private AssetProperty() {}

    private AssetProperty(AssetProperty $) {
        this.alias = $.alias;
        this.logicalId = $.logicalId;
        this.notificationState = $.notificationState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetProperty defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetProperty $;

        public Builder() {
            $ = new AssetProperty();
        }

        public Builder(AssetProperty defaults) {
            $ = new AssetProperty(Objects.requireNonNull(defaults));
        }

        public Builder alias(@Nullable String alias) {
            $.alias = alias;
            return this;
        }

        public Builder logicalId(String logicalId) {
            $.logicalId = logicalId;
            return this;
        }

        public Builder notificationState(@Nullable AssetPropertyNotificationState notificationState) {
            $.notificationState = notificationState;
            return this;
        }

        public AssetProperty build() {
            $.logicalId = Objects.requireNonNull($.logicalId, "expected parameter 'logicalId' to be non-null");
            return $;
        }
    }

}
