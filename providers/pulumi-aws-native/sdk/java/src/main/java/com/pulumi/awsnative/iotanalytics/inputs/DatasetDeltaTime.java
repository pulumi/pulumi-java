// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class DatasetDeltaTime extends com.pulumi.resources.InvokeArgs {

    public static final DatasetDeltaTime Empty = new DatasetDeltaTime();

    @Import(name="offsetSeconds", required=true)
      private final Integer offsetSeconds;

    public Integer offsetSeconds() {
        return this.offsetSeconds;
    }

    @Import(name="timeExpression", required=true)
      private final String timeExpression;

    public String timeExpression() {
        return this.timeExpression;
    }

    public DatasetDeltaTime(
        Integer offsetSeconds,
        String timeExpression) {
        this.offsetSeconds = Objects.requireNonNull(offsetSeconds, "expected parameter 'offsetSeconds' to be non-null");
        this.timeExpression = Objects.requireNonNull(timeExpression, "expected parameter 'timeExpression' to be non-null");
    }

    private DatasetDeltaTime() {
        this.offsetSeconds = null;
        this.timeExpression = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetDeltaTime defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer offsetSeconds;
        private String timeExpression;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetDeltaTime defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.offsetSeconds = defaults.offsetSeconds;
    	      this.timeExpression = defaults.timeExpression;
        }

        public Builder offsetSeconds(Integer offsetSeconds) {
            this.offsetSeconds = Objects.requireNonNull(offsetSeconds);
            return this;
        }
        public Builder timeExpression(String timeExpression) {
            this.timeExpression = Objects.requireNonNull(timeExpression);
            return this;
        }        public DatasetDeltaTime build() {
            return new DatasetDeltaTime(offsetSeconds, timeExpression);
        }
    }
}
