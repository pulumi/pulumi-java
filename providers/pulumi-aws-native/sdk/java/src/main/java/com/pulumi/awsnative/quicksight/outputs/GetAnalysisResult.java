// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.outputs;

import com.pulumi.awsnative.quicksight.outputs.AnalysisError;
import com.pulumi.awsnative.quicksight.outputs.AnalysisResourcePermission;
import com.pulumi.awsnative.quicksight.outputs.AnalysisTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAnalysisResult {
    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the analysis.&lt;/p&gt;
     * 
     */
    private final @Nullable String arn;
    /**
     * @return &lt;p&gt;The time that the analysis was created.&lt;/p&gt;
     * 
     */
    private final @Nullable String createdTime;
    /**
     * @return &lt;p&gt;The ARNs of the datasets of the analysis.&lt;/p&gt;
     * 
     */
    private final @Nullable List<String> dataSetArns;
    /**
     * @return &lt;p&gt;Errors associated with the analysis.&lt;/p&gt;
     * 
     */
    private final @Nullable List<AnalysisError> errors;
    /**
     * @return &lt;p&gt;The descriptive name of the analysis.&lt;/p&gt;
     * 
     */
    private final @Nullable String name;
    /**
     * @return &lt;p&gt;A structure that describes the principals and the resource-level permissions on an
     *             analysis. You can use the &lt;code&gt;Permissions&lt;/code&gt; structure to grant permissions by
     *             providing a list of AWS Identity and Access Management (IAM) action information for each
     *             principal listed by Amazon Resource Name (ARN). &lt;/p&gt;
     * 
     *         &lt;p&gt;To specify no permissions, omit &lt;code&gt;Permissions&lt;/code&gt;.&lt;/p&gt;
     * 
     */
    private final @Nullable List<AnalysisResourcePermission> permissions;
    /**
     * @return &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             analysis.&lt;/p&gt;
     * 
     */
    private final @Nullable List<AnalysisTag> tags;
    /**
     * @return &lt;p&gt;The ARN of the theme of the analysis.&lt;/p&gt;
     * 
     */
    private final @Nullable String themeArn;

    @CustomType.Constructor
    private GetAnalysisResult(
        @CustomType.Parameter("arn") @Nullable String arn,
        @CustomType.Parameter("createdTime") @Nullable String createdTime,
        @CustomType.Parameter("dataSetArns") @Nullable List<String> dataSetArns,
        @CustomType.Parameter("errors") @Nullable List<AnalysisError> errors,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("permissions") @Nullable List<AnalysisResourcePermission> permissions,
        @CustomType.Parameter("tags") @Nullable List<AnalysisTag> tags,
        @CustomType.Parameter("themeArn") @Nullable String themeArn) {
        this.arn = arn;
        this.createdTime = createdTime;
        this.dataSetArns = dataSetArns;
        this.errors = errors;
        this.name = name;
        this.permissions = permissions;
        this.tags = tags;
        this.themeArn = themeArn;
    }

    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the analysis.&lt;/p&gt;
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return &lt;p&gt;The time that the analysis was created.&lt;/p&gt;
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * @return &lt;p&gt;The ARNs of the datasets of the analysis.&lt;/p&gt;
     * 
     */
    public List<String> dataSetArns() {
        return this.dataSetArns == null ? List.of() : this.dataSetArns;
    }
    /**
     * @return &lt;p&gt;Errors associated with the analysis.&lt;/p&gt;
     * 
     */
    public List<AnalysisError> errors() {
        return this.errors == null ? List.of() : this.errors;
    }
    /**
     * @return &lt;p&gt;The descriptive name of the analysis.&lt;/p&gt;
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return &lt;p&gt;A structure that describes the principals and the resource-level permissions on an
     *             analysis. You can use the &lt;code&gt;Permissions&lt;/code&gt; structure to grant permissions by
     *             providing a list of AWS Identity and Access Management (IAM) action information for each
     *             principal listed by Amazon Resource Name (ARN). &lt;/p&gt;
     * 
     *         &lt;p&gt;To specify no permissions, omit &lt;code&gt;Permissions&lt;/code&gt;.&lt;/p&gt;
     * 
     */
    public List<AnalysisResourcePermission> permissions() {
        return this.permissions == null ? List.of() : this.permissions;
    }
    /**
     * @return &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             analysis.&lt;/p&gt;
     * 
     */
    public List<AnalysisTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return &lt;p&gt;The ARN of the theme of the analysis.&lt;/p&gt;
     * 
     */
    public Optional<String> themeArn() {
        return Optional.ofNullable(this.themeArn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAnalysisResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String createdTime;
        private @Nullable List<String> dataSetArns;
        private @Nullable List<AnalysisError> errors;
        private @Nullable String name;
        private @Nullable List<AnalysisResourcePermission> permissions;
        private @Nullable List<AnalysisTag> tags;
        private @Nullable String themeArn;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAnalysisResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.dataSetArns = defaults.dataSetArns;
    	      this.errors = defaults.errors;
    	      this.name = defaults.name;
    	      this.permissions = defaults.permissions;
    	      this.tags = defaults.tags;
    	      this.themeArn = defaults.themeArn;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        public Builder dataSetArns(@Nullable List<String> dataSetArns) {
            this.dataSetArns = dataSetArns;
            return this;
        }
        public Builder dataSetArns(String... dataSetArns) {
            return dataSetArns(List.of(dataSetArns));
        }
        public Builder errors(@Nullable List<AnalysisError> errors) {
            this.errors = errors;
            return this;
        }
        public Builder errors(AnalysisError... errors) {
            return errors(List.of(errors));
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder permissions(@Nullable List<AnalysisResourcePermission> permissions) {
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(AnalysisResourcePermission... permissions) {
            return permissions(List.of(permissions));
        }
        public Builder tags(@Nullable List<AnalysisTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(AnalysisTag... tags) {
            return tags(List.of(tags));
        }
        public Builder themeArn(@Nullable String themeArn) {
            this.themeArn = themeArn;
            return this;
        }        public GetAnalysisResult build() {
            return new GetAnalysisResult(arn, createdTime, dataSetArns, errors, name, permissions, tags, themeArn);
        }
    }
}
