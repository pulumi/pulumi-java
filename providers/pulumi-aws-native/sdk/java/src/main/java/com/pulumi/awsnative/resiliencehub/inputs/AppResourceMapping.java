// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.resiliencehub.inputs;

import com.pulumi.awsnative.resiliencehub.inputs.AppPhysicalResourceId;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Resource mapping is used to map logical resources from template to physical resource
 * 
 */
public final class AppResourceMapping extends com.pulumi.resources.InvokeArgs {

    public static final AppResourceMapping Empty = new AppResourceMapping();

    @Import(name="logicalStackName")
    private @Nullable String logicalStackName;

    public Optional<String> logicalStackName() {
        return Optional.ofNullable(this.logicalStackName);
    }

    @Import(name="mappingType", required=true)
    private String mappingType;

    public String mappingType() {
        return this.mappingType;
    }

    @Import(name="physicalResourceId", required=true)
    private AppPhysicalResourceId physicalResourceId;

    public AppPhysicalResourceId physicalResourceId() {
        return this.physicalResourceId;
    }

    @Import(name="resourceName")
    private @Nullable String resourceName;

    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    private AppResourceMapping() {}

    private AppResourceMapping(AppResourceMapping $) {
        this.logicalStackName = $.logicalStackName;
        this.mappingType = $.mappingType;
        this.physicalResourceId = $.physicalResourceId;
        this.resourceName = $.resourceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppResourceMapping defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppResourceMapping $;

        public Builder() {
            $ = new AppResourceMapping();
        }

        public Builder(AppResourceMapping defaults) {
            $ = new AppResourceMapping(Objects.requireNonNull(defaults));
        }

        public Builder logicalStackName(@Nullable String logicalStackName) {
            $.logicalStackName = logicalStackName;
            return this;
        }

        public Builder mappingType(String mappingType) {
            $.mappingType = mappingType;
            return this;
        }

        public Builder physicalResourceId(AppPhysicalResourceId physicalResourceId) {
            $.physicalResourceId = physicalResourceId;
            return this;
        }

        public Builder resourceName(@Nullable String resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        public AppResourceMapping build() {
            $.mappingType = Objects.requireNonNull($.mappingType, "expected parameter 'mappingType' to be non-null");
            $.physicalResourceId = Objects.requireNonNull($.physicalResourceId, "expected parameter 'physicalResourceId' to be non-null");
            return $;
        }
    }

}
