// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.frauddetector.inputs;

import com.pulumi.awsnative.frauddetector.enums.DetectorRuleLanguage;
import com.pulumi.awsnative.frauddetector.inputs.DetectorOutcome;
import com.pulumi.awsnative.frauddetector.inputs.DetectorTag;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DetectorRule extends com.pulumi.resources.InvokeArgs {

    public static final DetectorRule Empty = new DetectorRule();

    @Import(name="arn")
    private @Nullable String arn;

    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The time when the event type was created.
     * 
     */
    @Import(name="createdTime")
    private @Nullable String createdTime;

    /**
     * @return The time when the event type was created.
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * The description.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return The description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="detectorId")
    private @Nullable String detectorId;

    public Optional<String> detectorId() {
        return Optional.ofNullable(this.detectorId);
    }

    @Import(name="expression")
    private @Nullable String expression;

    public Optional<String> expression() {
        return Optional.ofNullable(this.expression);
    }

    @Import(name="language")
    private @Nullable DetectorRuleLanguage language;

    public Optional<DetectorRuleLanguage> language() {
        return Optional.ofNullable(this.language);
    }

    /**
     * The time when the event type was last updated.
     * 
     */
    @Import(name="lastUpdatedTime")
    private @Nullable String lastUpdatedTime;

    /**
     * @return The time when the event type was last updated.
     * 
     */
    public Optional<String> lastUpdatedTime() {
        return Optional.ofNullable(this.lastUpdatedTime);
    }

    @Import(name="outcomes")
    private @Nullable List<DetectorOutcome> outcomes;

    public Optional<List<DetectorOutcome>> outcomes() {
        return Optional.ofNullable(this.outcomes);
    }

    @Import(name="ruleId")
    private @Nullable String ruleId;

    public Optional<String> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    @Import(name="ruleVersion")
    private @Nullable String ruleVersion;

    public Optional<String> ruleVersion() {
        return Optional.ofNullable(this.ruleVersion);
    }

    /**
     * Tags associated with this event type.
     * 
     */
    @Import(name="tags")
    private @Nullable List<DetectorTag> tags;

    /**
     * @return Tags associated with this event type.
     * 
     */
    public Optional<List<DetectorTag>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DetectorRule() {}

    private DetectorRule(DetectorRule $) {
        this.arn = $.arn;
        this.createdTime = $.createdTime;
        this.description = $.description;
        this.detectorId = $.detectorId;
        this.expression = $.expression;
        this.language = $.language;
        this.lastUpdatedTime = $.lastUpdatedTime;
        this.outcomes = $.outcomes;
        this.ruleId = $.ruleId;
        this.ruleVersion = $.ruleVersion;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorRule $;

        public Builder() {
            $ = new DetectorRule();
        }

        public Builder(DetectorRule defaults) {
            $ = new DetectorRule(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable String arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param createdTime The time when the event type was created.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(@Nullable String createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        /**
         * @param description The description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder detectorId(@Nullable String detectorId) {
            $.detectorId = detectorId;
            return this;
        }

        public Builder expression(@Nullable String expression) {
            $.expression = expression;
            return this;
        }

        public Builder language(@Nullable DetectorRuleLanguage language) {
            $.language = language;
            return this;
        }

        /**
         * @param lastUpdatedTime The time when the event type was last updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedTime(@Nullable String lastUpdatedTime) {
            $.lastUpdatedTime = lastUpdatedTime;
            return this;
        }

        public Builder outcomes(@Nullable List<DetectorOutcome> outcomes) {
            $.outcomes = outcomes;
            return this;
        }

        public Builder outcomes(DetectorOutcome... outcomes) {
            return outcomes(List.of(outcomes));
        }

        public Builder ruleId(@Nullable String ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        public Builder ruleVersion(@Nullable String ruleVersion) {
            $.ruleVersion = ruleVersion;
            return this;
        }

        /**
         * @param tags Tags associated with this event type.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable List<DetectorTag> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags associated with this event type.
         * 
         * @return builder
         * 
         */
        public Builder tags(DetectorTag... tags) {
            return tags(List.of(tags));
        }

        public DetectorRule build() {
            return $;
        }
    }

}
