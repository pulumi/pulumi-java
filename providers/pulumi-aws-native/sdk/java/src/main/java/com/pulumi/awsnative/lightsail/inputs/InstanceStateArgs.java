// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Current State of the Instance.
 * 
 */
public final class InstanceStateArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceStateArgs Empty = new InstanceStateArgs();

    /**
     * Status code of the Instance.
     * 
     */
    @Import(name="code")
    private @Nullable Output<Integer> code;

    public Optional<Output<Integer>> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * Status code of the Instance.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private InstanceStateArgs() {}

    private InstanceStateArgs(InstanceStateArgs $) {
        this.code = $.code;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceStateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceStateArgs $;

        public Builder() {
            $ = new InstanceStateArgs();
        }

        public Builder(InstanceStateArgs defaults) {
            $ = new InstanceStateArgs(Objects.requireNonNull(defaults));
        }

        public Builder code(@Nullable Output<Integer> code) {
            $.code = code;
            return this;
        }

        public Builder code(Integer code) {
            return code(Output.of(code));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public InstanceStateArgs build() {
            return $;
        }
    }

}
