// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.datasync;

import com.pulumi.awsnative.datasync.inputs.AgentTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentArgs Empty = new AgentArgs();

    /**
     * Activation key of the Agent.
     * 
     */
    @Import(name="activationKey", required=true)
    private Output<String> activationKey;

    public Output<String> activationKey() {
        return this.activationKey;
    }

    /**
     * The name configured for the agent. Text reference used to identify the agent in the console.
     * 
     */
    @Import(name="agentName")
    private @Nullable Output<String> agentName;

    public Optional<Output<String>> agentName() {
        return Optional.ofNullable(this.agentName);
    }

    /**
     * The ARNs of the security group used to protect your data transfer task subnets.
     * 
     */
    @Import(name="securityGroupArns")
    private @Nullable Output<List<String>> securityGroupArns;

    public Optional<Output<List<String>>> securityGroupArns() {
        return Optional.ofNullable(this.securityGroupArns);
    }

    /**
     * The ARNs of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
     * 
     */
    @Import(name="subnetArns")
    private @Nullable Output<List<String>> subnetArns;

    public Optional<Output<List<String>>> subnetArns() {
        return Optional.ofNullable(this.subnetArns);
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<AgentTagArgs>> tags;

    public Optional<Output<List<AgentTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the VPC endpoint that the agent has access to.
     * 
     */
    @Import(name="vpcEndpointId")
    private @Nullable Output<String> vpcEndpointId;

    public Optional<Output<String>> vpcEndpointId() {
        return Optional.ofNullable(this.vpcEndpointId);
    }

    private AgentArgs() {}

    private AgentArgs(AgentArgs $) {
        this.activationKey = $.activationKey;
        this.agentName = $.agentName;
        this.securityGroupArns = $.securityGroupArns;
        this.subnetArns = $.subnetArns;
        this.tags = $.tags;
        this.vpcEndpointId = $.vpcEndpointId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentArgs $;

        public Builder() {
            $ = new AgentArgs();
        }

        public Builder(AgentArgs defaults) {
            $ = new AgentArgs(Objects.requireNonNull(defaults));
        }

        public Builder activationKey(Output<String> activationKey) {
            $.activationKey = activationKey;
            return this;
        }

        public Builder activationKey(String activationKey) {
            return activationKey(Output.of(activationKey));
        }

        public Builder agentName(@Nullable Output<String> agentName) {
            $.agentName = agentName;
            return this;
        }

        public Builder agentName(String agentName) {
            return agentName(Output.of(agentName));
        }

        public Builder securityGroupArns(@Nullable Output<List<String>> securityGroupArns) {
            $.securityGroupArns = securityGroupArns;
            return this;
        }

        public Builder securityGroupArns(List<String> securityGroupArns) {
            return securityGroupArns(Output.of(securityGroupArns));
        }

        public Builder securityGroupArns(String... securityGroupArns) {
            return securityGroupArns(List.of(securityGroupArns));
        }

        public Builder subnetArns(@Nullable Output<List<String>> subnetArns) {
            $.subnetArns = subnetArns;
            return this;
        }

        public Builder subnetArns(List<String> subnetArns) {
            return subnetArns(Output.of(subnetArns));
        }

        public Builder subnetArns(String... subnetArns) {
            return subnetArns(List.of(subnetArns));
        }

        public Builder tags(@Nullable Output<List<AgentTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<AgentTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(AgentTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder vpcEndpointId(@Nullable Output<String> vpcEndpointId) {
            $.vpcEndpointId = vpcEndpointId;
            return this;
        }

        public Builder vpcEndpointId(String vpcEndpointId) {
            return vpcEndpointId(Output.of(vpcEndpointId));
        }

        public AgentArgs build() {
            $.activationKey = Objects.requireNonNull($.activationKey, "expected parameter 'activationKey' to be non-null");
            return $;
        }
    }

}
