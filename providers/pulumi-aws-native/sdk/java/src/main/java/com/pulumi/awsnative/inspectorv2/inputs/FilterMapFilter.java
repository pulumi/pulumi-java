// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.inspectorv2.inputs;

import com.pulumi.awsnative.inspectorv2.enums.FilterMapComparison;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FilterMapFilter extends com.pulumi.resources.InvokeArgs {

    public static final FilterMapFilter Empty = new FilterMapFilter();

    @Import(name="comparison", required=true)
    private FilterMapComparison comparison;

    public FilterMapComparison comparison() {
        return this.comparison;
    }

    @Import(name="key")
    private @Nullable String key;

    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }

    @Import(name="value")
    private @Nullable String value;

    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    private FilterMapFilter() {}

    private FilterMapFilter(FilterMapFilter $) {
        this.comparison = $.comparison;
        this.key = $.key;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FilterMapFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FilterMapFilter $;

        public Builder() {
            $ = new FilterMapFilter();
        }

        public Builder(FilterMapFilter defaults) {
            $ = new FilterMapFilter(Objects.requireNonNull(defaults));
        }

        public Builder comparison(FilterMapComparison comparison) {
            $.comparison = comparison;
            return this;
        }

        public Builder key(@Nullable String key) {
            $.key = key;
            return this;
        }

        public Builder value(@Nullable String value) {
            $.value = value;
            return this;
        }

        public FilterMapFilter build() {
            $.comparison = Objects.requireNonNull($.comparison, "expected parameter 'comparison' to be non-null");
            return $;
        }
    }

}
