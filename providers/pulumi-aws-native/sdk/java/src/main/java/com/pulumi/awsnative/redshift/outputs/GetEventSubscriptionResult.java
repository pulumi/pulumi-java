// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.redshift.outputs;

import com.pulumi.awsnative.redshift.enums.EventSubscriptionEventCategoriesItem;
import com.pulumi.awsnative.redshift.enums.EventSubscriptionSeverity;
import com.pulumi.awsnative.redshift.enums.EventSubscriptionSourceType;
import com.pulumi.awsnative.redshift.enums.EventSubscriptionStatus;
import com.pulumi.awsnative.redshift.outputs.EventSubscriptionTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEventSubscriptionResult {
    /**
     * @return The name of the Amazon Redshift event notification subscription.
     * 
     */
    private final @Nullable String custSubscriptionId;
    /**
     * @return The AWS account associated with the Amazon Redshift event notification subscription.
     * 
     */
    private final @Nullable String customerAwsId;
    /**
     * @return A boolean value; set to true to activate the subscription, and set to false to create the subscription but not activate it.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * @return Specifies the Amazon Redshift event categories to be published by the event notification subscription.
     * 
     */
    private final @Nullable List<EventSubscriptionEventCategoriesItem> eventCategories;
    /**
     * @return The list of Amazon Redshift event categories specified in the event notification subscription.
     * 
     */
    private final @Nullable List<String> eventCategoriesList;
    /**
     * @return Specifies the Amazon Redshift event severity to be published by the event notification subscription.
     * 
     */
    private final @Nullable EventSubscriptionSeverity severity;
    /**
     * @return The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications.
     * 
     */
    private final @Nullable String snsTopicArn;
    /**
     * @return A list of one or more identifiers of Amazon Redshift source objects.
     * 
     */
    private final @Nullable List<String> sourceIds;
    /**
     * @return A list of the sources that publish events to the Amazon Redshift event notification subscription.
     * 
     */
    private final @Nullable List<String> sourceIdsList;
    /**
     * @return The type of source that will be generating the events.
     * 
     */
    private final @Nullable EventSubscriptionSourceType sourceType;
    /**
     * @return The status of the Amazon Redshift event notification subscription.
     * 
     */
    private final @Nullable EventSubscriptionStatus status;
    /**
     * @return The date and time the Amazon Redshift event notification subscription was created.
     * 
     */
    private final @Nullable String subscriptionCreationTime;
    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    private final @Nullable List<EventSubscriptionTag> tags;

    @CustomType.Constructor
    private GetEventSubscriptionResult(
        @CustomType.Parameter("custSubscriptionId") @Nullable String custSubscriptionId,
        @CustomType.Parameter("customerAwsId") @Nullable String customerAwsId,
        @CustomType.Parameter("enabled") @Nullable Boolean enabled,
        @CustomType.Parameter("eventCategories") @Nullable List<EventSubscriptionEventCategoriesItem> eventCategories,
        @CustomType.Parameter("eventCategoriesList") @Nullable List<String> eventCategoriesList,
        @CustomType.Parameter("severity") @Nullable EventSubscriptionSeverity severity,
        @CustomType.Parameter("snsTopicArn") @Nullable String snsTopicArn,
        @CustomType.Parameter("sourceIds") @Nullable List<String> sourceIds,
        @CustomType.Parameter("sourceIdsList") @Nullable List<String> sourceIdsList,
        @CustomType.Parameter("sourceType") @Nullable EventSubscriptionSourceType sourceType,
        @CustomType.Parameter("status") @Nullable EventSubscriptionStatus status,
        @CustomType.Parameter("subscriptionCreationTime") @Nullable String subscriptionCreationTime,
        @CustomType.Parameter("tags") @Nullable List<EventSubscriptionTag> tags) {
        this.custSubscriptionId = custSubscriptionId;
        this.customerAwsId = customerAwsId;
        this.enabled = enabled;
        this.eventCategories = eventCategories;
        this.eventCategoriesList = eventCategoriesList;
        this.severity = severity;
        this.snsTopicArn = snsTopicArn;
        this.sourceIds = sourceIds;
        this.sourceIdsList = sourceIdsList;
        this.sourceType = sourceType;
        this.status = status;
        this.subscriptionCreationTime = subscriptionCreationTime;
        this.tags = tags;
    }

    /**
     * @return The name of the Amazon Redshift event notification subscription.
     * 
     */
    public Optional<String> custSubscriptionId() {
        return Optional.ofNullable(this.custSubscriptionId);
    }
    /**
     * @return The AWS account associated with the Amazon Redshift event notification subscription.
     * 
     */
    public Optional<String> customerAwsId() {
        return Optional.ofNullable(this.customerAwsId);
    }
    /**
     * @return A boolean value; set to true to activate the subscription, and set to false to create the subscription but not activate it.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Specifies the Amazon Redshift event categories to be published by the event notification subscription.
     * 
     */
    public List<EventSubscriptionEventCategoriesItem> eventCategories() {
        return this.eventCategories == null ? List.of() : this.eventCategories;
    }
    /**
     * @return The list of Amazon Redshift event categories specified in the event notification subscription.
     * 
     */
    public List<String> eventCategoriesList() {
        return this.eventCategoriesList == null ? List.of() : this.eventCategoriesList;
    }
    /**
     * @return Specifies the Amazon Redshift event severity to be published by the event notification subscription.
     * 
     */
    public Optional<EventSubscriptionSeverity> severity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the Amazon SNS topic used to transmit the event notifications.
     * 
     */
    public Optional<String> snsTopicArn() {
        return Optional.ofNullable(this.snsTopicArn);
    }
    /**
     * @return A list of one or more identifiers of Amazon Redshift source objects.
     * 
     */
    public List<String> sourceIds() {
        return this.sourceIds == null ? List.of() : this.sourceIds;
    }
    /**
     * @return A list of the sources that publish events to the Amazon Redshift event notification subscription.
     * 
     */
    public List<String> sourceIdsList() {
        return this.sourceIdsList == null ? List.of() : this.sourceIdsList;
    }
    /**
     * @return The type of source that will be generating the events.
     * 
     */
    public Optional<EventSubscriptionSourceType> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }
    /**
     * @return The status of the Amazon Redshift event notification subscription.
     * 
     */
    public Optional<EventSubscriptionStatus> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The date and time the Amazon Redshift event notification subscription was created.
     * 
     */
    public Optional<String> subscriptionCreationTime() {
        return Optional.ofNullable(this.subscriptionCreationTime);
    }
    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public List<EventSubscriptionTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventSubscriptionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String custSubscriptionId;
        private @Nullable String customerAwsId;
        private @Nullable Boolean enabled;
        private @Nullable List<EventSubscriptionEventCategoriesItem> eventCategories;
        private @Nullable List<String> eventCategoriesList;
        private @Nullable EventSubscriptionSeverity severity;
        private @Nullable String snsTopicArn;
        private @Nullable List<String> sourceIds;
        private @Nullable List<String> sourceIdsList;
        private @Nullable EventSubscriptionSourceType sourceType;
        private @Nullable EventSubscriptionStatus status;
        private @Nullable String subscriptionCreationTime;
        private @Nullable List<EventSubscriptionTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEventSubscriptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.custSubscriptionId = defaults.custSubscriptionId;
    	      this.customerAwsId = defaults.customerAwsId;
    	      this.enabled = defaults.enabled;
    	      this.eventCategories = defaults.eventCategories;
    	      this.eventCategoriesList = defaults.eventCategoriesList;
    	      this.severity = defaults.severity;
    	      this.snsTopicArn = defaults.snsTopicArn;
    	      this.sourceIds = defaults.sourceIds;
    	      this.sourceIdsList = defaults.sourceIdsList;
    	      this.sourceType = defaults.sourceType;
    	      this.status = defaults.status;
    	      this.subscriptionCreationTime = defaults.subscriptionCreationTime;
    	      this.tags = defaults.tags;
        }

        public Builder custSubscriptionId(@Nullable String custSubscriptionId) {
            this.custSubscriptionId = custSubscriptionId;
            return this;
        }
        public Builder customerAwsId(@Nullable String customerAwsId) {
            this.customerAwsId = customerAwsId;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder eventCategories(@Nullable List<EventSubscriptionEventCategoriesItem> eventCategories) {
            this.eventCategories = eventCategories;
            return this;
        }
        public Builder eventCategories(EventSubscriptionEventCategoriesItem... eventCategories) {
            return eventCategories(List.of(eventCategories));
        }
        public Builder eventCategoriesList(@Nullable List<String> eventCategoriesList) {
            this.eventCategoriesList = eventCategoriesList;
            return this;
        }
        public Builder eventCategoriesList(String... eventCategoriesList) {
            return eventCategoriesList(List.of(eventCategoriesList));
        }
        public Builder severity(@Nullable EventSubscriptionSeverity severity) {
            this.severity = severity;
            return this;
        }
        public Builder snsTopicArn(@Nullable String snsTopicArn) {
            this.snsTopicArn = snsTopicArn;
            return this;
        }
        public Builder sourceIds(@Nullable List<String> sourceIds) {
            this.sourceIds = sourceIds;
            return this;
        }
        public Builder sourceIds(String... sourceIds) {
            return sourceIds(List.of(sourceIds));
        }
        public Builder sourceIdsList(@Nullable List<String> sourceIdsList) {
            this.sourceIdsList = sourceIdsList;
            return this;
        }
        public Builder sourceIdsList(String... sourceIdsList) {
            return sourceIdsList(List.of(sourceIdsList));
        }
        public Builder sourceType(@Nullable EventSubscriptionSourceType sourceType) {
            this.sourceType = sourceType;
            return this;
        }
        public Builder status(@Nullable EventSubscriptionStatus status) {
            this.status = status;
            return this;
        }
        public Builder subscriptionCreationTime(@Nullable String subscriptionCreationTime) {
            this.subscriptionCreationTime = subscriptionCreationTime;
            return this;
        }
        public Builder tags(@Nullable List<EventSubscriptionTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(EventSubscriptionTag... tags) {
            return tags(List.of(tags));
        }        public GetEventSubscriptionResult build() {
            return new GetEventSubscriptionResult(custSubscriptionId, customerAwsId, enabled, eventCategories, eventCategoriesList, severity, snsTopicArn, sourceIds, sourceIdsList, sourceType, status, subscriptionCreationTime, tags);
        }
    }
}
