// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.inputs.RecipeParameterMap;
import com.pulumi.awsnative.databrew.inputs.RecipeParameters;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecipeAction extends com.pulumi.resources.InvokeArgs {

    public static final RecipeAction Empty = new RecipeAction();

    /**
     * Step action operation
     * 
     */
    @Import(name="operation", required=true)
    private String operation;

    public String operation() {
        return this.operation;
    }

    @Import(name="parameters")
    private @Nullable Either<RecipeParameters,RecipeParameterMap> parameters;

    public Optional<Either<RecipeParameters,RecipeParameterMap>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private RecipeAction() {}

    private RecipeAction(RecipeAction $) {
        this.operation = $.operation;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecipeAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecipeAction $;

        public Builder() {
            $ = new RecipeAction();
        }

        public Builder(RecipeAction defaults) {
            $ = new RecipeAction(Objects.requireNonNull(defaults));
        }

        public Builder operation(String operation) {
            $.operation = operation;
            return this;
        }

        public Builder parameters(@Nullable Either<RecipeParameters,RecipeParameterMap> parameters) {
            $.parameters = parameters;
            return this;
        }

        public RecipeAction build() {
            $.operation = Objects.requireNonNull($.operation, "expected parameter 'operation' to be non-null");
            return $;
        }
    }

}
