// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.appflow.inputs;

import com.pulumi.awsnative.appflow.enums.FlowWriteOperationType;
import com.pulumi.awsnative.appflow.inputs.FlowErrorHandlingConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FlowZendeskDestinationPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowZendeskDestinationPropertiesArgs Empty = new FlowZendeskDestinationPropertiesArgs();

    @Import(name="errorHandlingConfig")
      private final @Nullable Output<FlowErrorHandlingConfigArgs> errorHandlingConfig;

    public Output<FlowErrorHandlingConfigArgs> errorHandlingConfig() {
        return this.errorHandlingConfig == null ? Codegen.empty() : this.errorHandlingConfig;
    }

    /**
     * List of fields used as ID when performing a write operation.
     * 
     */
    @Import(name="idFieldNames")
      private final @Nullable Output<List<String>> idFieldNames;

    public Output<List<String>> idFieldNames() {
        return this.idFieldNames == null ? Codegen.empty() : this.idFieldNames;
    }

    @Import(name="object", required=true)
      private final Output<String> object;

    public Output<String> object() {
        return this.object;
    }

    @Import(name="writeOperationType")
      private final @Nullable Output<FlowWriteOperationType> writeOperationType;

    public Output<FlowWriteOperationType> writeOperationType() {
        return this.writeOperationType == null ? Codegen.empty() : this.writeOperationType;
    }

    public FlowZendeskDestinationPropertiesArgs(
        @Nullable Output<FlowErrorHandlingConfigArgs> errorHandlingConfig,
        @Nullable Output<List<String>> idFieldNames,
        Output<String> object,
        @Nullable Output<FlowWriteOperationType> writeOperationType) {
        this.errorHandlingConfig = errorHandlingConfig;
        this.idFieldNames = idFieldNames;
        this.object = Objects.requireNonNull(object, "expected parameter 'object' to be non-null");
        this.writeOperationType = writeOperationType;
    }

    private FlowZendeskDestinationPropertiesArgs() {
        this.errorHandlingConfig = Codegen.empty();
        this.idFieldNames = Codegen.empty();
        this.object = Codegen.empty();
        this.writeOperationType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowZendeskDestinationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<FlowErrorHandlingConfigArgs> errorHandlingConfig;
        private @Nullable Output<List<String>> idFieldNames;
        private Output<String> object;
        private @Nullable Output<FlowWriteOperationType> writeOperationType;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowZendeskDestinationPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorHandlingConfig = defaults.errorHandlingConfig;
    	      this.idFieldNames = defaults.idFieldNames;
    	      this.object = defaults.object;
    	      this.writeOperationType = defaults.writeOperationType;
        }

        public Builder errorHandlingConfig(@Nullable Output<FlowErrorHandlingConfigArgs> errorHandlingConfig) {
            this.errorHandlingConfig = errorHandlingConfig;
            return this;
        }
        public Builder errorHandlingConfig(@Nullable FlowErrorHandlingConfigArgs errorHandlingConfig) {
            this.errorHandlingConfig = Codegen.ofNullable(errorHandlingConfig);
            return this;
        }
        public Builder idFieldNames(@Nullable Output<List<String>> idFieldNames) {
            this.idFieldNames = idFieldNames;
            return this;
        }
        public Builder idFieldNames(@Nullable List<String> idFieldNames) {
            this.idFieldNames = Codegen.ofNullable(idFieldNames);
            return this;
        }
        public Builder idFieldNames(String... idFieldNames) {
            return idFieldNames(List.of(idFieldNames));
        }
        public Builder object(Output<String> object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        public Builder object(String object) {
            this.object = Output.of(Objects.requireNonNull(object));
            return this;
        }
        public Builder writeOperationType(@Nullable Output<FlowWriteOperationType> writeOperationType) {
            this.writeOperationType = writeOperationType;
            return this;
        }
        public Builder writeOperationType(@Nullable FlowWriteOperationType writeOperationType) {
            this.writeOperationType = Codegen.ofNullable(writeOperationType);
            return this;
        }        public FlowZendeskDestinationPropertiesArgs build() {
            return new FlowZendeskDestinationPropertiesArgs(errorHandlingConfig, idFieldNames, object, writeOperationType);
        }
    }
}
