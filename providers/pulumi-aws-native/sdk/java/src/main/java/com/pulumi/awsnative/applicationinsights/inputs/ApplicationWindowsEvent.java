// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.applicationinsights.inputs;

import com.pulumi.awsnative.applicationinsights.enums.ApplicationEventLevel;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A Windows Event to be monitored for the component.
 * 
 */
public final class ApplicationWindowsEvent extends com.pulumi.resources.InvokeArgs {

    public static final ApplicationWindowsEvent Empty = new ApplicationWindowsEvent();

    /**
     * The levels of event to log.
     * 
     */
    @Import(name="eventLevels", required=true)
    private List<ApplicationEventLevel> eventLevels;

    public List<ApplicationEventLevel> eventLevels() {
        return this.eventLevels;
    }

    /**
     * The type of Windows Events to log.
     * 
     */
    @Import(name="eventName", required=true)
    private String eventName;

    public String eventName() {
        return this.eventName;
    }

    /**
     * The CloudWatch log group name to be associated to the monitored log.
     * 
     */
    @Import(name="logGroupName", required=true)
    private String logGroupName;

    public String logGroupName() {
        return this.logGroupName;
    }

    /**
     * The name of the log pattern set.
     * 
     */
    @Import(name="patternSet")
    private @Nullable String patternSet;

    public Optional<String> patternSet() {
        return Optional.ofNullable(this.patternSet);
    }

    private ApplicationWindowsEvent() {}

    private ApplicationWindowsEvent(ApplicationWindowsEvent $) {
        this.eventLevels = $.eventLevels;
        this.eventName = $.eventName;
        this.logGroupName = $.logGroupName;
        this.patternSet = $.patternSet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationWindowsEvent defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationWindowsEvent $;

        public Builder() {
            $ = new ApplicationWindowsEvent();
        }

        public Builder(ApplicationWindowsEvent defaults) {
            $ = new ApplicationWindowsEvent(Objects.requireNonNull(defaults));
        }

        public Builder eventLevels(List<ApplicationEventLevel> eventLevels) {
            $.eventLevels = eventLevels;
            return this;
        }

        public Builder eventLevels(ApplicationEventLevel... eventLevels) {
            return eventLevels(List.of(eventLevels));
        }

        public Builder eventName(String eventName) {
            $.eventName = eventName;
            return this;
        }

        public Builder logGroupName(String logGroupName) {
            $.logGroupName = logGroupName;
            return this;
        }

        public Builder patternSet(@Nullable String patternSet) {
            $.patternSet = patternSet;
            return this;
        }

        public ApplicationWindowsEvent build() {
            $.eventLevels = Objects.requireNonNull($.eventLevels, "expected parameter 'eventLevels' to be non-null");
            $.eventName = Objects.requireNonNull($.eventName, "expected parameter 'eventName' to be non-null");
            $.logGroupName = Objects.requireNonNull($.logGroupName, "expected parameter 'logGroupName' to be non-null");
            return $;
        }
    }

}
