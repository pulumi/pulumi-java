// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot;

import com.pulumi.awsnative.iot.inputs.AccountAuditConfigurationAuditCheckConfigurationsArgs;
import com.pulumi.awsnative.iot.inputs.AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccountAuditConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountAuditConfigurationArgs Empty = new AccountAuditConfigurationArgs();

    /**
     * Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     * 
     */
    @Import(name="accountId", required=true)
      private final Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="auditCheckConfigurations", required=true)
      private final Output<AccountAuditConfigurationAuditCheckConfigurationsArgs> auditCheckConfigurations;

    public Output<AccountAuditConfigurationAuditCheckConfigurationsArgs> auditCheckConfigurations() {
        return this.auditCheckConfigurations;
    }

    @Import(name="auditNotificationTargetConfigurations")
      private final @Nullable Output<AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs> auditNotificationTargetConfigurations;

    public Output<AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs> auditNotificationTargetConfigurations() {
        return this.auditNotificationTargetConfigurations == null ? Codegen.empty() : this.auditNotificationTargetConfigurations;
    }

    /**
     * The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.
     * 
     */
    @Import(name="roleArn", required=true)
      private final Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    public AccountAuditConfigurationArgs(
        Output<String> accountId,
        Output<AccountAuditConfigurationAuditCheckConfigurationsArgs> auditCheckConfigurations,
        @Nullable Output<AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs> auditNotificationTargetConfigurations,
        Output<String> roleArn) {
        this.accountId = Objects.requireNonNull(accountId, "expected parameter 'accountId' to be non-null");
        this.auditCheckConfigurations = Objects.requireNonNull(auditCheckConfigurations, "expected parameter 'auditCheckConfigurations' to be non-null");
        this.auditNotificationTargetConfigurations = auditNotificationTargetConfigurations;
        this.roleArn = Objects.requireNonNull(roleArn, "expected parameter 'roleArn' to be non-null");
    }

    private AccountAuditConfigurationArgs() {
        this.accountId = Codegen.empty();
        this.auditCheckConfigurations = Codegen.empty();
        this.auditNotificationTargetConfigurations = Codegen.empty();
        this.roleArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountAuditConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> accountId;
        private Output<AccountAuditConfigurationAuditCheckConfigurationsArgs> auditCheckConfigurations;
        private @Nullable Output<AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs> auditNotificationTargetConfigurations;
        private Output<String> roleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountAuditConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.auditCheckConfigurations = defaults.auditCheckConfigurations;
    	      this.auditNotificationTargetConfigurations = defaults.auditNotificationTargetConfigurations;
    	      this.roleArn = defaults.roleArn;
        }

        public Builder accountId(Output<String> accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        public Builder accountId(String accountId) {
            this.accountId = Output.of(Objects.requireNonNull(accountId));
            return this;
        }
        public Builder auditCheckConfigurations(Output<AccountAuditConfigurationAuditCheckConfigurationsArgs> auditCheckConfigurations) {
            this.auditCheckConfigurations = Objects.requireNonNull(auditCheckConfigurations);
            return this;
        }
        public Builder auditCheckConfigurations(AccountAuditConfigurationAuditCheckConfigurationsArgs auditCheckConfigurations) {
            this.auditCheckConfigurations = Output.of(Objects.requireNonNull(auditCheckConfigurations));
            return this;
        }
        public Builder auditNotificationTargetConfigurations(@Nullable Output<AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs> auditNotificationTargetConfigurations) {
            this.auditNotificationTargetConfigurations = auditNotificationTargetConfigurations;
            return this;
        }
        public Builder auditNotificationTargetConfigurations(@Nullable AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs auditNotificationTargetConfigurations) {
            this.auditNotificationTargetConfigurations = Codegen.ofNullable(auditNotificationTargetConfigurations);
            return this;
        }
        public Builder roleArn(Output<String> roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        public Builder roleArn(String roleArn) {
            this.roleArn = Output.of(Objects.requireNonNull(roleArn));
            return this;
        }        public AccountAuditConfigurationArgs build() {
            return new AccountAuditConfigurationArgs(accountId, auditCheckConfigurations, auditNotificationTargetConfigurations, roleArn);
        }
    }
}
