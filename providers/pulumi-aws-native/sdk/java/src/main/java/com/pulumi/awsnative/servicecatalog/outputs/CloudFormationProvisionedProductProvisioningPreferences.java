// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.servicecatalog.outputs;

import com.pulumi.awsnative.servicecatalog.enums.CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CloudFormationProvisionedProductProvisioningPreferences {
    private final @Nullable List<String> stackSetAccounts;
    private final @Nullable Integer stackSetFailureToleranceCount;
    private final @Nullable Integer stackSetFailureTolerancePercentage;
    private final @Nullable Integer stackSetMaxConcurrencyCount;
    private final @Nullable Integer stackSetMaxConcurrencyPercentage;
    private final @Nullable CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType stackSetOperationType;
    private final @Nullable List<String> stackSetRegions;

    @CustomType.Constructor
    private CloudFormationProvisionedProductProvisioningPreferences(
        @CustomType.Parameter("stackSetAccounts") @Nullable List<String> stackSetAccounts,
        @CustomType.Parameter("stackSetFailureToleranceCount") @Nullable Integer stackSetFailureToleranceCount,
        @CustomType.Parameter("stackSetFailureTolerancePercentage") @Nullable Integer stackSetFailureTolerancePercentage,
        @CustomType.Parameter("stackSetMaxConcurrencyCount") @Nullable Integer stackSetMaxConcurrencyCount,
        @CustomType.Parameter("stackSetMaxConcurrencyPercentage") @Nullable Integer stackSetMaxConcurrencyPercentage,
        @CustomType.Parameter("stackSetOperationType") @Nullable CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType stackSetOperationType,
        @CustomType.Parameter("stackSetRegions") @Nullable List<String> stackSetRegions) {
        this.stackSetAccounts = stackSetAccounts;
        this.stackSetFailureToleranceCount = stackSetFailureToleranceCount;
        this.stackSetFailureTolerancePercentage = stackSetFailureTolerancePercentage;
        this.stackSetMaxConcurrencyCount = stackSetMaxConcurrencyCount;
        this.stackSetMaxConcurrencyPercentage = stackSetMaxConcurrencyPercentage;
        this.stackSetOperationType = stackSetOperationType;
        this.stackSetRegions = stackSetRegions;
    }

    public List<String> stackSetAccounts() {
        return this.stackSetAccounts == null ? List.of() : this.stackSetAccounts;
    }
    public Optional<Integer> stackSetFailureToleranceCount() {
        return Optional.ofNullable(this.stackSetFailureToleranceCount);
    }
    public Optional<Integer> stackSetFailureTolerancePercentage() {
        return Optional.ofNullable(this.stackSetFailureTolerancePercentage);
    }
    public Optional<Integer> stackSetMaxConcurrencyCount() {
        return Optional.ofNullable(this.stackSetMaxConcurrencyCount);
    }
    public Optional<Integer> stackSetMaxConcurrencyPercentage() {
        return Optional.ofNullable(this.stackSetMaxConcurrencyPercentage);
    }
    public Optional<CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType> stackSetOperationType() {
        return Optional.ofNullable(this.stackSetOperationType);
    }
    public List<String> stackSetRegions() {
        return this.stackSetRegions == null ? List.of() : this.stackSetRegions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudFormationProvisionedProductProvisioningPreferences defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> stackSetAccounts;
        private @Nullable Integer stackSetFailureToleranceCount;
        private @Nullable Integer stackSetFailureTolerancePercentage;
        private @Nullable Integer stackSetMaxConcurrencyCount;
        private @Nullable Integer stackSetMaxConcurrencyPercentage;
        private @Nullable CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType stackSetOperationType;
        private @Nullable List<String> stackSetRegions;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudFormationProvisionedProductProvisioningPreferences defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.stackSetAccounts = defaults.stackSetAccounts;
    	      this.stackSetFailureToleranceCount = defaults.stackSetFailureToleranceCount;
    	      this.stackSetFailureTolerancePercentage = defaults.stackSetFailureTolerancePercentage;
    	      this.stackSetMaxConcurrencyCount = defaults.stackSetMaxConcurrencyCount;
    	      this.stackSetMaxConcurrencyPercentage = defaults.stackSetMaxConcurrencyPercentage;
    	      this.stackSetOperationType = defaults.stackSetOperationType;
    	      this.stackSetRegions = defaults.stackSetRegions;
        }

        public Builder stackSetAccounts(@Nullable List<String> stackSetAccounts) {
            this.stackSetAccounts = stackSetAccounts;
            return this;
        }
        public Builder stackSetAccounts(String... stackSetAccounts) {
            return stackSetAccounts(List.of(stackSetAccounts));
        }
        public Builder stackSetFailureToleranceCount(@Nullable Integer stackSetFailureToleranceCount) {
            this.stackSetFailureToleranceCount = stackSetFailureToleranceCount;
            return this;
        }
        public Builder stackSetFailureTolerancePercentage(@Nullable Integer stackSetFailureTolerancePercentage) {
            this.stackSetFailureTolerancePercentage = stackSetFailureTolerancePercentage;
            return this;
        }
        public Builder stackSetMaxConcurrencyCount(@Nullable Integer stackSetMaxConcurrencyCount) {
            this.stackSetMaxConcurrencyCount = stackSetMaxConcurrencyCount;
            return this;
        }
        public Builder stackSetMaxConcurrencyPercentage(@Nullable Integer stackSetMaxConcurrencyPercentage) {
            this.stackSetMaxConcurrencyPercentage = stackSetMaxConcurrencyPercentage;
            return this;
        }
        public Builder stackSetOperationType(@Nullable CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType stackSetOperationType) {
            this.stackSetOperationType = stackSetOperationType;
            return this;
        }
        public Builder stackSetRegions(@Nullable List<String> stackSetRegions) {
            this.stackSetRegions = stackSetRegions;
            return this;
        }
        public Builder stackSetRegions(String... stackSetRegions) {
            return stackSetRegions(List.of(stackSetRegions));
        }        public CloudFormationProvisionedProductProvisioningPreferences build() {
            return new CloudFormationProvisionedProductProvisioningPreferences(stackSetAccounts, stackSetFailureToleranceCount, stackSetFailureTolerancePercentage, stackSetMaxConcurrencyCount, stackSetMaxConcurrencyPercentage, stackSetOperationType, stackSetRegions);
        }
    }
}
