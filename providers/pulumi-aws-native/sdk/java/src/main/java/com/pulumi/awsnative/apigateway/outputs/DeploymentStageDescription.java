// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.outputs;

import com.pulumi.awsnative.apigateway.outputs.DeploymentAccessLogSetting;
import com.pulumi.awsnative.apigateway.outputs.DeploymentCanarySetting;
import com.pulumi.awsnative.apigateway.outputs.DeploymentMethodSetting;
import com.pulumi.awsnative.apigateway.outputs.DeploymentTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentStageDescription {
    /**
     * @return Specifies settings for logging access in this stage.
     * 
     */
    private final @Nullable DeploymentAccessLogSetting accessLogSetting;
    /**
     * @return Indicates whether cache clustering is enabled for the stage.
     * 
     */
    private final @Nullable Boolean cacheClusterEnabled;
    /**
     * @return The size of the stage&#39;s cache cluster.
     * 
     */
    private final @Nullable String cacheClusterSize;
    /**
     * @return The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
     * 
     */
    private final @Nullable Boolean cacheDataEncrypted;
    /**
     * @return The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
     * 
     */
    private final @Nullable Integer cacheTtlInSeconds;
    /**
     * @return Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
     * 
     */
    private final @Nullable Boolean cachingEnabled;
    /**
     * @return Specifies settings for the canary deployment in this stage.
     * 
     */
    private final @Nullable DeploymentCanarySetting canarySetting;
    /**
     * @return The identifier of the client certificate that API Gateway uses to call your integration endpoints in the stage.
     * 
     */
    private final @Nullable String clientCertificateId;
    /**
     * @return Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
     * 
     */
    private final @Nullable Boolean dataTraceEnabled;
    /**
     * @return A description of the purpose of the stage.
     * 
     */
    private final @Nullable String description;
    /**
     * @return The version identifier of the API documentation snapshot.
     * 
     */
    private final @Nullable String documentationVersion;
    /**
     * @return The logging level for this method. For valid values, see the loggingLevel property of the Stage resource in the Amazon API Gateway API Reference.
     * 
     */
    private final @Nullable String loggingLevel;
    /**
     * @return Configures settings for all of the stage&#39;s methods.
     * 
     */
    private final @Nullable List<DeploymentMethodSetting> methodSettings;
    /**
     * @return Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
     * 
     */
    private final @Nullable Boolean metricsEnabled;
    /**
     * @return An array of arbitrary tags (key-value pairs) to associate with the stage.
     * 
     */
    private final @Nullable List<DeploymentTag> tags;
    /**
     * @return The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    private final @Nullable Integer throttlingBurstLimit;
    /**
     * @return The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    private final @Nullable Double throttlingRateLimit;
    /**
     * @return Specifies whether active tracing with X-ray is enabled for this stage.
     * 
     */
    private final @Nullable Boolean tracingEnabled;
    /**
     * @return A map that defines the stage variables. Variable names must consist of alphanumeric characters, and the values must match the following regular expression: [A-Za-z0-9-._~:/?#&amp;=,]+.
     * 
     */
    private final @Nullable Object variables;

    @CustomType.Constructor
    private DeploymentStageDescription(
        @CustomType.Parameter("accessLogSetting") @Nullable DeploymentAccessLogSetting accessLogSetting,
        @CustomType.Parameter("cacheClusterEnabled") @Nullable Boolean cacheClusterEnabled,
        @CustomType.Parameter("cacheClusterSize") @Nullable String cacheClusterSize,
        @CustomType.Parameter("cacheDataEncrypted") @Nullable Boolean cacheDataEncrypted,
        @CustomType.Parameter("cacheTtlInSeconds") @Nullable Integer cacheTtlInSeconds,
        @CustomType.Parameter("cachingEnabled") @Nullable Boolean cachingEnabled,
        @CustomType.Parameter("canarySetting") @Nullable DeploymentCanarySetting canarySetting,
        @CustomType.Parameter("clientCertificateId") @Nullable String clientCertificateId,
        @CustomType.Parameter("dataTraceEnabled") @Nullable Boolean dataTraceEnabled,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("documentationVersion") @Nullable String documentationVersion,
        @CustomType.Parameter("loggingLevel") @Nullable String loggingLevel,
        @CustomType.Parameter("methodSettings") @Nullable List<DeploymentMethodSetting> methodSettings,
        @CustomType.Parameter("metricsEnabled") @Nullable Boolean metricsEnabled,
        @CustomType.Parameter("tags") @Nullable List<DeploymentTag> tags,
        @CustomType.Parameter("throttlingBurstLimit") @Nullable Integer throttlingBurstLimit,
        @CustomType.Parameter("throttlingRateLimit") @Nullable Double throttlingRateLimit,
        @CustomType.Parameter("tracingEnabled") @Nullable Boolean tracingEnabled,
        @CustomType.Parameter("variables") @Nullable Object variables) {
        this.accessLogSetting = accessLogSetting;
        this.cacheClusterEnabled = cacheClusterEnabled;
        this.cacheClusterSize = cacheClusterSize;
        this.cacheDataEncrypted = cacheDataEncrypted;
        this.cacheTtlInSeconds = cacheTtlInSeconds;
        this.cachingEnabled = cachingEnabled;
        this.canarySetting = canarySetting;
        this.clientCertificateId = clientCertificateId;
        this.dataTraceEnabled = dataTraceEnabled;
        this.description = description;
        this.documentationVersion = documentationVersion;
        this.loggingLevel = loggingLevel;
        this.methodSettings = methodSettings;
        this.metricsEnabled = metricsEnabled;
        this.tags = tags;
        this.throttlingBurstLimit = throttlingBurstLimit;
        this.throttlingRateLimit = throttlingRateLimit;
        this.tracingEnabled = tracingEnabled;
        this.variables = variables;
    }

    /**
     * @return Specifies settings for logging access in this stage.
     * 
     */
    public Optional<DeploymentAccessLogSetting> accessLogSetting() {
        return Optional.ofNullable(this.accessLogSetting);
    }
    /**
     * @return Indicates whether cache clustering is enabled for the stage.
     * 
     */
    public Optional<Boolean> cacheClusterEnabled() {
        return Optional.ofNullable(this.cacheClusterEnabled);
    }
    /**
     * @return The size of the stage&#39;s cache cluster.
     * 
     */
    public Optional<String> cacheClusterSize() {
        return Optional.ofNullable(this.cacheClusterSize);
    }
    /**
     * @return The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
     * 
     */
    public Optional<Boolean> cacheDataEncrypted() {
        return Optional.ofNullable(this.cacheDataEncrypted);
    }
    /**
     * @return The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
     * 
     */
    public Optional<Integer> cacheTtlInSeconds() {
        return Optional.ofNullable(this.cacheTtlInSeconds);
    }
    /**
     * @return Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
     * 
     */
    public Optional<Boolean> cachingEnabled() {
        return Optional.ofNullable(this.cachingEnabled);
    }
    /**
     * @return Specifies settings for the canary deployment in this stage.
     * 
     */
    public Optional<DeploymentCanarySetting> canarySetting() {
        return Optional.ofNullable(this.canarySetting);
    }
    /**
     * @return The identifier of the client certificate that API Gateway uses to call your integration endpoints in the stage.
     * 
     */
    public Optional<String> clientCertificateId() {
        return Optional.ofNullable(this.clientCertificateId);
    }
    /**
     * @return Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
     * 
     */
    public Optional<Boolean> dataTraceEnabled() {
        return Optional.ofNullable(this.dataTraceEnabled);
    }
    /**
     * @return A description of the purpose of the stage.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The version identifier of the API documentation snapshot.
     * 
     */
    public Optional<String> documentationVersion() {
        return Optional.ofNullable(this.documentationVersion);
    }
    /**
     * @return The logging level for this method. For valid values, see the loggingLevel property of the Stage resource in the Amazon API Gateway API Reference.
     * 
     */
    public Optional<String> loggingLevel() {
        return Optional.ofNullable(this.loggingLevel);
    }
    /**
     * @return Configures settings for all of the stage&#39;s methods.
     * 
     */
    public List<DeploymentMethodSetting> methodSettings() {
        return this.methodSettings == null ? List.of() : this.methodSettings;
    }
    /**
     * @return Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
     * 
     */
    public Optional<Boolean> metricsEnabled() {
        return Optional.ofNullable(this.metricsEnabled);
    }
    /**
     * @return An array of arbitrary tags (key-value pairs) to associate with the stage.
     * 
     */
    public List<DeploymentTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    public Optional<Integer> throttlingBurstLimit() {
        return Optional.ofNullable(this.throttlingBurstLimit);
    }
    /**
     * @return The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    public Optional<Double> throttlingRateLimit() {
        return Optional.ofNullable(this.throttlingRateLimit);
    }
    /**
     * @return Specifies whether active tracing with X-ray is enabled for this stage.
     * 
     */
    public Optional<Boolean> tracingEnabled() {
        return Optional.ofNullable(this.tracingEnabled);
    }
    /**
     * @return A map that defines the stage variables. Variable names must consist of alphanumeric characters, and the values must match the following regular expression: [A-Za-z0-9-._~:/?#&amp;=,]+.
     * 
     */
    public Optional<Object> variables() {
        return Optional.ofNullable(this.variables);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentStageDescription defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DeploymentAccessLogSetting accessLogSetting;
        private @Nullable Boolean cacheClusterEnabled;
        private @Nullable String cacheClusterSize;
        private @Nullable Boolean cacheDataEncrypted;
        private @Nullable Integer cacheTtlInSeconds;
        private @Nullable Boolean cachingEnabled;
        private @Nullable DeploymentCanarySetting canarySetting;
        private @Nullable String clientCertificateId;
        private @Nullable Boolean dataTraceEnabled;
        private @Nullable String description;
        private @Nullable String documentationVersion;
        private @Nullable String loggingLevel;
        private @Nullable List<DeploymentMethodSetting> methodSettings;
        private @Nullable Boolean metricsEnabled;
        private @Nullable List<DeploymentTag> tags;
        private @Nullable Integer throttlingBurstLimit;
        private @Nullable Double throttlingRateLimit;
        private @Nullable Boolean tracingEnabled;
        private @Nullable Object variables;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentStageDescription defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLogSetting = defaults.accessLogSetting;
    	      this.cacheClusterEnabled = defaults.cacheClusterEnabled;
    	      this.cacheClusterSize = defaults.cacheClusterSize;
    	      this.cacheDataEncrypted = defaults.cacheDataEncrypted;
    	      this.cacheTtlInSeconds = defaults.cacheTtlInSeconds;
    	      this.cachingEnabled = defaults.cachingEnabled;
    	      this.canarySetting = defaults.canarySetting;
    	      this.clientCertificateId = defaults.clientCertificateId;
    	      this.dataTraceEnabled = defaults.dataTraceEnabled;
    	      this.description = defaults.description;
    	      this.documentationVersion = defaults.documentationVersion;
    	      this.loggingLevel = defaults.loggingLevel;
    	      this.methodSettings = defaults.methodSettings;
    	      this.metricsEnabled = defaults.metricsEnabled;
    	      this.tags = defaults.tags;
    	      this.throttlingBurstLimit = defaults.throttlingBurstLimit;
    	      this.throttlingRateLimit = defaults.throttlingRateLimit;
    	      this.tracingEnabled = defaults.tracingEnabled;
    	      this.variables = defaults.variables;
        }

        public Builder accessLogSetting(@Nullable DeploymentAccessLogSetting accessLogSetting) {
            this.accessLogSetting = accessLogSetting;
            return this;
        }
        public Builder cacheClusterEnabled(@Nullable Boolean cacheClusterEnabled) {
            this.cacheClusterEnabled = cacheClusterEnabled;
            return this;
        }
        public Builder cacheClusterSize(@Nullable String cacheClusterSize) {
            this.cacheClusterSize = cacheClusterSize;
            return this;
        }
        public Builder cacheDataEncrypted(@Nullable Boolean cacheDataEncrypted) {
            this.cacheDataEncrypted = cacheDataEncrypted;
            return this;
        }
        public Builder cacheTtlInSeconds(@Nullable Integer cacheTtlInSeconds) {
            this.cacheTtlInSeconds = cacheTtlInSeconds;
            return this;
        }
        public Builder cachingEnabled(@Nullable Boolean cachingEnabled) {
            this.cachingEnabled = cachingEnabled;
            return this;
        }
        public Builder canarySetting(@Nullable DeploymentCanarySetting canarySetting) {
            this.canarySetting = canarySetting;
            return this;
        }
        public Builder clientCertificateId(@Nullable String clientCertificateId) {
            this.clientCertificateId = clientCertificateId;
            return this;
        }
        public Builder dataTraceEnabled(@Nullable Boolean dataTraceEnabled) {
            this.dataTraceEnabled = dataTraceEnabled;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder documentationVersion(@Nullable String documentationVersion) {
            this.documentationVersion = documentationVersion;
            return this;
        }
        public Builder loggingLevel(@Nullable String loggingLevel) {
            this.loggingLevel = loggingLevel;
            return this;
        }
        public Builder methodSettings(@Nullable List<DeploymentMethodSetting> methodSettings) {
            this.methodSettings = methodSettings;
            return this;
        }
        public Builder methodSettings(DeploymentMethodSetting... methodSettings) {
            return methodSettings(List.of(methodSettings));
        }
        public Builder metricsEnabled(@Nullable Boolean metricsEnabled) {
            this.metricsEnabled = metricsEnabled;
            return this;
        }
        public Builder tags(@Nullable List<DeploymentTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(DeploymentTag... tags) {
            return tags(List.of(tags));
        }
        public Builder throttlingBurstLimit(@Nullable Integer throttlingBurstLimit) {
            this.throttlingBurstLimit = throttlingBurstLimit;
            return this;
        }
        public Builder throttlingRateLimit(@Nullable Double throttlingRateLimit) {
            this.throttlingRateLimit = throttlingRateLimit;
            return this;
        }
        public Builder tracingEnabled(@Nullable Boolean tracingEnabled) {
            this.tracingEnabled = tracingEnabled;
            return this;
        }
        public Builder variables(@Nullable Object variables) {
            this.variables = variables;
            return this;
        }        public DeploymentStageDescription build() {
            return new DeploymentStageDescription(accessLogSetting, cacheClusterEnabled, cacheClusterSize, cacheDataEncrypted, cacheTtlInSeconds, cachingEnabled, canarySetting, clientCertificateId, dataTraceEnabled, description, documentationVersion, loggingLevel, methodSettings, metricsEnabled, tags, throttlingBurstLimit, throttlingRateLimit, tracingEnabled, variables);
        }
    }
}
