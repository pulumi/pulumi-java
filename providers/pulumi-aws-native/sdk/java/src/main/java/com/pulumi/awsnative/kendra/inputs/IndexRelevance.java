// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.inputs;

import com.pulumi.awsnative.kendra.enums.IndexOrder;
import com.pulumi.awsnative.kendra.inputs.IndexValueImportanceItem;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IndexRelevance extends com.pulumi.resources.InvokeArgs {

    public static final IndexRelevance Empty = new IndexRelevance();

    @Import(name="duration")
      private final @Nullable String duration;

    public Optional<String> duration() {
        return this.duration == null ? Optional.empty() : Optional.ofNullable(this.duration);
    }

    @Import(name="freshness")
      private final @Nullable Boolean freshness;

    public Optional<Boolean> freshness() {
        return this.freshness == null ? Optional.empty() : Optional.ofNullable(this.freshness);
    }

    @Import(name="importance")
      private final @Nullable Integer importance;

    public Optional<Integer> importance() {
        return this.importance == null ? Optional.empty() : Optional.ofNullable(this.importance);
    }

    @Import(name="rankOrder")
      private final @Nullable IndexOrder rankOrder;

    public Optional<IndexOrder> rankOrder() {
        return this.rankOrder == null ? Optional.empty() : Optional.ofNullable(this.rankOrder);
    }

    @Import(name="valueImportanceItems")
      private final @Nullable List<IndexValueImportanceItem> valueImportanceItems;

    public List<IndexValueImportanceItem> valueImportanceItems() {
        return this.valueImportanceItems == null ? List.of() : this.valueImportanceItems;
    }

    public IndexRelevance(
        @Nullable String duration,
        @Nullable Boolean freshness,
        @Nullable Integer importance,
        @Nullable IndexOrder rankOrder,
        @Nullable List<IndexValueImportanceItem> valueImportanceItems) {
        this.duration = duration;
        this.freshness = freshness;
        this.importance = importance;
        this.rankOrder = rankOrder;
        this.valueImportanceItems = valueImportanceItems;
    }

    private IndexRelevance() {
        this.duration = null;
        this.freshness = null;
        this.importance = null;
        this.rankOrder = null;
        this.valueImportanceItems = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IndexRelevance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String duration;
        private @Nullable Boolean freshness;
        private @Nullable Integer importance;
        private @Nullable IndexOrder rankOrder;
        private @Nullable List<IndexValueImportanceItem> valueImportanceItems;

        public Builder() {
    	      // Empty
        }

        public Builder(IndexRelevance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.freshness = defaults.freshness;
    	      this.importance = defaults.importance;
    	      this.rankOrder = defaults.rankOrder;
    	      this.valueImportanceItems = defaults.valueImportanceItems;
        }

        public Builder duration(@Nullable String duration) {
            this.duration = duration;
            return this;
        }
        public Builder freshness(@Nullable Boolean freshness) {
            this.freshness = freshness;
            return this;
        }
        public Builder importance(@Nullable Integer importance) {
            this.importance = importance;
            return this;
        }
        public Builder rankOrder(@Nullable IndexOrder rankOrder) {
            this.rankOrder = rankOrder;
            return this;
        }
        public Builder valueImportanceItems(@Nullable List<IndexValueImportanceItem> valueImportanceItems) {
            this.valueImportanceItems = valueImportanceItems;
            return this;
        }
        public Builder valueImportanceItems(IndexValueImportanceItem... valueImportanceItems) {
            return valueImportanceItems(List.of(valueImportanceItems));
        }        public IndexRelevance build() {
            return new IndexRelevance(duration, freshness, importance, rankOrder, valueImportanceItems);
        }
    }
}
