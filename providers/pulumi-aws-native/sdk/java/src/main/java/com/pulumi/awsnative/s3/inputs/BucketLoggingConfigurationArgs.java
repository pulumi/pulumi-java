// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketLoggingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketLoggingConfigurationArgs Empty = new BucketLoggingConfigurationArgs();

    /**
     * The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.
     * 
     */
    @Import(name="destinationBucketName")
      private final @Nullable Output<String> destinationBucketName;

    public Output<String> destinationBucketName() {
        return this.destinationBucketName == null ? Codegen.empty() : this.destinationBucketName;
    }

    @Import(name="logFilePrefix")
      private final @Nullable Output<String> logFilePrefix;

    public Output<String> logFilePrefix() {
        return this.logFilePrefix == null ? Codegen.empty() : this.logFilePrefix;
    }

    public BucketLoggingConfigurationArgs(
        @Nullable Output<String> destinationBucketName,
        @Nullable Output<String> logFilePrefix) {
        this.destinationBucketName = destinationBucketName;
        this.logFilePrefix = logFilePrefix;
    }

    private BucketLoggingConfigurationArgs() {
        this.destinationBucketName = Codegen.empty();
        this.logFilePrefix = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLoggingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> destinationBucketName;
        private @Nullable Output<String> logFilePrefix;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLoggingConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationBucketName = defaults.destinationBucketName;
    	      this.logFilePrefix = defaults.logFilePrefix;
        }

        public Builder destinationBucketName(@Nullable Output<String> destinationBucketName) {
            this.destinationBucketName = destinationBucketName;
            return this;
        }
        public Builder destinationBucketName(@Nullable String destinationBucketName) {
            this.destinationBucketName = Codegen.ofNullable(destinationBucketName);
            return this;
        }
        public Builder logFilePrefix(@Nullable Output<String> logFilePrefix) {
            this.logFilePrefix = logFilePrefix;
            return this;
        }
        public Builder logFilePrefix(@Nullable String logFilePrefix) {
            this.logFilePrefix = Codegen.ofNullable(logFilePrefix);
            return this;
        }        public BucketLoggingConfigurationArgs build() {
            return new BucketLoggingConfigurationArgs(destinationBucketName, logFilePrefix);
        }
    }
}
