// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ivs;

import com.pulumi.awsnative.ivs.inputs.PlaybackKeyPairTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PlaybackKeyPairArgs extends com.pulumi.resources.ResourceArgs {

    public static final PlaybackKeyPairArgs Empty = new PlaybackKeyPairArgs();

    /**
     * An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The public portion of a customer-generated key pair.
     * 
     */
    @Import(name="publicKeyMaterial", required=true)
      private final Output<String> publicKeyMaterial;

    public Output<String> publicKeyMaterial() {
        return this.publicKeyMaterial;
    }

    /**
     * A list of key-value pairs that contain metadata for the asset model.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<List<PlaybackKeyPairTagArgs>> tags;

    public Output<List<PlaybackKeyPairTagArgs>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public PlaybackKeyPairArgs(
        @Nullable Output<String> name,
        Output<String> publicKeyMaterial,
        @Nullable Output<List<PlaybackKeyPairTagArgs>> tags) {
        this.name = name;
        this.publicKeyMaterial = Objects.requireNonNull(publicKeyMaterial, "expected parameter 'publicKeyMaterial' to be non-null");
        this.tags = tags;
    }

    private PlaybackKeyPairArgs() {
        this.name = Codegen.empty();
        this.publicKeyMaterial = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PlaybackKeyPairArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> name;
        private Output<String> publicKeyMaterial;
        private @Nullable Output<List<PlaybackKeyPairTagArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(PlaybackKeyPairArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.publicKeyMaterial = defaults.publicKeyMaterial;
    	      this.tags = defaults.tags;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder publicKeyMaterial(Output<String> publicKeyMaterial) {
            this.publicKeyMaterial = Objects.requireNonNull(publicKeyMaterial);
            return this;
        }
        public Builder publicKeyMaterial(String publicKeyMaterial) {
            this.publicKeyMaterial = Output.of(Objects.requireNonNull(publicKeyMaterial));
            return this;
        }
        public Builder tags(@Nullable Output<List<PlaybackKeyPairTagArgs>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable List<PlaybackKeyPairTagArgs> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tags(PlaybackKeyPairTagArgs... tags) {
            return tags(List.of(tags));
        }        public PlaybackKeyPairArgs build() {
            return new PlaybackKeyPairArgs(name, publicKeyMaterial, tags);
        }
    }
}
