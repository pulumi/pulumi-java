// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.dynamodb.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalTableTargetTrackingScalingPolicyConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final GlobalTableTargetTrackingScalingPolicyConfiguration Empty = new GlobalTableTargetTrackingScalingPolicyConfiguration();

    @Import(name="disableScaleIn")
    private @Nullable Boolean disableScaleIn;

    public Optional<Boolean> disableScaleIn() {
        return Optional.ofNullable(this.disableScaleIn);
    }

    @Import(name="scaleInCooldown")
    private @Nullable Integer scaleInCooldown;

    public Optional<Integer> scaleInCooldown() {
        return Optional.ofNullable(this.scaleInCooldown);
    }

    @Import(name="scaleOutCooldown")
    private @Nullable Integer scaleOutCooldown;

    public Optional<Integer> scaleOutCooldown() {
        return Optional.ofNullable(this.scaleOutCooldown);
    }

    @Import(name="targetValue", required=true)
    private Double targetValue;

    public Double targetValue() {
        return this.targetValue;
    }

    private GlobalTableTargetTrackingScalingPolicyConfiguration() {}

    private GlobalTableTargetTrackingScalingPolicyConfiguration(GlobalTableTargetTrackingScalingPolicyConfiguration $) {
        this.disableScaleIn = $.disableScaleIn;
        this.scaleInCooldown = $.scaleInCooldown;
        this.scaleOutCooldown = $.scaleOutCooldown;
        this.targetValue = $.targetValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalTableTargetTrackingScalingPolicyConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalTableTargetTrackingScalingPolicyConfiguration $;

        public Builder() {
            $ = new GlobalTableTargetTrackingScalingPolicyConfiguration();
        }

        public Builder(GlobalTableTargetTrackingScalingPolicyConfiguration defaults) {
            $ = new GlobalTableTargetTrackingScalingPolicyConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder disableScaleIn(@Nullable Boolean disableScaleIn) {
            $.disableScaleIn = disableScaleIn;
            return this;
        }

        public Builder scaleInCooldown(@Nullable Integer scaleInCooldown) {
            $.scaleInCooldown = scaleInCooldown;
            return this;
        }

        public Builder scaleOutCooldown(@Nullable Integer scaleOutCooldown) {
            $.scaleOutCooldown = scaleOutCooldown;
            return this;
        }

        public Builder targetValue(Double targetValue) {
            $.targetValue = targetValue;
            return this;
        }

        public GlobalTableTargetTrackingScalingPolicyConfiguration build() {
            $.targetValue = Objects.requireNonNull($.targetValue, "expected parameter 'targetValue' to be non-null");
            return $;
        }
    }

}
