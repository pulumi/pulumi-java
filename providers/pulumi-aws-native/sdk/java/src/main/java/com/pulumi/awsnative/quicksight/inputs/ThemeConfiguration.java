// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.inputs;

import com.pulumi.awsnative.quicksight.inputs.ThemeDataColorPalette;
import com.pulumi.awsnative.quicksight.inputs.ThemeSheetStyle;
import com.pulumi.awsnative.quicksight.inputs.ThemeTypography;
import com.pulumi.awsnative.quicksight.inputs.ThemeUIColorPalette;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * &lt;p&gt;The theme configuration. This configuration contains all of the display properties for
 *             a theme.&lt;/p&gt;
 * 
 */
public final class ThemeConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final ThemeConfiguration Empty = new ThemeConfiguration();

    @Import(name="dataColorPalette")
    private @Nullable ThemeDataColorPalette dataColorPalette;

    public Optional<ThemeDataColorPalette> dataColorPalette() {
        return Optional.ofNullable(this.dataColorPalette);
    }

    @Import(name="sheet")
    private @Nullable ThemeSheetStyle sheet;

    public Optional<ThemeSheetStyle> sheet() {
        return Optional.ofNullable(this.sheet);
    }

    @Import(name="typography")
    private @Nullable ThemeTypography typography;

    public Optional<ThemeTypography> typography() {
        return Optional.ofNullable(this.typography);
    }

    @Import(name="uIColorPalette")
    private @Nullable ThemeUIColorPalette uIColorPalette;

    public Optional<ThemeUIColorPalette> uIColorPalette() {
        return Optional.ofNullable(this.uIColorPalette);
    }

    private ThemeConfiguration() {}

    private ThemeConfiguration(ThemeConfiguration $) {
        this.dataColorPalette = $.dataColorPalette;
        this.sheet = $.sheet;
        this.typography = $.typography;
        this.uIColorPalette = $.uIColorPalette;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThemeConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThemeConfiguration $;

        public Builder() {
            $ = new ThemeConfiguration();
        }

        public Builder(ThemeConfiguration defaults) {
            $ = new ThemeConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder dataColorPalette(@Nullable ThemeDataColorPalette dataColorPalette) {
            $.dataColorPalette = dataColorPalette;
            return this;
        }

        public Builder sheet(@Nullable ThemeSheetStyle sheet) {
            $.sheet = sheet;
            return this;
        }

        public Builder typography(@Nullable ThemeTypography typography) {
            $.typography = typography;
            return this;
        }

        public Builder uIColorPalette(@Nullable ThemeUIColorPalette uIColorPalette) {
            $.uIColorPalette = uIColorPalette;
            return this;
        }

        public ThemeConfiguration build() {
            return $;
        }
    }

}
