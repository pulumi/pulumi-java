// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The patterns to look for in the JSON body. AWS WAF inspects the results of these pattern matches against the rule inspection criteria.
 * 
 */
public final class LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties extends com.pulumi.resources.InvokeArgs {

    public static final LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties Empty = new LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties();

    /**
     * Match all of the elements. See also MatchScope in JsonBody. You must specify either this setting or the IncludedPaths setting, but not both.
     * 
     */
    @Import(name="all")
    private @Nullable Object all;

    /**
     * @return Match all of the elements. See also MatchScope in JsonBody. You must specify either this setting or the IncludedPaths setting, but not both.
     * 
     */
    public Optional<Object> all() {
        return Optional.ofNullable(this.all);
    }

    /**
     * Match only the specified include paths. See also MatchScope in JsonBody.
     * 
     */
    @Import(name="includedPaths")
    private @Nullable List<String> includedPaths;

    /**
     * @return Match only the specified include paths. See also MatchScope in JsonBody.
     * 
     */
    public Optional<List<String>> includedPaths() {
        return Optional.ofNullable(this.includedPaths);
    }

    private LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties() {}

    private LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties $) {
        this.all = $.all;
        this.includedPaths = $.includedPaths;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties $;

        public Builder() {
            $ = new LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties();
        }

        public Builder(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties defaults) {
            $ = new LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties(Objects.requireNonNull(defaults));
        }

        /**
         * @param all Match all of the elements. See also MatchScope in JsonBody. You must specify either this setting or the IncludedPaths setting, but not both.
         * 
         * @return builder
         * 
         */
        public Builder all(@Nullable Object all) {
            $.all = all;
            return this;
        }

        /**
         * @param includedPaths Match only the specified include paths. See also MatchScope in JsonBody.
         * 
         * @return builder
         * 
         */
        public Builder includedPaths(@Nullable List<String> includedPaths) {
            $.includedPaths = includedPaths;
            return this;
        }

        /**
         * @param includedPaths Match only the specified include paths. See also MatchScope in JsonBody.
         * 
         * @return builder
         * 
         */
        public Builder includedPaths(String... includedPaths) {
            return includedPaths(List.of(includedPaths));
        }

        public LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchPatternProperties build() {
            return $;
        }
    }

}
