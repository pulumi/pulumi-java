// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.inputs;

import com.pulumi.awsnative.ecs.inputs.ServiceDeploymentCircuitBreaker;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceDeploymentConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final ServiceDeploymentConfiguration Empty = new ServiceDeploymentConfiguration();

    @Import(name="deploymentCircuitBreaker")
    private @Nullable ServiceDeploymentCircuitBreaker deploymentCircuitBreaker;

    public Optional<ServiceDeploymentCircuitBreaker> deploymentCircuitBreaker() {
        return Optional.ofNullable(this.deploymentCircuitBreaker);
    }

    @Import(name="maximumPercent")
    private @Nullable Integer maximumPercent;

    public Optional<Integer> maximumPercent() {
        return Optional.ofNullable(this.maximumPercent);
    }

    @Import(name="minimumHealthyPercent")
    private @Nullable Integer minimumHealthyPercent;

    public Optional<Integer> minimumHealthyPercent() {
        return Optional.ofNullable(this.minimumHealthyPercent);
    }

    private ServiceDeploymentConfiguration() {}

    private ServiceDeploymentConfiguration(ServiceDeploymentConfiguration $) {
        this.deploymentCircuitBreaker = $.deploymentCircuitBreaker;
        this.maximumPercent = $.maximumPercent;
        this.minimumHealthyPercent = $.minimumHealthyPercent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceDeploymentConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceDeploymentConfiguration $;

        public Builder() {
            $ = new ServiceDeploymentConfiguration();
        }

        public Builder(ServiceDeploymentConfiguration defaults) {
            $ = new ServiceDeploymentConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder deploymentCircuitBreaker(@Nullable ServiceDeploymentCircuitBreaker deploymentCircuitBreaker) {
            $.deploymentCircuitBreaker = deploymentCircuitBreaker;
            return this;
        }

        public Builder maximumPercent(@Nullable Integer maximumPercent) {
            $.maximumPercent = maximumPercent;
            return this;
        }

        public Builder minimumHealthyPercent(@Nullable Integer minimumHealthyPercent) {
            $.minimumHealthyPercent = minimumHealthyPercent;
            return this;
        }

        public ServiceDeploymentConfiguration build() {
            return $;
        }
    }

}
