// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleClusterConfig;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * Identifies the resources to deploy for a monitoring job.
 * 
 */
public final class MonitoringScheduleMonitoringResources extends com.pulumi.resources.InvokeArgs {

    public static final MonitoringScheduleMonitoringResources Empty = new MonitoringScheduleMonitoringResources();

    @Import(name="clusterConfig", required=true)
      private final MonitoringScheduleClusterConfig clusterConfig;

    public MonitoringScheduleClusterConfig clusterConfig() {
        return this.clusterConfig;
    }

    public MonitoringScheduleMonitoringResources(MonitoringScheduleClusterConfig clusterConfig) {
        this.clusterConfig = Objects.requireNonNull(clusterConfig, "expected parameter 'clusterConfig' to be non-null");
    }

    private MonitoringScheduleMonitoringResources() {
        this.clusterConfig = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringScheduleMonitoringResources defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringScheduleClusterConfig clusterConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoringScheduleMonitoringResources defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterConfig = defaults.clusterConfig;
        }

        public Builder clusterConfig(MonitoringScheduleClusterConfig clusterConfig) {
            this.clusterConfig = Objects.requireNonNull(clusterConfig);
            return this;
        }        public MonitoringScheduleMonitoringResources build() {
            return new MonitoringScheduleMonitoringResources(clusterConfig);
        }
    }
}
