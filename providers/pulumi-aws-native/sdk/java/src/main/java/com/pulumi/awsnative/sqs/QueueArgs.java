// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sqs;

import com.pulumi.awsnative.sqs.inputs.QueueTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueueArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueueArgs Empty = new QueueArgs();

    /**
     * For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication. During the deduplication interval, Amazon SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message.
     * 
     */
    @Import(name="contentBasedDeduplication")
    private @Nullable Output<Boolean> contentBasedDeduplication;

    public Optional<Output<Boolean>> contentBasedDeduplication() {
        return Optional.ofNullable(this.contentBasedDeduplication);
    }

    /**
     * Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue.
     * 
     */
    @Import(name="deduplicationScope")
    private @Nullable Output<String> deduplicationScope;

    public Optional<Output<String>> deduplicationScope() {
        return Optional.ofNullable(this.deduplicationScope);
    }

    /**
     * The time in seconds for which the delivery of all messages in the queue is delayed. You can specify an integer value of 0 to 900 (15 minutes). The default value is 0.
     * 
     */
    @Import(name="delaySeconds")
    private @Nullable Output<Integer> delaySeconds;

    public Optional<Output<Integer>> delaySeconds() {
        return Optional.ofNullable(this.delaySeconds);
    }

    /**
     * If set to true, creates a FIFO queue. If you don&#39;t specify this property, Amazon SQS creates a standard queue.
     * 
     */
    @Import(name="fifoQueue")
    private @Nullable Output<Boolean> fifoQueue;

    public Optional<Output<Boolean>> fifoQueue() {
        return Optional.ofNullable(this.fifoQueue);
    }

    /**
     * Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue and perMessageGroupId. The perMessageGroupId value is allowed only when the value for DeduplicationScope is messageGroup.
     * 
     */
    @Import(name="fifoThroughputLimit")
    private @Nullable Output<String> fifoThroughputLimit;

    public Optional<Output<String>> fifoThroughputLimit() {
        return Optional.ofNullable(this.fifoThroughputLimit);
    }

    /**
     * The length of time in seconds for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes).
     * 
     */
    @Import(name="kmsDataKeyReusePeriodSeconds")
    private @Nullable Output<Integer> kmsDataKeyReusePeriodSeconds;

    public Optional<Output<Integer>> kmsDataKeyReusePeriodSeconds() {
        return Optional.ofNullable(this.kmsDataKeyReusePeriodSeconds);
    }

    /**
     * The ID of an AWS managed customer master key (CMK) for Amazon SQS or a custom CMK. To use the AWS managed CMK for Amazon SQS, specify the (default) alias alias/aws/sqs.
     * 
     */
    @Import(name="kmsMasterKeyId")
    private @Nullable Output<String> kmsMasterKeyId;

    public Optional<Output<String>> kmsMasterKeyId() {
        return Optional.ofNullable(this.kmsMasterKeyId);
    }

    /**
     * The limit of how many bytes that a message can contain before Amazon SQS rejects it. You can specify an integer value from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). The default value is 262,144 (256 KiB).
     * 
     */
    @Import(name="maximumMessageSize")
    private @Nullable Output<Integer> maximumMessageSize;

    public Optional<Output<Integer>> maximumMessageSize() {
        return Optional.ofNullable(this.maximumMessageSize);
    }

    /**
     * The number of seconds that Amazon SQS retains a message. You can specify an integer value from 60 seconds (1 minute) to 1,209,600 seconds (14 days). The default value is 345,600 seconds (4 days).
     * 
     */
    @Import(name="messageRetentionPeriod")
    private @Nullable Output<Integer> messageRetentionPeriod;

    public Optional<Output<Integer>> messageRetentionPeriod() {
        return Optional.ofNullable(this.messageRetentionPeriod);
    }

    /**
     * A name for the queue. To create a FIFO queue, the name of your FIFO queue must end with the .fifo suffix.
     * 
     */
    @Import(name="queueName")
    private @Nullable Output<String> queueName;

    public Optional<Output<String>> queueName() {
        return Optional.ofNullable(this.queueName);
    }

    /**
     * Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, rather than returning an empty response if a message isn&#39;t yet available. You can specify an integer from 1 to 20. Short polling is used as the default or when you specify 0 for this property.
     * 
     */
    @Import(name="receiveMessageWaitTimeSeconds")
    private @Nullable Output<Integer> receiveMessageWaitTimeSeconds;

    public Optional<Output<Integer>> receiveMessageWaitTimeSeconds() {
        return Optional.ofNullable(this.receiveMessageWaitTimeSeconds);
    }

    /**
     * The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object.
     * 
     */
    @Import(name="redriveAllowPolicy")
    private @Nullable Output<Object> redriveAllowPolicy;

    public Optional<Output<Object>> redriveAllowPolicy() {
        return Optional.ofNullable(this.redriveAllowPolicy);
    }

    /**
     * A string that includes the parameters for the dead-letter queue functionality (redrive policy) of the source queue.
     * 
     */
    @Import(name="redrivePolicy")
    private @Nullable Output<Object> redrivePolicy;

    public Optional<Output<Object>> redrivePolicy() {
        return Optional.ofNullable(this.redrivePolicy);
    }

    /**
     * The tags that you attach to this queue.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<QueueTagArgs>> tags;

    public Optional<Output<List<QueueTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The length of time during which a message will be unavailable after a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue. Values must be from 0 to 43,200 seconds (12 hours). If you don&#39;t specify a value, AWS CloudFormation uses the default value of 30 seconds.
     * 
     */
    @Import(name="visibilityTimeout")
    private @Nullable Output<Integer> visibilityTimeout;

    public Optional<Output<Integer>> visibilityTimeout() {
        return Optional.ofNullable(this.visibilityTimeout);
    }

    private QueueArgs() {}

    private QueueArgs(QueueArgs $) {
        this.contentBasedDeduplication = $.contentBasedDeduplication;
        this.deduplicationScope = $.deduplicationScope;
        this.delaySeconds = $.delaySeconds;
        this.fifoQueue = $.fifoQueue;
        this.fifoThroughputLimit = $.fifoThroughputLimit;
        this.kmsDataKeyReusePeriodSeconds = $.kmsDataKeyReusePeriodSeconds;
        this.kmsMasterKeyId = $.kmsMasterKeyId;
        this.maximumMessageSize = $.maximumMessageSize;
        this.messageRetentionPeriod = $.messageRetentionPeriod;
        this.queueName = $.queueName;
        this.receiveMessageWaitTimeSeconds = $.receiveMessageWaitTimeSeconds;
        this.redriveAllowPolicy = $.redriveAllowPolicy;
        this.redrivePolicy = $.redrivePolicy;
        this.tags = $.tags;
        this.visibilityTimeout = $.visibilityTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueueArgs $;

        public Builder() {
            $ = new QueueArgs();
        }

        public Builder(QueueArgs defaults) {
            $ = new QueueArgs(Objects.requireNonNull(defaults));
        }

        public Builder contentBasedDeduplication(@Nullable Output<Boolean> contentBasedDeduplication) {
            $.contentBasedDeduplication = contentBasedDeduplication;
            return this;
        }

        public Builder contentBasedDeduplication(Boolean contentBasedDeduplication) {
            return contentBasedDeduplication(Output.of(contentBasedDeduplication));
        }

        public Builder deduplicationScope(@Nullable Output<String> deduplicationScope) {
            $.deduplicationScope = deduplicationScope;
            return this;
        }

        public Builder deduplicationScope(String deduplicationScope) {
            return deduplicationScope(Output.of(deduplicationScope));
        }

        public Builder delaySeconds(@Nullable Output<Integer> delaySeconds) {
            $.delaySeconds = delaySeconds;
            return this;
        }

        public Builder delaySeconds(Integer delaySeconds) {
            return delaySeconds(Output.of(delaySeconds));
        }

        public Builder fifoQueue(@Nullable Output<Boolean> fifoQueue) {
            $.fifoQueue = fifoQueue;
            return this;
        }

        public Builder fifoQueue(Boolean fifoQueue) {
            return fifoQueue(Output.of(fifoQueue));
        }

        public Builder fifoThroughputLimit(@Nullable Output<String> fifoThroughputLimit) {
            $.fifoThroughputLimit = fifoThroughputLimit;
            return this;
        }

        public Builder fifoThroughputLimit(String fifoThroughputLimit) {
            return fifoThroughputLimit(Output.of(fifoThroughputLimit));
        }

        public Builder kmsDataKeyReusePeriodSeconds(@Nullable Output<Integer> kmsDataKeyReusePeriodSeconds) {
            $.kmsDataKeyReusePeriodSeconds = kmsDataKeyReusePeriodSeconds;
            return this;
        }

        public Builder kmsDataKeyReusePeriodSeconds(Integer kmsDataKeyReusePeriodSeconds) {
            return kmsDataKeyReusePeriodSeconds(Output.of(kmsDataKeyReusePeriodSeconds));
        }

        public Builder kmsMasterKeyId(@Nullable Output<String> kmsMasterKeyId) {
            $.kmsMasterKeyId = kmsMasterKeyId;
            return this;
        }

        public Builder kmsMasterKeyId(String kmsMasterKeyId) {
            return kmsMasterKeyId(Output.of(kmsMasterKeyId));
        }

        public Builder maximumMessageSize(@Nullable Output<Integer> maximumMessageSize) {
            $.maximumMessageSize = maximumMessageSize;
            return this;
        }

        public Builder maximumMessageSize(Integer maximumMessageSize) {
            return maximumMessageSize(Output.of(maximumMessageSize));
        }

        public Builder messageRetentionPeriod(@Nullable Output<Integer> messageRetentionPeriod) {
            $.messageRetentionPeriod = messageRetentionPeriod;
            return this;
        }

        public Builder messageRetentionPeriod(Integer messageRetentionPeriod) {
            return messageRetentionPeriod(Output.of(messageRetentionPeriod));
        }

        public Builder queueName(@Nullable Output<String> queueName) {
            $.queueName = queueName;
            return this;
        }

        public Builder queueName(String queueName) {
            return queueName(Output.of(queueName));
        }

        public Builder receiveMessageWaitTimeSeconds(@Nullable Output<Integer> receiveMessageWaitTimeSeconds) {
            $.receiveMessageWaitTimeSeconds = receiveMessageWaitTimeSeconds;
            return this;
        }

        public Builder receiveMessageWaitTimeSeconds(Integer receiveMessageWaitTimeSeconds) {
            return receiveMessageWaitTimeSeconds(Output.of(receiveMessageWaitTimeSeconds));
        }

        public Builder redriveAllowPolicy(@Nullable Output<Object> redriveAllowPolicy) {
            $.redriveAllowPolicy = redriveAllowPolicy;
            return this;
        }

        public Builder redriveAllowPolicy(Object redriveAllowPolicy) {
            return redriveAllowPolicy(Output.of(redriveAllowPolicy));
        }

        public Builder redrivePolicy(@Nullable Output<Object> redrivePolicy) {
            $.redrivePolicy = redrivePolicy;
            return this;
        }

        public Builder redrivePolicy(Object redrivePolicy) {
            return redrivePolicy(Output.of(redrivePolicy));
        }

        public Builder tags(@Nullable Output<List<QueueTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<QueueTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(QueueTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder visibilityTimeout(@Nullable Output<Integer> visibilityTimeout) {
            $.visibilityTimeout = visibilityTimeout;
            return this;
        }

        public Builder visibilityTimeout(Integer visibilityTimeout) {
            return visibilityTimeout(Output.of(visibilityTimeout));
        }

        public QueueArgs build() {
            return $;
        }
    }

}
