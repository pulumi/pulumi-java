// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.evidently.inputs;

import com.pulumi.awsnative.evidently.enums.ExperimentMetricGoalObjectDesiredChange;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExperimentMetricGoalObject extends com.pulumi.resources.InvokeArgs {

    public static final ExperimentMetricGoalObject Empty = new ExperimentMetricGoalObject();

    @Import(name="desiredChange", required=true)
    private ExperimentMetricGoalObjectDesiredChange desiredChange;

    public ExperimentMetricGoalObjectDesiredChange desiredChange() {
        return this.desiredChange;
    }

    /**
     * The JSON path to reference the entity id in the event.
     * 
     */
    @Import(name="entityIdKey", required=true)
    private String entityIdKey;

    /**
     * @return The JSON path to reference the entity id in the event.
     * 
     */
    public String entityIdKey() {
        return this.entityIdKey;
    }

    /**
     * Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn&#39;t.
     * 
     */
    @Import(name="eventPattern", required=true)
    private String eventPattern;

    /**
     * @return Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn&#39;t.
     * 
     */
    public String eventPattern() {
        return this.eventPattern;
    }

    @Import(name="metricName", required=true)
    private String metricName;

    public String metricName() {
        return this.metricName;
    }

    @Import(name="unitLabel")
    private @Nullable String unitLabel;

    public Optional<String> unitLabel() {
        return Optional.ofNullable(this.unitLabel);
    }

    /**
     * The JSON path to reference the numerical metric value in the event.
     * 
     */
    @Import(name="valueKey", required=true)
    private String valueKey;

    /**
     * @return The JSON path to reference the numerical metric value in the event.
     * 
     */
    public String valueKey() {
        return this.valueKey;
    }

    private ExperimentMetricGoalObject() {}

    private ExperimentMetricGoalObject(ExperimentMetricGoalObject $) {
        this.desiredChange = $.desiredChange;
        this.entityIdKey = $.entityIdKey;
        this.eventPattern = $.eventPattern;
        this.metricName = $.metricName;
        this.unitLabel = $.unitLabel;
        this.valueKey = $.valueKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExperimentMetricGoalObject defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExperimentMetricGoalObject $;

        public Builder() {
            $ = new ExperimentMetricGoalObject();
        }

        public Builder(ExperimentMetricGoalObject defaults) {
            $ = new ExperimentMetricGoalObject(Objects.requireNonNull(defaults));
        }

        public Builder desiredChange(ExperimentMetricGoalObjectDesiredChange desiredChange) {
            $.desiredChange = desiredChange;
            return this;
        }

        /**
         * @param entityIdKey The JSON path to reference the entity id in the event.
         * 
         * @return builder
         * 
         */
        public Builder entityIdKey(String entityIdKey) {
            $.entityIdKey = entityIdKey;
            return this;
        }

        /**
         * @param eventPattern Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn&#39;t.
         * 
         * @return builder
         * 
         */
        public Builder eventPattern(String eventPattern) {
            $.eventPattern = eventPattern;
            return this;
        }

        public Builder metricName(String metricName) {
            $.metricName = metricName;
            return this;
        }

        public Builder unitLabel(@Nullable String unitLabel) {
            $.unitLabel = unitLabel;
            return this;
        }

        /**
         * @param valueKey The JSON path to reference the numerical metric value in the event.
         * 
         * @return builder
         * 
         */
        public Builder valueKey(String valueKey) {
            $.valueKey = valueKey;
            return this;
        }

        public ExperimentMetricGoalObject build() {
            $.desiredChange = Objects.requireNonNull($.desiredChange, "expected parameter 'desiredChange' to be non-null");
            $.entityIdKey = Objects.requireNonNull($.entityIdKey, "expected parameter 'entityIdKey' to be non-null");
            $.eventPattern = Objects.requireNonNull($.eventPattern, "expected parameter 'eventPattern' to be non-null");
            $.metricName = Objects.requireNonNull($.metricName, "expected parameter 'metricName' to be non-null");
            $.valueKey = Objects.requireNonNull($.valueKey, "expected parameter 'valueKey' to be non-null");
            return $;
        }
    }

}
