// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Image tests configuration.
 * 
 */
public final class ImagePipelineImageTestsConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final ImagePipelineImageTestsConfiguration Empty = new ImagePipelineImageTestsConfiguration();

    /**
     * Defines if tests should be executed when building this image.
     * 
     */
    @Import(name="imageTestsEnabled")
    private @Nullable Boolean imageTestsEnabled;

    /**
     * @return Defines if tests should be executed when building this image.
     * 
     */
    public Optional<Boolean> imageTestsEnabled() {
        return Optional.ofNullable(this.imageTestsEnabled);
    }

    /**
     * The maximum time in minutes that tests are permitted to run.
     * 
     */
    @Import(name="timeoutMinutes")
    private @Nullable Integer timeoutMinutes;

    /**
     * @return The maximum time in minutes that tests are permitted to run.
     * 
     */
    public Optional<Integer> timeoutMinutes() {
        return Optional.ofNullable(this.timeoutMinutes);
    }

    private ImagePipelineImageTestsConfiguration() {}

    private ImagePipelineImageTestsConfiguration(ImagePipelineImageTestsConfiguration $) {
        this.imageTestsEnabled = $.imageTestsEnabled;
        this.timeoutMinutes = $.timeoutMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImagePipelineImageTestsConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImagePipelineImageTestsConfiguration $;

        public Builder() {
            $ = new ImagePipelineImageTestsConfiguration();
        }

        public Builder(ImagePipelineImageTestsConfiguration defaults) {
            $ = new ImagePipelineImageTestsConfiguration(Objects.requireNonNull(defaults));
        }

        /**
         * @param imageTestsEnabled Defines if tests should be executed when building this image.
         * 
         * @return builder
         * 
         */
        public Builder imageTestsEnabled(@Nullable Boolean imageTestsEnabled) {
            $.imageTestsEnabled = imageTestsEnabled;
            return this;
        }

        /**
         * @param timeoutMinutes The maximum time in minutes that tests are permitted to run.
         * 
         * @return builder
         * 
         */
        public Builder timeoutMinutes(@Nullable Integer timeoutMinutes) {
            $.timeoutMinutes = timeoutMinutes;
            return this;
        }

        public ImagePipelineImageTestsConfiguration build() {
            return $;
        }
    }

}
