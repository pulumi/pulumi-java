// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.inputs.JobDatabaseTableOutputOptions;
import com.pulumi.awsnative.databrew.inputs.JobS3TableOutputOptions;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobDataCatalogOutput extends com.pulumi.resources.InvokeArgs {

    public static final JobDataCatalogOutput Empty = new JobDataCatalogOutput();

    @Import(name="catalogId")
    private @Nullable String catalogId;

    public Optional<String> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    @Import(name="databaseName", required=true)
    private String databaseName;

    public String databaseName() {
        return this.databaseName;
    }

    @Import(name="databaseOptions")
    private @Nullable JobDatabaseTableOutputOptions databaseOptions;

    public Optional<JobDatabaseTableOutputOptions> databaseOptions() {
        return Optional.ofNullable(this.databaseOptions);
    }

    @Import(name="overwrite")
    private @Nullable Boolean overwrite;

    public Optional<Boolean> overwrite() {
        return Optional.ofNullable(this.overwrite);
    }

    @Import(name="s3Options")
    private @Nullable JobS3TableOutputOptions s3Options;

    public Optional<JobS3TableOutputOptions> s3Options() {
        return Optional.ofNullable(this.s3Options);
    }

    @Import(name="tableName", required=true)
    private String tableName;

    public String tableName() {
        return this.tableName;
    }

    private JobDataCatalogOutput() {}

    private JobDataCatalogOutput(JobDataCatalogOutput $) {
        this.catalogId = $.catalogId;
        this.databaseName = $.databaseName;
        this.databaseOptions = $.databaseOptions;
        this.overwrite = $.overwrite;
        this.s3Options = $.s3Options;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobDataCatalogOutput defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobDataCatalogOutput $;

        public Builder() {
            $ = new JobDataCatalogOutput();
        }

        public Builder(JobDataCatalogOutput defaults) {
            $ = new JobDataCatalogOutput(Objects.requireNonNull(defaults));
        }

        public Builder catalogId(@Nullable String catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        public Builder databaseName(String databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder databaseOptions(@Nullable JobDatabaseTableOutputOptions databaseOptions) {
            $.databaseOptions = databaseOptions;
            return this;
        }

        public Builder overwrite(@Nullable Boolean overwrite) {
            $.overwrite = overwrite;
            return this;
        }

        public Builder s3Options(@Nullable JobS3TableOutputOptions s3Options) {
            $.s3Options = s3Options;
            return this;
        }

        public Builder tableName(String tableName) {
            $.tableName = tableName;
            return this;
        }

        public JobDataCatalogOutput build() {
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.tableName = Objects.requireNonNull($.tableName, "expected parameter 'tableName' to be non-null");
            return $;
        }
    }

}
