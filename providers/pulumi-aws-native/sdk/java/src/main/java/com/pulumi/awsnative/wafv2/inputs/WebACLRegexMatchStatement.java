// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2.inputs;

import com.pulumi.awsnative.wafv2.inputs.WebACLFieldToMatch;
import com.pulumi.awsnative.wafv2.inputs.WebACLTextTransformation;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class WebACLRegexMatchStatement extends com.pulumi.resources.InvokeArgs {

    public static final WebACLRegexMatchStatement Empty = new WebACLRegexMatchStatement();

    @Import(name="fieldToMatch", required=true)
    private WebACLFieldToMatch fieldToMatch;

    public WebACLFieldToMatch fieldToMatch() {
        return this.fieldToMatch;
    }

    @Import(name="regexString", required=true)
    private String regexString;

    public String regexString() {
        return this.regexString;
    }

    @Import(name="textTransformations", required=true)
    private List<WebACLTextTransformation> textTransformations;

    public List<WebACLTextTransformation> textTransformations() {
        return this.textTransformations;
    }

    private WebACLRegexMatchStatement() {}

    private WebACLRegexMatchStatement(WebACLRegexMatchStatement $) {
        this.fieldToMatch = $.fieldToMatch;
        this.regexString = $.regexString;
        this.textTransformations = $.textTransformations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebACLRegexMatchStatement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebACLRegexMatchStatement $;

        public Builder() {
            $ = new WebACLRegexMatchStatement();
        }

        public Builder(WebACLRegexMatchStatement defaults) {
            $ = new WebACLRegexMatchStatement(Objects.requireNonNull(defaults));
        }

        public Builder fieldToMatch(WebACLFieldToMatch fieldToMatch) {
            $.fieldToMatch = fieldToMatch;
            return this;
        }

        public Builder regexString(String regexString) {
            $.regexString = regexString;
            return this;
        }

        public Builder textTransformations(List<WebACLTextTransformation> textTransformations) {
            $.textTransformations = textTransformations;
            return this;
        }

        public Builder textTransformations(WebACLTextTransformation... textTransformations) {
            return textTransformations(List.of(textTransformations));
        }

        public WebACLRegexMatchStatement build() {
            $.fieldToMatch = Objects.requireNonNull($.fieldToMatch, "expected parameter 'fieldToMatch' to be non-null");
            $.regexString = Objects.requireNonNull($.regexString, "expected parameter 'regexString' to be non-null");
            $.textTransformations = Objects.requireNonNull($.textTransformations, "expected parameter 'textTransformations' to be non-null");
            return $;
        }
    }

}
