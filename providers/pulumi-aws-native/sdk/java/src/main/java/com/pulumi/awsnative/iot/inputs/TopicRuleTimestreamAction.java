// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.inputs;

import com.pulumi.awsnative.iot.inputs.TopicRuleTimestreamDimension;
import com.pulumi.awsnative.iot.inputs.TopicRuleTimestreamTimestamp;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRuleTimestreamAction extends com.pulumi.resources.InvokeArgs {

    public static final TopicRuleTimestreamAction Empty = new TopicRuleTimestreamAction();

    @Import(name="batchMode")
    private @Nullable Boolean batchMode;

    public Optional<Boolean> batchMode() {
        return Optional.ofNullable(this.batchMode);
    }

    @Import(name="databaseName", required=true)
    private String databaseName;

    public String databaseName() {
        return this.databaseName;
    }

    @Import(name="dimensions", required=true)
    private List<TopicRuleTimestreamDimension> dimensions;

    public List<TopicRuleTimestreamDimension> dimensions() {
        return this.dimensions;
    }

    @Import(name="roleArn", required=true)
    private String roleArn;

    public String roleArn() {
        return this.roleArn;
    }

    @Import(name="tableName", required=true)
    private String tableName;

    public String tableName() {
        return this.tableName;
    }

    @Import(name="timestamp")
    private @Nullable TopicRuleTimestreamTimestamp timestamp;

    public Optional<TopicRuleTimestreamTimestamp> timestamp() {
        return Optional.ofNullable(this.timestamp);
    }

    private TopicRuleTimestreamAction() {}

    private TopicRuleTimestreamAction(TopicRuleTimestreamAction $) {
        this.batchMode = $.batchMode;
        this.databaseName = $.databaseName;
        this.dimensions = $.dimensions;
        this.roleArn = $.roleArn;
        this.tableName = $.tableName;
        this.timestamp = $.timestamp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleTimestreamAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleTimestreamAction $;

        public Builder() {
            $ = new TopicRuleTimestreamAction();
        }

        public Builder(TopicRuleTimestreamAction defaults) {
            $ = new TopicRuleTimestreamAction(Objects.requireNonNull(defaults));
        }

        public Builder batchMode(@Nullable Boolean batchMode) {
            $.batchMode = batchMode;
            return this;
        }

        public Builder databaseName(String databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder dimensions(List<TopicRuleTimestreamDimension> dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        public Builder dimensions(TopicRuleTimestreamDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }

        public Builder roleArn(String roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder tableName(String tableName) {
            $.tableName = tableName;
            return this;
        }

        public Builder timestamp(@Nullable TopicRuleTimestreamTimestamp timestamp) {
            $.timestamp = timestamp;
            return this;
        }

        public TopicRuleTimestreamAction build() {
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.dimensions = Objects.requireNonNull($.dimensions, "expected parameter 'dimensions' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            $.tableName = Objects.requireNonNull($.tableName, "expected parameter 'tableName' to be non-null");
            return $;
        }
    }

}
