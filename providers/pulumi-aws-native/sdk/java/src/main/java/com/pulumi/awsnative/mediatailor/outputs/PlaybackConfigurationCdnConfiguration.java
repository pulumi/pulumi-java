// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediatailor.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PlaybackConfigurationCdnConfiguration {
    /**
     * @return A non-default content delivery network (CDN) to serve ad segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront with default cache settings as its CDN for ad segments. To set up an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.&amp;lt;region&gt;.amazonaws.com. Then specify the rule&#39;s name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for ad segments.
     * 
     */
    private final @Nullable String adSegmentUrlPrefix;
    /**
     * @return A content delivery network (CDN) to cache content segments, so that content requests don&#39;t always have to go to the origin server. First, create a rule in your CDN for the content segment origin server. Then specify the rule&#39;s name in this ContentSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for content segments.
     * 
     */
    private final @Nullable String contentSegmentUrlPrefix;

    @CustomType.Constructor
    private PlaybackConfigurationCdnConfiguration(
        @CustomType.Parameter("adSegmentUrlPrefix") @Nullable String adSegmentUrlPrefix,
        @CustomType.Parameter("contentSegmentUrlPrefix") @Nullable String contentSegmentUrlPrefix) {
        this.adSegmentUrlPrefix = adSegmentUrlPrefix;
        this.contentSegmentUrlPrefix = contentSegmentUrlPrefix;
    }

    /**
     * @return A non-default content delivery network (CDN) to serve ad segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront with default cache settings as its CDN for ad segments. To set up an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.&amp;lt;region&gt;.amazonaws.com. Then specify the rule&#39;s name in this AdSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for ad segments.
     * 
     */
    public Optional<String> adSegmentUrlPrefix() {
        return Optional.ofNullable(this.adSegmentUrlPrefix);
    }
    /**
     * @return A content delivery network (CDN) to cache content segments, so that content requests don&#39;t always have to go to the origin server. First, create a rule in your CDN for the content segment origin server. Then specify the rule&#39;s name in this ContentSegmentUrlPrefix. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for content segments.
     * 
     */
    public Optional<String> contentSegmentUrlPrefix() {
        return Optional.ofNullable(this.contentSegmentUrlPrefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PlaybackConfigurationCdnConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String adSegmentUrlPrefix;
        private @Nullable String contentSegmentUrlPrefix;

        public Builder() {
    	      // Empty
        }

        public Builder(PlaybackConfigurationCdnConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adSegmentUrlPrefix = defaults.adSegmentUrlPrefix;
    	      this.contentSegmentUrlPrefix = defaults.contentSegmentUrlPrefix;
        }

        public Builder adSegmentUrlPrefix(@Nullable String adSegmentUrlPrefix) {
            this.adSegmentUrlPrefix = adSegmentUrlPrefix;
            return this;
        }
        public Builder contentSegmentUrlPrefix(@Nullable String contentSegmentUrlPrefix) {
            this.contentSegmentUrlPrefix = contentSegmentUrlPrefix;
            return this;
        }        public PlaybackConfigurationCdnConfiguration build() {
            return new PlaybackConfigurationCdnConfiguration(adSegmentUrlPrefix, contentSegmentUrlPrefix);
        }
    }
}
