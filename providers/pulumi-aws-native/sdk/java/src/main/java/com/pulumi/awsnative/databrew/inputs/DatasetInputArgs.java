// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.inputs.DatasetDataCatalogInputDefinitionArgs;
import com.pulumi.awsnative.databrew.inputs.DatasetDatabaseInputDefinitionArgs;
import com.pulumi.awsnative.databrew.inputs.DatasetMetadataArgs;
import com.pulumi.awsnative.databrew.inputs.DatasetS3LocationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Input
 * 
 */
public final class DatasetInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetInputArgs Empty = new DatasetInputArgs();

    @Import(name="dataCatalogInputDefinition")
      private final @Nullable Output<DatasetDataCatalogInputDefinitionArgs> dataCatalogInputDefinition;

    public Output<DatasetDataCatalogInputDefinitionArgs> dataCatalogInputDefinition() {
        return this.dataCatalogInputDefinition == null ? Codegen.empty() : this.dataCatalogInputDefinition;
    }

    @Import(name="databaseInputDefinition")
      private final @Nullable Output<DatasetDatabaseInputDefinitionArgs> databaseInputDefinition;

    public Output<DatasetDatabaseInputDefinitionArgs> databaseInputDefinition() {
        return this.databaseInputDefinition == null ? Codegen.empty() : this.databaseInputDefinition;
    }

    @Import(name="metadata")
      private final @Nullable Output<DatasetMetadataArgs> metadata;

    public Output<DatasetMetadataArgs> metadata() {
        return this.metadata == null ? Codegen.empty() : this.metadata;
    }

    @Import(name="s3InputDefinition")
      private final @Nullable Output<DatasetS3LocationArgs> s3InputDefinition;

    public Output<DatasetS3LocationArgs> s3InputDefinition() {
        return this.s3InputDefinition == null ? Codegen.empty() : this.s3InputDefinition;
    }

    public DatasetInputArgs(
        @Nullable Output<DatasetDataCatalogInputDefinitionArgs> dataCatalogInputDefinition,
        @Nullable Output<DatasetDatabaseInputDefinitionArgs> databaseInputDefinition,
        @Nullable Output<DatasetMetadataArgs> metadata,
        @Nullable Output<DatasetS3LocationArgs> s3InputDefinition) {
        this.dataCatalogInputDefinition = dataCatalogInputDefinition;
        this.databaseInputDefinition = databaseInputDefinition;
        this.metadata = metadata;
        this.s3InputDefinition = s3InputDefinition;
    }

    private DatasetInputArgs() {
        this.dataCatalogInputDefinition = Codegen.empty();
        this.databaseInputDefinition = Codegen.empty();
        this.metadata = Codegen.empty();
        this.s3InputDefinition = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DatasetDataCatalogInputDefinitionArgs> dataCatalogInputDefinition;
        private @Nullable Output<DatasetDatabaseInputDefinitionArgs> databaseInputDefinition;
        private @Nullable Output<DatasetMetadataArgs> metadata;
        private @Nullable Output<DatasetS3LocationArgs> s3InputDefinition;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataCatalogInputDefinition = defaults.dataCatalogInputDefinition;
    	      this.databaseInputDefinition = defaults.databaseInputDefinition;
    	      this.metadata = defaults.metadata;
    	      this.s3InputDefinition = defaults.s3InputDefinition;
        }

        public Builder dataCatalogInputDefinition(@Nullable Output<DatasetDataCatalogInputDefinitionArgs> dataCatalogInputDefinition) {
            this.dataCatalogInputDefinition = dataCatalogInputDefinition;
            return this;
        }
        public Builder dataCatalogInputDefinition(@Nullable DatasetDataCatalogInputDefinitionArgs dataCatalogInputDefinition) {
            this.dataCatalogInputDefinition = Codegen.ofNullable(dataCatalogInputDefinition);
            return this;
        }
        public Builder databaseInputDefinition(@Nullable Output<DatasetDatabaseInputDefinitionArgs> databaseInputDefinition) {
            this.databaseInputDefinition = databaseInputDefinition;
            return this;
        }
        public Builder databaseInputDefinition(@Nullable DatasetDatabaseInputDefinitionArgs databaseInputDefinition) {
            this.databaseInputDefinition = Codegen.ofNullable(databaseInputDefinition);
            return this;
        }
        public Builder metadata(@Nullable Output<DatasetMetadataArgs> metadata) {
            this.metadata = metadata;
            return this;
        }
        public Builder metadata(@Nullable DatasetMetadataArgs metadata) {
            this.metadata = Codegen.ofNullable(metadata);
            return this;
        }
        public Builder s3InputDefinition(@Nullable Output<DatasetS3LocationArgs> s3InputDefinition) {
            this.s3InputDefinition = s3InputDefinition;
            return this;
        }
        public Builder s3InputDefinition(@Nullable DatasetS3LocationArgs s3InputDefinition) {
            this.s3InputDefinition = Codegen.ofNullable(s3InputDefinition);
            return this;
        }        public DatasetInputArgs build() {
            return new DatasetInputArgs(dataCatalogInputDefinition, databaseInputDefinition, metadata, s3InputDefinition);
        }
    }
}
