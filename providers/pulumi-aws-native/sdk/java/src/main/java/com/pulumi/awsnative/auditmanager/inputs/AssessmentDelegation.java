// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.auditmanager.inputs;

import com.pulumi.awsnative.auditmanager.enums.AssessmentDelegationStatus;
import com.pulumi.awsnative.auditmanager.enums.AssessmentRoleType;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The assignment of a control set to a delegate for review.
 * 
 */
public final class AssessmentDelegation extends com.pulumi.resources.InvokeArgs {

    public static final AssessmentDelegation Empty = new AssessmentDelegation();

    @Import(name="assessmentId")
    private @Nullable String assessmentId;

    public Optional<String> assessmentId() {
        return Optional.ofNullable(this.assessmentId);
    }

    @Import(name="assessmentName")
    private @Nullable String assessmentName;

    public Optional<String> assessmentName() {
        return Optional.ofNullable(this.assessmentName);
    }

    @Import(name="comment")
    private @Nullable String comment;

    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="controlSetId")
    private @Nullable String controlSetId;

    public Optional<String> controlSetId() {
        return Optional.ofNullable(this.controlSetId);
    }

    @Import(name="createdBy")
    private @Nullable String createdBy;

    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    @Import(name="creationTime")
    private @Nullable Double creationTime;

    public Optional<Double> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }

    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="lastUpdated")
    private @Nullable Double lastUpdated;

    public Optional<Double> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }

    @Import(name="roleArn")
    private @Nullable String roleArn;

    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="roleType")
    private @Nullable AssessmentRoleType roleType;

    public Optional<AssessmentRoleType> roleType() {
        return Optional.ofNullable(this.roleType);
    }

    @Import(name="status")
    private @Nullable AssessmentDelegationStatus status;

    public Optional<AssessmentDelegationStatus> status() {
        return Optional.ofNullable(this.status);
    }

    private AssessmentDelegation() {}

    private AssessmentDelegation(AssessmentDelegation $) {
        this.assessmentId = $.assessmentId;
        this.assessmentName = $.assessmentName;
        this.comment = $.comment;
        this.controlSetId = $.controlSetId;
        this.createdBy = $.createdBy;
        this.creationTime = $.creationTime;
        this.id = $.id;
        this.lastUpdated = $.lastUpdated;
        this.roleArn = $.roleArn;
        this.roleType = $.roleType;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssessmentDelegation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssessmentDelegation $;

        public Builder() {
            $ = new AssessmentDelegation();
        }

        public Builder(AssessmentDelegation defaults) {
            $ = new AssessmentDelegation(Objects.requireNonNull(defaults));
        }

        public Builder assessmentId(@Nullable String assessmentId) {
            $.assessmentId = assessmentId;
            return this;
        }

        public Builder assessmentName(@Nullable String assessmentName) {
            $.assessmentName = assessmentName;
            return this;
        }

        public Builder comment(@Nullable String comment) {
            $.comment = comment;
            return this;
        }

        public Builder controlSetId(@Nullable String controlSetId) {
            $.controlSetId = controlSetId;
            return this;
        }

        public Builder createdBy(@Nullable String createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        public Builder creationTime(@Nullable Double creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder lastUpdated(@Nullable Double lastUpdated) {
            $.lastUpdated = lastUpdated;
            return this;
        }

        public Builder roleArn(@Nullable String roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleType(@Nullable AssessmentRoleType roleType) {
            $.roleType = roleType;
            return this;
        }

        public Builder status(@Nullable AssessmentDelegationStatus status) {
            $.status = status;
            return this;
        }

        public AssessmentDelegation build() {
            return $;
        }
    }

}
