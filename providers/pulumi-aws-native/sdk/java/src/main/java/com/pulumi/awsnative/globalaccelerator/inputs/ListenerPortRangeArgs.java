// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.globalaccelerator.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;


/**
 * A port range to support for connections from  clients to your accelerator.
 * 
 */
public final class ListenerPortRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerPortRangeArgs Empty = new ListenerPortRangeArgs();

    @Import(name="fromPort", required=true)
      private final Output<Integer> fromPort;

    public Output<Integer> fromPort() {
        return this.fromPort;
    }

    @Import(name="toPort", required=true)
      private final Output<Integer> toPort;

    public Output<Integer> toPort() {
        return this.toPort;
    }

    public ListenerPortRangeArgs(
        Output<Integer> fromPort,
        Output<Integer> toPort) {
        this.fromPort = Objects.requireNonNull(fromPort, "expected parameter 'fromPort' to be non-null");
        this.toPort = Objects.requireNonNull(toPort, "expected parameter 'toPort' to be non-null");
    }

    private ListenerPortRangeArgs() {
        this.fromPort = Codegen.empty();
        this.toPort = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListenerPortRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> fromPort;
        private Output<Integer> toPort;

        public Builder() {
    	      // Empty
        }

        public Builder(ListenerPortRangeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fromPort = defaults.fromPort;
    	      this.toPort = defaults.toPort;
        }

        public Builder fromPort(Output<Integer> fromPort) {
            this.fromPort = Objects.requireNonNull(fromPort);
            return this;
        }
        public Builder fromPort(Integer fromPort) {
            this.fromPort = Output.of(Objects.requireNonNull(fromPort));
            return this;
        }
        public Builder toPort(Output<Integer> toPort) {
            this.toPort = Objects.requireNonNull(toPort);
            return this;
        }
        public Builder toPort(Integer toPort) {
            this.toPort = Output.of(Objects.requireNonNull(toPort));
            return this;
        }        public ListenerPortRangeArgs build() {
            return new ListenerPortRangeArgs(fromPort, toPort);
        }
    }
}
