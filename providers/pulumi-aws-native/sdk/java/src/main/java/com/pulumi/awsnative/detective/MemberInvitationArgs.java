// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.detective;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MemberInvitationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MemberInvitationArgs Empty = new MemberInvitationArgs();

    /**
     * When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
     * 
     */
    @Import(name="disableEmailNotification")
      private final @Nullable Output<Boolean> disableEmailNotification;

    public Output<Boolean> disableEmailNotification() {
        return this.disableEmailNotification == null ? Codegen.empty() : this.disableEmailNotification;
    }

    /**
     * The ARN of the graph to which the member account will be invited
     * 
     */
    @Import(name="graphArn", required=true)
      private final Output<String> graphArn;

    public Output<String> graphArn() {
        return this.graphArn;
    }

    /**
     * The root email address for the account to be invited, for validation. Updating this field has no effect.
     * 
     */
    @Import(name="memberEmailAddress", required=true)
      private final Output<String> memberEmailAddress;

    public Output<String> memberEmailAddress() {
        return this.memberEmailAddress;
    }

    /**
     * The AWS account ID to be invited to join the graph as a member
     * 
     */
    @Import(name="memberId", required=true)
      private final Output<String> memberId;

    public Output<String> memberId() {
        return this.memberId;
    }

    /**
     * A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
     * 
     */
    @Import(name="message")
      private final @Nullable Output<String> message;

    public Output<String> message() {
        return this.message == null ? Codegen.empty() : this.message;
    }

    public MemberInvitationArgs(
        @Nullable Output<Boolean> disableEmailNotification,
        Output<String> graphArn,
        Output<String> memberEmailAddress,
        Output<String> memberId,
        @Nullable Output<String> message) {
        this.disableEmailNotification = disableEmailNotification;
        this.graphArn = Objects.requireNonNull(graphArn, "expected parameter 'graphArn' to be non-null");
        this.memberEmailAddress = Objects.requireNonNull(memberEmailAddress, "expected parameter 'memberEmailAddress' to be non-null");
        this.memberId = Objects.requireNonNull(memberId, "expected parameter 'memberId' to be non-null");
        this.message = message;
    }

    private MemberInvitationArgs() {
        this.disableEmailNotification = Codegen.empty();
        this.graphArn = Codegen.empty();
        this.memberEmailAddress = Codegen.empty();
        this.memberId = Codegen.empty();
        this.message = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MemberInvitationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> disableEmailNotification;
        private Output<String> graphArn;
        private Output<String> memberEmailAddress;
        private Output<String> memberId;
        private @Nullable Output<String> message;

        public Builder() {
    	      // Empty
        }

        public Builder(MemberInvitationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disableEmailNotification = defaults.disableEmailNotification;
    	      this.graphArn = defaults.graphArn;
    	      this.memberEmailAddress = defaults.memberEmailAddress;
    	      this.memberId = defaults.memberId;
    	      this.message = defaults.message;
        }

        public Builder disableEmailNotification(@Nullable Output<Boolean> disableEmailNotification) {
            this.disableEmailNotification = disableEmailNotification;
            return this;
        }
        public Builder disableEmailNotification(@Nullable Boolean disableEmailNotification) {
            this.disableEmailNotification = Codegen.ofNullable(disableEmailNotification);
            return this;
        }
        public Builder graphArn(Output<String> graphArn) {
            this.graphArn = Objects.requireNonNull(graphArn);
            return this;
        }
        public Builder graphArn(String graphArn) {
            this.graphArn = Output.of(Objects.requireNonNull(graphArn));
            return this;
        }
        public Builder memberEmailAddress(Output<String> memberEmailAddress) {
            this.memberEmailAddress = Objects.requireNonNull(memberEmailAddress);
            return this;
        }
        public Builder memberEmailAddress(String memberEmailAddress) {
            this.memberEmailAddress = Output.of(Objects.requireNonNull(memberEmailAddress));
            return this;
        }
        public Builder memberId(Output<String> memberId) {
            this.memberId = Objects.requireNonNull(memberId);
            return this;
        }
        public Builder memberId(String memberId) {
            this.memberId = Output.of(Objects.requireNonNull(memberId));
            return this;
        }
        public Builder message(@Nullable Output<String> message) {
            this.message = message;
            return this;
        }
        public Builder message(@Nullable String message) {
            this.message = Codegen.ofNullable(message);
            return this;
        }        public MemberInvitationArgs build() {
            return new MemberInvitationArgs(disableEmailNotification, graphArn, memberEmailAddress, memberId, message);
        }
    }
}
