// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.pinpoint.inputs;

import com.pulumi.awsnative.pinpoint.inputs.InAppTemplateBodyConfig;
import com.pulumi.awsnative.pinpoint.inputs.InAppTemplateButtonConfig;
import com.pulumi.awsnative.pinpoint.inputs.InAppTemplateHeaderConfig;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InAppTemplateInAppMessageContent extends com.pulumi.resources.InvokeArgs {

    public static final InAppTemplateInAppMessageContent Empty = new InAppTemplateInAppMessageContent();

    @Import(name="backgroundColor")
      private final @Nullable String backgroundColor;

    public Optional<String> backgroundColor() {
        return this.backgroundColor == null ? Optional.empty() : Optional.ofNullable(this.backgroundColor);
    }

    @Import(name="bodyConfig")
      private final @Nullable InAppTemplateBodyConfig bodyConfig;

    public Optional<InAppTemplateBodyConfig> bodyConfig() {
        return this.bodyConfig == null ? Optional.empty() : Optional.ofNullable(this.bodyConfig);
    }

    @Import(name="headerConfig")
      private final @Nullable InAppTemplateHeaderConfig headerConfig;

    public Optional<InAppTemplateHeaderConfig> headerConfig() {
        return this.headerConfig == null ? Optional.empty() : Optional.ofNullable(this.headerConfig);
    }

    @Import(name="imageUrl")
      private final @Nullable String imageUrl;

    public Optional<String> imageUrl() {
        return this.imageUrl == null ? Optional.empty() : Optional.ofNullable(this.imageUrl);
    }

    @Import(name="primaryBtn")
      private final @Nullable InAppTemplateButtonConfig primaryBtn;

    public Optional<InAppTemplateButtonConfig> primaryBtn() {
        return this.primaryBtn == null ? Optional.empty() : Optional.ofNullable(this.primaryBtn);
    }

    @Import(name="secondaryBtn")
      private final @Nullable InAppTemplateButtonConfig secondaryBtn;

    public Optional<InAppTemplateButtonConfig> secondaryBtn() {
        return this.secondaryBtn == null ? Optional.empty() : Optional.ofNullable(this.secondaryBtn);
    }

    public InAppTemplateInAppMessageContent(
        @Nullable String backgroundColor,
        @Nullable InAppTemplateBodyConfig bodyConfig,
        @Nullable InAppTemplateHeaderConfig headerConfig,
        @Nullable String imageUrl,
        @Nullable InAppTemplateButtonConfig primaryBtn,
        @Nullable InAppTemplateButtonConfig secondaryBtn) {
        this.backgroundColor = backgroundColor;
        this.bodyConfig = bodyConfig;
        this.headerConfig = headerConfig;
        this.imageUrl = imageUrl;
        this.primaryBtn = primaryBtn;
        this.secondaryBtn = secondaryBtn;
    }

    private InAppTemplateInAppMessageContent() {
        this.backgroundColor = null;
        this.bodyConfig = null;
        this.headerConfig = null;
        this.imageUrl = null;
        this.primaryBtn = null;
        this.secondaryBtn = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InAppTemplateInAppMessageContent defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String backgroundColor;
        private @Nullable InAppTemplateBodyConfig bodyConfig;
        private @Nullable InAppTemplateHeaderConfig headerConfig;
        private @Nullable String imageUrl;
        private @Nullable InAppTemplateButtonConfig primaryBtn;
        private @Nullable InAppTemplateButtonConfig secondaryBtn;

        public Builder() {
    	      // Empty
        }

        public Builder(InAppTemplateInAppMessageContent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backgroundColor = defaults.backgroundColor;
    	      this.bodyConfig = defaults.bodyConfig;
    	      this.headerConfig = defaults.headerConfig;
    	      this.imageUrl = defaults.imageUrl;
    	      this.primaryBtn = defaults.primaryBtn;
    	      this.secondaryBtn = defaults.secondaryBtn;
        }

        public Builder backgroundColor(@Nullable String backgroundColor) {
            this.backgroundColor = backgroundColor;
            return this;
        }
        public Builder bodyConfig(@Nullable InAppTemplateBodyConfig bodyConfig) {
            this.bodyConfig = bodyConfig;
            return this;
        }
        public Builder headerConfig(@Nullable InAppTemplateHeaderConfig headerConfig) {
            this.headerConfig = headerConfig;
            return this;
        }
        public Builder imageUrl(@Nullable String imageUrl) {
            this.imageUrl = imageUrl;
            return this;
        }
        public Builder primaryBtn(@Nullable InAppTemplateButtonConfig primaryBtn) {
            this.primaryBtn = primaryBtn;
            return this;
        }
        public Builder secondaryBtn(@Nullable InAppTemplateButtonConfig secondaryBtn) {
            this.secondaryBtn = secondaryBtn;
            return this;
        }        public InAppTemplateInAppMessageContent build() {
            return new InAppTemplateInAppMessageContent(backgroundColor, bodyConfig, headerConfig, imageUrl, primaryBtn, secondaryBtn);
        }
    }
}
