// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3outposts;

import com.pulumi.awsnative.s3outposts.inputs.AccessPointVpcConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessPointArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPointArgs Empty = new AccessPointArgs();

    /**
     * The Amazon Resource Name (ARN) of the bucket you want to associate this AccessPoint with.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * A name for the AccessPoint.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The access point policy associated with this access point.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<Object> policy;

    public Optional<Output<Object>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Virtual Private Cloud (VPC) from which requests can be made to the AccessPoint.
     * 
     */
    @Import(name="vpcConfiguration", required=true)
    private Output<AccessPointVpcConfigurationArgs> vpcConfiguration;

    public Output<AccessPointVpcConfigurationArgs> vpcConfiguration() {
        return this.vpcConfiguration;
    }

    private AccessPointArgs() {}

    private AccessPointArgs(AccessPointArgs $) {
        this.bucket = $.bucket;
        this.name = $.name;
        this.policy = $.policy;
        this.vpcConfiguration = $.vpcConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPointArgs $;

        public Builder() {
            $ = new AccessPointArgs();
        }

        public Builder(AccessPointArgs defaults) {
            $ = new AccessPointArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder policy(@Nullable Output<Object> policy) {
            $.policy = policy;
            return this;
        }

        public Builder policy(Object policy) {
            return policy(Output.of(policy));
        }

        public Builder vpcConfiguration(Output<AccessPointVpcConfigurationArgs> vpcConfiguration) {
            $.vpcConfiguration = vpcConfiguration;
            return this;
        }

        public Builder vpcConfiguration(AccessPointVpcConfigurationArgs vpcConfiguration) {
            return vpcConfiguration(Output.of(vpcConfiguration));
        }

        public AccessPointArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.vpcConfiguration = Objects.requireNonNull($.vpcConfiguration, "expected parameter 'vpcConfiguration' to be non-null");
            return $;
        }
    }

}
