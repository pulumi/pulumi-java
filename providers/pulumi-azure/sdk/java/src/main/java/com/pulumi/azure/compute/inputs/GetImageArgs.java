// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetImageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetImageArgs Empty = new GetImageArgs();

    /**
     * The name of the Image.
     * 
     */
    @Import(name="name")
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the Image.
     * 
     */
    public Output</* @Nullable */ String> name() {
        return this.name;
    }

    /**
     * Regex pattern of the image to match.
     * 
     */
    @Import(name="nameRegex")
    private Output</* @Nullable */ String> nameRegex;

    /**
     * @return Regex pattern of the image to match.
     * 
     */
    public Output</* @Nullable */ String> nameRegex() {
        return this.nameRegex;
    }

    /**
     * The Name of the Resource Group where this Image exists.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group where this Image exists.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * By default when matching by regex, images are sorted by name in ascending order and the first match is chosen, to sort descending, set this flag.
     * 
     */
    @Import(name="sortDescending")
    private Output</* @Nullable */ Boolean> sortDescending;

    /**
     * @return By default when matching by regex, images are sorted by name in ascending order and the first match is chosen, to sort descending, set this flag.
     * 
     */
    public Output</* @Nullable */ Boolean> sortDescending() {
        return this.sortDescending;
    }

    private GetImageArgs() {}

    private GetImageArgs(GetImageArgs $) {
        this.name = $.name;
        this.nameRegex = $.nameRegex;
        this.resourceGroupName = $.resourceGroupName;
        this.sortDescending = $.sortDescending;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImageArgs $;

        public Builder() {
            $ = new GetImageArgs();
        }

        public Builder(GetImageArgs defaults) {
            $ = new GetImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Image.
         * 
         * @return builder
         * 
         */
        public Builder name(Output</* @Nullable */ String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Image.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameRegex Regex pattern of the image to match.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(Output</* @Nullable */ String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex Regex pattern of the image to match.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        /**
         * @param resourceGroupName The Name of the Resource Group where this Image exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The Name of the Resource Group where this Image exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sortDescending By default when matching by regex, images are sorted by name in ascending order and the first match is chosen, to sort descending, set this flag.
         * 
         * @return builder
         * 
         */
        public Builder sortDescending(Output</* @Nullable */ Boolean> sortDescending) {
            $.sortDescending = sortDescending;
            return this;
        }

        /**
         * @param sortDescending By default when matching by regex, images are sorted by name in ascending order and the first match is chosen, to sort descending, set this flag.
         * 
         * @return builder
         * 
         */
        public Builder sortDescending(@Nullable Boolean sortDescending) {
            return sortDescending(Output.of(sortDescending));
        }

        public GetImageArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
