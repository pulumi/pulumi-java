// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.authorization.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetRoleDefinitionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRoleDefinitionArgs Empty = new GetRoleDefinitionArgs();

    /**
     * Specifies the Name of either a built-in or custom Role Definition.
     * 
     */
    @Import(name="name")
    private Output</* @Nullable */ String> name;

    /**
     * @return Specifies the Name of either a built-in or custom Role Definition.
     * 
     */
    public Output</* @Nullable */ String> name() {
        return this.name;
    }

    /**
     * Specifies the ID of the Role Definition as a UUID/GUID.
     * 
     */
    @Import(name="roleDefinitionId")
    private Output</* @Nullable */ String> roleDefinitionId;

    /**
     * @return Specifies the ID of the Role Definition as a UUID/GUID.
     * 
     */
    public Output</* @Nullable */ String> roleDefinitionId() {
        return this.roleDefinitionId;
    }

    /**
     * Specifies the Scope at which the Custom Role Definition exists.
     * 
     */
    @Import(name="scope")
    private Output</* @Nullable */ String> scope;

    /**
     * @return Specifies the Scope at which the Custom Role Definition exists.
     * 
     */
    public Output</* @Nullable */ String> scope() {
        return this.scope;
    }

    private GetRoleDefinitionArgs() {}

    private GetRoleDefinitionArgs(GetRoleDefinitionArgs $) {
        this.name = $.name;
        this.roleDefinitionId = $.roleDefinitionId;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRoleDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRoleDefinitionArgs $;

        public Builder() {
            $ = new GetRoleDefinitionArgs();
        }

        public Builder(GetRoleDefinitionArgs defaults) {
            $ = new GetRoleDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Specifies the Name of either a built-in or custom Role Definition.
         * 
         * @return builder
         * 
         */
        public Builder name(Output</* @Nullable */ String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the Name of either a built-in or custom Role Definition.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            return name(Output.of(name));
        }

        /**
         * @param roleDefinitionId Specifies the ID of the Role Definition as a UUID/GUID.
         * 
         * @return builder
         * 
         */
        public Builder roleDefinitionId(Output</* @Nullable */ String> roleDefinitionId) {
            $.roleDefinitionId = roleDefinitionId;
            return this;
        }

        /**
         * @param roleDefinitionId Specifies the ID of the Role Definition as a UUID/GUID.
         * 
         * @return builder
         * 
         */
        public Builder roleDefinitionId(@Nullable String roleDefinitionId) {
            return roleDefinitionId(Output.of(roleDefinitionId));
        }

        /**
         * @param scope Specifies the Scope at which the Custom Role Definition exists.
         * 
         * @return builder
         * 
         */
        public Builder scope(Output</* @Nullable */ String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Specifies the Scope at which the Custom Role Definition exists.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable String scope) {
            return scope(Output.of(scope));
        }

        public GetRoleDefinitionArgs build() {
            return $;
        }
    }

}
