// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetResourcesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResourcesArgs Empty = new GetResourcesArgs();

    /**
     * The name of the Resource.
     * 
     */
    @Import(name="name")
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the Resource.
     * 
     */
    public Output</* @Nullable */ String> name() {
        return this.name;
    }

    /**
     * A mapping of tags which the resource has to have in order to be included in the result.
     * 
     */
    @Import(name="requiredTags")
    private Output</* @Nullable */ Map<String,String>> requiredTags;

    /**
     * @return A mapping of tags which the resource has to have in order to be included in the result.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> requiredTags() {
        return this.requiredTags;
    }

    /**
     * The name of the Resource group where the Resources are located.
     * 
     */
    @Import(name="resourceGroupName")
    private Output</* @Nullable */ String> resourceGroupName;

    /**
     * @return The name of the Resource group where the Resources are located.
     * 
     */
    public Output</* @Nullable */ String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A full list of available Resource Types can be found [here](https://docs.microsoft.com/en-us/azure/azure-resource-manager/azure-services-resource-providers).
     * 
     */
    @Import(name="type")
    private Output</* @Nullable */ String> type;

    /**
     * @return The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A full list of available Resource Types can be found [here](https://docs.microsoft.com/en-us/azure/azure-resource-manager/azure-services-resource-providers).
     * 
     */
    public Output</* @Nullable */ String> type() {
        return this.type;
    }

    private GetResourcesArgs() {}

    private GetResourcesArgs(GetResourcesArgs $) {
        this.name = $.name;
        this.requiredTags = $.requiredTags;
        this.resourceGroupName = $.resourceGroupName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResourcesArgs $;

        public Builder() {
            $ = new GetResourcesArgs();
        }

        public Builder(GetResourcesArgs defaults) {
            $ = new GetResourcesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Resource.
         * 
         * @return builder
         * 
         */
        public Builder name(Output</* @Nullable */ String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            return name(Output.of(name));
        }

        /**
         * @param requiredTags A mapping of tags which the resource has to have in order to be included in the result.
         * 
         * @return builder
         * 
         */
        public Builder requiredTags(Output</* @Nullable */ Map<String,String>> requiredTags) {
            $.requiredTags = requiredTags;
            return this;
        }

        /**
         * @param requiredTags A mapping of tags which the resource has to have in order to be included in the result.
         * 
         * @return builder
         * 
         */
        public Builder requiredTags(@Nullable Map<String,String> requiredTags) {
            return requiredTags(Output.of(requiredTags));
        }

        /**
         * @param resourceGroupName The name of the Resource group where the Resources are located.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output</* @Nullable */ String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource group where the Resources are located.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param type The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A full list of available Resource Types can be found [here](https://docs.microsoft.com/en-us/azure/azure-resource-manager/azure-services-resource-providers).
         * 
         * @return builder
         * 
         */
        public Builder type(Output</* @Nullable */ String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A full list of available Resource Types can be found [here](https://docs.microsoft.com/en-us/azure/azure-resource-manager/azure-services-resource-providers).
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            return type(Output.of(type));
        }

        public GetResourcesArgs build() {
            return $;
        }
    }

}
