// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.aws.imagebuilder.inputs.InfrastructureConfigurationLoggingGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InfrastructureConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final InfrastructureConfigurationState Empty = new InfrastructureConfigurationState();

    /**
     * Amazon Resource Name (ARN) of the configuration.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Date when the configuration was created.
     * 
     */
    @Import(name="dateCreated")
      private final @Nullable Output<String> dateCreated;

    public Output<String> dateCreated() {
        return this.dateCreated == null ? Codegen.empty() : this.dateCreated;
    }

    /**
     * Date when the configuration was updated.
     * 
     */
    @Import(name="dateUpdated")
      private final @Nullable Output<String> dateUpdated;

    public Output<String> dateUpdated() {
        return this.dateUpdated == null ? Codegen.empty() : this.dateUpdated;
    }

    /**
     * Description for the configuration.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Name of IAM Instance Profile.
     * 
     */
    @Import(name="instanceProfileName")
      private final @Nullable Output<String> instanceProfileName;

    public Output<String> instanceProfileName() {
        return this.instanceProfileName == null ? Codegen.empty() : this.instanceProfileName;
    }

    /**
     * Set of EC2 Instance Types.
     * 
     */
    @Import(name="instanceTypes")
      private final @Nullable Output<List<String>> instanceTypes;

    public Output<List<String>> instanceTypes() {
        return this.instanceTypes == null ? Codegen.empty() : this.instanceTypes;
    }

    /**
     * Name of EC2 Key Pair.
     * 
     */
    @Import(name="keyPair")
      private final @Nullable Output<String> keyPair;

    public Output<String> keyPair() {
        return this.keyPair == null ? Codegen.empty() : this.keyPair;
    }

    /**
     * Configuration block with logging settings. Detailed below.
     * 
     */
    @Import(name="logging")
      private final @Nullable Output<InfrastructureConfigurationLoggingGetArgs> logging;

    public Output<InfrastructureConfigurationLoggingGetArgs> logging() {
        return this.logging == null ? Codegen.empty() : this.logging;
    }

    /**
     * Name for the configuration.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Key-value map of resource tags to assign to infrastructure created by the configuration.
     * 
     */
    @Import(name="resourceTags")
      private final @Nullable Output<Map<String,String>> resourceTags;

    public Output<Map<String,String>> resourceTags() {
        return this.resourceTags == null ? Codegen.empty() : this.resourceTags;
    }

    /**
     * Set of EC2 Security Group identifiers.
     * 
     */
    @Import(name="securityGroupIds")
      private final @Nullable Output<List<String>> securityGroupIds;

    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds == null ? Codegen.empty() : this.securityGroupIds;
    }

    /**
     * Amazon Resource Name (ARN) of SNS Topic.
     * 
     */
    @Import(name="snsTopicArn")
      private final @Nullable Output<String> snsTopicArn;

    public Output<String> snsTopicArn() {
        return this.snsTopicArn == null ? Codegen.empty() : this.snsTopicArn;
    }

    /**
     * EC2 Subnet identifier. Also requires `security_group_ids` argument.
     * 
     */
    @Import(name="subnetId")
      private final @Nullable Output<String> subnetId;

    public Output<String> subnetId() {
        return this.subnetId == null ? Codegen.empty() : this.subnetId;
    }

    /**
     * Key-value map of resource tags to assign to the configuration. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * Enable if the instance should be terminated when the pipeline fails. Defaults to `false`.
     * 
     */
    @Import(name="terminateInstanceOnFailure")
      private final @Nullable Output<Boolean> terminateInstanceOnFailure;

    public Output<Boolean> terminateInstanceOnFailure() {
        return this.terminateInstanceOnFailure == null ? Codegen.empty() : this.terminateInstanceOnFailure;
    }

    public InfrastructureConfigurationState(
        @Nullable Output<String> arn,
        @Nullable Output<String> dateCreated,
        @Nullable Output<String> dateUpdated,
        @Nullable Output<String> description,
        @Nullable Output<String> instanceProfileName,
        @Nullable Output<List<String>> instanceTypes,
        @Nullable Output<String> keyPair,
        @Nullable Output<InfrastructureConfigurationLoggingGetArgs> logging,
        @Nullable Output<String> name,
        @Nullable Output<Map<String,String>> resourceTags,
        @Nullable Output<List<String>> securityGroupIds,
        @Nullable Output<String> snsTopicArn,
        @Nullable Output<String> subnetId,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<Boolean> terminateInstanceOnFailure) {
        this.arn = arn;
        this.dateCreated = dateCreated;
        this.dateUpdated = dateUpdated;
        this.description = description;
        this.instanceProfileName = instanceProfileName;
        this.instanceTypes = instanceTypes;
        this.keyPair = keyPair;
        this.logging = logging;
        this.name = name;
        this.resourceTags = resourceTags;
        this.securityGroupIds = securityGroupIds;
        this.snsTopicArn = snsTopicArn;
        this.subnetId = subnetId;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.terminateInstanceOnFailure = terminateInstanceOnFailure;
    }

    private InfrastructureConfigurationState() {
        this.arn = Codegen.empty();
        this.dateCreated = Codegen.empty();
        this.dateUpdated = Codegen.empty();
        this.description = Codegen.empty();
        this.instanceProfileName = Codegen.empty();
        this.instanceTypes = Codegen.empty();
        this.keyPair = Codegen.empty();
        this.logging = Codegen.empty();
        this.name = Codegen.empty();
        this.resourceTags = Codegen.empty();
        this.securityGroupIds = Codegen.empty();
        this.snsTopicArn = Codegen.empty();
        this.subnetId = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.terminateInstanceOnFailure = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InfrastructureConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> dateCreated;
        private @Nullable Output<String> dateUpdated;
        private @Nullable Output<String> description;
        private @Nullable Output<String> instanceProfileName;
        private @Nullable Output<List<String>> instanceTypes;
        private @Nullable Output<String> keyPair;
        private @Nullable Output<InfrastructureConfigurationLoggingGetArgs> logging;
        private @Nullable Output<String> name;
        private @Nullable Output<Map<String,String>> resourceTags;
        private @Nullable Output<List<String>> securityGroupIds;
        private @Nullable Output<String> snsTopicArn;
        private @Nullable Output<String> subnetId;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<Boolean> terminateInstanceOnFailure;

        public Builder() {
    	      // Empty
        }

        public Builder(InfrastructureConfigurationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.dateCreated = defaults.dateCreated;
    	      this.dateUpdated = defaults.dateUpdated;
    	      this.description = defaults.description;
    	      this.instanceProfileName = defaults.instanceProfileName;
    	      this.instanceTypes = defaults.instanceTypes;
    	      this.keyPair = defaults.keyPair;
    	      this.logging = defaults.logging;
    	      this.name = defaults.name;
    	      this.resourceTags = defaults.resourceTags;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.snsTopicArn = defaults.snsTopicArn;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.terminateInstanceOnFailure = defaults.terminateInstanceOnFailure;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder dateCreated(@Nullable Output<String> dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }
        public Builder dateCreated(@Nullable String dateCreated) {
            this.dateCreated = Codegen.ofNullable(dateCreated);
            return this;
        }
        public Builder dateUpdated(@Nullable Output<String> dateUpdated) {
            this.dateUpdated = dateUpdated;
            return this;
        }
        public Builder dateUpdated(@Nullable String dateUpdated) {
            this.dateUpdated = Codegen.ofNullable(dateUpdated);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder instanceProfileName(@Nullable Output<String> instanceProfileName) {
            this.instanceProfileName = instanceProfileName;
            return this;
        }
        public Builder instanceProfileName(@Nullable String instanceProfileName) {
            this.instanceProfileName = Codegen.ofNullable(instanceProfileName);
            return this;
        }
        public Builder instanceTypes(@Nullable Output<List<String>> instanceTypes) {
            this.instanceTypes = instanceTypes;
            return this;
        }
        public Builder instanceTypes(@Nullable List<String> instanceTypes) {
            this.instanceTypes = Codegen.ofNullable(instanceTypes);
            return this;
        }
        public Builder instanceTypes(String... instanceTypes) {
            return instanceTypes(List.of(instanceTypes));
        }
        public Builder keyPair(@Nullable Output<String> keyPair) {
            this.keyPair = keyPair;
            return this;
        }
        public Builder keyPair(@Nullable String keyPair) {
            this.keyPair = Codegen.ofNullable(keyPair);
            return this;
        }
        public Builder logging(@Nullable Output<InfrastructureConfigurationLoggingGetArgs> logging) {
            this.logging = logging;
            return this;
        }
        public Builder logging(@Nullable InfrastructureConfigurationLoggingGetArgs logging) {
            this.logging = Codegen.ofNullable(logging);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder resourceTags(@Nullable Output<Map<String,String>> resourceTags) {
            this.resourceTags = resourceTags;
            return this;
        }
        public Builder resourceTags(@Nullable Map<String,String> resourceTags) {
            this.resourceTags = Codegen.ofNullable(resourceTags);
            return this;
        }
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }
        public Builder securityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = Codegen.ofNullable(securityGroupIds);
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        public Builder snsTopicArn(@Nullable Output<String> snsTopicArn) {
            this.snsTopicArn = snsTopicArn;
            return this;
        }
        public Builder snsTopicArn(@Nullable String snsTopicArn) {
            this.snsTopicArn = Codegen.ofNullable(snsTopicArn);
            return this;
        }
        public Builder subnetId(@Nullable Output<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = Codegen.ofNullable(subnetId);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder terminateInstanceOnFailure(@Nullable Output<Boolean> terminateInstanceOnFailure) {
            this.terminateInstanceOnFailure = terminateInstanceOnFailure;
            return this;
        }
        public Builder terminateInstanceOnFailure(@Nullable Boolean terminateInstanceOnFailure) {
            this.terminateInstanceOnFailure = Codegen.ofNullable(terminateInstanceOnFailure);
            return this;
        }        public InfrastructureConfigurationState build() {
            return new InfrastructureConfigurationState(arn, dateCreated, dateUpdated, description, instanceProfileName, instanceTypes, keyPair, logging, name, resourceTags, securityGroupIds, snsTopicArn, subnetId, tags, tagsAll, terminateInstanceOnFailure);
        }
    }
}
