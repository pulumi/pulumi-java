// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProvisioningArtifactState extends com.pulumi.resources.ResourceArgs {

    public static final ProvisioningArtifactState Empty = new ProvisioningArtifactState();

    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). The default value is `en`.
     * 
     */
    @Import(name="acceptLanguage")
    private @Nullable Output<String> acceptLanguage;

    public Optional<Output<String>> acceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }

    /**
     * Whether the product version is active. Inactive provisioning artifacts are invisible to end users. End users cannot launch or update a provisioned product from an inactive provisioning artifact. Default is `true`.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Time when the provisioning artifact was created.
     * 
     */
    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
     * 
     */
    @Import(name="disableTemplateValidation")
    private @Nullable Output<Boolean> disableTemplateValidation;

    public Optional<Output<Boolean>> disableTemplateValidation() {
        return Optional.ofNullable(this.disableTemplateValidation);
    }

    /**
     * Information set by the administrator to provide guidance to end users about which provisioning artifacts to use. Valid values are `DEFAULT` and `DEPRECATED`. The default is `DEFAULT`. Users are able to make updates to a provisioned product of a deprecated version but cannot launch new provisioned products using a deprecated version.
     * 
     */
    @Import(name="guidance")
    private @Nullable Output<String> guidance;

    public Optional<Output<String>> guidance() {
        return Optional.ofNullable(this.guidance);
    }

    /**
     * Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Identifier of the product.
     * 
     */
    @Import(name="productId")
    private @Nullable Output<String> productId;

    public Optional<Output<String>> productId() {
        return Optional.ofNullable(this.productId);
    }

    /**
     * Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
     * 
     */
    @Import(name="templatePhysicalId")
    private @Nullable Output<String> templatePhysicalId;

    public Optional<Output<String>> templatePhysicalId() {
        return Optional.ofNullable(this.templatePhysicalId);
    }

    /**
     * Template source as URL of the CloudFormation template in Amazon S3.
     * 
     */
    @Import(name="templateUrl")
    private @Nullable Output<String> templateUrl;

    public Optional<Output<String>> templateUrl() {
        return Optional.ofNullable(this.templateUrl);
    }

    /**
     * Type of provisioning artifact. Valid values: `CLOUD_FORMATION_TEMPLATE`, `MARKETPLACE_AMI`, `MARKETPLACE_CAR` (Marketplace Clusters and AWS Resources).
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ProvisioningArtifactState() {}

    private ProvisioningArtifactState(ProvisioningArtifactState $) {
        this.acceptLanguage = $.acceptLanguage;
        this.active = $.active;
        this.createdTime = $.createdTime;
        this.description = $.description;
        this.disableTemplateValidation = $.disableTemplateValidation;
        this.guidance = $.guidance;
        this.name = $.name;
        this.productId = $.productId;
        this.templatePhysicalId = $.templatePhysicalId;
        this.templateUrl = $.templateUrl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProvisioningArtifactState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProvisioningArtifactState $;

        public Builder() {
            $ = new ProvisioningArtifactState();
        }

        public Builder(ProvisioningArtifactState defaults) {
            $ = new ProvisioningArtifactState(Objects.requireNonNull(defaults));
        }

        public Builder acceptLanguage(@Nullable Output<String> acceptLanguage) {
            $.acceptLanguage = acceptLanguage;
            return this;
        }

        public Builder acceptLanguage(String acceptLanguage) {
            return acceptLanguage(Output.of(acceptLanguage));
        }

        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder disableTemplateValidation(@Nullable Output<Boolean> disableTemplateValidation) {
            $.disableTemplateValidation = disableTemplateValidation;
            return this;
        }

        public Builder disableTemplateValidation(Boolean disableTemplateValidation) {
            return disableTemplateValidation(Output.of(disableTemplateValidation));
        }

        public Builder guidance(@Nullable Output<String> guidance) {
            $.guidance = guidance;
            return this;
        }

        public Builder guidance(String guidance) {
            return guidance(Output.of(guidance));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder productId(@Nullable Output<String> productId) {
            $.productId = productId;
            return this;
        }

        public Builder productId(String productId) {
            return productId(Output.of(productId));
        }

        public Builder templatePhysicalId(@Nullable Output<String> templatePhysicalId) {
            $.templatePhysicalId = templatePhysicalId;
            return this;
        }

        public Builder templatePhysicalId(String templatePhysicalId) {
            return templatePhysicalId(Output.of(templatePhysicalId));
        }

        public Builder templateUrl(@Nullable Output<String> templateUrl) {
            $.templateUrl = templateUrl;
            return this;
        }

        public Builder templateUrl(String templateUrl) {
            return templateUrl(Output.of(templateUrl));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ProvisioningArtifactState build() {
            return $;
        }
    }

}
