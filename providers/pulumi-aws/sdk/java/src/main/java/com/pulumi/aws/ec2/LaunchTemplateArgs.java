// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.LaunchTemplateBlockDeviceMappingArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateCapacityReservationSpecificationArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateCpuOptionsArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateCreditSpecificationArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateElasticGpuSpecificationArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateElasticInferenceAcceleratorArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateEnclaveOptionsArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateHibernationOptionsArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateIamInstanceProfileArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateInstanceMarketOptionsArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateLicenseSpecificationArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateMetadataOptionsArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateMonitoringArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateNetworkInterfaceArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplatePlacementArgs;
import com.pulumi.aws.ec2.inputs.LaunchTemplateTagSpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LaunchTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final LaunchTemplateArgs Empty = new LaunchTemplateArgs();

    /**
     * Specify volumes to attach to the instance besides the volumes specified by the AMI.
     * See Block Devices below for details.
     * 
     */
    @Import(name="blockDeviceMappings")
    private @Nullable Output<List<LaunchTemplateBlockDeviceMappingArgs>> blockDeviceMappings;

    public Optional<Output<List<LaunchTemplateBlockDeviceMappingArgs>>> blockDeviceMappings() {
        return Optional.ofNullable(this.blockDeviceMappings);
    }

    /**
     * Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
     * 
     */
    @Import(name="capacityReservationSpecification")
    private @Nullable Output<LaunchTemplateCapacityReservationSpecificationArgs> capacityReservationSpecification;

    public Optional<Output<LaunchTemplateCapacityReservationSpecificationArgs>> capacityReservationSpecification() {
        return Optional.ofNullable(this.capacityReservationSpecification);
    }

    /**
     * The CPU options for the instance. See CPU Options below for more details.
     * 
     */
    @Import(name="cpuOptions")
    private @Nullable Output<LaunchTemplateCpuOptionsArgs> cpuOptions;

    public Optional<Output<LaunchTemplateCpuOptionsArgs>> cpuOptions() {
        return Optional.ofNullable(this.cpuOptions);
    }

    /**
     * Customize the credit specification of the instance. See Credit
     * Specification below for more details.
     * 
     */
    @Import(name="creditSpecification")
    private @Nullable Output<LaunchTemplateCreditSpecificationArgs> creditSpecification;

    public Optional<Output<LaunchTemplateCreditSpecificationArgs>> creditSpecification() {
        return Optional.ofNullable(this.creditSpecification);
    }

    /**
     * Default Version of the launch template.
     * 
     */
    @Import(name="defaultVersion")
    private @Nullable Output<Integer> defaultVersion;

    public Optional<Output<Integer>> defaultVersion() {
        return Optional.ofNullable(this.defaultVersion);
    }

    /**
     * Description of the launch template.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * If `true`, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
     * 
     */
    @Import(name="disableApiTermination")
    private @Nullable Output<Boolean> disableApiTermination;

    public Optional<Output<Boolean>> disableApiTermination() {
        return Optional.ofNullable(this.disableApiTermination);
    }

    /**
     * If `true`, the launched EC2 instance will be EBS-optimized.
     * 
     */
    @Import(name="ebsOptimized")
    private @Nullable Output<String> ebsOptimized;

    public Optional<Output<String>> ebsOptimized() {
        return Optional.ofNullable(this.ebsOptimized);
    }

    /**
     * The elastic GPU to attach to the instance. See Elastic GPU
     * below for more details.
     * 
     */
    @Import(name="elasticGpuSpecifications")
    private @Nullable Output<List<LaunchTemplateElasticGpuSpecificationArgs>> elasticGpuSpecifications;

    public Optional<Output<List<LaunchTemplateElasticGpuSpecificationArgs>>> elasticGpuSpecifications() {
        return Optional.ofNullable(this.elasticGpuSpecifications);
    }

    /**
     * Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
     * 
     */
    @Import(name="elasticInferenceAccelerator")
    private @Nullable Output<LaunchTemplateElasticInferenceAcceleratorArgs> elasticInferenceAccelerator;

    public Optional<Output<LaunchTemplateElasticInferenceAcceleratorArgs>> elasticInferenceAccelerator() {
        return Optional.ofNullable(this.elasticInferenceAccelerator);
    }

    /**
     * Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
     * 
     */
    @Import(name="enclaveOptions")
    private @Nullable Output<LaunchTemplateEnclaveOptionsArgs> enclaveOptions;

    public Optional<Output<LaunchTemplateEnclaveOptionsArgs>> enclaveOptions() {
        return Optional.ofNullable(this.enclaveOptions);
    }

    /**
     * The hibernation options for the instance. See Hibernation Options below for more details.
     * 
     */
    @Import(name="hibernationOptions")
    private @Nullable Output<LaunchTemplateHibernationOptionsArgs> hibernationOptions;

    public Optional<Output<LaunchTemplateHibernationOptionsArgs>> hibernationOptions() {
        return Optional.ofNullable(this.hibernationOptions);
    }

    /**
     * The IAM Instance Profile to launch the instance with. See Instance Profile
     * below for more details.
     * 
     */
    @Import(name="iamInstanceProfile")
    private @Nullable Output<LaunchTemplateIamInstanceProfileArgs> iamInstanceProfile;

    public Optional<Output<LaunchTemplateIamInstanceProfileArgs>> iamInstanceProfile() {
        return Optional.ofNullable(this.iamInstanceProfile);
    }

    /**
     * The AMI from which to launch the instance.
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    /**
     * Shutdown behavior for the instance. Can be `stop` or `terminate`.
     * (Default: `stop`).
     * 
     */
    @Import(name="instanceInitiatedShutdownBehavior")
    private @Nullable Output<String> instanceInitiatedShutdownBehavior;

    public Optional<Output<String>> instanceInitiatedShutdownBehavior() {
        return Optional.ofNullable(this.instanceInitiatedShutdownBehavior);
    }

    /**
     * The market (purchasing) option for the instance. See Market Options
     * below for details.
     * 
     */
    @Import(name="instanceMarketOptions")
    private @Nullable Output<LaunchTemplateInstanceMarketOptionsArgs> instanceMarketOptions;

    public Optional<Output<LaunchTemplateInstanceMarketOptionsArgs>> instanceMarketOptions() {
        return Optional.ofNullable(this.instanceMarketOptions);
    }

    /**
     * The type of the instance.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * The kernel ID.
     * 
     */
    @Import(name="kernelId")
    private @Nullable Output<String> kernelId;

    public Optional<Output<String>> kernelId() {
        return Optional.ofNullable(this.kernelId);
    }

    /**
     * The key name to use for the instance.
     * 
     */
    @Import(name="keyName")
    private @Nullable Output<String> keyName;

    public Optional<Output<String>> keyName() {
        return Optional.ofNullable(this.keyName);
    }

    /**
     * A list of license specifications to associate with. See License Specification below for more details.
     * 
     */
    @Import(name="licenseSpecifications")
    private @Nullable Output<List<LaunchTemplateLicenseSpecificationArgs>> licenseSpecifications;

    public Optional<Output<List<LaunchTemplateLicenseSpecificationArgs>>> licenseSpecifications() {
        return Optional.ofNullable(this.licenseSpecifications);
    }

    /**
     * Customize the metadata options for the instance. See Metadata Options below for more details.
     * 
     */
    @Import(name="metadataOptions")
    private @Nullable Output<LaunchTemplateMetadataOptionsArgs> metadataOptions;

    public Optional<Output<LaunchTemplateMetadataOptionsArgs>> metadataOptions() {
        return Optional.ofNullable(this.metadataOptions);
    }

    /**
     * The monitoring option for the instance. See Monitoring below for more details.
     * 
     */
    @Import(name="monitoring")
    private @Nullable Output<LaunchTemplateMonitoringArgs> monitoring;

    public Optional<Output<LaunchTemplateMonitoringArgs>> monitoring() {
        return Optional.ofNullable(this.monitoring);
    }

    /**
     * The name of the launch template. If you leave this blank, this provider will auto-generate a unique name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * Customize network interfaces to be attached at instance boot time. See Network
     * Interfaces below for more details.
     * 
     */
    @Import(name="networkInterfaces")
    private @Nullable Output<List<LaunchTemplateNetworkInterfaceArgs>> networkInterfaces;

    public Optional<Output<List<LaunchTemplateNetworkInterfaceArgs>>> networkInterfaces() {
        return Optional.ofNullable(this.networkInterfaces);
    }

    /**
     * The placement of the instance. See Placement below for more details.
     * 
     */
    @Import(name="placement")
    private @Nullable Output<LaunchTemplatePlacementArgs> placement;

    public Optional<Output<LaunchTemplatePlacementArgs>> placement() {
        return Optional.ofNullable(this.placement);
    }

    /**
     * The ID of the RAM disk.
     * 
     */
    @Import(name="ramDiskId")
    private @Nullable Output<String> ramDiskId;

    public Optional<Output<String>> ramDiskId() {
        return Optional.ofNullable(this.ramDiskId);
    }

    /**
     * A list of security group names to associate with. If you are creating Instances in a VPC, use
     * `vpc_security_group_ids` instead.
     * 
     */
    @Import(name="securityGroupNames")
    private @Nullable Output<List<String>> securityGroupNames;

    public Optional<Output<List<String>>> securityGroupNames() {
        return Optional.ofNullable(this.securityGroupNames);
    }

    /**
     * The tags to apply to the resources during launch. See Tag Specifications below for more details.
     * 
     */
    @Import(name="tagSpecifications")
    private @Nullable Output<List<LaunchTemplateTagSpecificationArgs>> tagSpecifications;

    public Optional<Output<List<LaunchTemplateTagSpecificationArgs>>> tagSpecifications() {
        return Optional.ofNullable(this.tagSpecifications);
    }

    /**
     * A map of tags to assign to the launch template. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Whether to update Default Version each update. Conflicts with `default_version`.
     * 
     */
    @Import(name="updateDefaultVersion")
    private @Nullable Output<Boolean> updateDefaultVersion;

    public Optional<Output<Boolean>> updateDefaultVersion() {
        return Optional.ofNullable(this.updateDefaultVersion);
    }

    /**
     * The Base64-encoded user data to provide when launching the instance.
     * 
     */
    @Import(name="userData")
    private @Nullable Output<String> userData;

    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    /**
     * A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
     * 
     */
    @Import(name="vpcSecurityGroupIds")
    private @Nullable Output<List<String>> vpcSecurityGroupIds;

    public Optional<Output<List<String>>> vpcSecurityGroupIds() {
        return Optional.ofNullable(this.vpcSecurityGroupIds);
    }

    private LaunchTemplateArgs() {}

    private LaunchTemplateArgs(LaunchTemplateArgs $) {
        this.blockDeviceMappings = $.blockDeviceMappings;
        this.capacityReservationSpecification = $.capacityReservationSpecification;
        this.cpuOptions = $.cpuOptions;
        this.creditSpecification = $.creditSpecification;
        this.defaultVersion = $.defaultVersion;
        this.description = $.description;
        this.disableApiTermination = $.disableApiTermination;
        this.ebsOptimized = $.ebsOptimized;
        this.elasticGpuSpecifications = $.elasticGpuSpecifications;
        this.elasticInferenceAccelerator = $.elasticInferenceAccelerator;
        this.enclaveOptions = $.enclaveOptions;
        this.hibernationOptions = $.hibernationOptions;
        this.iamInstanceProfile = $.iamInstanceProfile;
        this.imageId = $.imageId;
        this.instanceInitiatedShutdownBehavior = $.instanceInitiatedShutdownBehavior;
        this.instanceMarketOptions = $.instanceMarketOptions;
        this.instanceType = $.instanceType;
        this.kernelId = $.kernelId;
        this.keyName = $.keyName;
        this.licenseSpecifications = $.licenseSpecifications;
        this.metadataOptions = $.metadataOptions;
        this.monitoring = $.monitoring;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.networkInterfaces = $.networkInterfaces;
        this.placement = $.placement;
        this.ramDiskId = $.ramDiskId;
        this.securityGroupNames = $.securityGroupNames;
        this.tagSpecifications = $.tagSpecifications;
        this.tags = $.tags;
        this.updateDefaultVersion = $.updateDefaultVersion;
        this.userData = $.userData;
        this.vpcSecurityGroupIds = $.vpcSecurityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LaunchTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LaunchTemplateArgs $;

        public Builder() {
            $ = new LaunchTemplateArgs();
        }

        public Builder(LaunchTemplateArgs defaults) {
            $ = new LaunchTemplateArgs(Objects.requireNonNull(defaults));
        }

        public Builder blockDeviceMappings(@Nullable Output<List<LaunchTemplateBlockDeviceMappingArgs>> blockDeviceMappings) {
            $.blockDeviceMappings = blockDeviceMappings;
            return this;
        }

        public Builder blockDeviceMappings(List<LaunchTemplateBlockDeviceMappingArgs> blockDeviceMappings) {
            return blockDeviceMappings(Output.of(blockDeviceMappings));
        }

        public Builder blockDeviceMappings(LaunchTemplateBlockDeviceMappingArgs... blockDeviceMappings) {
            return blockDeviceMappings(List.of(blockDeviceMappings));
        }

        public Builder capacityReservationSpecification(@Nullable Output<LaunchTemplateCapacityReservationSpecificationArgs> capacityReservationSpecification) {
            $.capacityReservationSpecification = capacityReservationSpecification;
            return this;
        }

        public Builder capacityReservationSpecification(LaunchTemplateCapacityReservationSpecificationArgs capacityReservationSpecification) {
            return capacityReservationSpecification(Output.of(capacityReservationSpecification));
        }

        public Builder cpuOptions(@Nullable Output<LaunchTemplateCpuOptionsArgs> cpuOptions) {
            $.cpuOptions = cpuOptions;
            return this;
        }

        public Builder cpuOptions(LaunchTemplateCpuOptionsArgs cpuOptions) {
            return cpuOptions(Output.of(cpuOptions));
        }

        public Builder creditSpecification(@Nullable Output<LaunchTemplateCreditSpecificationArgs> creditSpecification) {
            $.creditSpecification = creditSpecification;
            return this;
        }

        public Builder creditSpecification(LaunchTemplateCreditSpecificationArgs creditSpecification) {
            return creditSpecification(Output.of(creditSpecification));
        }

        public Builder defaultVersion(@Nullable Output<Integer> defaultVersion) {
            $.defaultVersion = defaultVersion;
            return this;
        }

        public Builder defaultVersion(Integer defaultVersion) {
            return defaultVersion(Output.of(defaultVersion));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder disableApiTermination(@Nullable Output<Boolean> disableApiTermination) {
            $.disableApiTermination = disableApiTermination;
            return this;
        }

        public Builder disableApiTermination(Boolean disableApiTermination) {
            return disableApiTermination(Output.of(disableApiTermination));
        }

        public Builder ebsOptimized(@Nullable Output<String> ebsOptimized) {
            $.ebsOptimized = ebsOptimized;
            return this;
        }

        public Builder ebsOptimized(String ebsOptimized) {
            return ebsOptimized(Output.of(ebsOptimized));
        }

        public Builder elasticGpuSpecifications(@Nullable Output<List<LaunchTemplateElasticGpuSpecificationArgs>> elasticGpuSpecifications) {
            $.elasticGpuSpecifications = elasticGpuSpecifications;
            return this;
        }

        public Builder elasticGpuSpecifications(List<LaunchTemplateElasticGpuSpecificationArgs> elasticGpuSpecifications) {
            return elasticGpuSpecifications(Output.of(elasticGpuSpecifications));
        }

        public Builder elasticGpuSpecifications(LaunchTemplateElasticGpuSpecificationArgs... elasticGpuSpecifications) {
            return elasticGpuSpecifications(List.of(elasticGpuSpecifications));
        }

        public Builder elasticInferenceAccelerator(@Nullable Output<LaunchTemplateElasticInferenceAcceleratorArgs> elasticInferenceAccelerator) {
            $.elasticInferenceAccelerator = elasticInferenceAccelerator;
            return this;
        }

        public Builder elasticInferenceAccelerator(LaunchTemplateElasticInferenceAcceleratorArgs elasticInferenceAccelerator) {
            return elasticInferenceAccelerator(Output.of(elasticInferenceAccelerator));
        }

        public Builder enclaveOptions(@Nullable Output<LaunchTemplateEnclaveOptionsArgs> enclaveOptions) {
            $.enclaveOptions = enclaveOptions;
            return this;
        }

        public Builder enclaveOptions(LaunchTemplateEnclaveOptionsArgs enclaveOptions) {
            return enclaveOptions(Output.of(enclaveOptions));
        }

        public Builder hibernationOptions(@Nullable Output<LaunchTemplateHibernationOptionsArgs> hibernationOptions) {
            $.hibernationOptions = hibernationOptions;
            return this;
        }

        public Builder hibernationOptions(LaunchTemplateHibernationOptionsArgs hibernationOptions) {
            return hibernationOptions(Output.of(hibernationOptions));
        }

        public Builder iamInstanceProfile(@Nullable Output<LaunchTemplateIamInstanceProfileArgs> iamInstanceProfile) {
            $.iamInstanceProfile = iamInstanceProfile;
            return this;
        }

        public Builder iamInstanceProfile(LaunchTemplateIamInstanceProfileArgs iamInstanceProfile) {
            return iamInstanceProfile(Output.of(iamInstanceProfile));
        }

        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        public Builder instanceInitiatedShutdownBehavior(@Nullable Output<String> instanceInitiatedShutdownBehavior) {
            $.instanceInitiatedShutdownBehavior = instanceInitiatedShutdownBehavior;
            return this;
        }

        public Builder instanceInitiatedShutdownBehavior(String instanceInitiatedShutdownBehavior) {
            return instanceInitiatedShutdownBehavior(Output.of(instanceInitiatedShutdownBehavior));
        }

        public Builder instanceMarketOptions(@Nullable Output<LaunchTemplateInstanceMarketOptionsArgs> instanceMarketOptions) {
            $.instanceMarketOptions = instanceMarketOptions;
            return this;
        }

        public Builder instanceMarketOptions(LaunchTemplateInstanceMarketOptionsArgs instanceMarketOptions) {
            return instanceMarketOptions(Output.of(instanceMarketOptions));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder kernelId(@Nullable Output<String> kernelId) {
            $.kernelId = kernelId;
            return this;
        }

        public Builder kernelId(String kernelId) {
            return kernelId(Output.of(kernelId));
        }

        public Builder keyName(@Nullable Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        public Builder licenseSpecifications(@Nullable Output<List<LaunchTemplateLicenseSpecificationArgs>> licenseSpecifications) {
            $.licenseSpecifications = licenseSpecifications;
            return this;
        }

        public Builder licenseSpecifications(List<LaunchTemplateLicenseSpecificationArgs> licenseSpecifications) {
            return licenseSpecifications(Output.of(licenseSpecifications));
        }

        public Builder licenseSpecifications(LaunchTemplateLicenseSpecificationArgs... licenseSpecifications) {
            return licenseSpecifications(List.of(licenseSpecifications));
        }

        public Builder metadataOptions(@Nullable Output<LaunchTemplateMetadataOptionsArgs> metadataOptions) {
            $.metadataOptions = metadataOptions;
            return this;
        }

        public Builder metadataOptions(LaunchTemplateMetadataOptionsArgs metadataOptions) {
            return metadataOptions(Output.of(metadataOptions));
        }

        public Builder monitoring(@Nullable Output<LaunchTemplateMonitoringArgs> monitoring) {
            $.monitoring = monitoring;
            return this;
        }

        public Builder monitoring(LaunchTemplateMonitoringArgs monitoring) {
            return monitoring(Output.of(monitoring));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder networkInterfaces(@Nullable Output<List<LaunchTemplateNetworkInterfaceArgs>> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        public Builder networkInterfaces(List<LaunchTemplateNetworkInterfaceArgs> networkInterfaces) {
            return networkInterfaces(Output.of(networkInterfaces));
        }

        public Builder networkInterfaces(LaunchTemplateNetworkInterfaceArgs... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }

        public Builder placement(@Nullable Output<LaunchTemplatePlacementArgs> placement) {
            $.placement = placement;
            return this;
        }

        public Builder placement(LaunchTemplatePlacementArgs placement) {
            return placement(Output.of(placement));
        }

        public Builder ramDiskId(@Nullable Output<String> ramDiskId) {
            $.ramDiskId = ramDiskId;
            return this;
        }

        public Builder ramDiskId(String ramDiskId) {
            return ramDiskId(Output.of(ramDiskId));
        }

        public Builder securityGroupNames(@Nullable Output<List<String>> securityGroupNames) {
            $.securityGroupNames = securityGroupNames;
            return this;
        }

        public Builder securityGroupNames(List<String> securityGroupNames) {
            return securityGroupNames(Output.of(securityGroupNames));
        }

        public Builder securityGroupNames(String... securityGroupNames) {
            return securityGroupNames(List.of(securityGroupNames));
        }

        public Builder tagSpecifications(@Nullable Output<List<LaunchTemplateTagSpecificationArgs>> tagSpecifications) {
            $.tagSpecifications = tagSpecifications;
            return this;
        }

        public Builder tagSpecifications(List<LaunchTemplateTagSpecificationArgs> tagSpecifications) {
            return tagSpecifications(Output.of(tagSpecifications));
        }

        public Builder tagSpecifications(LaunchTemplateTagSpecificationArgs... tagSpecifications) {
            return tagSpecifications(List.of(tagSpecifications));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder updateDefaultVersion(@Nullable Output<Boolean> updateDefaultVersion) {
            $.updateDefaultVersion = updateDefaultVersion;
            return this;
        }

        public Builder updateDefaultVersion(Boolean updateDefaultVersion) {
            return updateDefaultVersion(Output.of(updateDefaultVersion));
        }

        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        public Builder vpcSecurityGroupIds(@Nullable Output<List<String>> vpcSecurityGroupIds) {
            $.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return this;
        }

        public Builder vpcSecurityGroupIds(List<String> vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(Output.of(vpcSecurityGroupIds));
        }

        public Builder vpcSecurityGroupIds(String... vpcSecurityGroupIds) {
            return vpcSecurityGroupIds(List.of(vpcSecurityGroupIds));
        }

        public LaunchTemplateArgs build() {
            return $;
        }
    }

}
