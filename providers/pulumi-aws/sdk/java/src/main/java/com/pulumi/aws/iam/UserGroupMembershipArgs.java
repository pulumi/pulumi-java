// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class UserGroupMembershipArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserGroupMembershipArgs Empty = new UserGroupMembershipArgs();

    /**
     * A list of IAM Groups to add the user to
     * 
     */
    @Import(name="groups", required=true)
      private final Output<List<String>> groups;

    public Output<List<String>> groups() {
        return this.groups;
    }

    /**
     * The name of the IAM User to add to groups
     * 
     */
    @Import(name="user", required=true)
      private final Output<String> user;

    public Output<String> user() {
        return this.user;
    }

    public UserGroupMembershipArgs(
        Output<List<String>> groups,
        Output<String> user) {
        this.groups = Objects.requireNonNull(groups, "expected parameter 'groups' to be non-null");
        this.user = Objects.requireNonNull(user, "expected parameter 'user' to be non-null");
    }

    private UserGroupMembershipArgs() {
        this.groups = Codegen.empty();
        this.user = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserGroupMembershipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> groups;
        private Output<String> user;

        public Builder() {
    	      // Empty
        }

        public Builder(UserGroupMembershipArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groups = defaults.groups;
    	      this.user = defaults.user;
        }

        public Builder groups(Output<List<String>> groups) {
            this.groups = Objects.requireNonNull(groups);
            return this;
        }
        public Builder groups(List<String> groups) {
            this.groups = Output.of(Objects.requireNonNull(groups));
            return this;
        }
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }
        public Builder user(Output<String> user) {
            this.user = Objects.requireNonNull(user);
            return this;
        }
        public Builder user(String user) {
            this.user = Output.of(Objects.requireNonNull(user));
            return this;
        }        public UserGroupMembershipArgs build() {
            return new UserGroupMembershipArgs(groups, user);
        }
    }
}
