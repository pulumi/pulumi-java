// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.backup.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VaultPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final VaultPolicyState Empty = new VaultPolicyState();

    /**
     * The ARN of the vault.
     * 
     */
    @Import(name="backupVaultArn")
      private final @Nullable Output<String> backupVaultArn;

    public Output<String> backupVaultArn() {
        return this.backupVaultArn == null ? Codegen.empty() : this.backupVaultArn;
    }

    /**
     * Name of the backup vault to add policy for.
     * 
     */
    @Import(name="backupVaultName")
      private final @Nullable Output<String> backupVaultName;

    public Output<String> backupVaultName() {
        return this.backupVaultName == null ? Codegen.empty() : this.backupVaultName;
    }

    /**
     * The backup vault access policy document in JSON format.
     * 
     */
    @Import(name="policy")
      private final @Nullable Output<String> policy;

    public Output<String> policy() {
        return this.policy == null ? Codegen.empty() : this.policy;
    }

    public VaultPolicyState(
        @Nullable Output<String> backupVaultArn,
        @Nullable Output<String> backupVaultName,
        @Nullable Output<String> policy) {
        this.backupVaultArn = backupVaultArn;
        this.backupVaultName = backupVaultName;
        this.policy = policy;
    }

    private VaultPolicyState() {
        this.backupVaultArn = Codegen.empty();
        this.backupVaultName = Codegen.empty();
        this.policy = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VaultPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> backupVaultArn;
        private @Nullable Output<String> backupVaultName;
        private @Nullable Output<String> policy;

        public Builder() {
    	      // Empty
        }

        public Builder(VaultPolicyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupVaultArn = defaults.backupVaultArn;
    	      this.backupVaultName = defaults.backupVaultName;
    	      this.policy = defaults.policy;
        }

        public Builder backupVaultArn(@Nullable Output<String> backupVaultArn) {
            this.backupVaultArn = backupVaultArn;
            return this;
        }
        public Builder backupVaultArn(@Nullable String backupVaultArn) {
            this.backupVaultArn = Codegen.ofNullable(backupVaultArn);
            return this;
        }
        public Builder backupVaultName(@Nullable Output<String> backupVaultName) {
            this.backupVaultName = backupVaultName;
            return this;
        }
        public Builder backupVaultName(@Nullable String backupVaultName) {
            this.backupVaultName = Codegen.ofNullable(backupVaultName);
            return this;
        }
        public Builder policy(@Nullable Output<String> policy) {
            this.policy = policy;
            return this;
        }
        public Builder policy(@Nullable String policy) {
            this.policy = Codegen.ofNullable(policy);
            return this;
        }        public VaultPolicyState build() {
            return new VaultPolicyState(backupVaultArn, backupVaultName, policy);
        }
    }
}
