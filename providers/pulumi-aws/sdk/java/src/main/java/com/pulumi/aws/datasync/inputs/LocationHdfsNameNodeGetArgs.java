// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class LocationHdfsNameNodeGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocationHdfsNameNodeGetArgs Empty = new LocationHdfsNameNodeGetArgs();

    /**
     * The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that&#39;s installed on-premises uses this hostname to communicate with the NameNode in the network.
     * 
     */
    @Import(name="hostname", required=true)
    private Output<String> hostname;

    public Output<String> hostname() {
        return this.hostname;
    }

    /**
     * The port that the NameNode uses to listen to client requests.
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    public Output<Integer> port() {
        return this.port;
    }

    private LocationHdfsNameNodeGetArgs() {}

    private LocationHdfsNameNodeGetArgs(LocationHdfsNameNodeGetArgs $) {
        this.hostname = $.hostname;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocationHdfsNameNodeGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocationHdfsNameNodeGetArgs $;

        public Builder() {
            $ = new LocationHdfsNameNodeGetArgs();
        }

        public Builder(LocationHdfsNameNodeGetArgs defaults) {
            $ = new LocationHdfsNameNodeGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public LocationHdfsNameNodeGetArgs build() {
            $.hostname = Objects.requireNonNull($.hostname, "expected parameter 'hostname' to be non-null");
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            return $;
        }
    }

}
