// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.util.Objects;


public final class ProjectSecondarySourceGitSubmodulesConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectSecondarySourceGitSubmodulesConfigGetArgs Empty = new ProjectSecondarySourceGitSubmodulesConfigGetArgs();

    /**
     * Whether to fetch Git submodules for the AWS CodeBuild build project.
     * 
     */
    @Import(name="fetchSubmodules", required=true)
      private final Output<Boolean> fetchSubmodules;

    public Output<Boolean> fetchSubmodules() {
        return this.fetchSubmodules;
    }

    public ProjectSecondarySourceGitSubmodulesConfigGetArgs(Output<Boolean> fetchSubmodules) {
        this.fetchSubmodules = Objects.requireNonNull(fetchSubmodules, "expected parameter 'fetchSubmodules' to be non-null");
    }

    private ProjectSecondarySourceGitSubmodulesConfigGetArgs() {
        this.fetchSubmodules = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectSecondarySourceGitSubmodulesConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> fetchSubmodules;

        public Builder() {
    	      // Empty
        }

        public Builder(ProjectSecondarySourceGitSubmodulesConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fetchSubmodules = defaults.fetchSubmodules;
        }

        public Builder fetchSubmodules(Output<Boolean> fetchSubmodules) {
            this.fetchSubmodules = Objects.requireNonNull(fetchSubmodules);
            return this;
        }
        public Builder fetchSubmodules(Boolean fetchSubmodules) {
            this.fetchSubmodules = Output.of(Objects.requireNonNull(fetchSubmodules));
            return this;
        }        public ProjectSecondarySourceGitSubmodulesConfigGetArgs build() {
            return new ProjectSecondarySourceGitSubmodulesConfigGetArgs(fetchSubmodules);
        }
    }
}
