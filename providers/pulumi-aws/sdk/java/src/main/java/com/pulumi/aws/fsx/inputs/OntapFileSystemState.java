// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.fsx.inputs;

import com.pulumi.aws.fsx.inputs.OntapFileSystemDiskIopsConfigurationGetArgs;
import com.pulumi.aws.fsx.inputs.OntapFileSystemEndpointGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OntapFileSystemState extends com.pulumi.resources.ResourceArgs {

    public static final OntapFileSystemState Empty = new OntapFileSystemState();

    /**
     * Amazon Resource Name of the file system.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
     * 
     */
    @Import(name="automaticBackupRetentionDays")
      private final @Nullable Output<Integer> automaticBackupRetentionDays;

    public Output<Integer> automaticBackupRetentionDays() {
        return this.automaticBackupRetentionDays == null ? Codegen.empty() : this.automaticBackupRetentionDays;
    }

    /**
     * A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automatic_backup_retention_days` to be set.
     * 
     */
    @Import(name="dailyAutomaticBackupStartTime")
      private final @Nullable Output<String> dailyAutomaticBackupStartTime;

    public Output<String> dailyAutomaticBackupStartTime() {
        return this.dailyAutomaticBackupStartTime == null ? Codegen.empty() : this.dailyAutomaticBackupStartTime;
    }

    /**
     * - The filesystem deployment type. Only `MULTI_AZ_1` is supported.
     * 
     */
    @Import(name="deploymentType")
      private final @Nullable Output<String> deploymentType;

    public Output<String> deploymentType() {
        return this.deploymentType == null ? Codegen.empty() : this.deploymentType;
    }

    /**
     * The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system. See Disk Iops Configuration Below.
     * 
     */
    @Import(name="diskIopsConfiguration")
      private final @Nullable Output<OntapFileSystemDiskIopsConfigurationGetArgs> diskIopsConfiguration;

    public Output<OntapFileSystemDiskIopsConfigurationGetArgs> diskIopsConfiguration() {
        return this.diskIopsConfiguration == null ? Codegen.empty() : this.diskIopsConfiguration;
    }

    /**
     * The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
     * 
     */
    @Import(name="dnsName")
      private final @Nullable Output<String> dnsName;

    public Output<String> dnsName() {
        return this.dnsName == null ? Codegen.empty() : this.dnsName;
    }

    /**
     * Specifies the IP address range in which the endpoints to access your file system will be created. By default, Amazon FSx selects an unused IP address range for you from the 198.19.* range.
     * 
     */
    @Import(name="endpointIpAddressRange")
      private final @Nullable Output<String> endpointIpAddressRange;

    public Output<String> endpointIpAddressRange() {
        return this.endpointIpAddressRange == null ? Codegen.empty() : this.endpointIpAddressRange;
    }

    /**
     * The endpoints that are used to access data or to manage the file system using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
     * 
     */
    @Import(name="endpoints")
      private final @Nullable Output<List<OntapFileSystemEndpointGetArgs>> endpoints;

    public Output<List<OntapFileSystemEndpointGetArgs>> endpoints() {
        return this.endpoints == null ? Codegen.empty() : this.endpoints;
    }

    /**
     * The ONTAP administrative password for the fsxadmin user that you can use to administer your file system using the ONTAP CLI and REST API.
     * 
     */
    @Import(name="fsxAdminPassword")
      private final @Nullable Output<String> fsxAdminPassword;

    public Output<String> fsxAdminPassword() {
        return this.fsxAdminPassword == null ? Codegen.empty() : this.fsxAdminPassword;
    }

    /**
     * ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
     * 
     */
    @Import(name="kmsKeyId")
      private final @Nullable Output<String> kmsKeyId;

    public Output<String> kmsKeyId() {
        return this.kmsKeyId == null ? Codegen.empty() : this.kmsKeyId;
    }

    /**
     * Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
     * 
     */
    @Import(name="networkInterfaceIds")
      private final @Nullable Output<List<String>> networkInterfaceIds;

    public Output<List<String>> networkInterfaceIds() {
        return this.networkInterfaceIds == null ? Codegen.empty() : this.networkInterfaceIds;
    }

    /**
     * AWS account identifier that created the file system.
     * 
     */
    @Import(name="ownerId")
      private final @Nullable Output<String> ownerId;

    public Output<String> ownerId() {
        return this.ownerId == null ? Codegen.empty() : this.ownerId;
    }

    /**
     * The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).
     * 
     */
    @Import(name="preferredSubnetId")
      private final @Nullable Output<String> preferredSubnetId;

    public Output<String> preferredSubnetId() {
        return this.preferredSubnetId == null ? Codegen.empty() : this.preferredSubnetId;
    }

    /**
     * Specifies the VPC route tables in which your file system's endpoints will be created. You should specify all VPC route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
     * 
     */
    @Import(name="routeTableIds")
      private final @Nullable Output<List<String>> routeTableIds;

    public Output<List<String>> routeTableIds() {
        return this.routeTableIds == null ? Codegen.empty() : this.routeTableIds;
    }

    /**
     * A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
     * 
     */
    @Import(name="securityGroupIds")
      private final @Nullable Output<List<String>> securityGroupIds;

    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds == null ? Codegen.empty() : this.securityGroupIds;
    }

    /**
     * The storage capacity (GiB) of the file system. Valid values between `1024` and `196608`.
     * 
     */
    @Import(name="storageCapacity")
      private final @Nullable Output<Integer> storageCapacity;

    public Output<Integer> storageCapacity() {
        return this.storageCapacity == null ? Codegen.empty() : this.storageCapacity;
    }

    /**
     * - The filesystem storage type. defaults to `SSD`.
     * 
     */
    @Import(name="storageType")
      private final @Nullable Output<String> storageType;

    public Output<String> storageType() {
        return this.storageType == null ? Codegen.empty() : this.storageType;
    }

    /**
     * A list of IDs for the subnets that the file system will be accessible from. Exactly 2 subnets need to be provided.
     * 
     */
    @Import(name="subnetIds")
      private final @Nullable Output<List<String>> subnetIds;

    public Output<List<String>> subnetIds() {
        return this.subnetIds == null ? Codegen.empty() : this.subnetIds;
    }

    /**
     * A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    @Import(name="throughputCapacity")
      private final @Nullable Output<Integer> throughputCapacity;

    public Output<Integer> throughputCapacity() {
        return this.throughputCapacity == null ? Codegen.empty() : this.throughputCapacity;
    }

    /**
     * Identifier of the Virtual Private Cloud for the file system.
     * 
     */
    @Import(name="vpcId")
      private final @Nullable Output<String> vpcId;

    public Output<String> vpcId() {
        return this.vpcId == null ? Codegen.empty() : this.vpcId;
    }

    /**
     * The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
     * 
     */
    @Import(name="weeklyMaintenanceStartTime")
      private final @Nullable Output<String> weeklyMaintenanceStartTime;

    public Output<String> weeklyMaintenanceStartTime() {
        return this.weeklyMaintenanceStartTime == null ? Codegen.empty() : this.weeklyMaintenanceStartTime;
    }

    public OntapFileSystemState(
        @Nullable Output<String> arn,
        @Nullable Output<Integer> automaticBackupRetentionDays,
        @Nullable Output<String> dailyAutomaticBackupStartTime,
        @Nullable Output<String> deploymentType,
        @Nullable Output<OntapFileSystemDiskIopsConfigurationGetArgs> diskIopsConfiguration,
        @Nullable Output<String> dnsName,
        @Nullable Output<String> endpointIpAddressRange,
        @Nullable Output<List<OntapFileSystemEndpointGetArgs>> endpoints,
        @Nullable Output<String> fsxAdminPassword,
        @Nullable Output<String> kmsKeyId,
        @Nullable Output<List<String>> networkInterfaceIds,
        @Nullable Output<String> ownerId,
        @Nullable Output<String> preferredSubnetId,
        @Nullable Output<List<String>> routeTableIds,
        @Nullable Output<List<String>> securityGroupIds,
        @Nullable Output<Integer> storageCapacity,
        @Nullable Output<String> storageType,
        @Nullable Output<List<String>> subnetIds,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<Integer> throughputCapacity,
        @Nullable Output<String> vpcId,
        @Nullable Output<String> weeklyMaintenanceStartTime) {
        this.arn = arn;
        this.automaticBackupRetentionDays = automaticBackupRetentionDays;
        this.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
        this.deploymentType = deploymentType;
        this.diskIopsConfiguration = diskIopsConfiguration;
        this.dnsName = dnsName;
        this.endpointIpAddressRange = endpointIpAddressRange;
        this.endpoints = endpoints;
        this.fsxAdminPassword = fsxAdminPassword;
        this.kmsKeyId = kmsKeyId;
        this.networkInterfaceIds = networkInterfaceIds;
        this.ownerId = ownerId;
        this.preferredSubnetId = preferredSubnetId;
        this.routeTableIds = routeTableIds;
        this.securityGroupIds = securityGroupIds;
        this.storageCapacity = storageCapacity;
        this.storageType = storageType;
        this.subnetIds = subnetIds;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.throughputCapacity = throughputCapacity;
        this.vpcId = vpcId;
        this.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
    }

    private OntapFileSystemState() {
        this.arn = Codegen.empty();
        this.automaticBackupRetentionDays = Codegen.empty();
        this.dailyAutomaticBackupStartTime = Codegen.empty();
        this.deploymentType = Codegen.empty();
        this.diskIopsConfiguration = Codegen.empty();
        this.dnsName = Codegen.empty();
        this.endpointIpAddressRange = Codegen.empty();
        this.endpoints = Codegen.empty();
        this.fsxAdminPassword = Codegen.empty();
        this.kmsKeyId = Codegen.empty();
        this.networkInterfaceIds = Codegen.empty();
        this.ownerId = Codegen.empty();
        this.preferredSubnetId = Codegen.empty();
        this.routeTableIds = Codegen.empty();
        this.securityGroupIds = Codegen.empty();
        this.storageCapacity = Codegen.empty();
        this.storageType = Codegen.empty();
        this.subnetIds = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.throughputCapacity = Codegen.empty();
        this.vpcId = Codegen.empty();
        this.weeklyMaintenanceStartTime = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OntapFileSystemState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<Integer> automaticBackupRetentionDays;
        private @Nullable Output<String> dailyAutomaticBackupStartTime;
        private @Nullable Output<String> deploymentType;
        private @Nullable Output<OntapFileSystemDiskIopsConfigurationGetArgs> diskIopsConfiguration;
        private @Nullable Output<String> dnsName;
        private @Nullable Output<String> endpointIpAddressRange;
        private @Nullable Output<List<OntapFileSystemEndpointGetArgs>> endpoints;
        private @Nullable Output<String> fsxAdminPassword;
        private @Nullable Output<String> kmsKeyId;
        private @Nullable Output<List<String>> networkInterfaceIds;
        private @Nullable Output<String> ownerId;
        private @Nullable Output<String> preferredSubnetId;
        private @Nullable Output<List<String>> routeTableIds;
        private @Nullable Output<List<String>> securityGroupIds;
        private @Nullable Output<Integer> storageCapacity;
        private @Nullable Output<String> storageType;
        private @Nullable Output<List<String>> subnetIds;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<Integer> throughputCapacity;
        private @Nullable Output<String> vpcId;
        private @Nullable Output<String> weeklyMaintenanceStartTime;

        public Builder() {
    	      // Empty
        }

        public Builder(OntapFileSystemState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.automaticBackupRetentionDays = defaults.automaticBackupRetentionDays;
    	      this.dailyAutomaticBackupStartTime = defaults.dailyAutomaticBackupStartTime;
    	      this.deploymentType = defaults.deploymentType;
    	      this.diskIopsConfiguration = defaults.diskIopsConfiguration;
    	      this.dnsName = defaults.dnsName;
    	      this.endpointIpAddressRange = defaults.endpointIpAddressRange;
    	      this.endpoints = defaults.endpoints;
    	      this.fsxAdminPassword = defaults.fsxAdminPassword;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.networkInterfaceIds = defaults.networkInterfaceIds;
    	      this.ownerId = defaults.ownerId;
    	      this.preferredSubnetId = defaults.preferredSubnetId;
    	      this.routeTableIds = defaults.routeTableIds;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.storageCapacity = defaults.storageCapacity;
    	      this.storageType = defaults.storageType;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.throughputCapacity = defaults.throughputCapacity;
    	      this.vpcId = defaults.vpcId;
    	      this.weeklyMaintenanceStartTime = defaults.weeklyMaintenanceStartTime;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder automaticBackupRetentionDays(@Nullable Output<Integer> automaticBackupRetentionDays) {
            this.automaticBackupRetentionDays = automaticBackupRetentionDays;
            return this;
        }
        public Builder automaticBackupRetentionDays(@Nullable Integer automaticBackupRetentionDays) {
            this.automaticBackupRetentionDays = Codegen.ofNullable(automaticBackupRetentionDays);
            return this;
        }
        public Builder dailyAutomaticBackupStartTime(@Nullable Output<String> dailyAutomaticBackupStartTime) {
            this.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime;
            return this;
        }
        public Builder dailyAutomaticBackupStartTime(@Nullable String dailyAutomaticBackupStartTime) {
            this.dailyAutomaticBackupStartTime = Codegen.ofNullable(dailyAutomaticBackupStartTime);
            return this;
        }
        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            this.deploymentType = deploymentType;
            return this;
        }
        public Builder deploymentType(@Nullable String deploymentType) {
            this.deploymentType = Codegen.ofNullable(deploymentType);
            return this;
        }
        public Builder diskIopsConfiguration(@Nullable Output<OntapFileSystemDiskIopsConfigurationGetArgs> diskIopsConfiguration) {
            this.diskIopsConfiguration = diskIopsConfiguration;
            return this;
        }
        public Builder diskIopsConfiguration(@Nullable OntapFileSystemDiskIopsConfigurationGetArgs diskIopsConfiguration) {
            this.diskIopsConfiguration = Codegen.ofNullable(diskIopsConfiguration);
            return this;
        }
        public Builder dnsName(@Nullable Output<String> dnsName) {
            this.dnsName = dnsName;
            return this;
        }
        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = Codegen.ofNullable(dnsName);
            return this;
        }
        public Builder endpointIpAddressRange(@Nullable Output<String> endpointIpAddressRange) {
            this.endpointIpAddressRange = endpointIpAddressRange;
            return this;
        }
        public Builder endpointIpAddressRange(@Nullable String endpointIpAddressRange) {
            this.endpointIpAddressRange = Codegen.ofNullable(endpointIpAddressRange);
            return this;
        }
        public Builder endpoints(@Nullable Output<List<OntapFileSystemEndpointGetArgs>> endpoints) {
            this.endpoints = endpoints;
            return this;
        }
        public Builder endpoints(@Nullable List<OntapFileSystemEndpointGetArgs> endpoints) {
            this.endpoints = Codegen.ofNullable(endpoints);
            return this;
        }
        public Builder endpoints(OntapFileSystemEndpointGetArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }
        public Builder fsxAdminPassword(@Nullable Output<String> fsxAdminPassword) {
            this.fsxAdminPassword = fsxAdminPassword;
            return this;
        }
        public Builder fsxAdminPassword(@Nullable String fsxAdminPassword) {
            this.fsxAdminPassword = Codegen.ofNullable(fsxAdminPassword);
            return this;
        }
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = Codegen.ofNullable(kmsKeyId);
            return this;
        }
        public Builder networkInterfaceIds(@Nullable Output<List<String>> networkInterfaceIds) {
            this.networkInterfaceIds = networkInterfaceIds;
            return this;
        }
        public Builder networkInterfaceIds(@Nullable List<String> networkInterfaceIds) {
            this.networkInterfaceIds = Codegen.ofNullable(networkInterfaceIds);
            return this;
        }
        public Builder networkInterfaceIds(String... networkInterfaceIds) {
            return networkInterfaceIds(List.of(networkInterfaceIds));
        }
        public Builder ownerId(@Nullable Output<String> ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = Codegen.ofNullable(ownerId);
            return this;
        }
        public Builder preferredSubnetId(@Nullable Output<String> preferredSubnetId) {
            this.preferredSubnetId = preferredSubnetId;
            return this;
        }
        public Builder preferredSubnetId(@Nullable String preferredSubnetId) {
            this.preferredSubnetId = Codegen.ofNullable(preferredSubnetId);
            return this;
        }
        public Builder routeTableIds(@Nullable Output<List<String>> routeTableIds) {
            this.routeTableIds = routeTableIds;
            return this;
        }
        public Builder routeTableIds(@Nullable List<String> routeTableIds) {
            this.routeTableIds = Codegen.ofNullable(routeTableIds);
            return this;
        }
        public Builder routeTableIds(String... routeTableIds) {
            return routeTableIds(List.of(routeTableIds));
        }
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            this.securityGroupIds = securityGroupIds;
            return this;
        }
        public Builder securityGroupIds(@Nullable List<String> securityGroupIds) {
            this.securityGroupIds = Codegen.ofNullable(securityGroupIds);
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        public Builder storageCapacity(@Nullable Output<Integer> storageCapacity) {
            this.storageCapacity = storageCapacity;
            return this;
        }
        public Builder storageCapacity(@Nullable Integer storageCapacity) {
            this.storageCapacity = Codegen.ofNullable(storageCapacity);
            return this;
        }
        public Builder storageType(@Nullable Output<String> storageType) {
            this.storageType = storageType;
            return this;
        }
        public Builder storageType(@Nullable String storageType) {
            this.storageType = Codegen.ofNullable(storageType);
            return this;
        }
        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = Codegen.ofNullable(subnetIds);
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder throughputCapacity(@Nullable Output<Integer> throughputCapacity) {
            this.throughputCapacity = throughputCapacity;
            return this;
        }
        public Builder throughputCapacity(@Nullable Integer throughputCapacity) {
            this.throughputCapacity = Codegen.ofNullable(throughputCapacity);
            return this;
        }
        public Builder vpcId(@Nullable Output<String> vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = Codegen.ofNullable(vpcId);
            return this;
        }
        public Builder weeklyMaintenanceStartTime(@Nullable Output<String> weeklyMaintenanceStartTime) {
            this.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime;
            return this;
        }
        public Builder weeklyMaintenanceStartTime(@Nullable String weeklyMaintenanceStartTime) {
            this.weeklyMaintenanceStartTime = Codegen.ofNullable(weeklyMaintenanceStartTime);
            return this;
        }        public OntapFileSystemState build() {
            return new OntapFileSystemState(arn, automaticBackupRetentionDays, dailyAutomaticBackupStartTime, deploymentType, diskIopsConfiguration, dnsName, endpointIpAddressRange, endpoints, fsxAdminPassword, kmsKeyId, networkInterfaceIds, ownerId, preferredSubnetId, routeTableIds, securityGroupIds, storageCapacity, storageType, subnetIds, tags, tagsAll, throughputCapacity, vpcId, weeklyMaintenanceStartTime);
        }
    }
}
