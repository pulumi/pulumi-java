// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.guardduty.inputs;

import com.pulumi.aws.guardduty.inputs.OrganizationConfigurationDatasourcesGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationConfigurationState Empty = new OrganizationConfigurationState();

    /**
     * When this setting is enabled, all new accounts that are created in, or added to, the organization are added as a member accounts of the organizationâ€™s GuardDuty delegated administrator and GuardDuty is enabled in that AWS Region.
     * 
     */
    @Import(name="autoEnable")
    private @Nullable Output<Boolean> autoEnable;

    public Optional<Output<Boolean>> autoEnable() {
        return Optional.ofNullable(this.autoEnable);
    }

    /**
     * Configuration for the collected datasources.
     * 
     */
    @Import(name="datasources")
    private @Nullable Output<OrganizationConfigurationDatasourcesGetArgs> datasources;

    public Optional<Output<OrganizationConfigurationDatasourcesGetArgs>> datasources() {
        return Optional.ofNullable(this.datasources);
    }

    /**
     * The detector ID of the GuardDuty account.
     * 
     */
    @Import(name="detectorId")
    private @Nullable Output<String> detectorId;

    public Optional<Output<String>> detectorId() {
        return Optional.ofNullable(this.detectorId);
    }

    private OrganizationConfigurationState() {}

    private OrganizationConfigurationState(OrganizationConfigurationState $) {
        this.autoEnable = $.autoEnable;
        this.datasources = $.datasources;
        this.detectorId = $.detectorId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationConfigurationState $;

        public Builder() {
            $ = new OrganizationConfigurationState();
        }

        public Builder(OrganizationConfigurationState defaults) {
            $ = new OrganizationConfigurationState(Objects.requireNonNull(defaults));
        }

        public Builder autoEnable(@Nullable Output<Boolean> autoEnable) {
            $.autoEnable = autoEnable;
            return this;
        }

        public Builder autoEnable(Boolean autoEnable) {
            return autoEnable(Output.of(autoEnable));
        }

        public Builder datasources(@Nullable Output<OrganizationConfigurationDatasourcesGetArgs> datasources) {
            $.datasources = datasources;
            return this;
        }

        public Builder datasources(OrganizationConfigurationDatasourcesGetArgs datasources) {
            return datasources(Output.of(datasources));
        }

        public Builder detectorId(@Nullable Output<String> detectorId) {
            $.detectorId = detectorId;
            return this;
        }

        public Builder detectorId(String detectorId) {
            return detectorId(Output.of(detectorId));
        }

        public OrganizationConfigurationState build() {
            return $;
        }
    }

}
