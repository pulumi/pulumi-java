// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class CrawlerCatalogTargetGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CrawlerCatalogTargetGetArgs Empty = new CrawlerCatalogTargetGetArgs();

    /**
     * The name of the Glue database to be synchronized.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * A list of catalog tables to be synchronized.
     * 
     */
    @Import(name="tables", required=true)
    private Output<List<String>> tables;

    public Output<List<String>> tables() {
        return this.tables;
    }

    private CrawlerCatalogTargetGetArgs() {}

    private CrawlerCatalogTargetGetArgs(CrawlerCatalogTargetGetArgs $) {
        this.databaseName = $.databaseName;
        this.tables = $.tables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CrawlerCatalogTargetGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CrawlerCatalogTargetGetArgs $;

        public Builder() {
            $ = new CrawlerCatalogTargetGetArgs();
        }

        public Builder(CrawlerCatalogTargetGetArgs defaults) {
            $ = new CrawlerCatalogTargetGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        public Builder tables(Output<List<String>> tables) {
            $.tables = tables;
            return this;
        }

        public Builder tables(List<String> tables) {
            return tables(Output.of(tables));
        }

        public Builder tables(String... tables) {
            return tables(List.of(tables));
        }

        public CrawlerCatalogTargetGetArgs build() {
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.tables = Objects.requireNonNull($.tables, "expected parameter 'tables' to be non-null");
            return $;
        }
    }

}
