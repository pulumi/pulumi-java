// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetNetworkInterfaceAssociation;
import com.pulumi.aws.ec2.outputs.GetNetworkInterfaceAttachment;
import com.pulumi.aws.ec2.outputs.GetNetworkInterfaceFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkInterfaceResult {
    /**
     * @return The ARN of the network interface.
     * 
     */
    private final String arn;
    /**
     * @return The association information for an Elastic IP address (IPv4) associated with the network interface. See supported fields below.
     * 
     */
    private final List<GetNetworkInterfaceAssociation> associations;
    private final List<GetNetworkInterfaceAttachment> attachments;
    /**
     * @return The Availability Zone.
     * 
     */
    private final String availabilityZone;
    /**
     * @return Description of the network interface.
     * 
     */
    private final String description;
    private final @Nullable List<GetNetworkInterfaceFilter> filters;
    private final String id;
    /**
     * @return The type of interface.
     * 
     */
    private final String interfaceType;
    /**
     * @return List of IPv6 addresses to assign to the ENI.
     * 
     */
    private final List<String> ipv6Addresses;
    /**
     * @return The MAC address.
     * 
     */
    private final String macAddress;
    /**
     * @return The Amazon Resource Name (ARN) of the Outpost.
     * 
     */
    private final String outpostArn;
    /**
     * @return The AWS account ID of the owner of the network interface.
     * 
     */
    private final String ownerId;
    /**
     * @return The private DNS name.
     * 
     */
    private final String privateDnsName;
    /**
     * @return The private IPv4 address of the network interface within the subnet.
     * 
     */
    private final String privateIp;
    /**
     * @return The private IPv4 addresses associated with the network interface.
     * 
     */
    private final List<String> privateIps;
    /**
     * @return The ID of the entity that launched the instance on your behalf.
     * 
     */
    private final String requesterId;
    /**
     * @return The list of security groups for the network interface.
     * 
     */
    private final List<String> securityGroups;
    /**
     * @return The ID of the subnet.
     * 
     */
    private final String subnetId;
    /**
     * @return Any tags assigned to the network interface.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The ID of the VPC.
     * 
     */
    private final String vpcId;

    @CustomType.Constructor
    private GetNetworkInterfaceResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("associations") List<GetNetworkInterfaceAssociation> associations,
        @CustomType.Parameter("attachments") List<GetNetworkInterfaceAttachment> attachments,
        @CustomType.Parameter("availabilityZone") String availabilityZone,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("filters") @Nullable List<GetNetworkInterfaceFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("interfaceType") String interfaceType,
        @CustomType.Parameter("ipv6Addresses") List<String> ipv6Addresses,
        @CustomType.Parameter("macAddress") String macAddress,
        @CustomType.Parameter("outpostArn") String outpostArn,
        @CustomType.Parameter("ownerId") String ownerId,
        @CustomType.Parameter("privateDnsName") String privateDnsName,
        @CustomType.Parameter("privateIp") String privateIp,
        @CustomType.Parameter("privateIps") List<String> privateIps,
        @CustomType.Parameter("requesterId") String requesterId,
        @CustomType.Parameter("securityGroups") List<String> securityGroups,
        @CustomType.Parameter("subnetId") String subnetId,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("vpcId") String vpcId) {
        this.arn = arn;
        this.associations = associations;
        this.attachments = attachments;
        this.availabilityZone = availabilityZone;
        this.description = description;
        this.filters = filters;
        this.id = id;
        this.interfaceType = interfaceType;
        this.ipv6Addresses = ipv6Addresses;
        this.macAddress = macAddress;
        this.outpostArn = outpostArn;
        this.ownerId = ownerId;
        this.privateDnsName = privateDnsName;
        this.privateIp = privateIp;
        this.privateIps = privateIps;
        this.requesterId = requesterId;
        this.securityGroups = securityGroups;
        this.subnetId = subnetId;
        this.tags = tags;
        this.vpcId = vpcId;
    }

    /**
     * @return The ARN of the network interface.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The association information for an Elastic IP address (IPv4) associated with the network interface. See supported fields below.
     * 
     */
    public List<GetNetworkInterfaceAssociation> associations() {
        return this.associations;
    }
    public List<GetNetworkInterfaceAttachment> attachments() {
        return this.attachments;
    }
    /**
     * @return The Availability Zone.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * @return Description of the network interface.
     * 
     */
    public String description() {
        return this.description;
    }
    public List<GetNetworkInterfaceFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The type of interface.
     * 
     */
    public String interfaceType() {
        return this.interfaceType;
    }
    /**
     * @return List of IPv6 addresses to assign to the ENI.
     * 
     */
    public List<String> ipv6Addresses() {
        return this.ipv6Addresses;
    }
    /**
     * @return The MAC address.
     * 
     */
    public String macAddress() {
        return this.macAddress;
    }
    /**
     * @return The Amazon Resource Name (ARN) of the Outpost.
     * 
     */
    public String outpostArn() {
        return this.outpostArn;
    }
    /**
     * @return The AWS account ID of the owner of the network interface.
     * 
     */
    public String ownerId() {
        return this.ownerId;
    }
    /**
     * @return The private DNS name.
     * 
     */
    public String privateDnsName() {
        return this.privateDnsName;
    }
    /**
     * @return The private IPv4 address of the network interface within the subnet.
     * 
     */
    public String privateIp() {
        return this.privateIp;
    }
    /**
     * @return The private IPv4 addresses associated with the network interface.
     * 
     */
    public List<String> privateIps() {
        return this.privateIps;
    }
    /**
     * @return The ID of the entity that launched the instance on your behalf.
     * 
     */
    public String requesterId() {
        return this.requesterId;
    }
    /**
     * @return The list of security groups for the network interface.
     * 
     */
    public List<String> securityGroups() {
        return this.securityGroups;
    }
    /**
     * @return The ID of the subnet.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Any tags assigned to the network interface.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The ID of the VPC.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkInterfaceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private List<GetNetworkInterfaceAssociation> associations;
        private List<GetNetworkInterfaceAttachment> attachments;
        private String availabilityZone;
        private String description;
        private @Nullable List<GetNetworkInterfaceFilter> filters;
        private String id;
        private String interfaceType;
        private List<String> ipv6Addresses;
        private String macAddress;
        private String outpostArn;
        private String ownerId;
        private String privateDnsName;
        private String privateIp;
        private List<String> privateIps;
        private String requesterId;
        private List<String> securityGroups;
        private String subnetId;
        private Map<String,String> tags;
        private String vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNetworkInterfaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.associations = defaults.associations;
    	      this.attachments = defaults.attachments;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.description = defaults.description;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.interfaceType = defaults.interfaceType;
    	      this.ipv6Addresses = defaults.ipv6Addresses;
    	      this.macAddress = defaults.macAddress;
    	      this.outpostArn = defaults.outpostArn;
    	      this.ownerId = defaults.ownerId;
    	      this.privateDnsName = defaults.privateDnsName;
    	      this.privateIp = defaults.privateIp;
    	      this.privateIps = defaults.privateIps;
    	      this.requesterId = defaults.requesterId;
    	      this.securityGroups = defaults.securityGroups;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder associations(List<GetNetworkInterfaceAssociation> associations) {
            this.associations = Objects.requireNonNull(associations);
            return this;
        }
        public Builder associations(GetNetworkInterfaceAssociation... associations) {
            return associations(List.of(associations));
        }
        public Builder attachments(List<GetNetworkInterfaceAttachment> attachments) {
            this.attachments = Objects.requireNonNull(attachments);
            return this;
        }
        public Builder attachments(GetNetworkInterfaceAttachment... attachments) {
            return attachments(List.of(attachments));
        }
        public Builder availabilityZone(String availabilityZone) {
            this.availabilityZone = Objects.requireNonNull(availabilityZone);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder filters(@Nullable List<GetNetworkInterfaceFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetNetworkInterfaceFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder interfaceType(String interfaceType) {
            this.interfaceType = Objects.requireNonNull(interfaceType);
            return this;
        }
        public Builder ipv6Addresses(List<String> ipv6Addresses) {
            this.ipv6Addresses = Objects.requireNonNull(ipv6Addresses);
            return this;
        }
        public Builder ipv6Addresses(String... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }
        public Builder macAddress(String macAddress) {
            this.macAddress = Objects.requireNonNull(macAddress);
            return this;
        }
        public Builder outpostArn(String outpostArn) {
            this.outpostArn = Objects.requireNonNull(outpostArn);
            return this;
        }
        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }
        public Builder privateDnsName(String privateDnsName) {
            this.privateDnsName = Objects.requireNonNull(privateDnsName);
            return this;
        }
        public Builder privateIp(String privateIp) {
            this.privateIp = Objects.requireNonNull(privateIp);
            return this;
        }
        public Builder privateIps(List<String> privateIps) {
            this.privateIps = Objects.requireNonNull(privateIps);
            return this;
        }
        public Builder privateIps(String... privateIps) {
            return privateIps(List.of(privateIps));
        }
        public Builder requesterId(String requesterId) {
            this.requesterId = Objects.requireNonNull(requesterId);
            return this;
        }
        public Builder securityGroups(List<String> securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }        public GetNetworkInterfaceResult build() {
            return new GetNetworkInterfaceResult(arn, associations, attachments, availabilityZone, description, filters, id, interfaceType, ipv6Addresses, macAddress, outpostArn, ownerId, privateDnsName, privateIp, privateIps, requesterId, securityGroups, subnetId, tags, vpcId);
        }
    }
}
