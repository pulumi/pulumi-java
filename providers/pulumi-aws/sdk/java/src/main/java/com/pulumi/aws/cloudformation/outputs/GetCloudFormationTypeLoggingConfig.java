// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCloudFormationTypeLoggingConfig {
    /**
     * @return Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type&#39;s handlers.
     * 
     */
    private final String logGroupName;
    /**
     * @return Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
     * 
     */
    private final String logRoleArn;

    @CustomType.Constructor
    private GetCloudFormationTypeLoggingConfig(
        @CustomType.Parameter("logGroupName") String logGroupName,
        @CustomType.Parameter("logRoleArn") String logRoleArn) {
        this.logGroupName = logGroupName;
        this.logRoleArn = logRoleArn;
    }

    /**
     * @return Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type&#39;s handlers.
     * 
     */
    public String logGroupName() {
        return this.logGroupName;
    }
    /**
     * @return Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
     * 
     */
    public String logRoleArn() {
        return this.logRoleArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudFormationTypeLoggingConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String logGroupName;
        private String logRoleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCloudFormationTypeLoggingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logGroupName = defaults.logGroupName;
    	      this.logRoleArn = defaults.logRoleArn;
        }

        public Builder logGroupName(String logGroupName) {
            this.logGroupName = Objects.requireNonNull(logGroupName);
            return this;
        }
        public Builder logRoleArn(String logRoleArn) {
            this.logRoleArn = Objects.requireNonNull(logRoleArn);
            return this;
        }        public GetCloudFormationTypeLoggingConfig build() {
            return new GetCloudFormationTypeLoggingConfig(logGroupName, logRoleArn);
        }
    }
}
