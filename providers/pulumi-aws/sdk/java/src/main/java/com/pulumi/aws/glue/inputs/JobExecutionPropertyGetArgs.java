// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobExecutionPropertyGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobExecutionPropertyGetArgs Empty = new JobExecutionPropertyGetArgs();

    /**
     * The maximum number of concurrent runs allowed for a job. The default is 1.
     * 
     */
    @Import(name="maxConcurrentRuns")
    private @Nullable Output<Integer> maxConcurrentRuns;

    public Optional<Output<Integer>> maxConcurrentRuns() {
        return Optional.ofNullable(this.maxConcurrentRuns);
    }

    private JobExecutionPropertyGetArgs() {}

    private JobExecutionPropertyGetArgs(JobExecutionPropertyGetArgs $) {
        this.maxConcurrentRuns = $.maxConcurrentRuns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobExecutionPropertyGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobExecutionPropertyGetArgs $;

        public Builder() {
            $ = new JobExecutionPropertyGetArgs();
        }

        public Builder(JobExecutionPropertyGetArgs defaults) {
            $ = new JobExecutionPropertyGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder maxConcurrentRuns(@Nullable Output<Integer> maxConcurrentRuns) {
            $.maxConcurrentRuns = maxConcurrentRuns;
            return this;
        }

        public Builder maxConcurrentRuns(Integer maxConcurrentRuns) {
            return maxConcurrentRuns(Output.of(maxConcurrentRuns));
        }

        public JobExecutionPropertyGetArgs build() {
            return $;
        }
    }

}
