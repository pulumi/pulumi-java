// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CrawlerJdbcTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CrawlerJdbcTargetArgs Empty = new CrawlerJdbcTargetArgs();

    /**
     * The name of the connection to use to connect to the Delta table target.
     * 
     */
    @Import(name="connectionName", required=true)
      private final Output<String> connectionName;

    public Output<String> connectionName() {
        return this.connectionName;
    }

    /**
     * A list of glob patterns used to exclude from the crawl.
     * 
     */
    @Import(name="exclusions")
      private final @Nullable Output<List<String>> exclusions;

    public Output<List<String>> exclusions() {
        return this.exclusions == null ? Codegen.empty() : this.exclusions;
    }

    /**
     * The path of the Amazon DocumentDB or MongoDB target (database/collection).
     * 
     */
    @Import(name="path", required=true)
      private final Output<String> path;

    public Output<String> path() {
        return this.path;
    }

    public CrawlerJdbcTargetArgs(
        Output<String> connectionName,
        @Nullable Output<List<String>> exclusions,
        Output<String> path) {
        this.connectionName = Objects.requireNonNull(connectionName, "expected parameter 'connectionName' to be non-null");
        this.exclusions = exclusions;
        this.path = Objects.requireNonNull(path, "expected parameter 'path' to be non-null");
    }

    private CrawlerJdbcTargetArgs() {
        this.connectionName = Codegen.empty();
        this.exclusions = Codegen.empty();
        this.path = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CrawlerJdbcTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> connectionName;
        private @Nullable Output<List<String>> exclusions;
        private Output<String> path;

        public Builder() {
    	      // Empty
        }

        public Builder(CrawlerJdbcTargetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionName = defaults.connectionName;
    	      this.exclusions = defaults.exclusions;
    	      this.path = defaults.path;
        }

        public Builder connectionName(Output<String> connectionName) {
            this.connectionName = Objects.requireNonNull(connectionName);
            return this;
        }
        public Builder connectionName(String connectionName) {
            this.connectionName = Output.of(Objects.requireNonNull(connectionName));
            return this;
        }
        public Builder exclusions(@Nullable Output<List<String>> exclusions) {
            this.exclusions = exclusions;
            return this;
        }
        public Builder exclusions(@Nullable List<String> exclusions) {
            this.exclusions = Codegen.ofNullable(exclusions);
            return this;
        }
        public Builder exclusions(String... exclusions) {
            return exclusions(List.of(exclusions));
        }
        public Builder path(Output<String> path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public Builder path(String path) {
            this.path = Output.of(Objects.requireNonNull(path));
            return this;
        }        public CrawlerJdbcTargetArgs build() {
            return new CrawlerJdbcTargetArgs(connectionName, exclusions, path);
        }
    }
}
