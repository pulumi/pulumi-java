// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskSetLoadBalancerGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskSetLoadBalancerGetArgs Empty = new TaskSetLoadBalancerGetArgs();

    /**
     * The name of the container to associate with the load balancer (as it appears in a container definition).
     * 
     */
    @Import(name="containerName", required=true)
    private Output<String> containerName;

    public Output<String> containerName() {
        return this.containerName;
    }

    /**
     * The port on the container to associate with the load balancer. Defaults to `0` if not specified.
     * 
     */
    @Import(name="containerPort")
    private @Nullable Output<Integer> containerPort;

    public Optional<Output<Integer>> containerPort() {
        return Optional.ofNullable(this.containerPort);
    }

    /**
     * The name of the ELB (Classic) to associate with the service.
     * 
     */
    @Import(name="loadBalancerName")
    private @Nullable Output<String> loadBalancerName;

    public Optional<Output<String>> loadBalancerName() {
        return Optional.ofNullable(this.loadBalancerName);
    }

    /**
     * The ARN of the Load Balancer target group to associate with the service.
     * 
     */
    @Import(name="targetGroupArn")
    private @Nullable Output<String> targetGroupArn;

    public Optional<Output<String>> targetGroupArn() {
        return Optional.ofNullable(this.targetGroupArn);
    }

    private TaskSetLoadBalancerGetArgs() {}

    private TaskSetLoadBalancerGetArgs(TaskSetLoadBalancerGetArgs $) {
        this.containerName = $.containerName;
        this.containerPort = $.containerPort;
        this.loadBalancerName = $.loadBalancerName;
        this.targetGroupArn = $.targetGroupArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskSetLoadBalancerGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskSetLoadBalancerGetArgs $;

        public Builder() {
            $ = new TaskSetLoadBalancerGetArgs();
        }

        public Builder(TaskSetLoadBalancerGetArgs defaults) {
            $ = new TaskSetLoadBalancerGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder containerName(Output<String> containerName) {
            $.containerName = containerName;
            return this;
        }

        public Builder containerName(String containerName) {
            return containerName(Output.of(containerName));
        }

        public Builder containerPort(@Nullable Output<Integer> containerPort) {
            $.containerPort = containerPort;
            return this;
        }

        public Builder containerPort(Integer containerPort) {
            return containerPort(Output.of(containerPort));
        }

        public Builder loadBalancerName(@Nullable Output<String> loadBalancerName) {
            $.loadBalancerName = loadBalancerName;
            return this;
        }

        public Builder loadBalancerName(String loadBalancerName) {
            return loadBalancerName(Output.of(loadBalancerName));
        }

        public Builder targetGroupArn(@Nullable Output<String> targetGroupArn) {
            $.targetGroupArn = targetGroupArn;
            return this;
        }

        public Builder targetGroupArn(String targetGroupArn) {
            return targetGroupArn(Output.of(targetGroupArn));
        }

        public TaskSetLoadBalancerGetArgs build() {
            $.containerName = Objects.requireNonNull($.containerName, "expected parameter 'containerName' to be non-null");
            return $;
        }
    }

}
