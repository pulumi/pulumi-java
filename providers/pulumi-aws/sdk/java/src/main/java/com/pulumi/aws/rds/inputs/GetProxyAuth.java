// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetProxyAuth extends com.pulumi.resources.InvokeArgs {

    public static final GetProxyAuth Empty = new GetProxyAuth();

    @Import(name="authScheme", required=true)
    private String authScheme;

    public String authScheme() {
        return this.authScheme;
    }

    @Import(name="description", required=true)
    private String description;

    public String description() {
        return this.description;
    }

    @Import(name="iamAuth", required=true)
    private String iamAuth;

    public String iamAuth() {
        return this.iamAuth;
    }

    @Import(name="secretArn", required=true)
    private String secretArn;

    public String secretArn() {
        return this.secretArn;
    }

    private GetProxyAuth() {}

    private GetProxyAuth(GetProxyAuth $) {
        this.authScheme = $.authScheme;
        this.description = $.description;
        this.iamAuth = $.iamAuth;
        this.secretArn = $.secretArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProxyAuth defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProxyAuth $;

        public Builder() {
            $ = new GetProxyAuth();
        }

        public Builder(GetProxyAuth defaults) {
            $ = new GetProxyAuth(Objects.requireNonNull(defaults));
        }

        public Builder authScheme(String authScheme) {
            $.authScheme = authScheme;
            return this;
        }

        public Builder description(String description) {
            $.description = description;
            return this;
        }

        public Builder iamAuth(String iamAuth) {
            $.iamAuth = iamAuth;
            return this;
        }

        public Builder secretArn(String secretArn) {
            $.secretArn = secretArn;
            return this;
        }

        public GetProxyAuth build() {
            $.authScheme = Objects.requireNonNull($.authScheme, "expected parameter 'authScheme' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.iamAuth = Objects.requireNonNull($.iamAuth, "expected parameter 'iamAuth' to be non-null");
            $.secretArn = Objects.requireNonNull($.secretArn, "expected parameter 'secretArn' to be non-null");
            return $;
        }
    }

}
