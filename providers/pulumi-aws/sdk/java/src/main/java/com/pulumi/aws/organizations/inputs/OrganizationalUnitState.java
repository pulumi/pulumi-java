// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.organizations.inputs;

import com.pulumi.aws.organizations.inputs.OrganizationalUnitAccountGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationalUnitState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationalUnitState Empty = new OrganizationalUnitState();

    /**
     * List of child accounts for this Organizational Unit. Does not return account information for child Organizational Units. All elements have these attributes:
     * 
     */
    @Import(name="accounts")
    private @Nullable Output<List<OrganizationalUnitAccountGetArgs>> accounts;

    public Optional<Output<List<OrganizationalUnitAccountGetArgs>>> accounts() {
        return Optional.ofNullable(this.accounts);
    }

    /**
     * ARN of the organizational unit
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The name for the organizational unit
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ID of the parent organizational unit, which may be the root
     * 
     */
    @Import(name="parentId")
    private @Nullable Output<String> parentId;

    public Optional<Output<String>> parentId() {
        return Optional.ofNullable(this.parentId);
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private OrganizationalUnitState() {}

    private OrganizationalUnitState(OrganizationalUnitState $) {
        this.accounts = $.accounts;
        this.arn = $.arn;
        this.name = $.name;
        this.parentId = $.parentId;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationalUnitState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationalUnitState $;

        public Builder() {
            $ = new OrganizationalUnitState();
        }

        public Builder(OrganizationalUnitState defaults) {
            $ = new OrganizationalUnitState(Objects.requireNonNull(defaults));
        }

        public Builder accounts(@Nullable Output<List<OrganizationalUnitAccountGetArgs>> accounts) {
            $.accounts = accounts;
            return this;
        }

        public Builder accounts(List<OrganizationalUnitAccountGetArgs> accounts) {
            return accounts(Output.of(accounts));
        }

        public Builder accounts(OrganizationalUnitAccountGetArgs... accounts) {
            return accounts(List.of(accounts));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parentId(@Nullable Output<String> parentId) {
            $.parentId = parentId;
            return this;
        }

        public Builder parentId(String parentId) {
            return parentId(Output.of(parentId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public OrganizationalUnitState build() {
            return $;
        }
    }

}
