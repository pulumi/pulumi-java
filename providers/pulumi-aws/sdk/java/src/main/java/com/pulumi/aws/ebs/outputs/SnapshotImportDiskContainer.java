// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ebs.outputs;

import com.pulumi.aws.ebs.outputs.SnapshotImportDiskContainerUserBucket;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SnapshotImportDiskContainer {
    /**
     * @return The description of the disk image being imported.
     * 
     */
    private final @Nullable String description;
    /**
     * @return The format of the disk image being imported. One of `VHD` or `VMDK`.
     * 
     */
    private final String format;
    /**
     * @return The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..). One of `url` or `user_bucket` must be set.
     * 
     */
    private final @Nullable String url;
    /**
     * @return The Amazon S3 bucket for the disk image. One of `url` or `user_bucket` must be set. Detailed below.
     * 
     */
    private final @Nullable SnapshotImportDiskContainerUserBucket userBucket;

    @CustomType.Constructor
    private SnapshotImportDiskContainer(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("format") String format,
        @CustomType.Parameter("url") @Nullable String url,
        @CustomType.Parameter("userBucket") @Nullable SnapshotImportDiskContainerUserBucket userBucket) {
        this.description = description;
        this.format = format;
        this.url = url;
        this.userBucket = userBucket;
    }

    /**
     * @return The description of the disk image being imported.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The format of the disk image being imported. One of `VHD` or `VMDK`.
     * 
     */
    public String format() {
        return this.format;
    }
    /**
     * @return The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..). One of `url` or `user_bucket` must be set.
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }
    /**
     * @return The Amazon S3 bucket for the disk image. One of `url` or `user_bucket` must be set. Detailed below.
     * 
     */
    public Optional<SnapshotImportDiskContainerUserBucket> userBucket() {
        return Optional.ofNullable(this.userBucket);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SnapshotImportDiskContainer defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private String format;
        private @Nullable String url;
        private @Nullable SnapshotImportDiskContainerUserBucket userBucket;

        public Builder() {
    	      // Empty
        }

        public Builder(SnapshotImportDiskContainer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.format = defaults.format;
    	      this.url = defaults.url;
    	      this.userBucket = defaults.userBucket;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder format(String format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public Builder userBucket(@Nullable SnapshotImportDiskContainerUserBucket userBucket) {
            this.userBucket = userBucket;
            return this;
        }        public SnapshotImportDiskContainer build() {
            return new SnapshotImportDiskContainer(description, format, url, userBucket);
        }
    }
}
