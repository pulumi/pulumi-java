// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.amplify.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainAssociationSubDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainAssociationSubDomainArgs Empty = new DomainAssociationSubDomainArgs();

    /**
     * The branch name setting for the subdomain.
     * 
     */
    @Import(name="branchName", required=true)
      private final Output<String> branchName;

    public Output<String> branchName() {
        return this.branchName;
    }

    /**
     * The DNS record for the subdomain.
     * 
     */
    @Import(name="dnsRecord")
      private final @Nullable Output<String> dnsRecord;

    public Output<String> dnsRecord() {
        return this.dnsRecord == null ? Codegen.empty() : this.dnsRecord;
    }

    /**
     * The prefix setting for the subdomain.
     * 
     */
    @Import(name="prefix", required=true)
      private final Output<String> prefix;

    public Output<String> prefix() {
        return this.prefix;
    }

    /**
     * The verified status of the subdomain.
     * 
     */
    @Import(name="verified")
      private final @Nullable Output<Boolean> verified;

    public Output<Boolean> verified() {
        return this.verified == null ? Codegen.empty() : this.verified;
    }

    public DomainAssociationSubDomainArgs(
        Output<String> branchName,
        @Nullable Output<String> dnsRecord,
        Output<String> prefix,
        @Nullable Output<Boolean> verified) {
        this.branchName = Objects.requireNonNull(branchName, "expected parameter 'branchName' to be non-null");
        this.dnsRecord = dnsRecord;
        this.prefix = Objects.requireNonNull(prefix, "expected parameter 'prefix' to be non-null");
        this.verified = verified;
    }

    private DomainAssociationSubDomainArgs() {
        this.branchName = Codegen.empty();
        this.dnsRecord = Codegen.empty();
        this.prefix = Codegen.empty();
        this.verified = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainAssociationSubDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> branchName;
        private @Nullable Output<String> dnsRecord;
        private Output<String> prefix;
        private @Nullable Output<Boolean> verified;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainAssociationSubDomainArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchName = defaults.branchName;
    	      this.dnsRecord = defaults.dnsRecord;
    	      this.prefix = defaults.prefix;
    	      this.verified = defaults.verified;
        }

        public Builder branchName(Output<String> branchName) {
            this.branchName = Objects.requireNonNull(branchName);
            return this;
        }
        public Builder branchName(String branchName) {
            this.branchName = Output.of(Objects.requireNonNull(branchName));
            return this;
        }
        public Builder dnsRecord(@Nullable Output<String> dnsRecord) {
            this.dnsRecord = dnsRecord;
            return this;
        }
        public Builder dnsRecord(@Nullable String dnsRecord) {
            this.dnsRecord = Codegen.ofNullable(dnsRecord);
            return this;
        }
        public Builder prefix(Output<String> prefix) {
            this.prefix = Objects.requireNonNull(prefix);
            return this;
        }
        public Builder prefix(String prefix) {
            this.prefix = Output.of(Objects.requireNonNull(prefix));
            return this;
        }
        public Builder verified(@Nullable Output<Boolean> verified) {
            this.verified = verified;
            return this;
        }
        public Builder verified(@Nullable Boolean verified) {
            this.verified = Codegen.ofNullable(verified);
            return this;
        }        public DomainAssociationSubDomainArgs build() {
            return new DomainAssociationSubDomainArgs(branchName, dnsRecord, prefix, verified);
        }
    }
}
