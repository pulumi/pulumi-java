// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner.inputs;

import com.pulumi.aws.apprunner.inputs.ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs Empty = new ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs();

    /**
     * Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See Code Configuration Values below for more details.
     * 
     */
    @Import(name="codeConfigurationValues")
    private @Nullable Output<ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesGetArgs> codeConfigurationValues;

    public Optional<Output<ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesGetArgs>> codeConfigurationValues() {
        return Optional.ofNullable(this.codeConfigurationValues);
    }

    /**
     * The source of the App Runner configuration. Valid values: `REPOSITORY`, `API`. Values are interpreted as follows:
     * 
     */
    @Import(name="configurationSource", required=true)
    private Output<String> configurationSource;

    public Output<String> configurationSource() {
        return this.configurationSource;
    }

    private ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs() {}

    private ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs(ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs $) {
        this.codeConfigurationValues = $.codeConfigurationValues;
        this.configurationSource = $.configurationSource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs $;

        public Builder() {
            $ = new ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs();
        }

        public Builder(ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs defaults) {
            $ = new ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder codeConfigurationValues(@Nullable Output<ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesGetArgs> codeConfigurationValues) {
            $.codeConfigurationValues = codeConfigurationValues;
            return this;
        }

        public Builder codeConfigurationValues(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesGetArgs codeConfigurationValues) {
            return codeConfigurationValues(Output.of(codeConfigurationValues));
        }

        public Builder configurationSource(Output<String> configurationSource) {
            $.configurationSource = configurationSource;
            return this;
        }

        public Builder configurationSource(String configurationSource) {
            return configurationSource(Output.of(configurationSource));
        }

        public ServiceSourceConfigurationCodeRepositoryCodeConfigurationGetArgs build() {
            $.configurationSource = Objects.requireNonNull($.configurationSource, "expected parameter 'configurationSource' to be non-null");
            return $;
        }
    }

}
