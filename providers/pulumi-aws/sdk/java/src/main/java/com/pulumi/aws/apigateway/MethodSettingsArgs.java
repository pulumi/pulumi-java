// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway;

import com.pulumi.aws.apigateway.inputs.MethodSettingsSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class MethodSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MethodSettingsArgs Empty = new MethodSettingsArgs();

    /**
     * Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*{@literal /}*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
     * 
     */
    @Import(name="methodPath", required=true)
      private final Output<String> methodPath;

    public Output<String> methodPath() {
        return this.methodPath;
    }

    /**
     * The ID of the REST API
     * 
     */
    @Import(name="restApi", required=true)
      private final Output<String> restApi;

    public Output<String> restApi() {
        return this.restApi;
    }

    /**
     * The settings block, see below.
     * 
     */
    @Import(name="settings", required=true)
      private final Output<MethodSettingsSettingsArgs> settings;

    public Output<MethodSettingsSettingsArgs> settings() {
        return this.settings;
    }

    /**
     * The name of the stage
     * 
     */
    @Import(name="stageName", required=true)
      private final Output<String> stageName;

    public Output<String> stageName() {
        return this.stageName;
    }

    public MethodSettingsArgs(
        Output<String> methodPath,
        Output<String> restApi,
        Output<MethodSettingsSettingsArgs> settings,
        Output<String> stageName) {
        this.methodPath = Objects.requireNonNull(methodPath, "expected parameter 'methodPath' to be non-null");
        this.restApi = Objects.requireNonNull(restApi, "expected parameter 'restApi' to be non-null");
        this.settings = Objects.requireNonNull(settings, "expected parameter 'settings' to be non-null");
        this.stageName = Objects.requireNonNull(stageName, "expected parameter 'stageName' to be non-null");
    }

    private MethodSettingsArgs() {
        this.methodPath = Codegen.empty();
        this.restApi = Codegen.empty();
        this.settings = Codegen.empty();
        this.stageName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MethodSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> methodPath;
        private Output<String> restApi;
        private Output<MethodSettingsSettingsArgs> settings;
        private Output<String> stageName;

        public Builder() {
    	      // Empty
        }

        public Builder(MethodSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.methodPath = defaults.methodPath;
    	      this.restApi = defaults.restApi;
    	      this.settings = defaults.settings;
    	      this.stageName = defaults.stageName;
        }

        public Builder methodPath(Output<String> methodPath) {
            this.methodPath = Objects.requireNonNull(methodPath);
            return this;
        }
        public Builder methodPath(String methodPath) {
            this.methodPath = Output.of(Objects.requireNonNull(methodPath));
            return this;
        }
        public Builder restApi(Output<String> restApi) {
            this.restApi = Objects.requireNonNull(restApi);
            return this;
        }
        public Builder settings(Output<MethodSettingsSettingsArgs> settings) {
            this.settings = Objects.requireNonNull(settings);
            return this;
        }
        public Builder settings(MethodSettingsSettingsArgs settings) {
            this.settings = Output.of(Objects.requireNonNull(settings));
            return this;
        }
        public Builder stageName(Output<String> stageName) {
            this.stageName = Objects.requireNonNull(stageName);
            return this;
        }
        public Builder stageName(String stageName) {
            this.stageName = Output.of(Objects.requireNonNull(stageName));
            return this;
        }        public MethodSettingsArgs build() {
            return new MethodSettingsArgs(methodPath, restApi, settings, stageName);
        }
    }
}
