// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.pinpoint.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppLimitsGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppLimitsGetArgs Empty = new AppLimitsGetArgs();

    /**
     * The maximum number of messages that the campaign can send daily.
     * 
     */
    @Import(name="daily")
    private @Nullable Output<Integer> daily;

    public Optional<Output<Integer>> daily() {
        return Optional.ofNullable(this.daily);
    }

    /**
     * The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
     * 
     */
    @Import(name="maximumDuration")
    private @Nullable Output<Integer> maximumDuration;

    public Optional<Output<Integer>> maximumDuration() {
        return Optional.ofNullable(this.maximumDuration);
    }

    /**
     * The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
     * 
     */
    @Import(name="messagesPerSecond")
    private @Nullable Output<Integer> messagesPerSecond;

    public Optional<Output<Integer>> messagesPerSecond() {
        return Optional.ofNullable(this.messagesPerSecond);
    }

    /**
     * The maximum total number of messages that the campaign can send.
     * 
     */
    @Import(name="total")
    private @Nullable Output<Integer> total;

    public Optional<Output<Integer>> total() {
        return Optional.ofNullable(this.total);
    }

    private AppLimitsGetArgs() {}

    private AppLimitsGetArgs(AppLimitsGetArgs $) {
        this.daily = $.daily;
        this.maximumDuration = $.maximumDuration;
        this.messagesPerSecond = $.messagesPerSecond;
        this.total = $.total;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppLimitsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppLimitsGetArgs $;

        public Builder() {
            $ = new AppLimitsGetArgs();
        }

        public Builder(AppLimitsGetArgs defaults) {
            $ = new AppLimitsGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder daily(@Nullable Output<Integer> daily) {
            $.daily = daily;
            return this;
        }

        public Builder daily(Integer daily) {
            return daily(Output.of(daily));
        }

        public Builder maximumDuration(@Nullable Output<Integer> maximumDuration) {
            $.maximumDuration = maximumDuration;
            return this;
        }

        public Builder maximumDuration(Integer maximumDuration) {
            return maximumDuration(Output.of(maximumDuration));
        }

        public Builder messagesPerSecond(@Nullable Output<Integer> messagesPerSecond) {
            $.messagesPerSecond = messagesPerSecond;
            return this;
        }

        public Builder messagesPerSecond(Integer messagesPerSecond) {
            return messagesPerSecond(Output.of(messagesPerSecond));
        }

        public Builder total(@Nullable Output<Integer> total) {
            $.total = total;
            return this;
        }

        public Builder total(Integer total) {
            return total(Output.of(total));
        }

        public AppLimitsGetArgs build() {
            return $;
        }
    }

}
