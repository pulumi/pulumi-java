// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr.inputs;

import com.pulumi.aws.emr.inputs.ClusterMasterInstanceGroupEbsConfigGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterMasterInstanceGroupGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMasterInstanceGroupGetArgs Empty = new ClusterMasterInstanceGroupGetArgs();

    /**
     * Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
     * 
     */
    @Import(name="bidPrice")
    private @Nullable Output<String> bidPrice;

    public Optional<Output<String>> bidPrice() {
        return Optional.ofNullable(this.bidPrice);
    }

    /**
     * Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.
     * 
     */
    @Import(name="ebsConfigs")
    private @Nullable Output<List<ClusterMasterInstanceGroupEbsConfigGetArgs>> ebsConfigs;

    public Optional<Output<List<ClusterMasterInstanceGroupEbsConfigGetArgs>>> ebsConfigs() {
        return Optional.ofNullable(this.ebsConfigs);
    }

    /**
     * ID of the cluster.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Target number of instances for the instance group. Must be 1 or 3. Defaults to 1. Launching with multiple master nodes is only supported in EMR version 5.23.0+, and requires this resource&#39;s `core_instance_group` to be configured. Public (Internet accessible) instances must be created in VPC subnets that have map public IP on launch enabled. Termination protection is automatically enabled when launched with multiple master nodes and this provider must have the `termination_protection = false` configuration applied before destroying this resource.
     * 
     */
    @Import(name="instanceCount")
    private @Nullable Output<Integer> instanceCount;

    public Optional<Output<Integer>> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }

    /**
     * EC2 instance type for all instances in the instance group.
     * 
     */
    @Import(name="instanceType", required=true)
    private Output<String> instanceType;

    public Output<String> instanceType() {
        return this.instanceType;
    }

    /**
     * Name of the step.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private ClusterMasterInstanceGroupGetArgs() {}

    private ClusterMasterInstanceGroupGetArgs(ClusterMasterInstanceGroupGetArgs $) {
        this.bidPrice = $.bidPrice;
        this.ebsConfigs = $.ebsConfigs;
        this.id = $.id;
        this.instanceCount = $.instanceCount;
        this.instanceType = $.instanceType;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMasterInstanceGroupGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMasterInstanceGroupGetArgs $;

        public Builder() {
            $ = new ClusterMasterInstanceGroupGetArgs();
        }

        public Builder(ClusterMasterInstanceGroupGetArgs defaults) {
            $ = new ClusterMasterInstanceGroupGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder bidPrice(@Nullable Output<String> bidPrice) {
            $.bidPrice = bidPrice;
            return this;
        }

        public Builder bidPrice(String bidPrice) {
            return bidPrice(Output.of(bidPrice));
        }

        public Builder ebsConfigs(@Nullable Output<List<ClusterMasterInstanceGroupEbsConfigGetArgs>> ebsConfigs) {
            $.ebsConfigs = ebsConfigs;
            return this;
        }

        public Builder ebsConfigs(List<ClusterMasterInstanceGroupEbsConfigGetArgs> ebsConfigs) {
            return ebsConfigs(Output.of(ebsConfigs));
        }

        public Builder ebsConfigs(ClusterMasterInstanceGroupEbsConfigGetArgs... ebsConfigs) {
            return ebsConfigs(List.of(ebsConfigs));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder instanceCount(@Nullable Output<Integer> instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        public Builder instanceCount(Integer instanceCount) {
            return instanceCount(Output.of(instanceCount));
        }

        public Builder instanceType(Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ClusterMasterInstanceGroupGetArgs build() {
            $.instanceType = Objects.requireNonNull($.instanceType, "expected parameter 'instanceType' to be non-null");
            return $;
        }
    }

}
