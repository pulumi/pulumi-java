// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.aws.lex.inputs.IntentFollowUpPromptPromptGetArgs;
import com.pulumi.aws.lex.inputs.IntentFollowUpPromptRejectionStatementGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.Objects;


public final class IntentFollowUpPromptGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntentFollowUpPromptGetArgs Empty = new IntentFollowUpPromptGetArgs();

    /**
     * Prompts for information from the user. Attributes are documented under prompt.
     * 
     */
    @Import(name="prompt", required=true)
      private final Output<IntentFollowUpPromptPromptGetArgs> prompt;

    public Output<IntentFollowUpPromptPromptGetArgs> prompt() {
        return this.prompt;
    }

    /**
     * If the user answers &#34;no&#34; to the question defined in the prompt field,
     * Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
     * documented below under statement.
     * 
     */
    @Import(name="rejectionStatement", required=true)
      private final Output<IntentFollowUpPromptRejectionStatementGetArgs> rejectionStatement;

    public Output<IntentFollowUpPromptRejectionStatementGetArgs> rejectionStatement() {
        return this.rejectionStatement;
    }

    public IntentFollowUpPromptGetArgs(
        Output<IntentFollowUpPromptPromptGetArgs> prompt,
        Output<IntentFollowUpPromptRejectionStatementGetArgs> rejectionStatement) {
        this.prompt = Objects.requireNonNull(prompt, "expected parameter 'prompt' to be non-null");
        this.rejectionStatement = Objects.requireNonNull(rejectionStatement, "expected parameter 'rejectionStatement' to be non-null");
    }

    private IntentFollowUpPromptGetArgs() {
        this.prompt = Codegen.empty();
        this.rejectionStatement = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntentFollowUpPromptGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<IntentFollowUpPromptPromptGetArgs> prompt;
        private Output<IntentFollowUpPromptRejectionStatementGetArgs> rejectionStatement;

        public Builder() {
    	      // Empty
        }

        public Builder(IntentFollowUpPromptGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.prompt = defaults.prompt;
    	      this.rejectionStatement = defaults.rejectionStatement;
        }

        public Builder prompt(Output<IntentFollowUpPromptPromptGetArgs> prompt) {
            this.prompt = Objects.requireNonNull(prompt);
            return this;
        }
        public Builder prompt(IntentFollowUpPromptPromptGetArgs prompt) {
            this.prompt = Output.of(Objects.requireNonNull(prompt));
            return this;
        }
        public Builder rejectionStatement(Output<IntentFollowUpPromptRejectionStatementGetArgs> rejectionStatement) {
            this.rejectionStatement = Objects.requireNonNull(rejectionStatement);
            return this;
        }
        public Builder rejectionStatement(IntentFollowUpPromptRejectionStatementGetArgs rejectionStatement) {
            this.rejectionStatement = Output.of(Objects.requireNonNull(rejectionStatement));
            return this;
        }        public IntentFollowUpPromptGetArgs build() {
            return new IntentFollowUpPromptGetArgs(prompt, rejectionStatement);
        }
    }
}
