// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.outputs;

import com.pulumi.aws.ecs.outputs.GetClusterSetting;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterResult {
    /**
     * @return The ARN of the ECS Cluster
     * 
     */
    private final String arn;
    private final String clusterName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The number of pending tasks for the ECS Cluster
     * 
     */
    private final Integer pendingTasksCount;
    /**
     * @return The number of registered container instances for the ECS Cluster
     * 
     */
    private final Integer registeredContainerInstancesCount;
    /**
     * @return The number of running tasks for the ECS Cluster
     * 
     */
    private final Integer runningTasksCount;
    /**
     * @return The settings associated with the ECS Cluster.
     * 
     */
    private final List<GetClusterSetting> settings;
    /**
     * @return The status of the ECS Cluster
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetClusterResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("clusterName") String clusterName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("pendingTasksCount") Integer pendingTasksCount,
        @CustomType.Parameter("registeredContainerInstancesCount") Integer registeredContainerInstancesCount,
        @CustomType.Parameter("runningTasksCount") Integer runningTasksCount,
        @CustomType.Parameter("settings") List<GetClusterSetting> settings,
        @CustomType.Parameter("status") String status) {
        this.arn = arn;
        this.clusterName = clusterName;
        this.id = id;
        this.pendingTasksCount = pendingTasksCount;
        this.registeredContainerInstancesCount = registeredContainerInstancesCount;
        this.runningTasksCount = runningTasksCount;
        this.settings = settings;
        this.status = status;
    }

    /**
     * @return The ARN of the ECS Cluster
     * 
     */
    public String arn() {
        return this.arn;
    }
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number of pending tasks for the ECS Cluster
     * 
     */
    public Integer pendingTasksCount() {
        return this.pendingTasksCount;
    }
    /**
     * @return The number of registered container instances for the ECS Cluster
     * 
     */
    public Integer registeredContainerInstancesCount() {
        return this.registeredContainerInstancesCount;
    }
    /**
     * @return The number of running tasks for the ECS Cluster
     * 
     */
    public Integer runningTasksCount() {
        return this.runningTasksCount;
    }
    /**
     * @return The settings associated with the ECS Cluster.
     * 
     */
    public List<GetClusterSetting> settings() {
        return this.settings;
    }
    /**
     * @return The status of the ECS Cluster
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String clusterName;
        private String id;
        private Integer pendingTasksCount;
        private Integer registeredContainerInstancesCount;
        private Integer runningTasksCount;
        private List<GetClusterSetting> settings;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.clusterName = defaults.clusterName;
    	      this.id = defaults.id;
    	      this.pendingTasksCount = defaults.pendingTasksCount;
    	      this.registeredContainerInstancesCount = defaults.registeredContainerInstancesCount;
    	      this.runningTasksCount = defaults.runningTasksCount;
    	      this.settings = defaults.settings;
    	      this.status = defaults.status;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder clusterName(String clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder pendingTasksCount(Integer pendingTasksCount) {
            this.pendingTasksCount = Objects.requireNonNull(pendingTasksCount);
            return this;
        }
        public Builder registeredContainerInstancesCount(Integer registeredContainerInstancesCount) {
            this.registeredContainerInstancesCount = Objects.requireNonNull(registeredContainerInstancesCount);
            return this;
        }
        public Builder runningTasksCount(Integer runningTasksCount) {
            this.runningTasksCount = Objects.requireNonNull(runningTasksCount);
            return this;
        }
        public Builder settings(List<GetClusterSetting> settings) {
            this.settings = Objects.requireNonNull(settings);
            return this;
        }
        public Builder settings(GetClusterSetting... settings) {
            return settings(List.of(settings));
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetClusterResult build() {
            return new GetClusterResult(arn, clusterName, id, pendingTasksCount, registeredContainerInstancesCount, runningTasksCount, settings, status);
        }
    }
}
