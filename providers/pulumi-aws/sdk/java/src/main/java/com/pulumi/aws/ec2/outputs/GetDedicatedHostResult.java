// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetDedicatedHostFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDedicatedHostResult {
    /**
     * @return The ARN of the Dedicated Host.
     * 
     */
    private final String arn;
    /**
     * @return Whether auto-placement is on or off.
     * 
     */
    private final String autoPlacement;
    /**
     * @return The Availability Zone of the Dedicated Host.
     * 
     */
    private final String availabilityZone;
    /**
     * @return The number of cores on the Dedicated Host.
     * 
     */
    private final Integer cores;
    private final @Nullable List<GetDedicatedHostFilter> filters;
    private final String hostId;
    /**
     * @return Indicates whether host recovery is enabled or disabled for the Dedicated Host.
     * 
     */
    private final String hostRecovery;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The instance family supported by the Dedicated Host. For example, &#34;m5&#34;.
     * 
     */
    private final String instanceFamily;
    /**
     * @return The instance type supported by the Dedicated Host. For example, &#34;m5.large&#34;. If the host supports multiple instance types, no instanceType is returned.
     * 
     */
    private final String instanceType;
    /**
     * @return The ID of the AWS account that owns the Dedicated Host.
     * 
     */
    private final String ownerId;
    /**
     * @return The number of sockets on the Dedicated Host.
     * 
     */
    private final Integer sockets;
    private final Map<String,String> tags;
    /**
     * @return The total number of vCPUs on the Dedicated Host.
     * 
     */
    private final Integer totalVcpus;

    @CustomType.Constructor
    private GetDedicatedHostResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("autoPlacement") String autoPlacement,
        @CustomType.Parameter("availabilityZone") String availabilityZone,
        @CustomType.Parameter("cores") Integer cores,
        @CustomType.Parameter("filters") @Nullable List<GetDedicatedHostFilter> filters,
        @CustomType.Parameter("hostId") String hostId,
        @CustomType.Parameter("hostRecovery") String hostRecovery,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceFamily") String instanceFamily,
        @CustomType.Parameter("instanceType") String instanceType,
        @CustomType.Parameter("ownerId") String ownerId,
        @CustomType.Parameter("sockets") Integer sockets,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("totalVcpus") Integer totalVcpus) {
        this.arn = arn;
        this.autoPlacement = autoPlacement;
        this.availabilityZone = availabilityZone;
        this.cores = cores;
        this.filters = filters;
        this.hostId = hostId;
        this.hostRecovery = hostRecovery;
        this.id = id;
        this.instanceFamily = instanceFamily;
        this.instanceType = instanceType;
        this.ownerId = ownerId;
        this.sockets = sockets;
        this.tags = tags;
        this.totalVcpus = totalVcpus;
    }

    /**
     * @return The ARN of the Dedicated Host.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Whether auto-placement is on or off.
     * 
     */
    public String autoPlacement() {
        return this.autoPlacement;
    }
    /**
     * @return The Availability Zone of the Dedicated Host.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * @return The number of cores on the Dedicated Host.
     * 
     */
    public Integer cores() {
        return this.cores;
    }
    public List<GetDedicatedHostFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public String hostId() {
        return this.hostId;
    }
    /**
     * @return Indicates whether host recovery is enabled or disabled for the Dedicated Host.
     * 
     */
    public String hostRecovery() {
        return this.hostRecovery;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The instance family supported by the Dedicated Host. For example, &#34;m5&#34;.
     * 
     */
    public String instanceFamily() {
        return this.instanceFamily;
    }
    /**
     * @return The instance type supported by the Dedicated Host. For example, &#34;m5.large&#34;. If the host supports multiple instance types, no instanceType is returned.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return The ID of the AWS account that owns the Dedicated Host.
     * 
     */
    public String ownerId() {
        return this.ownerId;
    }
    /**
     * @return The number of sockets on the Dedicated Host.
     * 
     */
    public Integer sockets() {
        return this.sockets;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The total number of vCPUs on the Dedicated Host.
     * 
     */
    public Integer totalVcpus() {
        return this.totalVcpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDedicatedHostResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String autoPlacement;
        private String availabilityZone;
        private Integer cores;
        private @Nullable List<GetDedicatedHostFilter> filters;
        private String hostId;
        private String hostRecovery;
        private String id;
        private String instanceFamily;
        private String instanceType;
        private String ownerId;
        private Integer sockets;
        private Map<String,String> tags;
        private Integer totalVcpus;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDedicatedHostResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.autoPlacement = defaults.autoPlacement;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.cores = defaults.cores;
    	      this.filters = defaults.filters;
    	      this.hostId = defaults.hostId;
    	      this.hostRecovery = defaults.hostRecovery;
    	      this.id = defaults.id;
    	      this.instanceFamily = defaults.instanceFamily;
    	      this.instanceType = defaults.instanceType;
    	      this.ownerId = defaults.ownerId;
    	      this.sockets = defaults.sockets;
    	      this.tags = defaults.tags;
    	      this.totalVcpus = defaults.totalVcpus;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder autoPlacement(String autoPlacement) {
            this.autoPlacement = Objects.requireNonNull(autoPlacement);
            return this;
        }
        public Builder availabilityZone(String availabilityZone) {
            this.availabilityZone = Objects.requireNonNull(availabilityZone);
            return this;
        }
        public Builder cores(Integer cores) {
            this.cores = Objects.requireNonNull(cores);
            return this;
        }
        public Builder filters(@Nullable List<GetDedicatedHostFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetDedicatedHostFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder hostId(String hostId) {
            this.hostId = Objects.requireNonNull(hostId);
            return this;
        }
        public Builder hostRecovery(String hostRecovery) {
            this.hostRecovery = Objects.requireNonNull(hostRecovery);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceFamily(String instanceFamily) {
            this.instanceFamily = Objects.requireNonNull(instanceFamily);
            return this;
        }
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }
        public Builder sockets(Integer sockets) {
            this.sockets = Objects.requireNonNull(sockets);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder totalVcpus(Integer totalVcpus) {
            this.totalVcpus = Objects.requireNonNull(totalVcpus);
            return this;
        }        public GetDedicatedHostResult build() {
            return new GetDedicatedHostResult(arn, autoPlacement, availabilityZone, cores, filters, hostId, hostRecovery, id, instanceFamily, instanceType, ownerId, sockets, tags, totalVcpus);
        }
    }
}
