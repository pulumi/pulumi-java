// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs Empty = new GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs();

    /**
     * The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
     * 
     */
    @Import(name="virtualServiceName", required=true)
    private Output<String> virtualServiceName;

    /**
     * @return The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
     * 
     */
    public Output<String> virtualServiceName() {
        return this.virtualServiceName;
    }

    private GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs() {}

    private GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs(GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs $) {
        this.virtualServiceName = $.virtualServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs $;

        public Builder() {
            $ = new GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs();
        }

        public Builder(GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs defaults) {
            $ = new GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param virtualServiceName The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder virtualServiceName(Output<String> virtualServiceName) {
            $.virtualServiceName = virtualServiceName;
            return this;
        }

        /**
         * @param virtualServiceName The name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.
         * 
         * @return builder
         * 
         */
        public Builder virtualServiceName(String virtualServiceName) {
            return virtualServiceName(Output.of(virtualServiceName));
        }

        public GatewayRouteSpecHttpRouteActionTargetVirtualServiceGetArgs build() {
            $.virtualServiceName = Objects.requireNonNull($.virtualServiceName, "expected parameter 'virtualServiceName' to be non-null");
            return $;
        }
    }

}
