// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.DataSourceParametersAmazonElasticsearchGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersAthenaGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersAuroraGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersAuroraPostgresqlGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersAwsIotAnalyticsGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersJiraGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersMariaDbGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersMysqlGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersOracleGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersPostgresqlGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersPrestoGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersRdsGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersRedshiftGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersS3GetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersServiceNowGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersSnowflakeGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersSparkGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersSqlServerGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersTeradataGetArgs;
import com.pulumi.aws.quicksight.inputs.DataSourceParametersTwitterGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceParametersGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceParametersGetArgs Empty = new DataSourceParametersGetArgs();

    /**
     * Parameters for connecting to Amazon Elasticsearch.
     * 
     */
    @Import(name="amazonElasticsearch")
    private @Nullable Output<DataSourceParametersAmazonElasticsearchGetArgs> amazonElasticsearch;

    public Optional<Output<DataSourceParametersAmazonElasticsearchGetArgs>> amazonElasticsearch() {
        return Optional.ofNullable(this.amazonElasticsearch);
    }

    /**
     * Parameters for connecting to Athena.
     * 
     */
    @Import(name="athena")
    private @Nullable Output<DataSourceParametersAthenaGetArgs> athena;

    public Optional<Output<DataSourceParametersAthenaGetArgs>> athena() {
        return Optional.ofNullable(this.athena);
    }

    /**
     * Parameters for connecting to Aurora MySQL.
     * 
     */
    @Import(name="aurora")
    private @Nullable Output<DataSourceParametersAuroraGetArgs> aurora;

    public Optional<Output<DataSourceParametersAuroraGetArgs>> aurora() {
        return Optional.ofNullable(this.aurora);
    }

    /**
     * Parameters for connecting to Aurora Postgresql.
     * 
     */
    @Import(name="auroraPostgresql")
    private @Nullable Output<DataSourceParametersAuroraPostgresqlGetArgs> auroraPostgresql;

    public Optional<Output<DataSourceParametersAuroraPostgresqlGetArgs>> auroraPostgresql() {
        return Optional.ofNullable(this.auroraPostgresql);
    }

    /**
     * Parameters for connecting to AWS IOT Analytics.
     * 
     */
    @Import(name="awsIotAnalytics")
    private @Nullable Output<DataSourceParametersAwsIotAnalyticsGetArgs> awsIotAnalytics;

    public Optional<Output<DataSourceParametersAwsIotAnalyticsGetArgs>> awsIotAnalytics() {
        return Optional.ofNullable(this.awsIotAnalytics);
    }

    /**
     * Parameters for connecting to Jira.
     * 
     */
    @Import(name="jira")
    private @Nullable Output<DataSourceParametersJiraGetArgs> jira;

    public Optional<Output<DataSourceParametersJiraGetArgs>> jira() {
        return Optional.ofNullable(this.jira);
    }

    /**
     * Parameters for connecting to MariaDB.
     * 
     */
    @Import(name="mariaDb")
    private @Nullable Output<DataSourceParametersMariaDbGetArgs> mariaDb;

    public Optional<Output<DataSourceParametersMariaDbGetArgs>> mariaDb() {
        return Optional.ofNullable(this.mariaDb);
    }

    /**
     * Parameters for connecting to MySQL.
     * 
     */
    @Import(name="mysql")
    private @Nullable Output<DataSourceParametersMysqlGetArgs> mysql;

    public Optional<Output<DataSourceParametersMysqlGetArgs>> mysql() {
        return Optional.ofNullable(this.mysql);
    }

    /**
     * Parameters for connecting to Oracle.
     * 
     */
    @Import(name="oracle")
    private @Nullable Output<DataSourceParametersOracleGetArgs> oracle;

    public Optional<Output<DataSourceParametersOracleGetArgs>> oracle() {
        return Optional.ofNullable(this.oracle);
    }

    /**
     * Parameters for connecting to Postgresql.
     * 
     */
    @Import(name="postgresql")
    private @Nullable Output<DataSourceParametersPostgresqlGetArgs> postgresql;

    public Optional<Output<DataSourceParametersPostgresqlGetArgs>> postgresql() {
        return Optional.ofNullable(this.postgresql);
    }

    /**
     * Parameters for connecting to Presto.
     * 
     */
    @Import(name="presto")
    private @Nullable Output<DataSourceParametersPrestoGetArgs> presto;

    public Optional<Output<DataSourceParametersPrestoGetArgs>> presto() {
        return Optional.ofNullable(this.presto);
    }

    /**
     * Parameters for connecting to RDS.
     * 
     */
    @Import(name="rds")
    private @Nullable Output<DataSourceParametersRdsGetArgs> rds;

    public Optional<Output<DataSourceParametersRdsGetArgs>> rds() {
        return Optional.ofNullable(this.rds);
    }

    /**
     * Parameters for connecting to Redshift.
     * 
     */
    @Import(name="redshift")
    private @Nullable Output<DataSourceParametersRedshiftGetArgs> redshift;

    public Optional<Output<DataSourceParametersRedshiftGetArgs>> redshift() {
        return Optional.ofNullable(this.redshift);
    }

    /**
     * Parameters for connecting to S3.
     * 
     */
    @Import(name="s3")
    private @Nullable Output<DataSourceParametersS3GetArgs> s3;

    public Optional<Output<DataSourceParametersS3GetArgs>> s3() {
        return Optional.ofNullable(this.s3);
    }

    /**
     * Parameters for connecting to ServiceNow.
     * 
     */
    @Import(name="serviceNow")
    private @Nullable Output<DataSourceParametersServiceNowGetArgs> serviceNow;

    public Optional<Output<DataSourceParametersServiceNowGetArgs>> serviceNow() {
        return Optional.ofNullable(this.serviceNow);
    }

    /**
     * Parameters for connecting to Snowflake.
     * 
     */
    @Import(name="snowflake")
    private @Nullable Output<DataSourceParametersSnowflakeGetArgs> snowflake;

    public Optional<Output<DataSourceParametersSnowflakeGetArgs>> snowflake() {
        return Optional.ofNullable(this.snowflake);
    }

    /**
     * Parameters for connecting to Spark.
     * 
     */
    @Import(name="spark")
    private @Nullable Output<DataSourceParametersSparkGetArgs> spark;

    public Optional<Output<DataSourceParametersSparkGetArgs>> spark() {
        return Optional.ofNullable(this.spark);
    }

    /**
     * Parameters for connecting to SQL Server.
     * 
     */
    @Import(name="sqlServer")
    private @Nullable Output<DataSourceParametersSqlServerGetArgs> sqlServer;

    public Optional<Output<DataSourceParametersSqlServerGetArgs>> sqlServer() {
        return Optional.ofNullable(this.sqlServer);
    }

    /**
     * Parameters for connecting to Teradata.
     * 
     */
    @Import(name="teradata")
    private @Nullable Output<DataSourceParametersTeradataGetArgs> teradata;

    public Optional<Output<DataSourceParametersTeradataGetArgs>> teradata() {
        return Optional.ofNullable(this.teradata);
    }

    /**
     * Parameters for connecting to Twitter.
     * 
     */
    @Import(name="twitter")
    private @Nullable Output<DataSourceParametersTwitterGetArgs> twitter;

    public Optional<Output<DataSourceParametersTwitterGetArgs>> twitter() {
        return Optional.ofNullable(this.twitter);
    }

    private DataSourceParametersGetArgs() {}

    private DataSourceParametersGetArgs(DataSourceParametersGetArgs $) {
        this.amazonElasticsearch = $.amazonElasticsearch;
        this.athena = $.athena;
        this.aurora = $.aurora;
        this.auroraPostgresql = $.auroraPostgresql;
        this.awsIotAnalytics = $.awsIotAnalytics;
        this.jira = $.jira;
        this.mariaDb = $.mariaDb;
        this.mysql = $.mysql;
        this.oracle = $.oracle;
        this.postgresql = $.postgresql;
        this.presto = $.presto;
        this.rds = $.rds;
        this.redshift = $.redshift;
        this.s3 = $.s3;
        this.serviceNow = $.serviceNow;
        this.snowflake = $.snowflake;
        this.spark = $.spark;
        this.sqlServer = $.sqlServer;
        this.teradata = $.teradata;
        this.twitter = $.twitter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceParametersGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceParametersGetArgs $;

        public Builder() {
            $ = new DataSourceParametersGetArgs();
        }

        public Builder(DataSourceParametersGetArgs defaults) {
            $ = new DataSourceParametersGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder amazonElasticsearch(@Nullable Output<DataSourceParametersAmazonElasticsearchGetArgs> amazonElasticsearch) {
            $.amazonElasticsearch = amazonElasticsearch;
            return this;
        }

        public Builder amazonElasticsearch(DataSourceParametersAmazonElasticsearchGetArgs amazonElasticsearch) {
            return amazonElasticsearch(Output.of(amazonElasticsearch));
        }

        public Builder athena(@Nullable Output<DataSourceParametersAthenaGetArgs> athena) {
            $.athena = athena;
            return this;
        }

        public Builder athena(DataSourceParametersAthenaGetArgs athena) {
            return athena(Output.of(athena));
        }

        public Builder aurora(@Nullable Output<DataSourceParametersAuroraGetArgs> aurora) {
            $.aurora = aurora;
            return this;
        }

        public Builder aurora(DataSourceParametersAuroraGetArgs aurora) {
            return aurora(Output.of(aurora));
        }

        public Builder auroraPostgresql(@Nullable Output<DataSourceParametersAuroraPostgresqlGetArgs> auroraPostgresql) {
            $.auroraPostgresql = auroraPostgresql;
            return this;
        }

        public Builder auroraPostgresql(DataSourceParametersAuroraPostgresqlGetArgs auroraPostgresql) {
            return auroraPostgresql(Output.of(auroraPostgresql));
        }

        public Builder awsIotAnalytics(@Nullable Output<DataSourceParametersAwsIotAnalyticsGetArgs> awsIotAnalytics) {
            $.awsIotAnalytics = awsIotAnalytics;
            return this;
        }

        public Builder awsIotAnalytics(DataSourceParametersAwsIotAnalyticsGetArgs awsIotAnalytics) {
            return awsIotAnalytics(Output.of(awsIotAnalytics));
        }

        public Builder jira(@Nullable Output<DataSourceParametersJiraGetArgs> jira) {
            $.jira = jira;
            return this;
        }

        public Builder jira(DataSourceParametersJiraGetArgs jira) {
            return jira(Output.of(jira));
        }

        public Builder mariaDb(@Nullable Output<DataSourceParametersMariaDbGetArgs> mariaDb) {
            $.mariaDb = mariaDb;
            return this;
        }

        public Builder mariaDb(DataSourceParametersMariaDbGetArgs mariaDb) {
            return mariaDb(Output.of(mariaDb));
        }

        public Builder mysql(@Nullable Output<DataSourceParametersMysqlGetArgs> mysql) {
            $.mysql = mysql;
            return this;
        }

        public Builder mysql(DataSourceParametersMysqlGetArgs mysql) {
            return mysql(Output.of(mysql));
        }

        public Builder oracle(@Nullable Output<DataSourceParametersOracleGetArgs> oracle) {
            $.oracle = oracle;
            return this;
        }

        public Builder oracle(DataSourceParametersOracleGetArgs oracle) {
            return oracle(Output.of(oracle));
        }

        public Builder postgresql(@Nullable Output<DataSourceParametersPostgresqlGetArgs> postgresql) {
            $.postgresql = postgresql;
            return this;
        }

        public Builder postgresql(DataSourceParametersPostgresqlGetArgs postgresql) {
            return postgresql(Output.of(postgresql));
        }

        public Builder presto(@Nullable Output<DataSourceParametersPrestoGetArgs> presto) {
            $.presto = presto;
            return this;
        }

        public Builder presto(DataSourceParametersPrestoGetArgs presto) {
            return presto(Output.of(presto));
        }

        public Builder rds(@Nullable Output<DataSourceParametersRdsGetArgs> rds) {
            $.rds = rds;
            return this;
        }

        public Builder rds(DataSourceParametersRdsGetArgs rds) {
            return rds(Output.of(rds));
        }

        public Builder redshift(@Nullable Output<DataSourceParametersRedshiftGetArgs> redshift) {
            $.redshift = redshift;
            return this;
        }

        public Builder redshift(DataSourceParametersRedshiftGetArgs redshift) {
            return redshift(Output.of(redshift));
        }

        public Builder s3(@Nullable Output<DataSourceParametersS3GetArgs> s3) {
            $.s3 = s3;
            return this;
        }

        public Builder s3(DataSourceParametersS3GetArgs s3) {
            return s3(Output.of(s3));
        }

        public Builder serviceNow(@Nullable Output<DataSourceParametersServiceNowGetArgs> serviceNow) {
            $.serviceNow = serviceNow;
            return this;
        }

        public Builder serviceNow(DataSourceParametersServiceNowGetArgs serviceNow) {
            return serviceNow(Output.of(serviceNow));
        }

        public Builder snowflake(@Nullable Output<DataSourceParametersSnowflakeGetArgs> snowflake) {
            $.snowflake = snowflake;
            return this;
        }

        public Builder snowflake(DataSourceParametersSnowflakeGetArgs snowflake) {
            return snowflake(Output.of(snowflake));
        }

        public Builder spark(@Nullable Output<DataSourceParametersSparkGetArgs> spark) {
            $.spark = spark;
            return this;
        }

        public Builder spark(DataSourceParametersSparkGetArgs spark) {
            return spark(Output.of(spark));
        }

        public Builder sqlServer(@Nullable Output<DataSourceParametersSqlServerGetArgs> sqlServer) {
            $.sqlServer = sqlServer;
            return this;
        }

        public Builder sqlServer(DataSourceParametersSqlServerGetArgs sqlServer) {
            return sqlServer(Output.of(sqlServer));
        }

        public Builder teradata(@Nullable Output<DataSourceParametersTeradataGetArgs> teradata) {
            $.teradata = teradata;
            return this;
        }

        public Builder teradata(DataSourceParametersTeradataGetArgs teradata) {
            return teradata(Output.of(teradata));
        }

        public Builder twitter(@Nullable Output<DataSourceParametersTwitterGetArgs> twitter) {
            $.twitter = twitter;
            return this;
        }

        public Builder twitter(DataSourceParametersTwitterGetArgs twitter) {
            return twitter(Output.of(twitter));
        }

        public DataSourceParametersGetArgs build() {
            return $;
        }
    }

}
