// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetDataLakeSettingsCreateDatabaseDefaultPermission extends com.pulumi.resources.InvokeArgs {

    public static final GetDataLakeSettingsCreateDatabaseDefaultPermission Empty = new GetDataLakeSettingsCreateDatabaseDefaultPermission();

    /**
     * List of permissions granted to the principal.
     * 
     */
    @Import(name="permissions", required=true)
    private List<String> permissions;

    /**
     * @return List of permissions granted to the principal.
     * 
     */
    public List<String> permissions() {
        return this.permissions;
    }

    /**
     * Principal who is granted permissions.
     * 
     */
    @Import(name="principal", required=true)
    private String principal;

    /**
     * @return Principal who is granted permissions.
     * 
     */
    public String principal() {
        return this.principal;
    }

    private GetDataLakeSettingsCreateDatabaseDefaultPermission() {}

    private GetDataLakeSettingsCreateDatabaseDefaultPermission(GetDataLakeSettingsCreateDatabaseDefaultPermission $) {
        this.permissions = $.permissions;
        this.principal = $.principal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDataLakeSettingsCreateDatabaseDefaultPermission defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDataLakeSettingsCreateDatabaseDefaultPermission $;

        public Builder() {
            $ = new GetDataLakeSettingsCreateDatabaseDefaultPermission();
        }

        public Builder(GetDataLakeSettingsCreateDatabaseDefaultPermission defaults) {
            $ = new GetDataLakeSettingsCreateDatabaseDefaultPermission(Objects.requireNonNull(defaults));
        }

        /**
         * @param permissions List of permissions granted to the principal.
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<String> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions List of permissions granted to the principal.
         * 
         * @return builder
         * 
         */
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }

        /**
         * @param principal Principal who is granted permissions.
         * 
         * @return builder
         * 
         */
        public Builder principal(String principal) {
            $.principal = principal;
            return this;
        }

        public GetDataLakeSettingsCreateDatabaseDefaultPermission build() {
            $.permissions = Objects.requireNonNull($.permissions, "expected parameter 'permissions' to be non-null");
            $.principal = Objects.requireNonNull($.principal, "expected parameter 'principal' to be non-null");
            return $;
        }
    }

}
