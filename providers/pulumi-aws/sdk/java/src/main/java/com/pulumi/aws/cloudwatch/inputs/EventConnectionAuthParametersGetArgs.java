// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersApiKeyGetArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersBasicGetArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersInvocationHttpParametersGetArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersOauthGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventConnectionAuthParametersGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventConnectionAuthParametersGetArgs Empty = new EventConnectionAuthParametersGetArgs();

    /**
     * Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
     * 
     */
    @Import(name="apiKey")
    private @Nullable Output<EventConnectionAuthParametersApiKeyGetArgs> apiKey;

    /**
     * @return Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
     * 
     */
    public Optional<Output<EventConnectionAuthParametersApiKeyGetArgs>> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    /**
     * Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `api_key` and `oauth`. Documented below.
     * 
     */
    @Import(name="basic")
    private @Nullable Output<EventConnectionAuthParametersBasicGetArgs> basic;

    /**
     * @return Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `api_key` and `oauth`. Documented below.
     * 
     */
    public Optional<Output<EventConnectionAuthParametersBasicGetArgs>> basic() {
        return Optional.ofNullable(this.basic);
    }

    /**
     * Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
     * 
     */
    @Import(name="invocationHttpParameters")
    private @Nullable Output<EventConnectionAuthParametersInvocationHttpParametersGetArgs> invocationHttpParameters;

    /**
     * @return Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
     * 
     */
    public Optional<Output<EventConnectionAuthParametersInvocationHttpParametersGetArgs>> invocationHttpParameters() {
        return Optional.ofNullable(this.invocationHttpParameters);
    }

    /**
     * Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `api_key`. Documented below.
     * 
     */
    @Import(name="oauth")
    private @Nullable Output<EventConnectionAuthParametersOauthGetArgs> oauth;

    /**
     * @return Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `api_key`. Documented below.
     * 
     */
    public Optional<Output<EventConnectionAuthParametersOauthGetArgs>> oauth() {
        return Optional.ofNullable(this.oauth);
    }

    private EventConnectionAuthParametersGetArgs() {}

    private EventConnectionAuthParametersGetArgs(EventConnectionAuthParametersGetArgs $) {
        this.apiKey = $.apiKey;
        this.basic = $.basic;
        this.invocationHttpParameters = $.invocationHttpParameters;
        this.oauth = $.oauth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventConnectionAuthParametersGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventConnectionAuthParametersGetArgs $;

        public Builder() {
            $ = new EventConnectionAuthParametersGetArgs();
        }

        public Builder(EventConnectionAuthParametersGetArgs defaults) {
            $ = new EventConnectionAuthParametersGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKey Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(@Nullable Output<EventConnectionAuthParametersApiKeyGetArgs> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param apiKey Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(EventConnectionAuthParametersApiKeyGetArgs apiKey) {
            return apiKey(Output.of(apiKey));
        }

        /**
         * @param basic Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `api_key` and `oauth`. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder basic(@Nullable Output<EventConnectionAuthParametersBasicGetArgs> basic) {
            $.basic = basic;
            return this;
        }

        /**
         * @param basic Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `api_key` and `oauth`. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder basic(EventConnectionAuthParametersBasicGetArgs basic) {
            return basic(Output.of(basic));
        }

        /**
         * @param invocationHttpParameters Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder invocationHttpParameters(@Nullable Output<EventConnectionAuthParametersInvocationHttpParametersGetArgs> invocationHttpParameters) {
            $.invocationHttpParameters = invocationHttpParameters;
            return this;
        }

        /**
         * @param invocationHttpParameters Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder invocationHttpParameters(EventConnectionAuthParametersInvocationHttpParametersGetArgs invocationHttpParameters) {
            return invocationHttpParameters(Output.of(invocationHttpParameters));
        }

        /**
         * @param oauth Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `api_key`. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder oauth(@Nullable Output<EventConnectionAuthParametersOauthGetArgs> oauth) {
            $.oauth = oauth;
            return this;
        }

        /**
         * @param oauth Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `api_key`. Documented below.
         * 
         * @return builder
         * 
         */
        public Builder oauth(EventConnectionAuthParametersOauthGetArgs oauth) {
            return oauth(Output.of(oauth));
        }

        public EventConnectionAuthParametersGetArgs build() {
            return $;
        }
    }

}
