// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.aws.imagebuilder.outputs.GetImagePipelineImageTestsConfiguration;
import com.pulumi.aws.imagebuilder.outputs.GetImagePipelineSchedule;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetImagePipelineResult {
    private final String arn;
    /**
     * @return Amazon Resource Name (ARN) of the container recipe.
     * 
     */
    private final String containerRecipeArn;
    /**
     * @return Date the image pipeline was created.
     * 
     */
    private final String dateCreated;
    /**
     * @return Date the image pipeline was last run.
     * 
     */
    private final String dateLastRun;
    /**
     * @return Date the image pipeline will run next.
     * 
     */
    private final String dateNextRun;
    /**
     * @return Date the image pipeline was updated.
     * 
     */
    private final String dateUpdated;
    /**
     * @return Description of the image pipeline.
     * 
     */
    private final String description;
    /**
     * @return Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    private final String distributionConfigurationArn;
    /**
     * @return Whether additional information about the image being created is collected.
     * 
     */
    private final Boolean enhancedImageMetadataEnabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Amazon Resource Name (ARN) of the image recipe.
     * 
     */
    private final String imageRecipeArn;
    /**
     * @return List of an object with image tests configuration.
     * 
     */
    private final List<GetImagePipelineImageTestsConfiguration> imageTestsConfigurations;
    /**
     * @return Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     */
    private final String infrastructureConfigurationArn;
    /**
     * @return Name of the image pipeline.
     * 
     */
    private final String name;
    /**
     * @return Platform of the image pipeline.
     * 
     */
    private final String platform;
    /**
     * @return List of an object with schedule settings.
     * 
     */
    private final List<GetImagePipelineSchedule> schedules;
    /**
     * @return Status of the image pipeline.
     * 
     */
    private final String status;
    /**
     * @return Key-value map of resource tags for the image pipeline.
     * 
     */
    private final Map<String,String> tags;

    @CustomType.Constructor
    private GetImagePipelineResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("containerRecipeArn") String containerRecipeArn,
        @CustomType.Parameter("dateCreated") String dateCreated,
        @CustomType.Parameter("dateLastRun") String dateLastRun,
        @CustomType.Parameter("dateNextRun") String dateNextRun,
        @CustomType.Parameter("dateUpdated") String dateUpdated,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("distributionConfigurationArn") String distributionConfigurationArn,
        @CustomType.Parameter("enhancedImageMetadataEnabled") Boolean enhancedImageMetadataEnabled,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("imageRecipeArn") String imageRecipeArn,
        @CustomType.Parameter("imageTestsConfigurations") List<GetImagePipelineImageTestsConfiguration> imageTestsConfigurations,
        @CustomType.Parameter("infrastructureConfigurationArn") String infrastructureConfigurationArn,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("platform") String platform,
        @CustomType.Parameter("schedules") List<GetImagePipelineSchedule> schedules,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") Map<String,String> tags) {
        this.arn = arn;
        this.containerRecipeArn = containerRecipeArn;
        this.dateCreated = dateCreated;
        this.dateLastRun = dateLastRun;
        this.dateNextRun = dateNextRun;
        this.dateUpdated = dateUpdated;
        this.description = description;
        this.distributionConfigurationArn = distributionConfigurationArn;
        this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
        this.id = id;
        this.imageRecipeArn = imageRecipeArn;
        this.imageTestsConfigurations = imageTestsConfigurations;
        this.infrastructureConfigurationArn = infrastructureConfigurationArn;
        this.name = name;
        this.platform = platform;
        this.schedules = schedules;
        this.status = status;
        this.tags = tags;
    }

    public String arn() {
        return this.arn;
    }
    /**
     * @return Amazon Resource Name (ARN) of the container recipe.
     * 
     */
    public String containerRecipeArn() {
        return this.containerRecipeArn;
    }
    /**
     * @return Date the image pipeline was created.
     * 
     */
    public String dateCreated() {
        return this.dateCreated;
    }
    /**
     * @return Date the image pipeline was last run.
     * 
     */
    public String dateLastRun() {
        return this.dateLastRun;
    }
    /**
     * @return Date the image pipeline will run next.
     * 
     */
    public String dateNextRun() {
        return this.dateNextRun;
    }
    /**
     * @return Date the image pipeline was updated.
     * 
     */
    public String dateUpdated() {
        return this.dateUpdated;
    }
    /**
     * @return Description of the image pipeline.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    public String distributionConfigurationArn() {
        return this.distributionConfigurationArn;
    }
    /**
     * @return Whether additional information about the image being created is collected.
     * 
     */
    public Boolean enhancedImageMetadataEnabled() {
        return this.enhancedImageMetadataEnabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Amazon Resource Name (ARN) of the image recipe.
     * 
     */
    public String imageRecipeArn() {
        return this.imageRecipeArn;
    }
    /**
     * @return List of an object with image tests configuration.
     * 
     */
    public List<GetImagePipelineImageTestsConfiguration> imageTestsConfigurations() {
        return this.imageTestsConfigurations;
    }
    /**
     * @return Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     */
    public String infrastructureConfigurationArn() {
        return this.infrastructureConfigurationArn;
    }
    /**
     * @return Name of the image pipeline.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Platform of the image pipeline.
     * 
     */
    public String platform() {
        return this.platform;
    }
    /**
     * @return List of an object with schedule settings.
     * 
     */
    public List<GetImagePipelineSchedule> schedules() {
        return this.schedules;
    }
    /**
     * @return Status of the image pipeline.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Key-value map of resource tags for the image pipeline.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagePipelineResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String containerRecipeArn;
        private String dateCreated;
        private String dateLastRun;
        private String dateNextRun;
        private String dateUpdated;
        private String description;
        private String distributionConfigurationArn;
        private Boolean enhancedImageMetadataEnabled;
        private String id;
        private String imageRecipeArn;
        private List<GetImagePipelineImageTestsConfiguration> imageTestsConfigurations;
        private String infrastructureConfigurationArn;
        private String name;
        private String platform;
        private List<GetImagePipelineSchedule> schedules;
        private String status;
        private Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetImagePipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.containerRecipeArn = defaults.containerRecipeArn;
    	      this.dateCreated = defaults.dateCreated;
    	      this.dateLastRun = defaults.dateLastRun;
    	      this.dateNextRun = defaults.dateNextRun;
    	      this.dateUpdated = defaults.dateUpdated;
    	      this.description = defaults.description;
    	      this.distributionConfigurationArn = defaults.distributionConfigurationArn;
    	      this.enhancedImageMetadataEnabled = defaults.enhancedImageMetadataEnabled;
    	      this.id = defaults.id;
    	      this.imageRecipeArn = defaults.imageRecipeArn;
    	      this.imageTestsConfigurations = defaults.imageTestsConfigurations;
    	      this.infrastructureConfigurationArn = defaults.infrastructureConfigurationArn;
    	      this.name = defaults.name;
    	      this.platform = defaults.platform;
    	      this.schedules = defaults.schedules;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder containerRecipeArn(String containerRecipeArn) {
            this.containerRecipeArn = Objects.requireNonNull(containerRecipeArn);
            return this;
        }
        public Builder dateCreated(String dateCreated) {
            this.dateCreated = Objects.requireNonNull(dateCreated);
            return this;
        }
        public Builder dateLastRun(String dateLastRun) {
            this.dateLastRun = Objects.requireNonNull(dateLastRun);
            return this;
        }
        public Builder dateNextRun(String dateNextRun) {
            this.dateNextRun = Objects.requireNonNull(dateNextRun);
            return this;
        }
        public Builder dateUpdated(String dateUpdated) {
            this.dateUpdated = Objects.requireNonNull(dateUpdated);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder distributionConfigurationArn(String distributionConfigurationArn) {
            this.distributionConfigurationArn = Objects.requireNonNull(distributionConfigurationArn);
            return this;
        }
        public Builder enhancedImageMetadataEnabled(Boolean enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = Objects.requireNonNull(enhancedImageMetadataEnabled);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder imageRecipeArn(String imageRecipeArn) {
            this.imageRecipeArn = Objects.requireNonNull(imageRecipeArn);
            return this;
        }
        public Builder imageTestsConfigurations(List<GetImagePipelineImageTestsConfiguration> imageTestsConfigurations) {
            this.imageTestsConfigurations = Objects.requireNonNull(imageTestsConfigurations);
            return this;
        }
        public Builder imageTestsConfigurations(GetImagePipelineImageTestsConfiguration... imageTestsConfigurations) {
            return imageTestsConfigurations(List.of(imageTestsConfigurations));
        }
        public Builder infrastructureConfigurationArn(String infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = Objects.requireNonNull(infrastructureConfigurationArn);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder platform(String platform) {
            this.platform = Objects.requireNonNull(platform);
            return this;
        }
        public Builder schedules(List<GetImagePipelineSchedule> schedules) {
            this.schedules = Objects.requireNonNull(schedules);
            return this;
        }
        public Builder schedules(GetImagePipelineSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }        public GetImagePipelineResult build() {
            return new GetImagePipelineResult(arn, containerRecipeArn, dateCreated, dateLastRun, dateNextRun, dateUpdated, description, distributionConfigurationArn, enhancedImageMetadataEnabled, id, imageRecipeArn, imageTestsConfigurations, infrastructureConfigurationArn, name, platform, schedules, status, tags);
        }
    }
}
