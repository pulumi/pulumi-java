// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.WorkteamMemberDefinitionGetArgs;
import com.pulumi.aws.sagemaker.inputs.WorkteamNotificationConfigurationGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkteamState extends com.pulumi.resources.ResourceArgs {

    public static final WorkteamState Empty = new WorkteamState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Workteam.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * A description of the work team.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognito_member_definition`. For workforces created using your own OIDC identity provider (IdP) use `oidc_member_definition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
     * 
     */
    @Import(name="memberDefinitions")
      private final @Nullable Output<List<WorkteamMemberDefinitionGetArgs>> memberDefinitions;

    public Output<List<WorkteamMemberDefinitionGetArgs>> memberDefinitions() {
        return this.memberDefinitions == null ? Codegen.empty() : this.memberDefinitions;
    }

    /**
     * Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
     * 
     */
    @Import(name="notificationConfiguration")
      private final @Nullable Output<WorkteamNotificationConfigurationGetArgs> notificationConfiguration;

    public Output<WorkteamNotificationConfigurationGetArgs> notificationConfiguration() {
        return this.notificationConfiguration == null ? Codegen.empty() : this.notificationConfiguration;
    }

    /**
     * The subdomain for your OIDC Identity Provider.
     * 
     */
    @Import(name="subdomain")
      private final @Nullable Output<String> subdomain;

    public Output<String> subdomain() {
        return this.subdomain == null ? Codegen.empty() : this.subdomain;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * The name of the Workteam (must be unique).
     * 
     */
    @Import(name="workforceName")
      private final @Nullable Output<String> workforceName;

    public Output<String> workforceName() {
        return this.workforceName == null ? Codegen.empty() : this.workforceName;
    }

    /**
     * The name of the workforce.
     * 
     */
    @Import(name="workteamName")
      private final @Nullable Output<String> workteamName;

    public Output<String> workteamName() {
        return this.workteamName == null ? Codegen.empty() : this.workteamName;
    }

    public WorkteamState(
        @Nullable Output<String> arn,
        @Nullable Output<String> description,
        @Nullable Output<List<WorkteamMemberDefinitionGetArgs>> memberDefinitions,
        @Nullable Output<WorkteamNotificationConfigurationGetArgs> notificationConfiguration,
        @Nullable Output<String> subdomain,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> workforceName,
        @Nullable Output<String> workteamName) {
        this.arn = arn;
        this.description = description;
        this.memberDefinitions = memberDefinitions;
        this.notificationConfiguration = notificationConfiguration;
        this.subdomain = subdomain;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.workforceName = workforceName;
        this.workteamName = workteamName;
    }

    private WorkteamState() {
        this.arn = Codegen.empty();
        this.description = Codegen.empty();
        this.memberDefinitions = Codegen.empty();
        this.notificationConfiguration = Codegen.empty();
        this.subdomain = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.workforceName = Codegen.empty();
        this.workteamName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkteamState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> description;
        private @Nullable Output<List<WorkteamMemberDefinitionGetArgs>> memberDefinitions;
        private @Nullable Output<WorkteamNotificationConfigurationGetArgs> notificationConfiguration;
        private @Nullable Output<String> subdomain;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> workforceName;
        private @Nullable Output<String> workteamName;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkteamState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.memberDefinitions = defaults.memberDefinitions;
    	      this.notificationConfiguration = defaults.notificationConfiguration;
    	      this.subdomain = defaults.subdomain;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.workforceName = defaults.workforceName;
    	      this.workteamName = defaults.workteamName;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder memberDefinitions(@Nullable Output<List<WorkteamMemberDefinitionGetArgs>> memberDefinitions) {
            this.memberDefinitions = memberDefinitions;
            return this;
        }
        public Builder memberDefinitions(@Nullable List<WorkteamMemberDefinitionGetArgs> memberDefinitions) {
            this.memberDefinitions = Codegen.ofNullable(memberDefinitions);
            return this;
        }
        public Builder memberDefinitions(WorkteamMemberDefinitionGetArgs... memberDefinitions) {
            return memberDefinitions(List.of(memberDefinitions));
        }
        public Builder notificationConfiguration(@Nullable Output<WorkteamNotificationConfigurationGetArgs> notificationConfiguration) {
            this.notificationConfiguration = notificationConfiguration;
            return this;
        }
        public Builder notificationConfiguration(@Nullable WorkteamNotificationConfigurationGetArgs notificationConfiguration) {
            this.notificationConfiguration = Codegen.ofNullable(notificationConfiguration);
            return this;
        }
        public Builder subdomain(@Nullable Output<String> subdomain) {
            this.subdomain = subdomain;
            return this;
        }
        public Builder subdomain(@Nullable String subdomain) {
            this.subdomain = Codegen.ofNullable(subdomain);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder workforceName(@Nullable Output<String> workforceName) {
            this.workforceName = workforceName;
            return this;
        }
        public Builder workforceName(@Nullable String workforceName) {
            this.workforceName = Codegen.ofNullable(workforceName);
            return this;
        }
        public Builder workteamName(@Nullable Output<String> workteamName) {
            this.workteamName = workteamName;
            return this;
        }
        public Builder workteamName(@Nullable String workteamName) {
            this.workteamName = Codegen.ofNullable(workteamName);
            return this;
        }        public WorkteamState build() {
            return new WorkteamState(arn, description, memberDefinitions, notificationConfiguration, subdomain, tags, tagsAll, workforceName, workteamName);
        }
    }
}
