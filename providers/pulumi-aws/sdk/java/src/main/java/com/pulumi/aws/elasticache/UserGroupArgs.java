// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserGroupArgs Empty = new UserGroupArgs();

    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The current supported value is `REDIS`.
     * 
     */
    @Import(name="engine", required=true)
      private final Output<String> engine;

    public Output<String> engine() {
        return this.engine;
    }

    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The ID of the user group.
     * 
     */
    @Import(name="userGroupId", required=true)
      private final Output<String> userGroupId;

    public Output<String> userGroupId() {
        return this.userGroupId;
    }

    /**
     * The list of user IDs that belong to the user group.
     * 
     */
    @Import(name="userIds")
      private final @Nullable Output<List<String>> userIds;

    public Output<List<String>> userIds() {
        return this.userIds == null ? Codegen.empty() : this.userIds;
    }

    public UserGroupArgs(
        @Nullable Output<String> arn,
        Output<String> engine,
        @Nullable Output<Map<String,String>> tags,
        Output<String> userGroupId,
        @Nullable Output<List<String>> userIds) {
        this.arn = arn;
        this.engine = Objects.requireNonNull(engine, "expected parameter 'engine' to be non-null");
        this.tags = tags;
        this.userGroupId = Objects.requireNonNull(userGroupId, "expected parameter 'userGroupId' to be non-null");
        this.userIds = userIds;
    }

    private UserGroupArgs() {
        this.arn = Codegen.empty();
        this.engine = Codegen.empty();
        this.tags = Codegen.empty();
        this.userGroupId = Codegen.empty();
        this.userIds = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private Output<String> engine;
        private @Nullable Output<Map<String,String>> tags;
        private Output<String> userGroupId;
        private @Nullable Output<List<String>> userIds;

        public Builder() {
    	      // Empty
        }

        public Builder(UserGroupArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.engine = defaults.engine;
    	      this.tags = defaults.tags;
    	      this.userGroupId = defaults.userGroupId;
    	      this.userIds = defaults.userIds;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder engine(Output<String> engine) {
            this.engine = Objects.requireNonNull(engine);
            return this;
        }
        public Builder engine(String engine) {
            this.engine = Output.of(Objects.requireNonNull(engine));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder userGroupId(Output<String> userGroupId) {
            this.userGroupId = Objects.requireNonNull(userGroupId);
            return this;
        }
        public Builder userGroupId(String userGroupId) {
            this.userGroupId = Output.of(Objects.requireNonNull(userGroupId));
            return this;
        }
        public Builder userIds(@Nullable Output<List<String>> userIds) {
            this.userIds = userIds;
            return this;
        }
        public Builder userIds(@Nullable List<String> userIds) {
            this.userIds = Codegen.ofNullable(userIds);
            return this;
        }
        public Builder userIds(String... userIds) {
            return userIds(List.of(userIds));
        }        public UserGroupArgs build() {
            return new UserGroupArgs(arn, engine, tags, userGroupId, userIds);
        }
    }
}
