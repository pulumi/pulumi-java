// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolGrpcGetArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolHttp2GetArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolHttpGetArgs;
import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolTcpGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualNodeSpecListenerConnectionPoolGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNodeSpecListenerConnectionPoolGetArgs Empty = new VirtualNodeSpecListenerConnectionPoolGetArgs();

    /**
     * Connection pool information for gRPC listeners.
     * 
     */
    @Import(name="grpc")
    private @Nullable Output<VirtualNodeSpecListenerConnectionPoolGrpcGetArgs> grpc;

    /**
     * @return Connection pool information for gRPC listeners.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerConnectionPoolGrpcGetArgs>> grpc() {
        return Optional.ofNullable(this.grpc);
    }

    /**
     * Connection pool information for HTTP listeners.
     * 
     */
    @Import(name="http")
    private @Nullable Output<VirtualNodeSpecListenerConnectionPoolHttpGetArgs> http;

    /**
     * @return Connection pool information for HTTP listeners.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerConnectionPoolHttpGetArgs>> http() {
        return Optional.ofNullable(this.http);
    }

    /**
     * Connection pool information for HTTP2 listeners.
     * 
     */
    @Import(name="http2")
    private @Nullable Output<VirtualNodeSpecListenerConnectionPoolHttp2GetArgs> http2;

    /**
     * @return Connection pool information for HTTP2 listeners.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerConnectionPoolHttp2GetArgs>> http2() {
        return Optional.ofNullable(this.http2);
    }

    /**
     * Connection pool information for TCP listeners.
     * 
     */
    @Import(name="tcp")
    private @Nullable Output<VirtualNodeSpecListenerConnectionPoolTcpGetArgs> tcp;

    /**
     * @return Connection pool information for TCP listeners.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerConnectionPoolTcpGetArgs>> tcp() {
        return Optional.ofNullable(this.tcp);
    }

    private VirtualNodeSpecListenerConnectionPoolGetArgs() {}

    private VirtualNodeSpecListenerConnectionPoolGetArgs(VirtualNodeSpecListenerConnectionPoolGetArgs $) {
        this.grpc = $.grpc;
        this.http = $.http;
        this.http2 = $.http2;
        this.tcp = $.tcp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNodeSpecListenerConnectionPoolGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNodeSpecListenerConnectionPoolGetArgs $;

        public Builder() {
            $ = new VirtualNodeSpecListenerConnectionPoolGetArgs();
        }

        public Builder(VirtualNodeSpecListenerConnectionPoolGetArgs defaults) {
            $ = new VirtualNodeSpecListenerConnectionPoolGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param grpc Connection pool information for gRPC listeners.
         * 
         * @return builder
         * 
         */
        public Builder grpc(@Nullable Output<VirtualNodeSpecListenerConnectionPoolGrpcGetArgs> grpc) {
            $.grpc = grpc;
            return this;
        }

        /**
         * @param grpc Connection pool information for gRPC listeners.
         * 
         * @return builder
         * 
         */
        public Builder grpc(VirtualNodeSpecListenerConnectionPoolGrpcGetArgs grpc) {
            return grpc(Output.of(grpc));
        }

        /**
         * @param http Connection pool information for HTTP listeners.
         * 
         * @return builder
         * 
         */
        public Builder http(@Nullable Output<VirtualNodeSpecListenerConnectionPoolHttpGetArgs> http) {
            $.http = http;
            return this;
        }

        /**
         * @param http Connection pool information for HTTP listeners.
         * 
         * @return builder
         * 
         */
        public Builder http(VirtualNodeSpecListenerConnectionPoolHttpGetArgs http) {
            return http(Output.of(http));
        }

        /**
         * @param http2 Connection pool information for HTTP2 listeners.
         * 
         * @return builder
         * 
         */
        public Builder http2(@Nullable Output<VirtualNodeSpecListenerConnectionPoolHttp2GetArgs> http2) {
            $.http2 = http2;
            return this;
        }

        /**
         * @param http2 Connection pool information for HTTP2 listeners.
         * 
         * @return builder
         * 
         */
        public Builder http2(VirtualNodeSpecListenerConnectionPoolHttp2GetArgs http2) {
            return http2(Output.of(http2));
        }

        /**
         * @param tcp Connection pool information for TCP listeners.
         * 
         * @return builder
         * 
         */
        public Builder tcp(@Nullable Output<VirtualNodeSpecListenerConnectionPoolTcpGetArgs> tcp) {
            $.tcp = tcp;
            return this;
        }

        /**
         * @param tcp Connection pool information for TCP listeners.
         * 
         * @return builder
         * 
         */
        public Builder tcp(VirtualNodeSpecListenerConnectionPoolTcpGetArgs tcp) {
            return tcp(Output.of(tcp));
        }

        public VirtualNodeSpecListenerConnectionPoolGetArgs build() {
            return $;
        }
    }

}
