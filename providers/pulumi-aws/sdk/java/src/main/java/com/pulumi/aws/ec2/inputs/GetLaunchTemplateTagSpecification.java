// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class GetLaunchTemplateTagSpecification extends com.pulumi.resources.InvokeArgs {

    public static final GetLaunchTemplateTagSpecification Empty = new GetLaunchTemplateTagSpecification();

    @Import(name="resourceType", required=true)
    private String resourceType;

    public String resourceType() {
        return this.resourceType;
    }

    /**
     * A map of tags, each pair of which must exactly match a pair on the desired Launch Template.
     * 
     */
    @Import(name="tags", required=true)
    private Map<String,String> tags;

    public Map<String,String> tags() {
        return this.tags;
    }

    private GetLaunchTemplateTagSpecification() {}

    private GetLaunchTemplateTagSpecification(GetLaunchTemplateTagSpecification $) {
        this.resourceType = $.resourceType;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLaunchTemplateTagSpecification defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLaunchTemplateTagSpecification $;

        public Builder() {
            $ = new GetLaunchTemplateTagSpecification();
        }

        public Builder(GetLaunchTemplateTagSpecification defaults) {
            $ = new GetLaunchTemplateTagSpecification(Objects.requireNonNull(defaults));
        }

        public Builder resourceType(String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetLaunchTemplateTagSpecification build() {
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            $.tags = Objects.requireNonNull($.tags, "expected parameter 'tags' to be non-null");
            return $;
        }
    }

}
