// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mq.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetBrokerUser extends com.pulumi.resources.InvokeArgs {

    public static final GetBrokerUser Empty = new GetBrokerUser();

    @Import(name="consoleAccess", required=true)
    private Boolean consoleAccess;

    public Boolean consoleAccess() {
        return this.consoleAccess;
    }

    @Import(name="groups", required=true)
    private List<String> groups;

    public List<String> groups() {
        return this.groups;
    }

    @Import(name="username", required=true)
    private String username;

    public String username() {
        return this.username;
    }

    private GetBrokerUser() {}

    private GetBrokerUser(GetBrokerUser $) {
        this.consoleAccess = $.consoleAccess;
        this.groups = $.groups;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBrokerUser defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBrokerUser $;

        public Builder() {
            $ = new GetBrokerUser();
        }

        public Builder(GetBrokerUser defaults) {
            $ = new GetBrokerUser(Objects.requireNonNull(defaults));
        }

        public Builder consoleAccess(Boolean consoleAccess) {
            $.consoleAccess = consoleAccess;
            return this;
        }

        public Builder groups(List<String> groups) {
            $.groups = groups;
            return this;
        }

        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }

        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public GetBrokerUser build() {
            $.consoleAccess = Objects.requireNonNull($.consoleAccess, "expected parameter 'consoleAccess' to be non-null");
            $.groups = Objects.requireNonNull($.groups, "expected parameter 'groups' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
