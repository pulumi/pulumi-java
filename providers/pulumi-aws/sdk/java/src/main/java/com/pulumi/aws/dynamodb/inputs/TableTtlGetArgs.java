// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dynamodb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableTtlGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableTtlGetArgs Empty = new TableTtlGetArgs();

    /**
     * The name of the table attribute to store the TTL timestamp in.
     * 
     */
    @Import(name="attributeName", required=true)
    private Output<String> attributeName;

    public Output<String> attributeName() {
        return this.attributeName;
    }

    /**
     * Indicates whether ttl is enabled (true) or disabled (false).
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    private TableTtlGetArgs() {}

    private TableTtlGetArgs(TableTtlGetArgs $) {
        this.attributeName = $.attributeName;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableTtlGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableTtlGetArgs $;

        public Builder() {
            $ = new TableTtlGetArgs();
        }

        public Builder(TableTtlGetArgs defaults) {
            $ = new TableTtlGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributeName(Output<String> attributeName) {
            $.attributeName = attributeName;
            return this;
        }

        public Builder attributeName(String attributeName) {
            return attributeName(Output.of(attributeName));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public TableTtlGetArgs build() {
            $.attributeName = Objects.requireNonNull($.attributeName, "expected parameter 'attributeName' to be non-null");
            return $;
        }
    }

}
