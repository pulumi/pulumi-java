// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.BucketObjectLockConfigurationRuleGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketObjectLockConfigurationGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketObjectLockConfigurationGetArgs Empty = new BucketObjectLockConfigurationGetArgs();

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
     * 
     */
    @Import(name="objectLockEnabled", required=true)
    private Output<String> objectLockEnabled;

    /**
     * @return Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
     * 
     */
    public Output<String> objectLockEnabled() {
        return this.objectLockEnabled;
    }

    /**
     * The Object Lock rule in place for this bucket.
     * 
     */
    @Import(name="rule")
    private @Nullable Output<BucketObjectLockConfigurationRuleGetArgs> rule;

    /**
     * @return The Object Lock rule in place for this bucket.
     * 
     */
    public Optional<Output<BucketObjectLockConfigurationRuleGetArgs>> rule() {
        return Optional.ofNullable(this.rule);
    }

    private BucketObjectLockConfigurationGetArgs() {}

    private BucketObjectLockConfigurationGetArgs(BucketObjectLockConfigurationGetArgs $) {
        this.objectLockEnabled = $.objectLockEnabled;
        this.rule = $.rule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketObjectLockConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketObjectLockConfigurationGetArgs $;

        public Builder() {
            $ = new BucketObjectLockConfigurationGetArgs();
        }

        public Builder(BucketObjectLockConfigurationGetArgs defaults) {
            $ = new BucketObjectLockConfigurationGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param objectLockEnabled Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
         * 
         * @return builder
         * 
         */
        public Builder objectLockEnabled(Output<String> objectLockEnabled) {
            $.objectLockEnabled = objectLockEnabled;
            return this;
        }

        /**
         * @param objectLockEnabled Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
         * 
         * @return builder
         * 
         */
        public Builder objectLockEnabled(String objectLockEnabled) {
            return objectLockEnabled(Output.of(objectLockEnabled));
        }

        /**
         * @param rule The Object Lock rule in place for this bucket.
         * 
         * @return builder
         * 
         */
        public Builder rule(@Nullable Output<BucketObjectLockConfigurationRuleGetArgs> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule The Object Lock rule in place for this bucket.
         * 
         * @return builder
         * 
         */
        public Builder rule(BucketObjectLockConfigurationRuleGetArgs rule) {
            return rule(Output.of(rule));
        }

        public BucketObjectLockConfigurationGetArgs build() {
            $.objectLockEnabled = Objects.requireNonNull($.objectLockEnabled, "expected parameter 'objectLockEnabled' to be non-null");
            return $;
        }
    }

}
