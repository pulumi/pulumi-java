// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateOptionsGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateOptionsGetArgs Empty = new CertificateOptionsGetArgs();

    /**
     * Specifies whether certificate details should be added to a certificate transparency log. Valid values are `ENABLED` or `DISABLED`. See https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency for more details.
     * 
     */
    @Import(name="certificateTransparencyLoggingPreference")
    private @Nullable Output<String> certificateTransparencyLoggingPreference;

    public Optional<Output<String>> certificateTransparencyLoggingPreference() {
        return Optional.ofNullable(this.certificateTransparencyLoggingPreference);
    }

    private CertificateOptionsGetArgs() {}

    private CertificateOptionsGetArgs(CertificateOptionsGetArgs $) {
        this.certificateTransparencyLoggingPreference = $.certificateTransparencyLoggingPreference;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateOptionsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateOptionsGetArgs $;

        public Builder() {
            $ = new CertificateOptionsGetArgs();
        }

        public Builder(CertificateOptionsGetArgs defaults) {
            $ = new CertificateOptionsGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificateTransparencyLoggingPreference(@Nullable Output<String> certificateTransparencyLoggingPreference) {
            $.certificateTransparencyLoggingPreference = certificateTransparencyLoggingPreference;
            return this;
        }

        public Builder certificateTransparencyLoggingPreference(String certificateTransparencyLoggingPreference) {
            return certificateTransparencyLoggingPreference(Output.of(certificateTransparencyLoggingPreference));
        }

        public CertificateOptionsGetArgs build() {
            return $;
        }
    }

}
