// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.memorydb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserAuthenticationMode {
    /**
     * @return The number of passwords belonging to the user.
     * 
     */
    private final Integer passwordCount;
    /**
     * @return Indicates whether the user requires a password to authenticate.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetUserAuthenticationMode(
        @CustomType.Parameter("passwordCount") Integer passwordCount,
        @CustomType.Parameter("type") String type) {
        this.passwordCount = passwordCount;
        this.type = type;
    }

    /**
     * @return The number of passwords belonging to the user.
     * 
     */
    public Integer passwordCount() {
        return this.passwordCount;
    }
    /**
     * @return Indicates whether the user requires a password to authenticate.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAuthenticationMode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer passwordCount;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUserAuthenticationMode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.passwordCount = defaults.passwordCount;
    	      this.type = defaults.type;
        }

        public Builder passwordCount(Integer passwordCount) {
            this.passwordCount = Objects.requireNonNull(passwordCount);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetUserAuthenticationMode build() {
            return new GetUserAuthenticationMode(passwordCount, type);
        }
    }
}
