// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementExcludedRuleArgs;
import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAclRuleStatementManagedRuleGroupStatementArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAclRuleStatementManagedRuleGroupStatementArgs Empty = new WebAclRuleStatementManagedRuleGroupStatementArgs();

    /**
     * The `rules` whose actions are set to `COUNT` by the web ACL, regardless of the action that is set on the rule. See Excluded Rule below for details.
     * 
     */
    @Import(name="excludedRules")
    private @Nullable Output<List<WebAclRuleStatementManagedRuleGroupStatementExcludedRuleArgs>> excludedRules;

    public Optional<Output<List<WebAclRuleStatementManagedRuleGroupStatementExcludedRuleArgs>>> excludedRules() {
        return Optional.ofNullable(this.excludedRules);
    }

    /**
     * The name of the managed rule group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     * Narrows the scope of the statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See Statement above for details.
     * 
     */
    @Import(name="scopeDownStatement")
    private @Nullable Output<WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs> scopeDownStatement;

    public Optional<Output<WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs>> scopeDownStatement() {
        return Optional.ofNullable(this.scopeDownStatement);
    }

    /**
     * The name of the managed rule group vendor.
     * 
     */
    @Import(name="vendorName", required=true)
    private Output<String> vendorName;

    public Output<String> vendorName() {
        return this.vendorName;
    }

    private WebAclRuleStatementManagedRuleGroupStatementArgs() {}

    private WebAclRuleStatementManagedRuleGroupStatementArgs(WebAclRuleStatementManagedRuleGroupStatementArgs $) {
        this.excludedRules = $.excludedRules;
        this.name = $.name;
        this.scopeDownStatement = $.scopeDownStatement;
        this.vendorName = $.vendorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAclRuleStatementManagedRuleGroupStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAclRuleStatementManagedRuleGroupStatementArgs $;

        public Builder() {
            $ = new WebAclRuleStatementManagedRuleGroupStatementArgs();
        }

        public Builder(WebAclRuleStatementManagedRuleGroupStatementArgs defaults) {
            $ = new WebAclRuleStatementManagedRuleGroupStatementArgs(Objects.requireNonNull(defaults));
        }

        public Builder excludedRules(@Nullable Output<List<WebAclRuleStatementManagedRuleGroupStatementExcludedRuleArgs>> excludedRules) {
            $.excludedRules = excludedRules;
            return this;
        }

        public Builder excludedRules(List<WebAclRuleStatementManagedRuleGroupStatementExcludedRuleArgs> excludedRules) {
            return excludedRules(Output.of(excludedRules));
        }

        public Builder excludedRules(WebAclRuleStatementManagedRuleGroupStatementExcludedRuleArgs... excludedRules) {
            return excludedRules(List.of(excludedRules));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder scopeDownStatement(@Nullable Output<WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs> scopeDownStatement) {
            $.scopeDownStatement = scopeDownStatement;
            return this;
        }

        public Builder scopeDownStatement(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs scopeDownStatement) {
            return scopeDownStatement(Output.of(scopeDownStatement));
        }

        public Builder vendorName(Output<String> vendorName) {
            $.vendorName = vendorName;
            return this;
        }

        public Builder vendorName(String vendorName) {
            return vendorName(Output.of(vendorName));
        }

        public WebAclRuleStatementManagedRuleGroupStatementArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.vendorName = Objects.requireNonNull($.vendorName, "expected parameter 'vendorName' to be non-null");
            return $;
        }
    }

}
