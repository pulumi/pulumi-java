// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceNetworkInterfaceGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceNetworkInterfaceGetArgs Empty = new InstanceNetworkInterfaceGetArgs();

    /**
     * Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
     * 
     */
    @Import(name="deleteOnTermination")
    private @Nullable Output<Boolean> deleteOnTermination;

    public Optional<Output<Boolean>> deleteOnTermination() {
        return Optional.ofNullable(this.deleteOnTermination);
    }

    /**
     * Integer index of the network interface attachment. Limited by instance type.
     * 
     */
    @Import(name="deviceIndex", required=true)
    private Output<Integer> deviceIndex;

    public Output<Integer> deviceIndex() {
        return this.deviceIndex;
    }

    /**
     * ID of the network interface to attach.
     * 
     */
    @Import(name="networkInterfaceId", required=true)
    private Output<String> networkInterfaceId;

    public Output<String> networkInterfaceId() {
        return this.networkInterfaceId;
    }

    private InstanceNetworkInterfaceGetArgs() {}

    private InstanceNetworkInterfaceGetArgs(InstanceNetworkInterfaceGetArgs $) {
        this.deleteOnTermination = $.deleteOnTermination;
        this.deviceIndex = $.deviceIndex;
        this.networkInterfaceId = $.networkInterfaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceNetworkInterfaceGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceNetworkInterfaceGetArgs $;

        public Builder() {
            $ = new InstanceNetworkInterfaceGetArgs();
        }

        public Builder(InstanceNetworkInterfaceGetArgs defaults) {
            $ = new InstanceNetworkInterfaceGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder deleteOnTermination(@Nullable Output<Boolean> deleteOnTermination) {
            $.deleteOnTermination = deleteOnTermination;
            return this;
        }

        public Builder deleteOnTermination(Boolean deleteOnTermination) {
            return deleteOnTermination(Output.of(deleteOnTermination));
        }

        public Builder deviceIndex(Output<Integer> deviceIndex) {
            $.deviceIndex = deviceIndex;
            return this;
        }

        public Builder deviceIndex(Integer deviceIndex) {
            return deviceIndex(Output.of(deviceIndex));
        }

        public Builder networkInterfaceId(Output<String> networkInterfaceId) {
            $.networkInterfaceId = networkInterfaceId;
            return this;
        }

        public Builder networkInterfaceId(String networkInterfaceId) {
            return networkInterfaceId(Output.of(networkInterfaceId));
        }

        public InstanceNetworkInterfaceGetArgs build() {
            $.deviceIndex = Objects.requireNonNull($.deviceIndex, "expected parameter 'deviceIndex' to be non-null");
            $.networkInterfaceId = Objects.requireNonNull($.networkInterfaceId, "expected parameter 'networkInterfaceId' to be non-null");
            return $;
        }
    }

}
