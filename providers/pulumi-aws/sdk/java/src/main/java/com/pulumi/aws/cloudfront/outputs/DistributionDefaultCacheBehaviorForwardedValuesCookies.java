// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class DistributionDefaultCacheBehaviorForwardedValuesCookies {
    /**
     * @return Specifies whether you want CloudFront to forward
     * cookies to the origin that is associated with this cache behavior. You can
     * specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
     * subsequent `whitelisted_names`
     * 
     */
    private final String forward;
    /**
     * @return If you have specified `whitelist` to
     * `forward`, the whitelisted cookies that you want CloudFront to forward to
     * your origin.
     * 
     */
    private final @Nullable List<String> whitelistedNames;

    @CustomType.Constructor
    private DistributionDefaultCacheBehaviorForwardedValuesCookies(
        @CustomType.Parameter("forward") String forward,
        @CustomType.Parameter("whitelistedNames") @Nullable List<String> whitelistedNames) {
        this.forward = forward;
        this.whitelistedNames = whitelistedNames;
    }

    /**
     * @return Specifies whether you want CloudFront to forward
     * cookies to the origin that is associated with this cache behavior. You can
     * specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
     * subsequent `whitelisted_names`
     * 
     */
    public String forward() {
        return this.forward;
    }
    /**
     * @return If you have specified `whitelist` to
     * `forward`, the whitelisted cookies that you want CloudFront to forward to
     * your origin.
     * 
     */
    public List<String> whitelistedNames() {
        return this.whitelistedNames == null ? List.of() : this.whitelistedNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionDefaultCacheBehaviorForwardedValuesCookies defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String forward;
        private @Nullable List<String> whitelistedNames;

        public Builder() {
    	      // Empty
        }

        public Builder(DistributionDefaultCacheBehaviorForwardedValuesCookies defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forward = defaults.forward;
    	      this.whitelistedNames = defaults.whitelistedNames;
        }

        public Builder forward(String forward) {
            this.forward = Objects.requireNonNull(forward);
            return this;
        }
        public Builder whitelistedNames(@Nullable List<String> whitelistedNames) {
            this.whitelistedNames = whitelistedNames;
            return this;
        }
        public Builder whitelistedNames(String... whitelistedNames) {
            return whitelistedNames(List.of(whitelistedNames));
        }        public DistributionDefaultCacheBehaviorForwardedValuesCookies build() {
            return new DistributionDefaultCacheBehaviorForwardedValuesCookies(forward, whitelistedNames);
        }
    }
}
