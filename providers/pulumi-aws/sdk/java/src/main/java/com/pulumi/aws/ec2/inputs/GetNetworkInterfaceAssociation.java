// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkInterfaceAssociation extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkInterfaceAssociation Empty = new GetNetworkInterfaceAssociation();

    /**
     * The allocation ID.
     * 
     */
    @Import(name="allocationId", required=true)
    private String allocationId;

    public String allocationId() {
        return this.allocationId;
    }

    /**
     * The association ID.
     * 
     */
    @Import(name="associationId", required=true)
    private String associationId;

    public String associationId() {
        return this.associationId;
    }

    /**
     * The carrier IP address associated with the network interface. This attribute is only set when the network interface is in a subnet which is associated with a Wavelength Zone.
     * 
     */
    @Import(name="carrierIp", required=true)
    private String carrierIp;

    public String carrierIp() {
        return this.carrierIp;
    }

    /**
     * The customer-owned IP address.
     * 
     */
    @Import(name="customerOwnedIp", required=true)
    private String customerOwnedIp;

    public String customerOwnedIp() {
        return this.customerOwnedIp;
    }

    /**
     * The ID of the Elastic IP address owner.
     * 
     */
    @Import(name="ipOwnerId", required=true)
    private String ipOwnerId;

    public String ipOwnerId() {
        return this.ipOwnerId;
    }

    /**
     * The public DNS name.
     * 
     */
    @Import(name="publicDnsName", required=true)
    private String publicDnsName;

    public String publicDnsName() {
        return this.publicDnsName;
    }

    /**
     * The address of the Elastic IP address bound to the network interface.
     * 
     */
    @Import(name="publicIp", required=true)
    private String publicIp;

    public String publicIp() {
        return this.publicIp;
    }

    private GetNetworkInterfaceAssociation() {}

    private GetNetworkInterfaceAssociation(GetNetworkInterfaceAssociation $) {
        this.allocationId = $.allocationId;
        this.associationId = $.associationId;
        this.carrierIp = $.carrierIp;
        this.customerOwnedIp = $.customerOwnedIp;
        this.ipOwnerId = $.ipOwnerId;
        this.publicDnsName = $.publicDnsName;
        this.publicIp = $.publicIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkInterfaceAssociation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkInterfaceAssociation $;

        public Builder() {
            $ = new GetNetworkInterfaceAssociation();
        }

        public Builder(GetNetworkInterfaceAssociation defaults) {
            $ = new GetNetworkInterfaceAssociation(Objects.requireNonNull(defaults));
        }

        public Builder allocationId(String allocationId) {
            $.allocationId = allocationId;
            return this;
        }

        public Builder associationId(String associationId) {
            $.associationId = associationId;
            return this;
        }

        public Builder carrierIp(String carrierIp) {
            $.carrierIp = carrierIp;
            return this;
        }

        public Builder customerOwnedIp(String customerOwnedIp) {
            $.customerOwnedIp = customerOwnedIp;
            return this;
        }

        public Builder ipOwnerId(String ipOwnerId) {
            $.ipOwnerId = ipOwnerId;
            return this;
        }

        public Builder publicDnsName(String publicDnsName) {
            $.publicDnsName = publicDnsName;
            return this;
        }

        public Builder publicIp(String publicIp) {
            $.publicIp = publicIp;
            return this;
        }

        public GetNetworkInterfaceAssociation build() {
            $.allocationId = Objects.requireNonNull($.allocationId, "expected parameter 'allocationId' to be non-null");
            $.associationId = Objects.requireNonNull($.associationId, "expected parameter 'associationId' to be non-null");
            $.carrierIp = Objects.requireNonNull($.carrierIp, "expected parameter 'carrierIp' to be non-null");
            $.customerOwnedIp = Objects.requireNonNull($.customerOwnedIp, "expected parameter 'customerOwnedIp' to be non-null");
            $.ipOwnerId = Objects.requireNonNull($.ipOwnerId, "expected parameter 'ipOwnerId' to be non-null");
            $.publicDnsName = Objects.requireNonNull($.publicDnsName, "expected parameter 'publicDnsName' to be non-null");
            $.publicIp = Objects.requireNonNull($.publicIp, "expected parameter 'publicIp' to be non-null");
            return $;
        }
    }

}
