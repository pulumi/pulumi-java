// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2;

import com.pulumi.aws.ec2.inputs.VpcIpamPoolCidrCidrAuthorizationContextArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VpcIpamPoolCidrArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcIpamPoolCidrArgs Empty = new VpcIpamPoolCidrArgs();

    /**
     * The CIDR you want to assign to the pool.
     * 
     */
    @Import(name="cidr")
      private final @Nullable Output<String> cidr;

    public Output<String> cidr() {
        return this.cidr == null ? Codegen.empty() : this.cidr;
    }

    /**
     * A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See cidr_authorization_context for more information.
     * 
     */
    @Import(name="cidrAuthorizationContext")
      private final @Nullable Output<VpcIpamPoolCidrCidrAuthorizationContextArgs> cidrAuthorizationContext;

    public Output<VpcIpamPoolCidrCidrAuthorizationContextArgs> cidrAuthorizationContext() {
        return this.cidrAuthorizationContext == null ? Codegen.empty() : this.cidrAuthorizationContext;
    }

    /**
     * The ID of the pool to which you want to assign a CIDR.
     * 
     */
    @Import(name="ipamPoolId", required=true)
      private final Output<String> ipamPoolId;

    public Output<String> ipamPoolId() {
        return this.ipamPoolId;
    }

    public VpcIpamPoolCidrArgs(
        @Nullable Output<String> cidr,
        @Nullable Output<VpcIpamPoolCidrCidrAuthorizationContextArgs> cidrAuthorizationContext,
        Output<String> ipamPoolId) {
        this.cidr = cidr;
        this.cidrAuthorizationContext = cidrAuthorizationContext;
        this.ipamPoolId = Objects.requireNonNull(ipamPoolId, "expected parameter 'ipamPoolId' to be non-null");
    }

    private VpcIpamPoolCidrArgs() {
        this.cidr = Codegen.empty();
        this.cidrAuthorizationContext = Codegen.empty();
        this.ipamPoolId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpcIpamPoolCidrArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> cidr;
        private @Nullable Output<VpcIpamPoolCidrCidrAuthorizationContextArgs> cidrAuthorizationContext;
        private Output<String> ipamPoolId;

        public Builder() {
    	      // Empty
        }

        public Builder(VpcIpamPoolCidrArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidr = defaults.cidr;
    	      this.cidrAuthorizationContext = defaults.cidrAuthorizationContext;
    	      this.ipamPoolId = defaults.ipamPoolId;
        }

        public Builder cidr(@Nullable Output<String> cidr) {
            this.cidr = cidr;
            return this;
        }
        public Builder cidr(@Nullable String cidr) {
            this.cidr = Codegen.ofNullable(cidr);
            return this;
        }
        public Builder cidrAuthorizationContext(@Nullable Output<VpcIpamPoolCidrCidrAuthorizationContextArgs> cidrAuthorizationContext) {
            this.cidrAuthorizationContext = cidrAuthorizationContext;
            return this;
        }
        public Builder cidrAuthorizationContext(@Nullable VpcIpamPoolCidrCidrAuthorizationContextArgs cidrAuthorizationContext) {
            this.cidrAuthorizationContext = Codegen.ofNullable(cidrAuthorizationContext);
            return this;
        }
        public Builder ipamPoolId(Output<String> ipamPoolId) {
            this.ipamPoolId = Objects.requireNonNull(ipamPoolId);
            return this;
        }
        public Builder ipamPoolId(String ipamPoolId) {
            this.ipamPoolId = Output.of(Objects.requireNonNull(ipamPoolId));
            return this;
        }        public VpcIpamPoolCidrArgs build() {
            return new VpcIpamPoolCidrArgs(cidr, cidrAuthorizationContext, ipamPoolId);
        }
    }
}
