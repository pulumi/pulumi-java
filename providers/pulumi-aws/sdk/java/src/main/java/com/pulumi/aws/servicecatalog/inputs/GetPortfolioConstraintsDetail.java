// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetPortfolioConstraintsDetail extends com.pulumi.resources.InvokeArgs {

    public static final GetPortfolioConstraintsDetail Empty = new GetPortfolioConstraintsDetail();

    /**
     * Identifier of the constraint.
     * 
     */
    @Import(name="constraintId", required=true)
    private String constraintId;

    public String constraintId() {
        return this.constraintId;
    }

    /**
     * Description of the constraint.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    public String description() {
        return this.description;
    }

    @Import(name="owner", required=true)
    private String owner;

    public String owner() {
        return this.owner;
    }

    /**
     * Portfolio identifier.
     * 
     */
    @Import(name="portfolioId", required=true)
    private String portfolioId;

    public String portfolioId() {
        return this.portfolioId;
    }

    /**
     * Product identifier.
     * 
     */
    @Import(name="productId", required=true)
    private String productId;

    public String productId() {
        return this.productId;
    }

    /**
     * Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private GetPortfolioConstraintsDetail() {}

    private GetPortfolioConstraintsDetail(GetPortfolioConstraintsDetail $) {
        this.constraintId = $.constraintId;
        this.description = $.description;
        this.owner = $.owner;
        this.portfolioId = $.portfolioId;
        this.productId = $.productId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPortfolioConstraintsDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPortfolioConstraintsDetail $;

        public Builder() {
            $ = new GetPortfolioConstraintsDetail();
        }

        public Builder(GetPortfolioConstraintsDetail defaults) {
            $ = new GetPortfolioConstraintsDetail(Objects.requireNonNull(defaults));
        }

        public Builder constraintId(String constraintId) {
            $.constraintId = constraintId;
            return this;
        }

        public Builder description(String description) {
            $.description = description;
            return this;
        }

        public Builder owner(String owner) {
            $.owner = owner;
            return this;
        }

        public Builder portfolioId(String portfolioId) {
            $.portfolioId = portfolioId;
            return this;
        }

        public Builder productId(String productId) {
            $.productId = productId;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetPortfolioConstraintsDetail build() {
            $.constraintId = Objects.requireNonNull($.constraintId, "expected parameter 'constraintId' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.owner = Objects.requireNonNull($.owner, "expected parameter 'owner' to be non-null");
            $.portfolioId = Objects.requireNonNull($.portfolioId, "expected parameter 'portfolioId' to be non-null");
            $.productId = Objects.requireNonNull($.productId, "expected parameter 'productId' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
