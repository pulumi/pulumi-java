// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * Amazon Resource Name (ARN) of the instance.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Specifies whether auto resolve best voices is enabled. Defaults to `true`.
     * 
     */
    @Import(name="autoResolveBestVoicesEnabled")
      private final @Nullable Output<Boolean> autoResolveBestVoicesEnabled;

    public Output<Boolean> autoResolveBestVoicesEnabled() {
        return this.autoResolveBestVoicesEnabled == null ? Codegen.empty() : this.autoResolveBestVoicesEnabled;
    }

    /**
     * Specifies whether contact flow logs are enabled. Defaults to `false`.
     * 
     */
    @Import(name="contactFlowLogsEnabled")
      private final @Nullable Output<Boolean> contactFlowLogsEnabled;

    public Output<Boolean> contactFlowLogsEnabled() {
        return this.contactFlowLogsEnabled == null ? Codegen.empty() : this.contactFlowLogsEnabled;
    }

    /**
     * Specifies whether contact lens is enabled. Defaults to `true`.
     * 
     */
    @Import(name="contactLensEnabled")
      private final @Nullable Output<Boolean> contactLensEnabled;

    public Output<Boolean> contactLensEnabled() {
        return this.contactLensEnabled == null ? Codegen.empty() : this.contactLensEnabled;
    }

    /**
     * Specifies when the instance was created.
     * 
     */
    @Import(name="createdTime")
      private final @Nullable Output<String> createdTime;

    public Output<String> createdTime() {
        return this.createdTime == null ? Codegen.empty() : this.createdTime;
    }

    /**
     * The identifier for the directory if identity_management_type is `EXISTING_DIRECTORY`.
     * 
     */
    @Import(name="directoryId")
      private final @Nullable Output<String> directoryId;

    public Output<String> directoryId() {
        return this.directoryId == null ? Codegen.empty() : this.directoryId;
    }

    /**
     * Specifies whether early media for outbound calls is enabled . Defaults to `true` if outbound calls is enabled.
     * 
     */
    @Import(name="earlyMediaEnabled")
      private final @Nullable Output<Boolean> earlyMediaEnabled;

    public Output<Boolean> earlyMediaEnabled() {
        return this.earlyMediaEnabled == null ? Codegen.empty() : this.earlyMediaEnabled;
    }

    /**
     * Specifies the identity management type attached to the instance. Allowed Values are: `SAML`, `CONNECT_MANAGED`, `EXISTING_DIRECTORY`.
     * 
     */
    @Import(name="identityManagementType")
      private final @Nullable Output<String> identityManagementType;

    public Output<String> identityManagementType() {
        return this.identityManagementType == null ? Codegen.empty() : this.identityManagementType;
    }

    /**
     * Specifies whether inbound calls are enabled.
     * 
     */
    @Import(name="inboundCallsEnabled")
      private final @Nullable Output<Boolean> inboundCallsEnabled;

    public Output<Boolean> inboundCallsEnabled() {
        return this.inboundCallsEnabled == null ? Codegen.empty() : this.inboundCallsEnabled;
    }

    /**
     * Specifies the name of the instance. Required if `directory_id` not specified.
     * 
     */
    @Import(name="instanceAlias")
      private final @Nullable Output<String> instanceAlias;

    public Output<String> instanceAlias() {
        return this.instanceAlias == null ? Codegen.empty() : this.instanceAlias;
    }

    /**
     * Specifies whether outbound calls are enabled.
     * <!-- * `use_custom_tts_voices` - (Optional) Specifies Whether use custom tts voices is enabled. Defaults to `false` -->
     * 
     */
    @Import(name="outboundCallsEnabled")
      private final @Nullable Output<Boolean> outboundCallsEnabled;

    public Output<Boolean> outboundCallsEnabled() {
        return this.outboundCallsEnabled == null ? Codegen.empty() : this.outboundCallsEnabled;
    }

    /**
     * The service role of the instance.
     * 
     */
    @Import(name="serviceRole")
      private final @Nullable Output<String> serviceRole;

    public Output<String> serviceRole() {
        return this.serviceRole == null ? Codegen.empty() : this.serviceRole;
    }

    /**
     * The state of the instance.
     * 
     */
    @Import(name="status")
      private final @Nullable Output<String> status;

    public Output<String> status() {
        return this.status == null ? Codegen.empty() : this.status;
    }

    public InstanceState(
        @Nullable Output<String> arn,
        @Nullable Output<Boolean> autoResolveBestVoicesEnabled,
        @Nullable Output<Boolean> contactFlowLogsEnabled,
        @Nullable Output<Boolean> contactLensEnabled,
        @Nullable Output<String> createdTime,
        @Nullable Output<String> directoryId,
        @Nullable Output<Boolean> earlyMediaEnabled,
        @Nullable Output<String> identityManagementType,
        @Nullable Output<Boolean> inboundCallsEnabled,
        @Nullable Output<String> instanceAlias,
        @Nullable Output<Boolean> outboundCallsEnabled,
        @Nullable Output<String> serviceRole,
        @Nullable Output<String> status) {
        this.arn = arn;
        this.autoResolveBestVoicesEnabled = autoResolveBestVoicesEnabled;
        this.contactFlowLogsEnabled = contactFlowLogsEnabled;
        this.contactLensEnabled = contactLensEnabled;
        this.createdTime = createdTime;
        this.directoryId = directoryId;
        this.earlyMediaEnabled = earlyMediaEnabled;
        this.identityManagementType = identityManagementType;
        this.inboundCallsEnabled = inboundCallsEnabled;
        this.instanceAlias = instanceAlias;
        this.outboundCallsEnabled = outboundCallsEnabled;
        this.serviceRole = serviceRole;
        this.status = status;
    }

    private InstanceState() {
        this.arn = Codegen.empty();
        this.autoResolveBestVoicesEnabled = Codegen.empty();
        this.contactFlowLogsEnabled = Codegen.empty();
        this.contactLensEnabled = Codegen.empty();
        this.createdTime = Codegen.empty();
        this.directoryId = Codegen.empty();
        this.earlyMediaEnabled = Codegen.empty();
        this.identityManagementType = Codegen.empty();
        this.inboundCallsEnabled = Codegen.empty();
        this.instanceAlias = Codegen.empty();
        this.outboundCallsEnabled = Codegen.empty();
        this.serviceRole = Codegen.empty();
        this.status = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<Boolean> autoResolveBestVoicesEnabled;
        private @Nullable Output<Boolean> contactFlowLogsEnabled;
        private @Nullable Output<Boolean> contactLensEnabled;
        private @Nullable Output<String> createdTime;
        private @Nullable Output<String> directoryId;
        private @Nullable Output<Boolean> earlyMediaEnabled;
        private @Nullable Output<String> identityManagementType;
        private @Nullable Output<Boolean> inboundCallsEnabled;
        private @Nullable Output<String> instanceAlias;
        private @Nullable Output<Boolean> outboundCallsEnabled;
        private @Nullable Output<String> serviceRole;
        private @Nullable Output<String> status;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.autoResolveBestVoicesEnabled = defaults.autoResolveBestVoicesEnabled;
    	      this.contactFlowLogsEnabled = defaults.contactFlowLogsEnabled;
    	      this.contactLensEnabled = defaults.contactLensEnabled;
    	      this.createdTime = defaults.createdTime;
    	      this.directoryId = defaults.directoryId;
    	      this.earlyMediaEnabled = defaults.earlyMediaEnabled;
    	      this.identityManagementType = defaults.identityManagementType;
    	      this.inboundCallsEnabled = defaults.inboundCallsEnabled;
    	      this.instanceAlias = defaults.instanceAlias;
    	      this.outboundCallsEnabled = defaults.outboundCallsEnabled;
    	      this.serviceRole = defaults.serviceRole;
    	      this.status = defaults.status;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder autoResolveBestVoicesEnabled(@Nullable Output<Boolean> autoResolveBestVoicesEnabled) {
            this.autoResolveBestVoicesEnabled = autoResolveBestVoicesEnabled;
            return this;
        }
        public Builder autoResolveBestVoicesEnabled(@Nullable Boolean autoResolveBestVoicesEnabled) {
            this.autoResolveBestVoicesEnabled = Codegen.ofNullable(autoResolveBestVoicesEnabled);
            return this;
        }
        public Builder contactFlowLogsEnabled(@Nullable Output<Boolean> contactFlowLogsEnabled) {
            this.contactFlowLogsEnabled = contactFlowLogsEnabled;
            return this;
        }
        public Builder contactFlowLogsEnabled(@Nullable Boolean contactFlowLogsEnabled) {
            this.contactFlowLogsEnabled = Codegen.ofNullable(contactFlowLogsEnabled);
            return this;
        }
        public Builder contactLensEnabled(@Nullable Output<Boolean> contactLensEnabled) {
            this.contactLensEnabled = contactLensEnabled;
            return this;
        }
        public Builder contactLensEnabled(@Nullable Boolean contactLensEnabled) {
            this.contactLensEnabled = Codegen.ofNullable(contactLensEnabled);
            return this;
        }
        public Builder createdTime(@Nullable Output<String> createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = Codegen.ofNullable(createdTime);
            return this;
        }
        public Builder directoryId(@Nullable Output<String> directoryId) {
            this.directoryId = directoryId;
            return this;
        }
        public Builder directoryId(@Nullable String directoryId) {
            this.directoryId = Codegen.ofNullable(directoryId);
            return this;
        }
        public Builder earlyMediaEnabled(@Nullable Output<Boolean> earlyMediaEnabled) {
            this.earlyMediaEnabled = earlyMediaEnabled;
            return this;
        }
        public Builder earlyMediaEnabled(@Nullable Boolean earlyMediaEnabled) {
            this.earlyMediaEnabled = Codegen.ofNullable(earlyMediaEnabled);
            return this;
        }
        public Builder identityManagementType(@Nullable Output<String> identityManagementType) {
            this.identityManagementType = identityManagementType;
            return this;
        }
        public Builder identityManagementType(@Nullable String identityManagementType) {
            this.identityManagementType = Codegen.ofNullable(identityManagementType);
            return this;
        }
        public Builder inboundCallsEnabled(@Nullable Output<Boolean> inboundCallsEnabled) {
            this.inboundCallsEnabled = inboundCallsEnabled;
            return this;
        }
        public Builder inboundCallsEnabled(@Nullable Boolean inboundCallsEnabled) {
            this.inboundCallsEnabled = Codegen.ofNullable(inboundCallsEnabled);
            return this;
        }
        public Builder instanceAlias(@Nullable Output<String> instanceAlias) {
            this.instanceAlias = instanceAlias;
            return this;
        }
        public Builder instanceAlias(@Nullable String instanceAlias) {
            this.instanceAlias = Codegen.ofNullable(instanceAlias);
            return this;
        }
        public Builder outboundCallsEnabled(@Nullable Output<Boolean> outboundCallsEnabled) {
            this.outboundCallsEnabled = outboundCallsEnabled;
            return this;
        }
        public Builder outboundCallsEnabled(@Nullable Boolean outboundCallsEnabled) {
            this.outboundCallsEnabled = Codegen.ofNullable(outboundCallsEnabled);
            return this;
        }
        public Builder serviceRole(@Nullable Output<String> serviceRole) {
            this.serviceRole = serviceRole;
            return this;
        }
        public Builder serviceRole(@Nullable String serviceRole) {
            this.serviceRole = Codegen.ofNullable(serviceRole);
            return this;
        }
        public Builder status(@Nullable Output<String> status) {
            this.status = status;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = Codegen.ofNullable(status);
            return this;
        }        public InstanceState build() {
            return new InstanceState(arn, autoResolveBestVoicesEnabled, contactFlowLogsEnabled, contactLensEnabled, createdTime, directoryId, earlyMediaEnabled, identityManagementType, inboundCallsEnabled, instanceAlias, outboundCallsEnabled, serviceRole, status);
        }
    }
}
