// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig {
    /**
     * @return A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are `Enabled` and `Disabled`. See below.
     * 
     */
    private final String realtimeMetricsSubscriptionStatus;

    @CustomType.Constructor
    private MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig(@CustomType.Parameter("realtimeMetricsSubscriptionStatus") String realtimeMetricsSubscriptionStatus) {
        this.realtimeMetricsSubscriptionStatus = realtimeMetricsSubscriptionStatus;
    }

    /**
     * @return A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are `Enabled` and `Disabled`. See below.
     * 
     */
    public String realtimeMetricsSubscriptionStatus() {
        return this.realtimeMetricsSubscriptionStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String realtimeMetricsSubscriptionStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.realtimeMetricsSubscriptionStatus = defaults.realtimeMetricsSubscriptionStatus;
        }

        public Builder realtimeMetricsSubscriptionStatus(String realtimeMetricsSubscriptionStatus) {
            this.realtimeMetricsSubscriptionStatus = Objects.requireNonNull(realtimeMetricsSubscriptionStatus);
            return this;
        }        public MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig build() {
            return new MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig(realtimeMetricsSubscriptionStatus);
        }
    }
}
