// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InvocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final InvocationArgs Empty = new InvocationArgs();

    /**
     * Name of the lambda function.
     * 
     */
    @Import(name="functionName", required=true)
      private final Output<String> functionName;

    public Output<String> functionName() {
        return this.functionName;
    }

    /**
     * JSON payload to the lambda function.
     * 
     */
    @Import(name="input", required=true)
      private final Output<String> input;

    public Output<String> input() {
        return this.input;
    }

    /**
     * Qualifier (i.e., version) of the lambda function. Defaults to `$LATEST`.
     * 
     */
    @Import(name="qualifier")
      private final @Nullable Output<String> qualifier;

    public Output<String> qualifier() {
        return this.qualifier == null ? Codegen.empty() : this.qualifier;
    }

    @Import(name="triggers")
      private final @Nullable Output<Map<String,String>> triggers;

    public Output<Map<String,String>> triggers() {
        return this.triggers == null ? Codegen.empty() : this.triggers;
    }

    public InvocationArgs(
        Output<String> functionName,
        Output<String> input,
        @Nullable Output<String> qualifier,
        @Nullable Output<Map<String,String>> triggers) {
        this.functionName = Objects.requireNonNull(functionName, "expected parameter 'functionName' to be non-null");
        this.input = Objects.requireNonNull(input, "expected parameter 'input' to be non-null");
        this.qualifier = qualifier;
        this.triggers = triggers;
    }

    private InvocationArgs() {
        this.functionName = Codegen.empty();
        this.input = Codegen.empty();
        this.qualifier = Codegen.empty();
        this.triggers = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InvocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> functionName;
        private Output<String> input;
        private @Nullable Output<String> qualifier;
        private @Nullable Output<Map<String,String>> triggers;

        public Builder() {
    	      // Empty
        }

        public Builder(InvocationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.functionName = defaults.functionName;
    	      this.input = defaults.input;
    	      this.qualifier = defaults.qualifier;
    	      this.triggers = defaults.triggers;
        }

        public Builder functionName(Output<String> functionName) {
            this.functionName = Objects.requireNonNull(functionName);
            return this;
        }
        public Builder functionName(String functionName) {
            this.functionName = Output.of(Objects.requireNonNull(functionName));
            return this;
        }
        public Builder input(Output<String> input) {
            this.input = Objects.requireNonNull(input);
            return this;
        }
        public Builder input(String input) {
            this.input = Output.of(Objects.requireNonNull(input));
            return this;
        }
        public Builder qualifier(@Nullable Output<String> qualifier) {
            this.qualifier = qualifier;
            return this;
        }
        public Builder qualifier(@Nullable String qualifier) {
            this.qualifier = Codegen.ofNullable(qualifier);
            return this;
        }
        public Builder triggers(@Nullable Output<Map<String,String>> triggers) {
            this.triggers = triggers;
            return this;
        }
        public Builder triggers(@Nullable Map<String,String> triggers) {
            this.triggers = Codegen.ofNullable(triggers);
            return this;
        }        public InvocationArgs build() {
            return new InvocationArgs(functionName, input, qualifier, triggers);
        }
    }
}
