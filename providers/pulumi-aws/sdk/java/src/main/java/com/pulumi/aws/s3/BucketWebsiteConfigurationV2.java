// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.s3.BucketWebsiteConfigurationV2Args;
import com.pulumi.aws.s3.inputs.BucketWebsiteConfigurationV2State;
import com.pulumi.aws.s3.outputs.BucketWebsiteConfigurationV2ErrorDocument;
import com.pulumi.aws.s3.outputs.BucketWebsiteConfigurationV2IndexDocument;
import com.pulumi.aws.s3.outputs.BucketWebsiteConfigurationV2RedirectAllRequestsTo;
import com.pulumi.aws.s3.outputs.BucketWebsiteConfigurationV2RoutingRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an S3 bucket website configuration resource. For more information, see [Hosting Websites on S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new BucketWebsiteConfigurationV2(&#34;example&#34;, BucketWebsiteConfigurationV2Args.builder()        
 *             .bucket(aws_s3_bucket.getExample().getBucket())
 *             .indexDocument(BucketWebsiteConfigurationV2IndexDocument.builder()
 *                 .suffix(&#34;index.html&#34;)
 *                 .build())
 *             .errorDocument(BucketWebsiteConfigurationV2ErrorDocument.builder()
 *                 .key(&#34;error.html&#34;)
 *                 .build())
 *             .routingRules(BucketWebsiteConfigurationV2RoutingRule.builder()
 *                 .condition(BucketWebsiteConfigurationV2RoutingRuleCondition.builder()
 *                     .keyPrefixEquals(&#34;docs/&#34;)
 *                     .build())
 *                 .redirect(BucketWebsiteConfigurationV2RoutingRuleRedirect.builder()
 *                     .replaceKeyPrefixWith(&#34;documents/&#34;)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         }
 * }
 * ```
 * 
 * ## Import
 * 
 * S3 bucket website configuration can be imported in one of two ways. If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, the S3 bucket website configuration resource should be imported using the `bucket` e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2 example bucket-name
 * ```
 * 
 *  If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, the S3 bucket website configuration resource should be imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`) e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2 example bucket-name,123456789012
 * ```
 * 
 */
@ResourceType(type="aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2")
public class BucketWebsiteConfigurationV2 extends com.pulumi.resources.CustomResource {
    /**
     * The name of the bucket.
     * 
     */
    @Export(name="bucket", type=String.class, parameters={})
    private Output<String> bucket;

    /**
     * @return The name of the bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * The name of the error document for the website detailed below.
     * 
     */
    @Export(name="errorDocument", type=BucketWebsiteConfigurationV2ErrorDocument.class, parameters={})
    private Output</* @Nullable */ BucketWebsiteConfigurationV2ErrorDocument> errorDocument;

    /**
     * @return The name of the error document for the website detailed below.
     * 
     */
    public Output<Optional<BucketWebsiteConfigurationV2ErrorDocument>> errorDocument() {
        return Codegen.optional(this.errorDocument);
    }
    /**
     * The account ID of the expected bucket owner.
     * 
     */
    @Export(name="expectedBucketOwner", type=String.class, parameters={})
    private Output</* @Nullable */ String> expectedBucketOwner;

    /**
     * @return The account ID of the expected bucket owner.
     * 
     */
    public Output<Optional<String>> expectedBucketOwner() {
        return Codegen.optional(this.expectedBucketOwner);
    }
    /**
     * The name of the index document for the website detailed below.
     * 
     */
    @Export(name="indexDocument", type=BucketWebsiteConfigurationV2IndexDocument.class, parameters={})
    private Output</* @Nullable */ BucketWebsiteConfigurationV2IndexDocument> indexDocument;

    /**
     * @return The name of the index document for the website detailed below.
     * 
     */
    public Output<Optional<BucketWebsiteConfigurationV2IndexDocument>> indexDocument() {
        return Codegen.optional(this.indexDocument);
    }
    /**
     * The redirect behavior for every request to this bucket&#39;s website endpoint detailed below. Conflicts with `error_document`, `index_document`, and `routing_rule`.
     * 
     */
    @Export(name="redirectAllRequestsTo", type=BucketWebsiteConfigurationV2RedirectAllRequestsTo.class, parameters={})
    private Output</* @Nullable */ BucketWebsiteConfigurationV2RedirectAllRequestsTo> redirectAllRequestsTo;

    /**
     * @return The redirect behavior for every request to this bucket&#39;s website endpoint detailed below. Conflicts with `error_document`, `index_document`, and `routing_rule`.
     * 
     */
    public Output<Optional<BucketWebsiteConfigurationV2RedirectAllRequestsTo>> redirectAllRequestsTo() {
        return Codegen.optional(this.redirectAllRequestsTo);
    }
    /**
     * List of rules that define when a redirect is applied and the redirect behavior detailed below.
     * 
     */
    @Export(name="routingRules", type=List.class, parameters={BucketWebsiteConfigurationV2RoutingRule.class})
    private Output</* @Nullable */ List<BucketWebsiteConfigurationV2RoutingRule>> routingRules;

    /**
     * @return List of rules that define when a redirect is applied and the redirect behavior detailed below.
     * 
     */
    public Output<Optional<List<BucketWebsiteConfigurationV2RoutingRule>>> routingRules() {
        return Codegen.optional(this.routingRules);
    }
    /**
     * The domain of the website endpoint. This is used to create Route 53 alias records.
     * 
     */
    @Export(name="websiteDomain", type=String.class, parameters={})
    private Output<String> websiteDomain;

    /**
     * @return The domain of the website endpoint. This is used to create Route 53 alias records.
     * 
     */
    public Output<String> websiteDomain() {
        return this.websiteDomain;
    }
    /**
     * The website endpoint.
     * 
     */
    @Export(name="websiteEndpoint", type=String.class, parameters={})
    private Output<String> websiteEndpoint;

    /**
     * @return The website endpoint.
     * 
     */
    public Output<String> websiteEndpoint() {
        return this.websiteEndpoint;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BucketWebsiteConfigurationV2(String name) {
        this(name, BucketWebsiteConfigurationV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BucketWebsiteConfigurationV2(String name, BucketWebsiteConfigurationV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BucketWebsiteConfigurationV2(String name, BucketWebsiteConfigurationV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2", name, args == null ? BucketWebsiteConfigurationV2Args.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BucketWebsiteConfigurationV2(String name, Output<String> id, @Nullable BucketWebsiteConfigurationV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BucketWebsiteConfigurationV2 get(String name, Output<String> id, @Nullable BucketWebsiteConfigurationV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BucketWebsiteConfigurationV2(name, id, state, options);
    }
}
