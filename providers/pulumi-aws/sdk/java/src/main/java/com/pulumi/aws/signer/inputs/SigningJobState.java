// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.signer.inputs;

import com.pulumi.aws.signer.inputs.SigningJobDestinationGetArgs;
import com.pulumi.aws.signer.inputs.SigningJobRevocationRecordGetArgs;
import com.pulumi.aws.signer.inputs.SigningJobSignedObjectGetArgs;
import com.pulumi.aws.signer.inputs.SigningJobSourceGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SigningJobState extends com.pulumi.resources.ResourceArgs {

    public static final SigningJobState Empty = new SigningJobState();

    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
     * 
     */
    @Import(name="completedAt")
    private @Nullable Output<String> completedAt;

    public Optional<Output<String>> completedAt() {
        return Optional.ofNullable(this.completedAt);
    }

    /**
     * Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The S3 bucket in which to save your signed object. See Destination below for details.
     * 
     */
    @Import(name="destination")
    private @Nullable Output<SigningJobDestinationGetArgs> destination;

    public Optional<Output<SigningJobDestinationGetArgs>> destination() {
        return Optional.ofNullable(this.destination);
    }

    /**
     * Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
     * 
     */
    @Import(name="ignoreSigningJobFailure")
    private @Nullable Output<Boolean> ignoreSigningJobFailure;

    public Optional<Output<Boolean>> ignoreSigningJobFailure() {
        return Optional.ofNullable(this.ignoreSigningJobFailure);
    }

    /**
     * The ID of the signing job on output.
     * 
     */
    @Import(name="jobId")
    private @Nullable Output<String> jobId;

    public Optional<Output<String>> jobId() {
        return Optional.ofNullable(this.jobId);
    }

    /**
     * The IAM entity that initiated the signing job.
     * 
     */
    @Import(name="jobInvoker")
    private @Nullable Output<String> jobInvoker;

    public Optional<Output<String>> jobInvoker() {
        return Optional.ofNullable(this.jobInvoker);
    }

    /**
     * The AWS account ID of the job owner.
     * 
     */
    @Import(name="jobOwner")
    private @Nullable Output<String> jobOwner;

    public Optional<Output<String>> jobOwner() {
        return Optional.ofNullable(this.jobOwner);
    }

    /**
     * A human-readable name for the signing platform associated with the signing job.
     * 
     */
    @Import(name="platformDisplayName")
    private @Nullable Output<String> platformDisplayName;

    public Optional<Output<String>> platformDisplayName() {
        return Optional.ofNullable(this.platformDisplayName);
    }

    /**
     * The platform to which your signed code image will be distributed.
     * 
     */
    @Import(name="platformId")
    private @Nullable Output<String> platformId;

    public Optional<Output<String>> platformId() {
        return Optional.ofNullable(this.platformId);
    }

    /**
     * The name of the profile to initiate the signing operation.
     * 
     */
    @Import(name="profileName")
    private @Nullable Output<String> profileName;

    public Optional<Output<String>> profileName() {
        return Optional.ofNullable(this.profileName);
    }

    /**
     * The version of the signing profile used to initiate the signing job.
     * 
     */
    @Import(name="profileVersion")
    private @Nullable Output<String> profileVersion;

    public Optional<Output<String>> profileVersion() {
        return Optional.ofNullable(this.profileVersion);
    }

    /**
     * The IAM principal that requested the signing job.
     * 
     */
    @Import(name="requestedBy")
    private @Nullable Output<String> requestedBy;

    public Optional<Output<String>> requestedBy() {
        return Optional.ofNullable(this.requestedBy);
    }

    /**
     * A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
     * 
     */
    @Import(name="revocationRecords")
    private @Nullable Output<List<SigningJobRevocationRecordGetArgs>> revocationRecords;

    public Optional<Output<List<SigningJobRevocationRecordGetArgs>>> revocationRecords() {
        return Optional.ofNullable(this.revocationRecords);
    }

    /**
     * The time when the signature of a signing job expires.
     * 
     */
    @Import(name="signatureExpiresAt")
    private @Nullable Output<String> signatureExpiresAt;

    public Optional<Output<String>> signatureExpiresAt() {
        return Optional.ofNullable(this.signatureExpiresAt);
    }

    /**
     * Name of the S3 bucket where the signed code image is saved by code signing.
     * 
     */
    @Import(name="signedObjects")
    private @Nullable Output<List<SigningJobSignedObjectGetArgs>> signedObjects;

    public Optional<Output<List<SigningJobSignedObjectGetArgs>>> signedObjects() {
        return Optional.ofNullable(this.signedObjects);
    }

    /**
     * The S3 bucket that contains the object to sign. See Source below for details.
     * 
     */
    @Import(name="source")
    private @Nullable Output<SigningJobSourceGetArgs> source;

    public Optional<Output<SigningJobSourceGetArgs>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * Status of the signing job.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * String value that contains the status reason.
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    private SigningJobState() {}

    private SigningJobState(SigningJobState $) {
        this.completedAt = $.completedAt;
        this.createdAt = $.createdAt;
        this.destination = $.destination;
        this.ignoreSigningJobFailure = $.ignoreSigningJobFailure;
        this.jobId = $.jobId;
        this.jobInvoker = $.jobInvoker;
        this.jobOwner = $.jobOwner;
        this.platformDisplayName = $.platformDisplayName;
        this.platformId = $.platformId;
        this.profileName = $.profileName;
        this.profileVersion = $.profileVersion;
        this.requestedBy = $.requestedBy;
        this.revocationRecords = $.revocationRecords;
        this.signatureExpiresAt = $.signatureExpiresAt;
        this.signedObjects = $.signedObjects;
        this.source = $.source;
        this.status = $.status;
        this.statusReason = $.statusReason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SigningJobState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SigningJobState $;

        public Builder() {
            $ = new SigningJobState();
        }

        public Builder(SigningJobState defaults) {
            $ = new SigningJobState(Objects.requireNonNull(defaults));
        }

        public Builder completedAt(@Nullable Output<String> completedAt) {
            $.completedAt = completedAt;
            return this;
        }

        public Builder completedAt(String completedAt) {
            return completedAt(Output.of(completedAt));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder destination(@Nullable Output<SigningJobDestinationGetArgs> destination) {
            $.destination = destination;
            return this;
        }

        public Builder destination(SigningJobDestinationGetArgs destination) {
            return destination(Output.of(destination));
        }

        public Builder ignoreSigningJobFailure(@Nullable Output<Boolean> ignoreSigningJobFailure) {
            $.ignoreSigningJobFailure = ignoreSigningJobFailure;
            return this;
        }

        public Builder ignoreSigningJobFailure(Boolean ignoreSigningJobFailure) {
            return ignoreSigningJobFailure(Output.of(ignoreSigningJobFailure));
        }

        public Builder jobId(@Nullable Output<String> jobId) {
            $.jobId = jobId;
            return this;
        }

        public Builder jobId(String jobId) {
            return jobId(Output.of(jobId));
        }

        public Builder jobInvoker(@Nullable Output<String> jobInvoker) {
            $.jobInvoker = jobInvoker;
            return this;
        }

        public Builder jobInvoker(String jobInvoker) {
            return jobInvoker(Output.of(jobInvoker));
        }

        public Builder jobOwner(@Nullable Output<String> jobOwner) {
            $.jobOwner = jobOwner;
            return this;
        }

        public Builder jobOwner(String jobOwner) {
            return jobOwner(Output.of(jobOwner));
        }

        public Builder platformDisplayName(@Nullable Output<String> platformDisplayName) {
            $.platformDisplayName = platformDisplayName;
            return this;
        }

        public Builder platformDisplayName(String platformDisplayName) {
            return platformDisplayName(Output.of(platformDisplayName));
        }

        public Builder platformId(@Nullable Output<String> platformId) {
            $.platformId = platformId;
            return this;
        }

        public Builder platformId(String platformId) {
            return platformId(Output.of(platformId));
        }

        public Builder profileName(@Nullable Output<String> profileName) {
            $.profileName = profileName;
            return this;
        }

        public Builder profileName(String profileName) {
            return profileName(Output.of(profileName));
        }

        public Builder profileVersion(@Nullable Output<String> profileVersion) {
            $.profileVersion = profileVersion;
            return this;
        }

        public Builder profileVersion(String profileVersion) {
            return profileVersion(Output.of(profileVersion));
        }

        public Builder requestedBy(@Nullable Output<String> requestedBy) {
            $.requestedBy = requestedBy;
            return this;
        }

        public Builder requestedBy(String requestedBy) {
            return requestedBy(Output.of(requestedBy));
        }

        public Builder revocationRecords(@Nullable Output<List<SigningJobRevocationRecordGetArgs>> revocationRecords) {
            $.revocationRecords = revocationRecords;
            return this;
        }

        public Builder revocationRecords(List<SigningJobRevocationRecordGetArgs> revocationRecords) {
            return revocationRecords(Output.of(revocationRecords));
        }

        public Builder revocationRecords(SigningJobRevocationRecordGetArgs... revocationRecords) {
            return revocationRecords(List.of(revocationRecords));
        }

        public Builder signatureExpiresAt(@Nullable Output<String> signatureExpiresAt) {
            $.signatureExpiresAt = signatureExpiresAt;
            return this;
        }

        public Builder signatureExpiresAt(String signatureExpiresAt) {
            return signatureExpiresAt(Output.of(signatureExpiresAt));
        }

        public Builder signedObjects(@Nullable Output<List<SigningJobSignedObjectGetArgs>> signedObjects) {
            $.signedObjects = signedObjects;
            return this;
        }

        public Builder signedObjects(List<SigningJobSignedObjectGetArgs> signedObjects) {
            return signedObjects(Output.of(signedObjects));
        }

        public Builder signedObjects(SigningJobSignedObjectGetArgs... signedObjects) {
            return signedObjects(List.of(signedObjects));
        }

        public Builder source(@Nullable Output<SigningJobSourceGetArgs> source) {
            $.source = source;
            return this;
        }

        public Builder source(SigningJobSourceGetArgs source) {
            return source(Output.of(source));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        public SigningJobState build() {
            return $;
        }
    }

}
