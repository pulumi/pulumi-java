// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.inputs;

import com.pulumi.aws.apigateway.inputs.DocumentationPartLocationGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DocumentationPartState extends com.pulumi.resources.ResourceArgs {

    public static final DocumentationPartState Empty = new DocumentationPartState();

    /**
     * The location of the targeted API entity of the to-be-created documentation part. See below.
     * 
     */
    @Import(name="location")
    private @Nullable Output<DocumentationPartLocationGetArgs> location;

    public Optional<Output<DocumentationPartLocationGetArgs>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., &#34;{ \&#34;description\&#34;: \&#34;The API does ...\&#34; }&#34;. Only Swagger-compliant key-value pairs can be exported and, hence, published.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<String> properties;

    public Optional<Output<String>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The ID of the associated Rest API
     * 
     */
    @Import(name="restApiId")
    private @Nullable Output<String> restApiId;

    public Optional<Output<String>> restApiId() {
        return Optional.ofNullable(this.restApiId);
    }

    private DocumentationPartState() {}

    private DocumentationPartState(DocumentationPartState $) {
        this.location = $.location;
        this.properties = $.properties;
        this.restApiId = $.restApiId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DocumentationPartState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DocumentationPartState $;

        public Builder() {
            $ = new DocumentationPartState();
        }

        public Builder(DocumentationPartState defaults) {
            $ = new DocumentationPartState(Objects.requireNonNull(defaults));
        }

        public Builder location(@Nullable Output<DocumentationPartLocationGetArgs> location) {
            $.location = location;
            return this;
        }

        public Builder location(DocumentationPartLocationGetArgs location) {
            return location(Output.of(location));
        }

        public Builder properties(@Nullable Output<String> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(String properties) {
            return properties(Output.of(properties));
        }

        public Builder restApiId(@Nullable Output<String> restApiId) {
            $.restApiId = restApiId;
            return this;
        }

        public Builder restApiId(String restApiId) {
            return restApiId(Output.of(restApiId));
        }

        public DocumentationPartState build() {
            return $;
        }
    }

}
