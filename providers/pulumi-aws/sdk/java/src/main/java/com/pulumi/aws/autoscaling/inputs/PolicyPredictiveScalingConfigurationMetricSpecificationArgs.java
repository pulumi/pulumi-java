// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.autoscaling.inputs;

import com.pulumi.aws.autoscaling.inputs.PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecificationArgs;
import com.pulumi.aws.autoscaling.inputs.PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecificationArgs;
import com.pulumi.aws.autoscaling.inputs.PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyPredictiveScalingConfigurationMetricSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyPredictiveScalingConfigurationMetricSpecificationArgs Empty = new PolicyPredictiveScalingConfigurationMetricSpecificationArgs();

    /**
     * The load metric specification.
     * 
     */
    @Import(name="predefinedLoadMetricSpecification")
    private @Nullable Output<PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecificationArgs> predefinedLoadMetricSpecification;

    /**
     * @return The load metric specification.
     * 
     */
    public Optional<Output<PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecificationArgs>> predefinedLoadMetricSpecification() {
        return Optional.ofNullable(this.predefinedLoadMetricSpecification);
    }

    /**
     * The metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.
     * 
     */
    @Import(name="predefinedMetricPairSpecification")
    private @Nullable Output<PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecificationArgs> predefinedMetricPairSpecification;

    /**
     * @return The metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.
     * 
     */
    public Optional<Output<PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecificationArgs>> predefinedMetricPairSpecification() {
        return Optional.ofNullable(this.predefinedMetricPairSpecification);
    }

    /**
     * The scaling metric specification.
     * 
     */
    @Import(name="predefinedScalingMetricSpecification")
    private @Nullable Output<PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecificationArgs> predefinedScalingMetricSpecification;

    /**
     * @return The scaling metric specification.
     * 
     */
    public Optional<Output<PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecificationArgs>> predefinedScalingMetricSpecification() {
        return Optional.ofNullable(this.predefinedScalingMetricSpecification);
    }

    /**
     * The target value for the metric.
     * 
     */
    @Import(name="targetValue", required=true)
    private Output<Integer> targetValue;

    /**
     * @return The target value for the metric.
     * 
     */
    public Output<Integer> targetValue() {
        return this.targetValue;
    }

    private PolicyPredictiveScalingConfigurationMetricSpecificationArgs() {}

    private PolicyPredictiveScalingConfigurationMetricSpecificationArgs(PolicyPredictiveScalingConfigurationMetricSpecificationArgs $) {
        this.predefinedLoadMetricSpecification = $.predefinedLoadMetricSpecification;
        this.predefinedMetricPairSpecification = $.predefinedMetricPairSpecification;
        this.predefinedScalingMetricSpecification = $.predefinedScalingMetricSpecification;
        this.targetValue = $.targetValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyPredictiveScalingConfigurationMetricSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyPredictiveScalingConfigurationMetricSpecificationArgs $;

        public Builder() {
            $ = new PolicyPredictiveScalingConfigurationMetricSpecificationArgs();
        }

        public Builder(PolicyPredictiveScalingConfigurationMetricSpecificationArgs defaults) {
            $ = new PolicyPredictiveScalingConfigurationMetricSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param predefinedLoadMetricSpecification The load metric specification.
         * 
         * @return builder
         * 
         */
        public Builder predefinedLoadMetricSpecification(@Nullable Output<PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecificationArgs> predefinedLoadMetricSpecification) {
            $.predefinedLoadMetricSpecification = predefinedLoadMetricSpecification;
            return this;
        }

        /**
         * @param predefinedLoadMetricSpecification The load metric specification.
         * 
         * @return builder
         * 
         */
        public Builder predefinedLoadMetricSpecification(PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecificationArgs predefinedLoadMetricSpecification) {
            return predefinedLoadMetricSpecification(Output.of(predefinedLoadMetricSpecification));
        }

        /**
         * @param predefinedMetricPairSpecification The metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.
         * 
         * @return builder
         * 
         */
        public Builder predefinedMetricPairSpecification(@Nullable Output<PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecificationArgs> predefinedMetricPairSpecification) {
            $.predefinedMetricPairSpecification = predefinedMetricPairSpecification;
            return this;
        }

        /**
         * @param predefinedMetricPairSpecification The metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.
         * 
         * @return builder
         * 
         */
        public Builder predefinedMetricPairSpecification(PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecificationArgs predefinedMetricPairSpecification) {
            return predefinedMetricPairSpecification(Output.of(predefinedMetricPairSpecification));
        }

        /**
         * @param predefinedScalingMetricSpecification The scaling metric specification.
         * 
         * @return builder
         * 
         */
        public Builder predefinedScalingMetricSpecification(@Nullable Output<PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecificationArgs> predefinedScalingMetricSpecification) {
            $.predefinedScalingMetricSpecification = predefinedScalingMetricSpecification;
            return this;
        }

        /**
         * @param predefinedScalingMetricSpecification The scaling metric specification.
         * 
         * @return builder
         * 
         */
        public Builder predefinedScalingMetricSpecification(PolicyPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecificationArgs predefinedScalingMetricSpecification) {
            return predefinedScalingMetricSpecification(Output.of(predefinedScalingMetricSpecification));
        }

        /**
         * @param targetValue The target value for the metric.
         * 
         * @return builder
         * 
         */
        public Builder targetValue(Output<Integer> targetValue) {
            $.targetValue = targetValue;
            return this;
        }

        /**
         * @param targetValue The target value for the metric.
         * 
         * @return builder
         * 
         */
        public Builder targetValue(Integer targetValue) {
            return targetValue(Output.of(targetValue));
        }

        public PolicyPredictiveScalingConfigurationMetricSpecificationArgs build() {
            $.targetValue = Objects.requireNonNull($.targetValue, "expected parameter 'targetValue' to be non-null");
            return $;
        }
    }

}
