// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync;

import com.pulumi.aws.Utilities;
import com.pulumi.aws.appsync.DataSourceArgs;
import com.pulumi.aws.appsync.inputs.DataSourceState;
import com.pulumi.aws.appsync.outputs.DataSourceDynamodbConfig;
import com.pulumi.aws.appsync.outputs.DataSourceElasticsearchConfig;
import com.pulumi.aws.appsync.outputs.DataSourceHttpConfig;
import com.pulumi.aws.appsync.outputs.DataSourceLambdaConfig;
import com.pulumi.aws.appsync.outputs.DataSourceRelationalDatabaseConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an AppSync DataSource.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * `aws_appsync_datasource` can be imported with their `api_id`, a hyphen, and `name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:appsync/dataSource:DataSource example abcdef123456-example
 * ```
 * 
 */
@ResourceType(type="aws:appsync/dataSource:DataSource")
public class DataSource extends com.pulumi.resources.CustomResource {
    /**
     * The API ID for the GraphQL API for the DataSource.
     * 
     */
    @Export(name="apiId", type=String.class, parameters={})
    private Output<String> apiId;

    /**
     * @return The API ID for the GraphQL API for the DataSource.
     * 
     */
    public Output<String> apiId() {
        return this.apiId;
    }
    /**
     * The ARN
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * A description of the DataSource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the DataSource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * DynamoDB settings. See below
     * 
     */
    @Export(name="dynamodbConfig", type=DataSourceDynamodbConfig.class, parameters={})
    private Output</* @Nullable */ DataSourceDynamodbConfig> dynamodbConfig;

    /**
     * @return DynamoDB settings. See below
     * 
     */
    public Output<Optional<DataSourceDynamodbConfig>> dynamodbConfig() {
        return Codegen.optional(this.dynamodbConfig);
    }
    /**
     * Amazon Elasticsearch settings. See below
     * 
     */
    @Export(name="elasticsearchConfig", type=DataSourceElasticsearchConfig.class, parameters={})
    private Output</* @Nullable */ DataSourceElasticsearchConfig> elasticsearchConfig;

    /**
     * @return Amazon Elasticsearch settings. See below
     * 
     */
    public Output<Optional<DataSourceElasticsearchConfig>> elasticsearchConfig() {
        return Codegen.optional(this.elasticsearchConfig);
    }
    /**
     * HTTP settings. See below
     * 
     */
    @Export(name="httpConfig", type=DataSourceHttpConfig.class, parameters={})
    private Output</* @Nullable */ DataSourceHttpConfig> httpConfig;

    /**
     * @return HTTP settings. See below
     * 
     */
    public Output<Optional<DataSourceHttpConfig>> httpConfig() {
        return Codegen.optional(this.httpConfig);
    }
    /**
     * AWS Lambda settings. See below
     * 
     */
    @Export(name="lambdaConfig", type=DataSourceLambdaConfig.class, parameters={})
    private Output</* @Nullable */ DataSourceLambdaConfig> lambdaConfig;

    /**
     * @return AWS Lambda settings. See below
     * 
     */
    public Output<Optional<DataSourceLambdaConfig>> lambdaConfig() {
        return Codegen.optional(this.lambdaConfig);
    }
    /**
     * A user-supplied name for the DataSource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A user-supplied name for the DataSource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * AWS RDS settings. See Relational Database Config
     * 
     */
    @Export(name="relationalDatabaseConfig", type=DataSourceRelationalDatabaseConfig.class, parameters={})
    private Output</* @Nullable */ DataSourceRelationalDatabaseConfig> relationalDatabaseConfig;

    /**
     * @return AWS RDS settings. See Relational Database Config
     * 
     */
    public Output<Optional<DataSourceRelationalDatabaseConfig>> relationalDatabaseConfig() {
        return Codegen.optional(this.relationalDatabaseConfig);
    }
    /**
     * The IAM service role ARN for the data source.
     * 
     */
    @Export(name="serviceRoleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceRoleArn;

    /**
     * @return The IAM service role ARN for the data source.
     * 
     */
    public Output<Optional<String>> serviceRoleArn() {
        return Codegen.optional(this.serviceRoleArn);
    }
    /**
     * The type of the DataSource. Valid values: `AWS_LAMBDA`, `AMAZON_DYNAMODB`, `AMAZON_ELASTICSEARCH`, `HTTP`, `NONE`, `RELATIONAL_DATABASE`.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the DataSource. Valid values: `AWS_LAMBDA`, `AMAZON_DYNAMODB`, `AMAZON_ELASTICSEARCH`, `HTTP`, `NONE`, `RELATIONAL_DATABASE`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataSource(String name) {
        this(name, DataSourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataSource(String name, DataSourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataSource(String name, DataSourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:appsync/dataSource:DataSource", name, args == null ? DataSourceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DataSource(String name, Output<String> id, @Nullable DataSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws:appsync/dataSource:DataSource", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataSource get(String name, Output<String> id, @Nullable DataSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataSource(name, id, state, options);
    }
}
