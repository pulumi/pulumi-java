// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.directconnect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GatewayAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final GatewayAssociationState Empty = new GatewayAssociationState();

    /**
     * VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
     * 
     */
    @Import(name="allowedPrefixes")
      private final @Nullable Output<List<String>> allowedPrefixes;

    public Output<List<String>> allowedPrefixes() {
        return this.allowedPrefixes == null ? Codegen.empty() : this.allowedPrefixes;
    }

    /**
     * The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
     * Used for single account Direct Connect gateway associations.
     * 
     */
    @Import(name="associatedGatewayId")
      private final @Nullable Output<String> associatedGatewayId;

    public Output<String> associatedGatewayId() {
        return this.associatedGatewayId == null ? Codegen.empty() : this.associatedGatewayId;
    }

    /**
     * The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
     * Used for cross-account Direct Connect gateway associations.
     * 
     */
    @Import(name="associatedGatewayOwnerAccountId")
      private final @Nullable Output<String> associatedGatewayOwnerAccountId;

    public Output<String> associatedGatewayOwnerAccountId() {
        return this.associatedGatewayOwnerAccountId == null ? Codegen.empty() : this.associatedGatewayOwnerAccountId;
    }

    /**
     * The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.
     * 
     */
    @Import(name="associatedGatewayType")
      private final @Nullable Output<String> associatedGatewayType;

    public Output<String> associatedGatewayType() {
        return this.associatedGatewayType == null ? Codegen.empty() : this.associatedGatewayType;
    }

    /**
     * The ID of the Direct Connect gateway association.
     * 
     */
    @Import(name="dxGatewayAssociationId")
      private final @Nullable Output<String> dxGatewayAssociationId;

    public Output<String> dxGatewayAssociationId() {
        return this.dxGatewayAssociationId == null ? Codegen.empty() : this.dxGatewayAssociationId;
    }

    /**
     * The ID of the Direct Connect gateway.
     * 
     */
    @Import(name="dxGatewayId")
      private final @Nullable Output<String> dxGatewayId;

    public Output<String> dxGatewayId() {
        return this.dxGatewayId == null ? Codegen.empty() : this.dxGatewayId;
    }

    /**
     * The ID of the AWS account that owns the Direct Connect gateway.
     * 
     */
    @Import(name="dxGatewayOwnerAccountId")
      private final @Nullable Output<String> dxGatewayOwnerAccountId;

    public Output<String> dxGatewayOwnerAccountId() {
        return this.dxGatewayOwnerAccountId == null ? Codegen.empty() : this.dxGatewayOwnerAccountId;
    }

    /**
     * The ID of the Direct Connect gateway association proposal.
     * Used for cross-account Direct Connect gateway associations.
     * 
     */
    @Import(name="proposalId")
      private final @Nullable Output<String> proposalId;

    public Output<String> proposalId() {
        return this.proposalId == null ? Codegen.empty() : this.proposalId;
    }

    /**
     * @deprecated
     * use &#39;associated_gateway_id&#39; argument instead
     * 
     */
    @Deprecated /* use 'associated_gateway_id' argument instead */
    @Import(name="vpnGatewayId")
      private final @Nullable Output<String> vpnGatewayId;

    @Deprecated /* use 'associated_gateway_id' argument instead */
    public Output<String> vpnGatewayId() {
        return this.vpnGatewayId == null ? Codegen.empty() : this.vpnGatewayId;
    }

    public GatewayAssociationState(
        @Nullable Output<List<String>> allowedPrefixes,
        @Nullable Output<String> associatedGatewayId,
        @Nullable Output<String> associatedGatewayOwnerAccountId,
        @Nullable Output<String> associatedGatewayType,
        @Nullable Output<String> dxGatewayAssociationId,
        @Nullable Output<String> dxGatewayId,
        @Nullable Output<String> dxGatewayOwnerAccountId,
        @Nullable Output<String> proposalId,
        @Nullable Output<String> vpnGatewayId) {
        this.allowedPrefixes = allowedPrefixes;
        this.associatedGatewayId = associatedGatewayId;
        this.associatedGatewayOwnerAccountId = associatedGatewayOwnerAccountId;
        this.associatedGatewayType = associatedGatewayType;
        this.dxGatewayAssociationId = dxGatewayAssociationId;
        this.dxGatewayId = dxGatewayId;
        this.dxGatewayOwnerAccountId = dxGatewayOwnerAccountId;
        this.proposalId = proposalId;
        this.vpnGatewayId = vpnGatewayId;
    }

    private GatewayAssociationState() {
        this.allowedPrefixes = Codegen.empty();
        this.associatedGatewayId = Codegen.empty();
        this.associatedGatewayOwnerAccountId = Codegen.empty();
        this.associatedGatewayType = Codegen.empty();
        this.dxGatewayAssociationId = Codegen.empty();
        this.dxGatewayId = Codegen.empty();
        this.dxGatewayOwnerAccountId = Codegen.empty();
        this.proposalId = Codegen.empty();
        this.vpnGatewayId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> allowedPrefixes;
        private @Nullable Output<String> associatedGatewayId;
        private @Nullable Output<String> associatedGatewayOwnerAccountId;
        private @Nullable Output<String> associatedGatewayType;
        private @Nullable Output<String> dxGatewayAssociationId;
        private @Nullable Output<String> dxGatewayId;
        private @Nullable Output<String> dxGatewayOwnerAccountId;
        private @Nullable Output<String> proposalId;
        private @Nullable Output<String> vpnGatewayId;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayAssociationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedPrefixes = defaults.allowedPrefixes;
    	      this.associatedGatewayId = defaults.associatedGatewayId;
    	      this.associatedGatewayOwnerAccountId = defaults.associatedGatewayOwnerAccountId;
    	      this.associatedGatewayType = defaults.associatedGatewayType;
    	      this.dxGatewayAssociationId = defaults.dxGatewayAssociationId;
    	      this.dxGatewayId = defaults.dxGatewayId;
    	      this.dxGatewayOwnerAccountId = defaults.dxGatewayOwnerAccountId;
    	      this.proposalId = defaults.proposalId;
    	      this.vpnGatewayId = defaults.vpnGatewayId;
        }

        public Builder allowedPrefixes(@Nullable Output<List<String>> allowedPrefixes) {
            this.allowedPrefixes = allowedPrefixes;
            return this;
        }
        public Builder allowedPrefixes(@Nullable List<String> allowedPrefixes) {
            this.allowedPrefixes = Codegen.ofNullable(allowedPrefixes);
            return this;
        }
        public Builder allowedPrefixes(String... allowedPrefixes) {
            return allowedPrefixes(List.of(allowedPrefixes));
        }
        public Builder associatedGatewayId(@Nullable Output<String> associatedGatewayId) {
            this.associatedGatewayId = associatedGatewayId;
            return this;
        }
        public Builder associatedGatewayId(@Nullable String associatedGatewayId) {
            this.associatedGatewayId = Codegen.ofNullable(associatedGatewayId);
            return this;
        }
        public Builder associatedGatewayOwnerAccountId(@Nullable Output<String> associatedGatewayOwnerAccountId) {
            this.associatedGatewayOwnerAccountId = associatedGatewayOwnerAccountId;
            return this;
        }
        public Builder associatedGatewayOwnerAccountId(@Nullable String associatedGatewayOwnerAccountId) {
            this.associatedGatewayOwnerAccountId = Codegen.ofNullable(associatedGatewayOwnerAccountId);
            return this;
        }
        public Builder associatedGatewayType(@Nullable Output<String> associatedGatewayType) {
            this.associatedGatewayType = associatedGatewayType;
            return this;
        }
        public Builder associatedGatewayType(@Nullable String associatedGatewayType) {
            this.associatedGatewayType = Codegen.ofNullable(associatedGatewayType);
            return this;
        }
        public Builder dxGatewayAssociationId(@Nullable Output<String> dxGatewayAssociationId) {
            this.dxGatewayAssociationId = dxGatewayAssociationId;
            return this;
        }
        public Builder dxGatewayAssociationId(@Nullable String dxGatewayAssociationId) {
            this.dxGatewayAssociationId = Codegen.ofNullable(dxGatewayAssociationId);
            return this;
        }
        public Builder dxGatewayId(@Nullable Output<String> dxGatewayId) {
            this.dxGatewayId = dxGatewayId;
            return this;
        }
        public Builder dxGatewayId(@Nullable String dxGatewayId) {
            this.dxGatewayId = Codegen.ofNullable(dxGatewayId);
            return this;
        }
        public Builder dxGatewayOwnerAccountId(@Nullable Output<String> dxGatewayOwnerAccountId) {
            this.dxGatewayOwnerAccountId = dxGatewayOwnerAccountId;
            return this;
        }
        public Builder dxGatewayOwnerAccountId(@Nullable String dxGatewayOwnerAccountId) {
            this.dxGatewayOwnerAccountId = Codegen.ofNullable(dxGatewayOwnerAccountId);
            return this;
        }
        public Builder proposalId(@Nullable Output<String> proposalId) {
            this.proposalId = proposalId;
            return this;
        }
        public Builder proposalId(@Nullable String proposalId) {
            this.proposalId = Codegen.ofNullable(proposalId);
            return this;
        }
        public Builder vpnGatewayId(@Nullable Output<String> vpnGatewayId) {
            this.vpnGatewayId = vpnGatewayId;
            return this;
        }
        public Builder vpnGatewayId(@Nullable String vpnGatewayId) {
            this.vpnGatewayId = Codegen.ofNullable(vpnGatewayId);
            return this;
        }        public GatewayAssociationState build() {
            return new GatewayAssociationState(allowedPrefixes, associatedGatewayId, associatedGatewayOwnerAccountId, associatedGatewayType, dxGatewayAssociationId, dxGatewayId, dxGatewayOwnerAccountId, proposalId, vpnGatewayId);
        }
    }
}
