// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig;
import com.pulumi.aws.cloudfront.inputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig;
import com.pulumi.aws.cloudfront.inputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;


public final class GetCachePolicyParametersInCacheKeyAndForwardedToOrigin extends com.pulumi.resources.InvokeArgs {

    public static final GetCachePolicyParametersInCacheKeyAndForwardedToOrigin Empty = new GetCachePolicyParametersInCacheKeyAndForwardedToOrigin();

    /**
     * Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
     * 
     */
    @Import(name="cookiesConfigs", required=true)
    private List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig> cookiesConfigs;

    public List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig> cookiesConfigs() {
        return this.cookiesConfigs;
    }

    /**
     * A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
     * 
     */
    @Import(name="enableAcceptEncodingBrotli", required=true)
    private Boolean enableAcceptEncodingBrotli;

    public Boolean enableAcceptEncodingBrotli() {
        return this.enableAcceptEncodingBrotli;
    }

    /**
     * A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
     * 
     */
    @Import(name="enableAcceptEncodingGzip", required=true)
    private Boolean enableAcceptEncodingGzip;

    public Boolean enableAcceptEncodingGzip() {
        return this.enableAcceptEncodingGzip;
    }

    /**
     * Object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
     * 
     */
    @Import(name="headersConfigs", required=true)
    private List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig> headersConfigs;

    public List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig> headersConfigs() {
        return this.headersConfigs;
    }

    /**
     * Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Query String Config for more information.
     * 
     */
    @Import(name="queryStringsConfigs", required=true)
    private List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig> queryStringsConfigs;

    public List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig> queryStringsConfigs() {
        return this.queryStringsConfigs;
    }

    private GetCachePolicyParametersInCacheKeyAndForwardedToOrigin() {}

    private GetCachePolicyParametersInCacheKeyAndForwardedToOrigin(GetCachePolicyParametersInCacheKeyAndForwardedToOrigin $) {
        this.cookiesConfigs = $.cookiesConfigs;
        this.enableAcceptEncodingBrotli = $.enableAcceptEncodingBrotli;
        this.enableAcceptEncodingGzip = $.enableAcceptEncodingGzip;
        this.headersConfigs = $.headersConfigs;
        this.queryStringsConfigs = $.queryStringsConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCachePolicyParametersInCacheKeyAndForwardedToOrigin defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCachePolicyParametersInCacheKeyAndForwardedToOrigin $;

        public Builder() {
            $ = new GetCachePolicyParametersInCacheKeyAndForwardedToOrigin();
        }

        public Builder(GetCachePolicyParametersInCacheKeyAndForwardedToOrigin defaults) {
            $ = new GetCachePolicyParametersInCacheKeyAndForwardedToOrigin(Objects.requireNonNull(defaults));
        }

        public Builder cookiesConfigs(List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig> cookiesConfigs) {
            $.cookiesConfigs = cookiesConfigs;
            return this;
        }

        public Builder cookiesConfigs(GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig... cookiesConfigs) {
            return cookiesConfigs(List.of(cookiesConfigs));
        }

        public Builder enableAcceptEncodingBrotli(Boolean enableAcceptEncodingBrotli) {
            $.enableAcceptEncodingBrotli = enableAcceptEncodingBrotli;
            return this;
        }

        public Builder enableAcceptEncodingGzip(Boolean enableAcceptEncodingGzip) {
            $.enableAcceptEncodingGzip = enableAcceptEncodingGzip;
            return this;
        }

        public Builder headersConfigs(List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig> headersConfigs) {
            $.headersConfigs = headersConfigs;
            return this;
        }

        public Builder headersConfigs(GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig... headersConfigs) {
            return headersConfigs(List.of(headersConfigs));
        }

        public Builder queryStringsConfigs(List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig> queryStringsConfigs) {
            $.queryStringsConfigs = queryStringsConfigs;
            return this;
        }

        public Builder queryStringsConfigs(GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig... queryStringsConfigs) {
            return queryStringsConfigs(List.of(queryStringsConfigs));
        }

        public GetCachePolicyParametersInCacheKeyAndForwardedToOrigin build() {
            $.cookiesConfigs = Objects.requireNonNull($.cookiesConfigs, "expected parameter 'cookiesConfigs' to be non-null");
            $.enableAcceptEncodingBrotli = Objects.requireNonNull($.enableAcceptEncodingBrotli, "expected parameter 'enableAcceptEncodingBrotli' to be non-null");
            $.enableAcceptEncodingGzip = Objects.requireNonNull($.enableAcceptEncodingGzip, "expected parameter 'enableAcceptEncodingGzip' to be non-null");
            $.headersConfigs = Objects.requireNonNull($.headersConfigs, "expected parameter 'headersConfigs' to be non-null");
            $.queryStringsConfigs = Objects.requireNonNull($.queryStringsConfigs, "expected parameter 'queryStringsConfigs' to be non-null");
            return $;
        }
    }

}
