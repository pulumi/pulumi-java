// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetNodeGroupRemoteAccess extends com.pulumi.resources.InvokeArgs {

    public static final GetNodeGroupRemoteAccess Empty = new GetNodeGroupRemoteAccess();

    /**
     * EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
     * 
     */
    @Import(name="ec2SshKey", required=true)
    private String ec2SshKey;

    /**
     * @return EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
     * 
     */
    public String ec2SshKey() {
        return this.ec2SshKey;
    }

    /**
     * Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
     * 
     */
    @Import(name="sourceSecurityGroupIds", required=true)
    private List<String> sourceSecurityGroupIds;

    /**
     * @return Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
     * 
     */
    public List<String> sourceSecurityGroupIds() {
        return this.sourceSecurityGroupIds;
    }

    private GetNodeGroupRemoteAccess() {}

    private GetNodeGroupRemoteAccess(GetNodeGroupRemoteAccess $) {
        this.ec2SshKey = $.ec2SshKey;
        this.sourceSecurityGroupIds = $.sourceSecurityGroupIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNodeGroupRemoteAccess defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNodeGroupRemoteAccess $;

        public Builder() {
            $ = new GetNodeGroupRemoteAccess();
        }

        public Builder(GetNodeGroupRemoteAccess defaults) {
            $ = new GetNodeGroupRemoteAccess(Objects.requireNonNull(defaults));
        }

        /**
         * @param ec2SshKey EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
         * 
         * @return builder
         * 
         */
        public Builder ec2SshKey(String ec2SshKey) {
            $.ec2SshKey = ec2SshKey;
            return this;
        }

        /**
         * @param sourceSecurityGroupIds Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
         * 
         * @return builder
         * 
         */
        public Builder sourceSecurityGroupIds(List<String> sourceSecurityGroupIds) {
            $.sourceSecurityGroupIds = sourceSecurityGroupIds;
            return this;
        }

        /**
         * @param sourceSecurityGroupIds Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
         * 
         * @return builder
         * 
         */
        public Builder sourceSecurityGroupIds(String... sourceSecurityGroupIds) {
            return sourceSecurityGroupIds(List.of(sourceSecurityGroupIds));
        }

        public GetNodeGroupRemoteAccess build() {
            $.ec2SshKey = Objects.requireNonNull($.ec2SshKey, "expected parameter 'ec2SshKey' to be non-null");
            $.sourceSecurityGroupIds = Objects.requireNonNull($.sourceSecurityGroupIds, "expected parameter 'sourceSecurityGroupIds' to be non-null");
            return $;
        }
    }

}
