// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ebs.outputs;

import com.pulumi.aws.ebs.outputs.GetSnapshotFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSnapshotResult {
    /**
     * @return Amazon Resource Name (ARN) of the EBS Snapshot.
     * 
     */
    private final String arn;
    /**
     * @return The data encryption key identifier for the snapshot.
     * 
     */
    private final String dataEncryptionKeyId;
    /**
     * @return A description for the snapshot
     * 
     */
    private final String description;
    /**
     * @return Whether the snapshot is encrypted.
     * 
     */
    private final Boolean encrypted;
    private final @Nullable List<GetSnapshotFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The ARN for the KMS encryption key.
     * 
     */
    private final String kmsKeyId;
    private final @Nullable Boolean mostRecent;
    /**
     * @return The ARN of the Outpost on which the snapshot is stored.
     * 
     */
    private final String outpostArn;
    /**
     * @return Value from an Amazon-maintained list (`amazon`, `aws-marketplace`, `microsoft`) of snapshot owners.
     * 
     */
    private final String ownerAlias;
    /**
     * @return The AWS account ID of the EBS snapshot owner.
     * 
     */
    private final String ownerId;
    private final @Nullable List<String> owners;
    private final @Nullable List<String> restorableByUserIds;
    /**
     * @return The snapshot ID (e.g., snap-59fcb34e).
     * 
     */
    private final String snapshotId;
    private final @Nullable List<String> snapshotIds;
    /**
     * @return The snapshot state.
     * 
     */
    private final String state;
    /**
     * @return The storage tier in which the snapshot is stored.
     * 
     */
    private final String storageTier;
    /**
     * @return A map of tags for the resource.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The volume ID (e.g., vol-59fcb34e).
     * 
     */
    private final String volumeId;
    /**
     * @return The size of the drive in GiBs.
     * 
     */
    private final Integer volumeSize;

    @CustomType.Constructor
    private GetSnapshotResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("dataEncryptionKeyId") String dataEncryptionKeyId,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("encrypted") Boolean encrypted,
        @CustomType.Parameter("filters") @Nullable List<GetSnapshotFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("kmsKeyId") String kmsKeyId,
        @CustomType.Parameter("mostRecent") @Nullable Boolean mostRecent,
        @CustomType.Parameter("outpostArn") String outpostArn,
        @CustomType.Parameter("ownerAlias") String ownerAlias,
        @CustomType.Parameter("ownerId") String ownerId,
        @CustomType.Parameter("owners") @Nullable List<String> owners,
        @CustomType.Parameter("restorableByUserIds") @Nullable List<String> restorableByUserIds,
        @CustomType.Parameter("snapshotId") String snapshotId,
        @CustomType.Parameter("snapshotIds") @Nullable List<String> snapshotIds,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("storageTier") String storageTier,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("volumeId") String volumeId,
        @CustomType.Parameter("volumeSize") Integer volumeSize) {
        this.arn = arn;
        this.dataEncryptionKeyId = dataEncryptionKeyId;
        this.description = description;
        this.encrypted = encrypted;
        this.filters = filters;
        this.id = id;
        this.kmsKeyId = kmsKeyId;
        this.mostRecent = mostRecent;
        this.outpostArn = outpostArn;
        this.ownerAlias = ownerAlias;
        this.ownerId = ownerId;
        this.owners = owners;
        this.restorableByUserIds = restorableByUserIds;
        this.snapshotId = snapshotId;
        this.snapshotIds = snapshotIds;
        this.state = state;
        this.storageTier = storageTier;
        this.tags = tags;
        this.volumeId = volumeId;
        this.volumeSize = volumeSize;
    }

    /**
     * @return Amazon Resource Name (ARN) of the EBS Snapshot.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The data encryption key identifier for the snapshot.
     * 
     */
    public String dataEncryptionKeyId() {
        return this.dataEncryptionKeyId;
    }
    /**
     * @return A description for the snapshot
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Whether the snapshot is encrypted.
     * 
     */
    public Boolean encrypted() {
        return this.encrypted;
    }
    public List<GetSnapshotFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ARN for the KMS encryption key.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    public Optional<Boolean> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }
    /**
     * @return The ARN of the Outpost on which the snapshot is stored.
     * 
     */
    public String outpostArn() {
        return this.outpostArn;
    }
    /**
     * @return Value from an Amazon-maintained list (`amazon`, `aws-marketplace`, `microsoft`) of snapshot owners.
     * 
     */
    public String ownerAlias() {
        return this.ownerAlias;
    }
    /**
     * @return The AWS account ID of the EBS snapshot owner.
     * 
     */
    public String ownerId() {
        return this.ownerId;
    }
    public List<String> owners() {
        return this.owners == null ? List.of() : this.owners;
    }
    public List<String> restorableByUserIds() {
        return this.restorableByUserIds == null ? List.of() : this.restorableByUserIds;
    }
    /**
     * @return The snapshot ID (e.g., snap-59fcb34e).
     * 
     */
    public String snapshotId() {
        return this.snapshotId;
    }
    public List<String> snapshotIds() {
        return this.snapshotIds == null ? List.of() : this.snapshotIds;
    }
    /**
     * @return The snapshot state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The storage tier in which the snapshot is stored.
     * 
     */
    public String storageTier() {
        return this.storageTier;
    }
    /**
     * @return A map of tags for the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The volume ID (e.g., vol-59fcb34e).
     * 
     */
    public String volumeId() {
        return this.volumeId;
    }
    /**
     * @return The size of the drive in GiBs.
     * 
     */
    public Integer volumeSize() {
        return this.volumeSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String dataEncryptionKeyId;
        private String description;
        private Boolean encrypted;
        private @Nullable List<GetSnapshotFilter> filters;
        private String id;
        private String kmsKeyId;
        private @Nullable Boolean mostRecent;
        private String outpostArn;
        private String ownerAlias;
        private String ownerId;
        private @Nullable List<String> owners;
        private @Nullable List<String> restorableByUserIds;
        private String snapshotId;
        private @Nullable List<String> snapshotIds;
        private String state;
        private String storageTier;
        private Map<String,String> tags;
        private String volumeId;
        private Integer volumeSize;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.dataEncryptionKeyId = defaults.dataEncryptionKeyId;
    	      this.description = defaults.description;
    	      this.encrypted = defaults.encrypted;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.mostRecent = defaults.mostRecent;
    	      this.outpostArn = defaults.outpostArn;
    	      this.ownerAlias = defaults.ownerAlias;
    	      this.ownerId = defaults.ownerId;
    	      this.owners = defaults.owners;
    	      this.restorableByUserIds = defaults.restorableByUserIds;
    	      this.snapshotId = defaults.snapshotId;
    	      this.snapshotIds = defaults.snapshotIds;
    	      this.state = defaults.state;
    	      this.storageTier = defaults.storageTier;
    	      this.tags = defaults.tags;
    	      this.volumeId = defaults.volumeId;
    	      this.volumeSize = defaults.volumeSize;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder dataEncryptionKeyId(String dataEncryptionKeyId) {
            this.dataEncryptionKeyId = Objects.requireNonNull(dataEncryptionKeyId);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder encrypted(Boolean encrypted) {
            this.encrypted = Objects.requireNonNull(encrypted);
            return this;
        }
        public Builder filters(@Nullable List<GetSnapshotFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSnapshotFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        public Builder mostRecent(@Nullable Boolean mostRecent) {
            this.mostRecent = mostRecent;
            return this;
        }
        public Builder outpostArn(String outpostArn) {
            this.outpostArn = Objects.requireNonNull(outpostArn);
            return this;
        }
        public Builder ownerAlias(String ownerAlias) {
            this.ownerAlias = Objects.requireNonNull(ownerAlias);
            return this;
        }
        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }
        public Builder owners(@Nullable List<String> owners) {
            this.owners = owners;
            return this;
        }
        public Builder owners(String... owners) {
            return owners(List.of(owners));
        }
        public Builder restorableByUserIds(@Nullable List<String> restorableByUserIds) {
            this.restorableByUserIds = restorableByUserIds;
            return this;
        }
        public Builder restorableByUserIds(String... restorableByUserIds) {
            return restorableByUserIds(List.of(restorableByUserIds));
        }
        public Builder snapshotId(String snapshotId) {
            this.snapshotId = Objects.requireNonNull(snapshotId);
            return this;
        }
        public Builder snapshotIds(@Nullable List<String> snapshotIds) {
            this.snapshotIds = snapshotIds;
            return this;
        }
        public Builder snapshotIds(String... snapshotIds) {
            return snapshotIds(List.of(snapshotIds));
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder storageTier(String storageTier) {
            this.storageTier = Objects.requireNonNull(storageTier);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder volumeId(String volumeId) {
            this.volumeId = Objects.requireNonNull(volumeId);
            return this;
        }
        public Builder volumeSize(Integer volumeSize) {
            this.volumeSize = Objects.requireNonNull(volumeSize);
            return this;
        }        public GetSnapshotResult build() {
            return new GetSnapshotResult(arn, dataEncryptionKeyId, description, encrypted, filters, id, kmsKeyId, mostRecent, outpostArn, ownerAlias, ownerId, owners, restorableByUserIds, snapshotId, snapshotIds, state, storageTier, tags, volumeId, volumeSize);
        }
    }
}
