// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acmpca.inputs;

import com.pulumi.aws.acmpca.inputs.CertificateAuthorityCertificateAuthorityConfigurationSubjectGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CertificateAuthorityCertificateAuthorityConfigurationGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateAuthorityCertificateAuthorityConfigurationGetArgs Empty = new CertificateAuthorityCertificateAuthorityConfigurationGetArgs();

    /**
     * Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     * 
     */
    @Import(name="keyAlgorithm", required=true)
    private Output<String> keyAlgorithm;

    /**
     * @return Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     * 
     */
    public Output<String> keyAlgorithm() {
        return this.keyAlgorithm;
    }

    /**
     * Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     * 
     */
    @Import(name="signingAlgorithm", required=true)
    private Output<String> signingAlgorithm;

    /**
     * @return Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     * 
     */
    public Output<String> signingAlgorithm() {
        return this.signingAlgorithm;
    }

    /**
     * Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
     * 
     */
    @Import(name="subject", required=true)
    private Output<CertificateAuthorityCertificateAuthorityConfigurationSubjectGetArgs> subject;

    /**
     * @return Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
     * 
     */
    public Output<CertificateAuthorityCertificateAuthorityConfigurationSubjectGetArgs> subject() {
        return this.subject;
    }

    private CertificateAuthorityCertificateAuthorityConfigurationGetArgs() {}

    private CertificateAuthorityCertificateAuthorityConfigurationGetArgs(CertificateAuthorityCertificateAuthorityConfigurationGetArgs $) {
        this.keyAlgorithm = $.keyAlgorithm;
        this.signingAlgorithm = $.signingAlgorithm;
        this.subject = $.subject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateAuthorityCertificateAuthorityConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateAuthorityCertificateAuthorityConfigurationGetArgs $;

        public Builder() {
            $ = new CertificateAuthorityCertificateAuthorityConfigurationGetArgs();
        }

        public Builder(CertificateAuthorityCertificateAuthorityConfigurationGetArgs defaults) {
            $ = new CertificateAuthorityCertificateAuthorityConfigurationGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyAlgorithm Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
         * 
         * @return builder
         * 
         */
        public Builder keyAlgorithm(Output<String> keyAlgorithm) {
            $.keyAlgorithm = keyAlgorithm;
            return this;
        }

        /**
         * @param keyAlgorithm Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
         * 
         * @return builder
         * 
         */
        public Builder keyAlgorithm(String keyAlgorithm) {
            return keyAlgorithm(Output.of(keyAlgorithm));
        }

        /**
         * @param signingAlgorithm Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
         * 
         * @return builder
         * 
         */
        public Builder signingAlgorithm(Output<String> signingAlgorithm) {
            $.signingAlgorithm = signingAlgorithm;
            return this;
        }

        /**
         * @param signingAlgorithm Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
         * 
         * @return builder
         * 
         */
        public Builder signingAlgorithm(String signingAlgorithm) {
            return signingAlgorithm(Output.of(signingAlgorithm));
        }

        /**
         * @param subject Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
         * 
         * @return builder
         * 
         */
        public Builder subject(Output<CertificateAuthorityCertificateAuthorityConfigurationSubjectGetArgs> subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subject Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
         * 
         * @return builder
         * 
         */
        public Builder subject(CertificateAuthorityCertificateAuthorityConfigurationSubjectGetArgs subject) {
            return subject(Output.of(subject));
        }

        public CertificateAuthorityCertificateAuthorityConfigurationGetArgs build() {
            $.keyAlgorithm = Objects.requireNonNull($.keyAlgorithm, "expected parameter 'keyAlgorithm' to be non-null");
            $.signingAlgorithm = Objects.requireNonNull($.signingAlgorithm, "expected parameter 'signingAlgorithm' to be non-null");
            $.subject = Objects.requireNonNull($.subject, "expected parameter 'subject' to be non-null");
            return $;
        }
    }

}
