// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.VpcEndpointServicePrivateDnsNameConfigurationGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcEndpointServiceState extends com.pulumi.resources.ResourceArgs {

    public static final VpcEndpointServiceState Empty = new VpcEndpointServiceState();

    /**
     * Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     * 
     */
    @Import(name="acceptanceRequired")
    private @Nullable Output<Boolean> acceptanceRequired;

    public Optional<Output<Boolean>> acceptanceRequired() {
        return Optional.ofNullable(this.acceptanceRequired);
    }

    /**
     * The ARNs of one or more principals allowed to discover the endpoint service.
     * 
     */
    @Import(name="allowedPrincipals")
    private @Nullable Output<List<String>> allowedPrincipals;

    public Optional<Output<List<String>>> allowedPrincipals() {
        return Optional.ofNullable(this.allowedPrincipals);
    }

    /**
     * The Amazon Resource Name (ARN) of the VPC endpoint service.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The Availability Zones in which the service is available.
     * 
     */
    @Import(name="availabilityZones")
    private @Nullable Output<List<String>> availabilityZones;

    public Optional<Output<List<String>>> availabilityZones() {
        return Optional.ofNullable(this.availabilityZones);
    }

    /**
     * The DNS names for the service.
     * 
     */
    @Import(name="baseEndpointDnsNames")
    private @Nullable Output<List<String>> baseEndpointDnsNames;

    public Optional<Output<List<String>>> baseEndpointDnsNames() {
        return Optional.ofNullable(this.baseEndpointDnsNames);
    }

    /**
     * Amazon Resource Names (ARNs) of one or more Gateway Load Balancers for the endpoint service.
     * 
     */
    @Import(name="gatewayLoadBalancerArns")
    private @Nullable Output<List<String>> gatewayLoadBalancerArns;

    public Optional<Output<List<String>>> gatewayLoadBalancerArns() {
        return Optional.ofNullable(this.gatewayLoadBalancerArns);
    }

    /**
     * Whether or not the service manages its VPC endpoints - `true` or `false`.
     * 
     */
    @Import(name="managesVpcEndpoints")
    private @Nullable Output<Boolean> managesVpcEndpoints;

    public Optional<Output<Boolean>> managesVpcEndpoints() {
        return Optional.ofNullable(this.managesVpcEndpoints);
    }

    /**
     * Amazon Resource Names (ARNs) of one or more Network Load Balancers for the endpoint service.
     * 
     */
    @Import(name="networkLoadBalancerArns")
    private @Nullable Output<List<String>> networkLoadBalancerArns;

    public Optional<Output<List<String>>> networkLoadBalancerArns() {
        return Optional.ofNullable(this.networkLoadBalancerArns);
    }

    /**
     * The private DNS name for the service.
     * 
     */
    @Import(name="privateDnsName")
    private @Nullable Output<String> privateDnsName;

    public Optional<Output<String>> privateDnsName() {
        return Optional.ofNullable(this.privateDnsName);
    }

    /**
     * List of objects containing information about the endpoint service private DNS name configuration.
     * 
     */
    @Import(name="privateDnsNameConfigurations")
    private @Nullable Output<List<VpcEndpointServicePrivateDnsNameConfigurationGetArgs>> privateDnsNameConfigurations;

    public Optional<Output<List<VpcEndpointServicePrivateDnsNameConfigurationGetArgs>>> privateDnsNameConfigurations() {
        return Optional.ofNullable(this.privateDnsNameConfigurations);
    }

    /**
     * The service name.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The service type, `Gateway` or `Interface`.
     * 
     */
    @Import(name="serviceType")
    private @Nullable Output<String> serviceType;

    public Optional<Output<String>> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }

    /**
     * Verification state of the VPC endpoint service. Consumers of the endpoint service can use the private name only when the state is `verified`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private VpcEndpointServiceState() {}

    private VpcEndpointServiceState(VpcEndpointServiceState $) {
        this.acceptanceRequired = $.acceptanceRequired;
        this.allowedPrincipals = $.allowedPrincipals;
        this.arn = $.arn;
        this.availabilityZones = $.availabilityZones;
        this.baseEndpointDnsNames = $.baseEndpointDnsNames;
        this.gatewayLoadBalancerArns = $.gatewayLoadBalancerArns;
        this.managesVpcEndpoints = $.managesVpcEndpoints;
        this.networkLoadBalancerArns = $.networkLoadBalancerArns;
        this.privateDnsName = $.privateDnsName;
        this.privateDnsNameConfigurations = $.privateDnsNameConfigurations;
        this.serviceName = $.serviceName;
        this.serviceType = $.serviceType;
        this.state = $.state;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcEndpointServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcEndpointServiceState $;

        public Builder() {
            $ = new VpcEndpointServiceState();
        }

        public Builder(VpcEndpointServiceState defaults) {
            $ = new VpcEndpointServiceState(Objects.requireNonNull(defaults));
        }

        public Builder acceptanceRequired(@Nullable Output<Boolean> acceptanceRequired) {
            $.acceptanceRequired = acceptanceRequired;
            return this;
        }

        public Builder acceptanceRequired(Boolean acceptanceRequired) {
            return acceptanceRequired(Output.of(acceptanceRequired));
        }

        public Builder allowedPrincipals(@Nullable Output<List<String>> allowedPrincipals) {
            $.allowedPrincipals = allowedPrincipals;
            return this;
        }

        public Builder allowedPrincipals(List<String> allowedPrincipals) {
            return allowedPrincipals(Output.of(allowedPrincipals));
        }

        public Builder allowedPrincipals(String... allowedPrincipals) {
            return allowedPrincipals(List.of(allowedPrincipals));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder availabilityZones(@Nullable Output<List<String>> availabilityZones) {
            $.availabilityZones = availabilityZones;
            return this;
        }

        public Builder availabilityZones(List<String> availabilityZones) {
            return availabilityZones(Output.of(availabilityZones));
        }

        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }

        public Builder baseEndpointDnsNames(@Nullable Output<List<String>> baseEndpointDnsNames) {
            $.baseEndpointDnsNames = baseEndpointDnsNames;
            return this;
        }

        public Builder baseEndpointDnsNames(List<String> baseEndpointDnsNames) {
            return baseEndpointDnsNames(Output.of(baseEndpointDnsNames));
        }

        public Builder baseEndpointDnsNames(String... baseEndpointDnsNames) {
            return baseEndpointDnsNames(List.of(baseEndpointDnsNames));
        }

        public Builder gatewayLoadBalancerArns(@Nullable Output<List<String>> gatewayLoadBalancerArns) {
            $.gatewayLoadBalancerArns = gatewayLoadBalancerArns;
            return this;
        }

        public Builder gatewayLoadBalancerArns(List<String> gatewayLoadBalancerArns) {
            return gatewayLoadBalancerArns(Output.of(gatewayLoadBalancerArns));
        }

        public Builder gatewayLoadBalancerArns(String... gatewayLoadBalancerArns) {
            return gatewayLoadBalancerArns(List.of(gatewayLoadBalancerArns));
        }

        public Builder managesVpcEndpoints(@Nullable Output<Boolean> managesVpcEndpoints) {
            $.managesVpcEndpoints = managesVpcEndpoints;
            return this;
        }

        public Builder managesVpcEndpoints(Boolean managesVpcEndpoints) {
            return managesVpcEndpoints(Output.of(managesVpcEndpoints));
        }

        public Builder networkLoadBalancerArns(@Nullable Output<List<String>> networkLoadBalancerArns) {
            $.networkLoadBalancerArns = networkLoadBalancerArns;
            return this;
        }

        public Builder networkLoadBalancerArns(List<String> networkLoadBalancerArns) {
            return networkLoadBalancerArns(Output.of(networkLoadBalancerArns));
        }

        public Builder networkLoadBalancerArns(String... networkLoadBalancerArns) {
            return networkLoadBalancerArns(List.of(networkLoadBalancerArns));
        }

        public Builder privateDnsName(@Nullable Output<String> privateDnsName) {
            $.privateDnsName = privateDnsName;
            return this;
        }

        public Builder privateDnsName(String privateDnsName) {
            return privateDnsName(Output.of(privateDnsName));
        }

        public Builder privateDnsNameConfigurations(@Nullable Output<List<VpcEndpointServicePrivateDnsNameConfigurationGetArgs>> privateDnsNameConfigurations) {
            $.privateDnsNameConfigurations = privateDnsNameConfigurations;
            return this;
        }

        public Builder privateDnsNameConfigurations(List<VpcEndpointServicePrivateDnsNameConfigurationGetArgs> privateDnsNameConfigurations) {
            return privateDnsNameConfigurations(Output.of(privateDnsNameConfigurations));
        }

        public Builder privateDnsNameConfigurations(VpcEndpointServicePrivateDnsNameConfigurationGetArgs... privateDnsNameConfigurations) {
            return privateDnsNameConfigurations(List.of(privateDnsNameConfigurations));
        }

        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public Builder serviceType(@Nullable Output<String> serviceType) {
            $.serviceType = serviceType;
            return this;
        }

        public Builder serviceType(String serviceType) {
            return serviceType(Output.of(serviceType));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public VpcEndpointServiceState build() {
            return $;
        }
    }

}
