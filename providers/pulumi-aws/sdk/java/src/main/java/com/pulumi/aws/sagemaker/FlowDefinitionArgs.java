// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker;

import com.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopActivationConfigArgs;
import com.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopConfigArgs;
import com.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopRequestSourceArgs;
import com.pulumi.aws.sagemaker.inputs.FlowDefinitionOutputConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowDefinitionArgs Empty = new FlowDefinitionArgs();

    /**
     * The name of your flow definition.
     * 
     */
    @Import(name="flowDefinitionName", required=true)
    private Output<String> flowDefinitionName;

    public Output<String> flowDefinitionName() {
        return this.flowDefinitionName;
    }

    /**
     * An object containing information about the events that trigger a human workflow. See Human Loop Activation Config details below.
     * 
     */
    @Import(name="humanLoopActivationConfig")
    private @Nullable Output<FlowDefinitionHumanLoopActivationConfigArgs> humanLoopActivationConfig;

    public Optional<Output<FlowDefinitionHumanLoopActivationConfigArgs>> humanLoopActivationConfig() {
        return Optional.ofNullable(this.humanLoopActivationConfig);
    }

    /**
     * An object containing information about the tasks the human reviewers will perform. See Human Loop Config details below.
     * 
     */
    @Import(name="humanLoopConfig", required=true)
    private Output<FlowDefinitionHumanLoopConfigArgs> humanLoopConfig;

    public Output<FlowDefinitionHumanLoopConfigArgs> humanLoopConfig() {
        return this.humanLoopConfig;
    }

    /**
     * Container for configuring the source of human task requests. Use to specify if Amazon Rekognition or Amazon Textract is used as an integration source. See Human Loop Request Source details below.
     * 
     */
    @Import(name="humanLoopRequestSource")
    private @Nullable Output<FlowDefinitionHumanLoopRequestSourceArgs> humanLoopRequestSource;

    public Optional<Output<FlowDefinitionHumanLoopRequestSourceArgs>> humanLoopRequestSource() {
        return Optional.ofNullable(this.humanLoopRequestSource);
    }

    /**
     * An object containing information about where the human review results will be uploaded. See Output Config details below.
     * 
     */
    @Import(name="outputConfig", required=true)
    private Output<FlowDefinitionOutputConfigArgs> outputConfig;

    public Output<FlowDefinitionOutputConfigArgs> outputConfig() {
        return this.outputConfig;
    }

    /**
     * The Amazon Resource Name (ARN) of the role needed to call other services on your behalf.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FlowDefinitionArgs() {}

    private FlowDefinitionArgs(FlowDefinitionArgs $) {
        this.flowDefinitionName = $.flowDefinitionName;
        this.humanLoopActivationConfig = $.humanLoopActivationConfig;
        this.humanLoopConfig = $.humanLoopConfig;
        this.humanLoopRequestSource = $.humanLoopRequestSource;
        this.outputConfig = $.outputConfig;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowDefinitionArgs $;

        public Builder() {
            $ = new FlowDefinitionArgs();
        }

        public Builder(FlowDefinitionArgs defaults) {
            $ = new FlowDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder flowDefinitionName(Output<String> flowDefinitionName) {
            $.flowDefinitionName = flowDefinitionName;
            return this;
        }

        public Builder flowDefinitionName(String flowDefinitionName) {
            return flowDefinitionName(Output.of(flowDefinitionName));
        }

        public Builder humanLoopActivationConfig(@Nullable Output<FlowDefinitionHumanLoopActivationConfigArgs> humanLoopActivationConfig) {
            $.humanLoopActivationConfig = humanLoopActivationConfig;
            return this;
        }

        public Builder humanLoopActivationConfig(FlowDefinitionHumanLoopActivationConfigArgs humanLoopActivationConfig) {
            return humanLoopActivationConfig(Output.of(humanLoopActivationConfig));
        }

        public Builder humanLoopConfig(Output<FlowDefinitionHumanLoopConfigArgs> humanLoopConfig) {
            $.humanLoopConfig = humanLoopConfig;
            return this;
        }

        public Builder humanLoopConfig(FlowDefinitionHumanLoopConfigArgs humanLoopConfig) {
            return humanLoopConfig(Output.of(humanLoopConfig));
        }

        public Builder humanLoopRequestSource(@Nullable Output<FlowDefinitionHumanLoopRequestSourceArgs> humanLoopRequestSource) {
            $.humanLoopRequestSource = humanLoopRequestSource;
            return this;
        }

        public Builder humanLoopRequestSource(FlowDefinitionHumanLoopRequestSourceArgs humanLoopRequestSource) {
            return humanLoopRequestSource(Output.of(humanLoopRequestSource));
        }

        public Builder outputConfig(Output<FlowDefinitionOutputConfigArgs> outputConfig) {
            $.outputConfig = outputConfig;
            return this;
        }

        public Builder outputConfig(FlowDefinitionOutputConfigArgs outputConfig) {
            return outputConfig(Output.of(outputConfig));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public FlowDefinitionArgs build() {
            $.flowDefinitionName = Objects.requireNonNull($.flowDefinitionName, "expected parameter 'flowDefinitionName' to be non-null");
            $.humanLoopConfig = Objects.requireNonNull($.humanLoopConfig, "expected parameter 'humanLoopConfig' to be non-null");
            $.outputConfig = Objects.requireNonNull($.outputConfig, "expected parameter 'outputConfig' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
