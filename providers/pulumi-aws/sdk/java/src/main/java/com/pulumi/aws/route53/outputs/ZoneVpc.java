// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZoneVpc {
    /**
     * @return ID of the VPC to associate.
     * 
     */
    private final String vpcId;
    /**
     * @return Region of the VPC to associate. Defaults to AWS provider region.
     * 
     */
    private final @Nullable String vpcRegion;

    @CustomType.Constructor
    private ZoneVpc(
        @CustomType.Parameter("vpcId") String vpcId,
        @CustomType.Parameter("vpcRegion") @Nullable String vpcRegion) {
        this.vpcId = vpcId;
        this.vpcRegion = vpcRegion;
    }

    /**
     * @return ID of the VPC to associate.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return Region of the VPC to associate. Defaults to AWS provider region.
     * 
     */
    public Optional<String> vpcRegion() {
        return Optional.ofNullable(this.vpcRegion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZoneVpc defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String vpcId;
        private @Nullable String vpcRegion;

        public Builder() {
    	      // Empty
        }

        public Builder(ZoneVpc defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.vpcId = defaults.vpcId;
    	      this.vpcRegion = defaults.vpcRegion;
        }

        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public Builder vpcRegion(@Nullable String vpcRegion) {
            this.vpcRegion = vpcRegion;
            return this;
        }        public ZoneVpc build() {
            return new ZoneVpc(vpcId, vpcRegion);
        }
    }
}
