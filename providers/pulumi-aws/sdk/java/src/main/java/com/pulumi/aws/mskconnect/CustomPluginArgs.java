// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mskconnect;

import com.pulumi.aws.mskconnect.inputs.CustomPluginLocationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CustomPluginArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomPluginArgs Empty = new CustomPluginArgs();

    /**
     * The type of the plugin file. Allowed values are `ZIP` and `JAR`.
     * 
     */
    @Import(name="contentType", required=true)
      private final Output<String> contentType;

    public Output<String> contentType() {
        return this.contentType;
    }

    /**
     * A summary description of the custom plugin.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Information about the location of a custom plugin. See below.
     * 
     */
    @Import(name="location", required=true)
      private final Output<CustomPluginLocationArgs> location;

    public Output<CustomPluginLocationArgs> location() {
        return this.location;
    }

    /**
     * The name of the custom plugin..
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    public CustomPluginArgs(
        Output<String> contentType,
        @Nullable Output<String> description,
        Output<CustomPluginLocationArgs> location,
        @Nullable Output<String> name) {
        this.contentType = Objects.requireNonNull(contentType, "expected parameter 'contentType' to be non-null");
        this.description = description;
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
        this.name = name;
    }

    private CustomPluginArgs() {
        this.contentType = Codegen.empty();
        this.description = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomPluginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> contentType;
        private @Nullable Output<String> description;
        private Output<CustomPluginLocationArgs> location;
        private @Nullable Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomPluginArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.description = defaults.description;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
        }

        public Builder contentType(Output<String> contentType) {
            this.contentType = Objects.requireNonNull(contentType);
            return this;
        }
        public Builder contentType(String contentType) {
            this.contentType = Output.of(Objects.requireNonNull(contentType));
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder location(Output<CustomPluginLocationArgs> location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder location(CustomPluginLocationArgs location) {
            this.location = Output.of(Objects.requireNonNull(location));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }        public CustomPluginArgs build() {
            return new CustomPluginArgs(contentType, description, location, name);
        }
    }
}
