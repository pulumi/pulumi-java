// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acmpca.inputs;

import com.pulumi.aws.acmpca.inputs.GetCertificateAuthorityRevocationConfiguration;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCertificateAuthorityArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCertificateAuthorityArgs Empty = new GetCertificateAuthorityArgs();

    /**
     * Amazon Resource Name (ARN) of the certificate authority.
     * 
     */
    @Import(name="arn", required=true)
    private String arn;

    public String arn() {
        return this.arn;
    }

    /**
     * Nested attribute containing revocation configuration.
     * * `revocation_configuration.0.crl_configuration` - Nested attribute containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority.
     * * `revocation_configuration.0.crl_configuration.0.custom_cname` - Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point.
     * * `revocation_configuration.0.crl_configuration.0.enabled` - Boolean value that specifies whether certificate revocation lists (CRLs) are enabled.
     * * `revocation_configuration.0.crl_configuration.0.expiration_in_days` - Number of days until a certificate expires.
     * * `revocation_configuration.0.crl_configuration.0.s3_bucket_name` - Name of the S3 bucket that contains the CRL.
     * * `revocation_configuration.0.crl_configuration.0.s3_object_acl` - Whether the CRL is publicly readable or privately held in the CRL Amazon S3 bucket.
     * 
     */
    @Import(name="revocationConfigurations")
    private @Nullable List<GetCertificateAuthorityRevocationConfiguration> revocationConfigurations;

    public Optional<List<GetCertificateAuthorityRevocationConfiguration>> revocationConfigurations() {
        return Optional.ofNullable(this.revocationConfigurations);
    }

    /**
     * Specifies a key-value map of user-defined tags that are attached to the certificate authority.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetCertificateAuthorityArgs() {}

    private GetCertificateAuthorityArgs(GetCertificateAuthorityArgs $) {
        this.arn = $.arn;
        this.revocationConfigurations = $.revocationConfigurations;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCertificateAuthorityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCertificateAuthorityArgs $;

        public Builder() {
            $ = new GetCertificateAuthorityArgs();
        }

        public Builder(GetCertificateAuthorityArgs defaults) {
            $ = new GetCertificateAuthorityArgs(Objects.requireNonNull(defaults));
        }

        public Builder arn(String arn) {
            $.arn = arn;
            return this;
        }

        public Builder revocationConfigurations(@Nullable List<GetCertificateAuthorityRevocationConfiguration> revocationConfigurations) {
            $.revocationConfigurations = revocationConfigurations;
            return this;
        }

        public Builder revocationConfigurations(GetCertificateAuthorityRevocationConfiguration... revocationConfigurations) {
            return revocationConfigurations(List.of(revocationConfigurations));
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetCertificateAuthorityArgs build() {
            $.arn = Objects.requireNonNull($.arn, "expected parameter 'arn' to be non-null");
            return $;
        }
    }

}
