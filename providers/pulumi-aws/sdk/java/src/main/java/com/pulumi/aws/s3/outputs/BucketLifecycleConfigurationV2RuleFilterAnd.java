// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketLifecycleConfigurationV2RuleFilterAnd {
    /**
     * @return Minimum object size to which the rule applies. Value must be at least `0` if specified.
     * 
     */
    private final @Nullable Integer objectSizeGreaterThan;
    /**
     * @return Maximum object size to which the rule applies. Value must be at least `1` if specified.
     * 
     */
    private final @Nullable Integer objectSizeLessThan;
    /**
     * @return Prefix identifying one or more objects to which the rule applies.
     * 
     */
    private final @Nullable String prefix;
    /**
     * @return Key-value map of resource tags. All of these tags must exist in the object&#39;s tag set in order for the rule to apply.
     * 
     */
    private final @Nullable Map<String,String> tags;

    @CustomType.Constructor
    private BucketLifecycleConfigurationV2RuleFilterAnd(
        @CustomType.Parameter("objectSizeGreaterThan") @Nullable Integer objectSizeGreaterThan,
        @CustomType.Parameter("objectSizeLessThan") @Nullable Integer objectSizeLessThan,
        @CustomType.Parameter("prefix") @Nullable String prefix,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags) {
        this.objectSizeGreaterThan = objectSizeGreaterThan;
        this.objectSizeLessThan = objectSizeLessThan;
        this.prefix = prefix;
        this.tags = tags;
    }

    /**
     * @return Minimum object size to which the rule applies. Value must be at least `0` if specified.
     * 
     */
    public Optional<Integer> objectSizeGreaterThan() {
        return Optional.ofNullable(this.objectSizeGreaterThan);
    }
    /**
     * @return Maximum object size to which the rule applies. Value must be at least `1` if specified.
     * 
     */
    public Optional<Integer> objectSizeLessThan() {
        return Optional.ofNullable(this.objectSizeLessThan);
    }
    /**
     * @return Prefix identifying one or more objects to which the rule applies.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    /**
     * @return Key-value map of resource tags. All of these tags must exist in the object&#39;s tag set in order for the rule to apply.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleConfigurationV2RuleFilterAnd defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer objectSizeGreaterThan;
        private @Nullable Integer objectSizeLessThan;
        private @Nullable String prefix;
        private @Nullable Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLifecycleConfigurationV2RuleFilterAnd defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.objectSizeGreaterThan = defaults.objectSizeGreaterThan;
    	      this.objectSizeLessThan = defaults.objectSizeLessThan;
    	      this.prefix = defaults.prefix;
    	      this.tags = defaults.tags;
        }

        public Builder objectSizeGreaterThan(@Nullable Integer objectSizeGreaterThan) {
            this.objectSizeGreaterThan = objectSizeGreaterThan;
            return this;
        }
        public Builder objectSizeLessThan(@Nullable Integer objectSizeLessThan) {
            this.objectSizeLessThan = objectSizeLessThan;
            return this;
        }
        public Builder prefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }        public BucketLifecycleConfigurationV2RuleFilterAnd build() {
            return new BucketLifecycleConfigurationV2RuleFilterAnd(objectSizeGreaterThan, objectSizeLessThan, prefix, tags);
        }
    }
}
