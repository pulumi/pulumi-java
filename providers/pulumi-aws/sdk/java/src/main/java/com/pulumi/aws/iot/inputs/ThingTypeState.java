// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.aws.iot.inputs.ThingTypePropertiesGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ThingTypeState extends com.pulumi.resources.ResourceArgs {

    public static final ThingTypeState Empty = new ThingTypeState();

    /**
     * The ARN of the created AWS IoT Thing Type.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Whether the thing type is deprecated. If true, no new things could be associated with this type.
     * 
     */
    @Import(name="deprecated")
    private @Nullable Output<Boolean> deprecated;

    public Optional<Output<Boolean>> deprecated() {
        return Optional.ofNullable(this.deprecated);
    }

    /**
     * The name of the thing type.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * , Configuration block that can contain the following properties of the thing type:
     * 
     */
    @Import(name="properties")
    private @Nullable Output<ThingTypePropertiesGetArgs> properties;

    public Optional<Output<ThingTypePropertiesGetArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private ThingTypeState() {}

    private ThingTypeState(ThingTypeState $) {
        this.arn = $.arn;
        this.deprecated = $.deprecated;
        this.name = $.name;
        this.properties = $.properties;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ThingTypeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ThingTypeState $;

        public Builder() {
            $ = new ThingTypeState();
        }

        public Builder(ThingTypeState defaults) {
            $ = new ThingTypeState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder deprecated(@Nullable Output<Boolean> deprecated) {
            $.deprecated = deprecated;
            return this;
        }

        public Builder deprecated(Boolean deprecated) {
            return deprecated(Output.of(deprecated));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder properties(@Nullable Output<ThingTypePropertiesGetArgs> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(ThingTypePropertiesGetArgs properties) {
            return properties(Output.of(properties));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public ThingTypeState build() {
            return $;
        }
    }

}
