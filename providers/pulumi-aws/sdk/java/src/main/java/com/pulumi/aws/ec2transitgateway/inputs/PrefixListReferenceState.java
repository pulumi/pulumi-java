// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2transitgateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PrefixListReferenceState extends com.pulumi.resources.ResourceArgs {

    public static final PrefixListReferenceState Empty = new PrefixListReferenceState();

    /**
     * Indicates whether to drop traffic that matches the Prefix List. Defaults to `false`.
     * 
     */
    @Import(name="blackhole")
      private final @Nullable Output<Boolean> blackhole;

    public Output<Boolean> blackhole() {
        return this.blackhole == null ? Codegen.empty() : this.blackhole;
    }

    /**
     * Identifier of EC2 Prefix List.
     * 
     */
    @Import(name="prefixListId")
      private final @Nullable Output<String> prefixListId;

    public Output<String> prefixListId() {
        return this.prefixListId == null ? Codegen.empty() : this.prefixListId;
    }

    @Import(name="prefixListOwnerId")
      private final @Nullable Output<String> prefixListOwnerId;

    public Output<String> prefixListOwnerId() {
        return this.prefixListOwnerId == null ? Codegen.empty() : this.prefixListOwnerId;
    }

    /**
     * Identifier of EC2 Transit Gateway Attachment.
     * 
     */
    @Import(name="transitGatewayAttachmentId")
      private final @Nullable Output<String> transitGatewayAttachmentId;

    public Output<String> transitGatewayAttachmentId() {
        return this.transitGatewayAttachmentId == null ? Codegen.empty() : this.transitGatewayAttachmentId;
    }

    /**
     * Identifier of EC2 Transit Gateway Route Table.
     * 
     */
    @Import(name="transitGatewayRouteTableId")
      private final @Nullable Output<String> transitGatewayRouteTableId;

    public Output<String> transitGatewayRouteTableId() {
        return this.transitGatewayRouteTableId == null ? Codegen.empty() : this.transitGatewayRouteTableId;
    }

    public PrefixListReferenceState(
        @Nullable Output<Boolean> blackhole,
        @Nullable Output<String> prefixListId,
        @Nullable Output<String> prefixListOwnerId,
        @Nullable Output<String> transitGatewayAttachmentId,
        @Nullable Output<String> transitGatewayRouteTableId) {
        this.blackhole = blackhole;
        this.prefixListId = prefixListId;
        this.prefixListOwnerId = prefixListOwnerId;
        this.transitGatewayAttachmentId = transitGatewayAttachmentId;
        this.transitGatewayRouteTableId = transitGatewayRouteTableId;
    }

    private PrefixListReferenceState() {
        this.blackhole = Codegen.empty();
        this.prefixListId = Codegen.empty();
        this.prefixListOwnerId = Codegen.empty();
        this.transitGatewayAttachmentId = Codegen.empty();
        this.transitGatewayRouteTableId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrefixListReferenceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> blackhole;
        private @Nullable Output<String> prefixListId;
        private @Nullable Output<String> prefixListOwnerId;
        private @Nullable Output<String> transitGatewayAttachmentId;
        private @Nullable Output<String> transitGatewayRouteTableId;

        public Builder() {
    	      // Empty
        }

        public Builder(PrefixListReferenceState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blackhole = defaults.blackhole;
    	      this.prefixListId = defaults.prefixListId;
    	      this.prefixListOwnerId = defaults.prefixListOwnerId;
    	      this.transitGatewayAttachmentId = defaults.transitGatewayAttachmentId;
    	      this.transitGatewayRouteTableId = defaults.transitGatewayRouteTableId;
        }

        public Builder blackhole(@Nullable Output<Boolean> blackhole) {
            this.blackhole = blackhole;
            return this;
        }
        public Builder blackhole(@Nullable Boolean blackhole) {
            this.blackhole = Codegen.ofNullable(blackhole);
            return this;
        }
        public Builder prefixListId(@Nullable Output<String> prefixListId) {
            this.prefixListId = prefixListId;
            return this;
        }
        public Builder prefixListId(@Nullable String prefixListId) {
            this.prefixListId = Codegen.ofNullable(prefixListId);
            return this;
        }
        public Builder prefixListOwnerId(@Nullable Output<String> prefixListOwnerId) {
            this.prefixListOwnerId = prefixListOwnerId;
            return this;
        }
        public Builder prefixListOwnerId(@Nullable String prefixListOwnerId) {
            this.prefixListOwnerId = Codegen.ofNullable(prefixListOwnerId);
            return this;
        }
        public Builder transitGatewayAttachmentId(@Nullable Output<String> transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }
        public Builder transitGatewayAttachmentId(@Nullable String transitGatewayAttachmentId) {
            this.transitGatewayAttachmentId = Codegen.ofNullable(transitGatewayAttachmentId);
            return this;
        }
        public Builder transitGatewayRouteTableId(@Nullable Output<String> transitGatewayRouteTableId) {
            this.transitGatewayRouteTableId = transitGatewayRouteTableId;
            return this;
        }
        public Builder transitGatewayRouteTableId(@Nullable String transitGatewayRouteTableId) {
            this.transitGatewayRouteTableId = Codegen.ofNullable(transitGatewayRouteTableId);
            return this;
        }        public PrefixListReferenceState build() {
            return new PrefixListReferenceState(blackhole, prefixListId, prefixListOwnerId, transitGatewayAttachmentId, transitGatewayRouteTableId);
        }
    }
}
