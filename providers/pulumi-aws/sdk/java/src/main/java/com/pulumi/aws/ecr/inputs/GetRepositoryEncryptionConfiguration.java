// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetRepositoryEncryptionConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final GetRepositoryEncryptionConfiguration Empty = new GetRepositoryEncryptionConfiguration();

    /**
     * The encryption type to use for the repository, either `AES256` or `KMS`.
     * 
     */
    @Import(name="encryptionType", required=true)
    private String encryptionType;

    /**
     * @return The encryption type to use for the repository, either `AES256` or `KMS`.
     * 
     */
    public String encryptionType() {
        return this.encryptionType;
    }

    /**
     * If `encryption_type` is `KMS`, the ARN of the KMS key used.
     * 
     */
    @Import(name="kmsKey", required=true)
    private String kmsKey;

    /**
     * @return If `encryption_type` is `KMS`, the ARN of the KMS key used.
     * 
     */
    public String kmsKey() {
        return this.kmsKey;
    }

    private GetRepositoryEncryptionConfiguration() {}

    private GetRepositoryEncryptionConfiguration(GetRepositoryEncryptionConfiguration $) {
        this.encryptionType = $.encryptionType;
        this.kmsKey = $.kmsKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepositoryEncryptionConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepositoryEncryptionConfiguration $;

        public Builder() {
            $ = new GetRepositoryEncryptionConfiguration();
        }

        public Builder(GetRepositoryEncryptionConfiguration defaults) {
            $ = new GetRepositoryEncryptionConfiguration(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptionType The encryption type to use for the repository, either `AES256` or `KMS`.
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(String encryptionType) {
            $.encryptionType = encryptionType;
            return this;
        }

        /**
         * @param kmsKey If `encryption_type` is `KMS`, the ARN of the KMS key used.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(String kmsKey) {
            $.kmsKey = kmsKey;
            return this;
        }

        public GetRepositoryEncryptionConfiguration build() {
            $.encryptionType = Objects.requireNonNull($.encryptionType, "expected parameter 'encryptionType' to be non-null");
            $.kmsKey = Objects.requireNonNull($.kmsKey, "expected parameter 'kmsKey' to be non-null");
            return $;
        }
    }

}
