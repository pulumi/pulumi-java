// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.storagegateway.inputs;

import com.pulumi.aws.storagegateway.inputs.FileSystemAssociationCacheAttributesGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FileSystemAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final FileSystemAssociationState Empty = new FileSystemAssociationState();

    /**
     * Amazon Resource Name (ARN) of the newly created file system association.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The Amazon Resource Name (ARN) of the storage used for the audit logs.
     * 
     */
    @Import(name="auditDestinationArn")
    private @Nullable Output<String> auditDestinationArn;

    public Optional<Output<String>> auditDestinationArn() {
        return Optional.ofNullable(this.auditDestinationArn);
    }

    /**
     * Refresh cache information. see Cache Attributes for more details.
     * 
     */
    @Import(name="cacheAttributes")
    private @Nullable Output<FileSystemAssociationCacheAttributesGetArgs> cacheAttributes;

    public Optional<Output<FileSystemAssociationCacheAttributesGetArgs>> cacheAttributes() {
        return Optional.ofNullable(this.cacheAttributes);
    }

    /**
     * The Amazon Resource Name (ARN) of the gateway.
     * 
     */
    @Import(name="gatewayArn")
    private @Nullable Output<String> gatewayArn;

    public Optional<Output<String>> gatewayArn() {
        return Optional.ofNullable(this.gatewayArn);
    }

    /**
     * The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
     * 
     */
    @Import(name="locationArn")
    private @Nullable Output<String> locationArn;

    public Optional<Output<String>> locationArn() {
        return Optional.ofNullable(this.locationArn);
    }

    /**
     * The password of the user credential.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private FileSystemAssociationState() {}

    private FileSystemAssociationState(FileSystemAssociationState $) {
        this.arn = $.arn;
        this.auditDestinationArn = $.auditDestinationArn;
        this.cacheAttributes = $.cacheAttributes;
        this.gatewayArn = $.gatewayArn;
        this.locationArn = $.locationArn;
        this.password = $.password;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileSystemAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileSystemAssociationState $;

        public Builder() {
            $ = new FileSystemAssociationState();
        }

        public Builder(FileSystemAssociationState defaults) {
            $ = new FileSystemAssociationState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder auditDestinationArn(@Nullable Output<String> auditDestinationArn) {
            $.auditDestinationArn = auditDestinationArn;
            return this;
        }

        public Builder auditDestinationArn(String auditDestinationArn) {
            return auditDestinationArn(Output.of(auditDestinationArn));
        }

        public Builder cacheAttributes(@Nullable Output<FileSystemAssociationCacheAttributesGetArgs> cacheAttributes) {
            $.cacheAttributes = cacheAttributes;
            return this;
        }

        public Builder cacheAttributes(FileSystemAssociationCacheAttributesGetArgs cacheAttributes) {
            return cacheAttributes(Output.of(cacheAttributes));
        }

        public Builder gatewayArn(@Nullable Output<String> gatewayArn) {
            $.gatewayArn = gatewayArn;
            return this;
        }

        public Builder gatewayArn(String gatewayArn) {
            return gatewayArn(Output.of(gatewayArn));
        }

        public Builder locationArn(@Nullable Output<String> locationArn) {
            $.locationArn = locationArn;
            return this;
        }

        public Builder locationArn(String locationArn) {
            return locationArn(Output.of(locationArn));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public FileSystemAssociationState build() {
            return $;
        }
    }

}
