// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigatewayv2.inputs;

import com.pulumi.aws.apigatewayv2.inputs.DomainNameDomainNameConfigurationGetArgs;
import com.pulumi.aws.apigatewayv2.inputs.DomainNameMutualTlsAuthenticationGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainNameState extends com.pulumi.resources.ResourceArgs {

    public static final DomainNameState Empty = new DomainNameState();

    /**
     * The [API mapping selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-mapping-selection-expressions) for the domain name.
     * 
     */
    @Import(name="apiMappingSelectionExpression")
      private final @Nullable Output<String> apiMappingSelectionExpression;

    public Output<String> apiMappingSelectionExpression() {
        return this.apiMappingSelectionExpression == null ? Codegen.empty() : this.apiMappingSelectionExpression;
    }

    /**
     * The ARN of the domain name.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The domain name. Must be between 1 and 512 characters in length.
     * 
     */
    @Import(name="domainName")
      private final @Nullable Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName == null ? Codegen.empty() : this.domainName;
    }

    /**
     * The domain name configuration.
     * 
     */
    @Import(name="domainNameConfiguration")
      private final @Nullable Output<DomainNameDomainNameConfigurationGetArgs> domainNameConfiguration;

    public Output<DomainNameDomainNameConfigurationGetArgs> domainNameConfiguration() {
        return this.domainNameConfiguration == null ? Codegen.empty() : this.domainNameConfiguration;
    }

    /**
     * The mutual TLS authentication configuration for the domain name.
     * 
     */
    @Import(name="mutualTlsAuthentication")
      private final @Nullable Output<DomainNameMutualTlsAuthenticationGetArgs> mutualTlsAuthentication;

    public Output<DomainNameMutualTlsAuthenticationGetArgs> mutualTlsAuthentication() {
        return this.mutualTlsAuthentication == null ? Codegen.empty() : this.mutualTlsAuthentication;
    }

    /**
     * A map of tags to assign to the domain name. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    public DomainNameState(
        @Nullable Output<String> apiMappingSelectionExpression,
        @Nullable Output<String> arn,
        @Nullable Output<String> domainName,
        @Nullable Output<DomainNameDomainNameConfigurationGetArgs> domainNameConfiguration,
        @Nullable Output<DomainNameMutualTlsAuthenticationGetArgs> mutualTlsAuthentication,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.apiMappingSelectionExpression = apiMappingSelectionExpression;
        this.arn = arn;
        this.domainName = domainName;
        this.domainNameConfiguration = domainNameConfiguration;
        this.mutualTlsAuthentication = mutualTlsAuthentication;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private DomainNameState() {
        this.apiMappingSelectionExpression = Codegen.empty();
        this.arn = Codegen.empty();
        this.domainName = Codegen.empty();
        this.domainNameConfiguration = Codegen.empty();
        this.mutualTlsAuthentication = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainNameState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> apiMappingSelectionExpression;
        private @Nullable Output<String> arn;
        private @Nullable Output<String> domainName;
        private @Nullable Output<DomainNameDomainNameConfigurationGetArgs> domainNameConfiguration;
        private @Nullable Output<DomainNameMutualTlsAuthenticationGetArgs> mutualTlsAuthentication;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainNameState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiMappingSelectionExpression = defaults.apiMappingSelectionExpression;
    	      this.arn = defaults.arn;
    	      this.domainName = defaults.domainName;
    	      this.domainNameConfiguration = defaults.domainNameConfiguration;
    	      this.mutualTlsAuthentication = defaults.mutualTlsAuthentication;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder apiMappingSelectionExpression(@Nullable Output<String> apiMappingSelectionExpression) {
            this.apiMappingSelectionExpression = apiMappingSelectionExpression;
            return this;
        }
        public Builder apiMappingSelectionExpression(@Nullable String apiMappingSelectionExpression) {
            this.apiMappingSelectionExpression = Codegen.ofNullable(apiMappingSelectionExpression);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder domainName(@Nullable Output<String> domainName) {
            this.domainName = domainName;
            return this;
        }
        public Builder domainName(@Nullable String domainName) {
            this.domainName = Codegen.ofNullable(domainName);
            return this;
        }
        public Builder domainNameConfiguration(@Nullable Output<DomainNameDomainNameConfigurationGetArgs> domainNameConfiguration) {
            this.domainNameConfiguration = domainNameConfiguration;
            return this;
        }
        public Builder domainNameConfiguration(@Nullable DomainNameDomainNameConfigurationGetArgs domainNameConfiguration) {
            this.domainNameConfiguration = Codegen.ofNullable(domainNameConfiguration);
            return this;
        }
        public Builder mutualTlsAuthentication(@Nullable Output<DomainNameMutualTlsAuthenticationGetArgs> mutualTlsAuthentication) {
            this.mutualTlsAuthentication = mutualTlsAuthentication;
            return this;
        }
        public Builder mutualTlsAuthentication(@Nullable DomainNameMutualTlsAuthenticationGetArgs mutualTlsAuthentication) {
            this.mutualTlsAuthentication = Codegen.ofNullable(mutualTlsAuthentication);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }        public DomainNameState build() {
            return new DomainNameState(apiMappingSelectionExpression, arn, domainName, domainNameConfiguration, mutualTlsAuthentication, tags, tagsAll);
        }
    }
}
