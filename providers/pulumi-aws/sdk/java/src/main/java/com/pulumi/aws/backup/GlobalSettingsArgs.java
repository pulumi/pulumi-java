// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.backup;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class GlobalSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalSettingsArgs Empty = new GlobalSettingsArgs();

    /**
     * A list of resources along with the opt-in preferences for the account.
     * 
     */
    @Import(name="globalSettings", required=true)
      private final Output<Map<String,String>> globalSettings;

    public Output<Map<String,String>> globalSettings() {
        return this.globalSettings;
    }

    public GlobalSettingsArgs(Output<Map<String,String>> globalSettings) {
        this.globalSettings = Objects.requireNonNull(globalSettings, "expected parameter 'globalSettings' to be non-null");
    }

    private GlobalSettingsArgs() {
        this.globalSettings = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GlobalSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Map<String,String>> globalSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(GlobalSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.globalSettings = defaults.globalSettings;
        }

        public Builder globalSettings(Output<Map<String,String>> globalSettings) {
            this.globalSettings = Objects.requireNonNull(globalSettings);
            return this;
        }
        public Builder globalSettings(Map<String,String> globalSettings) {
            this.globalSettings = Output.of(Objects.requireNonNull(globalSettings));
            return this;
        }        public GlobalSettingsArgs build() {
            return new GlobalSettingsArgs(globalSettings);
        }
    }
}
