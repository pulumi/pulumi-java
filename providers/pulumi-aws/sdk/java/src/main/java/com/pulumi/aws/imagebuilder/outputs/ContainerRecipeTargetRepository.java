// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ContainerRecipeTargetRepository {
    /**
     * @return The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
     * 
     */
    private final String repositoryName;
    /**
     * @return The service in which this image is registered. Valid values: `ECR`.
     * 
     */
    private final String service;

    @CustomType.Constructor
    private ContainerRecipeTargetRepository(
        @CustomType.Parameter("repositoryName") String repositoryName,
        @CustomType.Parameter("service") String service) {
        this.repositoryName = repositoryName;
        this.service = service;
    }

    /**
     * @return The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
     * 
     */
    public String repositoryName() {
        return this.repositoryName;
    }
    /**
     * @return The service in which this image is registered. Valid values: `ECR`.
     * 
     */
    public String service() {
        return this.service;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerRecipeTargetRepository defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String repositoryName;
        private String service;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerRecipeTargetRepository defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.repositoryName = defaults.repositoryName;
    	      this.service = defaults.service;
        }

        public Builder repositoryName(String repositoryName) {
            this.repositoryName = Objects.requireNonNull(repositoryName);
            return this;
        }
        public Builder service(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }        public ContainerRecipeTargetRepository build() {
            return new ContainerRecipeTargetRepository(repositoryName, service);
        }
    }
}
