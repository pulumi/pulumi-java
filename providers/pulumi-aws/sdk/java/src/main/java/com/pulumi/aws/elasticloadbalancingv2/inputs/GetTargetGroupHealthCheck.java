// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticloadbalancingv2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetTargetGroupHealthCheck extends com.pulumi.resources.InvokeArgs {

    public static final GetTargetGroupHealthCheck Empty = new GetTargetGroupHealthCheck();

    @Import(name="enabled", required=true)
    private Boolean enabled;

    public Boolean enabled() {
        return this.enabled;
    }

    @Import(name="healthyThreshold", required=true)
    private Integer healthyThreshold;

    public Integer healthyThreshold() {
        return this.healthyThreshold;
    }

    @Import(name="interval", required=true)
    private Integer interval;

    public Integer interval() {
        return this.interval;
    }

    @Import(name="matcher", required=true)
    private String matcher;

    public String matcher() {
        return this.matcher;
    }

    @Import(name="path", required=true)
    private String path;

    public String path() {
        return this.path;
    }

    @Import(name="port", required=true)
    private String port;

    public String port() {
        return this.port;
    }

    @Import(name="protocol", required=true)
    private String protocol;

    public String protocol() {
        return this.protocol;
    }

    @Import(name="timeout", required=true)
    private Integer timeout;

    public Integer timeout() {
        return this.timeout;
    }

    @Import(name="unhealthyThreshold", required=true)
    private Integer unhealthyThreshold;

    public Integer unhealthyThreshold() {
        return this.unhealthyThreshold;
    }

    private GetTargetGroupHealthCheck() {}

    private GetTargetGroupHealthCheck(GetTargetGroupHealthCheck $) {
        this.enabled = $.enabled;
        this.healthyThreshold = $.healthyThreshold;
        this.interval = $.interval;
        this.matcher = $.matcher;
        this.path = $.path;
        this.port = $.port;
        this.protocol = $.protocol;
        this.timeout = $.timeout;
        this.unhealthyThreshold = $.unhealthyThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTargetGroupHealthCheck defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTargetGroupHealthCheck $;

        public Builder() {
            $ = new GetTargetGroupHealthCheck();
        }

        public Builder(GetTargetGroupHealthCheck defaults) {
            $ = new GetTargetGroupHealthCheck(Objects.requireNonNull(defaults));
        }

        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder healthyThreshold(Integer healthyThreshold) {
            $.healthyThreshold = healthyThreshold;
            return this;
        }

        public Builder interval(Integer interval) {
            $.interval = interval;
            return this;
        }

        public Builder matcher(String matcher) {
            $.matcher = matcher;
            return this;
        }

        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public Builder port(String port) {
            $.port = port;
            return this;
        }

        public Builder protocol(String protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder timeout(Integer timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder unhealthyThreshold(Integer unhealthyThreshold) {
            $.unhealthyThreshold = unhealthyThreshold;
            return this;
        }

        public GetTargetGroupHealthCheck build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.healthyThreshold = Objects.requireNonNull($.healthyThreshold, "expected parameter 'healthyThreshold' to be non-null");
            $.interval = Objects.requireNonNull($.interval, "expected parameter 'interval' to be non-null");
            $.matcher = Objects.requireNonNull($.matcher, "expected parameter 'matcher' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            $.protocol = Objects.requireNonNull($.protocol, "expected parameter 'protocol' to be non-null");
            $.timeout = Objects.requireNonNull($.timeout, "expected parameter 'timeout' to be non-null");
            $.unhealthyThreshold = Objects.requireNonNull($.unhealthyThreshold, "expected parameter 'unhealthyThreshold' to be non-null");
            return $;
        }
    }

}
