// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetDomainVpcOption extends com.pulumi.resources.InvokeArgs {

    public static final GetDomainVpcOption Empty = new GetDomainVpcOption();

    /**
     * The availability zones used by the domain.
     * 
     */
    @Import(name="availabilityZones", required=true)
    private List<String> availabilityZones;

    public List<String> availabilityZones() {
        return this.availabilityZones;
    }

    /**
     * The security groups used by the domain.
     * 
     */
    @Import(name="securityGroupIds", required=true)
    private List<String> securityGroupIds;

    public List<String> securityGroupIds() {
        return this.securityGroupIds;
    }

    /**
     * The subnets used by the domain.
     * 
     */
    @Import(name="subnetIds", required=true)
    private List<String> subnetIds;

    public List<String> subnetIds() {
        return this.subnetIds;
    }

    /**
     * The VPC used by the domain.
     * 
     */
    @Import(name="vpcId", required=true)
    private String vpcId;

    public String vpcId() {
        return this.vpcId;
    }

    private GetDomainVpcOption() {}

    private GetDomainVpcOption(GetDomainVpcOption $) {
        this.availabilityZones = $.availabilityZones;
        this.securityGroupIds = $.securityGroupIds;
        this.subnetIds = $.subnetIds;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDomainVpcOption defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDomainVpcOption $;

        public Builder() {
            $ = new GetDomainVpcOption();
        }

        public Builder(GetDomainVpcOption defaults) {
            $ = new GetDomainVpcOption(Objects.requireNonNull(defaults));
        }

        public Builder availabilityZones(List<String> availabilityZones) {
            $.availabilityZones = availabilityZones;
            return this;
        }

        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder subnetIds(List<String> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public Builder vpcId(String vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public GetDomainVpcOption build() {
            $.availabilityZones = Objects.requireNonNull($.availabilityZones, "expected parameter 'availabilityZones' to be non-null");
            $.securityGroupIds = Objects.requireNonNull($.securityGroupIds, "expected parameter 'securityGroupIds' to be non-null");
            $.subnetIds = Objects.requireNonNull($.subnetIds, "expected parameter 'subnetIds' to be non-null");
            $.vpcId = Objects.requireNonNull($.vpcId, "expected parameter 'vpcId' to be non-null");
            return $;
        }
    }

}
