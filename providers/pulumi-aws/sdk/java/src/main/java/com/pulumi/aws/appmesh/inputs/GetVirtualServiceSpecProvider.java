// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.GetVirtualServiceSpecProviderVirtualNode;
import com.pulumi.aws.appmesh.inputs.GetVirtualServiceSpecProviderVirtualRouter;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class GetVirtualServiceSpecProvider extends com.pulumi.resources.InvokeArgs {

    public static final GetVirtualServiceSpecProvider Empty = new GetVirtualServiceSpecProvider();

    /**
     * The virtual node associated with the virtual service.
     * 
     */
    @Import(name="virtualNodes", required=true)
    private List<GetVirtualServiceSpecProviderVirtualNode> virtualNodes;

    public List<GetVirtualServiceSpecProviderVirtualNode> virtualNodes() {
        return this.virtualNodes;
    }

    /**
     * The virtual router associated with the virtual service.
     * 
     */
    @Import(name="virtualRouters", required=true)
    private List<GetVirtualServiceSpecProviderVirtualRouter> virtualRouters;

    public List<GetVirtualServiceSpecProviderVirtualRouter> virtualRouters() {
        return this.virtualRouters;
    }

    private GetVirtualServiceSpecProvider() {}

    private GetVirtualServiceSpecProvider(GetVirtualServiceSpecProvider $) {
        this.virtualNodes = $.virtualNodes;
        this.virtualRouters = $.virtualRouters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVirtualServiceSpecProvider defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVirtualServiceSpecProvider $;

        public Builder() {
            $ = new GetVirtualServiceSpecProvider();
        }

        public Builder(GetVirtualServiceSpecProvider defaults) {
            $ = new GetVirtualServiceSpecProvider(Objects.requireNonNull(defaults));
        }

        public Builder virtualNodes(List<GetVirtualServiceSpecProviderVirtualNode> virtualNodes) {
            $.virtualNodes = virtualNodes;
            return this;
        }

        public Builder virtualNodes(GetVirtualServiceSpecProviderVirtualNode... virtualNodes) {
            return virtualNodes(List.of(virtualNodes));
        }

        public Builder virtualRouters(List<GetVirtualServiceSpecProviderVirtualRouter> virtualRouters) {
            $.virtualRouters = virtualRouters;
            return this;
        }

        public Builder virtualRouters(GetVirtualServiceSpecProviderVirtualRouter... virtualRouters) {
            return virtualRouters(List.of(virtualRouters));
        }

        public GetVirtualServiceSpecProvider build() {
            $.virtualNodes = Objects.requireNonNull($.virtualNodes, "expected parameter 'virtualNodes' to be non-null");
            $.virtualRouters = Objects.requireNonNull($.virtualRouters, "expected parameter 'virtualRouters' to be non-null");
            return $;
        }
    }

}
