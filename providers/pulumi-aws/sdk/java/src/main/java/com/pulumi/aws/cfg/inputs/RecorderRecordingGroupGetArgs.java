// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cfg.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecorderRecordingGroupGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecorderRecordingGroupGetArgs Empty = new RecorderRecordingGroupGetArgs();

    /**
     * Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resource_types`. Defaults to `true`.
     * 
     */
    @Import(name="allSupported")
    private @Nullable Output<Boolean> allSupported;

    public Optional<Output<Boolean>> allSupported() {
        return Optional.ofNullable(this.allSupported);
    }

    /**
     * Specifies whether AWS Config includes all supported types of *global resources* with the resources that it records. Requires `all_supported = true`. Conflicts with `resource_types`.
     * 
     */
    @Import(name="includeGlobalResourceTypes")
    private @Nullable Output<Boolean> includeGlobalResourceTypes;

    public Optional<Output<Boolean>> includeGlobalResourceTypes() {
        return Optional.ofNullable(this.includeGlobalResourceTypes);
    }

    /**
     * A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `all_supported` must be set to false.
     * 
     */
    @Import(name="resourceTypes")
    private @Nullable Output<List<String>> resourceTypes;

    public Optional<Output<List<String>>> resourceTypes() {
        return Optional.ofNullable(this.resourceTypes);
    }

    private RecorderRecordingGroupGetArgs() {}

    private RecorderRecordingGroupGetArgs(RecorderRecordingGroupGetArgs $) {
        this.allSupported = $.allSupported;
        this.includeGlobalResourceTypes = $.includeGlobalResourceTypes;
        this.resourceTypes = $.resourceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecorderRecordingGroupGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecorderRecordingGroupGetArgs $;

        public Builder() {
            $ = new RecorderRecordingGroupGetArgs();
        }

        public Builder(RecorderRecordingGroupGetArgs defaults) {
            $ = new RecorderRecordingGroupGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder allSupported(@Nullable Output<Boolean> allSupported) {
            $.allSupported = allSupported;
            return this;
        }

        public Builder allSupported(Boolean allSupported) {
            return allSupported(Output.of(allSupported));
        }

        public Builder includeGlobalResourceTypes(@Nullable Output<Boolean> includeGlobalResourceTypes) {
            $.includeGlobalResourceTypes = includeGlobalResourceTypes;
            return this;
        }

        public Builder includeGlobalResourceTypes(Boolean includeGlobalResourceTypes) {
            return includeGlobalResourceTypes(Output.of(includeGlobalResourceTypes));
        }

        public Builder resourceTypes(@Nullable Output<List<String>> resourceTypes) {
            $.resourceTypes = resourceTypes;
            return this;
        }

        public Builder resourceTypes(List<String> resourceTypes) {
            return resourceTypes(Output.of(resourceTypes));
        }

        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }

        public RecorderRecordingGroupGetArgs build() {
            return $;
        }
    }

}
