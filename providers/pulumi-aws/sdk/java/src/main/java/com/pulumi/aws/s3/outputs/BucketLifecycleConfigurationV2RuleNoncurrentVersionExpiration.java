// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration {
    /**
     * @return The number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
     * 
     */
    private final @Nullable String newerNoncurrentVersions;
    /**
     * @return The number of days an object is noncurrent before Amazon S3 can perform the associated action. Must be a positive integer.
     * 
     */
    private final @Nullable Integer noncurrentDays;

    @CustomType.Constructor
    private BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration(
        @CustomType.Parameter("newerNoncurrentVersions") @Nullable String newerNoncurrentVersions,
        @CustomType.Parameter("noncurrentDays") @Nullable Integer noncurrentDays) {
        this.newerNoncurrentVersions = newerNoncurrentVersions;
        this.noncurrentDays = noncurrentDays;
    }

    /**
     * @return The number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
     * 
     */
    public Optional<String> newerNoncurrentVersions() {
        return Optional.ofNullable(this.newerNoncurrentVersions);
    }
    /**
     * @return The number of days an object is noncurrent before Amazon S3 can perform the associated action. Must be a positive integer.
     * 
     */
    public Optional<Integer> noncurrentDays() {
        return Optional.ofNullable(this.noncurrentDays);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String newerNoncurrentVersions;
        private @Nullable Integer noncurrentDays;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.newerNoncurrentVersions = defaults.newerNoncurrentVersions;
    	      this.noncurrentDays = defaults.noncurrentDays;
        }

        public Builder newerNoncurrentVersions(@Nullable String newerNoncurrentVersions) {
            this.newerNoncurrentVersions = newerNoncurrentVersions;
            return this;
        }
        public Builder noncurrentDays(@Nullable Integer noncurrentDays) {
            this.noncurrentDays = noncurrentDays;
            return this;
        }        public BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration build() {
            return new BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration(newerNoncurrentVersions, noncurrentDays);
        }
    }
}
