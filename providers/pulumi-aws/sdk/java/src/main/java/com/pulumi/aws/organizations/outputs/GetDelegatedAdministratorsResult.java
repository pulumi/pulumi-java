// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.organizations.outputs;

import com.pulumi.aws.organizations.outputs.GetDelegatedAdministratorsDelegatedAdministrator;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDelegatedAdministratorsResult {
    /**
     * @return The list of delegated administrators in your organization, which have the following attributes:
     * 
     */
    private final List<GetDelegatedAdministratorsDelegatedAdministrator> delegatedAdministrators;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable String servicePrincipal;

    @CustomType.Constructor
    private GetDelegatedAdministratorsResult(
        @CustomType.Parameter("delegatedAdministrators") List<GetDelegatedAdministratorsDelegatedAdministrator> delegatedAdministrators,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("servicePrincipal") @Nullable String servicePrincipal) {
        this.delegatedAdministrators = delegatedAdministrators;
        this.id = id;
        this.servicePrincipal = servicePrincipal;
    }

    /**
     * @return The list of delegated administrators in your organization, which have the following attributes:
     * 
     */
    public List<GetDelegatedAdministratorsDelegatedAdministrator> delegatedAdministrators() {
        return this.delegatedAdministrators;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> servicePrincipal() {
        return Optional.ofNullable(this.servicePrincipal);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDelegatedAdministratorsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetDelegatedAdministratorsDelegatedAdministrator> delegatedAdministrators;
        private String id;
        private @Nullable String servicePrincipal;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDelegatedAdministratorsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delegatedAdministrators = defaults.delegatedAdministrators;
    	      this.id = defaults.id;
    	      this.servicePrincipal = defaults.servicePrincipal;
        }

        public Builder delegatedAdministrators(List<GetDelegatedAdministratorsDelegatedAdministrator> delegatedAdministrators) {
            this.delegatedAdministrators = Objects.requireNonNull(delegatedAdministrators);
            return this;
        }
        public Builder delegatedAdministrators(GetDelegatedAdministratorsDelegatedAdministrator... delegatedAdministrators) {
            return delegatedAdministrators(List.of(delegatedAdministrators));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder servicePrincipal(@Nullable String servicePrincipal) {
            this.servicePrincipal = servicePrincipal;
            return this;
        }        public GetDelegatedAdministratorsResult build() {
            return new GetDelegatedAdministratorsResult(delegatedAdministrators, id, servicePrincipal);
        }
    }
}
