// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.inputs;

import com.pulumi.aws.networkfirewall.inputs.LoggingConfigurationLoggingConfigurationLogDestinationConfigGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class LoggingConfigurationLoggingConfigurationGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggingConfigurationLoggingConfigurationGetArgs Empty = new LoggingConfigurationLoggingConfigurationGetArgs();

    /**
     * Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for `FLOW` logs and one for `ALERT` logs.
     * 
     */
    @Import(name="logDestinationConfigs", required=true)
    private Output<List<LoggingConfigurationLoggingConfigurationLogDestinationConfigGetArgs>> logDestinationConfigs;

    /**
     * @return Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for `FLOW` logs and one for `ALERT` logs.
     * 
     */
    public Output<List<LoggingConfigurationLoggingConfigurationLogDestinationConfigGetArgs>> logDestinationConfigs() {
        return this.logDestinationConfigs;
    }

    private LoggingConfigurationLoggingConfigurationGetArgs() {}

    private LoggingConfigurationLoggingConfigurationGetArgs(LoggingConfigurationLoggingConfigurationGetArgs $) {
        this.logDestinationConfigs = $.logDestinationConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingConfigurationLoggingConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingConfigurationLoggingConfigurationGetArgs $;

        public Builder() {
            $ = new LoggingConfigurationLoggingConfigurationGetArgs();
        }

        public Builder(LoggingConfigurationLoggingConfigurationGetArgs defaults) {
            $ = new LoggingConfigurationLoggingConfigurationGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logDestinationConfigs Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for `FLOW` logs and one for `ALERT` logs.
         * 
         * @return builder
         * 
         */
        public Builder logDestinationConfigs(Output<List<LoggingConfigurationLoggingConfigurationLogDestinationConfigGetArgs>> logDestinationConfigs) {
            $.logDestinationConfigs = logDestinationConfigs;
            return this;
        }

        /**
         * @param logDestinationConfigs Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for `FLOW` logs and one for `ALERT` logs.
         * 
         * @return builder
         * 
         */
        public Builder logDestinationConfigs(List<LoggingConfigurationLoggingConfigurationLogDestinationConfigGetArgs> logDestinationConfigs) {
            return logDestinationConfigs(Output.of(logDestinationConfigs));
        }

        /**
         * @param logDestinationConfigs Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for `FLOW` logs and one for `ALERT` logs.
         * 
         * @return builder
         * 
         */
        public Builder logDestinationConfigs(LoggingConfigurationLoggingConfigurationLogDestinationConfigGetArgs... logDestinationConfigs) {
            return logDestinationConfigs(List.of(logDestinationConfigs));
        }

        public LoggingConfigurationLoggingConfigurationGetArgs build() {
            $.logDestinationConfigs = Objects.requireNonNull($.logDestinationConfigs, "expected parameter 'logDestinationConfigs' to be non-null");
            return $;
        }
    }

}
