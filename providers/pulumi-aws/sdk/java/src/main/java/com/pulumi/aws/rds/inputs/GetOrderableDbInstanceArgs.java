// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.rds.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetOrderableDbInstanceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrderableDbInstanceArgs Empty = new GetOrderableDbInstanceArgs();

    /**
     * Availability zone group.
     * 
     */
    @Import(name="availabilityZoneGroup")
    private Output</* @Nullable */ String> availabilityZoneGroup;

    /**
     * @return Availability zone group.
     * 
     */
    public Output</* @Nullable */ String> availabilityZoneGroup() {
        return this.availabilityZoneGroup;
    }

    /**
     * DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.
     * 
     */
    @Import(name="engine", required=true)
    private Output<String> engine;

    /**
     * @return DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.
     * 
     */
    public Output<String> engine() {
        return this.engine;
    }

    /**
     * Version of the DB engine. If none is provided, the AWS-defined default version will be used.
     * 
     */
    @Import(name="engineVersion")
    private Output</* @Nullable */ String> engineVersion;

    /**
     * @return Version of the DB engine. If none is provided, the AWS-defined default version will be used.
     * 
     */
    public Output</* @Nullable */ String> engineVersion() {
        return this.engineVersion;
    }

    /**
     * DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.
     * 
     */
    @Import(name="instanceClass")
    private Output</* @Nullable */ String> instanceClass;

    /**
     * @return DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.
     * 
     */
    public Output</* @Nullable */ String> instanceClass() {
        return this.instanceClass;
    }

    /**
     * License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.
     * 
     */
    @Import(name="licenseModel")
    private Output</* @Nullable */ String> licenseModel;

    /**
     * @return License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.
     * 
     */
    public Output</* @Nullable */ String> licenseModel() {
        return this.licenseModel;
    }

    /**
     * Ordered list of preferred RDS DB instance engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    @Import(name="preferredEngineVersions")
    private Output</* @Nullable */ List<String>> preferredEngineVersions;

    /**
     * @return Ordered list of preferred RDS DB instance engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    public Output</* @Nullable */ List<String>> preferredEngineVersions() {
        return this.preferredEngineVersions;
    }

    /**
     * Ordered list of preferred RDS DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    @Import(name="preferredInstanceClasses")
    private Output</* @Nullable */ List<String>> preferredInstanceClasses;

    /**
     * @return Ordered list of preferred RDS DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    public Output</* @Nullable */ List<String>> preferredInstanceClasses() {
        return this.preferredInstanceClasses;
    }

    /**
     * Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.
     * 
     */
    @Import(name="storageType")
    private Output</* @Nullable */ String> storageType;

    /**
     * @return Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.
     * 
     */
    public Output</* @Nullable */ String> storageType() {
        return this.storageType;
    }

    /**
     * Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
     * 
     */
    @Import(name="supportsEnhancedMonitoring")
    private Output</* @Nullable */ Boolean> supportsEnhancedMonitoring;

    /**
     * @return Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
     * 
     */
    public Output</* @Nullable */ Boolean> supportsEnhancedMonitoring() {
        return this.supportsEnhancedMonitoring;
    }

    /**
     * Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.
     * 
     */
    @Import(name="supportsGlobalDatabases")
    private Output</* @Nullable */ Boolean> supportsGlobalDatabases;

    /**
     * @return Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.
     * 
     */
    public Output</* @Nullable */ Boolean> supportsGlobalDatabases() {
        return this.supportsGlobalDatabases;
    }

    /**
     * Enable this to ensure a DB instance supports IAM database authentication.
     * 
     */
    @Import(name="supportsIamDatabaseAuthentication")
    private Output</* @Nullable */ Boolean> supportsIamDatabaseAuthentication;

    /**
     * @return Enable this to ensure a DB instance supports IAM database authentication.
     * 
     */
    public Output</* @Nullable */ Boolean> supportsIamDatabaseAuthentication() {
        return this.supportsIamDatabaseAuthentication;
    }

    /**
     * Enable this to ensure a DB instance supports provisioned IOPS.
     * 
     */
    @Import(name="supportsIops")
    private Output</* @Nullable */ Boolean> supportsIops;

    /**
     * @return Enable this to ensure a DB instance supports provisioned IOPS.
     * 
     */
    public Output</* @Nullable */ Boolean> supportsIops() {
        return this.supportsIops;
    }

    /**
     * Enable this to ensure a DB instance supports Kerberos Authentication.
     * 
     */
    @Import(name="supportsKerberosAuthentication")
    private Output</* @Nullable */ Boolean> supportsKerberosAuthentication;

    /**
     * @return Enable this to ensure a DB instance supports Kerberos Authentication.
     * 
     */
    public Output</* @Nullable */ Boolean> supportsKerberosAuthentication() {
        return this.supportsKerberosAuthentication;
    }

    /**
     * Enable this to ensure a DB instance supports Performance Insights.
     * 
     */
    @Import(name="supportsPerformanceInsights")
    private Output</* @Nullable */ Boolean> supportsPerformanceInsights;

    /**
     * @return Enable this to ensure a DB instance supports Performance Insights.
     * 
     */
    public Output</* @Nullable */ Boolean> supportsPerformanceInsights() {
        return this.supportsPerformanceInsights;
    }

    /**
     * Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.
     * 
     */
    @Import(name="supportsStorageAutoscaling")
    private Output</* @Nullable */ Boolean> supportsStorageAutoscaling;

    /**
     * @return Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.
     * 
     */
    public Output</* @Nullable */ Boolean> supportsStorageAutoscaling() {
        return this.supportsStorageAutoscaling;
    }

    /**
     * Enable this to ensure a DB instance supports encrypted storage.
     * 
     */
    @Import(name="supportsStorageEncryption")
    private Output</* @Nullable */ Boolean> supportsStorageEncryption;

    /**
     * @return Enable this to ensure a DB instance supports encrypted storage.
     * 
     */
    public Output</* @Nullable */ Boolean> supportsStorageEncryption() {
        return this.supportsStorageEncryption;
    }

    /**
     * Boolean that indicates whether to show only VPC or non-VPC offerings.
     * 
     */
    @Import(name="vpc")
    private Output</* @Nullable */ Boolean> vpc;

    /**
     * @return Boolean that indicates whether to show only VPC or non-VPC offerings.
     * 
     */
    public Output</* @Nullable */ Boolean> vpc() {
        return this.vpc;
    }

    private GetOrderableDbInstanceArgs() {}

    private GetOrderableDbInstanceArgs(GetOrderableDbInstanceArgs $) {
        this.availabilityZoneGroup = $.availabilityZoneGroup;
        this.engine = $.engine;
        this.engineVersion = $.engineVersion;
        this.instanceClass = $.instanceClass;
        this.licenseModel = $.licenseModel;
        this.preferredEngineVersions = $.preferredEngineVersions;
        this.preferredInstanceClasses = $.preferredInstanceClasses;
        this.storageType = $.storageType;
        this.supportsEnhancedMonitoring = $.supportsEnhancedMonitoring;
        this.supportsGlobalDatabases = $.supportsGlobalDatabases;
        this.supportsIamDatabaseAuthentication = $.supportsIamDatabaseAuthentication;
        this.supportsIops = $.supportsIops;
        this.supportsKerberosAuthentication = $.supportsKerberosAuthentication;
        this.supportsPerformanceInsights = $.supportsPerformanceInsights;
        this.supportsStorageAutoscaling = $.supportsStorageAutoscaling;
        this.supportsStorageEncryption = $.supportsStorageEncryption;
        this.vpc = $.vpc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrderableDbInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrderableDbInstanceArgs $;

        public Builder() {
            $ = new GetOrderableDbInstanceArgs();
        }

        public Builder(GetOrderableDbInstanceArgs defaults) {
            $ = new GetOrderableDbInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityZoneGroup Availability zone group.
         * 
         * @return builder
         * 
         */
        public Builder availabilityZoneGroup(Output</* @Nullable */ String> availabilityZoneGroup) {
            $.availabilityZoneGroup = availabilityZoneGroup;
            return this;
        }

        /**
         * @param availabilityZoneGroup Availability zone group.
         * 
         * @return builder
         * 
         */
        public Builder availabilityZoneGroup(@Nullable String availabilityZoneGroup) {
            return availabilityZoneGroup(Output.of(availabilityZoneGroup));
        }

        /**
         * @param engine DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.
         * 
         * @return builder
         * 
         */
        public Builder engine(Output<String> engine) {
            $.engine = engine;
            return this;
        }

        /**
         * @param engine DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.
         * 
         * @return builder
         * 
         */
        public Builder engine(String engine) {
            return engine(Output.of(engine));
        }

        /**
         * @param engineVersion Version of the DB engine. If none is provided, the AWS-defined default version will be used.
         * 
         * @return builder
         * 
         */
        public Builder engineVersion(Output</* @Nullable */ String> engineVersion) {
            $.engineVersion = engineVersion;
            return this;
        }

        /**
         * @param engineVersion Version of the DB engine. If none is provided, the AWS-defined default version will be used.
         * 
         * @return builder
         * 
         */
        public Builder engineVersion(@Nullable String engineVersion) {
            return engineVersion(Output.of(engineVersion));
        }

        /**
         * @param instanceClass DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(Output</* @Nullable */ String> instanceClass) {
            $.instanceClass = instanceClass;
            return this;
        }

        /**
         * @param instanceClass DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(@Nullable String instanceClass) {
            return instanceClass(Output.of(instanceClass));
        }

        /**
         * @param licenseModel License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(Output</* @Nullable */ String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(@Nullable String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param preferredEngineVersions Ordered list of preferred RDS DB instance engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder preferredEngineVersions(Output</* @Nullable */ List<String>> preferredEngineVersions) {
            $.preferredEngineVersions = preferredEngineVersions;
            return this;
        }

        /**
         * @param preferredEngineVersions Ordered list of preferred RDS DB instance engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder preferredEngineVersions(@Nullable List<String> preferredEngineVersions) {
            return preferredEngineVersions(Output.of(preferredEngineVersions));
        }

        /**
         * @param preferredEngineVersions Ordered list of preferred RDS DB instance engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder preferredEngineVersions(String... preferredEngineVersions) {
            return preferredEngineVersions(List.of(preferredEngineVersions));
        }

        /**
         * @param preferredInstanceClasses Ordered list of preferred RDS DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder preferredInstanceClasses(Output</* @Nullable */ List<String>> preferredInstanceClasses) {
            $.preferredInstanceClasses = preferredInstanceClasses;
            return this;
        }

        /**
         * @param preferredInstanceClasses Ordered list of preferred RDS DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder preferredInstanceClasses(@Nullable List<String> preferredInstanceClasses) {
            return preferredInstanceClasses(Output.of(preferredInstanceClasses));
        }

        /**
         * @param preferredInstanceClasses Ordered list of preferred RDS DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder preferredInstanceClasses(String... preferredInstanceClasses) {
            return preferredInstanceClasses(List.of(preferredInstanceClasses));
        }

        /**
         * @param storageType Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.
         * 
         * @return builder
         * 
         */
        public Builder storageType(Output</* @Nullable */ String> storageType) {
            $.storageType = storageType;
            return this;
        }

        /**
         * @param storageType Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.
         * 
         * @return builder
         * 
         */
        public Builder storageType(@Nullable String storageType) {
            return storageType(Output.of(storageType));
        }

        /**
         * @param supportsEnhancedMonitoring Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder supportsEnhancedMonitoring(Output</* @Nullable */ Boolean> supportsEnhancedMonitoring) {
            $.supportsEnhancedMonitoring = supportsEnhancedMonitoring;
            return this;
        }

        /**
         * @param supportsEnhancedMonitoring Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
         * 
         * @return builder
         * 
         */
        public Builder supportsEnhancedMonitoring(@Nullable Boolean supportsEnhancedMonitoring) {
            return supportsEnhancedMonitoring(Output.of(supportsEnhancedMonitoring));
        }

        /**
         * @param supportsGlobalDatabases Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.
         * 
         * @return builder
         * 
         */
        public Builder supportsGlobalDatabases(Output</* @Nullable */ Boolean> supportsGlobalDatabases) {
            $.supportsGlobalDatabases = supportsGlobalDatabases;
            return this;
        }

        /**
         * @param supportsGlobalDatabases Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.
         * 
         * @return builder
         * 
         */
        public Builder supportsGlobalDatabases(@Nullable Boolean supportsGlobalDatabases) {
            return supportsGlobalDatabases(Output.of(supportsGlobalDatabases));
        }

        /**
         * @param supportsIamDatabaseAuthentication Enable this to ensure a DB instance supports IAM database authentication.
         * 
         * @return builder
         * 
         */
        public Builder supportsIamDatabaseAuthentication(Output</* @Nullable */ Boolean> supportsIamDatabaseAuthentication) {
            $.supportsIamDatabaseAuthentication = supportsIamDatabaseAuthentication;
            return this;
        }

        /**
         * @param supportsIamDatabaseAuthentication Enable this to ensure a DB instance supports IAM database authentication.
         * 
         * @return builder
         * 
         */
        public Builder supportsIamDatabaseAuthentication(@Nullable Boolean supportsIamDatabaseAuthentication) {
            return supportsIamDatabaseAuthentication(Output.of(supportsIamDatabaseAuthentication));
        }

        /**
         * @param supportsIops Enable this to ensure a DB instance supports provisioned IOPS.
         * 
         * @return builder
         * 
         */
        public Builder supportsIops(Output</* @Nullable */ Boolean> supportsIops) {
            $.supportsIops = supportsIops;
            return this;
        }

        /**
         * @param supportsIops Enable this to ensure a DB instance supports provisioned IOPS.
         * 
         * @return builder
         * 
         */
        public Builder supportsIops(@Nullable Boolean supportsIops) {
            return supportsIops(Output.of(supportsIops));
        }

        /**
         * @param supportsKerberosAuthentication Enable this to ensure a DB instance supports Kerberos Authentication.
         * 
         * @return builder
         * 
         */
        public Builder supportsKerberosAuthentication(Output</* @Nullable */ Boolean> supportsKerberosAuthentication) {
            $.supportsKerberosAuthentication = supportsKerberosAuthentication;
            return this;
        }

        /**
         * @param supportsKerberosAuthentication Enable this to ensure a DB instance supports Kerberos Authentication.
         * 
         * @return builder
         * 
         */
        public Builder supportsKerberosAuthentication(@Nullable Boolean supportsKerberosAuthentication) {
            return supportsKerberosAuthentication(Output.of(supportsKerberosAuthentication));
        }

        /**
         * @param supportsPerformanceInsights Enable this to ensure a DB instance supports Performance Insights.
         * 
         * @return builder
         * 
         */
        public Builder supportsPerformanceInsights(Output</* @Nullable */ Boolean> supportsPerformanceInsights) {
            $.supportsPerformanceInsights = supportsPerformanceInsights;
            return this;
        }

        /**
         * @param supportsPerformanceInsights Enable this to ensure a DB instance supports Performance Insights.
         * 
         * @return builder
         * 
         */
        public Builder supportsPerformanceInsights(@Nullable Boolean supportsPerformanceInsights) {
            return supportsPerformanceInsights(Output.of(supportsPerformanceInsights));
        }

        /**
         * @param supportsStorageAutoscaling Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.
         * 
         * @return builder
         * 
         */
        public Builder supportsStorageAutoscaling(Output</* @Nullable */ Boolean> supportsStorageAutoscaling) {
            $.supportsStorageAutoscaling = supportsStorageAutoscaling;
            return this;
        }

        /**
         * @param supportsStorageAutoscaling Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.
         * 
         * @return builder
         * 
         */
        public Builder supportsStorageAutoscaling(@Nullable Boolean supportsStorageAutoscaling) {
            return supportsStorageAutoscaling(Output.of(supportsStorageAutoscaling));
        }

        /**
         * @param supportsStorageEncryption Enable this to ensure a DB instance supports encrypted storage.
         * 
         * @return builder
         * 
         */
        public Builder supportsStorageEncryption(Output</* @Nullable */ Boolean> supportsStorageEncryption) {
            $.supportsStorageEncryption = supportsStorageEncryption;
            return this;
        }

        /**
         * @param supportsStorageEncryption Enable this to ensure a DB instance supports encrypted storage.
         * 
         * @return builder
         * 
         */
        public Builder supportsStorageEncryption(@Nullable Boolean supportsStorageEncryption) {
            return supportsStorageEncryption(Output.of(supportsStorageEncryption));
        }

        /**
         * @param vpc Boolean that indicates whether to show only VPC or non-VPC offerings.
         * 
         * @return builder
         * 
         */
        public Builder vpc(Output</* @Nullable */ Boolean> vpc) {
            $.vpc = vpc;
            return this;
        }

        /**
         * @param vpc Boolean that indicates whether to show only VPC or non-VPC offerings.
         * 
         * @return builder
         * 
         */
        public Builder vpc(@Nullable Boolean vpc) {
            return vpc(Output.of(vpc));
        }

        public GetOrderableDbInstanceArgs build() {
            $.engine = Objects.requireNonNull($.engine, "expected parameter 'engine' to be non-null");
            return $;
        }
    }

}
