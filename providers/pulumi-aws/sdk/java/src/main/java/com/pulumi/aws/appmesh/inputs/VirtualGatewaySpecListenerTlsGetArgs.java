// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecListenerTlsCertificateGetArgs;
import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecListenerTlsValidationGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualGatewaySpecListenerTlsGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualGatewaySpecListenerTlsGetArgs Empty = new VirtualGatewaySpecListenerTlsGetArgs();

    /**
     * The listener&#39;s TLS certificate.
     * 
     */
    @Import(name="certificate", required=true)
    private Output<VirtualGatewaySpecListenerTlsCertificateGetArgs> certificate;

    /**
     * @return The listener&#39;s TLS certificate.
     * 
     */
    public Output<VirtualGatewaySpecListenerTlsCertificateGetArgs> certificate() {
        return this.certificate;
    }

    /**
     * The listener&#39;s TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
     * 
     */
    @Import(name="mode", required=true)
    private Output<String> mode;

    /**
     * @return The listener&#39;s TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }

    /**
     * The listener&#39;s Transport Layer Security (TLS) validation context.
     * 
     */
    @Import(name="validation")
    private @Nullable Output<VirtualGatewaySpecListenerTlsValidationGetArgs> validation;

    /**
     * @return The listener&#39;s Transport Layer Security (TLS) validation context.
     * 
     */
    public Optional<Output<VirtualGatewaySpecListenerTlsValidationGetArgs>> validation() {
        return Optional.ofNullable(this.validation);
    }

    private VirtualGatewaySpecListenerTlsGetArgs() {}

    private VirtualGatewaySpecListenerTlsGetArgs(VirtualGatewaySpecListenerTlsGetArgs $) {
        this.certificate = $.certificate;
        this.mode = $.mode;
        this.validation = $.validation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualGatewaySpecListenerTlsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualGatewaySpecListenerTlsGetArgs $;

        public Builder() {
            $ = new VirtualGatewaySpecListenerTlsGetArgs();
        }

        public Builder(VirtualGatewaySpecListenerTlsGetArgs defaults) {
            $ = new VirtualGatewaySpecListenerTlsGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificate The listener&#39;s TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder certificate(Output<VirtualGatewaySpecListenerTlsCertificateGetArgs> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate The listener&#39;s TLS certificate.
         * 
         * @return builder
         * 
         */
        public Builder certificate(VirtualGatewaySpecListenerTlsCertificateGetArgs certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param mode The listener&#39;s TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
         * 
         * @return builder
         * 
         */
        public Builder mode(Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The listener&#39;s TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param validation The listener&#39;s Transport Layer Security (TLS) validation context.
         * 
         * @return builder
         * 
         */
        public Builder validation(@Nullable Output<VirtualGatewaySpecListenerTlsValidationGetArgs> validation) {
            $.validation = validation;
            return this;
        }

        /**
         * @param validation The listener&#39;s Transport Layer Security (TLS) validation context.
         * 
         * @return builder
         * 
         */
        public Builder validation(VirtualGatewaySpecListenerTlsValidationGetArgs validation) {
            return validation(Output.of(validation));
        }

        public VirtualGatewaySpecListenerTlsGetArgs build() {
            $.certificate = Objects.requireNonNull($.certificate, "expected parameter 'certificate' to be non-null");
            $.mode = Objects.requireNonNull($.mode, "expected parameter 'mode' to be non-null");
            return $;
        }
    }

}
