// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecListenerTlsCertificateGetArgs;
import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecListenerTlsValidationGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualGatewaySpecListenerTlsGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualGatewaySpecListenerTlsGetArgs Empty = new VirtualGatewaySpecListenerTlsGetArgs();

    /**
     * The listener&#39;s TLS certificate.
     * 
     */
    @Import(name="certificate", required=true)
      private final Output<VirtualGatewaySpecListenerTlsCertificateGetArgs> certificate;

    public Output<VirtualGatewaySpecListenerTlsCertificateGetArgs> certificate() {
        return this.certificate;
    }

    /**
     * The listener&#39;s TLS mode. Valid values: `DISABLED`, `PERMISSIVE`, `STRICT`.
     * 
     */
    @Import(name="mode", required=true)
      private final Output<String> mode;

    public Output<String> mode() {
        return this.mode;
    }

    /**
     * The listener&#39;s Transport Layer Security (TLS) validation context.
     * 
     */
    @Import(name="validation")
      private final @Nullable Output<VirtualGatewaySpecListenerTlsValidationGetArgs> validation;

    public Output<VirtualGatewaySpecListenerTlsValidationGetArgs> validation() {
        return this.validation == null ? Codegen.empty() : this.validation;
    }

    public VirtualGatewaySpecListenerTlsGetArgs(
        Output<VirtualGatewaySpecListenerTlsCertificateGetArgs> certificate,
        Output<String> mode,
        @Nullable Output<VirtualGatewaySpecListenerTlsValidationGetArgs> validation) {
        this.certificate = Objects.requireNonNull(certificate, "expected parameter 'certificate' to be non-null");
        this.mode = Objects.requireNonNull(mode, "expected parameter 'mode' to be non-null");
        this.validation = validation;
    }

    private VirtualGatewaySpecListenerTlsGetArgs() {
        this.certificate = Codegen.empty();
        this.mode = Codegen.empty();
        this.validation = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualGatewaySpecListenerTlsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<VirtualGatewaySpecListenerTlsCertificateGetArgs> certificate;
        private Output<String> mode;
        private @Nullable Output<VirtualGatewaySpecListenerTlsValidationGetArgs> validation;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualGatewaySpecListenerTlsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificate = defaults.certificate;
    	      this.mode = defaults.mode;
    	      this.validation = defaults.validation;
        }

        public Builder certificate(Output<VirtualGatewaySpecListenerTlsCertificateGetArgs> certificate) {
            this.certificate = Objects.requireNonNull(certificate);
            return this;
        }
        public Builder certificate(VirtualGatewaySpecListenerTlsCertificateGetArgs certificate) {
            this.certificate = Output.of(Objects.requireNonNull(certificate));
            return this;
        }
        public Builder mode(Output<String> mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder mode(String mode) {
            this.mode = Output.of(Objects.requireNonNull(mode));
            return this;
        }
        public Builder validation(@Nullable Output<VirtualGatewaySpecListenerTlsValidationGetArgs> validation) {
            this.validation = validation;
            return this;
        }
        public Builder validation(@Nullable VirtualGatewaySpecListenerTlsValidationGetArgs validation) {
            this.validation = Codegen.ofNullable(validation);
            return this;
        }        public VirtualGatewaySpecListenerTlsGetArgs build() {
            return new VirtualGatewaySpecListenerTlsGetArgs(certificate, mode, validation);
        }
    }
}
