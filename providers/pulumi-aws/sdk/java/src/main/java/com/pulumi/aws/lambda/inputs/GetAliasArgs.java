// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetAliasArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAliasArgs Empty = new GetAliasArgs();

    /**
     * Name of the aliased Lambda function.
     * 
     */
    @Import(name="functionName", required=true)
    private String functionName;

    /**
     * @return Name of the aliased Lambda function.
     * 
     */
    public String functionName() {
        return this.functionName;
    }

    /**
     * Name of the Lambda alias.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the Lambda alias.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetAliasArgs() {}

    private GetAliasArgs(GetAliasArgs $) {
        this.functionName = $.functionName;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAliasArgs $;

        public Builder() {
            $ = new GetAliasArgs();
        }

        public Builder(GetAliasArgs defaults) {
            $ = new GetAliasArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param functionName Name of the aliased Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder functionName(String functionName) {
            $.functionName = functionName;
            return this;
        }

        /**
         * @param name Name of the Lambda alias.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetAliasArgs build() {
            $.functionName = Objects.requireNonNull($.functionName, "expected parameter 'functionName' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
