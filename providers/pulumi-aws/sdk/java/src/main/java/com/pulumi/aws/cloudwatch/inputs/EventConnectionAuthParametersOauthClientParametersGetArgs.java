// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class EventConnectionAuthParametersOauthClientParametersGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventConnectionAuthParametersOauthClientParametersGetArgs Empty = new EventConnectionAuthParametersOauthClientParametersGetArgs();

    /**
     * The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
     * 
     */
    @Import(name="clientId", required=true)
      private final Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
     * 
     */
    @Import(name="clientSecret", required=true)
      private final Output<String> clientSecret;

    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    public EventConnectionAuthParametersOauthClientParametersGetArgs(
        Output<String> clientId,
        Output<String> clientSecret) {
        this.clientId = Objects.requireNonNull(clientId, "expected parameter 'clientId' to be non-null");
        this.clientSecret = Objects.requireNonNull(clientSecret, "expected parameter 'clientSecret' to be non-null");
    }

    private EventConnectionAuthParametersOauthClientParametersGetArgs() {
        this.clientId = Codegen.empty();
        this.clientSecret = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventConnectionAuthParametersOauthClientParametersGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> clientId;
        private Output<String> clientSecret;

        public Builder() {
    	      // Empty
        }

        public Builder(EventConnectionAuthParametersOauthClientParametersGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
        }

        public Builder clientId(Output<String> clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        public Builder clientId(String clientId) {
            this.clientId = Output.of(Objects.requireNonNull(clientId));
            return this;
        }
        public Builder clientSecret(Output<String> clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = Output.of(Objects.requireNonNull(clientSecret));
            return this;
        }        public EventConnectionAuthParametersOauthClientParametersGetArgs build() {
            return new EventConnectionAuthParametersOauthClientParametersGetArgs(clientId, clientSecret);
        }
    }
}
