// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceDeviceGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceDeviceGetArgs Empty = new DeviceDeviceGetArgs();

    /**
     * A description for the device.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the device.
     * 
     */
    @Import(name="deviceName", required=true)
    private Output<String> deviceName;

    public Output<String> deviceName() {
        return this.deviceName;
    }

    /**
     * Amazon Web Services Internet of Things (IoT) object name.
     * 
     */
    @Import(name="iotThingName")
    private @Nullable Output<String> iotThingName;

    public Optional<Output<String>> iotThingName() {
        return Optional.ofNullable(this.iotThingName);
    }

    private DeviceDeviceGetArgs() {}

    private DeviceDeviceGetArgs(DeviceDeviceGetArgs $) {
        this.description = $.description;
        this.deviceName = $.deviceName;
        this.iotThingName = $.iotThingName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceDeviceGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceDeviceGetArgs $;

        public Builder() {
            $ = new DeviceDeviceGetArgs();
        }

        public Builder(DeviceDeviceGetArgs defaults) {
            $ = new DeviceDeviceGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder deviceName(Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        public Builder iotThingName(@Nullable Output<String> iotThingName) {
            $.iotThingName = iotThingName;
            return this;
        }

        public Builder iotThingName(String iotThingName) {
            return iotThingName(Output.of(iotThingName));
        }

        public DeviceDeviceGetArgs build() {
            $.deviceName = Objects.requireNonNull($.deviceName, "expected parameter 'deviceName' to be non-null");
            return $;
        }
    }

}
