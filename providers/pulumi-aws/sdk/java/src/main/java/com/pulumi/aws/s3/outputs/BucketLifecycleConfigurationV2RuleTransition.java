// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketLifecycleConfigurationV2RuleTransition {
    /**
     * @return The date objects are transitioned to the specified storage class. The date value must be in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) and set to midnight UTC e.g. `2023-01-13T00:00:00Z`.
     * 
     */
    private final @Nullable String date;
    /**
     * @return The number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both `days` and `date` are not specified, defaults to `0`. Valid values depend on `storage_class`, see [Transition objects using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-transition-general-considerations.html) for more details.
     * 
     */
    private final @Nullable Integer days;
    /**
     * @return The class of storage used to store the object. Valid Values: `GLACIER`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `DEEP_ARCHIVE`, `GLACIER_IR`.
     * 
     */
    private final String storageClass;

    @CustomType.Constructor
    private BucketLifecycleConfigurationV2RuleTransition(
        @CustomType.Parameter("date") @Nullable String date,
        @CustomType.Parameter("days") @Nullable Integer days,
        @CustomType.Parameter("storageClass") String storageClass) {
        this.date = date;
        this.days = days;
        this.storageClass = storageClass;
    }

    /**
     * @return The date objects are transitioned to the specified storage class. The date value must be in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) and set to midnight UTC e.g. `2023-01-13T00:00:00Z`.
     * 
     */
    public Optional<String> date() {
        return Optional.ofNullable(this.date);
    }
    /**
     * @return The number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both `days` and `date` are not specified, defaults to `0`. Valid values depend on `storage_class`, see [Transition objects using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-transition-general-considerations.html) for more details.
     * 
     */
    public Optional<Integer> days() {
        return Optional.ofNullable(this.days);
    }
    /**
     * @return The class of storage used to store the object. Valid Values: `GLACIER`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `DEEP_ARCHIVE`, `GLACIER_IR`.
     * 
     */
    public String storageClass() {
        return this.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleConfigurationV2RuleTransition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String date;
        private @Nullable Integer days;
        private String storageClass;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLifecycleConfigurationV2RuleTransition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.date = defaults.date;
    	      this.days = defaults.days;
    	      this.storageClass = defaults.storageClass;
        }

        public Builder date(@Nullable String date) {
            this.date = date;
            return this;
        }
        public Builder days(@Nullable Integer days) {
            this.days = days;
            return this;
        }
        public Builder storageClass(String storageClass) {
            this.storageClass = Objects.requireNonNull(storageClass);
            return this;
        }        public BucketLifecycleConfigurationV2RuleTransition build() {
            return new BucketLifecycleConfigurationV2RuleTransition(date, days, storageClass);
        }
    }
}
