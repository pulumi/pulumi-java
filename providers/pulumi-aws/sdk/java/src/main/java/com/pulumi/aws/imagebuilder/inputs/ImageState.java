// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.imagebuilder.inputs;

import com.pulumi.aws.imagebuilder.inputs.ImageImageTestsConfigurationGetArgs;
import com.pulumi.aws.imagebuilder.inputs.ImageOutputResourceGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ImageState extends com.pulumi.resources.ResourceArgs {

    public static final ImageState Empty = new ImageState();

    /**
     * Amazon Resource Name (ARN) of the image.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Date the image was created.
     * 
     */
    @Import(name="dateCreated")
      private final @Nullable Output<String> dateCreated;

    public Output<String> dateCreated() {
        return this.dateCreated == null ? Codegen.empty() : this.dateCreated;
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    @Import(name="distributionConfigurationArn")
      private final @Nullable Output<String> distributionConfigurationArn;

    public Output<String> distributionConfigurationArn() {
        return this.distributionConfigurationArn == null ? Codegen.empty() : this.distributionConfigurationArn;
    }

    /**
     * Whether additional information about the image being created is collected. Defaults to `true`.
     * 
     */
    @Import(name="enhancedImageMetadataEnabled")
      private final @Nullable Output<Boolean> enhancedImageMetadataEnabled;

    public Output<Boolean> enhancedImageMetadataEnabled() {
        return this.enhancedImageMetadataEnabled == null ? Codegen.empty() : this.enhancedImageMetadataEnabled;
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
     * 
     */
    @Import(name="imageRecipeArn")
      private final @Nullable Output<String> imageRecipeArn;

    public Output<String> imageRecipeArn() {
        return this.imageRecipeArn == null ? Codegen.empty() : this.imageRecipeArn;
    }

    /**
     * Configuration block with image tests configuration. Detailed below.
     * 
     */
    @Import(name="imageTestsConfiguration")
      private final @Nullable Output<ImageImageTestsConfigurationGetArgs> imageTestsConfiguration;

    public Output<ImageImageTestsConfigurationGetArgs> imageTestsConfiguration() {
        return this.imageTestsConfiguration == null ? Codegen.empty() : this.imageTestsConfiguration;
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     */
    @Import(name="infrastructureConfigurationArn")
      private final @Nullable Output<String> infrastructureConfigurationArn;

    public Output<String> infrastructureConfigurationArn() {
        return this.infrastructureConfigurationArn == null ? Codegen.empty() : this.infrastructureConfigurationArn;
    }

    /**
     * Name of the AMI.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Operating System version of the image.
     * 
     */
    @Import(name="osVersion")
      private final @Nullable Output<String> osVersion;

    public Output<String> osVersion() {
        return this.osVersion == null ? Codegen.empty() : this.osVersion;
    }

    /**
     * List of objects with resources created by the image.
     * 
     */
    @Import(name="outputResources")
      private final @Nullable Output<List<ImageOutputResourceGetArgs>> outputResources;

    public Output<List<ImageOutputResourceGetArgs>> outputResources() {
        return this.outputResources == null ? Codegen.empty() : this.outputResources;
    }

    /**
     * Platform of the image.
     * 
     */
    @Import(name="platform")
      private final @Nullable Output<String> platform;

    public Output<String> platform() {
        return this.platform == null ? Codegen.empty() : this.platform;
    }

    /**
     * Key-value map of resource tags for the Image Builder Image. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * Version of the image.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<String> version;

    public Output<String> version() {
        return this.version == null ? Codegen.empty() : this.version;
    }

    public ImageState(
        @Nullable Output<String> arn,
        @Nullable Output<String> dateCreated,
        @Nullable Output<String> distributionConfigurationArn,
        @Nullable Output<Boolean> enhancedImageMetadataEnabled,
        @Nullable Output<String> imageRecipeArn,
        @Nullable Output<ImageImageTestsConfigurationGetArgs> imageTestsConfiguration,
        @Nullable Output<String> infrastructureConfigurationArn,
        @Nullable Output<String> name,
        @Nullable Output<String> osVersion,
        @Nullable Output<List<ImageOutputResourceGetArgs>> outputResources,
        @Nullable Output<String> platform,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> version) {
        this.arn = arn;
        this.dateCreated = dateCreated;
        this.distributionConfigurationArn = distributionConfigurationArn;
        this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
        this.imageRecipeArn = imageRecipeArn;
        this.imageTestsConfiguration = imageTestsConfiguration;
        this.infrastructureConfigurationArn = infrastructureConfigurationArn;
        this.name = name;
        this.osVersion = osVersion;
        this.outputResources = outputResources;
        this.platform = platform;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.version = version;
    }

    private ImageState() {
        this.arn = Codegen.empty();
        this.dateCreated = Codegen.empty();
        this.distributionConfigurationArn = Codegen.empty();
        this.enhancedImageMetadataEnabled = Codegen.empty();
        this.imageRecipeArn = Codegen.empty();
        this.imageTestsConfiguration = Codegen.empty();
        this.infrastructureConfigurationArn = Codegen.empty();
        this.name = Codegen.empty();
        this.osVersion = Codegen.empty();
        this.outputResources = Codegen.empty();
        this.platform = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.version = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> dateCreated;
        private @Nullable Output<String> distributionConfigurationArn;
        private @Nullable Output<Boolean> enhancedImageMetadataEnabled;
        private @Nullable Output<String> imageRecipeArn;
        private @Nullable Output<ImageImageTestsConfigurationGetArgs> imageTestsConfiguration;
        private @Nullable Output<String> infrastructureConfigurationArn;
        private @Nullable Output<String> name;
        private @Nullable Output<String> osVersion;
        private @Nullable Output<List<ImageOutputResourceGetArgs>> outputResources;
        private @Nullable Output<String> platform;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.dateCreated = defaults.dateCreated;
    	      this.distributionConfigurationArn = defaults.distributionConfigurationArn;
    	      this.enhancedImageMetadataEnabled = defaults.enhancedImageMetadataEnabled;
    	      this.imageRecipeArn = defaults.imageRecipeArn;
    	      this.imageTestsConfiguration = defaults.imageTestsConfiguration;
    	      this.infrastructureConfigurationArn = defaults.infrastructureConfigurationArn;
    	      this.name = defaults.name;
    	      this.osVersion = defaults.osVersion;
    	      this.outputResources = defaults.outputResources;
    	      this.platform = defaults.platform;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.version = defaults.version;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder dateCreated(@Nullable Output<String> dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }
        public Builder dateCreated(@Nullable String dateCreated) {
            this.dateCreated = Codegen.ofNullable(dateCreated);
            return this;
        }
        public Builder distributionConfigurationArn(@Nullable Output<String> distributionConfigurationArn) {
            this.distributionConfigurationArn = distributionConfigurationArn;
            return this;
        }
        public Builder distributionConfigurationArn(@Nullable String distributionConfigurationArn) {
            this.distributionConfigurationArn = Codegen.ofNullable(distributionConfigurationArn);
            return this;
        }
        public Builder enhancedImageMetadataEnabled(@Nullable Output<Boolean> enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            return this;
        }
        public Builder enhancedImageMetadataEnabled(@Nullable Boolean enhancedImageMetadataEnabled) {
            this.enhancedImageMetadataEnabled = Codegen.ofNullable(enhancedImageMetadataEnabled);
            return this;
        }
        public Builder imageRecipeArn(@Nullable Output<String> imageRecipeArn) {
            this.imageRecipeArn = imageRecipeArn;
            return this;
        }
        public Builder imageRecipeArn(@Nullable String imageRecipeArn) {
            this.imageRecipeArn = Codegen.ofNullable(imageRecipeArn);
            return this;
        }
        public Builder imageTestsConfiguration(@Nullable Output<ImageImageTestsConfigurationGetArgs> imageTestsConfiguration) {
            this.imageTestsConfiguration = imageTestsConfiguration;
            return this;
        }
        public Builder imageTestsConfiguration(@Nullable ImageImageTestsConfigurationGetArgs imageTestsConfiguration) {
            this.imageTestsConfiguration = Codegen.ofNullable(imageTestsConfiguration);
            return this;
        }
        public Builder infrastructureConfigurationArn(@Nullable Output<String> infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = infrastructureConfigurationArn;
            return this;
        }
        public Builder infrastructureConfigurationArn(@Nullable String infrastructureConfigurationArn) {
            this.infrastructureConfigurationArn = Codegen.ofNullable(infrastructureConfigurationArn);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder osVersion(@Nullable Output<String> osVersion) {
            this.osVersion = osVersion;
            return this;
        }
        public Builder osVersion(@Nullable String osVersion) {
            this.osVersion = Codegen.ofNullable(osVersion);
            return this;
        }
        public Builder outputResources(@Nullable Output<List<ImageOutputResourceGetArgs>> outputResources) {
            this.outputResources = outputResources;
            return this;
        }
        public Builder outputResources(@Nullable List<ImageOutputResourceGetArgs> outputResources) {
            this.outputResources = Codegen.ofNullable(outputResources);
            return this;
        }
        public Builder outputResources(ImageOutputResourceGetArgs... outputResources) {
            return outputResources(List.of(outputResources));
        }
        public Builder platform(@Nullable Output<String> platform) {
            this.platform = platform;
            return this;
        }
        public Builder platform(@Nullable String platform) {
            this.platform = Codegen.ofNullable(platform);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }
        public Builder version(@Nullable String version) {
            this.version = Codegen.ofNullable(version);
            return this;
        }        public ImageState build() {
            return new ImageState(arn, dateCreated, distributionConfigurationArn, enhancedImageMetadataEnabled, imageRecipeArn, imageTestsConfiguration, infrastructureConfigurationArn, name, osVersion, outputResources, platform, tags, tagsAll, version);
        }
    }
}
