// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53domains.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class RegisteredDomainNameServer {
    /**
     * @return Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
     * 
     */
    private final @Nullable List<String> glueIps;
    /**
     * @return The fully qualified host name of the name server.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private RegisteredDomainNameServer(
        @CustomType.Parameter("glueIps") @Nullable List<String> glueIps,
        @CustomType.Parameter("name") String name) {
        this.glueIps = glueIps;
        this.name = name;
    }

    /**
     * @return Glue IP addresses of a name server. The list can contain only one IPv4 and one IPv6 address.
     * 
     */
    public List<String> glueIps() {
        return this.glueIps == null ? List.of() : this.glueIps;
    }
    /**
     * @return The fully qualified host name of the name server.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegisteredDomainNameServer defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> glueIps;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(RegisteredDomainNameServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.glueIps = defaults.glueIps;
    	      this.name = defaults.name;
        }

        public Builder glueIps(@Nullable List<String> glueIps) {
            this.glueIps = glueIps;
            return this;
        }
        public Builder glueIps(String... glueIps) {
            return glueIps(List.of(glueIps));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public RegisteredDomainNameServer build() {
            return new RegisteredDomainNameServer(glueIps, name);
        }
    }
}
