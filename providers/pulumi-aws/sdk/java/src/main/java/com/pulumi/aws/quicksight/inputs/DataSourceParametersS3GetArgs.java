// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.aws.quicksight.inputs.DataSourceParametersS3ManifestFileLocationGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


public final class DataSourceParametersS3GetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceParametersS3GetArgs Empty = new DataSourceParametersS3GetArgs();

    /**
     * An object containing the S3 location of the S3 manifest file.
     * 
     */
    @Import(name="manifestFileLocation", required=true)
    private Output<DataSourceParametersS3ManifestFileLocationGetArgs> manifestFileLocation;

    /**
     * @return An object containing the S3 location of the S3 manifest file.
     * 
     */
    public Output<DataSourceParametersS3ManifestFileLocationGetArgs> manifestFileLocation() {
        return this.manifestFileLocation;
    }

    private DataSourceParametersS3GetArgs() {}

    private DataSourceParametersS3GetArgs(DataSourceParametersS3GetArgs $) {
        this.manifestFileLocation = $.manifestFileLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceParametersS3GetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceParametersS3GetArgs $;

        public Builder() {
            $ = new DataSourceParametersS3GetArgs();
        }

        public Builder(DataSourceParametersS3GetArgs defaults) {
            $ = new DataSourceParametersS3GetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param manifestFileLocation An object containing the S3 location of the S3 manifest file.
         * 
         * @return builder
         * 
         */
        public Builder manifestFileLocation(Output<DataSourceParametersS3ManifestFileLocationGetArgs> manifestFileLocation) {
            $.manifestFileLocation = manifestFileLocation;
            return this;
        }

        /**
         * @param manifestFileLocation An object containing the S3 location of the S3 manifest file.
         * 
         * @return builder
         * 
         */
        public Builder manifestFileLocation(DataSourceParametersS3ManifestFileLocationGetArgs manifestFileLocation) {
            return manifestFileLocation(Output.of(manifestFileLocation));
        }

        public DataSourceParametersS3GetArgs build() {
            $.manifestFileLocation = Objects.requireNonNull($.manifestFileLocation, "expected parameter 'manifestFileLocation' to be non-null");
            return $;
        }
    }

}
