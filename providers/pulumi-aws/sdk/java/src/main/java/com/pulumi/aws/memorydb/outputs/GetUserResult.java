// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.memorydb.outputs;

import com.pulumi.aws.memorydb.outputs.GetUserAuthenticationMode;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetUserResult {
    /**
     * @return The access permissions string used for this user.
     * 
     */
    private final String accessString;
    /**
     * @return ARN of the user.
     * 
     */
    private final String arn;
    /**
     * @return Denotes the user&#39;s authentication properties.
     * 
     */
    private final List<GetUserAuthenticationMode> authenticationModes;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The minimum engine version supported for the user.
     * 
     */
    private final String minimumEngineVersion;
    /**
     * @return A map of tags assigned to the subnet group.
     * 
     */
    private final Map<String,String> tags;
    private final String userName;

    @CustomType.Constructor
    private GetUserResult(
        @CustomType.Parameter("accessString") String accessString,
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("authenticationModes") List<GetUserAuthenticationMode> authenticationModes,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("minimumEngineVersion") String minimumEngineVersion,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("userName") String userName) {
        this.accessString = accessString;
        this.arn = arn;
        this.authenticationModes = authenticationModes;
        this.id = id;
        this.minimumEngineVersion = minimumEngineVersion;
        this.tags = tags;
        this.userName = userName;
    }

    /**
     * @return The access permissions string used for this user.
     * 
     */
    public String accessString() {
        return this.accessString;
    }
    /**
     * @return ARN of the user.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Denotes the user&#39;s authentication properties.
     * 
     */
    public List<GetUserAuthenticationMode> authenticationModes() {
        return this.authenticationModes;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The minimum engine version supported for the user.
     * 
     */
    public String minimumEngineVersion() {
        return this.minimumEngineVersion;
    }
    /**
     * @return A map of tags assigned to the subnet group.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accessString;
        private String arn;
        private List<GetUserAuthenticationMode> authenticationModes;
        private String id;
        private String minimumEngineVersion;
        private Map<String,String> tags;
        private String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessString = defaults.accessString;
    	      this.arn = defaults.arn;
    	      this.authenticationModes = defaults.authenticationModes;
    	      this.id = defaults.id;
    	      this.minimumEngineVersion = defaults.minimumEngineVersion;
    	      this.tags = defaults.tags;
    	      this.userName = defaults.userName;
        }

        public Builder accessString(String accessString) {
            this.accessString = Objects.requireNonNull(accessString);
            return this;
        }
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder authenticationModes(List<GetUserAuthenticationMode> authenticationModes) {
            this.authenticationModes = Objects.requireNonNull(authenticationModes);
            return this;
        }
        public Builder authenticationModes(GetUserAuthenticationMode... authenticationModes) {
            return authenticationModes(List.of(authenticationModes));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder minimumEngineVersion(String minimumEngineVersion) {
            this.minimumEngineVersion = Objects.requireNonNull(minimumEngineVersion);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }        public GetUserResult build() {
            return new GetUserResult(accessString, arn, authenticationModes, id, minimumEngineVersion, tags, userName);
        }
    }
}
