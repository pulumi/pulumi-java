// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption extends com.pulumi.resources.InvokeArgs {

    public static final GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption Empty = new GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption();

    /**
     * A KMS key ARN that is used to encrypt the connection password.
     * 
     */
    @Import(name="awsKmsKeyId", required=true)
    private String awsKmsKeyId;

    public String awsKmsKeyId() {
        return this.awsKmsKeyId;
    }

    /**
     * When set to `true`, passwords remain encrypted in the responses of GetConnection and GetConnections. This encryption takes effect independently of the catalog encryption.
     * 
     */
    @Import(name="returnConnectionPasswordEncrypted", required=true)
    private Boolean returnConnectionPasswordEncrypted;

    public Boolean returnConnectionPasswordEncrypted() {
        return this.returnConnectionPasswordEncrypted;
    }

    private GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption() {}

    private GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption(GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption $) {
        this.awsKmsKeyId = $.awsKmsKeyId;
        this.returnConnectionPasswordEncrypted = $.returnConnectionPasswordEncrypted;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption $;

        public Builder() {
            $ = new GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption();
        }

        public Builder(GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption defaults) {
            $ = new GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption(Objects.requireNonNull(defaults));
        }

        public Builder awsKmsKeyId(String awsKmsKeyId) {
            $.awsKmsKeyId = awsKmsKeyId;
            return this;
        }

        public Builder returnConnectionPasswordEncrypted(Boolean returnConnectionPasswordEncrypted) {
            $.returnConnectionPasswordEncrypted = returnConnectionPasswordEncrypted;
            return this;
        }

        public GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingConnectionPasswordEncryption build() {
            $.awsKmsKeyId = Objects.requireNonNull($.awsKmsKeyId, "expected parameter 'awsKmsKeyId' to be non-null");
            $.returnConnectionPasswordEncrypted = Objects.requireNonNull($.returnConnectionPasswordEncrypted, "expected parameter 'returnConnectionPasswordEncrypted' to be non-null");
            return $;
        }
    }

}
