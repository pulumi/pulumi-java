// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.RouteSpecGrpcRouteActionGetArgs;
import com.pulumi.aws.appmesh.inputs.RouteSpecGrpcRouteMatchGetArgs;
import com.pulumi.aws.appmesh.inputs.RouteSpecGrpcRouteRetryPolicyGetArgs;
import com.pulumi.aws.appmesh.inputs.RouteSpecGrpcRouteTimeoutGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteSpecGrpcRouteGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteSpecGrpcRouteGetArgs Empty = new RouteSpecGrpcRouteGetArgs();

    /**
     * The action to take if a match is determined.
     * 
     */
    @Import(name="action", required=true)
    private Output<RouteSpecGrpcRouteActionGetArgs> action;

    public Output<RouteSpecGrpcRouteActionGetArgs> action() {
        return this.action;
    }

    /**
     * The criteria for determining an gRPC request match.
     * 
     */
    @Import(name="match")
    private @Nullable Output<RouteSpecGrpcRouteMatchGetArgs> match;

    public Optional<Output<RouteSpecGrpcRouteMatchGetArgs>> match() {
        return Optional.ofNullable(this.match);
    }

    /**
     * The retry policy.
     * 
     */
    @Import(name="retryPolicy")
    private @Nullable Output<RouteSpecGrpcRouteRetryPolicyGetArgs> retryPolicy;

    public Optional<Output<RouteSpecGrpcRouteRetryPolicyGetArgs>> retryPolicy() {
        return Optional.ofNullable(this.retryPolicy);
    }

    /**
     * The types of timeouts.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<RouteSpecGrpcRouteTimeoutGetArgs> timeout;

    public Optional<Output<RouteSpecGrpcRouteTimeoutGetArgs>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private RouteSpecGrpcRouteGetArgs() {}

    private RouteSpecGrpcRouteGetArgs(RouteSpecGrpcRouteGetArgs $) {
        this.action = $.action;
        this.match = $.match;
        this.retryPolicy = $.retryPolicy;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteSpecGrpcRouteGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteSpecGrpcRouteGetArgs $;

        public Builder() {
            $ = new RouteSpecGrpcRouteGetArgs();
        }

        public Builder(RouteSpecGrpcRouteGetArgs defaults) {
            $ = new RouteSpecGrpcRouteGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder action(Output<RouteSpecGrpcRouteActionGetArgs> action) {
            $.action = action;
            return this;
        }

        public Builder action(RouteSpecGrpcRouteActionGetArgs action) {
            return action(Output.of(action));
        }

        public Builder match(@Nullable Output<RouteSpecGrpcRouteMatchGetArgs> match) {
            $.match = match;
            return this;
        }

        public Builder match(RouteSpecGrpcRouteMatchGetArgs match) {
            return match(Output.of(match));
        }

        public Builder retryPolicy(@Nullable Output<RouteSpecGrpcRouteRetryPolicyGetArgs> retryPolicy) {
            $.retryPolicy = retryPolicy;
            return this;
        }

        public Builder retryPolicy(RouteSpecGrpcRouteRetryPolicyGetArgs retryPolicy) {
            return retryPolicy(Output.of(retryPolicy));
        }

        public Builder timeout(@Nullable Output<RouteSpecGrpcRouteTimeoutGetArgs> timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder timeout(RouteSpecGrpcRouteTimeoutGetArgs timeout) {
            return timeout(Output.of(timeout));
        }

        public RouteSpecGrpcRouteGetArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            return $;
        }
    }

}
