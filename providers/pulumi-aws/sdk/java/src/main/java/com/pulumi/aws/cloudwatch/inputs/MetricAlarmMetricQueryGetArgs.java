// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.MetricAlarmMetricQueryMetricGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MetricAlarmMetricQueryGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricAlarmMetricQueryGetArgs Empty = new MetricAlarmMetricQueryGetArgs();

    /**
     * The ID of the account where the metrics are located, if this is a cross-account alarm.
     * 
     */
    @Import(name="accountId")
      private final @Nullable Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId == null ? Codegen.empty() : this.accountId;
    }

    /**
     * The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the [Amazon CloudWatch User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax).
     * 
     */
    @Import(name="expression")
      private final @Nullable Output<String> expression;

    public Output<String> expression() {
        return this.expression == null ? Codegen.empty() : this.expression;
    }

    /**
     * A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
     * 
     */
    @Import(name="id", required=true)
      private final Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    /**
     * A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.
     * 
     */
    @Import(name="label")
      private final @Nullable Output<String> label;

    public Output<String> label() {
        return this.label == null ? Codegen.empty() : this.label;
    }

    /**
     * The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
     * 
     */
    @Import(name="metric")
      private final @Nullable Output<MetricAlarmMetricQueryMetricGetArgs> metric;

    public Output<MetricAlarmMetricQueryMetricGetArgs> metric() {
        return this.metric == null ? Codegen.empty() : this.metric;
    }

    /**
     * Specify exactly one `metric_query` to be `true` to use that `metric_query` result as the alarm.
     * 
     */
    @Import(name="returnData")
      private final @Nullable Output<Boolean> returnData;

    public Output<Boolean> returnData() {
        return this.returnData == null ? Codegen.empty() : this.returnData;
    }

    public MetricAlarmMetricQueryGetArgs(
        @Nullable Output<String> accountId,
        @Nullable Output<String> expression,
        Output<String> id,
        @Nullable Output<String> label,
        @Nullable Output<MetricAlarmMetricQueryMetricGetArgs> metric,
        @Nullable Output<Boolean> returnData) {
        this.accountId = accountId;
        this.expression = expression;
        this.id = Objects.requireNonNull(id, "expected parameter 'id' to be non-null");
        this.label = label;
        this.metric = metric;
        this.returnData = returnData;
    }

    private MetricAlarmMetricQueryGetArgs() {
        this.accountId = Codegen.empty();
        this.expression = Codegen.empty();
        this.id = Codegen.empty();
        this.label = Codegen.empty();
        this.metric = Codegen.empty();
        this.returnData = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricAlarmMetricQueryGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountId;
        private @Nullable Output<String> expression;
        private Output<String> id;
        private @Nullable Output<String> label;
        private @Nullable Output<MetricAlarmMetricQueryMetricGetArgs> metric;
        private @Nullable Output<Boolean> returnData;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricAlarmMetricQueryGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.expression = defaults.expression;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.metric = defaults.metric;
    	      this.returnData = defaults.returnData;
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            this.accountId = accountId;
            return this;
        }
        public Builder accountId(@Nullable String accountId) {
            this.accountId = Codegen.ofNullable(accountId);
            return this;
        }
        public Builder expression(@Nullable Output<String> expression) {
            this.expression = expression;
            return this;
        }
        public Builder expression(@Nullable String expression) {
            this.expression = Codegen.ofNullable(expression);
            return this;
        }
        public Builder id(Output<String> id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder id(String id) {
            this.id = Output.of(Objects.requireNonNull(id));
            return this;
        }
        public Builder label(@Nullable Output<String> label) {
            this.label = label;
            return this;
        }
        public Builder label(@Nullable String label) {
            this.label = Codegen.ofNullable(label);
            return this;
        }
        public Builder metric(@Nullable Output<MetricAlarmMetricQueryMetricGetArgs> metric) {
            this.metric = metric;
            return this;
        }
        public Builder metric(@Nullable MetricAlarmMetricQueryMetricGetArgs metric) {
            this.metric = Codegen.ofNullable(metric);
            return this;
        }
        public Builder returnData(@Nullable Output<Boolean> returnData) {
            this.returnData = returnData;
            return this;
        }
        public Builder returnData(@Nullable Boolean returnData) {
            this.returnData = Codegen.ofNullable(returnData);
            return this;
        }        public MetricAlarmMetricQueryGetArgs build() {
            return new MetricAlarmMetricQueryGetArgs(accountId, expression, id, label, metric, returnData);
        }
    }
}
