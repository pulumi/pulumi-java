// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.autoscaling.inputs;

import com.pulumi.aws.autoscaling.inputs.GroupInstanceRefreshPreferencesGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupInstanceRefreshGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupInstanceRefreshGetArgs Empty = new GroupInstanceRefreshGetArgs();

    /**
     * Override default parameters for Instance Refresh.
     * 
     */
    @Import(name="preferences")
    private @Nullable Output<GroupInstanceRefreshPreferencesGetArgs> preferences;

    public Optional<Output<GroupInstanceRefreshPreferencesGetArgs>> preferences() {
        return Optional.ofNullable(this.preferences);
    }

    /**
     * The strategy to use for instance refresh. The only allowed value is `Rolling`. See [StartInstanceRefresh Action](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_StartInstanceRefresh.html#API_StartInstanceRefresh_RequestParameters) for more information.
     * 
     */
    @Import(name="strategy", required=true)
    private Output<String> strategy;

    public Output<String> strategy() {
        return this.strategy;
    }

    /**
     * Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of `launch_configuration`, `launch_template`, or `mixed_instances_policy`.
     * 
     */
    @Import(name="triggers")
    private @Nullable Output<List<String>> triggers;

    public Optional<Output<List<String>>> triggers() {
        return Optional.ofNullable(this.triggers);
    }

    private GroupInstanceRefreshGetArgs() {}

    private GroupInstanceRefreshGetArgs(GroupInstanceRefreshGetArgs $) {
        this.preferences = $.preferences;
        this.strategy = $.strategy;
        this.triggers = $.triggers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupInstanceRefreshGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupInstanceRefreshGetArgs $;

        public Builder() {
            $ = new GroupInstanceRefreshGetArgs();
        }

        public Builder(GroupInstanceRefreshGetArgs defaults) {
            $ = new GroupInstanceRefreshGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder preferences(@Nullable Output<GroupInstanceRefreshPreferencesGetArgs> preferences) {
            $.preferences = preferences;
            return this;
        }

        public Builder preferences(GroupInstanceRefreshPreferencesGetArgs preferences) {
            return preferences(Output.of(preferences));
        }

        public Builder strategy(Output<String> strategy) {
            $.strategy = strategy;
            return this;
        }

        public Builder strategy(String strategy) {
            return strategy(Output.of(strategy));
        }

        public Builder triggers(@Nullable Output<List<String>> triggers) {
            $.triggers = triggers;
            return this;
        }

        public Builder triggers(List<String> triggers) {
            return triggers(Output.of(triggers));
        }

        public Builder triggers(String... triggers) {
            return triggers(List.of(triggers));
        }

        public GroupInstanceRefreshGetArgs build() {
            $.strategy = Objects.requireNonNull($.strategy, "expected parameter 'strategy' to be non-null");
            return $;
        }
    }

}
