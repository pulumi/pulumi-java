// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.aws.lambda.inputs.AliasRoutingConfigGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AliasState extends com.pulumi.resources.ResourceArgs {

    public static final AliasState Empty = new AliasState();

    /**
     * The Amazon Resource Name (ARN) identifying your Lambda function alias.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Description of the alias.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Lambda Function name or ARN.
     * 
     */
    @Import(name="functionName")
    private @Nullable Output<String> functionName;

    public Optional<Output<String>> functionName() {
        return Optional.ofNullable(this.functionName);
    }

    /**
     * Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
     * 
     */
    @Import(name="functionVersion")
    private @Nullable Output<String> functionVersion;

    public Optional<Output<String>> functionVersion() {
        return Optional.ofNullable(this.functionVersion);
    }

    /**
     * The ARN to be used for invoking Lambda Function from API Gateway - to be used in `aws.apigateway.Integration`&#39;s `uri`
     * 
     */
    @Import(name="invokeArn")
    private @Nullable Output<String> invokeArn;

    public Optional<Output<String>> invokeArn() {
        return Optional.ofNullable(this.invokeArn);
    }

    /**
     * Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Lambda alias&#39; route configuration settings. Fields documented below
     * 
     */
    @Import(name="routingConfig")
    private @Nullable Output<AliasRoutingConfigGetArgs> routingConfig;

    public Optional<Output<AliasRoutingConfigGetArgs>> routingConfig() {
        return Optional.ofNullable(this.routingConfig);
    }

    private AliasState() {}

    private AliasState(AliasState $) {
        this.arn = $.arn;
        this.description = $.description;
        this.functionName = $.functionName;
        this.functionVersion = $.functionVersion;
        this.invokeArn = $.invokeArn;
        this.name = $.name;
        this.routingConfig = $.routingConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AliasState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AliasState $;

        public Builder() {
            $ = new AliasState();
        }

        public Builder(AliasState defaults) {
            $ = new AliasState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder functionName(@Nullable Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        public Builder functionVersion(@Nullable Output<String> functionVersion) {
            $.functionVersion = functionVersion;
            return this;
        }

        public Builder functionVersion(String functionVersion) {
            return functionVersion(Output.of(functionVersion));
        }

        public Builder invokeArn(@Nullable Output<String> invokeArn) {
            $.invokeArn = invokeArn;
            return this;
        }

        public Builder invokeArn(String invokeArn) {
            return invokeArn(Output.of(invokeArn));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder routingConfig(@Nullable Output<AliasRoutingConfigGetArgs> routingConfig) {
            $.routingConfig = routingConfig;
            return this;
        }

        public Builder routingConfig(AliasRoutingConfigGetArgs routingConfig) {
            return routingConfig(Output.of(routingConfig));
        }

        public AliasState build() {
            return $;
        }
    }

}
