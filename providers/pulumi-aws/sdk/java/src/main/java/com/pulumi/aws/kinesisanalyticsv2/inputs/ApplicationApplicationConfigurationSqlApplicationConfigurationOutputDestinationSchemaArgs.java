// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesisanalyticsv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs Empty = new ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs();

    /**
     * Specifies the format of the records on the output stream. Valid values: `CSV`, `JSON`.
     * 
     */
    @Import(name="recordFormatType", required=true)
      private final Output<String> recordFormatType;

    public Output<String> recordFormatType() {
        return this.recordFormatType;
    }

    public ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs(Output<String> recordFormatType) {
        this.recordFormatType = Objects.requireNonNull(recordFormatType, "expected parameter 'recordFormatType' to be non-null");
    }

    private ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs() {
        this.recordFormatType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> recordFormatType;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.recordFormatType = defaults.recordFormatType;
        }

        public Builder recordFormatType(Output<String> recordFormatType) {
            this.recordFormatType = Objects.requireNonNull(recordFormatType);
            return this;
        }
        public Builder recordFormatType(String recordFormatType) {
            this.recordFormatType = Output.of(Objects.requireNonNull(recordFormatType));
            return this;
        }        public ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs build() {
            return new ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs(recordFormatType);
        }
    }
}
