// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class HoursOfOperationConfigEndTimeGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final HoursOfOperationConfigEndTimeGetArgs Empty = new HoursOfOperationConfigEndTimeGetArgs();

    /**
     * Specifies the hour of closing.
     * 
     */
    @Import(name="hours", required=true)
    private Output<Integer> hours;

    public Output<Integer> hours() {
        return this.hours;
    }

    /**
     * Specifies the minute of closing.
     * 
     */
    @Import(name="minutes", required=true)
    private Output<Integer> minutes;

    public Output<Integer> minutes() {
        return this.minutes;
    }

    private HoursOfOperationConfigEndTimeGetArgs() {}

    private HoursOfOperationConfigEndTimeGetArgs(HoursOfOperationConfigEndTimeGetArgs $) {
        this.hours = $.hours;
        this.minutes = $.minutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HoursOfOperationConfigEndTimeGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HoursOfOperationConfigEndTimeGetArgs $;

        public Builder() {
            $ = new HoursOfOperationConfigEndTimeGetArgs();
        }

        public Builder(HoursOfOperationConfigEndTimeGetArgs defaults) {
            $ = new HoursOfOperationConfigEndTimeGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder hours(Output<Integer> hours) {
            $.hours = hours;
            return this;
        }

        public Builder hours(Integer hours) {
            return hours(Output.of(hours));
        }

        public Builder minutes(Output<Integer> minutes) {
            $.minutes = minutes;
            return this;
        }

        public Builder minutes(Integer minutes) {
            return minutes(Output.of(minutes));
        }

        public HoursOfOperationConfigEndTimeGetArgs build() {
            $.hours = Objects.requireNonNull($.hours, "expected parameter 'hours' to be non-null");
            $.minutes = Objects.requireNonNull($.minutes, "expected parameter 'minutes' to be non-null");
            return $;
        }
    }

}
