// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lambda.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetCodeSigningConfigAllowedPublisher extends com.pulumi.resources.InvokeArgs {

    public static final GetCodeSigningConfigAllowedPublisher Empty = new GetCodeSigningConfigAllowedPublisher();

    /**
     * The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
     * 
     */
    @Import(name="signingProfileVersionArns", required=true)
    private List<String> signingProfileVersionArns;

    public List<String> signingProfileVersionArns() {
        return this.signingProfileVersionArns;
    }

    private GetCodeSigningConfigAllowedPublisher() {}

    private GetCodeSigningConfigAllowedPublisher(GetCodeSigningConfigAllowedPublisher $) {
        this.signingProfileVersionArns = $.signingProfileVersionArns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCodeSigningConfigAllowedPublisher defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCodeSigningConfigAllowedPublisher $;

        public Builder() {
            $ = new GetCodeSigningConfigAllowedPublisher();
        }

        public Builder(GetCodeSigningConfigAllowedPublisher defaults) {
            $ = new GetCodeSigningConfigAllowedPublisher(Objects.requireNonNull(defaults));
        }

        public Builder signingProfileVersionArns(List<String> signingProfileVersionArns) {
            $.signingProfileVersionArns = signingProfileVersionArns;
            return this;
        }

        public Builder signingProfileVersionArns(String... signingProfileVersionArns) {
            return signingProfileVersionArns(List.of(signingProfileVersionArns));
        }

        public GetCodeSigningConfigAllowedPublisher build() {
            $.signingProfileVersionArns = Objects.requireNonNull($.signingProfileVersionArns, "expected parameter 'signingProfileVersionArns' to be non-null");
            return $;
        }
    }

}
