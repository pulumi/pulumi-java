// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetClusterCacheNode extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterCacheNode Empty = new GetClusterCacheNode();

    @Import(name="address", required=true)
    private String address;

    public String address() {
        return this.address;
    }

    /**
     * The Availability Zone for the cache cluster.
     * 
     */
    @Import(name="availabilityZone", required=true)
    private String availabilityZone;

    /**
     * @return The Availability Zone for the cache cluster.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }

    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * The port number on which each of the cache nodes will
     * accept connections.
     * 
     */
    @Import(name="port", required=true)
    private Integer port;

    /**
     * @return The port number on which each of the cache nodes will
     * accept connections.
     * 
     */
    public Integer port() {
        return this.port;
    }

    private GetClusterCacheNode() {}

    private GetClusterCacheNode(GetClusterCacheNode $) {
        this.address = $.address;
        this.availabilityZone = $.availabilityZone;
        this.id = $.id;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterCacheNode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterCacheNode $;

        public Builder() {
            $ = new GetClusterCacheNode();
        }

        public Builder(GetClusterCacheNode defaults) {
            $ = new GetClusterCacheNode(Objects.requireNonNull(defaults));
        }

        public Builder address(String address) {
            $.address = address;
            return this;
        }

        /**
         * @param availabilityZone The Availability Zone for the cache cluster.
         * 
         * @return builder
         * 
         */
        public Builder availabilityZone(String availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param port The port number on which each of the cache nodes will
         * accept connections.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            $.port = port;
            return this;
        }

        public GetClusterCacheNode build() {
            $.address = Objects.requireNonNull($.address, "expected parameter 'address' to be non-null");
            $.availabilityZone = Objects.requireNonNull($.availabilityZone, "expected parameter 'availabilityZone' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            return $;
        }
    }

}
