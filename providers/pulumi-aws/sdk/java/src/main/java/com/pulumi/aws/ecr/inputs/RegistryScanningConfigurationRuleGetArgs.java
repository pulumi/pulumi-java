// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.aws.ecr.inputs.RegistryScanningConfigurationRuleRepositoryFilterGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RegistryScanningConfigurationRuleGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistryScanningConfigurationRuleGetArgs Empty = new RegistryScanningConfigurationRuleGetArgs();

    /**
     * One or more repository filter blocks, containing a `filter` (required string filtering repositories, see pattern regex [here](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_ScanningRepositoryFilter.html)) and a `filter_type` (required string, currently only `WILDCARD` is supported).
     * 
     */
    @Import(name="repositoryFilters", required=true)
      private final Output<List<RegistryScanningConfigurationRuleRepositoryFilterGetArgs>> repositoryFilters;

    public Output<List<RegistryScanningConfigurationRuleRepositoryFilterGetArgs>> repositoryFilters() {
        return this.repositoryFilters;
    }

    /**
     * The frequency that scans are performed at for a private registry. Can be `SCAN_ON_PUSH`, `CONTINUOUS_SCAN`, or `MANUAL`.
     * 
     */
    @Import(name="scanFrequency", required=true)
      private final Output<String> scanFrequency;

    public Output<String> scanFrequency() {
        return this.scanFrequency;
    }

    public RegistryScanningConfigurationRuleGetArgs(
        Output<List<RegistryScanningConfigurationRuleRepositoryFilterGetArgs>> repositoryFilters,
        Output<String> scanFrequency) {
        this.repositoryFilters = Objects.requireNonNull(repositoryFilters, "expected parameter 'repositoryFilters' to be non-null");
        this.scanFrequency = Objects.requireNonNull(scanFrequency, "expected parameter 'scanFrequency' to be non-null");
    }

    private RegistryScanningConfigurationRuleGetArgs() {
        this.repositoryFilters = Codegen.empty();
        this.scanFrequency = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryScanningConfigurationRuleGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<RegistryScanningConfigurationRuleRepositoryFilterGetArgs>> repositoryFilters;
        private Output<String> scanFrequency;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistryScanningConfigurationRuleGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.repositoryFilters = defaults.repositoryFilters;
    	      this.scanFrequency = defaults.scanFrequency;
        }

        public Builder repositoryFilters(Output<List<RegistryScanningConfigurationRuleRepositoryFilterGetArgs>> repositoryFilters) {
            this.repositoryFilters = Objects.requireNonNull(repositoryFilters);
            return this;
        }
        public Builder repositoryFilters(List<RegistryScanningConfigurationRuleRepositoryFilterGetArgs> repositoryFilters) {
            this.repositoryFilters = Output.of(Objects.requireNonNull(repositoryFilters));
            return this;
        }
        public Builder repositoryFilters(RegistryScanningConfigurationRuleRepositoryFilterGetArgs... repositoryFilters) {
            return repositoryFilters(List.of(repositoryFilters));
        }
        public Builder scanFrequency(Output<String> scanFrequency) {
            this.scanFrequency = Objects.requireNonNull(scanFrequency);
            return this;
        }
        public Builder scanFrequency(String scanFrequency) {
            this.scanFrequency = Output.of(Objects.requireNonNull(scanFrequency));
            return this;
        }        public RegistryScanningConfigurationRuleGetArgs build() {
            return new RegistryScanningConfigurationRuleGetArgs(repositoryFilters, scanFrequency);
        }
    }
}
