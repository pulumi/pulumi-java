// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class GroupPolicyAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupPolicyAttachmentArgs Empty = new GroupPolicyAttachmentArgs();

    /**
     * The group the policy should be applied to
     * 
     */
    @Import(name="group", required=true)
      private final Output<String> group;

    public Output<String> group() {
        return this.group;
    }

    /**
     * The ARN of the policy you want to apply
     * 
     */
    @Import(name="policyArn", required=true)
      private final Output<String> policyArn;

    public Output<String> policyArn() {
        return this.policyArn;
    }

    public GroupPolicyAttachmentArgs(
        Output<String> group,
        Output<String> policyArn) {
        this.group = Objects.requireNonNull(group, "expected parameter 'group' to be non-null");
        this.policyArn = Objects.requireNonNull(policyArn, "expected parameter 'policyArn' to be non-null");
    }

    private GroupPolicyAttachmentArgs() {
        this.group = Codegen.empty();
        this.policyArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupPolicyAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> group;
        private Output<String> policyArn;

        public Builder() {
    	      // Empty
        }

        public Builder(GroupPolicyAttachmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.group = defaults.group;
    	      this.policyArn = defaults.policyArn;
        }

        public Builder group(Output<String> group) {
            this.group = Objects.requireNonNull(group);
            return this;
        }
        public Builder policyArn(Output<String> policyArn) {
            this.policyArn = Objects.requireNonNull(policyArn);
            return this;
        }
        public Builder policyArn(String policyArn) {
            this.policyArn = Output.of(Objects.requireNonNull(policyArn));
            return this;
        }        public GroupPolicyAttachmentArgs build() {
            return new GroupPolicyAttachmentArgs(group, policyArn);
        }
    }
}
