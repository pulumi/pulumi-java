// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.inputs;

import com.pulumi.aws.alb.inputs.GetListenerDefaultActionForwardStickiness;
import com.pulumi.aws.alb.inputs.GetListenerDefaultActionForwardTargetGroup;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class GetListenerDefaultActionForward extends com.pulumi.resources.InvokeArgs {

    public static final GetListenerDefaultActionForward Empty = new GetListenerDefaultActionForward();

    @Import(name="stickinesses", required=true)
    private List<GetListenerDefaultActionForwardStickiness> stickinesses;

    public List<GetListenerDefaultActionForwardStickiness> stickinesses() {
        return this.stickinesses;
    }

    @Import(name="targetGroups", required=true)
    private List<GetListenerDefaultActionForwardTargetGroup> targetGroups;

    public List<GetListenerDefaultActionForwardTargetGroup> targetGroups() {
        return this.targetGroups;
    }

    private GetListenerDefaultActionForward() {}

    private GetListenerDefaultActionForward(GetListenerDefaultActionForward $) {
        this.stickinesses = $.stickinesses;
        this.targetGroups = $.targetGroups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerDefaultActionForward defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerDefaultActionForward $;

        public Builder() {
            $ = new GetListenerDefaultActionForward();
        }

        public Builder(GetListenerDefaultActionForward defaults) {
            $ = new GetListenerDefaultActionForward(Objects.requireNonNull(defaults));
        }

        public Builder stickinesses(List<GetListenerDefaultActionForwardStickiness> stickinesses) {
            $.stickinesses = stickinesses;
            return this;
        }

        public Builder stickinesses(GetListenerDefaultActionForwardStickiness... stickinesses) {
            return stickinesses(List.of(stickinesses));
        }

        public Builder targetGroups(List<GetListenerDefaultActionForwardTargetGroup> targetGroups) {
            $.targetGroups = targetGroups;
            return this;
        }

        public Builder targetGroups(GetListenerDefaultActionForwardTargetGroup... targetGroups) {
            return targetGroups(List.of(targetGroups));
        }

        public GetListenerDefaultActionForward build() {
            $.stickinesses = Objects.requireNonNull($.stickinesses, "expected parameter 'stickinesses' to be non-null");
            $.targetGroups = Objects.requireNonNull($.targetGroups, "expected parameter 'targetGroups' to be non-null");
            return $;
        }
    }

}
