// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBucketPolicyResult {
    private final String bucket;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return IAM bucket policy.
     * 
     */
    private final String policy;

    @CustomType.Constructor
    private GetBucketPolicyResult(
        @CustomType.Parameter("bucket") String bucket,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("policy") String policy) {
        this.bucket = bucket;
        this.id = id;
        this.policy = policy;
    }

    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return IAM bucket policy.
     * 
     */
    public String policy() {
        return this.policy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketPolicyResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bucket;
        private String id;
        private String policy;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBucketPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.id = defaults.id;
    	      this.policy = defaults.policy;
        }

        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder policy(String policy) {
            this.policy = Objects.requireNonNull(policy);
            return this;
        }        public GetBucketPolicyResult build() {
            return new GetBucketPolicyResult(bucket, id, policy);
        }
    }
}
