// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.RouteSpecHttpRouteActionGetArgs;
import com.pulumi.aws.appmesh.inputs.RouteSpecHttpRouteMatchGetArgs;
import com.pulumi.aws.appmesh.inputs.RouteSpecHttpRouteRetryPolicyGetArgs;
import com.pulumi.aws.appmesh.inputs.RouteSpecHttpRouteTimeoutGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteSpecHttpRouteGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteSpecHttpRouteGetArgs Empty = new RouteSpecHttpRouteGetArgs();

    /**
     * The action to take if a match is determined.
     * 
     */
    @Import(name="action", required=true)
    private Output<RouteSpecHttpRouteActionGetArgs> action;

    /**
     * @return The action to take if a match is determined.
     * 
     */
    public Output<RouteSpecHttpRouteActionGetArgs> action() {
        return this.action;
    }

    /**
     * The criteria for determining an HTTP request match.
     * 
     */
    @Import(name="match", required=true)
    private Output<RouteSpecHttpRouteMatchGetArgs> match;

    /**
     * @return The criteria for determining an HTTP request match.
     * 
     */
    public Output<RouteSpecHttpRouteMatchGetArgs> match() {
        return this.match;
    }

    /**
     * The retry policy.
     * 
     */
    @Import(name="retryPolicy")
    private @Nullable Output<RouteSpecHttpRouteRetryPolicyGetArgs> retryPolicy;

    /**
     * @return The retry policy.
     * 
     */
    public Optional<Output<RouteSpecHttpRouteRetryPolicyGetArgs>> retryPolicy() {
        return Optional.ofNullable(this.retryPolicy);
    }

    /**
     * The types of timeouts.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<RouteSpecHttpRouteTimeoutGetArgs> timeout;

    /**
     * @return The types of timeouts.
     * 
     */
    public Optional<Output<RouteSpecHttpRouteTimeoutGetArgs>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private RouteSpecHttpRouteGetArgs() {}

    private RouteSpecHttpRouteGetArgs(RouteSpecHttpRouteGetArgs $) {
        this.action = $.action;
        this.match = $.match;
        this.retryPolicy = $.retryPolicy;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteSpecHttpRouteGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteSpecHttpRouteGetArgs $;

        public Builder() {
            $ = new RouteSpecHttpRouteGetArgs();
        }

        public Builder(RouteSpecHttpRouteGetArgs defaults) {
            $ = new RouteSpecHttpRouteGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The action to take if a match is determined.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<RouteSpecHttpRouteActionGetArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The action to take if a match is determined.
         * 
         * @return builder
         * 
         */
        public Builder action(RouteSpecHttpRouteActionGetArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param match The criteria for determining an HTTP request match.
         * 
         * @return builder
         * 
         */
        public Builder match(Output<RouteSpecHttpRouteMatchGetArgs> match) {
            $.match = match;
            return this;
        }

        /**
         * @param match The criteria for determining an HTTP request match.
         * 
         * @return builder
         * 
         */
        public Builder match(RouteSpecHttpRouteMatchGetArgs match) {
            return match(Output.of(match));
        }

        /**
         * @param retryPolicy The retry policy.
         * 
         * @return builder
         * 
         */
        public Builder retryPolicy(@Nullable Output<RouteSpecHttpRouteRetryPolicyGetArgs> retryPolicy) {
            $.retryPolicy = retryPolicy;
            return this;
        }

        /**
         * @param retryPolicy The retry policy.
         * 
         * @return builder
         * 
         */
        public Builder retryPolicy(RouteSpecHttpRouteRetryPolicyGetArgs retryPolicy) {
            return retryPolicy(Output.of(retryPolicy));
        }

        /**
         * @param timeout The types of timeouts.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<RouteSpecHttpRouteTimeoutGetArgs> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout The types of timeouts.
         * 
         * @return builder
         * 
         */
        public Builder timeout(RouteSpecHttpRouteTimeoutGetArgs timeout) {
            return timeout(Output.of(timeout));
        }

        public RouteSpecHttpRouteGetArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.match = Objects.requireNonNull($.match, "expected parameter 'match' to be non-null");
            return $;
        }
    }

}
