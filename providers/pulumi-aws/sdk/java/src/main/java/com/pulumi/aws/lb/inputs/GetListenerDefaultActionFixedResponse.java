// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lb.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetListenerDefaultActionFixedResponse extends com.pulumi.resources.InvokeArgs {

    public static final GetListenerDefaultActionFixedResponse Empty = new GetListenerDefaultActionFixedResponse();

    @Import(name="contentType", required=true)
    private String contentType;

    public String contentType() {
        return this.contentType;
    }

    @Import(name="messageBody", required=true)
    private String messageBody;

    public String messageBody() {
        return this.messageBody;
    }

    @Import(name="statusCode", required=true)
    private String statusCode;

    public String statusCode() {
        return this.statusCode;
    }

    private GetListenerDefaultActionFixedResponse() {}

    private GetListenerDefaultActionFixedResponse(GetListenerDefaultActionFixedResponse $) {
        this.contentType = $.contentType;
        this.messageBody = $.messageBody;
        this.statusCode = $.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerDefaultActionFixedResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerDefaultActionFixedResponse $;

        public Builder() {
            $ = new GetListenerDefaultActionFixedResponse();
        }

        public Builder(GetListenerDefaultActionFixedResponse defaults) {
            $ = new GetListenerDefaultActionFixedResponse(Objects.requireNonNull(defaults));
        }

        public Builder contentType(String contentType) {
            $.contentType = contentType;
            return this;
        }

        public Builder messageBody(String messageBody) {
            $.messageBody = messageBody;
            return this;
        }

        public Builder statusCode(String statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public GetListenerDefaultActionFixedResponse build() {
            $.contentType = Objects.requireNonNull($.contentType, "expected parameter 'contentType' to be non-null");
            $.messageBody = Objects.requireNonNull($.messageBody, "expected parameter 'messageBody' to be non-null");
            $.statusCode = Objects.requireNonNull($.statusCode, "expected parameter 'statusCode' to be non-null");
            return $;
        }
    }

}
