// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.inputs;

import com.pulumi.aws.ssm.inputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigGetArgs;
import com.pulumi.aws.ssm.inputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigGetArgs;
import com.pulumi.aws.ssm.inputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs Empty = new MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs();

    /**
     * Configuration options for sending command output to CloudWatch Logs. Documented below.
     * 
     */
    @Import(name="cloudwatchConfig")
    private @Nullable Output<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigGetArgs> cloudwatchConfig;

    public Optional<Output<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigGetArgs>> cloudwatchConfig() {
        return Optional.ofNullable(this.cloudwatchConfig);
    }

    /**
     * Information about the command(s) to execute.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
     * 
     */
    @Import(name="documentHash")
    private @Nullable Output<String> documentHash;

    public Optional<Output<String>> documentHash() {
        return Optional.ofNullable(this.documentHash);
    }

    /**
     * SHA-256 or SHA-1. SHA-1 hashes have been deprecated. Valid values: `Sha256` and `Sha1`
     * 
     */
    @Import(name="documentHashType")
    private @Nullable Output<String> documentHashType;

    public Optional<Output<String>> documentHashType() {
        return Optional.ofNullable(this.documentHashType);
    }

    /**
     * The version of an Automation document to use during task execution.
     * 
     */
    @Import(name="documentVersion")
    private @Nullable Output<String> documentVersion;

    public Optional<Output<String>> documentVersion() {
        return Optional.ofNullable(this.documentVersion);
    }

    /**
     * Configurations for sending notifications about command status changes on a per-instance basis. Documented below.
     * 
     */
    @Import(name="notificationConfig")
    private @Nullable Output<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigGetArgs> notificationConfig;

    public Optional<Output<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigGetArgs>> notificationConfig() {
        return Optional.ofNullable(this.notificationConfig);
    }

    /**
     * The name of the Amazon S3 bucket.
     * 
     */
    @Import(name="outputS3Bucket")
    private @Nullable Output<String> outputS3Bucket;

    public Optional<Output<String>> outputS3Bucket() {
        return Optional.ofNullable(this.outputS3Bucket);
    }

    /**
     * The Amazon S3 bucket subfolder.
     * 
     */
    @Import(name="outputS3KeyPrefix")
    private @Nullable Output<String> outputS3KeyPrefix;

    public Optional<Output<String>> outputS3KeyPrefix() {
        return Optional.ofNullable(this.outputS3KeyPrefix);
    }

    /**
     * The parameters for the RUN_COMMAND task execution. Documented below.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterGetArgs>> parameters;

    public Optional<Output<List<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterGetArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The IAM service role to assume during task execution.
     * 
     */
    @Import(name="serviceRoleArn")
    private @Nullable Output<String> serviceRoleArn;

    public Optional<Output<String>> serviceRoleArn() {
        return Optional.ofNullable(this.serviceRoleArn);
    }

    /**
     * If this time is reached and the command has not already started executing, it doesn&#39;t run.
     * 
     */
    @Import(name="timeoutSeconds")
    private @Nullable Output<Integer> timeoutSeconds;

    public Optional<Output<Integer>> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    private MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs() {}

    private MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs $) {
        this.cloudwatchConfig = $.cloudwatchConfig;
        this.comment = $.comment;
        this.documentHash = $.documentHash;
        this.documentHashType = $.documentHashType;
        this.documentVersion = $.documentVersion;
        this.notificationConfig = $.notificationConfig;
        this.outputS3Bucket = $.outputS3Bucket;
        this.outputS3KeyPrefix = $.outputS3KeyPrefix;
        this.parameters = $.parameters;
        this.serviceRoleArn = $.serviceRoleArn;
        this.timeoutSeconds = $.timeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs $;

        public Builder() {
            $ = new MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs();
        }

        public Builder(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs defaults) {
            $ = new MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudwatchConfig(@Nullable Output<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigGetArgs> cloudwatchConfig) {
            $.cloudwatchConfig = cloudwatchConfig;
            return this;
        }

        public Builder cloudwatchConfig(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigGetArgs cloudwatchConfig) {
            return cloudwatchConfig(Output.of(cloudwatchConfig));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder documentHash(@Nullable Output<String> documentHash) {
            $.documentHash = documentHash;
            return this;
        }

        public Builder documentHash(String documentHash) {
            return documentHash(Output.of(documentHash));
        }

        public Builder documentHashType(@Nullable Output<String> documentHashType) {
            $.documentHashType = documentHashType;
            return this;
        }

        public Builder documentHashType(String documentHashType) {
            return documentHashType(Output.of(documentHashType));
        }

        public Builder documentVersion(@Nullable Output<String> documentVersion) {
            $.documentVersion = documentVersion;
            return this;
        }

        public Builder documentVersion(String documentVersion) {
            return documentVersion(Output.of(documentVersion));
        }

        public Builder notificationConfig(@Nullable Output<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigGetArgs> notificationConfig) {
            $.notificationConfig = notificationConfig;
            return this;
        }

        public Builder notificationConfig(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigGetArgs notificationConfig) {
            return notificationConfig(Output.of(notificationConfig));
        }

        public Builder outputS3Bucket(@Nullable Output<String> outputS3Bucket) {
            $.outputS3Bucket = outputS3Bucket;
            return this;
        }

        public Builder outputS3Bucket(String outputS3Bucket) {
            return outputS3Bucket(Output.of(outputS3Bucket));
        }

        public Builder outputS3KeyPrefix(@Nullable Output<String> outputS3KeyPrefix) {
            $.outputS3KeyPrefix = outputS3KeyPrefix;
            return this;
        }

        public Builder outputS3KeyPrefix(String outputS3KeyPrefix) {
            return outputS3KeyPrefix(Output.of(outputS3KeyPrefix));
        }

        public Builder parameters(@Nullable Output<List<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterGetArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(List<MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterGetArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        public Builder parameters(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterGetArgs... parameters) {
            return parameters(List.of(parameters));
        }

        public Builder serviceRoleArn(@Nullable Output<String> serviceRoleArn) {
            $.serviceRoleArn = serviceRoleArn;
            return this;
        }

        public Builder serviceRoleArn(String serviceRoleArn) {
            return serviceRoleArn(Output.of(serviceRoleArn));
        }

        public Builder timeoutSeconds(@Nullable Output<Integer> timeoutSeconds) {
            $.timeoutSeconds = timeoutSeconds;
            return this;
        }

        public Builder timeoutSeconds(Integer timeoutSeconds) {
            return timeoutSeconds(Output.of(timeoutSeconds));
        }

        public MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersGetArgs build() {
            return $;
        }
    }

}
