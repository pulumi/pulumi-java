// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.organizations.inputs;

import com.pulumi.aws.organizations.inputs.GetOrganizationRootPolicyType;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetOrganizationRoot extends com.pulumi.resources.InvokeArgs {

    public static final GetOrganizationRoot Empty = new GetOrganizationRoot();

    /**
     * ARN of the root
     * 
     */
    @Import(name="arn", required=true)
    private String arn;

    public String arn() {
        return this.arn;
    }

    /**
     * Identifier of the root
     * 
     */
    @Import(name="id", required=true)
    private String id;

    public String id() {
        return this.id;
    }

    /**
     * The name of the policy type
     * 
     */
    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    /**
     * List of policy types enabled for this root. All elements have these attributes:
     * 
     */
    @Import(name="policyTypes", required=true)
    private List<GetOrganizationRootPolicyType> policyTypes;

    public List<GetOrganizationRootPolicyType> policyTypes() {
        return this.policyTypes;
    }

    private GetOrganizationRoot() {}

    private GetOrganizationRoot(GetOrganizationRoot $) {
        this.arn = $.arn;
        this.id = $.id;
        this.name = $.name;
        this.policyTypes = $.policyTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrganizationRoot defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrganizationRoot $;

        public Builder() {
            $ = new GetOrganizationRoot();
        }

        public Builder(GetOrganizationRoot defaults) {
            $ = new GetOrganizationRoot(Objects.requireNonNull(defaults));
        }

        public Builder arn(String arn) {
            $.arn = arn;
            return this;
        }

        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder policyTypes(List<GetOrganizationRootPolicyType> policyTypes) {
            $.policyTypes = policyTypes;
            return this;
        }

        public Builder policyTypes(GetOrganizationRootPolicyType... policyTypes) {
            return policyTypes(List.of(policyTypes));
        }

        public GetOrganizationRoot build() {
            $.arn = Objects.requireNonNull($.arn, "expected parameter 'arn' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.policyTypes = Objects.requireNonNull($.policyTypes, "expected parameter 'policyTypes' to be non-null");
            return $;
        }
    }

}
