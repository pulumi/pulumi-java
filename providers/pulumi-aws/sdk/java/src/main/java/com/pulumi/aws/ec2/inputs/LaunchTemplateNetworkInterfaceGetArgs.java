// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LaunchTemplateNetworkInterfaceGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final LaunchTemplateNetworkInterfaceGetArgs Empty = new LaunchTemplateNetworkInterfaceGetArgs();

    /**
     * Associate a Carrier IP address with `eth0` for a new network interface. Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. Boolean value.
     * 
     */
    @Import(name="associateCarrierIpAddress")
      private final @Nullable Output<String> associateCarrierIpAddress;

    public Output<String> associateCarrierIpAddress() {
        return this.associateCarrierIpAddress == null ? Codegen.empty() : this.associateCarrierIpAddress;
    }

    /**
     * Associate a public ip address with the network interface.  Boolean value.
     * 
     */
    @Import(name="associatePublicIpAddress")
      private final @Nullable Output<String> associatePublicIpAddress;

    public Output<String> associatePublicIpAddress() {
        return this.associatePublicIpAddress == null ? Codegen.empty() : this.associatePublicIpAddress;
    }

    /**
     * Whether the network interface should be destroyed on instance termination. Defaults to `false` if not set.
     * 
     */
    @Import(name="deleteOnTermination")
      private final @Nullable Output<String> deleteOnTermination;

    public Output<String> deleteOnTermination() {
        return this.deleteOnTermination == null ? Codegen.empty() : this.deleteOnTermination;
    }

    /**
     * Description of the network interface.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The integer index of the network interface attachment.
     * 
     */
    @Import(name="deviceIndex")
      private final @Nullable Output<Integer> deviceIndex;

    public Output<Integer> deviceIndex() {
        return this.deviceIndex == null ? Codegen.empty() : this.deviceIndex;
    }

    /**
     * The type of network interface. To create an Elastic Fabric Adapter (EFA), specify `efa`.
     * 
     */
    @Import(name="interfaceType")
      private final @Nullable Output<String> interfaceType;

    public Output<String> interfaceType() {
        return this.interfaceType == null ? Codegen.empty() : this.interfaceType;
    }

    /**
     * The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4_addresses`
     * 
     */
    @Import(name="ipv4AddressCount")
      private final @Nullable Output<Integer> ipv4AddressCount;

    public Output<Integer> ipv4AddressCount() {
        return this.ipv4AddressCount == null ? Codegen.empty() : this.ipv4AddressCount;
    }

    /**
     * One or more private IPv4 addresses to associate. Conflicts with `ipv4_address_count`
     * 
     */
    @Import(name="ipv4Addresses")
      private final @Nullable Output<List<String>> ipv4Addresses;

    public Output<List<String>> ipv4Addresses() {
        return this.ipv4Addresses == null ? Codegen.empty() : this.ipv4Addresses;
    }

    /**
     * The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6_addresses`
     * 
     */
    @Import(name="ipv6AddressCount")
      private final @Nullable Output<Integer> ipv6AddressCount;

    public Output<Integer> ipv6AddressCount() {
        return this.ipv6AddressCount == null ? Codegen.empty() : this.ipv6AddressCount;
    }

    /**
     * One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6_address_count`
     * 
     */
    @Import(name="ipv6Addresses")
      private final @Nullable Output<List<String>> ipv6Addresses;

    public Output<List<String>> ipv6Addresses() {
        return this.ipv6Addresses == null ? Codegen.empty() : this.ipv6Addresses;
    }

    /**
     * The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
     * 
     */
    @Import(name="networkCardIndex")
      private final @Nullable Output<Integer> networkCardIndex;

    public Output<Integer> networkCardIndex() {
        return this.networkCardIndex == null ? Codegen.empty() : this.networkCardIndex;
    }

    /**
     * The ID of the network interface to attach.
     * 
     */
    @Import(name="networkInterfaceId")
      private final @Nullable Output<String> networkInterfaceId;

    public Output<String> networkInterfaceId() {
        return this.networkInterfaceId == null ? Codegen.empty() : this.networkInterfaceId;
    }

    /**
     * The primary private IPv4 address.
     * 
     */
    @Import(name="privateIpAddress")
      private final @Nullable Output<String> privateIpAddress;

    public Output<String> privateIpAddress() {
        return this.privateIpAddress == null ? Codegen.empty() : this.privateIpAddress;
    }

    /**
     * A list of security group IDs to associate.
     * 
     */
    @Import(name="securityGroups")
      private final @Nullable Output<List<String>> securityGroups;

    public Output<List<String>> securityGroups() {
        return this.securityGroups == null ? Codegen.empty() : this.securityGroups;
    }

    /**
     * The VPC Subnet ID to associate.
     * 
     */
    @Import(name="subnetId")
      private final @Nullable Output<String> subnetId;

    public Output<String> subnetId() {
        return this.subnetId == null ? Codegen.empty() : this.subnetId;
    }

    public LaunchTemplateNetworkInterfaceGetArgs(
        @Nullable Output<String> associateCarrierIpAddress,
        @Nullable Output<String> associatePublicIpAddress,
        @Nullable Output<String> deleteOnTermination,
        @Nullable Output<String> description,
        @Nullable Output<Integer> deviceIndex,
        @Nullable Output<String> interfaceType,
        @Nullable Output<Integer> ipv4AddressCount,
        @Nullable Output<List<String>> ipv4Addresses,
        @Nullable Output<Integer> ipv6AddressCount,
        @Nullable Output<List<String>> ipv6Addresses,
        @Nullable Output<Integer> networkCardIndex,
        @Nullable Output<String> networkInterfaceId,
        @Nullable Output<String> privateIpAddress,
        @Nullable Output<List<String>> securityGroups,
        @Nullable Output<String> subnetId) {
        this.associateCarrierIpAddress = associateCarrierIpAddress;
        this.associatePublicIpAddress = associatePublicIpAddress;
        this.deleteOnTermination = deleteOnTermination;
        this.description = description;
        this.deviceIndex = deviceIndex;
        this.interfaceType = interfaceType;
        this.ipv4AddressCount = ipv4AddressCount;
        this.ipv4Addresses = ipv4Addresses;
        this.ipv6AddressCount = ipv6AddressCount;
        this.ipv6Addresses = ipv6Addresses;
        this.networkCardIndex = networkCardIndex;
        this.networkInterfaceId = networkInterfaceId;
        this.privateIpAddress = privateIpAddress;
        this.securityGroups = securityGroups;
        this.subnetId = subnetId;
    }

    private LaunchTemplateNetworkInterfaceGetArgs() {
        this.associateCarrierIpAddress = Codegen.empty();
        this.associatePublicIpAddress = Codegen.empty();
        this.deleteOnTermination = Codegen.empty();
        this.description = Codegen.empty();
        this.deviceIndex = Codegen.empty();
        this.interfaceType = Codegen.empty();
        this.ipv4AddressCount = Codegen.empty();
        this.ipv4Addresses = Codegen.empty();
        this.ipv6AddressCount = Codegen.empty();
        this.ipv6Addresses = Codegen.empty();
        this.networkCardIndex = Codegen.empty();
        this.networkInterfaceId = Codegen.empty();
        this.privateIpAddress = Codegen.empty();
        this.securityGroups = Codegen.empty();
        this.subnetId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LaunchTemplateNetworkInterfaceGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> associateCarrierIpAddress;
        private @Nullable Output<String> associatePublicIpAddress;
        private @Nullable Output<String> deleteOnTermination;
        private @Nullable Output<String> description;
        private @Nullable Output<Integer> deviceIndex;
        private @Nullable Output<String> interfaceType;
        private @Nullable Output<Integer> ipv4AddressCount;
        private @Nullable Output<List<String>> ipv4Addresses;
        private @Nullable Output<Integer> ipv6AddressCount;
        private @Nullable Output<List<String>> ipv6Addresses;
        private @Nullable Output<Integer> networkCardIndex;
        private @Nullable Output<String> networkInterfaceId;
        private @Nullable Output<String> privateIpAddress;
        private @Nullable Output<List<String>> securityGroups;
        private @Nullable Output<String> subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(LaunchTemplateNetworkInterfaceGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associateCarrierIpAddress = defaults.associateCarrierIpAddress;
    	      this.associatePublicIpAddress = defaults.associatePublicIpAddress;
    	      this.deleteOnTermination = defaults.deleteOnTermination;
    	      this.description = defaults.description;
    	      this.deviceIndex = defaults.deviceIndex;
    	      this.interfaceType = defaults.interfaceType;
    	      this.ipv4AddressCount = defaults.ipv4AddressCount;
    	      this.ipv4Addresses = defaults.ipv4Addresses;
    	      this.ipv6AddressCount = defaults.ipv6AddressCount;
    	      this.ipv6Addresses = defaults.ipv6Addresses;
    	      this.networkCardIndex = defaults.networkCardIndex;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.securityGroups = defaults.securityGroups;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder associateCarrierIpAddress(@Nullable Output<String> associateCarrierIpAddress) {
            this.associateCarrierIpAddress = associateCarrierIpAddress;
            return this;
        }
        public Builder associateCarrierIpAddress(@Nullable String associateCarrierIpAddress) {
            this.associateCarrierIpAddress = Codegen.ofNullable(associateCarrierIpAddress);
            return this;
        }
        public Builder associatePublicIpAddress(@Nullable Output<String> associatePublicIpAddress) {
            this.associatePublicIpAddress = associatePublicIpAddress;
            return this;
        }
        public Builder associatePublicIpAddress(@Nullable String associatePublicIpAddress) {
            this.associatePublicIpAddress = Codegen.ofNullable(associatePublicIpAddress);
            return this;
        }
        public Builder deleteOnTermination(@Nullable Output<String> deleteOnTermination) {
            this.deleteOnTermination = deleteOnTermination;
            return this;
        }
        public Builder deleteOnTermination(@Nullable String deleteOnTermination) {
            this.deleteOnTermination = Codegen.ofNullable(deleteOnTermination);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder deviceIndex(@Nullable Output<Integer> deviceIndex) {
            this.deviceIndex = deviceIndex;
            return this;
        }
        public Builder deviceIndex(@Nullable Integer deviceIndex) {
            this.deviceIndex = Codegen.ofNullable(deviceIndex);
            return this;
        }
        public Builder interfaceType(@Nullable Output<String> interfaceType) {
            this.interfaceType = interfaceType;
            return this;
        }
        public Builder interfaceType(@Nullable String interfaceType) {
            this.interfaceType = Codegen.ofNullable(interfaceType);
            return this;
        }
        public Builder ipv4AddressCount(@Nullable Output<Integer> ipv4AddressCount) {
            this.ipv4AddressCount = ipv4AddressCount;
            return this;
        }
        public Builder ipv4AddressCount(@Nullable Integer ipv4AddressCount) {
            this.ipv4AddressCount = Codegen.ofNullable(ipv4AddressCount);
            return this;
        }
        public Builder ipv4Addresses(@Nullable Output<List<String>> ipv4Addresses) {
            this.ipv4Addresses = ipv4Addresses;
            return this;
        }
        public Builder ipv4Addresses(@Nullable List<String> ipv4Addresses) {
            this.ipv4Addresses = Codegen.ofNullable(ipv4Addresses);
            return this;
        }
        public Builder ipv4Addresses(String... ipv4Addresses) {
            return ipv4Addresses(List.of(ipv4Addresses));
        }
        public Builder ipv6AddressCount(@Nullable Output<Integer> ipv6AddressCount) {
            this.ipv6AddressCount = ipv6AddressCount;
            return this;
        }
        public Builder ipv6AddressCount(@Nullable Integer ipv6AddressCount) {
            this.ipv6AddressCount = Codegen.ofNullable(ipv6AddressCount);
            return this;
        }
        public Builder ipv6Addresses(@Nullable Output<List<String>> ipv6Addresses) {
            this.ipv6Addresses = ipv6Addresses;
            return this;
        }
        public Builder ipv6Addresses(@Nullable List<String> ipv6Addresses) {
            this.ipv6Addresses = Codegen.ofNullable(ipv6Addresses);
            return this;
        }
        public Builder ipv6Addresses(String... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }
        public Builder networkCardIndex(@Nullable Output<Integer> networkCardIndex) {
            this.networkCardIndex = networkCardIndex;
            return this;
        }
        public Builder networkCardIndex(@Nullable Integer networkCardIndex) {
            this.networkCardIndex = Codegen.ofNullable(networkCardIndex);
            return this;
        }
        public Builder networkInterfaceId(@Nullable Output<String> networkInterfaceId) {
            this.networkInterfaceId = networkInterfaceId;
            return this;
        }
        public Builder networkInterfaceId(@Nullable String networkInterfaceId) {
            this.networkInterfaceId = Codegen.ofNullable(networkInterfaceId);
            return this;
        }
        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }
        public Builder privateIpAddress(@Nullable String privateIpAddress) {
            this.privateIpAddress = Codegen.ofNullable(privateIpAddress);
            return this;
        }
        public Builder securityGroups(@Nullable Output<List<String>> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = Codegen.ofNullable(securityGroups);
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        public Builder subnetId(@Nullable Output<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = Codegen.ofNullable(subnetId);
            return this;
        }        public LaunchTemplateNetworkInterfaceGetArgs build() {
            return new LaunchTemplateNetworkInterfaceGetArgs(associateCarrierIpAddress, associatePublicIpAddress, deleteOnTermination, description, deviceIndex, interfaceType, ipv4AddressCount, ipv4Addresses, ipv6AddressCount, ipv6Addresses, networkCardIndex, networkInterfaceId, privateIpAddress, securityGroups, subnetId);
        }
    }
}
