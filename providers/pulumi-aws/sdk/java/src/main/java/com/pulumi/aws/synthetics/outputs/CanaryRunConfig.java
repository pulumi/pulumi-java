// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.synthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CanaryRunConfig {
    /**
     * Whether this canary is to use active AWS X-Ray tracing when it runs. You can enable active tracing only for canaries that use version syn-nodejs-2.0 or later for their canary runtime.
     * 
     */
    private final @Nullable Boolean activeTracing;
    /**
     * Maximum amount of memory available to the canary while it is running, in MB. The value you specify must be a multiple of 64.
     * 
     */
    private final @Nullable Integer memoryInMb;
    /**
     * Number of seconds the canary is allowed to run before it must stop. If you omit this field, the frequency of the canary is used, up to a maximum of 840 (14 minutes).
     * 
     */
    private final @Nullable Integer timeoutInSeconds;

    @CustomType.Constructor
    private CanaryRunConfig(
        @CustomType.Parameter("activeTracing") @Nullable Boolean activeTracing,
        @CustomType.Parameter("memoryInMb") @Nullable Integer memoryInMb,
        @CustomType.Parameter("timeoutInSeconds") @Nullable Integer timeoutInSeconds) {
        this.activeTracing = activeTracing;
        this.memoryInMb = memoryInMb;
        this.timeoutInSeconds = timeoutInSeconds;
    }

    /**
     * Whether this canary is to use active AWS X-Ray tracing when it runs. You can enable active tracing only for canaries that use version syn-nodejs-2.0 or later for their canary runtime.
     * 
    */
    public Optional<Boolean> activeTracing() {
        return Optional.ofNullable(this.activeTracing);
    }
    /**
     * Maximum amount of memory available to the canary while it is running, in MB. The value you specify must be a multiple of 64.
     * 
    */
    public Optional<Integer> memoryInMb() {
        return Optional.ofNullable(this.memoryInMb);
    }
    /**
     * Number of seconds the canary is allowed to run before it must stop. If you omit this field, the frequency of the canary is used, up to a maximum of 840 (14 minutes).
     * 
    */
    public Optional<Integer> timeoutInSeconds() {
        return Optional.ofNullable(this.timeoutInSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CanaryRunConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean activeTracing;
        private @Nullable Integer memoryInMb;
        private @Nullable Integer timeoutInSeconds;

        public Builder() {
    	      // Empty
        }

        public Builder(CanaryRunConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeTracing = defaults.activeTracing;
    	      this.memoryInMb = defaults.memoryInMb;
    	      this.timeoutInSeconds = defaults.timeoutInSeconds;
        }

        public Builder activeTracing(@Nullable Boolean activeTracing) {
            this.activeTracing = activeTracing;
            return this;
        }
        public Builder memoryInMb(@Nullable Integer memoryInMb) {
            this.memoryInMb = memoryInMb;
            return this;
        }
        public Builder timeoutInSeconds(@Nullable Integer timeoutInSeconds) {
            this.timeoutInSeconds = timeoutInSeconds;
            return this;
        }        public CanaryRunConfig build() {
            return new CanaryRunConfig(activeTracing, memoryInMb, timeoutInSeconds);
        }
    }
}
