// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.docdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetOrderableDbInstanceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrderableDbInstanceArgs Empty = new GetOrderableDbInstanceArgs();

    /**
     * DB engine. Default: `docdb`
     * 
     */
    @Import(name="engine")
    private Output</* @Nullable */ String> engine;

    /**
     * @return DB engine. Default: `docdb`
     * 
     */
    public Output</* @Nullable */ String> engine() {
        return this.engine;
    }

    /**
     * Version of the DB engine.
     * 
     */
    @Import(name="engineVersion")
    private Output</* @Nullable */ String> engineVersion;

    /**
     * @return Version of the DB engine.
     * 
     */
    public Output</* @Nullable */ String> engineVersion() {
        return this.engineVersion;
    }

    /**
     * DB instance class. Examples of classes are `db.r5.12xlarge`, `db.r5.24xlarge`, `db.r5.2xlarge`, `db.r5.4xlarge`, `db.r5.large`, `db.r5.xlarge`, and `db.t3.medium`. (Conflicts with `preferred_instance_classes`.)
     * 
     */
    @Import(name="instanceClass")
    private Output</* @Nullable */ String> instanceClass;

    /**
     * @return DB instance class. Examples of classes are `db.r5.12xlarge`, `db.r5.24xlarge`, `db.r5.2xlarge`, `db.r5.4xlarge`, `db.r5.large`, `db.r5.xlarge`, and `db.t3.medium`. (Conflicts with `preferred_instance_classes`.)
     * 
     */
    public Output</* @Nullable */ String> instanceClass() {
        return this.instanceClass;
    }

    /**
     * License model. Default: `na`
     * 
     */
    @Import(name="licenseModel")
    private Output</* @Nullable */ String> licenseModel;

    /**
     * @return License model. Default: `na`
     * 
     */
    public Output</* @Nullable */ String> licenseModel() {
        return this.licenseModel;
    }

    /**
     * Ordered list of preferred DocumentDB DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. (Conflicts with `instance_class`.)
     * 
     */
    @Import(name="preferredInstanceClasses")
    private Output</* @Nullable */ List<String>> preferredInstanceClasses;

    /**
     * @return Ordered list of preferred DocumentDB DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. (Conflicts with `instance_class`.)
     * 
     */
    public Output</* @Nullable */ List<String>> preferredInstanceClasses() {
        return this.preferredInstanceClasses;
    }

    /**
     * Enable to show only VPC.
     * 
     */
    @Import(name="vpc")
    private Output</* @Nullable */ Boolean> vpc;

    /**
     * @return Enable to show only VPC.
     * 
     */
    public Output</* @Nullable */ Boolean> vpc() {
        return this.vpc;
    }

    private GetOrderableDbInstanceArgs() {}

    private GetOrderableDbInstanceArgs(GetOrderableDbInstanceArgs $) {
        this.engine = $.engine;
        this.engineVersion = $.engineVersion;
        this.instanceClass = $.instanceClass;
        this.licenseModel = $.licenseModel;
        this.preferredInstanceClasses = $.preferredInstanceClasses;
        this.vpc = $.vpc;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrderableDbInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrderableDbInstanceArgs $;

        public Builder() {
            $ = new GetOrderableDbInstanceArgs();
        }

        public Builder(GetOrderableDbInstanceArgs defaults) {
            $ = new GetOrderableDbInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param engine DB engine. Default: `docdb`
         * 
         * @return builder
         * 
         */
        public Builder engine(Output</* @Nullable */ String> engine) {
            $.engine = engine;
            return this;
        }

        /**
         * @param engine DB engine. Default: `docdb`
         * 
         * @return builder
         * 
         */
        public Builder engine(@Nullable String engine) {
            return engine(Output.of(engine));
        }

        /**
         * @param engineVersion Version of the DB engine.
         * 
         * @return builder
         * 
         */
        public Builder engineVersion(Output</* @Nullable */ String> engineVersion) {
            $.engineVersion = engineVersion;
            return this;
        }

        /**
         * @param engineVersion Version of the DB engine.
         * 
         * @return builder
         * 
         */
        public Builder engineVersion(@Nullable String engineVersion) {
            return engineVersion(Output.of(engineVersion));
        }

        /**
         * @param instanceClass DB instance class. Examples of classes are `db.r5.12xlarge`, `db.r5.24xlarge`, `db.r5.2xlarge`, `db.r5.4xlarge`, `db.r5.large`, `db.r5.xlarge`, and `db.t3.medium`. (Conflicts with `preferred_instance_classes`.)
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(Output</* @Nullable */ String> instanceClass) {
            $.instanceClass = instanceClass;
            return this;
        }

        /**
         * @param instanceClass DB instance class. Examples of classes are `db.r5.12xlarge`, `db.r5.24xlarge`, `db.r5.2xlarge`, `db.r5.4xlarge`, `db.r5.large`, `db.r5.xlarge`, and `db.t3.medium`. (Conflicts with `preferred_instance_classes`.)
         * 
         * @return builder
         * 
         */
        public Builder instanceClass(@Nullable String instanceClass) {
            return instanceClass(Output.of(instanceClass));
        }

        /**
         * @param licenseModel License model. Default: `na`
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(Output</* @Nullable */ String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel License model. Default: `na`
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(@Nullable String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param preferredInstanceClasses Ordered list of preferred DocumentDB DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. (Conflicts with `instance_class`.)
         * 
         * @return builder
         * 
         */
        public Builder preferredInstanceClasses(Output</* @Nullable */ List<String>> preferredInstanceClasses) {
            $.preferredInstanceClasses = preferredInstanceClasses;
            return this;
        }

        /**
         * @param preferredInstanceClasses Ordered list of preferred DocumentDB DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. (Conflicts with `instance_class`.)
         * 
         * @return builder
         * 
         */
        public Builder preferredInstanceClasses(@Nullable List<String> preferredInstanceClasses) {
            return preferredInstanceClasses(Output.of(preferredInstanceClasses));
        }

        /**
         * @param preferredInstanceClasses Ordered list of preferred DocumentDB DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. (Conflicts with `instance_class`.)
         * 
         * @return builder
         * 
         */
        public Builder preferredInstanceClasses(String... preferredInstanceClasses) {
            return preferredInstanceClasses(List.of(preferredInstanceClasses));
        }

        /**
         * @param vpc Enable to show only VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpc(Output</* @Nullable */ Boolean> vpc) {
            $.vpc = vpc;
            return this;
        }

        /**
         * @param vpc Enable to show only VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpc(@Nullable Boolean vpc) {
            return vpc(Output.of(vpc));
        }

        public GetOrderableDbInstanceArgs build() {
            return $;
        }
    }

}
