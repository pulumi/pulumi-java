// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codedeploy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DeploymentGroupTriggerConfiguration {
    /**
     * @return The event type or types for which notifications are triggered. Some values that are supported: `DeploymentStart`, `DeploymentSuccess`, `DeploymentFailure`, `DeploymentStop`, `DeploymentRollback`, `InstanceStart`, `InstanceSuccess`, `InstanceFailure`.  See [the CodeDeploy documentation](http://docs.aws.amazon.com/codedeploy/latest/userguide/monitoring-sns-event-notifications-create-trigger.html) for all possible values.
     * 
     */
    private final List<String> triggerEvents;
    /**
     * @return The name of the notification trigger.
     * 
     */
    private final String triggerName;
    /**
     * @return The ARN of the SNS topic through which notifications are sent.
     * 
     */
    private final String triggerTargetArn;

    @CustomType.Constructor
    private DeploymentGroupTriggerConfiguration(
        @CustomType.Parameter("triggerEvents") List<String> triggerEvents,
        @CustomType.Parameter("triggerName") String triggerName,
        @CustomType.Parameter("triggerTargetArn") String triggerTargetArn) {
        this.triggerEvents = triggerEvents;
        this.triggerName = triggerName;
        this.triggerTargetArn = triggerTargetArn;
    }

    /**
     * @return The event type or types for which notifications are triggered. Some values that are supported: `DeploymentStart`, `DeploymentSuccess`, `DeploymentFailure`, `DeploymentStop`, `DeploymentRollback`, `InstanceStart`, `InstanceSuccess`, `InstanceFailure`.  See [the CodeDeploy documentation](http://docs.aws.amazon.com/codedeploy/latest/userguide/monitoring-sns-event-notifications-create-trigger.html) for all possible values.
     * 
     */
    public List<String> triggerEvents() {
        return this.triggerEvents;
    }
    /**
     * @return The name of the notification trigger.
     * 
     */
    public String triggerName() {
        return this.triggerName;
    }
    /**
     * @return The ARN of the SNS topic through which notifications are sent.
     * 
     */
    public String triggerTargetArn() {
        return this.triggerTargetArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentGroupTriggerConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> triggerEvents;
        private String triggerName;
        private String triggerTargetArn;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentGroupTriggerConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.triggerEvents = defaults.triggerEvents;
    	      this.triggerName = defaults.triggerName;
    	      this.triggerTargetArn = defaults.triggerTargetArn;
        }

        public Builder triggerEvents(List<String> triggerEvents) {
            this.triggerEvents = Objects.requireNonNull(triggerEvents);
            return this;
        }
        public Builder triggerEvents(String... triggerEvents) {
            return triggerEvents(List.of(triggerEvents));
        }
        public Builder triggerName(String triggerName) {
            this.triggerName = Objects.requireNonNull(triggerName);
            return this;
        }
        public Builder triggerTargetArn(String triggerTargetArn) {
            this.triggerTargetArn = Objects.requireNonNull(triggerTargetArn);
            return this;
        }        public DeploymentGroupTriggerConfiguration build() {
            return new DeploymentGroupTriggerConfiguration(triggerEvents, triggerName, triggerTargetArn);
        }
    }
}
