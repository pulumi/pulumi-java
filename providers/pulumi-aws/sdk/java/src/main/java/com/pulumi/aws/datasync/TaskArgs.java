// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datasync;

import com.pulumi.aws.datasync.inputs.TaskExcludesArgs;
import com.pulumi.aws.datasync.inputs.TaskOptionsArgs;
import com.pulumi.aws.datasync.inputs.TaskScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskArgs Empty = new TaskArgs();

    /**
     * Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
     * 
     */
    @Import(name="cloudwatchLogGroupArn")
      private final @Nullable Output<String> cloudwatchLogGroupArn;

    public Output<String> cloudwatchLogGroupArn() {
        return this.cloudwatchLogGroupArn == null ? Codegen.empty() : this.cloudwatchLogGroupArn;
    }

    /**
     * Amazon Resource Name (ARN) of destination DataSync Location.
     * 
     */
    @Import(name="destinationLocationArn", required=true)
      private final Output<String> destinationLocationArn;

    public Output<String> destinationLocationArn() {
        return this.destinationLocationArn;
    }

    /**
     * Filter rules that determines which files to exclude from a task.
     * 
     */
    @Import(name="excludes")
      private final @Nullable Output<TaskExcludesArgs> excludes;

    public Output<TaskExcludesArgs> excludes() {
        return this.excludes == null ? Codegen.empty() : this.excludes;
    }

    /**
     * Name of the DataSync Task.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
     * 
     */
    @Import(name="options")
      private final @Nullable Output<TaskOptionsArgs> options;

    public Output<TaskOptionsArgs> options() {
        return this.options == null ? Codegen.empty() : this.options;
    }

    /**
     * Specifies a schedule used to periodically transfer files from a source to a destination location.
     * 
     */
    @Import(name="schedule")
      private final @Nullable Output<TaskScheduleArgs> schedule;

    public Output<TaskScheduleArgs> schedule() {
        return this.schedule == null ? Codegen.empty() : this.schedule;
    }

    /**
     * Amazon Resource Name (ARN) of source DataSync Location.
     * 
     */
    @Import(name="sourceLocationArn", required=true)
      private final Output<String> sourceLocationArn;

    public Output<String> sourceLocationArn() {
        return this.sourceLocationArn;
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Task. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public TaskArgs(
        @Nullable Output<String> cloudwatchLogGroupArn,
        Output<String> destinationLocationArn,
        @Nullable Output<TaskExcludesArgs> excludes,
        @Nullable Output<String> name,
        @Nullable Output<TaskOptionsArgs> options,
        @Nullable Output<TaskScheduleArgs> schedule,
        Output<String> sourceLocationArn,
        @Nullable Output<Map<String,String>> tags) {
        this.cloudwatchLogGroupArn = cloudwatchLogGroupArn;
        this.destinationLocationArn = Objects.requireNonNull(destinationLocationArn, "expected parameter 'destinationLocationArn' to be non-null");
        this.excludes = excludes;
        this.name = name;
        this.options = options;
        this.schedule = schedule;
        this.sourceLocationArn = Objects.requireNonNull(sourceLocationArn, "expected parameter 'sourceLocationArn' to be non-null");
        this.tags = tags;
    }

    private TaskArgs() {
        this.cloudwatchLogGroupArn = Codegen.empty();
        this.destinationLocationArn = Codegen.empty();
        this.excludes = Codegen.empty();
        this.name = Codegen.empty();
        this.options = Codegen.empty();
        this.schedule = Codegen.empty();
        this.sourceLocationArn = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> cloudwatchLogGroupArn;
        private Output<String> destinationLocationArn;
        private @Nullable Output<TaskExcludesArgs> excludes;
        private @Nullable Output<String> name;
        private @Nullable Output<TaskOptionsArgs> options;
        private @Nullable Output<TaskScheduleArgs> schedule;
        private Output<String> sourceLocationArn;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(TaskArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudwatchLogGroupArn = defaults.cloudwatchLogGroupArn;
    	      this.destinationLocationArn = defaults.destinationLocationArn;
    	      this.excludes = defaults.excludes;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.schedule = defaults.schedule;
    	      this.sourceLocationArn = defaults.sourceLocationArn;
    	      this.tags = defaults.tags;
        }

        public Builder cloudwatchLogGroupArn(@Nullable Output<String> cloudwatchLogGroupArn) {
            this.cloudwatchLogGroupArn = cloudwatchLogGroupArn;
            return this;
        }
        public Builder cloudwatchLogGroupArn(@Nullable String cloudwatchLogGroupArn) {
            this.cloudwatchLogGroupArn = Codegen.ofNullable(cloudwatchLogGroupArn);
            return this;
        }
        public Builder destinationLocationArn(Output<String> destinationLocationArn) {
            this.destinationLocationArn = Objects.requireNonNull(destinationLocationArn);
            return this;
        }
        public Builder destinationLocationArn(String destinationLocationArn) {
            this.destinationLocationArn = Output.of(Objects.requireNonNull(destinationLocationArn));
            return this;
        }
        public Builder excludes(@Nullable Output<TaskExcludesArgs> excludes) {
            this.excludes = excludes;
            return this;
        }
        public Builder excludes(@Nullable TaskExcludesArgs excludes) {
            this.excludes = Codegen.ofNullable(excludes);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder options(@Nullable Output<TaskOptionsArgs> options) {
            this.options = options;
            return this;
        }
        public Builder options(@Nullable TaskOptionsArgs options) {
            this.options = Codegen.ofNullable(options);
            return this;
        }
        public Builder schedule(@Nullable Output<TaskScheduleArgs> schedule) {
            this.schedule = schedule;
            return this;
        }
        public Builder schedule(@Nullable TaskScheduleArgs schedule) {
            this.schedule = Codegen.ofNullable(schedule);
            return this;
        }
        public Builder sourceLocationArn(Output<String> sourceLocationArn) {
            this.sourceLocationArn = Objects.requireNonNull(sourceLocationArn);
            return this;
        }
        public Builder sourceLocationArn(String sourceLocationArn) {
            this.sourceLocationArn = Output.of(Objects.requireNonNull(sourceLocationArn));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public TaskArgs build() {
            return new TaskArgs(cloudwatchLogGroupArn, destinationLocationArn, excludes, name, options, schedule, sourceLocationArn, tags);
        }
    }
}
