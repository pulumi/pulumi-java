// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetLaunchPathsSummaryConstraintSummary extends com.pulumi.resources.InvokeArgs {

    public static final GetLaunchPathsSummaryConstraintSummary Empty = new GetLaunchPathsSummaryConstraintSummary();

    /**
     * Description of the constraint.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return Description of the constraint.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
     * 
     */
    public String type() {
        return this.type;
    }

    private GetLaunchPathsSummaryConstraintSummary() {}

    private GetLaunchPathsSummaryConstraintSummary(GetLaunchPathsSummaryConstraintSummary $) {
        this.description = $.description;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLaunchPathsSummaryConstraintSummary defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLaunchPathsSummaryConstraintSummary $;

        public Builder() {
            $ = new GetLaunchPathsSummaryConstraintSummary();
        }

        public Builder(GetLaunchPathsSummaryConstraintSummary defaults) {
            $ = new GetLaunchPathsSummaryConstraintSummary(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the constraint.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param type Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetLaunchPathsSummaryConstraintSummary build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
