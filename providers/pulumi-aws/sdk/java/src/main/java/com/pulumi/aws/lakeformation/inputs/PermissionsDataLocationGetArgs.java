// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lakeformation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PermissionsDataLocationGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PermissionsDataLocationGetArgs Empty = new PermissionsDataLocationGetArgs();

    /**
     * Amazon Resource Name (ARN) that uniquely identifies the data location resource.
     * 
     */
    @Import(name="arn", required=true)
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) that uniquely identifies the data location resource.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }

    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    @Import(name="catalogId")
    private @Nullable Output<String> catalogId;

    /**
     * @return Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    public Optional<Output<String>> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    private PermissionsDataLocationGetArgs() {}

    private PermissionsDataLocationGetArgs(PermissionsDataLocationGetArgs $) {
        this.arn = $.arn;
        this.catalogId = $.catalogId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PermissionsDataLocationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PermissionsDataLocationGetArgs $;

        public Builder() {
            $ = new PermissionsDataLocationGetArgs();
        }

        public Builder(PermissionsDataLocationGetArgs defaults) {
            $ = new PermissionsDataLocationGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn Amazon Resource Name (ARN) that uniquely identifies the data location resource.
         * 
         * @return builder
         * 
         */
        public Builder arn(Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn Amazon Resource Name (ARN) that uniquely identifies the data location resource.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param catalogId Identifier for the Data Catalog. By default, it is the account ID of the caller.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(@Nullable Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        /**
         * @param catalogId Identifier for the Data Catalog. By default, it is the account ID of the caller.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        public PermissionsDataLocationGetArgs build() {
            $.arn = Objects.requireNonNull($.arn, "expected parameter 'arn' to be non-null");
            return $;
        }
    }

}
