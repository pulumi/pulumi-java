// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codebuild.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectCache {
    /**
     * @return Location of the source code from git or s3.
     * 
     */
    private final @Nullable String location;
    /**
     * @return Specifies settings that AWS CodeBuild uses to store and reuse build dependencies. Valid values:  `LOCAL_SOURCE_CACHE`, `LOCAL_DOCKER_LAYER_CACHE`, `LOCAL_CUSTOM_CACHE`.
     * 
     */
    private final @Nullable List<String> modes;
    /**
     * @return Type of repository that contains the source code to be built. Valid values: `CODECOMMIT`, `CODEPIPELINE`, `GITHUB`, `GITHUB_ENTERPRISE`, `BITBUCKET`, `S3`, `NO_SOURCE`.
     * 
     */
    private final @Nullable String type;

    @CustomType.Constructor
    private ProjectCache(
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("modes") @Nullable List<String> modes,
        @CustomType.Parameter("type") @Nullable String type) {
        this.location = location;
        this.modes = modes;
        this.type = type;
    }

    /**
     * @return Location of the source code from git or s3.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Specifies settings that AWS CodeBuild uses to store and reuse build dependencies. Valid values:  `LOCAL_SOURCE_CACHE`, `LOCAL_DOCKER_LAYER_CACHE`, `LOCAL_CUSTOM_CACHE`.
     * 
     */
    public List<String> modes() {
        return this.modes == null ? List.of() : this.modes;
    }
    /**
     * @return Type of repository that contains the source code to be built. Valid values: `CODECOMMIT`, `CODEPIPELINE`, `GITHUB`, `GITHUB_ENTERPRISE`, `BITBUCKET`, `S3`, `NO_SOURCE`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectCache defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String location;
        private @Nullable List<String> modes;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ProjectCache defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.modes = defaults.modes;
    	      this.type = defaults.type;
        }

        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder modes(@Nullable List<String> modes) {
            this.modes = modes;
            return this;
        }
        public Builder modes(String... modes) {
            return modes(List.of(modes));
        }
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }        public ProjectCache build() {
            return new ProjectCache(location, modes, type);
        }
    }
}
