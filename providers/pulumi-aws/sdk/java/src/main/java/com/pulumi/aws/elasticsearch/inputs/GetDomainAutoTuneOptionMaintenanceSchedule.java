// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch.inputs;

import com.pulumi.aws.elasticsearch.inputs.GetDomainAutoTuneOptionMaintenanceScheduleDuration;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetDomainAutoTuneOptionMaintenanceSchedule extends com.pulumi.resources.InvokeArgs {

    public static final GetDomainAutoTuneOptionMaintenanceSchedule Empty = new GetDomainAutoTuneOptionMaintenanceSchedule();

    /**
     * A cron expression specifying the recurrence pattern for an Auto-Tune maintenance schedule.
     * 
     */
    @Import(name="cronExpressionForRecurrence", required=true)
    private String cronExpressionForRecurrence;

    public String cronExpressionForRecurrence() {
        return this.cronExpressionForRecurrence;
    }

    /**
     * Configuration block for the duration of the Auto-Tune maintenance window.
     * 
     */
    @Import(name="durations", required=true)
    private List<GetDomainAutoTuneOptionMaintenanceScheduleDuration> durations;

    public List<GetDomainAutoTuneOptionMaintenanceScheduleDuration> durations() {
        return this.durations;
    }

    /**
     * Date and time at which the Auto-Tune maintenance schedule starts in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     * 
     */
    @Import(name="startAt", required=true)
    private String startAt;

    public String startAt() {
        return this.startAt;
    }

    private GetDomainAutoTuneOptionMaintenanceSchedule() {}

    private GetDomainAutoTuneOptionMaintenanceSchedule(GetDomainAutoTuneOptionMaintenanceSchedule $) {
        this.cronExpressionForRecurrence = $.cronExpressionForRecurrence;
        this.durations = $.durations;
        this.startAt = $.startAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDomainAutoTuneOptionMaintenanceSchedule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDomainAutoTuneOptionMaintenanceSchedule $;

        public Builder() {
            $ = new GetDomainAutoTuneOptionMaintenanceSchedule();
        }

        public Builder(GetDomainAutoTuneOptionMaintenanceSchedule defaults) {
            $ = new GetDomainAutoTuneOptionMaintenanceSchedule(Objects.requireNonNull(defaults));
        }

        public Builder cronExpressionForRecurrence(String cronExpressionForRecurrence) {
            $.cronExpressionForRecurrence = cronExpressionForRecurrence;
            return this;
        }

        public Builder durations(List<GetDomainAutoTuneOptionMaintenanceScheduleDuration> durations) {
            $.durations = durations;
            return this;
        }

        public Builder durations(GetDomainAutoTuneOptionMaintenanceScheduleDuration... durations) {
            return durations(List.of(durations));
        }

        public Builder startAt(String startAt) {
            $.startAt = startAt;
            return this;
        }

        public GetDomainAutoTuneOptionMaintenanceSchedule build() {
            $.cronExpressionForRecurrence = Objects.requireNonNull($.cronExpressionForRecurrence, "expected parameter 'cronExpressionForRecurrence' to be non-null");
            $.durations = Objects.requireNonNull($.durations, "expected parameter 'durations' to be non-null");
            $.startAt = Objects.requireNonNull($.startAt, "expected parameter 'startAt' to be non-null");
            return $;
        }
    }

}
