// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.aws.eks.inputs.ClusterCertificateAuthorityGetArgs;
import com.pulumi.aws.eks.inputs.ClusterEncryptionConfigGetArgs;
import com.pulumi.aws.eks.inputs.ClusterIdentityGetArgs;
import com.pulumi.aws.eks.inputs.ClusterKubernetesNetworkConfigGetArgs;
import com.pulumi.aws.eks.inputs.ClusterVpcConfigGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * ARN of the cluster.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Attribute block containing `certificate-authority-data` for your cluster. Detailed below.
     * 
     */
    @Import(name="certificateAuthority")
    private @Nullable Output<ClusterCertificateAuthorityGetArgs> certificateAuthority;

    public Optional<Output<ClusterCertificateAuthorityGetArgs>> certificateAuthority() {
        return Optional.ofNullable(this.certificateAuthority);
    }

    /**
     * Unix epoch timestamp in seconds for when the cluster was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * List of the desired control plane logging to enable. For more information, see [Amazon EKS Control Plane Logging](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html).
     * 
     */
    @Import(name="enabledClusterLogTypes")
    private @Nullable Output<List<String>> enabledClusterLogTypes;

    public Optional<Output<List<String>>> enabledClusterLogTypes() {
        return Optional.ofNullable(this.enabledClusterLogTypes);
    }

    /**
     * Configuration block with encryption configuration for the cluster. Only available on Kubernetes 1.13 and above clusters created after March 6, 2020. Detailed below.
     * 
     */
    @Import(name="encryptionConfig")
    private @Nullable Output<ClusterEncryptionConfigGetArgs> encryptionConfig;

    public Optional<Output<ClusterEncryptionConfigGetArgs>> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }

    /**
     * Endpoint for your Kubernetes API server.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * Attribute block containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. Detailed below.
     * 
     */
    @Import(name="identities")
    private @Nullable Output<List<ClusterIdentityGetArgs>> identities;

    public Optional<Output<List<ClusterIdentityGetArgs>>> identities() {
        return Optional.ofNullable(this.identities);
    }

    /**
     * Configuration block with kubernetes network configuration for the cluster. Detailed below. If removed, this provider will only perform drift detection if a configuration value is provided.
     * 
     */
    @Import(name="kubernetesNetworkConfig")
    private @Nullable Output<ClusterKubernetesNetworkConfigGetArgs> kubernetesNetworkConfig;

    public Optional<Output<ClusterKubernetesNetworkConfigGetArgs>> kubernetesNetworkConfig() {
        return Optional.ofNullable(this.kubernetesNetworkConfig);
    }

    /**
     * Name of the cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Platform version for the cluster.
     * 
     */
    @Import(name="platformVersion")
    private @Nullable Output<String> platformVersion;

    public Optional<Output<String>> platformVersion() {
        return Optional.ofNullable(this.platformVersion);
    }

    /**
     * ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Key-value map of resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.
     * 
     */
    @Import(name="vpcConfig")
    private @Nullable Output<ClusterVpcConfigGetArgs> vpcConfig;

    public Optional<Output<ClusterVpcConfigGetArgs>> vpcConfig() {
        return Optional.ofNullable(this.vpcConfig);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.arn = $.arn;
        this.certificateAuthority = $.certificateAuthority;
        this.createdAt = $.createdAt;
        this.enabledClusterLogTypes = $.enabledClusterLogTypes;
        this.encryptionConfig = $.encryptionConfig;
        this.endpoint = $.endpoint;
        this.identities = $.identities;
        this.kubernetesNetworkConfig = $.kubernetesNetworkConfig;
        this.name = $.name;
        this.platformVersion = $.platformVersion;
        this.roleArn = $.roleArn;
        this.status = $.status;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.version = $.version;
        this.vpcConfig = $.vpcConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder certificateAuthority(@Nullable Output<ClusterCertificateAuthorityGetArgs> certificateAuthority) {
            $.certificateAuthority = certificateAuthority;
            return this;
        }

        public Builder certificateAuthority(ClusterCertificateAuthorityGetArgs certificateAuthority) {
            return certificateAuthority(Output.of(certificateAuthority));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder enabledClusterLogTypes(@Nullable Output<List<String>> enabledClusterLogTypes) {
            $.enabledClusterLogTypes = enabledClusterLogTypes;
            return this;
        }

        public Builder enabledClusterLogTypes(List<String> enabledClusterLogTypes) {
            return enabledClusterLogTypes(Output.of(enabledClusterLogTypes));
        }

        public Builder enabledClusterLogTypes(String... enabledClusterLogTypes) {
            return enabledClusterLogTypes(List.of(enabledClusterLogTypes));
        }

        public Builder encryptionConfig(@Nullable Output<ClusterEncryptionConfigGetArgs> encryptionConfig) {
            $.encryptionConfig = encryptionConfig;
            return this;
        }

        public Builder encryptionConfig(ClusterEncryptionConfigGetArgs encryptionConfig) {
            return encryptionConfig(Output.of(encryptionConfig));
        }

        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder identities(@Nullable Output<List<ClusterIdentityGetArgs>> identities) {
            $.identities = identities;
            return this;
        }

        public Builder identities(List<ClusterIdentityGetArgs> identities) {
            return identities(Output.of(identities));
        }

        public Builder identities(ClusterIdentityGetArgs... identities) {
            return identities(List.of(identities));
        }

        public Builder kubernetesNetworkConfig(@Nullable Output<ClusterKubernetesNetworkConfigGetArgs> kubernetesNetworkConfig) {
            $.kubernetesNetworkConfig = kubernetesNetworkConfig;
            return this;
        }

        public Builder kubernetesNetworkConfig(ClusterKubernetesNetworkConfigGetArgs kubernetesNetworkConfig) {
            return kubernetesNetworkConfig(Output.of(kubernetesNetworkConfig));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder platformVersion(@Nullable Output<String> platformVersion) {
            $.platformVersion = platformVersion;
            return this;
        }

        public Builder platformVersion(String platformVersion) {
            return platformVersion(Output.of(platformVersion));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public Builder vpcConfig(@Nullable Output<ClusterVpcConfigGetArgs> vpcConfig) {
            $.vpcConfig = vpcConfig;
            return this;
        }

        public Builder vpcConfig(ClusterVpcConfigGetArgs vpcConfig) {
            return vpcConfig(Output.of(vpcConfig));
        }

        public ClusterState build() {
            return $;
        }
    }

}
