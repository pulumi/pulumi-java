// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOrderableClusterArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrderableClusterArgs Empty = new GetOrderableClusterArgs();

    /**
     * Reshift Cluster typeE.g., `multi-node` or `single-node`
     * 
     */
    @Import(name="clusterType")
    private @Nullable String clusterType;

    public Optional<String> clusterType() {
        return Optional.ofNullable(this.clusterType);
    }

    /**
     * Redshift Cluster versionE.g., `1.0`
     * 
     */
    @Import(name="clusterVersion")
    private @Nullable String clusterVersion;

    public Optional<String> clusterVersion() {
        return Optional.ofNullable(this.clusterVersion);
    }

    /**
     * Redshift Cluster node typeE.g., `dc2.8xlarge`
     * 
     */
    @Import(name="nodeType")
    private @Nullable String nodeType;

    public Optional<String> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }

    /**
     * Ordered list of preferred Redshift Cluster node types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    @Import(name="preferredNodeTypes")
    private @Nullable List<String> preferredNodeTypes;

    public Optional<List<String>> preferredNodeTypes() {
        return Optional.ofNullable(this.preferredNodeTypes);
    }

    private GetOrderableClusterArgs() {}

    private GetOrderableClusterArgs(GetOrderableClusterArgs $) {
        this.clusterType = $.clusterType;
        this.clusterVersion = $.clusterVersion;
        this.nodeType = $.nodeType;
        this.preferredNodeTypes = $.preferredNodeTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrderableClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrderableClusterArgs $;

        public Builder() {
            $ = new GetOrderableClusterArgs();
        }

        public Builder(GetOrderableClusterArgs defaults) {
            $ = new GetOrderableClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder clusterType(@Nullable String clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        public Builder clusterVersion(@Nullable String clusterVersion) {
            $.clusterVersion = clusterVersion;
            return this;
        }

        public Builder nodeType(@Nullable String nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        public Builder preferredNodeTypes(@Nullable List<String> preferredNodeTypes) {
            $.preferredNodeTypes = preferredNodeTypes;
            return this;
        }

        public Builder preferredNodeTypes(String... preferredNodeTypes) {
            return preferredNodeTypes(List.of(preferredNodeTypes));
        }

        public GetOrderableClusterArgs build() {
            return $;
        }
    }

}
