// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.redshift.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetOrderableClusterArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrderableClusterArgs Empty = new GetOrderableClusterArgs();

    /**
     * Reshift Cluster typeE.g., `multi-node` or `single-node`
     * 
     */
    @Import(name="clusterType")
    private Output</* @Nullable */ String> clusterType;

    /**
     * @return Reshift Cluster typeE.g., `multi-node` or `single-node`
     * 
     */
    public Output</* @Nullable */ String> clusterType() {
        return this.clusterType;
    }

    /**
     * Redshift Cluster versionE.g., `1.0`
     * 
     */
    @Import(name="clusterVersion")
    private Output</* @Nullable */ String> clusterVersion;

    /**
     * @return Redshift Cluster versionE.g., `1.0`
     * 
     */
    public Output</* @Nullable */ String> clusterVersion() {
        return this.clusterVersion;
    }

    /**
     * Redshift Cluster node typeE.g., `dc2.8xlarge`
     * 
     */
    @Import(name="nodeType")
    private Output</* @Nullable */ String> nodeType;

    /**
     * @return Redshift Cluster node typeE.g., `dc2.8xlarge`
     * 
     */
    public Output</* @Nullable */ String> nodeType() {
        return this.nodeType;
    }

    /**
     * Ordered list of preferred Redshift Cluster node types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    @Import(name="preferredNodeTypes")
    private Output</* @Nullable */ List<String>> preferredNodeTypes;

    /**
     * @return Ordered list of preferred Redshift Cluster node types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    public Output</* @Nullable */ List<String>> preferredNodeTypes() {
        return this.preferredNodeTypes;
    }

    private GetOrderableClusterArgs() {}

    private GetOrderableClusterArgs(GetOrderableClusterArgs $) {
        this.clusterType = $.clusterType;
        this.clusterVersion = $.clusterVersion;
        this.nodeType = $.nodeType;
        this.preferredNodeTypes = $.preferredNodeTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrderableClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrderableClusterArgs $;

        public Builder() {
            $ = new GetOrderableClusterArgs();
        }

        public Builder(GetOrderableClusterArgs defaults) {
            $ = new GetOrderableClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterType Reshift Cluster typeE.g., `multi-node` or `single-node`
         * 
         * @return builder
         * 
         */
        public Builder clusterType(Output</* @Nullable */ String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType Reshift Cluster typeE.g., `multi-node` or `single-node`
         * 
         * @return builder
         * 
         */
        public Builder clusterType(@Nullable String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param clusterVersion Redshift Cluster versionE.g., `1.0`
         * 
         * @return builder
         * 
         */
        public Builder clusterVersion(Output</* @Nullable */ String> clusterVersion) {
            $.clusterVersion = clusterVersion;
            return this;
        }

        /**
         * @param clusterVersion Redshift Cluster versionE.g., `1.0`
         * 
         * @return builder
         * 
         */
        public Builder clusterVersion(@Nullable String clusterVersion) {
            return clusterVersion(Output.of(clusterVersion));
        }

        /**
         * @param nodeType Redshift Cluster node typeE.g., `dc2.8xlarge`
         * 
         * @return builder
         * 
         */
        public Builder nodeType(Output</* @Nullable */ String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        /**
         * @param nodeType Redshift Cluster node typeE.g., `dc2.8xlarge`
         * 
         * @return builder
         * 
         */
        public Builder nodeType(@Nullable String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        /**
         * @param preferredNodeTypes Ordered list of preferred Redshift Cluster node types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder preferredNodeTypes(Output</* @Nullable */ List<String>> preferredNodeTypes) {
            $.preferredNodeTypes = preferredNodeTypes;
            return this;
        }

        /**
         * @param preferredNodeTypes Ordered list of preferred Redshift Cluster node types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder preferredNodeTypes(@Nullable List<String> preferredNodeTypes) {
            return preferredNodeTypes(Output.of(preferredNodeTypes));
        }

        /**
         * @param preferredNodeTypes Ordered list of preferred Redshift Cluster node types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
         * 
         * @return builder
         * 
         */
        public Builder preferredNodeTypes(String... preferredNodeTypes) {
            return preferredNodeTypes(List.of(preferredNodeTypes));
        }

        public GetOrderableClusterArgs build() {
            return $;
        }
    }

}
