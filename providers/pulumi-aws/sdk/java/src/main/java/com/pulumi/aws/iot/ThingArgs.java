// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ThingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ThingArgs Empty = new ThingArgs();

    /**
     * Map of attributes of the thing.
     * 
     */
    @Import(name="attributes")
      private final @Nullable Output<Map<String,String>> attributes;

    public Output<Map<String,String>> attributes() {
        return this.attributes == null ? Codegen.empty() : this.attributes;
    }

    /**
     * The name of the thing.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The thing type name.
     * 
     */
    @Import(name="thingTypeName")
      private final @Nullable Output<String> thingTypeName;

    public Output<String> thingTypeName() {
        return this.thingTypeName == null ? Codegen.empty() : this.thingTypeName;
    }

    public ThingArgs(
        @Nullable Output<Map<String,String>> attributes,
        @Nullable Output<String> name,
        @Nullable Output<String> thingTypeName) {
        this.attributes = attributes;
        this.name = name;
        this.thingTypeName = thingTypeName;
    }

    private ThingArgs() {
        this.attributes = Codegen.empty();
        this.name = Codegen.empty();
        this.thingTypeName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,String>> attributes;
        private @Nullable Output<String> name;
        private @Nullable Output<String> thingTypeName;

        public Builder() {
    	      // Empty
        }

        public Builder(ThingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.name = defaults.name;
    	      this.thingTypeName = defaults.thingTypeName;
        }

        public Builder attributes(@Nullable Output<Map<String,String>> attributes) {
            this.attributes = attributes;
            return this;
        }
        public Builder attributes(@Nullable Map<String,String> attributes) {
            this.attributes = Codegen.ofNullable(attributes);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder thingTypeName(@Nullable Output<String> thingTypeName) {
            this.thingTypeName = thingTypeName;
            return this;
        }
        public Builder thingTypeName(@Nullable String thingTypeName) {
            this.thingTypeName = Codegen.ofNullable(thingTypeName);
            return this;
        }        public ThingArgs build() {
            return new ThingArgs(attributes, name, thingTypeName);
        }
    }
}
