// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetAmiProductCode extends com.pulumi.resources.InvokeArgs {

    public static final GetAmiProductCode Empty = new GetAmiProductCode();

    @Import(name="productCodeId", required=true)
      private final String productCodeId;

    public String productCodeId() {
        return this.productCodeId;
    }

    @Import(name="productCodeType", required=true)
      private final String productCodeType;

    public String productCodeType() {
        return this.productCodeType;
    }

    public GetAmiProductCode(
        String productCodeId,
        String productCodeType) {
        this.productCodeId = Objects.requireNonNull(productCodeId, "expected parameter 'productCodeId' to be non-null");
        this.productCodeType = Objects.requireNonNull(productCodeType, "expected parameter 'productCodeType' to be non-null");
    }

    private GetAmiProductCode() {
        this.productCodeId = null;
        this.productCodeType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAmiProductCode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String productCodeId;
        private String productCodeType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAmiProductCode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.productCodeId = defaults.productCodeId;
    	      this.productCodeType = defaults.productCodeType;
        }

        public Builder productCodeId(String productCodeId) {
            this.productCodeId = Objects.requireNonNull(productCodeId);
            return this;
        }
        public Builder productCodeType(String productCodeType) {
            this.productCodeType = Objects.requireNonNull(productCodeType);
            return this;
        }        public GetAmiProductCode build() {
            return new GetAmiProductCode(productCodeId, productCodeType);
        }
    }
}
