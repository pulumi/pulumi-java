// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.acmpca.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetCertificateAuthorityRevocationConfigurationCrlConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final GetCertificateAuthorityRevocationConfigurationCrlConfiguration Empty = new GetCertificateAuthorityRevocationConfigurationCrlConfiguration();

    @Import(name="customCname", required=true)
    private String customCname;

    public String customCname() {
        return this.customCname;
    }

    @Import(name="enabled", required=true)
    private Boolean enabled;

    public Boolean enabled() {
        return this.enabled;
    }

    @Import(name="expirationInDays", required=true)
    private Integer expirationInDays;

    public Integer expirationInDays() {
        return this.expirationInDays;
    }

    @Import(name="s3BucketName", required=true)
    private String s3BucketName;

    public String s3BucketName() {
        return this.s3BucketName;
    }

    @Import(name="s3ObjectAcl", required=true)
    private String s3ObjectAcl;

    public String s3ObjectAcl() {
        return this.s3ObjectAcl;
    }

    private GetCertificateAuthorityRevocationConfigurationCrlConfiguration() {}

    private GetCertificateAuthorityRevocationConfigurationCrlConfiguration(GetCertificateAuthorityRevocationConfigurationCrlConfiguration $) {
        this.customCname = $.customCname;
        this.enabled = $.enabled;
        this.expirationInDays = $.expirationInDays;
        this.s3BucketName = $.s3BucketName;
        this.s3ObjectAcl = $.s3ObjectAcl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCertificateAuthorityRevocationConfigurationCrlConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCertificateAuthorityRevocationConfigurationCrlConfiguration $;

        public Builder() {
            $ = new GetCertificateAuthorityRevocationConfigurationCrlConfiguration();
        }

        public Builder(GetCertificateAuthorityRevocationConfigurationCrlConfiguration defaults) {
            $ = new GetCertificateAuthorityRevocationConfigurationCrlConfiguration(Objects.requireNonNull(defaults));
        }

        public Builder customCname(String customCname) {
            $.customCname = customCname;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder expirationInDays(Integer expirationInDays) {
            $.expirationInDays = expirationInDays;
            return this;
        }

        public Builder s3BucketName(String s3BucketName) {
            $.s3BucketName = s3BucketName;
            return this;
        }

        public Builder s3ObjectAcl(String s3ObjectAcl) {
            $.s3ObjectAcl = s3ObjectAcl;
            return this;
        }

        public GetCertificateAuthorityRevocationConfigurationCrlConfiguration build() {
            $.customCname = Objects.requireNonNull($.customCname, "expected parameter 'customCname' to be non-null");
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.expirationInDays = Objects.requireNonNull($.expirationInDays, "expected parameter 'expirationInDays' to be non-null");
            $.s3BucketName = Objects.requireNonNull($.s3BucketName, "expected parameter 's3BucketName' to be non-null");
            $.s3ObjectAcl = Objects.requireNonNull($.s3ObjectAcl, "expected parameter 's3ObjectAcl' to be non-null");
            return $;
        }
    }

}
