// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CatalogTableTargetTable {
    /**
     * @return ID of the Data Catalog in which the table resides.
     * 
     */
    private final String catalogId;
    /**
     * @return Name of the catalog database that contains the target table.
     * 
     */
    private final String databaseName;
    /**
     * @return Name of the target table.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private CatalogTableTargetTable(
        @CustomType.Parameter("catalogId") String catalogId,
        @CustomType.Parameter("databaseName") String databaseName,
        @CustomType.Parameter("name") String name) {
        this.catalogId = catalogId;
        this.databaseName = databaseName;
        this.name = name;
    }

    /**
     * @return ID of the Data Catalog in which the table resides.
     * 
     */
    public String catalogId() {
        return this.catalogId;
    }
    /**
     * @return Name of the catalog database that contains the target table.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return Name of the target table.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CatalogTableTargetTable defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String catalogId;
        private String databaseName;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(CatalogTableTargetTable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogId = defaults.catalogId;
    	      this.databaseName = defaults.databaseName;
    	      this.name = defaults.name;
        }

        public Builder catalogId(String catalogId) {
            this.catalogId = Objects.requireNonNull(catalogId);
            return this;
        }
        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public CatalogTableTargetTable build() {
            return new CatalogTableTargetTable(catalogId, databaseName, name);
        }
    }
}
