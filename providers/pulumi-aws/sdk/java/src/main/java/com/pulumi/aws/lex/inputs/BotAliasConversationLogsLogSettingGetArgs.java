// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BotAliasConversationLogsLogSettingGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final BotAliasConversationLogsLogSettingGetArgs Empty = new BotAliasConversationLogsLogSettingGetArgs();

    /**
     * The destination where logs are delivered. Options are `CLOUDWATCH_LOGS` or `S3`.
     * 
     */
    @Import(name="destination", required=true)
    private Output<String> destination;

    public Output<String> destination() {
        return this.destination;
    }

    /**
     * The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket. This can only be specified when `destination` is set to `S3`. Must be between 20 and 2048 characters in length.
     * 
     */
    @Import(name="kmsKeyArn")
    private @Nullable Output<String> kmsKeyArn;

    public Optional<Output<String>> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }

    /**
     * The type of logging that is enabled. Options are `AUDIO` or `TEXT`.
     * 
     */
    @Import(name="logType", required=true)
    private Output<String> logType;

    public Output<String> logType() {
        return this.logType;
    }

    /**
     * The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered. Must be less than or equal to 2048 characters in length.
     * 
     */
    @Import(name="resourceArn", required=true)
    private Output<String> resourceArn;

    public Output<String> resourceArn() {
        return this.resourceArn;
    }

    /**
     * The prefix of the S3 object key for `AUDIO` logs or the log stream name for `TEXT` logs.
     * 
     */
    @Import(name="resourcePrefix")
    private @Nullable Output<String> resourcePrefix;

    public Optional<Output<String>> resourcePrefix() {
        return Optional.ofNullable(this.resourcePrefix);
    }

    private BotAliasConversationLogsLogSettingGetArgs() {}

    private BotAliasConversationLogsLogSettingGetArgs(BotAliasConversationLogsLogSettingGetArgs $) {
        this.destination = $.destination;
        this.kmsKeyArn = $.kmsKeyArn;
        this.logType = $.logType;
        this.resourceArn = $.resourceArn;
        this.resourcePrefix = $.resourcePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotAliasConversationLogsLogSettingGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotAliasConversationLogsLogSettingGetArgs $;

        public Builder() {
            $ = new BotAliasConversationLogsLogSettingGetArgs();
        }

        public Builder(BotAliasConversationLogsLogSettingGetArgs defaults) {
            $ = new BotAliasConversationLogsLogSettingGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder destination(Output<String> destination) {
            $.destination = destination;
            return this;
        }

        public Builder destination(String destination) {
            return destination(Output.of(destination));
        }

        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            $.kmsKeyArn = kmsKeyArn;
            return this;
        }

        public Builder kmsKeyArn(String kmsKeyArn) {
            return kmsKeyArn(Output.of(kmsKeyArn));
        }

        public Builder logType(Output<String> logType) {
            $.logType = logType;
            return this;
        }

        public Builder logType(String logType) {
            return logType(Output.of(logType));
        }

        public Builder resourceArn(Output<String> resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        public Builder resourceArn(String resourceArn) {
            return resourceArn(Output.of(resourceArn));
        }

        public Builder resourcePrefix(@Nullable Output<String> resourcePrefix) {
            $.resourcePrefix = resourcePrefix;
            return this;
        }

        public Builder resourcePrefix(String resourcePrefix) {
            return resourcePrefix(Output.of(resourcePrefix));
        }

        public BotAliasConversationLogsLogSettingGetArgs build() {
            $.destination = Objects.requireNonNull($.destination, "expected parameter 'destination' to be non-null");
            $.logType = Objects.requireNonNull($.logType, "expected parameter 'logType' to be non-null");
            $.resourceArn = Objects.requireNonNull($.resourceArn, "expected parameter 'resourceArn' to be non-null");
            return $;
        }
    }

}
