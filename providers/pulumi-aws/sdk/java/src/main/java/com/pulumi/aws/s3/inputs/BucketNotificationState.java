// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.BucketNotificationLambdaFunctionGetArgs;
import com.pulumi.aws.s3.inputs.BucketNotificationQueueGetArgs;
import com.pulumi.aws.s3.inputs.BucketNotificationTopicGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketNotificationState extends com.pulumi.resources.ResourceArgs {

    public static final BucketNotificationState Empty = new BucketNotificationState();

    /**
     * Name of the bucket for notification configuration.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return Name of the bucket for notification configuration.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * Whether to enable Amazon EventBridge notifications.
     * 
     */
    @Import(name="eventbridge")
    private @Nullable Output<Boolean> eventbridge;

    /**
     * @return Whether to enable Amazon EventBridge notifications.
     * 
     */
    public Optional<Output<Boolean>> eventbridge() {
        return Optional.ofNullable(this.eventbridge);
    }

    /**
     * Used to configure notifications to a Lambda Function. See below.
     * 
     */
    @Import(name="lambdaFunctions")
    private @Nullable Output<List<BucketNotificationLambdaFunctionGetArgs>> lambdaFunctions;

    /**
     * @return Used to configure notifications to a Lambda Function. See below.
     * 
     */
    public Optional<Output<List<BucketNotificationLambdaFunctionGetArgs>>> lambdaFunctions() {
        return Optional.ofNullable(this.lambdaFunctions);
    }

    /**
     * Notification configuration to SQS Queue. See below.
     * 
     */
    @Import(name="queues")
    private @Nullable Output<List<BucketNotificationQueueGetArgs>> queues;

    /**
     * @return Notification configuration to SQS Queue. See below.
     * 
     */
    public Optional<Output<List<BucketNotificationQueueGetArgs>>> queues() {
        return Optional.ofNullable(this.queues);
    }

    /**
     * Notification configuration to SNS Topic. See below.
     * 
     */
    @Import(name="topics")
    private @Nullable Output<List<BucketNotificationTopicGetArgs>> topics;

    /**
     * @return Notification configuration to SNS Topic. See below.
     * 
     */
    public Optional<Output<List<BucketNotificationTopicGetArgs>>> topics() {
        return Optional.ofNullable(this.topics);
    }

    private BucketNotificationState() {}

    private BucketNotificationState(BucketNotificationState $) {
        this.bucket = $.bucket;
        this.eventbridge = $.eventbridge;
        this.lambdaFunctions = $.lambdaFunctions;
        this.queues = $.queues;
        this.topics = $.topics;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketNotificationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketNotificationState $;

        public Builder() {
            $ = new BucketNotificationState();
        }

        public Builder(BucketNotificationState defaults) {
            $ = new BucketNotificationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Name of the bucket for notification configuration.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Name of the bucket for notification configuration.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param eventbridge Whether to enable Amazon EventBridge notifications.
         * 
         * @return builder
         * 
         */
        public Builder eventbridge(@Nullable Output<Boolean> eventbridge) {
            $.eventbridge = eventbridge;
            return this;
        }

        /**
         * @param eventbridge Whether to enable Amazon EventBridge notifications.
         * 
         * @return builder
         * 
         */
        public Builder eventbridge(Boolean eventbridge) {
            return eventbridge(Output.of(eventbridge));
        }

        /**
         * @param lambdaFunctions Used to configure notifications to a Lambda Function. See below.
         * 
         * @return builder
         * 
         */
        public Builder lambdaFunctions(@Nullable Output<List<BucketNotificationLambdaFunctionGetArgs>> lambdaFunctions) {
            $.lambdaFunctions = lambdaFunctions;
            return this;
        }

        /**
         * @param lambdaFunctions Used to configure notifications to a Lambda Function. See below.
         * 
         * @return builder
         * 
         */
        public Builder lambdaFunctions(List<BucketNotificationLambdaFunctionGetArgs> lambdaFunctions) {
            return lambdaFunctions(Output.of(lambdaFunctions));
        }

        /**
         * @param lambdaFunctions Used to configure notifications to a Lambda Function. See below.
         * 
         * @return builder
         * 
         */
        public Builder lambdaFunctions(BucketNotificationLambdaFunctionGetArgs... lambdaFunctions) {
            return lambdaFunctions(List.of(lambdaFunctions));
        }

        /**
         * @param queues Notification configuration to SQS Queue. See below.
         * 
         * @return builder
         * 
         */
        public Builder queues(@Nullable Output<List<BucketNotificationQueueGetArgs>> queues) {
            $.queues = queues;
            return this;
        }

        /**
         * @param queues Notification configuration to SQS Queue. See below.
         * 
         * @return builder
         * 
         */
        public Builder queues(List<BucketNotificationQueueGetArgs> queues) {
            return queues(Output.of(queues));
        }

        /**
         * @param queues Notification configuration to SQS Queue. See below.
         * 
         * @return builder
         * 
         */
        public Builder queues(BucketNotificationQueueGetArgs... queues) {
            return queues(List.of(queues));
        }

        /**
         * @param topics Notification configuration to SNS Topic. See below.
         * 
         * @return builder
         * 
         */
        public Builder topics(@Nullable Output<List<BucketNotificationTopicGetArgs>> topics) {
            $.topics = topics;
            return this;
        }

        /**
         * @param topics Notification configuration to SNS Topic. See below.
         * 
         * @return builder
         * 
         */
        public Builder topics(List<BucketNotificationTopicGetArgs> topics) {
            return topics(Output.of(topics));
        }

        /**
         * @param topics Notification configuration to SNS Topic. See below.
         * 
         * @return builder
         * 
         */
        public Builder topics(BucketNotificationTopicGetArgs... topics) {
            return topics(List.of(topics));
        }

        public BucketNotificationState build() {
            return $;
        }
    }

}
