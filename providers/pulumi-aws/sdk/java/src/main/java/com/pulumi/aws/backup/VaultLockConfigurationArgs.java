// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.backup;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VaultLockConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VaultLockConfigurationArgs Empty = new VaultLockConfigurationArgs();

    /**
     * Name of the backup vault to add a lock configuration for.
     * 
     */
    @Import(name="backupVaultName", required=true)
      private final Output<String> backupVaultName;

    public Output<String> backupVaultName() {
        return this.backupVaultName;
    }

    /**
     * The number of days before the lock date.
     * 
     */
    @Import(name="changeableForDays")
      private final @Nullable Output<Integer> changeableForDays;

    public Output<Integer> changeableForDays() {
        return this.changeableForDays == null ? Codegen.empty() : this.changeableForDays;
    }

    /**
     * The maximum retention period that the vault retains its recovery points.
     * 
     */
    @Import(name="maxRetentionDays")
      private final @Nullable Output<Integer> maxRetentionDays;

    public Output<Integer> maxRetentionDays() {
        return this.maxRetentionDays == null ? Codegen.empty() : this.maxRetentionDays;
    }

    /**
     * The minimum retention period that the vault retains its recovery points.
     * 
     */
    @Import(name="minRetentionDays")
      private final @Nullable Output<Integer> minRetentionDays;

    public Output<Integer> minRetentionDays() {
        return this.minRetentionDays == null ? Codegen.empty() : this.minRetentionDays;
    }

    public VaultLockConfigurationArgs(
        Output<String> backupVaultName,
        @Nullable Output<Integer> changeableForDays,
        @Nullable Output<Integer> maxRetentionDays,
        @Nullable Output<Integer> minRetentionDays) {
        this.backupVaultName = Objects.requireNonNull(backupVaultName, "expected parameter 'backupVaultName' to be non-null");
        this.changeableForDays = changeableForDays;
        this.maxRetentionDays = maxRetentionDays;
        this.minRetentionDays = minRetentionDays;
    }

    private VaultLockConfigurationArgs() {
        this.backupVaultName = Codegen.empty();
        this.changeableForDays = Codegen.empty();
        this.maxRetentionDays = Codegen.empty();
        this.minRetentionDays = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VaultLockConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> backupVaultName;
        private @Nullable Output<Integer> changeableForDays;
        private @Nullable Output<Integer> maxRetentionDays;
        private @Nullable Output<Integer> minRetentionDays;

        public Builder() {
    	      // Empty
        }

        public Builder(VaultLockConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupVaultName = defaults.backupVaultName;
    	      this.changeableForDays = defaults.changeableForDays;
    	      this.maxRetentionDays = defaults.maxRetentionDays;
    	      this.minRetentionDays = defaults.minRetentionDays;
        }

        public Builder backupVaultName(Output<String> backupVaultName) {
            this.backupVaultName = Objects.requireNonNull(backupVaultName);
            return this;
        }
        public Builder backupVaultName(String backupVaultName) {
            this.backupVaultName = Output.of(Objects.requireNonNull(backupVaultName));
            return this;
        }
        public Builder changeableForDays(@Nullable Output<Integer> changeableForDays) {
            this.changeableForDays = changeableForDays;
            return this;
        }
        public Builder changeableForDays(@Nullable Integer changeableForDays) {
            this.changeableForDays = Codegen.ofNullable(changeableForDays);
            return this;
        }
        public Builder maxRetentionDays(@Nullable Output<Integer> maxRetentionDays) {
            this.maxRetentionDays = maxRetentionDays;
            return this;
        }
        public Builder maxRetentionDays(@Nullable Integer maxRetentionDays) {
            this.maxRetentionDays = Codegen.ofNullable(maxRetentionDays);
            return this;
        }
        public Builder minRetentionDays(@Nullable Output<Integer> minRetentionDays) {
            this.minRetentionDays = minRetentionDays;
            return this;
        }
        public Builder minRetentionDays(@Nullable Integer minRetentionDays) {
            this.minRetentionDays = Codegen.ofNullable(minRetentionDays);
            return this;
        }        public VaultLockConfigurationArgs build() {
            return new VaultLockConfigurationArgs(backupVaultName, changeableForDays, maxRetentionDays, minRetentionDays);
        }
    }
}
