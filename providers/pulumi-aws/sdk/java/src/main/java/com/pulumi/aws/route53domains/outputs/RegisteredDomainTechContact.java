// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.route53domains.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegisteredDomainTechContact {
    /**
     * @return First line of the contact&#39;s address.
     * 
     */
    private final @Nullable String addressLine1;
    /**
     * @return Second line of contact&#39;s address, if any.
     * 
     */
    private final @Nullable String addressLine2;
    /**
     * @return The city of the contact&#39;s address.
     * 
     */
    private final @Nullable String city;
    /**
     * @return Indicates whether the contact is a person, company, association, or public organization. See the [AWS API documentation](https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html#Route53Domains-Type-domains_ContactDetail-ContactType) for valid values.
     * 
     */
    private final @Nullable String contactType;
    /**
     * @return Code for the country of the contact&#39;s address. See the [AWS API documentation](https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html#Route53Domains-Type-domains_ContactDetail-CountryCode) for valid values.
     * 
     */
    private final @Nullable String countryCode;
    /**
     * @return Email address of the contact.
     * 
     */
    private final @Nullable String email;
    /**
     * @return A key-value map of parameters required by certain top-level domains.
     * 
     */
    private final @Nullable Map<String,String> extraParams;
    /**
     * @return Fax number of the contact. Phone number must be specified in the format &#34;+[country dialing code].[number including any area code]&#34;.
     * 
     */
    private final @Nullable String fax;
    /**
     * @return First name of contact.
     * 
     */
    private final @Nullable String firstName;
    /**
     * @return Last name of contact.
     * 
     */
    private final @Nullable String lastName;
    /**
     * @return Name of the organization for contact types other than `PERSON`.
     * 
     */
    private final @Nullable String organizationName;
    /**
     * @return The phone number of the contact. Phone number must be specified in the format &#34;+[country dialing code].[number including any area code]&#34;.
     * 
     */
    private final @Nullable String phoneNumber;
    /**
     * @return The state or province of the contact&#39;s city.
     * 
     */
    private final @Nullable String state;
    /**
     * @return The zip or postal code of the contact&#39;s address.
     * 
     */
    private final @Nullable String zipCode;

    @CustomType.Constructor
    private RegisteredDomainTechContact(
        @CustomType.Parameter("addressLine1") @Nullable String addressLine1,
        @CustomType.Parameter("addressLine2") @Nullable String addressLine2,
        @CustomType.Parameter("city") @Nullable String city,
        @CustomType.Parameter("contactType") @Nullable String contactType,
        @CustomType.Parameter("countryCode") @Nullable String countryCode,
        @CustomType.Parameter("email") @Nullable String email,
        @CustomType.Parameter("extraParams") @Nullable Map<String,String> extraParams,
        @CustomType.Parameter("fax") @Nullable String fax,
        @CustomType.Parameter("firstName") @Nullable String firstName,
        @CustomType.Parameter("lastName") @Nullable String lastName,
        @CustomType.Parameter("organizationName") @Nullable String organizationName,
        @CustomType.Parameter("phoneNumber") @Nullable String phoneNumber,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("zipCode") @Nullable String zipCode) {
        this.addressLine1 = addressLine1;
        this.addressLine2 = addressLine2;
        this.city = city;
        this.contactType = contactType;
        this.countryCode = countryCode;
        this.email = email;
        this.extraParams = extraParams;
        this.fax = fax;
        this.firstName = firstName;
        this.lastName = lastName;
        this.organizationName = organizationName;
        this.phoneNumber = phoneNumber;
        this.state = state;
        this.zipCode = zipCode;
    }

    /**
     * @return First line of the contact&#39;s address.
     * 
     */
    public Optional<String> addressLine1() {
        return Optional.ofNullable(this.addressLine1);
    }
    /**
     * @return Second line of contact&#39;s address, if any.
     * 
     */
    public Optional<String> addressLine2() {
        return Optional.ofNullable(this.addressLine2);
    }
    /**
     * @return The city of the contact&#39;s address.
     * 
     */
    public Optional<String> city() {
        return Optional.ofNullable(this.city);
    }
    /**
     * @return Indicates whether the contact is a person, company, association, or public organization. See the [AWS API documentation](https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html#Route53Domains-Type-domains_ContactDetail-ContactType) for valid values.
     * 
     */
    public Optional<String> contactType() {
        return Optional.ofNullable(this.contactType);
    }
    /**
     * @return Code for the country of the contact&#39;s address. See the [AWS API documentation](https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html#Route53Domains-Type-domains_ContactDetail-CountryCode) for valid values.
     * 
     */
    public Optional<String> countryCode() {
        return Optional.ofNullable(this.countryCode);
    }
    /**
     * @return Email address of the contact.
     * 
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }
    /**
     * @return A key-value map of parameters required by certain top-level domains.
     * 
     */
    public Map<String,String> extraParams() {
        return this.extraParams == null ? Map.of() : this.extraParams;
    }
    /**
     * @return Fax number of the contact. Phone number must be specified in the format &#34;+[country dialing code].[number including any area code]&#34;.
     * 
     */
    public Optional<String> fax() {
        return Optional.ofNullable(this.fax);
    }
    /**
     * @return First name of contact.
     * 
     */
    public Optional<String> firstName() {
        return Optional.ofNullable(this.firstName);
    }
    /**
     * @return Last name of contact.
     * 
     */
    public Optional<String> lastName() {
        return Optional.ofNullable(this.lastName);
    }
    /**
     * @return Name of the organization for contact types other than `PERSON`.
     * 
     */
    public Optional<String> organizationName() {
        return Optional.ofNullable(this.organizationName);
    }
    /**
     * @return The phone number of the contact. Phone number must be specified in the format &#34;+[country dialing code].[number including any area code]&#34;.
     * 
     */
    public Optional<String> phoneNumber() {
        return Optional.ofNullable(this.phoneNumber);
    }
    /**
     * @return The state or province of the contact&#39;s city.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The zip or postal code of the contact&#39;s address.
     * 
     */
    public Optional<String> zipCode() {
        return Optional.ofNullable(this.zipCode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegisteredDomainTechContact defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String addressLine1;
        private @Nullable String addressLine2;
        private @Nullable String city;
        private @Nullable String contactType;
        private @Nullable String countryCode;
        private @Nullable String email;
        private @Nullable Map<String,String> extraParams;
        private @Nullable String fax;
        private @Nullable String firstName;
        private @Nullable String lastName;
        private @Nullable String organizationName;
        private @Nullable String phoneNumber;
        private @Nullable String state;
        private @Nullable String zipCode;

        public Builder() {
    	      // Empty
        }

        public Builder(RegisteredDomainTechContact defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressLine1 = defaults.addressLine1;
    	      this.addressLine2 = defaults.addressLine2;
    	      this.city = defaults.city;
    	      this.contactType = defaults.contactType;
    	      this.countryCode = defaults.countryCode;
    	      this.email = defaults.email;
    	      this.extraParams = defaults.extraParams;
    	      this.fax = defaults.fax;
    	      this.firstName = defaults.firstName;
    	      this.lastName = defaults.lastName;
    	      this.organizationName = defaults.organizationName;
    	      this.phoneNumber = defaults.phoneNumber;
    	      this.state = defaults.state;
    	      this.zipCode = defaults.zipCode;
        }

        public Builder addressLine1(@Nullable String addressLine1) {
            this.addressLine1 = addressLine1;
            return this;
        }
        public Builder addressLine2(@Nullable String addressLine2) {
            this.addressLine2 = addressLine2;
            return this;
        }
        public Builder city(@Nullable String city) {
            this.city = city;
            return this;
        }
        public Builder contactType(@Nullable String contactType) {
            this.contactType = contactType;
            return this;
        }
        public Builder countryCode(@Nullable String countryCode) {
            this.countryCode = countryCode;
            return this;
        }
        public Builder email(@Nullable String email) {
            this.email = email;
            return this;
        }
        public Builder extraParams(@Nullable Map<String,String> extraParams) {
            this.extraParams = extraParams;
            return this;
        }
        public Builder fax(@Nullable String fax) {
            this.fax = fax;
            return this;
        }
        public Builder firstName(@Nullable String firstName) {
            this.firstName = firstName;
            return this;
        }
        public Builder lastName(@Nullable String lastName) {
            this.lastName = lastName;
            return this;
        }
        public Builder organizationName(@Nullable String organizationName) {
            this.organizationName = organizationName;
            return this;
        }
        public Builder phoneNumber(@Nullable String phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder zipCode(@Nullable String zipCode) {
            this.zipCode = zipCode;
            return this;
        }        public RegisteredDomainTechContact build() {
            return new RegisteredDomainTechContact(addressLine1, addressLine2, city, contactType, countryCode, email, extraParams, fax, firstName, lastName, organizationName, phoneNumber, state, zipCode);
        }
    }
}
