// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetClusterKubernetesNetworkConfig extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterKubernetesNetworkConfig Empty = new GetClusterKubernetesNetworkConfig();

    @Import(name="ipFamily", required=true)
    private String ipFamily;

    public String ipFamily() {
        return this.ipFamily;
    }

    /**
     * The CIDR block to assign Kubernetes service IP addresses from.
     * 
     */
    @Import(name="serviceIpv4Cidr", required=true)
    private String serviceIpv4Cidr;

    public String serviceIpv4Cidr() {
        return this.serviceIpv4Cidr;
    }

    private GetClusterKubernetesNetworkConfig() {}

    private GetClusterKubernetesNetworkConfig(GetClusterKubernetesNetworkConfig $) {
        this.ipFamily = $.ipFamily;
        this.serviceIpv4Cidr = $.serviceIpv4Cidr;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterKubernetesNetworkConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterKubernetesNetworkConfig $;

        public Builder() {
            $ = new GetClusterKubernetesNetworkConfig();
        }

        public Builder(GetClusterKubernetesNetworkConfig defaults) {
            $ = new GetClusterKubernetesNetworkConfig(Objects.requireNonNull(defaults));
        }

        public Builder ipFamily(String ipFamily) {
            $.ipFamily = ipFamily;
            return this;
        }

        public Builder serviceIpv4Cidr(String serviceIpv4Cidr) {
            $.serviceIpv4Cidr = serviceIpv4Cidr;
            return this;
        }

        public GetClusterKubernetesNetworkConfig build() {
            $.ipFamily = Objects.requireNonNull($.ipFamily, "expected parameter 'ipFamily' to be non-null");
            $.serviceIpv4Cidr = Objects.requireNonNull($.serviceIpv4Cidr, "expected parameter 'serviceIpv4Cidr' to be non-null");
            return $;
        }
    }

}
