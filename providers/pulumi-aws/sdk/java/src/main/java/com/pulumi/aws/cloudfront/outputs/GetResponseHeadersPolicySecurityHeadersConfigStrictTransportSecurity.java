// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity {
    /**
     * @return A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    private final Integer accessControlMaxAgeSec;
    /**
     * @return A Boolean value that determines whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    private final Boolean includeSubdomains;
    /**
     * @return A Boolean value that determines whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     * 
     */
    private final Boolean override;
    /**
     * @return A Boolean value that determines whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    private final Boolean preload;

    @CustomType.Constructor
    private GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity(
        @CustomType.Parameter("accessControlMaxAgeSec") Integer accessControlMaxAgeSec,
        @CustomType.Parameter("includeSubdomains") Boolean includeSubdomains,
        @CustomType.Parameter("override") Boolean override,
        @CustomType.Parameter("preload") Boolean preload) {
        this.accessControlMaxAgeSec = accessControlMaxAgeSec;
        this.includeSubdomains = includeSubdomains;
        this.override = override;
        this.preload = preload;
    }

    /**
     * @return A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    public Integer accessControlMaxAgeSec() {
        return this.accessControlMaxAgeSec;
    }
    /**
     * @return A Boolean value that determines whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    public Boolean includeSubdomains() {
        return this.includeSubdomains;
    }
    /**
     * @return A Boolean value that determines whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     * 
     */
    public Boolean override() {
        return this.override;
    }
    /**
     * @return A Boolean value that determines whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    public Boolean preload() {
        return this.preload;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer accessControlMaxAgeSec;
        private Boolean includeSubdomains;
        private Boolean override;
        private Boolean preload;

        public Builder() {
    	      // Empty
        }

        public Builder(GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlMaxAgeSec = defaults.accessControlMaxAgeSec;
    	      this.includeSubdomains = defaults.includeSubdomains;
    	      this.override = defaults.override;
    	      this.preload = defaults.preload;
        }

        public Builder accessControlMaxAgeSec(Integer accessControlMaxAgeSec) {
            this.accessControlMaxAgeSec = Objects.requireNonNull(accessControlMaxAgeSec);
            return this;
        }
        public Builder includeSubdomains(Boolean includeSubdomains) {
            this.includeSubdomains = Objects.requireNonNull(includeSubdomains);
            return this;
        }
        public Builder override(Boolean override) {
            this.override = Objects.requireNonNull(override);
            return this;
        }
        public Builder preload(Boolean preload) {
            this.preload = Objects.requireNonNull(preload);
            return this;
        }        public GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity build() {
            return new GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity(accessControlMaxAgeSec, includeSubdomains, override, preload);
        }
    }
}
