// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class UserPoolSmsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserPoolSmsConfigurationArgs Empty = new UserPoolSmsConfigurationArgs();

    /**
     * External ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
     * 
     */
    @Import(name="externalId", required=true)
    private Output<String> externalId;

    public Output<String> externalId() {
        return this.externalId;
    }

    /**
     * ARN of the Amazon SNS caller. This is usually the IAM role that you&#39;ve given Cognito permission to assume.
     * 
     */
    @Import(name="snsCallerArn", required=true)
    private Output<String> snsCallerArn;

    public Output<String> snsCallerArn() {
        return this.snsCallerArn;
    }

    private UserPoolSmsConfigurationArgs() {}

    private UserPoolSmsConfigurationArgs(UserPoolSmsConfigurationArgs $) {
        this.externalId = $.externalId;
        this.snsCallerArn = $.snsCallerArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPoolSmsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPoolSmsConfigurationArgs $;

        public Builder() {
            $ = new UserPoolSmsConfigurationArgs();
        }

        public Builder(UserPoolSmsConfigurationArgs defaults) {
            $ = new UserPoolSmsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder externalId(Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        public Builder snsCallerArn(Output<String> snsCallerArn) {
            $.snsCallerArn = snsCallerArn;
            return this;
        }

        public Builder snsCallerArn(String snsCallerArn) {
            return snsCallerArn(Output.of(snsCallerArn));
        }

        public UserPoolSmsConfigurationArgs build() {
            $.externalId = Objects.requireNonNull($.externalId, "expected parameter 'externalId' to be non-null");
            $.snsCallerArn = Objects.requireNonNull($.snsCallerArn, "expected parameter 'snsCallerArn' to be non-null");
            return $;
        }
    }

}
