// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr.inputs;

import com.pulumi.aws.emr.inputs.ClusterAutoTerminationPolicyGetArgs;
import com.pulumi.aws.emr.inputs.ClusterBootstrapActionGetArgs;
import com.pulumi.aws.emr.inputs.ClusterCoreInstanceFleetGetArgs;
import com.pulumi.aws.emr.inputs.ClusterCoreInstanceGroupGetArgs;
import com.pulumi.aws.emr.inputs.ClusterEc2AttributesGetArgs;
import com.pulumi.aws.emr.inputs.ClusterKerberosAttributesGetArgs;
import com.pulumi.aws.emr.inputs.ClusterMasterInstanceFleetGetArgs;
import com.pulumi.aws.emr.inputs.ClusterMasterInstanceGroupGetArgs;
import com.pulumi.aws.emr.inputs.ClusterStepGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore this provider cannot detect drift from the actual EMR cluster if its value is changed outside this provider.
     * 
     */
    @Import(name="additionalInfo")
    private @Nullable Output<String> additionalInfo;

    public Optional<Output<String>> additionalInfo() {
        return Optional.ofNullable(this.additionalInfo);
    }

    /**
     * List of applications for the cluster. Valid values are: `Flink`, `Hadoop`, `Hive`, `Mahout`, `Pig`, `Spark`, and `JupyterHub` (as of EMR 5.14.0). Case insensitive.
     * 
     */
    @Import(name="applications")
    private @Nullable Output<List<String>> applications;

    public Optional<Output<List<String>>> applications() {
        return Optional.ofNullable(this.applications);
    }

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
     * 
     */
    @Import(name="autoTerminationPolicy")
    private @Nullable Output<ClusterAutoTerminationPolicyGetArgs> autoTerminationPolicy;

    public Optional<Output<ClusterAutoTerminationPolicyGetArgs>> autoTerminationPolicy() {
        return Optional.ofNullable(this.autoTerminationPolicy);
    }

    /**
     * IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
     * 
     */
    @Import(name="autoscalingRole")
    private @Nullable Output<String> autoscalingRole;

    public Optional<Output<String>> autoscalingRole() {
        return Optional.ofNullable(this.autoscalingRole);
    }

    /**
     * Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
     * 
     */
    @Import(name="bootstrapActions")
    private @Nullable Output<List<ClusterBootstrapActionGetArgs>> bootstrapActions;

    public Optional<Output<List<ClusterBootstrapActionGetArgs>>> bootstrapActions() {
        return Optional.ofNullable(this.bootstrapActions);
    }

    @Import(name="clusterState")
    private @Nullable Output<String> clusterState;

    public Optional<Output<String>> clusterState() {
        return Optional.ofNullable(this.clusterState);
    }

    /**
     * Configuration classification that applies when provisioning cluster instances, which can include configurations for applications and software that run on the cluster. List of `configuration` blocks.
     * 
     */
    @Import(name="configurations")
    private @Nullable Output<String> configurations;

    public Optional<Output<String>> configurations() {
        return Optional.ofNullable(this.configurations);
    }

    /**
     * JSON string for supplying list of configurations for the EMR cluster.
     * 
     */
    @Import(name="configurationsJson")
    private @Nullable Output<String> configurationsJson;

    public Optional<Output<String>> configurationsJson() {
        return Optional.ofNullable(this.configurationsJson);
    }

    /**
     * Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `core_instance_group` configuration blocks are set. Detailed below.
     * 
     */
    @Import(name="coreInstanceFleet")
    private @Nullable Output<ClusterCoreInstanceFleetGetArgs> coreInstanceFleet;

    public Optional<Output<ClusterCoreInstanceFleetGetArgs>> coreInstanceFleet() {
        return Optional.ofNullable(this.coreInstanceFleet);
    }

    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
     * 
     */
    @Import(name="coreInstanceGroup")
    private @Nullable Output<ClusterCoreInstanceGroupGetArgs> coreInstanceGroup;

    public Optional<Output<ClusterCoreInstanceGroupGetArgs>> coreInstanceGroup() {
        return Optional.ofNullable(this.coreInstanceGroup);
    }

    /**
     * Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
     * 
     */
    @Import(name="customAmiId")
    private @Nullable Output<String> customAmiId;

    public Optional<Output<String>> customAmiId() {
        return Optional.ofNullable(this.customAmiId);
    }

    /**
     * Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
     * 
     */
    @Import(name="ebsRootVolumeSize")
    private @Nullable Output<Integer> ebsRootVolumeSize;

    public Optional<Output<Integer>> ebsRootVolumeSize() {
        return Optional.ofNullable(this.ebsRootVolumeSize);
    }

    /**
     * Attributes for the EC2 instances running the job flow. See below.
     * 
     */
    @Import(name="ec2Attributes")
    private @Nullable Output<ClusterEc2AttributesGetArgs> ec2Attributes;

    public Optional<Output<ClusterEc2AttributesGetArgs>> ec2Attributes() {
        return Optional.ofNullable(this.ec2Attributes);
    }

    /**
     * Switch on/off run cluster with no steps or when all steps are complete (default is on)
     * 
     */
    @Import(name="keepJobFlowAliveWhenNoSteps")
    private @Nullable Output<Boolean> keepJobFlowAliveWhenNoSteps;

    public Optional<Output<Boolean>> keepJobFlowAliveWhenNoSteps() {
        return Optional.ofNullable(this.keepJobFlowAliveWhenNoSteps);
    }

    /**
     * Kerberos configuration for the cluster. See below.
     * 
     */
    @Import(name="kerberosAttributes")
    private @Nullable Output<ClusterKerberosAttributesGetArgs> kerberosAttributes;

    public Optional<Output<ClusterKerberosAttributesGetArgs>> kerberosAttributes() {
        return Optional.ofNullable(this.kerberosAttributes);
    }

    /**
     * AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
     * 
     */
    @Import(name="logEncryptionKmsKeyId")
    private @Nullable Output<String> logEncryptionKmsKeyId;

    public Optional<Output<String>> logEncryptionKmsKeyId() {
        return Optional.ofNullable(this.logEncryptionKmsKeyId);
    }

    /**
     * S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
     * 
     */
    @Import(name="logUri")
    private @Nullable Output<String> logUri;

    public Optional<Output<String>> logUri() {
        return Optional.ofNullable(this.logUri);
    }

    /**
     * Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `master_instance_group` configuration blocks are set. Detailed below.
     * 
     */
    @Import(name="masterInstanceFleet")
    private @Nullable Output<ClusterMasterInstanceFleetGetArgs> masterInstanceFleet;

    public Optional<Output<ClusterMasterInstanceFleetGetArgs>> masterInstanceFleet() {
        return Optional.ofNullable(this.masterInstanceFleet);
    }

    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
     * 
     */
    @Import(name="masterInstanceGroup")
    private @Nullable Output<ClusterMasterInstanceGroupGetArgs> masterInstanceGroup;

    public Optional<Output<ClusterMasterInstanceGroupGetArgs>> masterInstanceGroup() {
        return Optional.ofNullable(this.masterInstanceGroup);
    }

    /**
     * The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
     * 
     */
    @Import(name="masterPublicDns")
    private @Nullable Output<String> masterPublicDns;

    public Optional<Output<String>> masterPublicDns() {
        return Optional.ofNullable(this.masterPublicDns);
    }

    /**
     * Name of the step.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Release label for the Amazon EMR release.
     * 
     */
    @Import(name="releaseLabel")
    private @Nullable Output<String> releaseLabel;

    public Optional<Output<String>> releaseLabel() {
        return Optional.ofNullable(this.releaseLabel);
    }

    /**
     * Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
     * 
     */
    @Import(name="scaleDownBehavior")
    private @Nullable Output<String> scaleDownBehavior;

    public Optional<Output<String>> scaleDownBehavior() {
        return Optional.ofNullable(this.scaleDownBehavior);
    }

    /**
     * Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater.
     * 
     */
    @Import(name="securityConfiguration")
    private @Nullable Output<String> securityConfiguration;

    public Optional<Output<String>> securityConfiguration() {
        return Optional.ofNullable(this.securityConfiguration);
    }

    /**
     * IAM role that will be assumed by the Amazon EMR service to access AWS resources.
     * 
     */
    @Import(name="serviceRole")
    private @Nullable Output<String> serviceRole;

    public Optional<Output<String>> serviceRole() {
        return Optional.ofNullable(this.serviceRole);
    }

    /**
     * Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater (default is 1).
     * 
     */
    @Import(name="stepConcurrencyLevel")
    private @Nullable Output<Integer> stepConcurrencyLevel;

    public Optional<Output<Integer>> stepConcurrencyLevel() {
        return Optional.ofNullable(this.stepConcurrencyLevel);
    }

    /**
     * List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
     * 
     */
    @Import(name="steps")
    private @Nullable Output<List<ClusterStepGetArgs>> steps;

    public Optional<Output<List<ClusterStepGetArgs>>> steps() {
        return Optional.ofNullable(this.steps);
    }

    /**
     * list of tags to apply to the EMR Cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    /**
     * Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
     * 
     */
    @Import(name="terminationProtection")
    private @Nullable Output<Boolean> terminationProtection;

    public Optional<Output<Boolean>> terminationProtection() {
        return Optional.ofNullable(this.terminationProtection);
    }

    /**
     * Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
     * 
     */
    @Import(name="visibleToAllUsers")
    private @Nullable Output<Boolean> visibleToAllUsers;

    public Optional<Output<Boolean>> visibleToAllUsers() {
        return Optional.ofNullable(this.visibleToAllUsers);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.additionalInfo = $.additionalInfo;
        this.applications = $.applications;
        this.arn = $.arn;
        this.autoTerminationPolicy = $.autoTerminationPolicy;
        this.autoscalingRole = $.autoscalingRole;
        this.bootstrapActions = $.bootstrapActions;
        this.clusterState = $.clusterState;
        this.configurations = $.configurations;
        this.configurationsJson = $.configurationsJson;
        this.coreInstanceFleet = $.coreInstanceFleet;
        this.coreInstanceGroup = $.coreInstanceGroup;
        this.customAmiId = $.customAmiId;
        this.ebsRootVolumeSize = $.ebsRootVolumeSize;
        this.ec2Attributes = $.ec2Attributes;
        this.keepJobFlowAliveWhenNoSteps = $.keepJobFlowAliveWhenNoSteps;
        this.kerberosAttributes = $.kerberosAttributes;
        this.logEncryptionKmsKeyId = $.logEncryptionKmsKeyId;
        this.logUri = $.logUri;
        this.masterInstanceFleet = $.masterInstanceFleet;
        this.masterInstanceGroup = $.masterInstanceGroup;
        this.masterPublicDns = $.masterPublicDns;
        this.name = $.name;
        this.releaseLabel = $.releaseLabel;
        this.scaleDownBehavior = $.scaleDownBehavior;
        this.securityConfiguration = $.securityConfiguration;
        this.serviceRole = $.serviceRole;
        this.stepConcurrencyLevel = $.stepConcurrencyLevel;
        this.steps = $.steps;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
        this.terminationProtection = $.terminationProtection;
        this.visibleToAllUsers = $.visibleToAllUsers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        public Builder additionalInfo(@Nullable Output<String> additionalInfo) {
            $.additionalInfo = additionalInfo;
            return this;
        }

        public Builder additionalInfo(String additionalInfo) {
            return additionalInfo(Output.of(additionalInfo));
        }

        public Builder applications(@Nullable Output<List<String>> applications) {
            $.applications = applications;
            return this;
        }

        public Builder applications(List<String> applications) {
            return applications(Output.of(applications));
        }

        public Builder applications(String... applications) {
            return applications(List.of(applications));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder autoTerminationPolicy(@Nullable Output<ClusterAutoTerminationPolicyGetArgs> autoTerminationPolicy) {
            $.autoTerminationPolicy = autoTerminationPolicy;
            return this;
        }

        public Builder autoTerminationPolicy(ClusterAutoTerminationPolicyGetArgs autoTerminationPolicy) {
            return autoTerminationPolicy(Output.of(autoTerminationPolicy));
        }

        public Builder autoscalingRole(@Nullable Output<String> autoscalingRole) {
            $.autoscalingRole = autoscalingRole;
            return this;
        }

        public Builder autoscalingRole(String autoscalingRole) {
            return autoscalingRole(Output.of(autoscalingRole));
        }

        public Builder bootstrapActions(@Nullable Output<List<ClusterBootstrapActionGetArgs>> bootstrapActions) {
            $.bootstrapActions = bootstrapActions;
            return this;
        }

        public Builder bootstrapActions(List<ClusterBootstrapActionGetArgs> bootstrapActions) {
            return bootstrapActions(Output.of(bootstrapActions));
        }

        public Builder bootstrapActions(ClusterBootstrapActionGetArgs... bootstrapActions) {
            return bootstrapActions(List.of(bootstrapActions));
        }

        public Builder clusterState(@Nullable Output<String> clusterState) {
            $.clusterState = clusterState;
            return this;
        }

        public Builder clusterState(String clusterState) {
            return clusterState(Output.of(clusterState));
        }

        public Builder configurations(@Nullable Output<String> configurations) {
            $.configurations = configurations;
            return this;
        }

        public Builder configurations(String configurations) {
            return configurations(Output.of(configurations));
        }

        public Builder configurationsJson(@Nullable Output<String> configurationsJson) {
            $.configurationsJson = configurationsJson;
            return this;
        }

        public Builder configurationsJson(String configurationsJson) {
            return configurationsJson(Output.of(configurationsJson));
        }

        public Builder coreInstanceFleet(@Nullable Output<ClusterCoreInstanceFleetGetArgs> coreInstanceFleet) {
            $.coreInstanceFleet = coreInstanceFleet;
            return this;
        }

        public Builder coreInstanceFleet(ClusterCoreInstanceFleetGetArgs coreInstanceFleet) {
            return coreInstanceFleet(Output.of(coreInstanceFleet));
        }

        public Builder coreInstanceGroup(@Nullable Output<ClusterCoreInstanceGroupGetArgs> coreInstanceGroup) {
            $.coreInstanceGroup = coreInstanceGroup;
            return this;
        }

        public Builder coreInstanceGroup(ClusterCoreInstanceGroupGetArgs coreInstanceGroup) {
            return coreInstanceGroup(Output.of(coreInstanceGroup));
        }

        public Builder customAmiId(@Nullable Output<String> customAmiId) {
            $.customAmiId = customAmiId;
            return this;
        }

        public Builder customAmiId(String customAmiId) {
            return customAmiId(Output.of(customAmiId));
        }

        public Builder ebsRootVolumeSize(@Nullable Output<Integer> ebsRootVolumeSize) {
            $.ebsRootVolumeSize = ebsRootVolumeSize;
            return this;
        }

        public Builder ebsRootVolumeSize(Integer ebsRootVolumeSize) {
            return ebsRootVolumeSize(Output.of(ebsRootVolumeSize));
        }

        public Builder ec2Attributes(@Nullable Output<ClusterEc2AttributesGetArgs> ec2Attributes) {
            $.ec2Attributes = ec2Attributes;
            return this;
        }

        public Builder ec2Attributes(ClusterEc2AttributesGetArgs ec2Attributes) {
            return ec2Attributes(Output.of(ec2Attributes));
        }

        public Builder keepJobFlowAliveWhenNoSteps(@Nullable Output<Boolean> keepJobFlowAliveWhenNoSteps) {
            $.keepJobFlowAliveWhenNoSteps = keepJobFlowAliveWhenNoSteps;
            return this;
        }

        public Builder keepJobFlowAliveWhenNoSteps(Boolean keepJobFlowAliveWhenNoSteps) {
            return keepJobFlowAliveWhenNoSteps(Output.of(keepJobFlowAliveWhenNoSteps));
        }

        public Builder kerberosAttributes(@Nullable Output<ClusterKerberosAttributesGetArgs> kerberosAttributes) {
            $.kerberosAttributes = kerberosAttributes;
            return this;
        }

        public Builder kerberosAttributes(ClusterKerberosAttributesGetArgs kerberosAttributes) {
            return kerberosAttributes(Output.of(kerberosAttributes));
        }

        public Builder logEncryptionKmsKeyId(@Nullable Output<String> logEncryptionKmsKeyId) {
            $.logEncryptionKmsKeyId = logEncryptionKmsKeyId;
            return this;
        }

        public Builder logEncryptionKmsKeyId(String logEncryptionKmsKeyId) {
            return logEncryptionKmsKeyId(Output.of(logEncryptionKmsKeyId));
        }

        public Builder logUri(@Nullable Output<String> logUri) {
            $.logUri = logUri;
            return this;
        }

        public Builder logUri(String logUri) {
            return logUri(Output.of(logUri));
        }

        public Builder masterInstanceFleet(@Nullable Output<ClusterMasterInstanceFleetGetArgs> masterInstanceFleet) {
            $.masterInstanceFleet = masterInstanceFleet;
            return this;
        }

        public Builder masterInstanceFleet(ClusterMasterInstanceFleetGetArgs masterInstanceFleet) {
            return masterInstanceFleet(Output.of(masterInstanceFleet));
        }

        public Builder masterInstanceGroup(@Nullable Output<ClusterMasterInstanceGroupGetArgs> masterInstanceGroup) {
            $.masterInstanceGroup = masterInstanceGroup;
            return this;
        }

        public Builder masterInstanceGroup(ClusterMasterInstanceGroupGetArgs masterInstanceGroup) {
            return masterInstanceGroup(Output.of(masterInstanceGroup));
        }

        public Builder masterPublicDns(@Nullable Output<String> masterPublicDns) {
            $.masterPublicDns = masterPublicDns;
            return this;
        }

        public Builder masterPublicDns(String masterPublicDns) {
            return masterPublicDns(Output.of(masterPublicDns));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder releaseLabel(@Nullable Output<String> releaseLabel) {
            $.releaseLabel = releaseLabel;
            return this;
        }

        public Builder releaseLabel(String releaseLabel) {
            return releaseLabel(Output.of(releaseLabel));
        }

        public Builder scaleDownBehavior(@Nullable Output<String> scaleDownBehavior) {
            $.scaleDownBehavior = scaleDownBehavior;
            return this;
        }

        public Builder scaleDownBehavior(String scaleDownBehavior) {
            return scaleDownBehavior(Output.of(scaleDownBehavior));
        }

        public Builder securityConfiguration(@Nullable Output<String> securityConfiguration) {
            $.securityConfiguration = securityConfiguration;
            return this;
        }

        public Builder securityConfiguration(String securityConfiguration) {
            return securityConfiguration(Output.of(securityConfiguration));
        }

        public Builder serviceRole(@Nullable Output<String> serviceRole) {
            $.serviceRole = serviceRole;
            return this;
        }

        public Builder serviceRole(String serviceRole) {
            return serviceRole(Output.of(serviceRole));
        }

        public Builder stepConcurrencyLevel(@Nullable Output<Integer> stepConcurrencyLevel) {
            $.stepConcurrencyLevel = stepConcurrencyLevel;
            return this;
        }

        public Builder stepConcurrencyLevel(Integer stepConcurrencyLevel) {
            return stepConcurrencyLevel(Output.of(stepConcurrencyLevel));
        }

        public Builder steps(@Nullable Output<List<ClusterStepGetArgs>> steps) {
            $.steps = steps;
            return this;
        }

        public Builder steps(List<ClusterStepGetArgs> steps) {
            return steps(Output.of(steps));
        }

        public Builder steps(ClusterStepGetArgs... steps) {
            return steps(List.of(steps));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public Builder terminationProtection(@Nullable Output<Boolean> terminationProtection) {
            $.terminationProtection = terminationProtection;
            return this;
        }

        public Builder terminationProtection(Boolean terminationProtection) {
            return terminationProtection(Output.of(terminationProtection));
        }

        public Builder visibleToAllUsers(@Nullable Output<Boolean> visibleToAllUsers) {
            $.visibleToAllUsers = visibleToAllUsers;
            return this;
        }

        public Builder visibleToAllUsers(Boolean visibleToAllUsers) {
            return visibleToAllUsers(Output.of(visibleToAllUsers));
        }

        public ClusterState build() {
            return $;
        }
    }

}
