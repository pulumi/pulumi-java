// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.outputs;

import com.pulumi.aws.glue.outputs.GetScriptDagNodeArg;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetScriptDagNode {
    /**
     * @return Nested configuration an argument or property of a node. Defined below.
     * 
     */
    private final List<GetScriptDagNodeArg> args;
    /**
     * @return A node identifier that is unique within the node&#39;s graph.
     * 
     */
    private final String id;
    /**
     * @return The line number of the node.
     * 
     */
    private final @Nullable Integer lineNumber;
    /**
     * @return The type of node this is.
     * 
     */
    private final String nodeType;

    @CustomType.Constructor
    private GetScriptDagNode(
        @CustomType.Parameter("args") List<GetScriptDagNodeArg> args,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lineNumber") @Nullable Integer lineNumber,
        @CustomType.Parameter("nodeType") String nodeType) {
        this.args = args;
        this.id = id;
        this.lineNumber = lineNumber;
        this.nodeType = nodeType;
    }

    /**
     * @return Nested configuration an argument or property of a node. Defined below.
     * 
     */
    public List<GetScriptDagNodeArg> args() {
        return this.args;
    }
    /**
     * @return A node identifier that is unique within the node&#39;s graph.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The line number of the node.
     * 
     */
    public Optional<Integer> lineNumber() {
        return Optional.ofNullable(this.lineNumber);
    }
    /**
     * @return The type of node this is.
     * 
     */
    public String nodeType() {
        return this.nodeType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScriptDagNode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetScriptDagNodeArg> args;
        private String id;
        private @Nullable Integer lineNumber;
        private String nodeType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetScriptDagNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.args = defaults.args;
    	      this.id = defaults.id;
    	      this.lineNumber = defaults.lineNumber;
    	      this.nodeType = defaults.nodeType;
        }

        public Builder args(List<GetScriptDagNodeArg> args) {
            this.args = Objects.requireNonNull(args);
            return this;
        }
        public Builder args(GetScriptDagNodeArg... args) {
            return args(List.of(args));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lineNumber(@Nullable Integer lineNumber) {
            this.lineNumber = lineNumber;
            return this;
        }
        public Builder nodeType(String nodeType) {
            this.nodeType = Objects.requireNonNull(nodeType);
            return this;
        }        public GetScriptDagNode build() {
            return new GetScriptDagNode(args, id, lineNumber, nodeType);
        }
    }
}
