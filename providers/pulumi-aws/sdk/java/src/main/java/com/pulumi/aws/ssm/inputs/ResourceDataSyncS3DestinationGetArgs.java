// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ssm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceDataSyncS3DestinationGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceDataSyncS3DestinationGetArgs Empty = new ResourceDataSyncS3DestinationGetArgs();

    /**
     * Name of S3 bucket where the aggregated data is stored.
     * 
     */
    @Import(name="bucketName", required=true)
    private Output<String> bucketName;

    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * ARN of an encryption key for a destination in Amazon S3.
     * 
     */
    @Import(name="kmsKeyArn")
    private @Nullable Output<String> kmsKeyArn;

    public Optional<Output<String>> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }

    /**
     * Prefix for the bucket.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Region with the bucket targeted by the Resource Data Sync.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    /**
     * A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.
     * 
     */
    @Import(name="syncFormat")
    private @Nullable Output<String> syncFormat;

    public Optional<Output<String>> syncFormat() {
        return Optional.ofNullable(this.syncFormat);
    }

    private ResourceDataSyncS3DestinationGetArgs() {}

    private ResourceDataSyncS3DestinationGetArgs(ResourceDataSyncS3DestinationGetArgs $) {
        this.bucketName = $.bucketName;
        this.kmsKeyArn = $.kmsKeyArn;
        this.prefix = $.prefix;
        this.region = $.region;
        this.syncFormat = $.syncFormat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceDataSyncS3DestinationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceDataSyncS3DestinationGetArgs $;

        public Builder() {
            $ = new ResourceDataSyncS3DestinationGetArgs();
        }

        public Builder(ResourceDataSyncS3DestinationGetArgs defaults) {
            $ = new ResourceDataSyncS3DestinationGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucketName(Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            $.kmsKeyArn = kmsKeyArn;
            return this;
        }

        public Builder kmsKeyArn(String kmsKeyArn) {
            return kmsKeyArn(Output.of(kmsKeyArn));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder syncFormat(@Nullable Output<String> syncFormat) {
            $.syncFormat = syncFormat;
            return this;
        }

        public Builder syncFormat(String syncFormat) {
            return syncFormat(Output.of(syncFormat));
        }

        public ResourceDataSyncS3DestinationGetArgs build() {
            $.bucketName = Objects.requireNonNull($.bucketName, "expected parameter 'bucketName' to be non-null");
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            return $;
        }
    }

}
