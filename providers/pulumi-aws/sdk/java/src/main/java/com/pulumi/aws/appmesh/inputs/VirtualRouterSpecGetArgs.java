// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualRouterSpecListenerGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


public final class VirtualRouterSpecGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualRouterSpecGetArgs Empty = new VirtualRouterSpecGetArgs();

    /**
     * The listeners that the virtual router is expected to receive inbound traffic from.
     * Currently only one listener is supported per virtual router.
     * 
     */
    @Import(name="listener", required=true)
    private Output<VirtualRouterSpecListenerGetArgs> listener;

    /**
     * @return The listeners that the virtual router is expected to receive inbound traffic from.
     * Currently only one listener is supported per virtual router.
     * 
     */
    public Output<VirtualRouterSpecListenerGetArgs> listener() {
        return this.listener;
    }

    private VirtualRouterSpecGetArgs() {}

    private VirtualRouterSpecGetArgs(VirtualRouterSpecGetArgs $) {
        this.listener = $.listener;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualRouterSpecGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualRouterSpecGetArgs $;

        public Builder() {
            $ = new VirtualRouterSpecGetArgs();
        }

        public Builder(VirtualRouterSpecGetArgs defaults) {
            $ = new VirtualRouterSpecGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param listener The listeners that the virtual router is expected to receive inbound traffic from.
         * Currently only one listener is supported per virtual router.
         * 
         * @return builder
         * 
         */
        public Builder listener(Output<VirtualRouterSpecListenerGetArgs> listener) {
            $.listener = listener;
            return this;
        }

        /**
         * @param listener The listeners that the virtual router is expected to receive inbound traffic from.
         * Currently only one listener is supported per virtual router.
         * 
         * @return builder
         * 
         */
        public Builder listener(VirtualRouterSpecListenerGetArgs listener) {
            return listener(Output.of(listener));
        }

        public VirtualRouterSpecGetArgs build() {
            $.listener = Objects.requireNonNull($.listener, "expected parameter 'listener' to be non-null");
            return $;
        }
    }

}
