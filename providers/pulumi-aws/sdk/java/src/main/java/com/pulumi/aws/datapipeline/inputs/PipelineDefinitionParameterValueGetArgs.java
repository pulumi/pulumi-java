// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.datapipeline.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class PipelineDefinitionParameterValueGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineDefinitionParameterValueGetArgs Empty = new PipelineDefinitionParameterValueGetArgs();

    /**
     * ID of the parameter value.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    /**
     * Field value, expressed as a String.
     * 
     */
    @Import(name="stringValue", required=true)
    private Output<String> stringValue;

    public Output<String> stringValue() {
        return this.stringValue;
    }

    private PipelineDefinitionParameterValueGetArgs() {}

    private PipelineDefinitionParameterValueGetArgs(PipelineDefinitionParameterValueGetArgs $) {
        this.id = $.id;
        this.stringValue = $.stringValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineDefinitionParameterValueGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineDefinitionParameterValueGetArgs $;

        public Builder() {
            $ = new PipelineDefinitionParameterValueGetArgs();
        }

        public Builder(PipelineDefinitionParameterValueGetArgs defaults) {
            $ = new PipelineDefinitionParameterValueGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder stringValue(Output<String> stringValue) {
            $.stringValue = stringValue;
            return this;
        }

        public Builder stringValue(String stringValue) {
            return stringValue(Output.of(stringValue));
        }

        public PipelineDefinitionParameterValueGetArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.stringValue = Objects.requireNonNull($.stringValue, "expected parameter 'stringValue' to be non-null");
            return $;
        }
    }

}
