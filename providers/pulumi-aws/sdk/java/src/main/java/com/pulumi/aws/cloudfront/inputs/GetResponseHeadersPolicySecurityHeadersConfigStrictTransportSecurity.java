// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


public final class GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity extends com.pulumi.resources.InvokeArgs {

    public static final GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity Empty = new GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity();

    /**
     * A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    @Import(name="accessControlMaxAgeSec", required=true)
    private Integer accessControlMaxAgeSec;

    /**
     * @return A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    public Integer accessControlMaxAgeSec() {
        return this.accessControlMaxAgeSec;
    }

    /**
     * A Boolean value that determines whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    @Import(name="includeSubdomains", required=true)
    private Boolean includeSubdomains;

    /**
     * @return A Boolean value that determines whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    public Boolean includeSubdomains() {
        return this.includeSubdomains;
    }

    /**
     * A Boolean value that determines whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     * 
     */
    @Import(name="override", required=true)
    private Boolean override;

    /**
     * @return A Boolean value that determines whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
     * 
     */
    public Boolean override() {
        return this.override;
    }

    /**
     * A Boolean value that determines whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    @Import(name="preload", required=true)
    private Boolean preload;

    /**
     * @return A Boolean value that determines whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.
     * 
     */
    public Boolean preload() {
        return this.preload;
    }

    private GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity() {}

    private GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity(GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity $) {
        this.accessControlMaxAgeSec = $.accessControlMaxAgeSec;
        this.includeSubdomains = $.includeSubdomains;
        this.override = $.override;
        this.preload = $.preload;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity $;

        public Builder() {
            $ = new GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity();
        }

        public Builder(GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity defaults) {
            $ = new GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessControlMaxAgeSec A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
         * 
         * @return builder
         * 
         */
        public Builder accessControlMaxAgeSec(Integer accessControlMaxAgeSec) {
            $.accessControlMaxAgeSec = accessControlMaxAgeSec;
            return this;
        }

        /**
         * @param includeSubdomains A Boolean value that determines whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.
         * 
         * @return builder
         * 
         */
        public Builder includeSubdomains(Boolean includeSubdomains) {
            $.includeSubdomains = includeSubdomains;
            return this;
        }

        /**
         * @param override A Boolean value that determines whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
         * 
         * @return builder
         * 
         */
        public Builder override(Boolean override) {
            $.override = override;
            return this;
        }

        /**
         * @param preload A Boolean value that determines whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.
         * 
         * @return builder
         * 
         */
        public Builder preload(Boolean preload) {
            $.preload = preload;
            return this;
        }

        public GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity build() {
            $.accessControlMaxAgeSec = Objects.requireNonNull($.accessControlMaxAgeSec, "expected parameter 'accessControlMaxAgeSec' to be non-null");
            $.includeSubdomains = Objects.requireNonNull($.includeSubdomains, "expected parameter 'includeSubdomains' to be non-null");
            $.override = Objects.requireNonNull($.override, "expected parameter 'override' to be non-null");
            $.preload = Objects.requireNonNull($.preload, "expected parameter 'preload' to be non-null");
            return $;
        }
    }

}
