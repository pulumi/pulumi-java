// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class RegistryScanningConfigurationRuleRepositoryFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistryScanningConfigurationRuleRepositoryFilterArgs Empty = new RegistryScanningConfigurationRuleRepositoryFilterArgs();

    @Import(name="filter", required=true)
      private final Output<String> filter;

    public Output<String> filter() {
        return this.filter;
    }

    @Import(name="filterType", required=true)
      private final Output<String> filterType;

    public Output<String> filterType() {
        return this.filterType;
    }

    public RegistryScanningConfigurationRuleRepositoryFilterArgs(
        Output<String> filter,
        Output<String> filterType) {
        this.filter = Objects.requireNonNull(filter, "expected parameter 'filter' to be non-null");
        this.filterType = Objects.requireNonNull(filterType, "expected parameter 'filterType' to be non-null");
    }

    private RegistryScanningConfigurationRuleRepositoryFilterArgs() {
        this.filter = Codegen.empty();
        this.filterType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryScanningConfigurationRuleRepositoryFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> filter;
        private Output<String> filterType;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistryScanningConfigurationRuleRepositoryFilterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.filterType = defaults.filterType;
        }

        public Builder filter(Output<String> filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        public Builder filter(String filter) {
            this.filter = Output.of(Objects.requireNonNull(filter));
            return this;
        }
        public Builder filterType(Output<String> filterType) {
            this.filterType = Objects.requireNonNull(filterType);
            return this;
        }
        public Builder filterType(String filterType) {
            this.filterType = Output.of(Objects.requireNonNull(filterType));
            return this;
        }        public RegistryScanningConfigurationRuleRepositoryFilterArgs build() {
            return new RegistryScanningConfigurationRuleRepositoryFilterArgs(filter, filterType);
        }
    }
}
