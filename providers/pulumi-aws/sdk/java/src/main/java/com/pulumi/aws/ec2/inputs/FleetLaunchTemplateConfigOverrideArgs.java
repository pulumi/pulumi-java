// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetLaunchTemplateConfigOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetLaunchTemplateConfigOverrideArgs Empty = new FleetLaunchTemplateConfigOverrideArgs();

    /**
     * Availability Zone in which to launch the instances.
     * 
     */
    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    /**
     * Instance type.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Maximum price per unit hour that you are willing to pay for a Spot Instance.
     * 
     */
    @Import(name="maxPrice")
    private @Nullable Output<String> maxPrice;

    public Optional<Output<String>> maxPrice() {
        return Optional.ofNullable(this.maxPrice);
    }

    /**
     * Priority for the launch template override. If `on_demand_options` `allocation_strategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Double> priority;

    public Optional<Output<Double>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * ID of the subnet in which to launch the instances.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * Number of units provided by the specified instance type.
     * 
     */
    @Import(name="weightedCapacity")
    private @Nullable Output<Double> weightedCapacity;

    public Optional<Output<Double>> weightedCapacity() {
        return Optional.ofNullable(this.weightedCapacity);
    }

    private FleetLaunchTemplateConfigOverrideArgs() {}

    private FleetLaunchTemplateConfigOverrideArgs(FleetLaunchTemplateConfigOverrideArgs $) {
        this.availabilityZone = $.availabilityZone;
        this.instanceType = $.instanceType;
        this.maxPrice = $.maxPrice;
        this.priority = $.priority;
        this.subnetId = $.subnetId;
        this.weightedCapacity = $.weightedCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetLaunchTemplateConfigOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetLaunchTemplateConfigOverrideArgs $;

        public Builder() {
            $ = new FleetLaunchTemplateConfigOverrideArgs();
        }

        public Builder(FleetLaunchTemplateConfigOverrideArgs defaults) {
            $ = new FleetLaunchTemplateConfigOverrideArgs(Objects.requireNonNull(defaults));
        }

        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder maxPrice(@Nullable Output<String> maxPrice) {
            $.maxPrice = maxPrice;
            return this;
        }

        public Builder maxPrice(String maxPrice) {
            return maxPrice(Output.of(maxPrice));
        }

        public Builder priority(@Nullable Output<Double> priority) {
            $.priority = priority;
            return this;
        }

        public Builder priority(Double priority) {
            return priority(Output.of(priority));
        }

        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder weightedCapacity(@Nullable Output<Double> weightedCapacity) {
            $.weightedCapacity = weightedCapacity;
            return this;
        }

        public Builder weightedCapacity(Double weightedCapacity) {
            return weightedCapacity(Output.of(weightedCapacity));
        }

        public FleetLaunchTemplateConfigOverrideArgs build() {
            return $;
        }
    }

}
