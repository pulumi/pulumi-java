// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codedeploy.inputs;

import com.pulumi.aws.codedeploy.inputs.DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteGetArgs;
import com.pulumi.aws.codedeploy.inputs.DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupGetArgs;
import com.pulumi.aws.codedeploy.inputs.DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeploymentGroupLoadBalancerInfoTargetGroupPairInfoGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentGroupLoadBalancerInfoTargetGroupPairInfoGetArgs Empty = new DeploymentGroupLoadBalancerInfoTargetGroupPairInfoGetArgs();

    /**
     * Configuration block for the production traffic route (documented below).
     * 
     */
    @Import(name="prodTrafficRoute", required=true)
      private final Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteGetArgs> prodTrafficRoute;

    public Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteGetArgs> prodTrafficRoute() {
        return this.prodTrafficRoute;
    }

    /**
     * Configuration blocks for a target group within a target group pair (documented below).
     * 
     */
    @Import(name="targetGroups", required=true)
      private final Output<List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupGetArgs>> targetGroups;

    public Output<List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupGetArgs>> targetGroups() {
        return this.targetGroups;
    }

    /**
     * Configuration block for the test traffic route (documented below).
     * 
     */
    @Import(name="testTrafficRoute")
      private final @Nullable Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteGetArgs> testTrafficRoute;

    public Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteGetArgs> testTrafficRoute() {
        return this.testTrafficRoute == null ? Codegen.empty() : this.testTrafficRoute;
    }

    public DeploymentGroupLoadBalancerInfoTargetGroupPairInfoGetArgs(
        Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteGetArgs> prodTrafficRoute,
        Output<List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupGetArgs>> targetGroups,
        @Nullable Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteGetArgs> testTrafficRoute) {
        this.prodTrafficRoute = Objects.requireNonNull(prodTrafficRoute, "expected parameter 'prodTrafficRoute' to be non-null");
        this.targetGroups = Objects.requireNonNull(targetGroups, "expected parameter 'targetGroups' to be non-null");
        this.testTrafficRoute = testTrafficRoute;
    }

    private DeploymentGroupLoadBalancerInfoTargetGroupPairInfoGetArgs() {
        this.prodTrafficRoute = Codegen.empty();
        this.targetGroups = Codegen.empty();
        this.testTrafficRoute = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteGetArgs> prodTrafficRoute;
        private Output<List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupGetArgs>> targetGroups;
        private @Nullable Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteGetArgs> testTrafficRoute;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.prodTrafficRoute = defaults.prodTrafficRoute;
    	      this.targetGroups = defaults.targetGroups;
    	      this.testTrafficRoute = defaults.testTrafficRoute;
        }

        public Builder prodTrafficRoute(Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteGetArgs> prodTrafficRoute) {
            this.prodTrafficRoute = Objects.requireNonNull(prodTrafficRoute);
            return this;
        }
        public Builder prodTrafficRoute(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteGetArgs prodTrafficRoute) {
            this.prodTrafficRoute = Output.of(Objects.requireNonNull(prodTrafficRoute));
            return this;
        }
        public Builder targetGroups(Output<List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupGetArgs>> targetGroups) {
            this.targetGroups = Objects.requireNonNull(targetGroups);
            return this;
        }
        public Builder targetGroups(List<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupGetArgs> targetGroups) {
            this.targetGroups = Output.of(Objects.requireNonNull(targetGroups));
            return this;
        }
        public Builder targetGroups(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupGetArgs... targetGroups) {
            return targetGroups(List.of(targetGroups));
        }
        public Builder testTrafficRoute(@Nullable Output<DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteGetArgs> testTrafficRoute) {
            this.testTrafficRoute = testTrafficRoute;
            return this;
        }
        public Builder testTrafficRoute(@Nullable DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteGetArgs testTrafficRoute) {
            this.testTrafficRoute = Codegen.ofNullable(testTrafficRoute);
            return this;
        }        public DeploymentGroupLoadBalancerInfoTargetGroupPairInfoGetArgs build() {
            return new DeploymentGroupLoadBalancerInfoTargetGroupPairInfoGetArgs(prodTrafficRoute, targetGroups, testTrafficRoute);
        }
    }
}
