// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.outputs;

import com.pulumi.aws.s3.outputs.BucketObjectLockConfigurationRuleDefaultRetention;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;

@CustomType
public final class BucketObjectLockConfigurationRule {
    /**
     * @return The default retention period that you want to apply to new objects placed in this bucket.
     * 
     */
    private final BucketObjectLockConfigurationRuleDefaultRetention defaultRetention;

    @CustomType.Constructor
    private BucketObjectLockConfigurationRule(@CustomType.Parameter("defaultRetention") BucketObjectLockConfigurationRuleDefaultRetention defaultRetention) {
        this.defaultRetention = defaultRetention;
    }

    /**
     * @return The default retention period that you want to apply to new objects placed in this bucket.
     * 
     */
    public BucketObjectLockConfigurationRuleDefaultRetention defaultRetention() {
        return this.defaultRetention;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketObjectLockConfigurationRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketObjectLockConfigurationRuleDefaultRetention defaultRetention;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketObjectLockConfigurationRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultRetention = defaults.defaultRetention;
        }

        public Builder defaultRetention(BucketObjectLockConfigurationRuleDefaultRetention defaultRetention) {
            this.defaultRetention = Objects.requireNonNull(defaultRetention);
            return this;
        }        public BucketObjectLockConfigurationRule build() {
            return new BucketObjectLockConfigurationRule(defaultRetention);
        }
    }
}
