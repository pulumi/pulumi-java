// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DataSourceParametersRdsGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceParametersRdsGetArgs Empty = new DataSourceParametersRdsGetArgs();

    /**
     * The database to which to connect.
     * 
     */
    @Import(name="database", required=true)
    private Output<String> database;

    public Output<String> database() {
        return this.database;
    }

    /**
     * The instance ID to which to connect.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    public Output<String> instanceId() {
        return this.instanceId;
    }

    private DataSourceParametersRdsGetArgs() {}

    private DataSourceParametersRdsGetArgs(DataSourceParametersRdsGetArgs $) {
        this.database = $.database;
        this.instanceId = $.instanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceParametersRdsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceParametersRdsGetArgs $;

        public Builder() {
            $ = new DataSourceParametersRdsGetArgs();
        }

        public Builder(DataSourceParametersRdsGetArgs defaults) {
            $ = new DataSourceParametersRdsGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder database(Output<String> database) {
            $.database = database;
            return this;
        }

        public Builder database(String database) {
            return database(Output.of(database));
        }

        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        public DataSourceParametersRdsGetArgs build() {
            $.database = Objects.requireNonNull($.database, "expected parameter 'database' to be non-null");
            $.instanceId = Objects.requireNonNull($.instanceId, "expected parameter 'instanceId' to be non-null");
            return $;
        }
    }

}
