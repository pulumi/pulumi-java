// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RoutingProfileQueueConfig {
    /**
     * @return Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
     * 
     */
    private final String channel;
    /**
     * @return Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
     * 
     */
    private final Integer delay;
    /**
     * @return Specifies the order in which contacts are to be handled for the queue.
     * 
     */
    private final Integer priority;
    /**
     * @return Specifies the ARN for the queue.
     * 
     */
    private final @Nullable String queueArn;
    /**
     * @return Specifies the identifier for the queue.
     * 
     */
    private final String queueId;
    /**
     * @return Specifies the name for the queue.
     * 
     */
    private final @Nullable String queueName;

    @CustomType.Constructor
    private RoutingProfileQueueConfig(
        @CustomType.Parameter("channel") String channel,
        @CustomType.Parameter("delay") Integer delay,
        @CustomType.Parameter("priority") Integer priority,
        @CustomType.Parameter("queueArn") @Nullable String queueArn,
        @CustomType.Parameter("queueId") String queueId,
        @CustomType.Parameter("queueName") @Nullable String queueName) {
        this.channel = channel;
        this.delay = delay;
        this.priority = priority;
        this.queueArn = queueArn;
        this.queueId = queueId;
        this.queueName = queueName;
    }

    /**
     * @return Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
     * 
     */
    public String channel() {
        return this.channel;
    }
    /**
     * @return Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
     * 
     */
    public Integer delay() {
        return this.delay;
    }
    /**
     * @return Specifies the order in which contacts are to be handled for the queue.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return Specifies the ARN for the queue.
     * 
     */
    public Optional<String> queueArn() {
        return Optional.ofNullable(this.queueArn);
    }
    /**
     * @return Specifies the identifier for the queue.
     * 
     */
    public String queueId() {
        return this.queueId;
    }
    /**
     * @return Specifies the name for the queue.
     * 
     */
    public Optional<String> queueName() {
        return Optional.ofNullable(this.queueName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoutingProfileQueueConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String channel;
        private Integer delay;
        private Integer priority;
        private @Nullable String queueArn;
        private String queueId;
        private @Nullable String queueName;

        public Builder() {
    	      // Empty
        }

        public Builder(RoutingProfileQueueConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channel = defaults.channel;
    	      this.delay = defaults.delay;
    	      this.priority = defaults.priority;
    	      this.queueArn = defaults.queueArn;
    	      this.queueId = defaults.queueId;
    	      this.queueName = defaults.queueName;
        }

        public Builder channel(String channel) {
            this.channel = Objects.requireNonNull(channel);
            return this;
        }
        public Builder delay(Integer delay) {
            this.delay = Objects.requireNonNull(delay);
            return this;
        }
        public Builder priority(Integer priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }
        public Builder queueArn(@Nullable String queueArn) {
            this.queueArn = queueArn;
            return this;
        }
        public Builder queueId(String queueId) {
            this.queueId = Objects.requireNonNull(queueId);
            return this;
        }
        public Builder queueName(@Nullable String queueName) {
            this.queueName = queueName;
            return this;
        }        public RoutingProfileQueueConfig build() {
            return new RoutingProfileQueueConfig(channel, delay, priority, queueArn, queueId, queueName);
        }
    }
}
