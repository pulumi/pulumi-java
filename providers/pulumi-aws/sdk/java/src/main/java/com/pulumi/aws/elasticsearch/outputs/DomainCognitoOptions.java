// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainCognitoOptions {
    /**
     * @return Whether to enable node-to-node encryption. If the `node_to_node_encryption` block is not provided then this defaults to `false`. Enabling node-to-node encryption of a new domain requires an `elasticsearch_version` of `6.0` or greater.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * @return ID of the Cognito Identity Pool to use.
     * 
     */
    private final String identityPoolId;
    /**
     * @return ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
     * 
     */
    private final String roleArn;
    /**
     * @return ID of the Cognito User Pool to use.
     * 
     */
    private final String userPoolId;

    @CustomType.Constructor
    private DomainCognitoOptions(
        @CustomType.Parameter("enabled") @Nullable Boolean enabled,
        @CustomType.Parameter("identityPoolId") String identityPoolId,
        @CustomType.Parameter("roleArn") String roleArn,
        @CustomType.Parameter("userPoolId") String userPoolId) {
        this.enabled = enabled;
        this.identityPoolId = identityPoolId;
        this.roleArn = roleArn;
        this.userPoolId = userPoolId;
    }

    /**
     * @return Whether to enable node-to-node encryption. If the `node_to_node_encryption` block is not provided then this defaults to `false`. Enabling node-to-node encryption of a new domain requires an `elasticsearch_version` of `6.0` or greater.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return ID of the Cognito Identity Pool to use.
     * 
     */
    public String identityPoolId() {
        return this.identityPoolId;
    }
    /**
     * @return ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    /**
     * @return ID of the Cognito User Pool to use.
     * 
     */
    public String userPoolId() {
        return this.userPoolId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainCognitoOptions defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enabled;
        private String identityPoolId;
        private String roleArn;
        private String userPoolId;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainCognitoOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.identityPoolId = defaults.identityPoolId;
    	      this.roleArn = defaults.roleArn;
    	      this.userPoolId = defaults.userPoolId;
        }

        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder identityPoolId(String identityPoolId) {
            this.identityPoolId = Objects.requireNonNull(identityPoolId);
            return this;
        }
        public Builder roleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        public Builder userPoolId(String userPoolId) {
            this.userPoolId = Objects.requireNonNull(userPoolId);
            return this;
        }        public DomainCognitoOptions build() {
            return new DomainCognitoOptions(enabled, identityPoolId, roleArn, userPoolId);
        }
    }
}
