// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProductResult {
    private final @Nullable String acceptLanguage;
    /**
     * @return ARN of the product.
     * 
     */
    private final String arn;
    /**
     * @return Time when the product was created.
     * 
     */
    private final String createdTime;
    /**
     * @return Description of the product.
     * 
     */
    private final String description;
    /**
     * @return Distributor (i.e., vendor) of the product.
     * 
     */
    private final String distributor;
    /**
     * @return Whether the product has a default path.
     * 
     */
    private final Boolean hasDefaultPath;
    private final String id;
    /**
     * @return Name of the product.
     * 
     */
    private final String name;
    /**
     * @return Owner of the product.
     * 
     */
    private final String owner;
    /**
     * @return Status of the product.
     * 
     */
    private final String status;
    /**
     * @return Support information about the product.
     * 
     */
    private final String supportDescription;
    /**
     * @return Contact email for product support.
     * 
     */
    private final String supportEmail;
    /**
     * @return Contact URL for product support.
     * 
     */
    private final String supportUrl;
    /**
     * @return Tags to apply to the product.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return Type of product.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetProductResult(
        @CustomType.Parameter("acceptLanguage") @Nullable String acceptLanguage,
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("createdTime") String createdTime,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("distributor") String distributor,
        @CustomType.Parameter("hasDefaultPath") Boolean hasDefaultPath,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("owner") String owner,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("supportDescription") String supportDescription,
        @CustomType.Parameter("supportEmail") String supportEmail,
        @CustomType.Parameter("supportUrl") String supportUrl,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.acceptLanguage = acceptLanguage;
        this.arn = arn;
        this.createdTime = createdTime;
        this.description = description;
        this.distributor = distributor;
        this.hasDefaultPath = hasDefaultPath;
        this.id = id;
        this.name = name;
        this.owner = owner;
        this.status = status;
        this.supportDescription = supportDescription;
        this.supportEmail = supportEmail;
        this.supportUrl = supportUrl;
        this.tags = tags;
        this.type = type;
    }

    public Optional<String> acceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }
    /**
     * @return ARN of the product.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return Time when the product was created.
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return Description of the product.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Distributor (i.e., vendor) of the product.
     * 
     */
    public String distributor() {
        return this.distributor;
    }
    /**
     * @return Whether the product has a default path.
     * 
     */
    public Boolean hasDefaultPath() {
        return this.hasDefaultPath;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the product.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Owner of the product.
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return Status of the product.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Support information about the product.
     * 
     */
    public String supportDescription() {
        return this.supportDescription;
    }
    /**
     * @return Contact email for product support.
     * 
     */
    public String supportEmail() {
        return this.supportEmail;
    }
    /**
     * @return Contact URL for product support.
     * 
     */
    public String supportUrl() {
        return this.supportUrl;
    }
    /**
     * @return Tags to apply to the product.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Type of product.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String acceptLanguage;
        private String arn;
        private String createdTime;
        private String description;
        private String distributor;
        private Boolean hasDefaultPath;
        private String id;
        private String name;
        private String owner;
        private String status;
        private String supportDescription;
        private String supportEmail;
        private String supportUrl;
        private Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProductResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptLanguage = defaults.acceptLanguage;
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.description = defaults.description;
    	      this.distributor = defaults.distributor;
    	      this.hasDefaultPath = defaults.hasDefaultPath;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.status = defaults.status;
    	      this.supportDescription = defaults.supportDescription;
    	      this.supportEmail = defaults.supportEmail;
    	      this.supportUrl = defaults.supportUrl;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder acceptLanguage(@Nullable String acceptLanguage) {
            this.acceptLanguage = acceptLanguage;
            return this;
        }
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder createdTime(String createdTime) {
            this.createdTime = Objects.requireNonNull(createdTime);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder distributor(String distributor) {
            this.distributor = Objects.requireNonNull(distributor);
            return this;
        }
        public Builder hasDefaultPath(Boolean hasDefaultPath) {
            this.hasDefaultPath = Objects.requireNonNull(hasDefaultPath);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder supportDescription(String supportDescription) {
            this.supportDescription = Objects.requireNonNull(supportDescription);
            return this;
        }
        public Builder supportEmail(String supportEmail) {
            this.supportEmail = Objects.requireNonNull(supportEmail);
            return this;
        }
        public Builder supportUrl(String supportUrl) {
            this.supportUrl = Objects.requireNonNull(supportUrl);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetProductResult build() {
            return new GetProductResult(acceptLanguage, arn, createdTime, description, distributor, hasDefaultPath, id, name, owner, status, supportDescription, supportEmail, supportUrl, tags, type);
        }
    }
}
