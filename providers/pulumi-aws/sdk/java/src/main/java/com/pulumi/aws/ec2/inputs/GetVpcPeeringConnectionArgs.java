// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetVpcPeeringConnectionFilter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetVpcPeeringConnectionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVpcPeeringConnectionArgs Empty = new GetVpcPeeringConnectionArgs();

    /**
     * The primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="cidrBlock")
    private Output</* @Nullable */ String> cidrBlock;

    /**
     * @return The primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> cidrBlock() {
        return this.cidrBlock;
    }

    /**
     * Custom filter block as described below.
     * 
     */
    @Import(name="filters")
    private Output</* @Nullable */ List<GetVpcPeeringConnectionFilter>> filters;

    /**
     * @return Custom filter block as described below.
     * 
     */
    public Output</* @Nullable */ List<GetVpcPeeringConnectionFilter>> filters() {
        return this.filters;
    }

    /**
     * The ID of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="id")
    private Output</* @Nullable */ String> id;

    /**
     * @return The ID of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> id() {
        return this.id;
    }

    /**
     * The AWS account ID of the owner of the requester VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="ownerId")
    private Output</* @Nullable */ String> ownerId;

    /**
     * @return The AWS account ID of the owner of the requester VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> ownerId() {
        return this.ownerId;
    }

    /**
     * The primary CIDR block of the accepter VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="peerCidrBlock")
    private Output</* @Nullable */ String> peerCidrBlock;

    /**
     * @return The primary CIDR block of the accepter VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> peerCidrBlock() {
        return this.peerCidrBlock;
    }

    /**
     * The AWS account ID of the owner of the accepter VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="peerOwnerId")
    private Output</* @Nullable */ String> peerOwnerId;

    /**
     * @return The AWS account ID of the owner of the accepter VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> peerOwnerId() {
        return this.peerOwnerId;
    }

    /**
     * The region of the accepter VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="peerRegion")
    private Output</* @Nullable */ String> peerRegion;

    /**
     * @return The region of the accepter VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> peerRegion() {
        return this.peerRegion;
    }

    /**
     * The ID of the accepter VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="peerVpcId")
    private Output</* @Nullable */ String> peerVpcId;

    /**
     * @return The ID of the accepter VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> peerVpcId() {
        return this.peerVpcId;
    }

    /**
     * The region of the requester VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="region")
    private Output</* @Nullable */ String> region;

    /**
     * @return The region of the requester VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> region() {
        return this.region;
    }

    /**
     * The status of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="status")
    private Output</* @Nullable */ String> status;

    /**
     * @return The status of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> status() {
        return this.status;
    }

    /**
     * A map of tags, each pair of which must exactly match
     * a pair on the desired VPC Peering Connection.
     * 
     */
    @Import(name="tags")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags, each pair of which must exactly match
     * a pair on the desired VPC Peering Connection.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }

    /**
     * The ID of the requester VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    @Import(name="vpcId")
    private Output</* @Nullable */ String> vpcId;

    /**
     * @return The ID of the requester VPC of the specific VPC Peering Connection to retrieve.
     * 
     */
    public Output</* @Nullable */ String> vpcId() {
        return this.vpcId;
    }

    private GetVpcPeeringConnectionArgs() {}

    private GetVpcPeeringConnectionArgs(GetVpcPeeringConnectionArgs $) {
        this.cidrBlock = $.cidrBlock;
        this.filters = $.filters;
        this.id = $.id;
        this.ownerId = $.ownerId;
        this.peerCidrBlock = $.peerCidrBlock;
        this.peerOwnerId = $.peerOwnerId;
        this.peerRegion = $.peerRegion;
        this.peerVpcId = $.peerVpcId;
        this.region = $.region;
        this.status = $.status;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVpcPeeringConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVpcPeeringConnectionArgs $;

        public Builder() {
            $ = new GetVpcPeeringConnectionArgs();
        }

        public Builder(GetVpcPeeringConnectionArgs defaults) {
            $ = new GetVpcPeeringConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrBlock The primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(Output</* @Nullable */ String> cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        /**
         * @param cidrBlock The primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(@Nullable String cidrBlock) {
            return cidrBlock(Output.of(cidrBlock));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(Output</* @Nullable */ List<GetVpcPeeringConnectionFilter>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetVpcPeeringConnectionFilter> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetVpcPeeringConnectionFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id The ID of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder id(Output</* @Nullable */ String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            return id(Output.of(id));
        }

        /**
         * @param ownerId The AWS account ID of the owner of the requester VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder ownerId(Output</* @Nullable */ String> ownerId) {
            $.ownerId = ownerId;
            return this;
        }

        /**
         * @param ownerId The AWS account ID of the owner of the requester VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder ownerId(@Nullable String ownerId) {
            return ownerId(Output.of(ownerId));
        }

        /**
         * @param peerCidrBlock The primary CIDR block of the accepter VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder peerCidrBlock(Output</* @Nullable */ String> peerCidrBlock) {
            $.peerCidrBlock = peerCidrBlock;
            return this;
        }

        /**
         * @param peerCidrBlock The primary CIDR block of the accepter VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder peerCidrBlock(@Nullable String peerCidrBlock) {
            return peerCidrBlock(Output.of(peerCidrBlock));
        }

        /**
         * @param peerOwnerId The AWS account ID of the owner of the accepter VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder peerOwnerId(Output</* @Nullable */ String> peerOwnerId) {
            $.peerOwnerId = peerOwnerId;
            return this;
        }

        /**
         * @param peerOwnerId The AWS account ID of the owner of the accepter VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder peerOwnerId(@Nullable String peerOwnerId) {
            return peerOwnerId(Output.of(peerOwnerId));
        }

        /**
         * @param peerRegion The region of the accepter VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder peerRegion(Output</* @Nullable */ String> peerRegion) {
            $.peerRegion = peerRegion;
            return this;
        }

        /**
         * @param peerRegion The region of the accepter VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder peerRegion(@Nullable String peerRegion) {
            return peerRegion(Output.of(peerRegion));
        }

        /**
         * @param peerVpcId The ID of the accepter VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder peerVpcId(Output</* @Nullable */ String> peerVpcId) {
            $.peerVpcId = peerVpcId;
            return this;
        }

        /**
         * @param peerVpcId The ID of the accepter VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder peerVpcId(@Nullable String peerVpcId) {
            return peerVpcId(Output.of(peerVpcId));
        }

        /**
         * @param region The region of the requester VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder region(Output</* @Nullable */ String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the requester VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            return region(Output.of(region));
        }

        /**
         * @param status The status of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder status(Output</* @Nullable */ String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A map of tags, each pair of which must exactly match
         * a pair on the desired VPC Peering Connection.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output</* @Nullable */ Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags, each pair of which must exactly match
         * a pair on the desired VPC Peering Connection.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vpcId The ID of the requester VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output</* @Nullable */ String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the requester VPC of the specific VPC Peering Connection to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public GetVpcPeeringConnectionArgs build() {
            return $;
        }
    }

}
