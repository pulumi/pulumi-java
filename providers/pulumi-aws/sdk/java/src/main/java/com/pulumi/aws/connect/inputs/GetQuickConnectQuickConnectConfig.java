// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.inputs;

import com.pulumi.aws.connect.inputs.GetQuickConnectQuickConnectConfigPhoneConfig;
import com.pulumi.aws.connect.inputs.GetQuickConnectQuickConnectConfigQueueConfig;
import com.pulumi.aws.connect.inputs.GetQuickConnectQuickConnectConfigUserConfig;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetQuickConnectQuickConnectConfig extends com.pulumi.resources.InvokeArgs {

    public static final GetQuickConnectQuickConnectConfig Empty = new GetQuickConnectQuickConnectConfig();

    /**
     * Specifies the phone configuration of the Quick Connect. This is returned only if `quick_connect_type` is `PHONE_NUMBER`. The `phone_config` block is documented below.
     * 
     */
    @Import(name="phoneConfigs", required=true)
    private List<GetQuickConnectQuickConnectConfigPhoneConfig> phoneConfigs;

    /**
     * @return Specifies the phone configuration of the Quick Connect. This is returned only if `quick_connect_type` is `PHONE_NUMBER`. The `phone_config` block is documented below.
     * 
     */
    public List<GetQuickConnectQuickConnectConfigPhoneConfig> phoneConfigs() {
        return this.phoneConfigs;
    }

    /**
     * Specifies the queue configuration of the Quick Connect. This is returned only if `quick_connect_type` is `QUEUE`. The `queue_config` block is documented below.
     * 
     */
    @Import(name="queueConfigs", required=true)
    private List<GetQuickConnectQuickConnectConfigQueueConfig> queueConfigs;

    /**
     * @return Specifies the queue configuration of the Quick Connect. This is returned only if `quick_connect_type` is `QUEUE`. The `queue_config` block is documented below.
     * 
     */
    public List<GetQuickConnectQuickConnectConfigQueueConfig> queueConfigs() {
        return this.queueConfigs;
    }

    /**
     * Specifies the configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
     * 
     */
    @Import(name="quickConnectType", required=true)
    private String quickConnectType;

    /**
     * @return Specifies the configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
     * 
     */
    public String quickConnectType() {
        return this.quickConnectType;
    }

    /**
     * Specifies the user configuration of the Quick Connect. This is returned only if `quick_connect_type` is `USER`. The `user_config` block is documented below.
     * 
     */
    @Import(name="userConfigs", required=true)
    private List<GetQuickConnectQuickConnectConfigUserConfig> userConfigs;

    /**
     * @return Specifies the user configuration of the Quick Connect. This is returned only if `quick_connect_type` is `USER`. The `user_config` block is documented below.
     * 
     */
    public List<GetQuickConnectQuickConnectConfigUserConfig> userConfigs() {
        return this.userConfigs;
    }

    private GetQuickConnectQuickConnectConfig() {}

    private GetQuickConnectQuickConnectConfig(GetQuickConnectQuickConnectConfig $) {
        this.phoneConfigs = $.phoneConfigs;
        this.queueConfigs = $.queueConfigs;
        this.quickConnectType = $.quickConnectType;
        this.userConfigs = $.userConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetQuickConnectQuickConnectConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetQuickConnectQuickConnectConfig $;

        public Builder() {
            $ = new GetQuickConnectQuickConnectConfig();
        }

        public Builder(GetQuickConnectQuickConnectConfig defaults) {
            $ = new GetQuickConnectQuickConnectConfig(Objects.requireNonNull(defaults));
        }

        /**
         * @param phoneConfigs Specifies the phone configuration of the Quick Connect. This is returned only if `quick_connect_type` is `PHONE_NUMBER`. The `phone_config` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder phoneConfigs(List<GetQuickConnectQuickConnectConfigPhoneConfig> phoneConfigs) {
            $.phoneConfigs = phoneConfigs;
            return this;
        }

        /**
         * @param phoneConfigs Specifies the phone configuration of the Quick Connect. This is returned only if `quick_connect_type` is `PHONE_NUMBER`. The `phone_config` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder phoneConfigs(GetQuickConnectQuickConnectConfigPhoneConfig... phoneConfigs) {
            return phoneConfigs(List.of(phoneConfigs));
        }

        /**
         * @param queueConfigs Specifies the queue configuration of the Quick Connect. This is returned only if `quick_connect_type` is `QUEUE`. The `queue_config` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder queueConfigs(List<GetQuickConnectQuickConnectConfigQueueConfig> queueConfigs) {
            $.queueConfigs = queueConfigs;
            return this;
        }

        /**
         * @param queueConfigs Specifies the queue configuration of the Quick Connect. This is returned only if `quick_connect_type` is `QUEUE`. The `queue_config` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder queueConfigs(GetQuickConnectQuickConnectConfigQueueConfig... queueConfigs) {
            return queueConfigs(List.of(queueConfigs));
        }

        /**
         * @param quickConnectType Specifies the configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
         * 
         * @return builder
         * 
         */
        public Builder quickConnectType(String quickConnectType) {
            $.quickConnectType = quickConnectType;
            return this;
        }

        /**
         * @param userConfigs Specifies the user configuration of the Quick Connect. This is returned only if `quick_connect_type` is `USER`. The `user_config` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder userConfigs(List<GetQuickConnectQuickConnectConfigUserConfig> userConfigs) {
            $.userConfigs = userConfigs;
            return this;
        }

        /**
         * @param userConfigs Specifies the user configuration of the Quick Connect. This is returned only if `quick_connect_type` is `USER`. The `user_config` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder userConfigs(GetQuickConnectQuickConnectConfigUserConfig... userConfigs) {
            return userConfigs(List.of(userConfigs));
        }

        public GetQuickConnectQuickConnectConfig build() {
            $.phoneConfigs = Objects.requireNonNull($.phoneConfigs, "expected parameter 'phoneConfigs' to be non-null");
            $.queueConfigs = Objects.requireNonNull($.queueConfigs, "expected parameter 'queueConfigs' to be non-null");
            $.quickConnectType = Objects.requireNonNull($.quickConnectType, "expected parameter 'quickConnectType' to be non-null");
            $.userConfigs = Objects.requireNonNull($.userConfigs, "expected parameter 'userConfigs' to be non-null");
            return $;
        }
    }

}
