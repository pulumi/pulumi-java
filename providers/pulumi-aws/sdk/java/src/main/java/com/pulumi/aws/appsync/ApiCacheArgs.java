// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appsync;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApiCacheArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiCacheArgs Empty = new ApiCacheArgs();

    /**
     * Caching behavior. Valid values are `FULL_REQUEST_CACHING` and `PER_RESOLVER_CACHING`.
     * 
     */
    @Import(name="apiCachingBehavior", required=true)
      private final Output<String> apiCachingBehavior;

    public Output<String> apiCachingBehavior() {
        return this.apiCachingBehavior;
    }

    /**
     * The GraphQL API ID.
     * 
     */
    @Import(name="apiId", required=true)
      private final Output<String> apiId;

    public Output<String> apiId() {
        return this.apiId;
    }

    /**
     * At-rest encryption flag for cache. You cannot update this setting after creation.
     * 
     */
    @Import(name="atRestEncryptionEnabled")
      private final @Nullable Output<Boolean> atRestEncryptionEnabled;

    public Output<Boolean> atRestEncryptionEnabled() {
        return this.atRestEncryptionEnabled == null ? Codegen.empty() : this.atRestEncryptionEnabled;
    }

    /**
     * Transit encryption flag when connecting to cache. You cannot update this setting after creation.
     * 
     */
    @Import(name="transitEncryptionEnabled")
      private final @Nullable Output<Boolean> transitEncryptionEnabled;

    public Output<Boolean> transitEncryptionEnabled() {
        return this.transitEncryptionEnabled == null ? Codegen.empty() : this.transitEncryptionEnabled;
    }

    /**
     * TTL in seconds for cache entries.
     * 
     */
    @Import(name="ttl", required=true)
      private final Output<Integer> ttl;

    public Output<Integer> ttl() {
        return this.ttl;
    }

    /**
     * The cache instance type. Valid values are `SMALL`, `MEDIUM`, `LARGE`, `XLARGE`, `LARGE_2X`, `LARGE_4X`, `LARGE_8X`, `LARGE_12X`, `T2_SMALL`, `T2_MEDIUM`, `R4_LARGE`, `R4_XLARGE`, `R4_2XLARGE`, `R4_4XLARGE`, `R4_8XLARGE`.
     * 
     */
    @Import(name="type", required=true)
      private final Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    public ApiCacheArgs(
        Output<String> apiCachingBehavior,
        Output<String> apiId,
        @Nullable Output<Boolean> atRestEncryptionEnabled,
        @Nullable Output<Boolean> transitEncryptionEnabled,
        Output<Integer> ttl,
        Output<String> type) {
        this.apiCachingBehavior = Objects.requireNonNull(apiCachingBehavior, "expected parameter 'apiCachingBehavior' to be non-null");
        this.apiId = Objects.requireNonNull(apiId, "expected parameter 'apiId' to be non-null");
        this.atRestEncryptionEnabled = atRestEncryptionEnabled;
        this.transitEncryptionEnabled = transitEncryptionEnabled;
        this.ttl = Objects.requireNonNull(ttl, "expected parameter 'ttl' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private ApiCacheArgs() {
        this.apiCachingBehavior = Codegen.empty();
        this.apiId = Codegen.empty();
        this.atRestEncryptionEnabled = Codegen.empty();
        this.transitEncryptionEnabled = Codegen.empty();
        this.ttl = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiCacheArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> apiCachingBehavior;
        private Output<String> apiId;
        private @Nullable Output<Boolean> atRestEncryptionEnabled;
        private @Nullable Output<Boolean> transitEncryptionEnabled;
        private Output<Integer> ttl;
        private Output<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiCacheArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiCachingBehavior = defaults.apiCachingBehavior;
    	      this.apiId = defaults.apiId;
    	      this.atRestEncryptionEnabled = defaults.atRestEncryptionEnabled;
    	      this.transitEncryptionEnabled = defaults.transitEncryptionEnabled;
    	      this.ttl = defaults.ttl;
    	      this.type = defaults.type;
        }

        public Builder apiCachingBehavior(Output<String> apiCachingBehavior) {
            this.apiCachingBehavior = Objects.requireNonNull(apiCachingBehavior);
            return this;
        }
        public Builder apiCachingBehavior(String apiCachingBehavior) {
            this.apiCachingBehavior = Output.of(Objects.requireNonNull(apiCachingBehavior));
            return this;
        }
        public Builder apiId(Output<String> apiId) {
            this.apiId = Objects.requireNonNull(apiId);
            return this;
        }
        public Builder apiId(String apiId) {
            this.apiId = Output.of(Objects.requireNonNull(apiId));
            return this;
        }
        public Builder atRestEncryptionEnabled(@Nullable Output<Boolean> atRestEncryptionEnabled) {
            this.atRestEncryptionEnabled = atRestEncryptionEnabled;
            return this;
        }
        public Builder atRestEncryptionEnabled(@Nullable Boolean atRestEncryptionEnabled) {
            this.atRestEncryptionEnabled = Codegen.ofNullable(atRestEncryptionEnabled);
            return this;
        }
        public Builder transitEncryptionEnabled(@Nullable Output<Boolean> transitEncryptionEnabled) {
            this.transitEncryptionEnabled = transitEncryptionEnabled;
            return this;
        }
        public Builder transitEncryptionEnabled(@Nullable Boolean transitEncryptionEnabled) {
            this.transitEncryptionEnabled = Codegen.ofNullable(transitEncryptionEnabled);
            return this;
        }
        public Builder ttl(Output<Integer> ttl) {
            this.ttl = Objects.requireNonNull(ttl);
            return this;
        }
        public Builder ttl(Integer ttl) {
            this.ttl = Output.of(Objects.requireNonNull(ttl));
            return this;
        }
        public Builder type(Output<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder type(String type) {
            this.type = Output.of(Objects.requireNonNull(type));
            return this;
        }        public ApiCacheArgs build() {
            return new ApiCacheArgs(apiCachingBehavior, apiId, atRestEncryptionEnabled, transitEncryptionEnabled, ttl, type);
        }
    }
}
