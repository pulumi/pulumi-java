// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cognito;

import com.pulumi.aws.cognito.inputs.ResourceServerScopeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResourceServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceServerArgs Empty = new ResourceServerArgs();

    /**
     * An identifier for the resource server.
     * 
     */
    @Import(name="identifier", required=true)
      private final Output<String> identifier;

    public Output<String> identifier() {
        return this.identifier;
    }

    /**
     * A name for the resource server.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * A list of Authorization Scope.
     * 
     */
    @Import(name="scopes")
      private final @Nullable Output<List<ResourceServerScopeArgs>> scopes;

    public Output<List<ResourceServerScopeArgs>> scopes() {
        return this.scopes == null ? Codegen.empty() : this.scopes;
    }

    @Import(name="userPoolId", required=true)
      private final Output<String> userPoolId;

    public Output<String> userPoolId() {
        return this.userPoolId;
    }

    public ResourceServerArgs(
        Output<String> identifier,
        @Nullable Output<String> name,
        @Nullable Output<List<ResourceServerScopeArgs>> scopes,
        Output<String> userPoolId) {
        this.identifier = Objects.requireNonNull(identifier, "expected parameter 'identifier' to be non-null");
        this.name = name;
        this.scopes = scopes;
        this.userPoolId = Objects.requireNonNull(userPoolId, "expected parameter 'userPoolId' to be non-null");
    }

    private ResourceServerArgs() {
        this.identifier = Codegen.empty();
        this.name = Codegen.empty();
        this.scopes = Codegen.empty();
        this.userPoolId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> identifier;
        private @Nullable Output<String> name;
        private @Nullable Output<List<ResourceServerScopeArgs>> scopes;
        private Output<String> userPoolId;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourceServerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identifier = defaults.identifier;
    	      this.name = defaults.name;
    	      this.scopes = defaults.scopes;
    	      this.userPoolId = defaults.userPoolId;
        }

        public Builder identifier(Output<String> identifier) {
            this.identifier = Objects.requireNonNull(identifier);
            return this;
        }
        public Builder identifier(String identifier) {
            this.identifier = Output.of(Objects.requireNonNull(identifier));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder scopes(@Nullable Output<List<ResourceServerScopeArgs>> scopes) {
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(@Nullable List<ResourceServerScopeArgs> scopes) {
            this.scopes = Codegen.ofNullable(scopes);
            return this;
        }
        public Builder scopes(ResourceServerScopeArgs... scopes) {
            return scopes(List.of(scopes));
        }
        public Builder userPoolId(Output<String> userPoolId) {
            this.userPoolId = Objects.requireNonNull(userPoolId);
            return this;
        }
        public Builder userPoolId(String userPoolId) {
            this.userPoolId = Output.of(Objects.requireNonNull(userPoolId));
            return this;
        }        public ResourceServerArgs build() {
            return new ResourceServerArgs(identifier, name, scopes, userPoolId);
        }
    }
}
