// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.codepipeline.outputs;

import com.pulumi.aws.codepipeline.outputs.PipelineStageAction;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class PipelineStage {
    /**
     * @return The action(s) to include in the stage. Defined as an `action` block below
     * 
     */
    private final List<PipelineStageAction> actions;
    /**
     * @return The name of the stage.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private PipelineStage(
        @CustomType.Parameter("actions") List<PipelineStageAction> actions,
        @CustomType.Parameter("name") String name) {
        this.actions = actions;
        this.name = name;
    }

    /**
     * @return The action(s) to include in the stage. Defined as an `action` block below
     * 
     */
    public List<PipelineStageAction> actions() {
        return this.actions;
    }
    /**
     * @return The name of the stage.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineStage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<PipelineStageAction> actions;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineStage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.name = defaults.name;
        }

        public Builder actions(List<PipelineStageAction> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }
        public Builder actions(PipelineStageAction... actions) {
            return actions(List.of(actions));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public PipelineStage build() {
            return new PipelineStage(actions, name);
        }
    }
}
