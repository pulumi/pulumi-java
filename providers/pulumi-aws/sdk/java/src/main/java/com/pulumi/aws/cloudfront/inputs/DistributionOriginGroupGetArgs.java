// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.DistributionOriginGroupFailoverCriteriaGetArgs;
import com.pulumi.aws.cloudfront.inputs.DistributionOriginGroupMemberGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DistributionOriginGroupGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DistributionOriginGroupGetArgs Empty = new DistributionOriginGroupGetArgs();

    /**
     * The failover criteria for when to failover to the secondary origin
     * 
     */
    @Import(name="failoverCriteria", required=true)
    private Output<DistributionOriginGroupFailoverCriteriaGetArgs> failoverCriteria;

    public Output<DistributionOriginGroupFailoverCriteriaGetArgs> failoverCriteria() {
        return this.failoverCriteria;
    }

    /**
     * Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
     * 
     */
    @Import(name="members", required=true)
    private Output<List<DistributionOriginGroupMemberGetArgs>> members;

    public Output<List<DistributionOriginGroupMemberGetArgs>> members() {
        return this.members;
    }

    /**
     * The unique identifier of the member origin
     * 
     */
    @Import(name="originId", required=true)
    private Output<String> originId;

    public Output<String> originId() {
        return this.originId;
    }

    private DistributionOriginGroupGetArgs() {}

    private DistributionOriginGroupGetArgs(DistributionOriginGroupGetArgs $) {
        this.failoverCriteria = $.failoverCriteria;
        this.members = $.members;
        this.originId = $.originId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionOriginGroupGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionOriginGroupGetArgs $;

        public Builder() {
            $ = new DistributionOriginGroupGetArgs();
        }

        public Builder(DistributionOriginGroupGetArgs defaults) {
            $ = new DistributionOriginGroupGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder failoverCriteria(Output<DistributionOriginGroupFailoverCriteriaGetArgs> failoverCriteria) {
            $.failoverCriteria = failoverCriteria;
            return this;
        }

        public Builder failoverCriteria(DistributionOriginGroupFailoverCriteriaGetArgs failoverCriteria) {
            return failoverCriteria(Output.of(failoverCriteria));
        }

        public Builder members(Output<List<DistributionOriginGroupMemberGetArgs>> members) {
            $.members = members;
            return this;
        }

        public Builder members(List<DistributionOriginGroupMemberGetArgs> members) {
            return members(Output.of(members));
        }

        public Builder members(DistributionOriginGroupMemberGetArgs... members) {
            return members(List.of(members));
        }

        public Builder originId(Output<String> originId) {
            $.originId = originId;
            return this;
        }

        public Builder originId(String originId) {
            return originId(Output.of(originId));
        }

        public DistributionOriginGroupGetArgs build() {
            $.failoverCriteria = Objects.requireNonNull($.failoverCriteria, "expected parameter 'failoverCriteria' to be non-null");
            $.members = Objects.requireNonNull($.members, "expected parameter 'members' to be non-null");
            $.originId = Objects.requireNonNull($.originId, "expected parameter 'originId' to be non-null");
            return $;
        }
    }

}
