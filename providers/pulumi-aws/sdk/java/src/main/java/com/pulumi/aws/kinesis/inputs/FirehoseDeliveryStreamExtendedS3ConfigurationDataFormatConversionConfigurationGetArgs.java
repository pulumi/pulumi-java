// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesis.inputs;

import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationGetArgs;
import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationGetArgs;
import com.pulumi.aws.kinesis.inputs.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs Empty = new FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs();

    /**
     * Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
     * 
     */
    @Import(name="inputFormatConfiguration", required=true)
    private Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationGetArgs> inputFormatConfiguration;

    /**
     * @return Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
     * 
     */
    public Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationGetArgs> inputFormatConfiguration() {
        return this.inputFormatConfiguration;
    }

    /**
     * Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
     * 
     */
    @Import(name="outputFormatConfiguration", required=true)
    private Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationGetArgs> outputFormatConfiguration;

    /**
     * @return Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
     * 
     */
    public Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationGetArgs> outputFormatConfiguration() {
        return this.outputFormatConfiguration;
    }

    /**
     * Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
     * 
     */
    @Import(name="schemaConfiguration", required=true)
    private Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationGetArgs> schemaConfiguration;

    /**
     * @return Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
     * 
     */
    public Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationGetArgs> schemaConfiguration() {
        return this.schemaConfiguration;
    }

    private FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs() {}

    private FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs $) {
        this.enabled = $.enabled;
        this.inputFormatConfiguration = $.inputFormatConfiguration;
        this.outputFormatConfiguration = $.outputFormatConfiguration;
        this.schemaConfiguration = $.schemaConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs $;

        public Builder() {
            $ = new FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs();
        }

        public Builder(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs defaults) {
            $ = new FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param inputFormatConfiguration Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
         * 
         * @return builder
         * 
         */
        public Builder inputFormatConfiguration(Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationGetArgs> inputFormatConfiguration) {
            $.inputFormatConfiguration = inputFormatConfiguration;
            return this;
        }

        /**
         * @param inputFormatConfiguration Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
         * 
         * @return builder
         * 
         */
        public Builder inputFormatConfiguration(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationGetArgs inputFormatConfiguration) {
            return inputFormatConfiguration(Output.of(inputFormatConfiguration));
        }

        /**
         * @param outputFormatConfiguration Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
         * 
         * @return builder
         * 
         */
        public Builder outputFormatConfiguration(Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationGetArgs> outputFormatConfiguration) {
            $.outputFormatConfiguration = outputFormatConfiguration;
            return this;
        }

        /**
         * @param outputFormatConfiguration Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
         * 
         * @return builder
         * 
         */
        public Builder outputFormatConfiguration(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationGetArgs outputFormatConfiguration) {
            return outputFormatConfiguration(Output.of(outputFormatConfiguration));
        }

        /**
         * @param schemaConfiguration Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
         * 
         * @return builder
         * 
         */
        public Builder schemaConfiguration(Output<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationGetArgs> schemaConfiguration) {
            $.schemaConfiguration = schemaConfiguration;
            return this;
        }

        /**
         * @param schemaConfiguration Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
         * 
         * @return builder
         * 
         */
        public Builder schemaConfiguration(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationGetArgs schemaConfiguration) {
            return schemaConfiguration(Output.of(schemaConfiguration));
        }

        public FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationGetArgs build() {
            $.inputFormatConfiguration = Objects.requireNonNull($.inputFormatConfiguration, "expected parameter 'inputFormatConfiguration' to be non-null");
            $.outputFormatConfiguration = Objects.requireNonNull($.outputFormatConfiguration, "expected parameter 'outputFormatConfiguration' to be non-null");
            $.schemaConfiguration = Objects.requireNonNull($.schemaConfiguration, "expected parameter 'schemaConfiguration' to be non-null");
            return $;
        }
    }

}
