// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.util.Objects;


public final class LaunchTemplateHibernationOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LaunchTemplateHibernationOptionsArgs Empty = new LaunchTemplateHibernationOptionsArgs();

    /**
     * If set to `true`, the launched EC2 instance will hibernation enabled.
     * 
     */
    @Import(name="configured", required=true)
      private final Output<Boolean> configured;

    public Output<Boolean> configured() {
        return this.configured;
    }

    public LaunchTemplateHibernationOptionsArgs(Output<Boolean> configured) {
        this.configured = Objects.requireNonNull(configured, "expected parameter 'configured' to be non-null");
    }

    private LaunchTemplateHibernationOptionsArgs() {
        this.configured = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LaunchTemplateHibernationOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> configured;

        public Builder() {
    	      // Empty
        }

        public Builder(LaunchTemplateHibernationOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configured = defaults.configured;
        }

        public Builder configured(Output<Boolean> configured) {
            this.configured = Objects.requireNonNull(configured);
            return this;
        }
        public Builder configured(Boolean configured) {
            this.configured = Output.of(Objects.requireNonNull(configured));
            return this;
        }        public LaunchTemplateHibernationOptionsArgs build() {
            return new LaunchTemplateHibernationOptionsArgs(configured);
        }
    }
}
