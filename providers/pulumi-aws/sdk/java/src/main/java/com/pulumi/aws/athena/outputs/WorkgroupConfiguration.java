// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.athena.outputs;

import com.pulumi.aws.athena.outputs.WorkgroupConfigurationEngineVersion;
import com.pulumi.aws.athena.outputs.WorkgroupConfigurationResultConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkgroupConfiguration {
    /**
     * @return Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least `10485760`.
     * 
     */
    private final @Nullable Integer bytesScannedCutoffPerQuery;
    /**
     * @return Boolean whether the settings for the workgroup override client-side settings. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html). Defaults to `true`.
     * 
     */
    private final @Nullable Boolean enforceWorkgroupConfiguration;
    /**
     * @return Configuration block for the Athena Engine Versioning. For more information, see [Athena Engine Versioning](https://docs.aws.amazon.com/athena/latest/ug/engine-versions.html). See Engine Version below.
     * 
     */
    private final @Nullable WorkgroupConfigurationEngineVersion engineVersion;
    /**
     * @return Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to `true`.
     * 
     */
    private final @Nullable Boolean publishCloudwatchMetricsEnabled;
    /**
     * @return If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see [Requester Pays Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) in the Amazon Simple Storage Service Developer Guide.
     * 
     */
    private final @Nullable Boolean requesterPaysEnabled;
    /**
     * @return Configuration block with result settings. See Result Configuration below.
     * 
     */
    private final @Nullable WorkgroupConfigurationResultConfiguration resultConfiguration;

    @CustomType.Constructor
    private WorkgroupConfiguration(
        @CustomType.Parameter("bytesScannedCutoffPerQuery") @Nullable Integer bytesScannedCutoffPerQuery,
        @CustomType.Parameter("enforceWorkgroupConfiguration") @Nullable Boolean enforceWorkgroupConfiguration,
        @CustomType.Parameter("engineVersion") @Nullable WorkgroupConfigurationEngineVersion engineVersion,
        @CustomType.Parameter("publishCloudwatchMetricsEnabled") @Nullable Boolean publishCloudwatchMetricsEnabled,
        @CustomType.Parameter("requesterPaysEnabled") @Nullable Boolean requesterPaysEnabled,
        @CustomType.Parameter("resultConfiguration") @Nullable WorkgroupConfigurationResultConfiguration resultConfiguration) {
        this.bytesScannedCutoffPerQuery = bytesScannedCutoffPerQuery;
        this.enforceWorkgroupConfiguration = enforceWorkgroupConfiguration;
        this.engineVersion = engineVersion;
        this.publishCloudwatchMetricsEnabled = publishCloudwatchMetricsEnabled;
        this.requesterPaysEnabled = requesterPaysEnabled;
        this.resultConfiguration = resultConfiguration;
    }

    /**
     * @return Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least `10485760`.
     * 
     */
    public Optional<Integer> bytesScannedCutoffPerQuery() {
        return Optional.ofNullable(this.bytesScannedCutoffPerQuery);
    }
    /**
     * @return Boolean whether the settings for the workgroup override client-side settings. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html). Defaults to `true`.
     * 
     */
    public Optional<Boolean> enforceWorkgroupConfiguration() {
        return Optional.ofNullable(this.enforceWorkgroupConfiguration);
    }
    /**
     * @return Configuration block for the Athena Engine Versioning. For more information, see [Athena Engine Versioning](https://docs.aws.amazon.com/athena/latest/ug/engine-versions.html). See Engine Version below.
     * 
     */
    public Optional<WorkgroupConfigurationEngineVersion> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }
    /**
     * @return Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to `true`.
     * 
     */
    public Optional<Boolean> publishCloudwatchMetricsEnabled() {
        return Optional.ofNullable(this.publishCloudwatchMetricsEnabled);
    }
    /**
     * @return If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see [Requester Pays Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) in the Amazon Simple Storage Service Developer Guide.
     * 
     */
    public Optional<Boolean> requesterPaysEnabled() {
        return Optional.ofNullable(this.requesterPaysEnabled);
    }
    /**
     * @return Configuration block with result settings. See Result Configuration below.
     * 
     */
    public Optional<WorkgroupConfigurationResultConfiguration> resultConfiguration() {
        return Optional.ofNullable(this.resultConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkgroupConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer bytesScannedCutoffPerQuery;
        private @Nullable Boolean enforceWorkgroupConfiguration;
        private @Nullable WorkgroupConfigurationEngineVersion engineVersion;
        private @Nullable Boolean publishCloudwatchMetricsEnabled;
        private @Nullable Boolean requesterPaysEnabled;
        private @Nullable WorkgroupConfigurationResultConfiguration resultConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkgroupConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bytesScannedCutoffPerQuery = defaults.bytesScannedCutoffPerQuery;
    	      this.enforceWorkgroupConfiguration = defaults.enforceWorkgroupConfiguration;
    	      this.engineVersion = defaults.engineVersion;
    	      this.publishCloudwatchMetricsEnabled = defaults.publishCloudwatchMetricsEnabled;
    	      this.requesterPaysEnabled = defaults.requesterPaysEnabled;
    	      this.resultConfiguration = defaults.resultConfiguration;
        }

        public Builder bytesScannedCutoffPerQuery(@Nullable Integer bytesScannedCutoffPerQuery) {
            this.bytesScannedCutoffPerQuery = bytesScannedCutoffPerQuery;
            return this;
        }
        public Builder enforceWorkgroupConfiguration(@Nullable Boolean enforceWorkgroupConfiguration) {
            this.enforceWorkgroupConfiguration = enforceWorkgroupConfiguration;
            return this;
        }
        public Builder engineVersion(@Nullable WorkgroupConfigurationEngineVersion engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }
        public Builder publishCloudwatchMetricsEnabled(@Nullable Boolean publishCloudwatchMetricsEnabled) {
            this.publishCloudwatchMetricsEnabled = publishCloudwatchMetricsEnabled;
            return this;
        }
        public Builder requesterPaysEnabled(@Nullable Boolean requesterPaysEnabled) {
            this.requesterPaysEnabled = requesterPaysEnabled;
            return this;
        }
        public Builder resultConfiguration(@Nullable WorkgroupConfigurationResultConfiguration resultConfiguration) {
            this.resultConfiguration = resultConfiguration;
            return this;
        }        public WorkgroupConfiguration build() {
            return new WorkgroupConfiguration(bytesScannedCutoffPerQuery, enforceWorkgroupConfiguration, engineVersion, publishCloudwatchMetricsEnabled, requesterPaysEnabled, resultConfiguration);
        }
    }
}
