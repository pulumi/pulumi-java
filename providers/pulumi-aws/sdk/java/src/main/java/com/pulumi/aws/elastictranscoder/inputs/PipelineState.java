// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elastictranscoder.inputs;

import com.pulumi.aws.elastictranscoder.inputs.PipelineContentConfigGetArgs;
import com.pulumi.aws.elastictranscoder.inputs.PipelineContentConfigPermissionGetArgs;
import com.pulumi.aws.elastictranscoder.inputs.PipelineNotificationsGetArgs;
import com.pulumi.aws.elastictranscoder.inputs.PipelineThumbnailConfigGetArgs;
import com.pulumi.aws.elastictranscoder.inputs.PipelineThumbnailConfigPermissionGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PipelineState extends com.pulumi.resources.ResourceArgs {

    public static final PipelineState Empty = new PipelineState();

    /**
     * The ARN of the Elastictranscoder pipeline.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
     * 
     */
    @Import(name="awsKmsKeyArn")
      private final @Nullable Output<String> awsKmsKeyArn;

    public Output<String> awsKmsKeyArn() {
        return this.awsKmsKeyArn == null ? Codegen.empty() : this.awsKmsKeyArn;
    }

    /**
     * The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
     * 
     */
    @Import(name="contentConfig")
      private final @Nullable Output<PipelineContentConfigGetArgs> contentConfig;

    public Output<PipelineContentConfigGetArgs> contentConfig() {
        return this.contentConfig == null ? Codegen.empty() : this.contentConfig;
    }

    /**
     * The permissions for the `content_config` object. (documented below)
     * 
     */
    @Import(name="contentConfigPermissions")
      private final @Nullable Output<List<PipelineContentConfigPermissionGetArgs>> contentConfigPermissions;

    public Output<List<PipelineContentConfigPermissionGetArgs>> contentConfigPermissions() {
        return this.contentConfigPermissions == null ? Codegen.empty() : this.contentConfigPermissions;
    }

    /**
     * The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
     * 
     */
    @Import(name="inputBucket")
      private final @Nullable Output<String> inputBucket;

    public Output<String> inputBucket() {
        return this.inputBucket == null ? Codegen.empty() : this.inputBucket;
    }

    /**
     * The name of the pipeline. Maximum 40 characters
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
     * 
     */
    @Import(name="notifications")
      private final @Nullable Output<PipelineNotificationsGetArgs> notifications;

    public Output<PipelineNotificationsGetArgs> notifications() {
        return this.notifications == null ? Codegen.empty() : this.notifications;
    }

    /**
     * The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
     * 
     */
    @Import(name="outputBucket")
      private final @Nullable Output<String> outputBucket;

    public Output<String> outputBucket() {
        return this.outputBucket == null ? Codegen.empty() : this.outputBucket;
    }

    /**
     * The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
     * 
     */
    @Import(name="role")
      private final @Nullable Output<String> role;

    public Output<String> role() {
        return this.role == null ? Codegen.empty() : this.role;
    }

    /**
     * The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
     * 
     */
    @Import(name="thumbnailConfig")
      private final @Nullable Output<PipelineThumbnailConfigGetArgs> thumbnailConfig;

    public Output<PipelineThumbnailConfigGetArgs> thumbnailConfig() {
        return this.thumbnailConfig == null ? Codegen.empty() : this.thumbnailConfig;
    }

    /**
     * The permissions for the `thumbnail_config` object. (documented below)
     * 
     */
    @Import(name="thumbnailConfigPermissions")
      private final @Nullable Output<List<PipelineThumbnailConfigPermissionGetArgs>> thumbnailConfigPermissions;

    public Output<List<PipelineThumbnailConfigPermissionGetArgs>> thumbnailConfigPermissions() {
        return this.thumbnailConfigPermissions == null ? Codegen.empty() : this.thumbnailConfigPermissions;
    }

    public PipelineState(
        @Nullable Output<String> arn,
        @Nullable Output<String> awsKmsKeyArn,
        @Nullable Output<PipelineContentConfigGetArgs> contentConfig,
        @Nullable Output<List<PipelineContentConfigPermissionGetArgs>> contentConfigPermissions,
        @Nullable Output<String> inputBucket,
        @Nullable Output<String> name,
        @Nullable Output<PipelineNotificationsGetArgs> notifications,
        @Nullable Output<String> outputBucket,
        @Nullable Output<String> role,
        @Nullable Output<PipelineThumbnailConfigGetArgs> thumbnailConfig,
        @Nullable Output<List<PipelineThumbnailConfigPermissionGetArgs>> thumbnailConfigPermissions) {
        this.arn = arn;
        this.awsKmsKeyArn = awsKmsKeyArn;
        this.contentConfig = contentConfig;
        this.contentConfigPermissions = contentConfigPermissions;
        this.inputBucket = inputBucket;
        this.name = name;
        this.notifications = notifications;
        this.outputBucket = outputBucket;
        this.role = role;
        this.thumbnailConfig = thumbnailConfig;
        this.thumbnailConfigPermissions = thumbnailConfigPermissions;
    }

    private PipelineState() {
        this.arn = Codegen.empty();
        this.awsKmsKeyArn = Codegen.empty();
        this.contentConfig = Codegen.empty();
        this.contentConfigPermissions = Codegen.empty();
        this.inputBucket = Codegen.empty();
        this.name = Codegen.empty();
        this.notifications = Codegen.empty();
        this.outputBucket = Codegen.empty();
        this.role = Codegen.empty();
        this.thumbnailConfig = Codegen.empty();
        this.thumbnailConfigPermissions = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> awsKmsKeyArn;
        private @Nullable Output<PipelineContentConfigGetArgs> contentConfig;
        private @Nullable Output<List<PipelineContentConfigPermissionGetArgs>> contentConfigPermissions;
        private @Nullable Output<String> inputBucket;
        private @Nullable Output<String> name;
        private @Nullable Output<PipelineNotificationsGetArgs> notifications;
        private @Nullable Output<String> outputBucket;
        private @Nullable Output<String> role;
        private @Nullable Output<PipelineThumbnailConfigGetArgs> thumbnailConfig;
        private @Nullable Output<List<PipelineThumbnailConfigPermissionGetArgs>> thumbnailConfigPermissions;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.awsKmsKeyArn = defaults.awsKmsKeyArn;
    	      this.contentConfig = defaults.contentConfig;
    	      this.contentConfigPermissions = defaults.contentConfigPermissions;
    	      this.inputBucket = defaults.inputBucket;
    	      this.name = defaults.name;
    	      this.notifications = defaults.notifications;
    	      this.outputBucket = defaults.outputBucket;
    	      this.role = defaults.role;
    	      this.thumbnailConfig = defaults.thumbnailConfig;
    	      this.thumbnailConfigPermissions = defaults.thumbnailConfigPermissions;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder awsKmsKeyArn(@Nullable Output<String> awsKmsKeyArn) {
            this.awsKmsKeyArn = awsKmsKeyArn;
            return this;
        }
        public Builder awsKmsKeyArn(@Nullable String awsKmsKeyArn) {
            this.awsKmsKeyArn = Codegen.ofNullable(awsKmsKeyArn);
            return this;
        }
        public Builder contentConfig(@Nullable Output<PipelineContentConfigGetArgs> contentConfig) {
            this.contentConfig = contentConfig;
            return this;
        }
        public Builder contentConfig(@Nullable PipelineContentConfigGetArgs contentConfig) {
            this.contentConfig = Codegen.ofNullable(contentConfig);
            return this;
        }
        public Builder contentConfigPermissions(@Nullable Output<List<PipelineContentConfigPermissionGetArgs>> contentConfigPermissions) {
            this.contentConfigPermissions = contentConfigPermissions;
            return this;
        }
        public Builder contentConfigPermissions(@Nullable List<PipelineContentConfigPermissionGetArgs> contentConfigPermissions) {
            this.contentConfigPermissions = Codegen.ofNullable(contentConfigPermissions);
            return this;
        }
        public Builder contentConfigPermissions(PipelineContentConfigPermissionGetArgs... contentConfigPermissions) {
            return contentConfigPermissions(List.of(contentConfigPermissions));
        }
        public Builder inputBucket(@Nullable Output<String> inputBucket) {
            this.inputBucket = inputBucket;
            return this;
        }
        public Builder inputBucket(@Nullable String inputBucket) {
            this.inputBucket = Codegen.ofNullable(inputBucket);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder notifications(@Nullable Output<PipelineNotificationsGetArgs> notifications) {
            this.notifications = notifications;
            return this;
        }
        public Builder notifications(@Nullable PipelineNotificationsGetArgs notifications) {
            this.notifications = Codegen.ofNullable(notifications);
            return this;
        }
        public Builder outputBucket(@Nullable Output<String> outputBucket) {
            this.outputBucket = outputBucket;
            return this;
        }
        public Builder outputBucket(@Nullable String outputBucket) {
            this.outputBucket = Codegen.ofNullable(outputBucket);
            return this;
        }
        public Builder role(@Nullable Output<String> role) {
            this.role = role;
            return this;
        }
        public Builder role(@Nullable String role) {
            this.role = Codegen.ofNullable(role);
            return this;
        }
        public Builder thumbnailConfig(@Nullable Output<PipelineThumbnailConfigGetArgs> thumbnailConfig) {
            this.thumbnailConfig = thumbnailConfig;
            return this;
        }
        public Builder thumbnailConfig(@Nullable PipelineThumbnailConfigGetArgs thumbnailConfig) {
            this.thumbnailConfig = Codegen.ofNullable(thumbnailConfig);
            return this;
        }
        public Builder thumbnailConfigPermissions(@Nullable Output<List<PipelineThumbnailConfigPermissionGetArgs>> thumbnailConfigPermissions) {
            this.thumbnailConfigPermissions = thumbnailConfigPermissions;
            return this;
        }
        public Builder thumbnailConfigPermissions(@Nullable List<PipelineThumbnailConfigPermissionGetArgs> thumbnailConfigPermissions) {
            this.thumbnailConfigPermissions = Codegen.ofNullable(thumbnailConfigPermissions);
            return this;
        }
        public Builder thumbnailConfigPermissions(PipelineThumbnailConfigPermissionGetArgs... thumbnailConfigPermissions) {
            return thumbnailConfigPermissions(List.of(thumbnailConfigPermissions));
        }        public PipelineState build() {
            return new PipelineState(arn, awsKmsKeyArn, contentConfig, contentConfigPermissions, inputBucket, name, notifications, outputBucket, role, thumbnailConfig, thumbnailConfigPermissions);
        }
    }
}
