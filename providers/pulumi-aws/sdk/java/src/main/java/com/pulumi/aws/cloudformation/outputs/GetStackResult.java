// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudformation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetStackResult {
    /**
     * @return A list of capabilities
     * 
     */
    private final List<String> capabilities;
    /**
     * @return Description of the stack
     * 
     */
    private final String description;
    /**
     * @return Whether the rollback of the stack is disabled when stack creation fails
     * 
     */
    private final Boolean disableRollback;
    /**
     * @return The ARN of the IAM role used to create the stack.
     * 
     */
    private final String iamRoleArn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String name;
    /**
     * @return A list of SNS topic ARNs to publish stack related events
     * 
     */
    private final List<String> notificationArns;
    /**
     * @return A map of outputs from the stack.
     * 
     */
    private final Map<String,String> outputs;
    /**
     * @return A map of parameters that specify input parameters for the stack.
     * 
     */
    private final Map<String,String> parameters;
    /**
     * @return A map of tags associated with this stack.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return Structure containing the template body.
     * 
     */
    private final String templateBody;
    /**
     * @return The amount of time that can pass before the stack status becomes `CREATE_FAILED`
     * 
     */
    private final Integer timeoutInMinutes;

    @CustomType.Constructor
    private GetStackResult(
        @CustomType.Parameter("capabilities") List<String> capabilities,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("disableRollback") Boolean disableRollback,
        @CustomType.Parameter("iamRoleArn") String iamRoleArn,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("notificationArns") List<String> notificationArns,
        @CustomType.Parameter("outputs") Map<String,String> outputs,
        @CustomType.Parameter("parameters") Map<String,String> parameters,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("templateBody") String templateBody,
        @CustomType.Parameter("timeoutInMinutes") Integer timeoutInMinutes) {
        this.capabilities = capabilities;
        this.description = description;
        this.disableRollback = disableRollback;
        this.iamRoleArn = iamRoleArn;
        this.id = id;
        this.name = name;
        this.notificationArns = notificationArns;
        this.outputs = outputs;
        this.parameters = parameters;
        this.tags = tags;
        this.templateBody = templateBody;
        this.timeoutInMinutes = timeoutInMinutes;
    }

    /**
     * @return A list of capabilities
     * 
     */
    public List<String> capabilities() {
        return this.capabilities;
    }
    /**
     * @return Description of the stack
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Whether the rollback of the stack is disabled when stack creation fails
     * 
     */
    public Boolean disableRollback() {
        return this.disableRollback;
    }
    /**
     * @return The ARN of the IAM role used to create the stack.
     * 
     */
    public String iamRoleArn() {
        return this.iamRoleArn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A list of SNS topic ARNs to publish stack related events
     * 
     */
    public List<String> notificationArns() {
        return this.notificationArns;
    }
    /**
     * @return A map of outputs from the stack.
     * 
     */
    public Map<String,String> outputs() {
        return this.outputs;
    }
    /**
     * @return A map of parameters that specify input parameters for the stack.
     * 
     */
    public Map<String,String> parameters() {
        return this.parameters;
    }
    /**
     * @return A map of tags associated with this stack.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Structure containing the template body.
     * 
     */
    public String templateBody() {
        return this.templateBody;
    }
    /**
     * @return The amount of time that can pass before the stack status becomes `CREATE_FAILED`
     * 
     */
    public Integer timeoutInMinutes() {
        return this.timeoutInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStackResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> capabilities;
        private String description;
        private Boolean disableRollback;
        private String iamRoleArn;
        private String id;
        private String name;
        private List<String> notificationArns;
        private Map<String,String> outputs;
        private Map<String,String> parameters;
        private Map<String,String> tags;
        private String templateBody;
        private Integer timeoutInMinutes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStackResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capabilities = defaults.capabilities;
    	      this.description = defaults.description;
    	      this.disableRollback = defaults.disableRollback;
    	      this.iamRoleArn = defaults.iamRoleArn;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.notificationArns = defaults.notificationArns;
    	      this.outputs = defaults.outputs;
    	      this.parameters = defaults.parameters;
    	      this.tags = defaults.tags;
    	      this.templateBody = defaults.templateBody;
    	      this.timeoutInMinutes = defaults.timeoutInMinutes;
        }

        public Builder capabilities(List<String> capabilities) {
            this.capabilities = Objects.requireNonNull(capabilities);
            return this;
        }
        public Builder capabilities(String... capabilities) {
            return capabilities(List.of(capabilities));
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder disableRollback(Boolean disableRollback) {
            this.disableRollback = Objects.requireNonNull(disableRollback);
            return this;
        }
        public Builder iamRoleArn(String iamRoleArn) {
            this.iamRoleArn = Objects.requireNonNull(iamRoleArn);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder notificationArns(List<String> notificationArns) {
            this.notificationArns = Objects.requireNonNull(notificationArns);
            return this;
        }
        public Builder notificationArns(String... notificationArns) {
            return notificationArns(List.of(notificationArns));
        }
        public Builder outputs(Map<String,String> outputs) {
            this.outputs = Objects.requireNonNull(outputs);
            return this;
        }
        public Builder parameters(Map<String,String> parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder templateBody(String templateBody) {
            this.templateBody = Objects.requireNonNull(templateBody);
            return this;
        }
        public Builder timeoutInMinutes(Integer timeoutInMinutes) {
            this.timeoutInMinutes = Objects.requireNonNull(timeoutInMinutes);
            return this;
        }        public GetStackResult build() {
            return new GetStackResult(capabilities, description, disableRollback, iamRoleArn, id, name, notificationArns, outputs, parameters, tags, templateBody, timeoutInMinutes);
        }
    }
}
