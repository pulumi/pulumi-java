// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetKeyPairFilter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetKeyPairArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKeyPairArgs Empty = new GetKeyPairArgs();

    /**
     * Custom filter block as described below.
     * 
     */
    @Import(name="filters")
    private Output</* @Nullable */ List<GetKeyPairFilter>> filters;

    /**
     * @return Custom filter block as described below.
     * 
     */
    public Output</* @Nullable */ List<GetKeyPairFilter>> filters() {
        return this.filters;
    }

    /**
     * The Key Pair name.
     * 
     */
    @Import(name="keyName")
    private Output</* @Nullable */ String> keyName;

    /**
     * @return The Key Pair name.
     * 
     */
    public Output</* @Nullable */ String> keyName() {
        return this.keyName;
    }

    /**
     * The Key Pair ID.
     * 
     */
    @Import(name="keyPairId")
    private Output</* @Nullable */ String> keyPairId;

    /**
     * @return The Key Pair ID.
     * 
     */
    public Output</* @Nullable */ String> keyPairId() {
        return this.keyPairId;
    }

    /**
     * Any tags assigned to the Key Pair.
     * 
     */
    @Import(name="tags")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Any tags assigned to the Key Pair.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }

    private GetKeyPairArgs() {}

    private GetKeyPairArgs(GetKeyPairArgs $) {
        this.filters = $.filters;
        this.keyName = $.keyName;
        this.keyPairId = $.keyPairId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKeyPairArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKeyPairArgs $;

        public Builder() {
            $ = new GetKeyPairArgs();
        }

        public Builder(GetKeyPairArgs defaults) {
            $ = new GetKeyPairArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(Output</* @Nullable */ List<GetKeyPairFilter>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetKeyPairFilter> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetKeyPairFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param keyName The Key Pair name.
         * 
         * @return builder
         * 
         */
        public Builder keyName(Output</* @Nullable */ String> keyName) {
            $.keyName = keyName;
            return this;
        }

        /**
         * @param keyName The Key Pair name.
         * 
         * @return builder
         * 
         */
        public Builder keyName(@Nullable String keyName) {
            return keyName(Output.of(keyName));
        }

        /**
         * @param keyPairId The Key Pair ID.
         * 
         * @return builder
         * 
         */
        public Builder keyPairId(Output</* @Nullable */ String> keyPairId) {
            $.keyPairId = keyPairId;
            return this;
        }

        /**
         * @param keyPairId The Key Pair ID.
         * 
         * @return builder
         * 
         */
        public Builder keyPairId(@Nullable String keyPairId) {
            return keyPairId(Output.of(keyPairId));
        }

        /**
         * @param tags Any tags assigned to the Key Pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output</* @Nullable */ Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Any tags assigned to the Key Pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetKeyPairArgs build() {
            return $;
        }
    }

}
