// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.globalaccelerator.inputs;

import com.pulumi.aws.globalaccelerator.inputs.AcceleratorAttributesGetArgs;
import com.pulumi.aws.globalaccelerator.inputs.AcceleratorIpSetGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AcceleratorState extends com.pulumi.resources.ResourceArgs {

    public static final AcceleratorState Empty = new AcceleratorState();

    /**
     * The attributes of the accelerator. Fields documented below.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<AcceleratorAttributesGetArgs> attributes;

    public Optional<Output<AcceleratorAttributesGetArgs>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
     * * `hosted_zone_id` --  The Global Accelerator Route 53 zone ID that can be used to
     *   route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
     *   is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
     * 
     */
    @Import(name="dnsName")
    private @Nullable Output<String> dnsName;

    public Optional<Output<String>> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }

    /**
     * Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="hostedZoneId")
    private @Nullable Output<String> hostedZoneId;

    public Optional<Output<String>> hostedZoneId() {
        return Optional.ofNullable(this.hostedZoneId);
    }

    /**
     * The value for the address type. Defaults to `IPV4`. Valid values: `IPV4`.
     * 
     */
    @Import(name="ipAddressType")
    private @Nullable Output<String> ipAddressType;

    public Optional<Output<String>> ipAddressType() {
        return Optional.ofNullable(this.ipAddressType);
    }

    /**
     * IP address set associated with the accelerator.
     * 
     */
    @Import(name="ipSets")
    private @Nullable Output<List<AcceleratorIpSetGetArgs>> ipSets;

    public Optional<Output<List<AcceleratorIpSetGetArgs>>> ipSets() {
        return Optional.ofNullable(this.ipSets);
    }

    /**
     * The name of the accelerator.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private AcceleratorState() {}

    private AcceleratorState(AcceleratorState $) {
        this.attributes = $.attributes;
        this.dnsName = $.dnsName;
        this.enabled = $.enabled;
        this.hostedZoneId = $.hostedZoneId;
        this.ipAddressType = $.ipAddressType;
        this.ipSets = $.ipSets;
        this.name = $.name;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AcceleratorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AcceleratorState $;

        public Builder() {
            $ = new AcceleratorState();
        }

        public Builder(AcceleratorState defaults) {
            $ = new AcceleratorState(Objects.requireNonNull(defaults));
        }

        public Builder attributes(@Nullable Output<AcceleratorAttributesGetArgs> attributes) {
            $.attributes = attributes;
            return this;
        }

        public Builder attributes(AcceleratorAttributesGetArgs attributes) {
            return attributes(Output.of(attributes));
        }

        public Builder dnsName(@Nullable Output<String> dnsName) {
            $.dnsName = dnsName;
            return this;
        }

        public Builder dnsName(String dnsName) {
            return dnsName(Output.of(dnsName));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder hostedZoneId(@Nullable Output<String> hostedZoneId) {
            $.hostedZoneId = hostedZoneId;
            return this;
        }

        public Builder hostedZoneId(String hostedZoneId) {
            return hostedZoneId(Output.of(hostedZoneId));
        }

        public Builder ipAddressType(@Nullable Output<String> ipAddressType) {
            $.ipAddressType = ipAddressType;
            return this;
        }

        public Builder ipAddressType(String ipAddressType) {
            return ipAddressType(Output.of(ipAddressType));
        }

        public Builder ipSets(@Nullable Output<List<AcceleratorIpSetGetArgs>> ipSets) {
            $.ipSets = ipSets;
            return this;
        }

        public Builder ipSets(List<AcceleratorIpSetGetArgs> ipSets) {
            return ipSets(Output.of(ipSets));
        }

        public Builder ipSets(AcceleratorIpSetGetArgs... ipSets) {
            return ipSets(List.of(ipSets));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public AcceleratorState build() {
            return $;
        }
    }

}
