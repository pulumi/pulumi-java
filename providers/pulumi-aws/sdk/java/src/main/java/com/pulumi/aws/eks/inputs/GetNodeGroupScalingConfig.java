// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.eks.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class GetNodeGroupScalingConfig extends com.pulumi.resources.InvokeArgs {

    public static final GetNodeGroupScalingConfig Empty = new GetNodeGroupScalingConfig();

    /**
     * Desired number of worker nodes.
     * 
     */
    @Import(name="desiredSize", required=true)
    private Integer desiredSize;

    public Integer desiredSize() {
        return this.desiredSize;
    }

    /**
     * Maximum number of worker nodes.
     * 
     */
    @Import(name="maxSize", required=true)
    private Integer maxSize;

    public Integer maxSize() {
        return this.maxSize;
    }

    /**
     * Minimum number of worker nodes.
     * 
     */
    @Import(name="minSize", required=true)
    private Integer minSize;

    public Integer minSize() {
        return this.minSize;
    }

    private GetNodeGroupScalingConfig() {}

    private GetNodeGroupScalingConfig(GetNodeGroupScalingConfig $) {
        this.desiredSize = $.desiredSize;
        this.maxSize = $.maxSize;
        this.minSize = $.minSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNodeGroupScalingConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNodeGroupScalingConfig $;

        public Builder() {
            $ = new GetNodeGroupScalingConfig();
        }

        public Builder(GetNodeGroupScalingConfig defaults) {
            $ = new GetNodeGroupScalingConfig(Objects.requireNonNull(defaults));
        }

        public Builder desiredSize(Integer desiredSize) {
            $.desiredSize = desiredSize;
            return this;
        }

        public Builder maxSize(Integer maxSize) {
            $.maxSize = maxSize;
            return this;
        }

        public Builder minSize(Integer minSize) {
            $.minSize = minSize;
            return this;
        }

        public GetNodeGroupScalingConfig build() {
            $.desiredSize = Objects.requireNonNull($.desiredSize, "expected parameter 'desiredSize' to be non-null");
            $.maxSize = Objects.requireNonNull($.maxSize, "expected parameter 'maxSize' to be non-null");
            $.minSize = Objects.requireNonNull($.minSize, "expected parameter 'minSize' to be non-null");
            return $;
        }
    }

}
