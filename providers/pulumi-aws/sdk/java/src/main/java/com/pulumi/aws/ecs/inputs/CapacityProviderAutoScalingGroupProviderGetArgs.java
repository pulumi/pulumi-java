// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecs.inputs;

import com.pulumi.aws.ecs.inputs.CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CapacityProviderAutoScalingGroupProviderGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CapacityProviderAutoScalingGroupProviderGetArgs Empty = new CapacityProviderAutoScalingGroupProviderGetArgs();

    /**
     * - ARN of the associated auto scaling group.
     * 
     */
    @Import(name="autoScalingGroupArn", required=true)
    private Output<String> autoScalingGroupArn;

    /**
     * @return - ARN of the associated auto scaling group.
     * 
     */
    public Output<String> autoScalingGroupArn() {
        return this.autoScalingGroupArn;
    }

    /**
     * - Configuration block defining the parameters of the auto scaling. Detailed below.
     * 
     */
    @Import(name="managedScaling")
    private @Nullable Output<CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs> managedScaling;

    /**
     * @return - Configuration block defining the parameters of the auto scaling. Detailed below.
     * 
     */
    public Optional<Output<CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs>> managedScaling() {
        return Optional.ofNullable(this.managedScaling);
    }

    /**
     * - Enables or disables container-aware termination of instances in the auto scaling group when scale-in happens. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    @Import(name="managedTerminationProtection")
    private @Nullable Output<String> managedTerminationProtection;

    /**
     * @return - Enables or disables container-aware termination of instances in the auto scaling group when scale-in happens. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    public Optional<Output<String>> managedTerminationProtection() {
        return Optional.ofNullable(this.managedTerminationProtection);
    }

    private CapacityProviderAutoScalingGroupProviderGetArgs() {}

    private CapacityProviderAutoScalingGroupProviderGetArgs(CapacityProviderAutoScalingGroupProviderGetArgs $) {
        this.autoScalingGroupArn = $.autoScalingGroupArn;
        this.managedScaling = $.managedScaling;
        this.managedTerminationProtection = $.managedTerminationProtection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapacityProviderAutoScalingGroupProviderGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapacityProviderAutoScalingGroupProviderGetArgs $;

        public Builder() {
            $ = new CapacityProviderAutoScalingGroupProviderGetArgs();
        }

        public Builder(CapacityProviderAutoScalingGroupProviderGetArgs defaults) {
            $ = new CapacityProviderAutoScalingGroupProviderGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoScalingGroupArn - ARN of the associated auto scaling group.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingGroupArn(Output<String> autoScalingGroupArn) {
            $.autoScalingGroupArn = autoScalingGroupArn;
            return this;
        }

        /**
         * @param autoScalingGroupArn - ARN of the associated auto scaling group.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingGroupArn(String autoScalingGroupArn) {
            return autoScalingGroupArn(Output.of(autoScalingGroupArn));
        }

        /**
         * @param managedScaling - Configuration block defining the parameters of the auto scaling. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder managedScaling(@Nullable Output<CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs> managedScaling) {
            $.managedScaling = managedScaling;
            return this;
        }

        /**
         * @param managedScaling - Configuration block defining the parameters of the auto scaling. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder managedScaling(CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs managedScaling) {
            return managedScaling(Output.of(managedScaling));
        }

        /**
         * @param managedTerminationProtection - Enables or disables container-aware termination of instances in the auto scaling group when scale-in happens. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder managedTerminationProtection(@Nullable Output<String> managedTerminationProtection) {
            $.managedTerminationProtection = managedTerminationProtection;
            return this;
        }

        /**
         * @param managedTerminationProtection - Enables or disables container-aware termination of instances in the auto scaling group when scale-in happens. Valid values are `ENABLED` and `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder managedTerminationProtection(String managedTerminationProtection) {
            return managedTerminationProtection(Output.of(managedTerminationProtection));
        }

        public CapacityProviderAutoScalingGroupProviderGetArgs build() {
            $.autoScalingGroupArn = Objects.requireNonNull($.autoScalingGroupArn, "expected parameter 'autoScalingGroupArn' to be non-null");
            return $;
        }
    }

}
