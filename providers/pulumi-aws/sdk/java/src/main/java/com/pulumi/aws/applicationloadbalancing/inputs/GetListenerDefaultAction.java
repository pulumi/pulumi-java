// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.applicationloadbalancing.inputs;

import com.pulumi.aws.applicationloadbalancing.inputs.GetListenerDefaultActionAuthenticateCognito;
import com.pulumi.aws.applicationloadbalancing.inputs.GetListenerDefaultActionAuthenticateOidc;
import com.pulumi.aws.applicationloadbalancing.inputs.GetListenerDefaultActionFixedResponse;
import com.pulumi.aws.applicationloadbalancing.inputs.GetListenerDefaultActionForward;
import com.pulumi.aws.applicationloadbalancing.inputs.GetListenerDefaultActionRedirect;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetListenerDefaultAction extends com.pulumi.resources.InvokeArgs {

    public static final GetListenerDefaultAction Empty = new GetListenerDefaultAction();

    @Import(name="authenticateCognitos", required=true)
    private List<GetListenerDefaultActionAuthenticateCognito> authenticateCognitos;

    public List<GetListenerDefaultActionAuthenticateCognito> authenticateCognitos() {
        return this.authenticateCognitos;
    }

    @Import(name="authenticateOidcs", required=true)
    private List<GetListenerDefaultActionAuthenticateOidc> authenticateOidcs;

    public List<GetListenerDefaultActionAuthenticateOidc> authenticateOidcs() {
        return this.authenticateOidcs;
    }

    @Import(name="fixedResponses", required=true)
    private List<GetListenerDefaultActionFixedResponse> fixedResponses;

    public List<GetListenerDefaultActionFixedResponse> fixedResponses() {
        return this.fixedResponses;
    }

    @Import(name="forwards", required=true)
    private List<GetListenerDefaultActionForward> forwards;

    public List<GetListenerDefaultActionForward> forwards() {
        return this.forwards;
    }

    @Import(name="order", required=true)
    private Integer order;

    public Integer order() {
        return this.order;
    }

    @Import(name="redirects", required=true)
    private List<GetListenerDefaultActionRedirect> redirects;

    public List<GetListenerDefaultActionRedirect> redirects() {
        return this.redirects;
    }

    @Import(name="targetGroupArn", required=true)
    private String targetGroupArn;

    public String targetGroupArn() {
        return this.targetGroupArn;
    }

    @Import(name="type", required=true)
    private String type;

    public String type() {
        return this.type;
    }

    private GetListenerDefaultAction() {}

    private GetListenerDefaultAction(GetListenerDefaultAction $) {
        this.authenticateCognitos = $.authenticateCognitos;
        this.authenticateOidcs = $.authenticateOidcs;
        this.fixedResponses = $.fixedResponses;
        this.forwards = $.forwards;
        this.order = $.order;
        this.redirects = $.redirects;
        this.targetGroupArn = $.targetGroupArn;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerDefaultAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerDefaultAction $;

        public Builder() {
            $ = new GetListenerDefaultAction();
        }

        public Builder(GetListenerDefaultAction defaults) {
            $ = new GetListenerDefaultAction(Objects.requireNonNull(defaults));
        }

        public Builder authenticateCognitos(List<GetListenerDefaultActionAuthenticateCognito> authenticateCognitos) {
            $.authenticateCognitos = authenticateCognitos;
            return this;
        }

        public Builder authenticateCognitos(GetListenerDefaultActionAuthenticateCognito... authenticateCognitos) {
            return authenticateCognitos(List.of(authenticateCognitos));
        }

        public Builder authenticateOidcs(List<GetListenerDefaultActionAuthenticateOidc> authenticateOidcs) {
            $.authenticateOidcs = authenticateOidcs;
            return this;
        }

        public Builder authenticateOidcs(GetListenerDefaultActionAuthenticateOidc... authenticateOidcs) {
            return authenticateOidcs(List.of(authenticateOidcs));
        }

        public Builder fixedResponses(List<GetListenerDefaultActionFixedResponse> fixedResponses) {
            $.fixedResponses = fixedResponses;
            return this;
        }

        public Builder fixedResponses(GetListenerDefaultActionFixedResponse... fixedResponses) {
            return fixedResponses(List.of(fixedResponses));
        }

        public Builder forwards(List<GetListenerDefaultActionForward> forwards) {
            $.forwards = forwards;
            return this;
        }

        public Builder forwards(GetListenerDefaultActionForward... forwards) {
            return forwards(List.of(forwards));
        }

        public Builder order(Integer order) {
            $.order = order;
            return this;
        }

        public Builder redirects(List<GetListenerDefaultActionRedirect> redirects) {
            $.redirects = redirects;
            return this;
        }

        public Builder redirects(GetListenerDefaultActionRedirect... redirects) {
            return redirects(List.of(redirects));
        }

        public Builder targetGroupArn(String targetGroupArn) {
            $.targetGroupArn = targetGroupArn;
            return this;
        }

        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetListenerDefaultAction build() {
            $.authenticateCognitos = Objects.requireNonNull($.authenticateCognitos, "expected parameter 'authenticateCognitos' to be non-null");
            $.authenticateOidcs = Objects.requireNonNull($.authenticateOidcs, "expected parameter 'authenticateOidcs' to be non-null");
            $.fixedResponses = Objects.requireNonNull($.fixedResponses, "expected parameter 'fixedResponses' to be non-null");
            $.forwards = Objects.requireNonNull($.forwards, "expected parameter 'forwards' to be non-null");
            $.order = Objects.requireNonNull($.order, "expected parameter 'order' to be non-null");
            $.redirects = Objects.requireNonNull($.redirects, "expected parameter 'redirects' to be non-null");
            $.targetGroupArn = Objects.requireNonNull($.targetGroupArn, "expected parameter 'targetGroupArn' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
