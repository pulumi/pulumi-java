// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetInstanceTypeFpga extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceTypeFpga Empty = new GetInstanceTypeFpga();

    @Import(name="count", required=true)
    private Integer count;

    public Integer count() {
        return this.count;
    }

    @Import(name="manufacturer", required=true)
    private String manufacturer;

    public String manufacturer() {
        return this.manufacturer;
    }

    /**
     * Size of the instance memory, in MiB.
     * 
     */
    @Import(name="memorySize", required=true)
    private Integer memorySize;

    /**
     * @return Size of the instance memory, in MiB.
     * 
     */
    public Integer memorySize() {
        return this.memorySize;
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    private GetInstanceTypeFpga() {}

    private GetInstanceTypeFpga(GetInstanceTypeFpga $) {
        this.count = $.count;
        this.manufacturer = $.manufacturer;
        this.memorySize = $.memorySize;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceTypeFpga defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceTypeFpga $;

        public Builder() {
            $ = new GetInstanceTypeFpga();
        }

        public Builder(GetInstanceTypeFpga defaults) {
            $ = new GetInstanceTypeFpga(Objects.requireNonNull(defaults));
        }

        public Builder count(Integer count) {
            $.count = count;
            return this;
        }

        public Builder manufacturer(String manufacturer) {
            $.manufacturer = manufacturer;
            return this;
        }

        /**
         * @param memorySize Size of the instance memory, in MiB.
         * 
         * @return builder
         * 
         */
        public Builder memorySize(Integer memorySize) {
            $.memorySize = memorySize;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetInstanceTypeFpga build() {
            $.count = Objects.requireNonNull($.count, "expected parameter 'count' to be non-null");
            $.manufacturer = Objects.requireNonNull($.manufacturer, "expected parameter 'manufacturer' to be non-null");
            $.memorySize = Objects.requireNonNull($.memorySize, "expected parameter 'memorySize' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
