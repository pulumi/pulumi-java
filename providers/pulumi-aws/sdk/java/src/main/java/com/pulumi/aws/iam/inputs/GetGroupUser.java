// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetGroupUser extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupUser Empty = new GetGroupUser();

    /**
     * The Amazon Resource Name (ARN) specifying the iam user.
     * 
     */
    @Import(name="arn", required=true)
    private String arn;

    public String arn() {
        return this.arn;
    }

    /**
     * The path to the iam user.
     * 
     */
    @Import(name="path", required=true)
    private String path;

    public String path() {
        return this.path;
    }

    /**
     * The stable and unique string identifying the iam user.
     * 
     */
    @Import(name="userId", required=true)
    private String userId;

    public String userId() {
        return this.userId;
    }

    /**
     * The name of the iam user.
     * 
     */
    @Import(name="userName", required=true)
    private String userName;

    public String userName() {
        return this.userName;
    }

    private GetGroupUser() {}

    private GetGroupUser(GetGroupUser $) {
        this.arn = $.arn;
        this.path = $.path;
        this.userId = $.userId;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupUser defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupUser $;

        public Builder() {
            $ = new GetGroupUser();
        }

        public Builder(GetGroupUser defaults) {
            $ = new GetGroupUser(Objects.requireNonNull(defaults));
        }

        public Builder arn(String arn) {
            $.arn = arn;
            return this;
        }

        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public Builder userId(String userId) {
            $.userId = userId;
            return this;
        }

        public Builder userName(String userName) {
            $.userName = userName;
            return this;
        }

        public GetGroupUser build() {
            $.arn = Objects.requireNonNull($.arn, "expected parameter 'arn' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.userId = Objects.requireNonNull($.userId, "expected parameter 'userId' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
