// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.backup.outputs;

import com.pulumi.aws.backup.outputs.GetFrameworkControl;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFrameworkResult {
    /**
     * @return The ARN of the backup framework.
     * 
     */
    private final String arn;
    /**
     * @return One or more control blocks that make up the framework. Each control in the list has a name, input parameters, and scope. Detailed below.
     * 
     */
    private final List<GetFrameworkControl> controls;
    /**
     * @return The date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC).
     * 
     */
    private final String creationTime;
    /**
     * @return The deployment status of a framework. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`| `FAILED`.
     * 
     */
    private final String deploymentStatus;
    /**
     * @return The description of the framework.
     * 
     */
    private final String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The name of a parameter, for example, BackupPlanFrequency.
     * 
     */
    private final String name;
    /**
     * @return A framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn AWS Config recording on or off for each resource. The statuses are: `ACTIVE`, `PARTIALLY_ACTIVE`, `INACTIVE`, `UNAVAILABLE`. For more information refer to the [AWS documentation for Framework Status](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_DescribeFramework.html#Backup-DescribeFramework-response-FrameworkStatus)
     * 
     */
    private final String status;
    /**
     * @return The tag key-value pair applied to those AWS resources that you want to trigger an evaluation for a rule. A maximum of one key-value pair can be provided.
     * 
     */
    private final Map<String,String> tags;

    @CustomType.Constructor
    private GetFrameworkResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("controls") List<GetFrameworkControl> controls,
        @CustomType.Parameter("creationTime") String creationTime,
        @CustomType.Parameter("deploymentStatus") String deploymentStatus,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") Map<String,String> tags) {
        this.arn = arn;
        this.controls = controls;
        this.creationTime = creationTime;
        this.deploymentStatus = deploymentStatus;
        this.description = description;
        this.id = id;
        this.name = name;
        this.status = status;
        this.tags = tags;
    }

    /**
     * @return The ARN of the backup framework.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return One or more control blocks that make up the framework. Each control in the list has a name, input parameters, and scope. Detailed below.
     * 
     */
    public List<GetFrameworkControl> controls() {
        return this.controls;
    }
    /**
     * @return The date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC).
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return The deployment status of a framework. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`| `FAILED`.
     * 
     */
    public String deploymentStatus() {
        return this.deploymentStatus;
    }
    /**
     * @return The description of the framework.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of a parameter, for example, BackupPlanFrequency.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn AWS Config recording on or off for each resource. The statuses are: `ACTIVE`, `PARTIALLY_ACTIVE`, `INACTIVE`, `UNAVAILABLE`. For more information refer to the [AWS documentation for Framework Status](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_DescribeFramework.html#Backup-DescribeFramework-response-FrameworkStatus)
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The tag key-value pair applied to those AWS resources that you want to trigger an evaluation for a rule. A maximum of one key-value pair can be provided.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFrameworkResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private List<GetFrameworkControl> controls;
        private String creationTime;
        private String deploymentStatus;
        private String description;
        private String id;
        private String name;
        private String status;
        private Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFrameworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.controls = defaults.controls;
    	      this.creationTime = defaults.creationTime;
    	      this.deploymentStatus = defaults.deploymentStatus;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder controls(List<GetFrameworkControl> controls) {
            this.controls = Objects.requireNonNull(controls);
            return this;
        }
        public Builder controls(GetFrameworkControl... controls) {
            return controls(List.of(controls));
        }
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        public Builder deploymentStatus(String deploymentStatus) {
            this.deploymentStatus = Objects.requireNonNull(deploymentStatus);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }        public GetFrameworkResult build() {
            return new GetFrameworkResult(arn, controls, creationTime, deploymentStatus, description, id, name, status, tags);
        }
    }
}
