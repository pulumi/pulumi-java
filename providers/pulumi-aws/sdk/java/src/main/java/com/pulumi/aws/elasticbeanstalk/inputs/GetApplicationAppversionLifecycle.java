// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticbeanstalk.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetApplicationAppversionLifecycle extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationAppversionLifecycle Empty = new GetApplicationAppversionLifecycle();

    /**
     * Specifies whether delete a version&#39;s source bundle from S3 when the application version is deleted.
     * 
     */
    @Import(name="deleteSourceFromS3", required=true)
    private Boolean deleteSourceFromS3;

    /**
     * @return Specifies whether delete a version&#39;s source bundle from S3 when the application version is deleted.
     * 
     */
    public Boolean deleteSourceFromS3() {
        return this.deleteSourceFromS3;
    }

    /**
     * The number of days to retain an application version.
     * 
     */
    @Import(name="maxAgeInDays", required=true)
    private Integer maxAgeInDays;

    /**
     * @return The number of days to retain an application version.
     * 
     */
    public Integer maxAgeInDays() {
        return this.maxAgeInDays;
    }

    /**
     * The maximum number of application versions to retain.
     * 
     */
    @Import(name="maxCount", required=true)
    private Integer maxCount;

    /**
     * @return The maximum number of application versions to retain.
     * 
     */
    public Integer maxCount() {
        return this.maxCount;
    }

    /**
     * The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
     * 
     */
    @Import(name="serviceRole", required=true)
    private String serviceRole;

    /**
     * @return The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
     * 
     */
    public String serviceRole() {
        return this.serviceRole;
    }

    private GetApplicationAppversionLifecycle() {}

    private GetApplicationAppversionLifecycle(GetApplicationAppversionLifecycle $) {
        this.deleteSourceFromS3 = $.deleteSourceFromS3;
        this.maxAgeInDays = $.maxAgeInDays;
        this.maxCount = $.maxCount;
        this.serviceRole = $.serviceRole;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApplicationAppversionLifecycle defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApplicationAppversionLifecycle $;

        public Builder() {
            $ = new GetApplicationAppversionLifecycle();
        }

        public Builder(GetApplicationAppversionLifecycle defaults) {
            $ = new GetApplicationAppversionLifecycle(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteSourceFromS3 Specifies whether delete a version&#39;s source bundle from S3 when the application version is deleted.
         * 
         * @return builder
         * 
         */
        public Builder deleteSourceFromS3(Boolean deleteSourceFromS3) {
            $.deleteSourceFromS3 = deleteSourceFromS3;
            return this;
        }

        /**
         * @param maxAgeInDays The number of days to retain an application version.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeInDays(Integer maxAgeInDays) {
            $.maxAgeInDays = maxAgeInDays;
            return this;
        }

        /**
         * @param maxCount The maximum number of application versions to retain.
         * 
         * @return builder
         * 
         */
        public Builder maxCount(Integer maxCount) {
            $.maxCount = maxCount;
            return this;
        }

        /**
         * @param serviceRole The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
         * 
         * @return builder
         * 
         */
        public Builder serviceRole(String serviceRole) {
            $.serviceRole = serviceRole;
            return this;
        }

        public GetApplicationAppversionLifecycle build() {
            $.deleteSourceFromS3 = Objects.requireNonNull($.deleteSourceFromS3, "expected parameter 'deleteSourceFromS3' to be non-null");
            $.maxAgeInDays = Objects.requireNonNull($.maxAgeInDays, "expected parameter 'maxAgeInDays' to be non-null");
            $.maxCount = Objects.requireNonNull($.maxCount, "expected parameter 'maxCount' to be non-null");
            $.serviceRole = Objects.requireNonNull($.serviceRole, "expected parameter 'serviceRole' to be non-null");
            return $;
        }
    }

}
