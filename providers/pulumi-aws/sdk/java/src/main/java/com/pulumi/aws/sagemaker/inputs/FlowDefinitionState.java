// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopActivationConfigGetArgs;
import com.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopConfigGetArgs;
import com.pulumi.aws.sagemaker.inputs.FlowDefinitionHumanLoopRequestSourceGetArgs;
import com.pulumi.aws.sagemaker.inputs.FlowDefinitionOutputConfigGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowDefinitionState extends com.pulumi.resources.ResourceArgs {

    public static final FlowDefinitionState Empty = new FlowDefinitionState();

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Flow Definition.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The name of your flow definition.
     * 
     */
    @Import(name="flowDefinitionName")
    private @Nullable Output<String> flowDefinitionName;

    public Optional<Output<String>> flowDefinitionName() {
        return Optional.ofNullable(this.flowDefinitionName);
    }

    /**
     * An object containing information about the events that trigger a human workflow. See Human Loop Activation Config details below.
     * 
     */
    @Import(name="humanLoopActivationConfig")
    private @Nullable Output<FlowDefinitionHumanLoopActivationConfigGetArgs> humanLoopActivationConfig;

    public Optional<Output<FlowDefinitionHumanLoopActivationConfigGetArgs>> humanLoopActivationConfig() {
        return Optional.ofNullable(this.humanLoopActivationConfig);
    }

    /**
     * An object containing information about the tasks the human reviewers will perform. See Human Loop Config details below.
     * 
     */
    @Import(name="humanLoopConfig")
    private @Nullable Output<FlowDefinitionHumanLoopConfigGetArgs> humanLoopConfig;

    public Optional<Output<FlowDefinitionHumanLoopConfigGetArgs>> humanLoopConfig() {
        return Optional.ofNullable(this.humanLoopConfig);
    }

    /**
     * Container for configuring the source of human task requests. Use to specify if Amazon Rekognition or Amazon Textract is used as an integration source. See Human Loop Request Source details below.
     * 
     */
    @Import(name="humanLoopRequestSource")
    private @Nullable Output<FlowDefinitionHumanLoopRequestSourceGetArgs> humanLoopRequestSource;

    public Optional<Output<FlowDefinitionHumanLoopRequestSourceGetArgs>> humanLoopRequestSource() {
        return Optional.ofNullable(this.humanLoopRequestSource);
    }

    /**
     * An object containing information about where the human review results will be uploaded. See Output Config details below.
     * 
     */
    @Import(name="outputConfig")
    private @Nullable Output<FlowDefinitionOutputConfigGetArgs> outputConfig;

    public Optional<Output<FlowDefinitionOutputConfigGetArgs>> outputConfig() {
        return Optional.ofNullable(this.outputConfig);
    }

    /**
     * The Amazon Resource Name (ARN) of the role needed to call other services on your behalf.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @Import(name="tagsAll")
    private @Nullable Output<Map<String,String>> tagsAll;

    public Optional<Output<Map<String,String>>> tagsAll() {
        return Optional.ofNullable(this.tagsAll);
    }

    private FlowDefinitionState() {}

    private FlowDefinitionState(FlowDefinitionState $) {
        this.arn = $.arn;
        this.flowDefinitionName = $.flowDefinitionName;
        this.humanLoopActivationConfig = $.humanLoopActivationConfig;
        this.humanLoopConfig = $.humanLoopConfig;
        this.humanLoopRequestSource = $.humanLoopRequestSource;
        this.outputConfig = $.outputConfig;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
        this.tagsAll = $.tagsAll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowDefinitionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowDefinitionState $;

        public Builder() {
            $ = new FlowDefinitionState();
        }

        public Builder(FlowDefinitionState defaults) {
            $ = new FlowDefinitionState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder flowDefinitionName(@Nullable Output<String> flowDefinitionName) {
            $.flowDefinitionName = flowDefinitionName;
            return this;
        }

        public Builder flowDefinitionName(String flowDefinitionName) {
            return flowDefinitionName(Output.of(flowDefinitionName));
        }

        public Builder humanLoopActivationConfig(@Nullable Output<FlowDefinitionHumanLoopActivationConfigGetArgs> humanLoopActivationConfig) {
            $.humanLoopActivationConfig = humanLoopActivationConfig;
            return this;
        }

        public Builder humanLoopActivationConfig(FlowDefinitionHumanLoopActivationConfigGetArgs humanLoopActivationConfig) {
            return humanLoopActivationConfig(Output.of(humanLoopActivationConfig));
        }

        public Builder humanLoopConfig(@Nullable Output<FlowDefinitionHumanLoopConfigGetArgs> humanLoopConfig) {
            $.humanLoopConfig = humanLoopConfig;
            return this;
        }

        public Builder humanLoopConfig(FlowDefinitionHumanLoopConfigGetArgs humanLoopConfig) {
            return humanLoopConfig(Output.of(humanLoopConfig));
        }

        public Builder humanLoopRequestSource(@Nullable Output<FlowDefinitionHumanLoopRequestSourceGetArgs> humanLoopRequestSource) {
            $.humanLoopRequestSource = humanLoopRequestSource;
            return this;
        }

        public Builder humanLoopRequestSource(FlowDefinitionHumanLoopRequestSourceGetArgs humanLoopRequestSource) {
            return humanLoopRequestSource(Output.of(humanLoopRequestSource));
        }

        public Builder outputConfig(@Nullable Output<FlowDefinitionOutputConfigGetArgs> outputConfig) {
            $.outputConfig = outputConfig;
            return this;
        }

        public Builder outputConfig(FlowDefinitionOutputConfigGetArgs outputConfig) {
            return outputConfig(Output.of(outputConfig));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            $.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(Map<String,String> tagsAll) {
            return tagsAll(Output.of(tagsAll));
        }

        public FlowDefinitionState build() {
            return $;
        }
    }

}
