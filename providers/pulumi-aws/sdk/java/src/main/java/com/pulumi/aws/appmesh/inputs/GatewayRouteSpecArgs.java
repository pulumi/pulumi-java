// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecGrpcRouteArgs;
import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttp2RouteArgs;
import com.pulumi.aws.appmesh.inputs.GatewayRouteSpecHttpRouteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GatewayRouteSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayRouteSpecArgs Empty = new GatewayRouteSpecArgs();

    /**
     * The specification of a gRPC gateway route.
     * 
     */
    @Import(name="grpcRoute")
      private final @Nullable Output<GatewayRouteSpecGrpcRouteArgs> grpcRoute;

    public Output<GatewayRouteSpecGrpcRouteArgs> grpcRoute() {
        return this.grpcRoute == null ? Codegen.empty() : this.grpcRoute;
    }

    /**
     * The specification of an HTTP/2 gateway route.
     * 
     */
    @Import(name="http2Route")
      private final @Nullable Output<GatewayRouteSpecHttp2RouteArgs> http2Route;

    public Output<GatewayRouteSpecHttp2RouteArgs> http2Route() {
        return this.http2Route == null ? Codegen.empty() : this.http2Route;
    }

    /**
     * The specification of an HTTP gateway route.
     * 
     */
    @Import(name="httpRoute")
      private final @Nullable Output<GatewayRouteSpecHttpRouteArgs> httpRoute;

    public Output<GatewayRouteSpecHttpRouteArgs> httpRoute() {
        return this.httpRoute == null ? Codegen.empty() : this.httpRoute;
    }

    public GatewayRouteSpecArgs(
        @Nullable Output<GatewayRouteSpecGrpcRouteArgs> grpcRoute,
        @Nullable Output<GatewayRouteSpecHttp2RouteArgs> http2Route,
        @Nullable Output<GatewayRouteSpecHttpRouteArgs> httpRoute) {
        this.grpcRoute = grpcRoute;
        this.http2Route = http2Route;
        this.httpRoute = httpRoute;
    }

    private GatewayRouteSpecArgs() {
        this.grpcRoute = Codegen.empty();
        this.http2Route = Codegen.empty();
        this.httpRoute = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayRouteSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GatewayRouteSpecGrpcRouteArgs> grpcRoute;
        private @Nullable Output<GatewayRouteSpecHttp2RouteArgs> http2Route;
        private @Nullable Output<GatewayRouteSpecHttpRouteArgs> httpRoute;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayRouteSpecArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.grpcRoute = defaults.grpcRoute;
    	      this.http2Route = defaults.http2Route;
    	      this.httpRoute = defaults.httpRoute;
        }

        public Builder grpcRoute(@Nullable Output<GatewayRouteSpecGrpcRouteArgs> grpcRoute) {
            this.grpcRoute = grpcRoute;
            return this;
        }
        public Builder grpcRoute(@Nullable GatewayRouteSpecGrpcRouteArgs grpcRoute) {
            this.grpcRoute = Codegen.ofNullable(grpcRoute);
            return this;
        }
        public Builder http2Route(@Nullable Output<GatewayRouteSpecHttp2RouteArgs> http2Route) {
            this.http2Route = http2Route;
            return this;
        }
        public Builder http2Route(@Nullable GatewayRouteSpecHttp2RouteArgs http2Route) {
            this.http2Route = Codegen.ofNullable(http2Route);
            return this;
        }
        public Builder httpRoute(@Nullable Output<GatewayRouteSpecHttpRouteArgs> httpRoute) {
            this.httpRoute = httpRoute;
            return this;
        }
        public Builder httpRoute(@Nullable GatewayRouteSpecHttpRouteArgs httpRoute) {
            this.httpRoute = Codegen.ofNullable(httpRoute);
            return this;
        }        public GatewayRouteSpecArgs build() {
            return new GatewayRouteSpecArgs(grpcRoute, http2Route, httpRoute);
        }
    }
}
