// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ses;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class ActiveReceiptRuleSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActiveReceiptRuleSetArgs Empty = new ActiveReceiptRuleSetArgs();

    /**
     * The name of the rule set
     * 
     */
    @Import(name="ruleSetName", required=true)
      private final Output<String> ruleSetName;

    public Output<String> ruleSetName() {
        return this.ruleSetName;
    }

    public ActiveReceiptRuleSetArgs(Output<String> ruleSetName) {
        this.ruleSetName = Objects.requireNonNull(ruleSetName, "expected parameter 'ruleSetName' to be non-null");
    }

    private ActiveReceiptRuleSetArgs() {
        this.ruleSetName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActiveReceiptRuleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> ruleSetName;

        public Builder() {
    	      // Empty
        }

        public Builder(ActiveReceiptRuleSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ruleSetName = defaults.ruleSetName;
        }

        public Builder ruleSetName(Output<String> ruleSetName) {
            this.ruleSetName = Objects.requireNonNull(ruleSetName);
            return this;
        }
        public Builder ruleSetName(String ruleSetName) {
            this.ruleSetName = Output.of(Objects.requireNonNull(ruleSetName));
            return this;
        }        public ActiveReceiptRuleSetArgs build() {
            return new ActiveReceiptRuleSetArgs(ruleSetName);
        }
    }
}
