// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.lightsail.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StaticIpState extends com.pulumi.resources.ResourceArgs {

    public static final StaticIpState Empty = new StaticIpState();

    /**
     * The ARN of the Lightsail static IP
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The allocated static IP address
     * 
     */
    @Import(name="ipAddress")
      private final @Nullable Output<String> ipAddress;

    public Output<String> ipAddress() {
        return this.ipAddress == null ? Codegen.empty() : this.ipAddress;
    }

    /**
     * The name for the allocated static IP
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The support code.
     * 
     */
    @Import(name="supportCode")
      private final @Nullable Output<String> supportCode;

    public Output<String> supportCode() {
        return this.supportCode == null ? Codegen.empty() : this.supportCode;
    }

    public StaticIpState(
        @Nullable Output<String> arn,
        @Nullable Output<String> ipAddress,
        @Nullable Output<String> name,
        @Nullable Output<String> supportCode) {
        this.arn = arn;
        this.ipAddress = ipAddress;
        this.name = name;
        this.supportCode = supportCode;
    }

    private StaticIpState() {
        this.arn = Codegen.empty();
        this.ipAddress = Codegen.empty();
        this.name = Codegen.empty();
        this.supportCode = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StaticIpState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> ipAddress;
        private @Nullable Output<String> name;
        private @Nullable Output<String> supportCode;

        public Builder() {
    	      // Empty
        }

        public Builder(StaticIpState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.ipAddress = defaults.ipAddress;
    	      this.name = defaults.name;
    	      this.supportCode = defaults.supportCode;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = Codegen.ofNullable(ipAddress);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder supportCode(@Nullable Output<String> supportCode) {
            this.supportCode = supportCode;
            return this;
        }
        public Builder supportCode(@Nullable String supportCode) {
            this.supportCode = Codegen.ofNullable(supportCode);
            return this;
        }        public StaticIpState build() {
            return new StaticIpState(arn, ipAddress, name, supportCode);
        }
    }
}
