// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dax.inputs;

import com.pulumi.aws.dax.inputs.ParameterGroupParameterGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ParameterGroupState extends com.pulumi.resources.ResourceArgs {

    public static final ParameterGroupState Empty = new ParameterGroupState();

    /**
     * A description of the parameter group.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The name of the parameter group.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The parameters of the parameter group.
     * 
     */
    @Import(name="parameters")
      private final @Nullable Output<List<ParameterGroupParameterGetArgs>> parameters;

    public Output<List<ParameterGroupParameterGetArgs>> parameters() {
        return this.parameters == null ? Codegen.empty() : this.parameters;
    }

    public ParameterGroupState(
        @Nullable Output<String> description,
        @Nullable Output<String> name,
        @Nullable Output<List<ParameterGroupParameterGetArgs>> parameters) {
        this.description = description;
        this.name = name;
        this.parameters = parameters;
    }

    private ParameterGroupState() {
        this.description = Codegen.empty();
        this.name = Codegen.empty();
        this.parameters = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParameterGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> name;
        private @Nullable Output<List<ParameterGroupParameterGetArgs>> parameters;

        public Builder() {
    	      // Empty
        }

        public Builder(ParameterGroupState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder parameters(@Nullable Output<List<ParameterGroupParameterGetArgs>> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(@Nullable List<ParameterGroupParameterGetArgs> parameters) {
            this.parameters = Codegen.ofNullable(parameters);
            return this;
        }
        public Builder parameters(ParameterGroupParameterGetArgs... parameters) {
            return parameters(List.of(parameters));
        }        public ParameterGroupState build() {
            return new ParameterGroupState(description, name, parameters);
        }
    }
}
