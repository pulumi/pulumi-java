// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BasePathMappingState extends com.pulumi.resources.ResourceArgs {

    public static final BasePathMappingState Empty = new BasePathMappingState();

    /**
     * Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
     * 
     */
    @Import(name="basePath")
      private final @Nullable Output<String> basePath;

    public Output<String> basePath() {
        return this.basePath == null ? Codegen.empty() : this.basePath;
    }

    /**
     * The already-registered domain name to connect the API to.
     * 
     */
    @Import(name="domainName")
      private final @Nullable Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName == null ? Codegen.empty() : this.domainName;
    }

    /**
     * The id of the API to connect.
     * 
     */
    @Import(name="restApi")
      private final @Nullable Output<String> restApi;

    public Output<String> restApi() {
        return this.restApi == null ? Codegen.empty() : this.restApi;
    }

    /**
     * The name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
     * 
     */
    @Import(name="stageName")
      private final @Nullable Output<String> stageName;

    public Output<String> stageName() {
        return this.stageName == null ? Codegen.empty() : this.stageName;
    }

    public BasePathMappingState(
        @Nullable Output<String> basePath,
        @Nullable Output<String> domainName,
        @Nullable Output<String> restApi,
        @Nullable Output<String> stageName) {
        this.basePath = basePath;
        this.domainName = domainName;
        this.restApi = restApi;
        this.stageName = stageName;
    }

    private BasePathMappingState() {
        this.basePath = Codegen.empty();
        this.domainName = Codegen.empty();
        this.restApi = Codegen.empty();
        this.stageName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BasePathMappingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> basePath;
        private @Nullable Output<String> domainName;
        private @Nullable Output<String> restApi;
        private @Nullable Output<String> stageName;

        public Builder() {
    	      // Empty
        }

        public Builder(BasePathMappingState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basePath = defaults.basePath;
    	      this.domainName = defaults.domainName;
    	      this.restApi = defaults.restApi;
    	      this.stageName = defaults.stageName;
        }

        public Builder basePath(@Nullable Output<String> basePath) {
            this.basePath = basePath;
            return this;
        }
        public Builder basePath(@Nullable String basePath) {
            this.basePath = Codegen.ofNullable(basePath);
            return this;
        }
        public Builder domainName(@Nullable Output<String> domainName) {
            this.domainName = domainName;
            return this;
        }
        public Builder domainName(@Nullable String domainName) {
            this.domainName = Codegen.ofNullable(domainName);
            return this;
        }
        public Builder restApi(@Nullable Output<String> restApi) {
            this.restApi = restApi;
            return this;
        }
        public Builder stageName(@Nullable Output<String> stageName) {
            this.stageName = stageName;
            return this;
        }
        public Builder stageName(@Nullable String stageName) {
            this.stageName = Codegen.ofNullable(stageName);
            return this;
        }        public BasePathMappingState build() {
            return new BasePathMappingState(basePath, domainName, restApi, stageName);
        }
    }
}
