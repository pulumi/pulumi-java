// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ecr.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class GetRepositoryImageScanningConfiguration extends com.pulumi.resources.InvokeArgs {

    public static final GetRepositoryImageScanningConfiguration Empty = new GetRepositoryImageScanningConfiguration();

    /**
     * Indicates whether images are scanned after being pushed to the repository.
     * 
     */
    @Import(name="scanOnPush", required=true)
    private Boolean scanOnPush;

    /**
     * @return Indicates whether images are scanned after being pushed to the repository.
     * 
     */
    public Boolean scanOnPush() {
        return this.scanOnPush;
    }

    private GetRepositoryImageScanningConfiguration() {}

    private GetRepositoryImageScanningConfiguration(GetRepositoryImageScanningConfiguration $) {
        this.scanOnPush = $.scanOnPush;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepositoryImageScanningConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepositoryImageScanningConfiguration $;

        public Builder() {
            $ = new GetRepositoryImageScanningConfiguration();
        }

        public Builder(GetRepositoryImageScanningConfiguration defaults) {
            $ = new GetRepositoryImageScanningConfiguration(Objects.requireNonNull(defaults));
        }

        /**
         * @param scanOnPush Indicates whether images are scanned after being pushed to the repository.
         * 
         * @return builder
         * 
         */
        public Builder scanOnPush(Boolean scanOnPush) {
            $.scanOnPush = scanOnPush;
            return this;
        }

        public GetRepositoryImageScanningConfiguration build() {
            $.scanOnPush = Objects.requireNonNull($.scanOnPush, "expected parameter 'scanOnPush' to be non-null");
            return $;
        }
    }

}
