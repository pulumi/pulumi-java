// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.outputs;

import com.pulumi.aws.connect.outputs.GetQuickConnectQuickConnectConfigPhoneConfig;
import com.pulumi.aws.connect.outputs.GetQuickConnectQuickConnectConfigQueueConfig;
import com.pulumi.aws.connect.outputs.GetQuickConnectQuickConnectConfigUserConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetQuickConnectQuickConnectConfig {
    /**
     * @return Specifies the phone configuration of the Quick Connect. This is returned only if `quick_connect_type` is `PHONE_NUMBER`. The `phone_config` block is documented below.
     * 
     */
    private final List<GetQuickConnectQuickConnectConfigPhoneConfig> phoneConfigs;
    /**
     * @return Specifies the queue configuration of the Quick Connect. This is returned only if `quick_connect_type` is `QUEUE`. The `queue_config` block is documented below.
     * 
     */
    private final List<GetQuickConnectQuickConnectConfigQueueConfig> queueConfigs;
    /**
     * @return Specifies the configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
     * 
     */
    private final String quickConnectType;
    /**
     * @return Specifies the user configuration of the Quick Connect. This is returned only if `quick_connect_type` is `USER`. The `user_config` block is documented below.
     * 
     */
    private final List<GetQuickConnectQuickConnectConfigUserConfig> userConfigs;

    @CustomType.Constructor
    private GetQuickConnectQuickConnectConfig(
        @CustomType.Parameter("phoneConfigs") List<GetQuickConnectQuickConnectConfigPhoneConfig> phoneConfigs,
        @CustomType.Parameter("queueConfigs") List<GetQuickConnectQuickConnectConfigQueueConfig> queueConfigs,
        @CustomType.Parameter("quickConnectType") String quickConnectType,
        @CustomType.Parameter("userConfigs") List<GetQuickConnectQuickConnectConfigUserConfig> userConfigs) {
        this.phoneConfigs = phoneConfigs;
        this.queueConfigs = queueConfigs;
        this.quickConnectType = quickConnectType;
        this.userConfigs = userConfigs;
    }

    /**
     * @return Specifies the phone configuration of the Quick Connect. This is returned only if `quick_connect_type` is `PHONE_NUMBER`. The `phone_config` block is documented below.
     * 
     */
    public List<GetQuickConnectQuickConnectConfigPhoneConfig> phoneConfigs() {
        return this.phoneConfigs;
    }
    /**
     * @return Specifies the queue configuration of the Quick Connect. This is returned only if `quick_connect_type` is `QUEUE`. The `queue_config` block is documented below.
     * 
     */
    public List<GetQuickConnectQuickConnectConfigQueueConfig> queueConfigs() {
        return this.queueConfigs;
    }
    /**
     * @return Specifies the configuration type of the Quick Connect. Valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
     * 
     */
    public String quickConnectType() {
        return this.quickConnectType;
    }
    /**
     * @return Specifies the user configuration of the Quick Connect. This is returned only if `quick_connect_type` is `USER`. The `user_config` block is documented below.
     * 
     */
    public List<GetQuickConnectQuickConnectConfigUserConfig> userConfigs() {
        return this.userConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQuickConnectQuickConnectConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetQuickConnectQuickConnectConfigPhoneConfig> phoneConfigs;
        private List<GetQuickConnectQuickConnectConfigQueueConfig> queueConfigs;
        private String quickConnectType;
        private List<GetQuickConnectQuickConnectConfigUserConfig> userConfigs;

        public Builder() {
    	      // Empty
        }

        public Builder(GetQuickConnectQuickConnectConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.phoneConfigs = defaults.phoneConfigs;
    	      this.queueConfigs = defaults.queueConfigs;
    	      this.quickConnectType = defaults.quickConnectType;
    	      this.userConfigs = defaults.userConfigs;
        }

        public Builder phoneConfigs(List<GetQuickConnectQuickConnectConfigPhoneConfig> phoneConfigs) {
            this.phoneConfigs = Objects.requireNonNull(phoneConfigs);
            return this;
        }
        public Builder phoneConfigs(GetQuickConnectQuickConnectConfigPhoneConfig... phoneConfigs) {
            return phoneConfigs(List.of(phoneConfigs));
        }
        public Builder queueConfigs(List<GetQuickConnectQuickConnectConfigQueueConfig> queueConfigs) {
            this.queueConfigs = Objects.requireNonNull(queueConfigs);
            return this;
        }
        public Builder queueConfigs(GetQuickConnectQuickConnectConfigQueueConfig... queueConfigs) {
            return queueConfigs(List.of(queueConfigs));
        }
        public Builder quickConnectType(String quickConnectType) {
            this.quickConnectType = Objects.requireNonNull(quickConnectType);
            return this;
        }
        public Builder userConfigs(List<GetQuickConnectQuickConnectConfigUserConfig> userConfigs) {
            this.userConfigs = Objects.requireNonNull(userConfigs);
            return this;
        }
        public Builder userConfigs(GetQuickConnectQuickConnectConfigUserConfig... userConfigs) {
            return userConfigs(List.of(userConfigs));
        }        public GetQuickConnectQuickConnectConfig build() {
            return new GetQuickConnectQuickConnectConfig(phoneConfigs, queueConfigs, quickConnectType, userConfigs);
        }
    }
}
