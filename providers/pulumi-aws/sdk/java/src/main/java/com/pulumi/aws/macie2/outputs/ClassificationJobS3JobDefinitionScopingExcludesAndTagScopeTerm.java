// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.macie2.outputs;

import com.pulumi.aws.macie2.outputs.ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTermTagValue;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTerm {
    /**
     * @return The operator to use in the condition.
     * 
     */
    private final @Nullable String comparator;
    /**
     * @return The tag key to use in the condition.
     * 
     */
    private final @Nullable String key;
    /**
     * @return The tag keys or tag key and value pairs to use in the condition.
     * 
     */
    private final @Nullable List<ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTermTagValue> tagValues;
    /**
     * @return The type of object to apply the condition to.
     * 
     */
    private final @Nullable String target;

    @CustomType.Constructor
    private ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTerm(
        @CustomType.Parameter("comparator") @Nullable String comparator,
        @CustomType.Parameter("key") @Nullable String key,
        @CustomType.Parameter("tagValues") @Nullable List<ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTermTagValue> tagValues,
        @CustomType.Parameter("target") @Nullable String target) {
        this.comparator = comparator;
        this.key = key;
        this.tagValues = tagValues;
        this.target = target;
    }

    /**
     * @return The operator to use in the condition.
     * 
     */
    public Optional<String> comparator() {
        return Optional.ofNullable(this.comparator);
    }
    /**
     * @return The tag key to use in the condition.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return The tag keys or tag key and value pairs to use in the condition.
     * 
     */
    public List<ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTermTagValue> tagValues() {
        return this.tagValues == null ? List.of() : this.tagValues;
    }
    /**
     * @return The type of object to apply the condition to.
     * 
     */
    public Optional<String> target() {
        return Optional.ofNullable(this.target);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTerm defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String comparator;
        private @Nullable String key;
        private @Nullable List<ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTermTagValue> tagValues;
        private @Nullable String target;

        public Builder() {
    	      // Empty
        }

        public Builder(ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTerm defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comparator = defaults.comparator;
    	      this.key = defaults.key;
    	      this.tagValues = defaults.tagValues;
    	      this.target = defaults.target;
        }

        public Builder comparator(@Nullable String comparator) {
            this.comparator = comparator;
            return this;
        }
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        public Builder tagValues(@Nullable List<ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTermTagValue> tagValues) {
            this.tagValues = tagValues;
            return this;
        }
        public Builder tagValues(ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTermTagValue... tagValues) {
            return tagValues(List.of(tagValues));
        }
        public Builder target(@Nullable String target) {
            this.target = target;
            return this;
        }        public ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTerm build() {
            return new ClassificationJobS3JobDefinitionScopingExcludesAndTagScopeTerm(comparator, key, tagValues, target);
        }
    }
}
