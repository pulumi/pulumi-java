// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPolicyArgs Empty = new GetPolicyArgs();

    /**
     * The ARN of the IAM policy.
     * 
     */
    @Import(name="arn")
    private Output</* @Nullable */ String> arn;

    /**
     * @return The ARN of the IAM policy.
     * 
     */
    public Output</* @Nullable */ String> arn() {
        return this.arn;
    }

    /**
     * The name of the IAM policy.
     * 
     */
    @Import(name="name")
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the IAM policy.
     * 
     */
    public Output</* @Nullable */ String> name() {
        return this.name;
    }

    /**
     * The prefix of the path to the IAM policy. Defaults to a slash (`/`).
     * 
     */
    @Import(name="pathPrefix")
    private Output</* @Nullable */ String> pathPrefix;

    /**
     * @return The prefix of the path to the IAM policy. Defaults to a slash (`/`).
     * 
     */
    public Output</* @Nullable */ String> pathPrefix() {
        return this.pathPrefix;
    }

    /**
     * Key-value mapping of tags for the IAM Policy.
     * 
     */
    @Import(name="tags")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value mapping of tags for the IAM Policy.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }

    private GetPolicyArgs() {}

    private GetPolicyArgs(GetPolicyArgs $) {
        this.arn = $.arn;
        this.name = $.name;
        this.pathPrefix = $.pathPrefix;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyArgs $;

        public Builder() {
            $ = new GetPolicyArgs();
        }

        public Builder(GetPolicyArgs defaults) {
            $ = new GetPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn The ARN of the IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder arn(Output</* @Nullable */ String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn The ARN of the IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param name The name of the IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder name(Output</* @Nullable */ String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            return name(Output.of(name));
        }

        /**
         * @param pathPrefix The prefix of the path to the IAM policy. Defaults to a slash (`/`).
         * 
         * @return builder
         * 
         */
        public Builder pathPrefix(Output</* @Nullable */ String> pathPrefix) {
            $.pathPrefix = pathPrefix;
            return this;
        }

        /**
         * @param pathPrefix The prefix of the path to the IAM policy. Defaults to a slash (`/`).
         * 
         * @return builder
         * 
         */
        public Builder pathPrefix(@Nullable String pathPrefix) {
            return pathPrefix(Output.of(pathPrefix));
        }

        /**
         * @param tags Key-value mapping of tags for the IAM Policy.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output</* @Nullable */ Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key-value mapping of tags for the IAM Policy.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetPolicyArgs build() {
            return $;
        }
    }

}
