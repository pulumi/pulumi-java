// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomDomainAssociationCertificateValidationRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomDomainAssociationCertificateValidationRecordArgs Empty = new CustomDomainAssociationCertificateValidationRecordArgs();

    /**
     * The certificate CNAME record name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The certificate CNAME record name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The current state of the certificate CNAME record validation. It should change to `SUCCESS` after App Runner completes validation with your DNS.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current state of the certificate CNAME record validation. It should change to `SUCCESS` after App Runner completes validation with your DNS.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The record type, always `CNAME`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The record type, always `CNAME`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The certificate CNAME record value.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The certificate CNAME record value.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private CustomDomainAssociationCertificateValidationRecordArgs() {}

    private CustomDomainAssociationCertificateValidationRecordArgs(CustomDomainAssociationCertificateValidationRecordArgs $) {
        this.name = $.name;
        this.status = $.status;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomDomainAssociationCertificateValidationRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomDomainAssociationCertificateValidationRecordArgs $;

        public Builder() {
            $ = new CustomDomainAssociationCertificateValidationRecordArgs();
        }

        public Builder(CustomDomainAssociationCertificateValidationRecordArgs defaults) {
            $ = new CustomDomainAssociationCertificateValidationRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The certificate CNAME record name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The certificate CNAME record name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param status The current state of the certificate CNAME record validation. It should change to `SUCCESS` after App Runner completes validation with your DNS.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current state of the certificate CNAME record validation. It should change to `SUCCESS` after App Runner completes validation with your DNS.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type The record type, always `CNAME`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The record type, always `CNAME`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value The certificate CNAME record value.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The certificate CNAME record value.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public CustomDomainAssociationCertificateValidationRecordArgs build() {
            return $;
        }
    }

}
