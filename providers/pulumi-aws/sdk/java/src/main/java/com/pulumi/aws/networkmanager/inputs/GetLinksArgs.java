// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetLinksArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLinksArgs Empty = new GetLinksArgs();

    /**
     * The ID of the Global Network of the links to retrieve.
     * 
     */
    @Import(name="globalNetworkId", required=true)
    private Output<String> globalNetworkId;

    /**
     * @return The ID of the Global Network of the links to retrieve.
     * 
     */
    public Output<String> globalNetworkId() {
        return this.globalNetworkId;
    }

    /**
     * The link provider to retrieve.
     * 
     */
    @Import(name="providerName")
    private Output</* @Nullable */ String> providerName;

    /**
     * @return The link provider to retrieve.
     * 
     */
    public Output</* @Nullable */ String> providerName() {
        return this.providerName;
    }

    /**
     * The ID of the site of the links to retrieve.
     * 
     */
    @Import(name="siteId")
    private Output</* @Nullable */ String> siteId;

    /**
     * @return The ID of the site of the links to retrieve.
     * 
     */
    public Output</* @Nullable */ String> siteId() {
        return this.siteId;
    }

    /**
     * Restricts the list to the links with these tags.
     * 
     */
    @Import(name="tags")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Restricts the list to the links with these tags.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }

    /**
     * The link type to retrieve.
     * 
     */
    @Import(name="type")
    private Output</* @Nullable */ String> type;

    /**
     * @return The link type to retrieve.
     * 
     */
    public Output</* @Nullable */ String> type() {
        return this.type;
    }

    private GetLinksArgs() {}

    private GetLinksArgs(GetLinksArgs $) {
        this.globalNetworkId = $.globalNetworkId;
        this.providerName = $.providerName;
        this.siteId = $.siteId;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLinksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLinksArgs $;

        public Builder() {
            $ = new GetLinksArgs();
        }

        public Builder(GetLinksArgs defaults) {
            $ = new GetLinksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param globalNetworkId The ID of the Global Network of the links to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder globalNetworkId(Output<String> globalNetworkId) {
            $.globalNetworkId = globalNetworkId;
            return this;
        }

        /**
         * @param globalNetworkId The ID of the Global Network of the links to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder globalNetworkId(String globalNetworkId) {
            return globalNetworkId(Output.of(globalNetworkId));
        }

        /**
         * @param providerName The link provider to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder providerName(Output</* @Nullable */ String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName The link provider to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder providerName(@Nullable String providerName) {
            return providerName(Output.of(providerName));
        }

        /**
         * @param siteId The ID of the site of the links to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder siteId(Output</* @Nullable */ String> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId The ID of the site of the links to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable String siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param tags Restricts the list to the links with these tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output</* @Nullable */ Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Restricts the list to the links with these tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param type The link type to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder type(Output</* @Nullable */ String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The link type to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            return type(Output.of(type));
        }

        public GetLinksArgs build() {
            $.globalNetworkId = Objects.requireNonNull($.globalNetworkId, "expected parameter 'globalNetworkId' to be non-null");
            return $;
        }
    }

}
