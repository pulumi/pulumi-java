// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetNatGatewayFilter;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNatGatewayArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNatGatewayArgs Empty = new GetNatGatewayArgs();

    /**
     * Custom filter block as described below.
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetNatGatewayFilter> filters;

    public Optional<List<GetNatGatewayFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The id of the specific Nat Gateway to retrieve.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The state of the NAT gateway (pending | failed | available | deleting | deleted ).
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The id of subnet that the Nat Gateway resides in.
     * 
     */
    @Import(name="subnetId")
    private @Nullable String subnetId;

    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * A map of tags, each pair of which must exactly match
     * a pair on the desired Nat Gateway.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The id of the VPC that the Nat Gateway resides in.
     * 
     */
    @Import(name="vpcId")
    private @Nullable String vpcId;

    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private GetNatGatewayArgs() {}

    private GetNatGatewayArgs(GetNatGatewayArgs $) {
        this.filters = $.filters;
        this.id = $.id;
        this.state = $.state;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNatGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNatGatewayArgs $;

        public Builder() {
            $ = new GetNatGatewayArgs();
        }

        public Builder(GetNatGatewayArgs defaults) {
            $ = new GetNatGatewayArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetNatGatewayFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetNatGatewayFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public Builder subnetId(@Nullable String subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public Builder vpcId(@Nullable String vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public GetNatGatewayArgs build() {
            return $;
        }
    }

}
