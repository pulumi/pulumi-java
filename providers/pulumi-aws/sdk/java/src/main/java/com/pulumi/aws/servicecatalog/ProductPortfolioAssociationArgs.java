// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProductPortfolioAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProductPortfolioAssociationArgs Empty = new ProductPortfolioAssociationArgs();

    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
     * 
     */
    @Import(name="acceptLanguage")
      private final @Nullable Output<String> acceptLanguage;

    public Output<String> acceptLanguage() {
        return this.acceptLanguage == null ? Codegen.empty() : this.acceptLanguage;
    }

    /**
     * Portfolio identifier.
     * 
     */
    @Import(name="portfolioId", required=true)
      private final Output<String> portfolioId;

    public Output<String> portfolioId() {
        return this.portfolioId;
    }

    /**
     * Product identifier.
     * 
     */
    @Import(name="productId", required=true)
      private final Output<String> productId;

    public Output<String> productId() {
        return this.productId;
    }

    /**
     * Identifier of the source portfolio.
     * 
     */
    @Import(name="sourcePortfolioId")
      private final @Nullable Output<String> sourcePortfolioId;

    public Output<String> sourcePortfolioId() {
        return this.sourcePortfolioId == null ? Codegen.empty() : this.sourcePortfolioId;
    }

    public ProductPortfolioAssociationArgs(
        @Nullable Output<String> acceptLanguage,
        Output<String> portfolioId,
        Output<String> productId,
        @Nullable Output<String> sourcePortfolioId) {
        this.acceptLanguage = acceptLanguage;
        this.portfolioId = Objects.requireNonNull(portfolioId, "expected parameter 'portfolioId' to be non-null");
        this.productId = Objects.requireNonNull(productId, "expected parameter 'productId' to be non-null");
        this.sourcePortfolioId = sourcePortfolioId;
    }

    private ProductPortfolioAssociationArgs() {
        this.acceptLanguage = Codegen.empty();
        this.portfolioId = Codegen.empty();
        this.productId = Codegen.empty();
        this.sourcePortfolioId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProductPortfolioAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> acceptLanguage;
        private Output<String> portfolioId;
        private Output<String> productId;
        private @Nullable Output<String> sourcePortfolioId;

        public Builder() {
    	      // Empty
        }

        public Builder(ProductPortfolioAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptLanguage = defaults.acceptLanguage;
    	      this.portfolioId = defaults.portfolioId;
    	      this.productId = defaults.productId;
    	      this.sourcePortfolioId = defaults.sourcePortfolioId;
        }

        public Builder acceptLanguage(@Nullable Output<String> acceptLanguage) {
            this.acceptLanguage = acceptLanguage;
            return this;
        }
        public Builder acceptLanguage(@Nullable String acceptLanguage) {
            this.acceptLanguage = Codegen.ofNullable(acceptLanguage);
            return this;
        }
        public Builder portfolioId(Output<String> portfolioId) {
            this.portfolioId = Objects.requireNonNull(portfolioId);
            return this;
        }
        public Builder portfolioId(String portfolioId) {
            this.portfolioId = Output.of(Objects.requireNonNull(portfolioId));
            return this;
        }
        public Builder productId(Output<String> productId) {
            this.productId = Objects.requireNonNull(productId);
            return this;
        }
        public Builder productId(String productId) {
            this.productId = Output.of(Objects.requireNonNull(productId));
            return this;
        }
        public Builder sourcePortfolioId(@Nullable Output<String> sourcePortfolioId) {
            this.sourcePortfolioId = sourcePortfolioId;
            return this;
        }
        public Builder sourcePortfolioId(@Nullable String sourcePortfolioId) {
            this.sourcePortfolioId = Codegen.ofNullable(sourcePortfolioId);
            return this;
        }        public ProductPortfolioAssociationArgs build() {
            return new ProductPortfolioAssociationArgs(acceptLanguage, portfolioId, productId, sourcePortfolioId);
        }
    }
}
