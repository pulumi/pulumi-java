// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudwatch.inputs;

import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersApiKeyArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersBasicArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersInvocationHttpParametersArgs;
import com.pulumi.aws.cloudwatch.inputs.EventConnectionAuthParametersOauthArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EventConnectionAuthParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventConnectionAuthParametersArgs Empty = new EventConnectionAuthParametersArgs();

    /**
     * Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
     * 
     */
    @Import(name="apiKey")
      private final @Nullable Output<EventConnectionAuthParametersApiKeyArgs> apiKey;

    public Output<EventConnectionAuthParametersApiKeyArgs> apiKey() {
        return this.apiKey == null ? Codegen.empty() : this.apiKey;
    }

    /**
     * Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `api_key` and `oauth`. Documented below.
     * 
     */
    @Import(name="basic")
      private final @Nullable Output<EventConnectionAuthParametersBasicArgs> basic;

    public Output<EventConnectionAuthParametersBasicArgs> basic() {
        return this.basic == null ? Codegen.empty() : this.basic;
    }

    /**
     * Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
     * 
     */
    @Import(name="invocationHttpParameters")
      private final @Nullable Output<EventConnectionAuthParametersInvocationHttpParametersArgs> invocationHttpParameters;

    public Output<EventConnectionAuthParametersInvocationHttpParametersArgs> invocationHttpParameters() {
        return this.invocationHttpParameters == null ? Codegen.empty() : this.invocationHttpParameters;
    }

    /**
     * Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `api_key`. Documented below.
     * 
     */
    @Import(name="oauth")
      private final @Nullable Output<EventConnectionAuthParametersOauthArgs> oauth;

    public Output<EventConnectionAuthParametersOauthArgs> oauth() {
        return this.oauth == null ? Codegen.empty() : this.oauth;
    }

    public EventConnectionAuthParametersArgs(
        @Nullable Output<EventConnectionAuthParametersApiKeyArgs> apiKey,
        @Nullable Output<EventConnectionAuthParametersBasicArgs> basic,
        @Nullable Output<EventConnectionAuthParametersInvocationHttpParametersArgs> invocationHttpParameters,
        @Nullable Output<EventConnectionAuthParametersOauthArgs> oauth) {
        this.apiKey = apiKey;
        this.basic = basic;
        this.invocationHttpParameters = invocationHttpParameters;
        this.oauth = oauth;
    }

    private EventConnectionAuthParametersArgs() {
        this.apiKey = Codegen.empty();
        this.basic = Codegen.empty();
        this.invocationHttpParameters = Codegen.empty();
        this.oauth = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventConnectionAuthParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<EventConnectionAuthParametersApiKeyArgs> apiKey;
        private @Nullable Output<EventConnectionAuthParametersBasicArgs> basic;
        private @Nullable Output<EventConnectionAuthParametersInvocationHttpParametersArgs> invocationHttpParameters;
        private @Nullable Output<EventConnectionAuthParametersOauthArgs> oauth;

        public Builder() {
    	      // Empty
        }

        public Builder(EventConnectionAuthParametersArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.basic = defaults.basic;
    	      this.invocationHttpParameters = defaults.invocationHttpParameters;
    	      this.oauth = defaults.oauth;
        }

        public Builder apiKey(@Nullable Output<EventConnectionAuthParametersApiKeyArgs> apiKey) {
            this.apiKey = apiKey;
            return this;
        }
        public Builder apiKey(@Nullable EventConnectionAuthParametersApiKeyArgs apiKey) {
            this.apiKey = Codegen.ofNullable(apiKey);
            return this;
        }
        public Builder basic(@Nullable Output<EventConnectionAuthParametersBasicArgs> basic) {
            this.basic = basic;
            return this;
        }
        public Builder basic(@Nullable EventConnectionAuthParametersBasicArgs basic) {
            this.basic = Codegen.ofNullable(basic);
            return this;
        }
        public Builder invocationHttpParameters(@Nullable Output<EventConnectionAuthParametersInvocationHttpParametersArgs> invocationHttpParameters) {
            this.invocationHttpParameters = invocationHttpParameters;
            return this;
        }
        public Builder invocationHttpParameters(@Nullable EventConnectionAuthParametersInvocationHttpParametersArgs invocationHttpParameters) {
            this.invocationHttpParameters = Codegen.ofNullable(invocationHttpParameters);
            return this;
        }
        public Builder oauth(@Nullable Output<EventConnectionAuthParametersOauthArgs> oauth) {
            this.oauth = oauth;
            return this;
        }
        public Builder oauth(@Nullable EventConnectionAuthParametersOauthArgs oauth) {
            this.oauth = Codegen.ofNullable(oauth);
            return this;
        }        public EventConnectionAuthParametersArgs build() {
            return new EventConnectionAuthParametersArgs(apiKey, basic, invocationHttpParameters, oauth);
        }
    }
}
