// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CustomDomainAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomDomainAssociationArgs Empty = new CustomDomainAssociationArgs();

    /**
     * The custom domain endpoint to association. Specify a base domain e.g., `example.com` or a subdomain e.g., `subdomain.example.com`.
     * 
     */
    @Import(name="domainName", required=true)
      private final Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * Whether to associate the subdomain with the App Runner service in addition to the base domain. Defaults to `true`.
     * 
     */
    @Import(name="enableWwwSubdomain")
      private final @Nullable Output<Boolean> enableWwwSubdomain;

    public Output<Boolean> enableWwwSubdomain() {
        return this.enableWwwSubdomain == null ? Codegen.empty() : this.enableWwwSubdomain;
    }

    /**
     * The ARN of the App Runner service.
     * 
     */
    @Import(name="serviceArn", required=true)
      private final Output<String> serviceArn;

    public Output<String> serviceArn() {
        return this.serviceArn;
    }

    public CustomDomainAssociationArgs(
        Output<String> domainName,
        @Nullable Output<Boolean> enableWwwSubdomain,
        Output<String> serviceArn) {
        this.domainName = Objects.requireNonNull(domainName, "expected parameter 'domainName' to be non-null");
        this.enableWwwSubdomain = enableWwwSubdomain;
        this.serviceArn = Objects.requireNonNull(serviceArn, "expected parameter 'serviceArn' to be non-null");
    }

    private CustomDomainAssociationArgs() {
        this.domainName = Codegen.empty();
        this.enableWwwSubdomain = Codegen.empty();
        this.serviceArn = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomDomainAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> domainName;
        private @Nullable Output<Boolean> enableWwwSubdomain;
        private Output<String> serviceArn;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomDomainAssociationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.enableWwwSubdomain = defaults.enableWwwSubdomain;
    	      this.serviceArn = defaults.serviceArn;
        }

        public Builder domainName(Output<String> domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        public Builder domainName(String domainName) {
            this.domainName = Output.of(Objects.requireNonNull(domainName));
            return this;
        }
        public Builder enableWwwSubdomain(@Nullable Output<Boolean> enableWwwSubdomain) {
            this.enableWwwSubdomain = enableWwwSubdomain;
            return this;
        }
        public Builder enableWwwSubdomain(@Nullable Boolean enableWwwSubdomain) {
            this.enableWwwSubdomain = Codegen.ofNullable(enableWwwSubdomain);
            return this;
        }
        public Builder serviceArn(Output<String> serviceArn) {
            this.serviceArn = Objects.requireNonNull(serviceArn);
            return this;
        }
        public Builder serviceArn(String serviceArn) {
            this.serviceArn = Output.of(Objects.requireNonNull(serviceArn));
            return this;
        }        public CustomDomainAssociationArgs build() {
            return new CustomDomainAssociationArgs(domainName, enableWwwSubdomain, serviceArn);
        }
    }
}
