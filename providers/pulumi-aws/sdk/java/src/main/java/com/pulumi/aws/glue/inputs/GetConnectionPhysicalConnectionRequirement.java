// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.glue.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetConnectionPhysicalConnectionRequirement extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectionPhysicalConnectionRequirement Empty = new GetConnectionPhysicalConnectionRequirement();

    @Import(name="availabilityZone", required=true)
    private String availabilityZone;

    public String availabilityZone() {
        return this.availabilityZone;
    }

    @Import(name="securityGroupIdLists", required=true)
    private List<String> securityGroupIdLists;

    public List<String> securityGroupIdLists() {
        return this.securityGroupIdLists;
    }

    @Import(name="subnetId", required=true)
    private String subnetId;

    public String subnetId() {
        return this.subnetId;
    }

    private GetConnectionPhysicalConnectionRequirement() {}

    private GetConnectionPhysicalConnectionRequirement(GetConnectionPhysicalConnectionRequirement $) {
        this.availabilityZone = $.availabilityZone;
        this.securityGroupIdLists = $.securityGroupIdLists;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectionPhysicalConnectionRequirement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectionPhysicalConnectionRequirement $;

        public Builder() {
            $ = new GetConnectionPhysicalConnectionRequirement();
        }

        public Builder(GetConnectionPhysicalConnectionRequirement defaults) {
            $ = new GetConnectionPhysicalConnectionRequirement(Objects.requireNonNull(defaults));
        }

        public Builder availabilityZone(String availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        public Builder securityGroupIdLists(List<String> securityGroupIdLists) {
            $.securityGroupIdLists = securityGroupIdLists;
            return this;
        }

        public Builder securityGroupIdLists(String... securityGroupIdLists) {
            return securityGroupIdLists(List.of(securityGroupIdLists));
        }

        public Builder subnetId(String subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public GetConnectionPhysicalConnectionRequirement build() {
            $.availabilityZone = Objects.requireNonNull($.availabilityZone, "expected parameter 'availabilityZone' to be non-null");
            $.securityGroupIdLists = Objects.requireNonNull($.securityGroupIdLists, "expected parameter 'securityGroupIdLists' to be non-null");
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            return $;
        }
    }

}
