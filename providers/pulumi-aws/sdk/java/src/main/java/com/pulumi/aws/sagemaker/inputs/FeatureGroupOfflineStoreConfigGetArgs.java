// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.aws.sagemaker.inputs.FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs;
import com.pulumi.aws.sagemaker.inputs.FeatureGroupOfflineStoreConfigS3StorageConfigGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureGroupOfflineStoreConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureGroupOfflineStoreConfigGetArgs Empty = new FeatureGroupOfflineStoreConfigGetArgs();

    /**
     * The meta data of the Glue table that is autogenerated when an OfflineStore is created. See Data Catalog Config Below.
     * 
     */
    @Import(name="dataCatalogConfig")
    private @Nullable Output<FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs> dataCatalogConfig;

    public Optional<Output<FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs>> dataCatalogConfig() {
        return Optional.ofNullable(this.dataCatalogConfig);
    }

    /**
     * Set to `true` to turn Online Store On.
     * 
     */
    @Import(name="disableGlueTableCreation")
    private @Nullable Output<Boolean> disableGlueTableCreation;

    public Optional<Output<Boolean>> disableGlueTableCreation() {
        return Optional.ofNullable(this.disableGlueTableCreation);
    }

    /**
     * The Amazon Simple Storage (Amazon S3) location of OfflineStore. See S3 Storage Config Below.
     * 
     */
    @Import(name="s3StorageConfig", required=true)
    private Output<FeatureGroupOfflineStoreConfigS3StorageConfigGetArgs> s3StorageConfig;

    public Output<FeatureGroupOfflineStoreConfigS3StorageConfigGetArgs> s3StorageConfig() {
        return this.s3StorageConfig;
    }

    private FeatureGroupOfflineStoreConfigGetArgs() {}

    private FeatureGroupOfflineStoreConfigGetArgs(FeatureGroupOfflineStoreConfigGetArgs $) {
        this.dataCatalogConfig = $.dataCatalogConfig;
        this.disableGlueTableCreation = $.disableGlueTableCreation;
        this.s3StorageConfig = $.s3StorageConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureGroupOfflineStoreConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureGroupOfflineStoreConfigGetArgs $;

        public Builder() {
            $ = new FeatureGroupOfflineStoreConfigGetArgs();
        }

        public Builder(FeatureGroupOfflineStoreConfigGetArgs defaults) {
            $ = new FeatureGroupOfflineStoreConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataCatalogConfig(@Nullable Output<FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs> dataCatalogConfig) {
            $.dataCatalogConfig = dataCatalogConfig;
            return this;
        }

        public Builder dataCatalogConfig(FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs dataCatalogConfig) {
            return dataCatalogConfig(Output.of(dataCatalogConfig));
        }

        public Builder disableGlueTableCreation(@Nullable Output<Boolean> disableGlueTableCreation) {
            $.disableGlueTableCreation = disableGlueTableCreation;
            return this;
        }

        public Builder disableGlueTableCreation(Boolean disableGlueTableCreation) {
            return disableGlueTableCreation(Output.of(disableGlueTableCreation));
        }

        public Builder s3StorageConfig(Output<FeatureGroupOfflineStoreConfigS3StorageConfigGetArgs> s3StorageConfig) {
            $.s3StorageConfig = s3StorageConfig;
            return this;
        }

        public Builder s3StorageConfig(FeatureGroupOfflineStoreConfigS3StorageConfigGetArgs s3StorageConfig) {
            return s3StorageConfig(Output.of(s3StorageConfig));
        }

        public FeatureGroupOfflineStoreConfigGetArgs build() {
            $.s3StorageConfig = Objects.requireNonNull($.s3StorageConfig, "expected parameter 's3StorageConfig' to be non-null");
            return $;
        }
    }

}
