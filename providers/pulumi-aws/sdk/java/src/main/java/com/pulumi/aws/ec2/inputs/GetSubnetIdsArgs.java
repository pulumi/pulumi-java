// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetSubnetIdsFilter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetSubnetIdsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubnetIdsArgs Empty = new GetSubnetIdsArgs();

    /**
     * Custom filter block as described below.
     * 
     */
    @Import(name="filters")
    private Output</* @Nullable */ List<GetSubnetIdsFilter>> filters;

    /**
     * @return Custom filter block as described below.
     * 
     */
    public Output</* @Nullable */ List<GetSubnetIdsFilter>> filters() {
        return this.filters;
    }

    /**
     * A map of tags, each pair of which must exactly match
     * a pair on the desired subnets.
     * 
     */
    @Import(name="tags")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags, each pair of which must exactly match
     * a pair on the desired subnets.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }

    /**
     * The VPC ID that you want to filter from.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return The VPC ID that you want to filter from.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    private GetSubnetIdsArgs() {}

    private GetSubnetIdsArgs(GetSubnetIdsArgs $) {
        this.filters = $.filters;
        this.tags = $.tags;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubnetIdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubnetIdsArgs $;

        public Builder() {
            $ = new GetSubnetIdsArgs();
        }

        public Builder(GetSubnetIdsArgs defaults) {
            $ = new GetSubnetIdsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(Output</* @Nullable */ List<GetSubnetIdsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetSubnetIdsFilter> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Custom filter block as described below.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetSubnetIdsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param tags A map of tags, each pair of which must exactly match
         * a pair on the desired subnets.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output</* @Nullable */ Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags, each pair of which must exactly match
         * a pair on the desired subnets.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vpcId The VPC ID that you want to filter from.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The VPC ID that you want to filter from.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public GetSubnetIdsArgs build() {
            $.vpcId = Objects.requireNonNull($.vpcId, "expected parameter 'vpcId' to be non-null");
            return $;
        }
    }

}
