// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.serverlessrepository.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationResult {
    /**
     * @return The ARN of the application.
     * 
     */
    private final String applicationId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The name of the application.
     * 
     */
    private final String name;
    /**
     * @return A list of capabilities describing the permissions needed to deploy the application.
     * 
     */
    private final List<String> requiredCapabilities;
    private final String semanticVersion;
    /**
     * @return A URL pointing to the source code of the application version.
     * 
     */
    private final String sourceCodeUrl;
    /**
     * @return A URL pointing to the Cloud Formation template for the application version.
     * 
     */
    private final String templateUrl;

    @CustomType.Constructor
    private GetApplicationResult(
        @CustomType.Parameter("applicationId") String applicationId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("requiredCapabilities") List<String> requiredCapabilities,
        @CustomType.Parameter("semanticVersion") String semanticVersion,
        @CustomType.Parameter("sourceCodeUrl") String sourceCodeUrl,
        @CustomType.Parameter("templateUrl") String templateUrl) {
        this.applicationId = applicationId;
        this.id = id;
        this.name = name;
        this.requiredCapabilities = requiredCapabilities;
        this.semanticVersion = semanticVersion;
        this.sourceCodeUrl = sourceCodeUrl;
        this.templateUrl = templateUrl;
    }

    /**
     * @return The ARN of the application.
     * 
     */
    public String applicationId() {
        return this.applicationId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the application.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of capabilities describing the permissions needed to deploy the application.
     * 
     */
    public List<String> requiredCapabilities() {
        return this.requiredCapabilities;
    }
    public String semanticVersion() {
        return this.semanticVersion;
    }
    /**
     * @return A URL pointing to the source code of the application version.
     * 
     */
    public String sourceCodeUrl() {
        return this.sourceCodeUrl;
    }
    /**
     * @return A URL pointing to the Cloud Formation template for the application version.
     * 
     */
    public String templateUrl() {
        return this.templateUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String applicationId;
        private String id;
        private String name;
        private List<String> requiredCapabilities;
        private String semanticVersion;
        private String sourceCodeUrl;
        private String templateUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.requiredCapabilities = defaults.requiredCapabilities;
    	      this.semanticVersion = defaults.semanticVersion;
    	      this.sourceCodeUrl = defaults.sourceCodeUrl;
    	      this.templateUrl = defaults.templateUrl;
        }

        public Builder applicationId(String applicationId) {
            this.applicationId = Objects.requireNonNull(applicationId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder requiredCapabilities(List<String> requiredCapabilities) {
            this.requiredCapabilities = Objects.requireNonNull(requiredCapabilities);
            return this;
        }
        public Builder requiredCapabilities(String... requiredCapabilities) {
            return requiredCapabilities(List.of(requiredCapabilities));
        }
        public Builder semanticVersion(String semanticVersion) {
            this.semanticVersion = Objects.requireNonNull(semanticVersion);
            return this;
        }
        public Builder sourceCodeUrl(String sourceCodeUrl) {
            this.sourceCodeUrl = Objects.requireNonNull(sourceCodeUrl);
            return this;
        }
        public Builder templateUrl(String templateUrl) {
            this.templateUrl = Objects.requireNonNull(templateUrl);
            return this;
        }        public GetApplicationResult build() {
            return new GetApplicationResult(applicationId, id, name, requiredCapabilities, semanticVersion, sourceCodeUrl, templateUrl);
        }
    }
}
