// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.s3.inputs;

import com.pulumi.aws.s3.inputs.InventoryDestinationBucketEncryptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InventoryDestinationBucketArgs extends com.pulumi.resources.ResourceArgs {

    public static final InventoryDestinationBucketArgs Empty = new InventoryDestinationBucketArgs();

    /**
     * The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
     * 
     */
    @Import(name="accountId")
      private final @Nullable Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId == null ? Codegen.empty() : this.accountId;
    }

    /**
     * The Amazon S3 bucket ARN of the destination.
     * 
     */
    @Import(name="bucketArn", required=true)
      private final Output<String> bucketArn;

    public Output<String> bucketArn() {
        return this.bucketArn;
    }

    /**
     * Contains the type of server-side encryption to use to encrypt the inventory (documented below).
     * 
     */
    @Import(name="encryption")
      private final @Nullable Output<InventoryDestinationBucketEncryptionArgs> encryption;

    public Output<InventoryDestinationBucketEncryptionArgs> encryption() {
        return this.encryption == null ? Codegen.empty() : this.encryption;
    }

    /**
     * Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
     * 
     */
    @Import(name="format", required=true)
      private final Output<String> format;

    public Output<String> format() {
        return this.format;
    }

    /**
     * The prefix that is prepended to all inventory results.
     * 
     */
    @Import(name="prefix")
      private final @Nullable Output<String> prefix;

    public Output<String> prefix() {
        return this.prefix == null ? Codegen.empty() : this.prefix;
    }

    public InventoryDestinationBucketArgs(
        @Nullable Output<String> accountId,
        Output<String> bucketArn,
        @Nullable Output<InventoryDestinationBucketEncryptionArgs> encryption,
        Output<String> format,
        @Nullable Output<String> prefix) {
        this.accountId = accountId;
        this.bucketArn = Objects.requireNonNull(bucketArn, "expected parameter 'bucketArn' to be non-null");
        this.encryption = encryption;
        this.format = Objects.requireNonNull(format, "expected parameter 'format' to be non-null");
        this.prefix = prefix;
    }

    private InventoryDestinationBucketArgs() {
        this.accountId = Codegen.empty();
        this.bucketArn = Codegen.empty();
        this.encryption = Codegen.empty();
        this.format = Codegen.empty();
        this.prefix = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InventoryDestinationBucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accountId;
        private Output<String> bucketArn;
        private @Nullable Output<InventoryDestinationBucketEncryptionArgs> encryption;
        private Output<String> format;
        private @Nullable Output<String> prefix;

        public Builder() {
    	      // Empty
        }

        public Builder(InventoryDestinationBucketArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.bucketArn = defaults.bucketArn;
    	      this.encryption = defaults.encryption;
    	      this.format = defaults.format;
    	      this.prefix = defaults.prefix;
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            this.accountId = accountId;
            return this;
        }
        public Builder accountId(@Nullable String accountId) {
            this.accountId = Codegen.ofNullable(accountId);
            return this;
        }
        public Builder bucketArn(Output<String> bucketArn) {
            this.bucketArn = Objects.requireNonNull(bucketArn);
            return this;
        }
        public Builder bucketArn(String bucketArn) {
            this.bucketArn = Output.of(Objects.requireNonNull(bucketArn));
            return this;
        }
        public Builder encryption(@Nullable Output<InventoryDestinationBucketEncryptionArgs> encryption) {
            this.encryption = encryption;
            return this;
        }
        public Builder encryption(@Nullable InventoryDestinationBucketEncryptionArgs encryption) {
            this.encryption = Codegen.ofNullable(encryption);
            return this;
        }
        public Builder format(Output<String> format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }
        public Builder format(String format) {
            this.format = Output.of(Objects.requireNonNull(format));
            return this;
        }
        public Builder prefix(@Nullable Output<String> prefix) {
            this.prefix = prefix;
            return this;
        }
        public Builder prefix(@Nullable String prefix) {
            this.prefix = Codegen.ofNullable(prefix);
            return this;
        }        public InventoryDestinationBucketArgs build() {
            return new InventoryDestinationBucketArgs(accountId, bucketArn, encryption, format, prefix);
        }
    }
}
