// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.resourcegroupstaggingapi.inputs;

import com.pulumi.aws.resourcegroupstaggingapi.inputs.GetResourcesResourceTagMappingListComplianceDetail;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class GetResourcesResourceTagMappingList extends com.pulumi.resources.InvokeArgs {

    public static final GetResourcesResourceTagMappingList Empty = new GetResourcesResourceTagMappingList();

    /**
     * List of objects with information that shows whether a resource is compliant with the effective tag policy, including details on any noncompliant tag keys.
     * 
     */
    @Import(name="complianceDetails", required=true)
    private List<GetResourcesResourceTagMappingListComplianceDetail> complianceDetails;

    /**
     * @return List of objects with information that shows whether a resource is compliant with the effective tag policy, including details on any noncompliant tag keys.
     * 
     */
    public List<GetResourcesResourceTagMappingListComplianceDetail> complianceDetails() {
        return this.complianceDetails;
    }

    /**
     * ARN of the resource.
     * 
     */
    @Import(name="resourceArn", required=true)
    private String resourceArn;

    /**
     * @return ARN of the resource.
     * 
     */
    public String resourceArn() {
        return this.resourceArn;
    }

    /**
     * Map of tags assigned to the resource.
     * 
     */
    @Import(name="tags", required=true)
    private Map<String,String> tags;

    /**
     * @return Map of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    private GetResourcesResourceTagMappingList() {}

    private GetResourcesResourceTagMappingList(GetResourcesResourceTagMappingList $) {
        this.complianceDetails = $.complianceDetails;
        this.resourceArn = $.resourceArn;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResourcesResourceTagMappingList defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResourcesResourceTagMappingList $;

        public Builder() {
            $ = new GetResourcesResourceTagMappingList();
        }

        public Builder(GetResourcesResourceTagMappingList defaults) {
            $ = new GetResourcesResourceTagMappingList(Objects.requireNonNull(defaults));
        }

        /**
         * @param complianceDetails List of objects with information that shows whether a resource is compliant with the effective tag policy, including details on any noncompliant tag keys.
         * 
         * @return builder
         * 
         */
        public Builder complianceDetails(List<GetResourcesResourceTagMappingListComplianceDetail> complianceDetails) {
            $.complianceDetails = complianceDetails;
            return this;
        }

        /**
         * @param complianceDetails List of objects with information that shows whether a resource is compliant with the effective tag policy, including details on any noncompliant tag keys.
         * 
         * @return builder
         * 
         */
        public Builder complianceDetails(GetResourcesResourceTagMappingListComplianceDetail... complianceDetails) {
            return complianceDetails(List.of(complianceDetails));
        }

        /**
         * @param resourceArn ARN of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(String resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        /**
         * @param tags Map of tags assigned to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetResourcesResourceTagMappingList build() {
            $.complianceDetails = Objects.requireNonNull($.complianceDetails, "expected parameter 'complianceDetails' to be non-null");
            $.resourceArn = Objects.requireNonNull($.resourceArn, "expected parameter 'resourceArn' to be non-null");
            $.tags = Objects.requireNonNull($.tags, "expected parameter 'tags' to be non-null");
            return $;
        }
    }

}
