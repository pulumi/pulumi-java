// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.emr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAutoTerminationPolicyGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAutoTerminationPolicyGetArgs Empty = new ClusterAutoTerminationPolicyGetArgs();

    /**
     * Specifies the amount of idle time in seconds after which the cluster automatically terminates. You can specify a minimum of `60` seconds and a maximum of `604800` seconds (seven days).
     * 
     */
    @Import(name="idleTimeout")
    private @Nullable Output<Integer> idleTimeout;

    /**
     * @return Specifies the amount of idle time in seconds after which the cluster automatically terminates. You can specify a minimum of `60` seconds and a maximum of `604800` seconds (seven days).
     * 
     */
    public Optional<Output<Integer>> idleTimeout() {
        return Optional.ofNullable(this.idleTimeout);
    }

    private ClusterAutoTerminationPolicyGetArgs() {}

    private ClusterAutoTerminationPolicyGetArgs(ClusterAutoTerminationPolicyGetArgs $) {
        this.idleTimeout = $.idleTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAutoTerminationPolicyGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAutoTerminationPolicyGetArgs $;

        public Builder() {
            $ = new ClusterAutoTerminationPolicyGetArgs();
        }

        public Builder(ClusterAutoTerminationPolicyGetArgs defaults) {
            $ = new ClusterAutoTerminationPolicyGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param idleTimeout Specifies the amount of idle time in seconds after which the cluster automatically terminates. You can specify a minimum of `60` seconds and a maximum of `604800` seconds (seven days).
         * 
         * @return builder
         * 
         */
        public Builder idleTimeout(@Nullable Output<Integer> idleTimeout) {
            $.idleTimeout = idleTimeout;
            return this;
        }

        /**
         * @param idleTimeout Specifies the amount of idle time in seconds after which the cluster automatically terminates. You can specify a minimum of `60` seconds and a maximum of `604800` seconds (seven days).
         * 
         * @return builder
         * 
         */
        public Builder idleTimeout(Integer idleTimeout) {
            return idleTimeout(Output.of(idleTimeout));
        }

        public ClusterAutoTerminationPolicyGetArgs build() {
            return $;
        }
    }

}
