// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs Empty = new FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs();

    /**
     * The name of the Glue table catalog.
     * 
     */
    @Import(name="catalog")
    private @Nullable Output<String> catalog;

    /**
     * @return The name of the Glue table catalog.
     * 
     */
    public Optional<Output<String>> catalog() {
        return Optional.ofNullable(this.catalog);
    }

    /**
     * The name of the Glue table database.
     * 
     */
    @Import(name="database")
    private @Nullable Output<String> database;

    /**
     * @return The name of the Glue table database.
     * 
     */
    public Optional<Output<String>> database() {
        return Optional.ofNullable(this.database);
    }

    /**
     * The name of the Glue table.
     * 
     */
    @Import(name="tableName")
    private @Nullable Output<String> tableName;

    /**
     * @return The name of the Glue table.
     * 
     */
    public Optional<Output<String>> tableName() {
        return Optional.ofNullable(this.tableName);
    }

    private FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs() {}

    private FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs(FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs $) {
        this.catalog = $.catalog;
        this.database = $.database;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs $;

        public Builder() {
            $ = new FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs();
        }

        public Builder(FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs defaults) {
            $ = new FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalog The name of the Glue table catalog.
         * 
         * @return builder
         * 
         */
        public Builder catalog(@Nullable Output<String> catalog) {
            $.catalog = catalog;
            return this;
        }

        /**
         * @param catalog The name of the Glue table catalog.
         * 
         * @return builder
         * 
         */
        public Builder catalog(String catalog) {
            return catalog(Output.of(catalog));
        }

        /**
         * @param database The name of the Glue table database.
         * 
         * @return builder
         * 
         */
        public Builder database(@Nullable Output<String> database) {
            $.database = database;
            return this;
        }

        /**
         * @param database The name of the Glue table database.
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            return database(Output.of(database));
        }

        /**
         * @param tableName The name of the Glue table.
         * 
         * @return builder
         * 
         */
        public Builder tableName(@Nullable Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        /**
         * @param tableName The name of the Glue table.
         * 
         * @return builder
         * 
         */
        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public FeatureGroupOfflineStoreConfigDataCatalogConfigGetArgs build() {
            return $;
        }
    }

}
