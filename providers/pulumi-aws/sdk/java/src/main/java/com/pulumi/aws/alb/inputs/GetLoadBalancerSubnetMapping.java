// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.alb.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetLoadBalancerSubnetMapping extends com.pulumi.resources.InvokeArgs {

    public static final GetLoadBalancerSubnetMapping Empty = new GetLoadBalancerSubnetMapping();

    @Import(name="allocationId", required=true)
    private String allocationId;

    public String allocationId() {
        return this.allocationId;
    }

    @Import(name="ipv6Address", required=true)
    private String ipv6Address;

    public String ipv6Address() {
        return this.ipv6Address;
    }

    @Import(name="outpostId", required=true)
    private String outpostId;

    public String outpostId() {
        return this.outpostId;
    }

    @Import(name="privateIpv4Address", required=true)
    private String privateIpv4Address;

    public String privateIpv4Address() {
        return this.privateIpv4Address;
    }

    @Import(name="subnetId", required=true)
    private String subnetId;

    public String subnetId() {
        return this.subnetId;
    }

    private GetLoadBalancerSubnetMapping() {}

    private GetLoadBalancerSubnetMapping(GetLoadBalancerSubnetMapping $) {
        this.allocationId = $.allocationId;
        this.ipv6Address = $.ipv6Address;
        this.outpostId = $.outpostId;
        this.privateIpv4Address = $.privateIpv4Address;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLoadBalancerSubnetMapping defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLoadBalancerSubnetMapping $;

        public Builder() {
            $ = new GetLoadBalancerSubnetMapping();
        }

        public Builder(GetLoadBalancerSubnetMapping defaults) {
            $ = new GetLoadBalancerSubnetMapping(Objects.requireNonNull(defaults));
        }

        public Builder allocationId(String allocationId) {
            $.allocationId = allocationId;
            return this;
        }

        public Builder ipv6Address(String ipv6Address) {
            $.ipv6Address = ipv6Address;
            return this;
        }

        public Builder outpostId(String outpostId) {
            $.outpostId = outpostId;
            return this;
        }

        public Builder privateIpv4Address(String privateIpv4Address) {
            $.privateIpv4Address = privateIpv4Address;
            return this;
        }

        public Builder subnetId(String subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public GetLoadBalancerSubnetMapping build() {
            $.allocationId = Objects.requireNonNull($.allocationId, "expected parameter 'allocationId' to be non-null");
            $.ipv6Address = Objects.requireNonNull($.ipv6Address, "expected parameter 'ipv6Address' to be non-null");
            $.outpostId = Objects.requireNonNull($.outpostId, "expected parameter 'outpostId' to be non-null");
            $.privateIpv4Address = Objects.requireNonNull($.privateIpv4Address, "expected parameter 'privateIpv4Address' to be non-null");
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            return $;
        }
    }

}
