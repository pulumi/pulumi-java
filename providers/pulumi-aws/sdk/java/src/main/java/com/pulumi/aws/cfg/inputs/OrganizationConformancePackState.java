// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cfg.inputs;

import com.pulumi.aws.cfg.inputs.OrganizationConformancePackInputParameterGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationConformancePackState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationConformancePackState Empty = new OrganizationConformancePackState();

    /**
     * Amazon Resource Name (ARN) of the organization conformance pack.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Amazon S3 bucket where AWS Config stores conformance pack templates. Delivery bucket must begin with `awsconfigconforms` prefix. Maximum length of 63.
     * 
     */
    @Import(name="deliveryS3Bucket")
    private @Nullable Output<String> deliveryS3Bucket;

    public Optional<Output<String>> deliveryS3Bucket() {
        return Optional.ofNullable(this.deliveryS3Bucket);
    }

    /**
     * The prefix for the Amazon S3 bucket. Maximum length of 1024.
     * 
     */
    @Import(name="deliveryS3KeyPrefix")
    private @Nullable Output<String> deliveryS3KeyPrefix;

    public Optional<Output<String>> deliveryS3KeyPrefix() {
        return Optional.ofNullable(this.deliveryS3KeyPrefix);
    }

    /**
     * Set of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack. Maximum of 1000 accounts.
     * 
     */
    @Import(name="excludedAccounts")
    private @Nullable Output<List<String>> excludedAccounts;

    public Optional<Output<List<String>>> excludedAccounts() {
        return Optional.ofNullable(this.excludedAccounts);
    }

    /**
     * Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `template_body` or in the template stored in Amazon S3 if using `template_s3_uri`.
     * 
     */
    @Import(name="inputParameters")
    private @Nullable Output<List<OrganizationConformancePackInputParameterGetArgs>> inputParameters;

    public Optional<Output<List<OrganizationConformancePackInputParameterGetArgs>>> inputParameters() {
        return Optional.ofNullable(this.inputParameters);
    }

    /**
     * The name of the organization conformance pack. Must begin with a letter and contain from 1 to 128 alphanumeric characters and hyphens.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
     * 
     */
    @Import(name="templateBody")
    private @Nullable Output<String> templateBody;

    public Optional<Output<String>> templateBody() {
        return Optional.ofNullable(this.templateBody);
    }

    /**
     * Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
     * 
     */
    @Import(name="templateS3Uri")
    private @Nullable Output<String> templateS3Uri;

    public Optional<Output<String>> templateS3Uri() {
        return Optional.ofNullable(this.templateS3Uri);
    }

    private OrganizationConformancePackState() {}

    private OrganizationConformancePackState(OrganizationConformancePackState $) {
        this.arn = $.arn;
        this.deliveryS3Bucket = $.deliveryS3Bucket;
        this.deliveryS3KeyPrefix = $.deliveryS3KeyPrefix;
        this.excludedAccounts = $.excludedAccounts;
        this.inputParameters = $.inputParameters;
        this.name = $.name;
        this.templateBody = $.templateBody;
        this.templateS3Uri = $.templateS3Uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationConformancePackState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationConformancePackState $;

        public Builder() {
            $ = new OrganizationConformancePackState();
        }

        public Builder(OrganizationConformancePackState defaults) {
            $ = new OrganizationConformancePackState(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        public Builder deliveryS3Bucket(@Nullable Output<String> deliveryS3Bucket) {
            $.deliveryS3Bucket = deliveryS3Bucket;
            return this;
        }

        public Builder deliveryS3Bucket(String deliveryS3Bucket) {
            return deliveryS3Bucket(Output.of(deliveryS3Bucket));
        }

        public Builder deliveryS3KeyPrefix(@Nullable Output<String> deliveryS3KeyPrefix) {
            $.deliveryS3KeyPrefix = deliveryS3KeyPrefix;
            return this;
        }

        public Builder deliveryS3KeyPrefix(String deliveryS3KeyPrefix) {
            return deliveryS3KeyPrefix(Output.of(deliveryS3KeyPrefix));
        }

        public Builder excludedAccounts(@Nullable Output<List<String>> excludedAccounts) {
            $.excludedAccounts = excludedAccounts;
            return this;
        }

        public Builder excludedAccounts(List<String> excludedAccounts) {
            return excludedAccounts(Output.of(excludedAccounts));
        }

        public Builder excludedAccounts(String... excludedAccounts) {
            return excludedAccounts(List.of(excludedAccounts));
        }

        public Builder inputParameters(@Nullable Output<List<OrganizationConformancePackInputParameterGetArgs>> inputParameters) {
            $.inputParameters = inputParameters;
            return this;
        }

        public Builder inputParameters(List<OrganizationConformancePackInputParameterGetArgs> inputParameters) {
            return inputParameters(Output.of(inputParameters));
        }

        public Builder inputParameters(OrganizationConformancePackInputParameterGetArgs... inputParameters) {
            return inputParameters(List.of(inputParameters));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder templateBody(@Nullable Output<String> templateBody) {
            $.templateBody = templateBody;
            return this;
        }

        public Builder templateBody(String templateBody) {
            return templateBody(Output.of(templateBody));
        }

        public Builder templateS3Uri(@Nullable Output<String> templateS3Uri) {
            $.templateS3Uri = templateS3Uri;
            return this;
        }

        public Builder templateS3Uri(String templateS3Uri) {
            return templateS3Uri(Output.of(templateS3Uri));
        }

        public OrganizationConformancePackState build() {
            return $;
        }
    }

}
