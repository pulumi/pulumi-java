// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.autoscaling.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupInstanceRefreshPreferencesArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupInstanceRefreshPreferencesArgs Empty = new GroupInstanceRefreshPreferencesArgs();

    /**
     * The number of seconds to wait after a checkpoint. Defaults to `3600`.
     * 
     */
    @Import(name="checkpointDelay")
    private @Nullable Output<String> checkpointDelay;

    public Optional<Output<String>> checkpointDelay() {
        return Optional.ofNullable(this.checkpointDelay);
    }

    /**
     * List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be `100`.
     * 
     */
    @Import(name="checkpointPercentages")
    private @Nullable Output<List<Integer>> checkpointPercentages;

    public Optional<Output<List<Integer>>> checkpointPercentages() {
        return Optional.ofNullable(this.checkpointPercentages);
    }

    /**
     * The number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group&#39;s health check grace period.
     * 
     */
    @Import(name="instanceWarmup")
    private @Nullable Output<String> instanceWarmup;

    public Optional<Output<String>> instanceWarmup() {
        return Optional.ofNullable(this.instanceWarmup);
    }

    /**
     * The amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to `90`.
     * 
     */
    @Import(name="minHealthyPercentage")
    private @Nullable Output<Integer> minHealthyPercentage;

    public Optional<Output<Integer>> minHealthyPercentage() {
        return Optional.ofNullable(this.minHealthyPercentage);
    }

    private GroupInstanceRefreshPreferencesArgs() {}

    private GroupInstanceRefreshPreferencesArgs(GroupInstanceRefreshPreferencesArgs $) {
        this.checkpointDelay = $.checkpointDelay;
        this.checkpointPercentages = $.checkpointPercentages;
        this.instanceWarmup = $.instanceWarmup;
        this.minHealthyPercentage = $.minHealthyPercentage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupInstanceRefreshPreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupInstanceRefreshPreferencesArgs $;

        public Builder() {
            $ = new GroupInstanceRefreshPreferencesArgs();
        }

        public Builder(GroupInstanceRefreshPreferencesArgs defaults) {
            $ = new GroupInstanceRefreshPreferencesArgs(Objects.requireNonNull(defaults));
        }

        public Builder checkpointDelay(@Nullable Output<String> checkpointDelay) {
            $.checkpointDelay = checkpointDelay;
            return this;
        }

        public Builder checkpointDelay(String checkpointDelay) {
            return checkpointDelay(Output.of(checkpointDelay));
        }

        public Builder checkpointPercentages(@Nullable Output<List<Integer>> checkpointPercentages) {
            $.checkpointPercentages = checkpointPercentages;
            return this;
        }

        public Builder checkpointPercentages(List<Integer> checkpointPercentages) {
            return checkpointPercentages(Output.of(checkpointPercentages));
        }

        public Builder checkpointPercentages(Integer... checkpointPercentages) {
            return checkpointPercentages(List.of(checkpointPercentages));
        }

        public Builder instanceWarmup(@Nullable Output<String> instanceWarmup) {
            $.instanceWarmup = instanceWarmup;
            return this;
        }

        public Builder instanceWarmup(String instanceWarmup) {
            return instanceWarmup(Output.of(instanceWarmup));
        }

        public Builder minHealthyPercentage(@Nullable Output<Integer> minHealthyPercentage) {
            $.minHealthyPercentage = minHealthyPercentage;
            return this;
        }

        public Builder minHealthyPercentage(Integer minHealthyPercentage) {
            return minHealthyPercentage(Output.of(minHealthyPercentage));
        }

        public GroupInstanceRefreshPreferencesArgs build() {
            return $;
        }
    }

}
