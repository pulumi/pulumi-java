// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.budgets.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


public final class BudgetActionSubscriberArgs extends com.pulumi.resources.ResourceArgs {

    public static final BudgetActionSubscriberArgs Empty = new BudgetActionSubscriberArgs();

    /**
     * The address that AWS sends budget notifications to, either an SNS topic or an email.
     * 
     */
    @Import(name="address", required=true)
      private final Output<String> address;

    public Output<String> address() {
        return this.address;
    }

    /**
     * The type of notification that AWS sends to a subscriber. Valid values are `SNS` or `EMAIL`.
     * 
     */
    @Import(name="subscriptionType", required=true)
      private final Output<String> subscriptionType;

    public Output<String> subscriptionType() {
        return this.subscriptionType;
    }

    public BudgetActionSubscriberArgs(
        Output<String> address,
        Output<String> subscriptionType) {
        this.address = Objects.requireNonNull(address, "expected parameter 'address' to be non-null");
        this.subscriptionType = Objects.requireNonNull(subscriptionType, "expected parameter 'subscriptionType' to be non-null");
    }

    private BudgetActionSubscriberArgs() {
        this.address = Codegen.empty();
        this.subscriptionType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BudgetActionSubscriberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> address;
        private Output<String> subscriptionType;

        public Builder() {
    	      // Empty
        }

        public Builder(BudgetActionSubscriberArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.subscriptionType = defaults.subscriptionType;
        }

        public Builder address(Output<String> address) {
            this.address = Objects.requireNonNull(address);
            return this;
        }
        public Builder address(String address) {
            this.address = Output.of(Objects.requireNonNull(address));
            return this;
        }
        public Builder subscriptionType(Output<String> subscriptionType) {
            this.subscriptionType = Objects.requireNonNull(subscriptionType);
            return this;
        }
        public Builder subscriptionType(String subscriptionType) {
            this.subscriptionType = Output.of(Objects.requireNonNull(subscriptionType));
            return this;
        }        public BudgetActionSubscriberArgs build() {
            return new BudgetActionSubscriberArgs(address, subscriptionType);
        }
    }
}
