// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.aws.wafv2.inputs.WebAclRuleOverrideActionCountArgs;
import com.pulumi.aws.wafv2.inputs.WebAclRuleOverrideActionNoneArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebAclRuleOverrideActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAclRuleOverrideActionArgs Empty = new WebAclRuleOverrideActionArgs();

    /**
     * Override the rule action setting to count (i.e., only count matches). Configured as an empty block `{}`.
     * 
     */
    @Import(name="count")
      private final @Nullable Output<WebAclRuleOverrideActionCountArgs> count;

    public Output<WebAclRuleOverrideActionCountArgs> count() {
        return this.count == null ? Codegen.empty() : this.count;
    }

    /**
     * Don&#39;t override the rule action setting. Configured as an empty block `{}`.
     * 
     */
    @Import(name="none")
      private final @Nullable Output<WebAclRuleOverrideActionNoneArgs> none;

    public Output<WebAclRuleOverrideActionNoneArgs> none() {
        return this.none == null ? Codegen.empty() : this.none;
    }

    public WebAclRuleOverrideActionArgs(
        @Nullable Output<WebAclRuleOverrideActionCountArgs> count,
        @Nullable Output<WebAclRuleOverrideActionNoneArgs> none) {
        this.count = count;
        this.none = none;
    }

    private WebAclRuleOverrideActionArgs() {
        this.count = Codegen.empty();
        this.none = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclRuleOverrideActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<WebAclRuleOverrideActionCountArgs> count;
        private @Nullable Output<WebAclRuleOverrideActionNoneArgs> none;

        public Builder() {
    	      // Empty
        }

        public Builder(WebAclRuleOverrideActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.none = defaults.none;
        }

        public Builder count(@Nullable Output<WebAclRuleOverrideActionCountArgs> count) {
            this.count = count;
            return this;
        }
        public Builder count(@Nullable WebAclRuleOverrideActionCountArgs count) {
            this.count = Codegen.ofNullable(count);
            return this;
        }
        public Builder none(@Nullable Output<WebAclRuleOverrideActionNoneArgs> none) {
            this.none = none;
            return this;
        }
        public Builder none(@Nullable WebAclRuleOverrideActionNoneArgs none) {
            this.none = Codegen.ofNullable(none);
            return this;
        }        public WebAclRuleOverrideActionArgs build() {
            return new WebAclRuleOverrideActionArgs(count, none);
        }
    }
}
