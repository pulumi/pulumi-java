// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.gamelift.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BuildStorageLocation {
    /**
     * @return Name of your S3 bucket.
     * 
     */
    private final String bucket;
    /**
     * @return Name of the zip file containing your build files.
     * 
     */
    private final String key;
    /**
     * @return ARN of the access role that allows Amazon GameLift to access your S3 bucket.
     * 
     */
    private final String roleArn;

    @CustomType.Constructor
    private BuildStorageLocation(
        @CustomType.Parameter("bucket") String bucket,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("roleArn") String roleArn) {
        this.bucket = bucket;
        this.key = key;
        this.roleArn = roleArn;
    }

    /**
     * @return Name of your S3 bucket.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return Name of the zip file containing your build files.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return ARN of the access role that allows Amazon GameLift to access your S3 bucket.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuildStorageLocation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bucket;
        private String key;
        private String roleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(BuildStorageLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.key = defaults.key;
    	      this.roleArn = defaults.roleArn;
        }

        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder roleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }        public BuildStorageLocation build() {
            return new BuildStorageLocation(bucket, key, roleArn);
        }
    }
}
