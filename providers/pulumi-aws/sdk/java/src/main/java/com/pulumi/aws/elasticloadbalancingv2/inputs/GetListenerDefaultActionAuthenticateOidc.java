// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticloadbalancingv2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class GetListenerDefaultActionAuthenticateOidc extends com.pulumi.resources.InvokeArgs {

    public static final GetListenerDefaultActionAuthenticateOidc Empty = new GetListenerDefaultActionAuthenticateOidc();

    @Import(name="authenticationRequestExtraParams", required=true)
    private Map<String,String> authenticationRequestExtraParams;

    public Map<String,String> authenticationRequestExtraParams() {
        return this.authenticationRequestExtraParams;
    }

    @Import(name="authorizationEndpoint", required=true)
    private String authorizationEndpoint;

    public String authorizationEndpoint() {
        return this.authorizationEndpoint;
    }

    @Import(name="clientId", required=true)
    private String clientId;

    public String clientId() {
        return this.clientId;
    }

    @Import(name="clientSecret", required=true)
    private String clientSecret;

    public String clientSecret() {
        return this.clientSecret;
    }

    @Import(name="issuer", required=true)
    private String issuer;

    public String issuer() {
        return this.issuer;
    }

    @Import(name="onUnauthenticatedRequest", required=true)
    private String onUnauthenticatedRequest;

    public String onUnauthenticatedRequest() {
        return this.onUnauthenticatedRequest;
    }

    @Import(name="scope", required=true)
    private String scope;

    public String scope() {
        return this.scope;
    }

    @Import(name="sessionCookieName", required=true)
    private String sessionCookieName;

    public String sessionCookieName() {
        return this.sessionCookieName;
    }

    @Import(name="sessionTimeout", required=true)
    private Integer sessionTimeout;

    public Integer sessionTimeout() {
        return this.sessionTimeout;
    }

    @Import(name="tokenEndpoint", required=true)
    private String tokenEndpoint;

    public String tokenEndpoint() {
        return this.tokenEndpoint;
    }

    @Import(name="userInfoEndpoint", required=true)
    private String userInfoEndpoint;

    public String userInfoEndpoint() {
        return this.userInfoEndpoint;
    }

    private GetListenerDefaultActionAuthenticateOidc() {}

    private GetListenerDefaultActionAuthenticateOidc(GetListenerDefaultActionAuthenticateOidc $) {
        this.authenticationRequestExtraParams = $.authenticationRequestExtraParams;
        this.authorizationEndpoint = $.authorizationEndpoint;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.issuer = $.issuer;
        this.onUnauthenticatedRequest = $.onUnauthenticatedRequest;
        this.scope = $.scope;
        this.sessionCookieName = $.sessionCookieName;
        this.sessionTimeout = $.sessionTimeout;
        this.tokenEndpoint = $.tokenEndpoint;
        this.userInfoEndpoint = $.userInfoEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetListenerDefaultActionAuthenticateOidc defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetListenerDefaultActionAuthenticateOidc $;

        public Builder() {
            $ = new GetListenerDefaultActionAuthenticateOidc();
        }

        public Builder(GetListenerDefaultActionAuthenticateOidc defaults) {
            $ = new GetListenerDefaultActionAuthenticateOidc(Objects.requireNonNull(defaults));
        }

        public Builder authenticationRequestExtraParams(Map<String,String> authenticationRequestExtraParams) {
            $.authenticationRequestExtraParams = authenticationRequestExtraParams;
            return this;
        }

        public Builder authorizationEndpoint(String authorizationEndpoint) {
            $.authorizationEndpoint = authorizationEndpoint;
            return this;
        }

        public Builder clientId(String clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder issuer(String issuer) {
            $.issuer = issuer;
            return this;
        }

        public Builder onUnauthenticatedRequest(String onUnauthenticatedRequest) {
            $.onUnauthenticatedRequest = onUnauthenticatedRequest;
            return this;
        }

        public Builder scope(String scope) {
            $.scope = scope;
            return this;
        }

        public Builder sessionCookieName(String sessionCookieName) {
            $.sessionCookieName = sessionCookieName;
            return this;
        }

        public Builder sessionTimeout(Integer sessionTimeout) {
            $.sessionTimeout = sessionTimeout;
            return this;
        }

        public Builder tokenEndpoint(String tokenEndpoint) {
            $.tokenEndpoint = tokenEndpoint;
            return this;
        }

        public Builder userInfoEndpoint(String userInfoEndpoint) {
            $.userInfoEndpoint = userInfoEndpoint;
            return this;
        }

        public GetListenerDefaultActionAuthenticateOidc build() {
            $.authenticationRequestExtraParams = Objects.requireNonNull($.authenticationRequestExtraParams, "expected parameter 'authenticationRequestExtraParams' to be non-null");
            $.authorizationEndpoint = Objects.requireNonNull($.authorizationEndpoint, "expected parameter 'authorizationEndpoint' to be non-null");
            $.clientId = Objects.requireNonNull($.clientId, "expected parameter 'clientId' to be non-null");
            $.clientSecret = Objects.requireNonNull($.clientSecret, "expected parameter 'clientSecret' to be non-null");
            $.issuer = Objects.requireNonNull($.issuer, "expected parameter 'issuer' to be non-null");
            $.onUnauthenticatedRequest = Objects.requireNonNull($.onUnauthenticatedRequest, "expected parameter 'onUnauthenticatedRequest' to be non-null");
            $.scope = Objects.requireNonNull($.scope, "expected parameter 'scope' to be non-null");
            $.sessionCookieName = Objects.requireNonNull($.sessionCookieName, "expected parameter 'sessionCookieName' to be non-null");
            $.sessionTimeout = Objects.requireNonNull($.sessionTimeout, "expected parameter 'sessionTimeout' to be non-null");
            $.tokenEndpoint = Objects.requireNonNull($.tokenEndpoint, "expected parameter 'tokenEndpoint' to be non-null");
            $.userInfoEndpoint = Objects.requireNonNull($.userInfoEndpoint, "expected parameter 'userInfoEndpoint' to be non-null");
            return $;
        }
    }

}
