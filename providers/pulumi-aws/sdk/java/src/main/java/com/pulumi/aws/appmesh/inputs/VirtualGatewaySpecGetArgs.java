// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecBackendDefaultsGetArgs;
import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecListenerGetArgs;
import com.pulumi.aws.appmesh.inputs.VirtualGatewaySpecLoggingGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualGatewaySpecGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualGatewaySpecGetArgs Empty = new VirtualGatewaySpecGetArgs();

    /**
     * The defaults for backends.
     * 
     */
    @Import(name="backendDefaults")
    private @Nullable Output<VirtualGatewaySpecBackendDefaultsGetArgs> backendDefaults;

    public Optional<Output<VirtualGatewaySpecBackendDefaultsGetArgs>> backendDefaults() {
        return Optional.ofNullable(this.backendDefaults);
    }

    /**
     * The listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
     * 
     */
    @Import(name="listener", required=true)
    private Output<VirtualGatewaySpecListenerGetArgs> listener;

    public Output<VirtualGatewaySpecListenerGetArgs> listener() {
        return this.listener;
    }

    /**
     * The inbound and outbound access logging information for the virtual gateway.
     * 
     */
    @Import(name="logging")
    private @Nullable Output<VirtualGatewaySpecLoggingGetArgs> logging;

    public Optional<Output<VirtualGatewaySpecLoggingGetArgs>> logging() {
        return Optional.ofNullable(this.logging);
    }

    private VirtualGatewaySpecGetArgs() {}

    private VirtualGatewaySpecGetArgs(VirtualGatewaySpecGetArgs $) {
        this.backendDefaults = $.backendDefaults;
        this.listener = $.listener;
        this.logging = $.logging;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualGatewaySpecGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualGatewaySpecGetArgs $;

        public Builder() {
            $ = new VirtualGatewaySpecGetArgs();
        }

        public Builder(VirtualGatewaySpecGetArgs defaults) {
            $ = new VirtualGatewaySpecGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder backendDefaults(@Nullable Output<VirtualGatewaySpecBackendDefaultsGetArgs> backendDefaults) {
            $.backendDefaults = backendDefaults;
            return this;
        }

        public Builder backendDefaults(VirtualGatewaySpecBackendDefaultsGetArgs backendDefaults) {
            return backendDefaults(Output.of(backendDefaults));
        }

        public Builder listener(Output<VirtualGatewaySpecListenerGetArgs> listener) {
            $.listener = listener;
            return this;
        }

        public Builder listener(VirtualGatewaySpecListenerGetArgs listener) {
            return listener(Output.of(listener));
        }

        public Builder logging(@Nullable Output<VirtualGatewaySpecLoggingGetArgs> logging) {
            $.logging = logging;
            return this;
        }

        public Builder logging(VirtualGatewaySpecLoggingGetArgs logging) {
            return logging(Output.of(logging));
        }

        public VirtualGatewaySpecGetArgs build() {
            $.listener = Objects.requireNonNull($.listener, "expected parameter 'listener' to be non-null");
            return $;
        }
    }

}
