// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class WorkforceOidcConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkforceOidcConfigGetArgs Empty = new WorkforceOidcConfigGetArgs();

    /**
     * The OIDC IdP authorization endpoint used to configure your private workforce.
     * 
     */
    @Import(name="authorizationEndpoint", required=true)
    private Output<String> authorizationEndpoint;

    public Output<String> authorizationEndpoint() {
        return this.authorizationEndpoint;
    }

    /**
     * The OIDC IdP client ID used to configure your private workforce.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The OIDC IdP client secret used to configure your private workforce.
     * 
     */
    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    /**
     * The OIDC IdP issuer used to configure your private workforce.
     * 
     */
    @Import(name="issuer", required=true)
    private Output<String> issuer;

    public Output<String> issuer() {
        return this.issuer;
    }

    /**
     * The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
     * 
     */
    @Import(name="jwksUri", required=true)
    private Output<String> jwksUri;

    public Output<String> jwksUri() {
        return this.jwksUri;
    }

    /**
     * The OIDC IdP logout endpoint used to configure your private workforce.
     * 
     */
    @Import(name="logoutEndpoint", required=true)
    private Output<String> logoutEndpoint;

    public Output<String> logoutEndpoint() {
        return this.logoutEndpoint;
    }

    /**
     * The OIDC IdP token endpoint used to configure your private workforce.
     * 
     */
    @Import(name="tokenEndpoint", required=true)
    private Output<String> tokenEndpoint;

    public Output<String> tokenEndpoint() {
        return this.tokenEndpoint;
    }

    /**
     * The OIDC IdP user information endpoint used to configure your private workforce.
     * 
     */
    @Import(name="userInfoEndpoint", required=true)
    private Output<String> userInfoEndpoint;

    public Output<String> userInfoEndpoint() {
        return this.userInfoEndpoint;
    }

    private WorkforceOidcConfigGetArgs() {}

    private WorkforceOidcConfigGetArgs(WorkforceOidcConfigGetArgs $) {
        this.authorizationEndpoint = $.authorizationEndpoint;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.issuer = $.issuer;
        this.jwksUri = $.jwksUri;
        this.logoutEndpoint = $.logoutEndpoint;
        this.tokenEndpoint = $.tokenEndpoint;
        this.userInfoEndpoint = $.userInfoEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkforceOidcConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkforceOidcConfigGetArgs $;

        public Builder() {
            $ = new WorkforceOidcConfigGetArgs();
        }

        public Builder(WorkforceOidcConfigGetArgs defaults) {
            $ = new WorkforceOidcConfigGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizationEndpoint(Output<String> authorizationEndpoint) {
            $.authorizationEndpoint = authorizationEndpoint;
            return this;
        }

        public Builder authorizationEndpoint(String authorizationEndpoint) {
            return authorizationEndpoint(Output.of(authorizationEndpoint));
        }

        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public Builder issuer(Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        public Builder jwksUri(Output<String> jwksUri) {
            $.jwksUri = jwksUri;
            return this;
        }

        public Builder jwksUri(String jwksUri) {
            return jwksUri(Output.of(jwksUri));
        }

        public Builder logoutEndpoint(Output<String> logoutEndpoint) {
            $.logoutEndpoint = logoutEndpoint;
            return this;
        }

        public Builder logoutEndpoint(String logoutEndpoint) {
            return logoutEndpoint(Output.of(logoutEndpoint));
        }

        public Builder tokenEndpoint(Output<String> tokenEndpoint) {
            $.tokenEndpoint = tokenEndpoint;
            return this;
        }

        public Builder tokenEndpoint(String tokenEndpoint) {
            return tokenEndpoint(Output.of(tokenEndpoint));
        }

        public Builder userInfoEndpoint(Output<String> userInfoEndpoint) {
            $.userInfoEndpoint = userInfoEndpoint;
            return this;
        }

        public Builder userInfoEndpoint(String userInfoEndpoint) {
            return userInfoEndpoint(Output.of(userInfoEndpoint));
        }

        public WorkforceOidcConfigGetArgs build() {
            $.authorizationEndpoint = Objects.requireNonNull($.authorizationEndpoint, "expected parameter 'authorizationEndpoint' to be non-null");
            $.clientId = Objects.requireNonNull($.clientId, "expected parameter 'clientId' to be non-null");
            $.clientSecret = Objects.requireNonNull($.clientSecret, "expected parameter 'clientSecret' to be non-null");
            $.issuer = Objects.requireNonNull($.issuer, "expected parameter 'issuer' to be non-null");
            $.jwksUri = Objects.requireNonNull($.jwksUri, "expected parameter 'jwksUri' to be non-null");
            $.logoutEndpoint = Objects.requireNonNull($.logoutEndpoint, "expected parameter 'logoutEndpoint' to be non-null");
            $.tokenEndpoint = Objects.requireNonNull($.tokenEndpoint, "expected parameter 'tokenEndpoint' to be non-null");
            $.userInfoEndpoint = Objects.requireNonNull($.userInfoEndpoint, "expected parameter 'userInfoEndpoint' to be non-null");
            return $;
        }
    }

}
