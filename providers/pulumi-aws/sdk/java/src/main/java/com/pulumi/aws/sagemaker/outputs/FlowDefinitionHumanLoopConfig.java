// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sagemaker.outputs;

import com.pulumi.aws.sagemaker.outputs.FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlowDefinitionHumanLoopConfig {
    /**
     * @return The Amazon Resource Name (ARN) of the human task user interface.
     * 
     */
    private final String humanTaskUiArn;
    /**
     * @return Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. See Public Workforce Task Price details below.
     * 
     */
    private final @Nullable FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice publicWorkforceTaskPrice;
    /**
     * @return The length of time that a task remains available for review by human workers. Valid value range between `1` and `864000`.
     * 
     */
    private final @Nullable Integer taskAvailabilityLifetimeInSeconds;
    /**
     * @return The number of distinct workers who will perform the same task on each object. Valid value range between `1` and `3`.
     * 
     */
    private final Integer taskCount;
    /**
     * @return A description for the human worker task.
     * 
     */
    private final String taskDescription;
    /**
     * @return An array of keywords used to describe the task so that workers can discover the task.
     * 
     */
    private final @Nullable List<String> taskKeywords;
    /**
     * @return The amount of time that a worker has to complete a task. The default value is `3600` seconds.
     * 
     */
    private final @Nullable Integer taskTimeLimitInSeconds;
    /**
     * @return A title for the human worker task.
     * 
     */
    private final String taskTitle;
    /**
     * @return The Amazon Resource Name (ARN) of the human task user interface. Amazon Resource Name (ARN) of a team of workers. For Public workforces see [AWS Docs](https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-management-public.html).
     * 
     */
    private final String workteamArn;

    @CustomType.Constructor
    private FlowDefinitionHumanLoopConfig(
        @CustomType.Parameter("humanTaskUiArn") String humanTaskUiArn,
        @CustomType.Parameter("publicWorkforceTaskPrice") @Nullable FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice publicWorkforceTaskPrice,
        @CustomType.Parameter("taskAvailabilityLifetimeInSeconds") @Nullable Integer taskAvailabilityLifetimeInSeconds,
        @CustomType.Parameter("taskCount") Integer taskCount,
        @CustomType.Parameter("taskDescription") String taskDescription,
        @CustomType.Parameter("taskKeywords") @Nullable List<String> taskKeywords,
        @CustomType.Parameter("taskTimeLimitInSeconds") @Nullable Integer taskTimeLimitInSeconds,
        @CustomType.Parameter("taskTitle") String taskTitle,
        @CustomType.Parameter("workteamArn") String workteamArn) {
        this.humanTaskUiArn = humanTaskUiArn;
        this.publicWorkforceTaskPrice = publicWorkforceTaskPrice;
        this.taskAvailabilityLifetimeInSeconds = taskAvailabilityLifetimeInSeconds;
        this.taskCount = taskCount;
        this.taskDescription = taskDescription;
        this.taskKeywords = taskKeywords;
        this.taskTimeLimitInSeconds = taskTimeLimitInSeconds;
        this.taskTitle = taskTitle;
        this.workteamArn = workteamArn;
    }

    /**
     * @return The Amazon Resource Name (ARN) of the human task user interface.
     * 
     */
    public String humanTaskUiArn() {
        return this.humanTaskUiArn;
    }
    /**
     * @return Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. See Public Workforce Task Price details below.
     * 
     */
    public Optional<FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice> publicWorkforceTaskPrice() {
        return Optional.ofNullable(this.publicWorkforceTaskPrice);
    }
    /**
     * @return The length of time that a task remains available for review by human workers. Valid value range between `1` and `864000`.
     * 
     */
    public Optional<Integer> taskAvailabilityLifetimeInSeconds() {
        return Optional.ofNullable(this.taskAvailabilityLifetimeInSeconds);
    }
    /**
     * @return The number of distinct workers who will perform the same task on each object. Valid value range between `1` and `3`.
     * 
     */
    public Integer taskCount() {
        return this.taskCount;
    }
    /**
     * @return A description for the human worker task.
     * 
     */
    public String taskDescription() {
        return this.taskDescription;
    }
    /**
     * @return An array of keywords used to describe the task so that workers can discover the task.
     * 
     */
    public List<String> taskKeywords() {
        return this.taskKeywords == null ? List.of() : this.taskKeywords;
    }
    /**
     * @return The amount of time that a worker has to complete a task. The default value is `3600` seconds.
     * 
     */
    public Optional<Integer> taskTimeLimitInSeconds() {
        return Optional.ofNullable(this.taskTimeLimitInSeconds);
    }
    /**
     * @return A title for the human worker task.
     * 
     */
    public String taskTitle() {
        return this.taskTitle;
    }
    /**
     * @return The Amazon Resource Name (ARN) of the human task user interface. Amazon Resource Name (ARN) of a team of workers. For Public workforces see [AWS Docs](https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-management-public.html).
     * 
     */
    public String workteamArn() {
        return this.workteamArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlowDefinitionHumanLoopConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String humanTaskUiArn;
        private @Nullable FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice publicWorkforceTaskPrice;
        private @Nullable Integer taskAvailabilityLifetimeInSeconds;
        private Integer taskCount;
        private String taskDescription;
        private @Nullable List<String> taskKeywords;
        private @Nullable Integer taskTimeLimitInSeconds;
        private String taskTitle;
        private String workteamArn;

        public Builder() {
    	      // Empty
        }

        public Builder(FlowDefinitionHumanLoopConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.humanTaskUiArn = defaults.humanTaskUiArn;
    	      this.publicWorkforceTaskPrice = defaults.publicWorkforceTaskPrice;
    	      this.taskAvailabilityLifetimeInSeconds = defaults.taskAvailabilityLifetimeInSeconds;
    	      this.taskCount = defaults.taskCount;
    	      this.taskDescription = defaults.taskDescription;
    	      this.taskKeywords = defaults.taskKeywords;
    	      this.taskTimeLimitInSeconds = defaults.taskTimeLimitInSeconds;
    	      this.taskTitle = defaults.taskTitle;
    	      this.workteamArn = defaults.workteamArn;
        }

        public Builder humanTaskUiArn(String humanTaskUiArn) {
            this.humanTaskUiArn = Objects.requireNonNull(humanTaskUiArn);
            return this;
        }
        public Builder publicWorkforceTaskPrice(@Nullable FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice publicWorkforceTaskPrice) {
            this.publicWorkforceTaskPrice = publicWorkforceTaskPrice;
            return this;
        }
        public Builder taskAvailabilityLifetimeInSeconds(@Nullable Integer taskAvailabilityLifetimeInSeconds) {
            this.taskAvailabilityLifetimeInSeconds = taskAvailabilityLifetimeInSeconds;
            return this;
        }
        public Builder taskCount(Integer taskCount) {
            this.taskCount = Objects.requireNonNull(taskCount);
            return this;
        }
        public Builder taskDescription(String taskDescription) {
            this.taskDescription = Objects.requireNonNull(taskDescription);
            return this;
        }
        public Builder taskKeywords(@Nullable List<String> taskKeywords) {
            this.taskKeywords = taskKeywords;
            return this;
        }
        public Builder taskKeywords(String... taskKeywords) {
            return taskKeywords(List.of(taskKeywords));
        }
        public Builder taskTimeLimitInSeconds(@Nullable Integer taskTimeLimitInSeconds) {
            this.taskTimeLimitInSeconds = taskTimeLimitInSeconds;
            return this;
        }
        public Builder taskTitle(String taskTitle) {
            this.taskTitle = Objects.requireNonNull(taskTitle);
            return this;
        }
        public Builder workteamArn(String workteamArn) {
            this.workteamArn = Objects.requireNonNull(workteamArn);
            return this;
        }        public FlowDefinitionHumanLoopConfig build() {
            return new FlowDefinitionHumanLoopConfig(humanTaskUiArn, publicWorkforceTaskPrice, taskAvailabilityLifetimeInSeconds, taskCount, taskDescription, taskKeywords, taskTimeLimitInSeconds, taskTitle, workteamArn);
        }
    }
}
