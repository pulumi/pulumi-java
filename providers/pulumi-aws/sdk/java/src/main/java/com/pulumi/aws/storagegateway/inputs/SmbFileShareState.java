// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.storagegateway.inputs;

import com.pulumi.aws.storagegateway.inputs.SmbFileShareCacheAttributesGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SmbFileShareState extends com.pulumi.resources.ResourceArgs {

    public static final SmbFileShareState Empty = new SmbFileShareState();

    /**
     * The files and folders on this share will only be visible to users with read access. Default value is `false`.
     * 
     */
    @Import(name="accessBasedEnumeration")
      private final @Nullable Output<Boolean> accessBasedEnumeration;

    public Output<Boolean> accessBasedEnumeration() {
        return this.accessBasedEnumeration == null ? Codegen.empty() : this.accessBasedEnumeration;
    }

    /**
     * A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    @Import(name="adminUserLists")
      private final @Nullable Output<List<String>> adminUserLists;

    public Output<List<String>> adminUserLists() {
        return this.adminUserLists == null ? Codegen.empty() : this.adminUserLists;
    }

    /**
     * Amazon Resource Name (ARN) of the SMB File Share.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
     * 
     */
    @Import(name="auditDestinationArn")
      private final @Nullable Output<String> auditDestinationArn;

    public Output<String> auditDestinationArn() {
        return this.auditDestinationArn == null ? Codegen.empty() : this.auditDestinationArn;
    }

    /**
     * The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
     * 
     */
    @Import(name="authentication")
      private final @Nullable Output<String> authentication;

    public Output<String> authentication() {
        return this.authentication == null ? Codegen.empty() : this.authentication;
    }

    /**
     * The region of the S3 buck used by the file share. Required when specifying a `vpc_endpoint_dns_name`.
     * 
     */
    @Import(name="bucketRegion")
      private final @Nullable Output<String> bucketRegion;

    public Output<String> bucketRegion() {
        return this.bucketRegion == null ? Codegen.empty() : this.bucketRegion;
    }

    /**
     * Refresh cache information. see Cache Attributes for more details.
     * 
     */
    @Import(name="cacheAttributes")
      private final @Nullable Output<SmbFileShareCacheAttributesGetArgs> cacheAttributes;

    public Output<SmbFileShareCacheAttributesGetArgs> cacheAttributes() {
        return this.cacheAttributes == null ? Codegen.empty() : this.cacheAttributes;
    }

    /**
     * The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
     * 
     */
    @Import(name="caseSensitivity")
      private final @Nullable Output<String> caseSensitivity;

    public Output<String> caseSensitivity() {
        return this.caseSensitivity == null ? Codegen.empty() : this.caseSensitivity;
    }

    /**
     * The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     * 
     */
    @Import(name="defaultStorageClass")
      private final @Nullable Output<String> defaultStorageClass;

    public Output<String> defaultStorageClass() {
        return this.defaultStorageClass == null ? Codegen.empty() : this.defaultStorageClass;
    }

    /**
     * The name of the file share. Must be set if an S3 prefix name is set in `location_arn`.
     * 
     */
    @Import(name="fileShareName")
      private final @Nullable Output<String> fileShareName;

    public Output<String> fileShareName() {
        return this.fileShareName == null ? Codegen.empty() : this.fileShareName;
    }

    /**
     * ID of the SMB File Share.
     * 
     */
    @Import(name="fileshareId")
      private final @Nullable Output<String> fileshareId;

    public Output<String> fileshareId() {
        return this.fileshareId == null ? Codegen.empty() : this.fileshareId;
    }

    /**
     * Amazon Resource Name (ARN) of the file gateway.
     * 
     */
    @Import(name="gatewayArn")
      private final @Nullable Output<String> gatewayArn;

    public Output<String> gatewayArn() {
        return this.gatewayArn == null ? Codegen.empty() : this.gatewayArn;
    }

    /**
     * Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     * 
     */
    @Import(name="guessMimeTypeEnabled")
      private final @Nullable Output<Boolean> guessMimeTypeEnabled;

    public Output<Boolean> guessMimeTypeEnabled() {
        return this.guessMimeTypeEnabled == null ? Codegen.empty() : this.guessMimeTypeEnabled;
    }

    /**
     * A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    @Import(name="invalidUserLists")
      private final @Nullable Output<List<String>> invalidUserLists;

    public Output<List<String>> invalidUserLists() {
        return this.invalidUserLists == null ? Codegen.empty() : this.invalidUserLists;
    }

    /**
     * Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     * 
     */
    @Import(name="kmsEncrypted")
      private final @Nullable Output<Boolean> kmsEncrypted;

    public Output<Boolean> kmsEncrypted() {
        return this.kmsEncrypted == null ? Codegen.empty() : this.kmsEncrypted;
    }

    /**
     * Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kms_encrypted` is true.
     * 
     */
    @Import(name="kmsKeyArn")
      private final @Nullable Output<String> kmsKeyArn;

    public Output<String> kmsKeyArn() {
        return this.kmsKeyArn == null ? Codegen.empty() : this.kmsKeyArn;
    }

    /**
     * The ARN of the backed storage used for storing file data.
     * 
     */
    @Import(name="locationArn")
      private final @Nullable Output<String> locationArn;

    public Output<String> locationArn() {
        return this.locationArn == null ? Codegen.empty() : this.locationArn;
    }

    /**
     * The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     * 
     */
    @Import(name="notificationPolicy")
      private final @Nullable Output<String> notificationPolicy;

    public Output<String> notificationPolicy() {
        return this.notificationPolicy == null ? Codegen.empty() : this.notificationPolicy;
    }

    /**
     * Access Control List permission for S3 bucket objects. Defaults to `private`.
     * 
     */
    @Import(name="objectAcl")
      private final @Nullable Output<String> objectAcl;

    public Output<String> objectAcl() {
        return this.objectAcl == null ? Codegen.empty() : this.objectAcl;
    }

    /**
     * Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
     * 
     */
    @Import(name="oplocksEnabled")
      private final @Nullable Output<Boolean> oplocksEnabled;

    public Output<Boolean> oplocksEnabled() {
        return this.oplocksEnabled == null ? Codegen.empty() : this.oplocksEnabled;
    }

    /**
     * File share path used by the NFS client to identify the mount point.
     * 
     */
    @Import(name="path")
      private final @Nullable Output<String> path;

    public Output<String> path() {
        return this.path == null ? Codegen.empty() : this.path;
    }

    /**
     * Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     * 
     */
    @Import(name="readOnly")
      private final @Nullable Output<Boolean> readOnly;

    public Output<Boolean> readOnly() {
        return this.readOnly == null ? Codegen.empty() : this.readOnly;
    }

    /**
     * Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     * 
     */
    @Import(name="requesterPays")
      private final @Nullable Output<Boolean> requesterPays;

    public Output<Boolean> requesterPays() {
        return this.requesterPays == null ? Codegen.empty() : this.requesterPays;
    }

    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     * 
     */
    @Import(name="roleArn")
      private final @Nullable Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn == null ? Codegen.empty() : this.roleArn;
    }

    /**
     * Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
     * 
     */
    @Import(name="smbAclEnabled")
      private final @Nullable Output<Boolean> smbAclEnabled;

    public Output<Boolean> smbAclEnabled() {
        return this.smbAclEnabled == null ? Codegen.empty() : this.smbAclEnabled;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add &#39;@&#39; before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    @Import(name="validUserLists")
      private final @Nullable Output<List<String>> validUserLists;

    public Output<List<String>> validUserLists() {
        return this.validUserLists == null ? Codegen.empty() : this.validUserLists;
    }

    /**
     * The DNS name of the VPC endpoint for S3 private link.
     * 
     */
    @Import(name="vpcEndpointDnsName")
      private final @Nullable Output<String> vpcEndpointDnsName;

    public Output<String> vpcEndpointDnsName() {
        return this.vpcEndpointDnsName == null ? Codegen.empty() : this.vpcEndpointDnsName;
    }

    public SmbFileShareState(
        @Nullable Output<Boolean> accessBasedEnumeration,
        @Nullable Output<List<String>> adminUserLists,
        @Nullable Output<String> arn,
        @Nullable Output<String> auditDestinationArn,
        @Nullable Output<String> authentication,
        @Nullable Output<String> bucketRegion,
        @Nullable Output<SmbFileShareCacheAttributesGetArgs> cacheAttributes,
        @Nullable Output<String> caseSensitivity,
        @Nullable Output<String> defaultStorageClass,
        @Nullable Output<String> fileShareName,
        @Nullable Output<String> fileshareId,
        @Nullable Output<String> gatewayArn,
        @Nullable Output<Boolean> guessMimeTypeEnabled,
        @Nullable Output<List<String>> invalidUserLists,
        @Nullable Output<Boolean> kmsEncrypted,
        @Nullable Output<String> kmsKeyArn,
        @Nullable Output<String> locationArn,
        @Nullable Output<String> notificationPolicy,
        @Nullable Output<String> objectAcl,
        @Nullable Output<Boolean> oplocksEnabled,
        @Nullable Output<String> path,
        @Nullable Output<Boolean> readOnly,
        @Nullable Output<Boolean> requesterPays,
        @Nullable Output<String> roleArn,
        @Nullable Output<Boolean> smbAclEnabled,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<List<String>> validUserLists,
        @Nullable Output<String> vpcEndpointDnsName) {
        this.accessBasedEnumeration = accessBasedEnumeration;
        this.adminUserLists = adminUserLists;
        this.arn = arn;
        this.auditDestinationArn = auditDestinationArn;
        this.authentication = authentication;
        this.bucketRegion = bucketRegion;
        this.cacheAttributes = cacheAttributes;
        this.caseSensitivity = caseSensitivity;
        this.defaultStorageClass = defaultStorageClass;
        this.fileShareName = fileShareName;
        this.fileshareId = fileshareId;
        this.gatewayArn = gatewayArn;
        this.guessMimeTypeEnabled = guessMimeTypeEnabled;
        this.invalidUserLists = invalidUserLists;
        this.kmsEncrypted = kmsEncrypted;
        this.kmsKeyArn = kmsKeyArn;
        this.locationArn = locationArn;
        this.notificationPolicy = notificationPolicy;
        this.objectAcl = objectAcl;
        this.oplocksEnabled = oplocksEnabled;
        this.path = path;
        this.readOnly = readOnly;
        this.requesterPays = requesterPays;
        this.roleArn = roleArn;
        this.smbAclEnabled = smbAclEnabled;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.validUserLists = validUserLists;
        this.vpcEndpointDnsName = vpcEndpointDnsName;
    }

    private SmbFileShareState() {
        this.accessBasedEnumeration = Codegen.empty();
        this.adminUserLists = Codegen.empty();
        this.arn = Codegen.empty();
        this.auditDestinationArn = Codegen.empty();
        this.authentication = Codegen.empty();
        this.bucketRegion = Codegen.empty();
        this.cacheAttributes = Codegen.empty();
        this.caseSensitivity = Codegen.empty();
        this.defaultStorageClass = Codegen.empty();
        this.fileShareName = Codegen.empty();
        this.fileshareId = Codegen.empty();
        this.gatewayArn = Codegen.empty();
        this.guessMimeTypeEnabled = Codegen.empty();
        this.invalidUserLists = Codegen.empty();
        this.kmsEncrypted = Codegen.empty();
        this.kmsKeyArn = Codegen.empty();
        this.locationArn = Codegen.empty();
        this.notificationPolicy = Codegen.empty();
        this.objectAcl = Codegen.empty();
        this.oplocksEnabled = Codegen.empty();
        this.path = Codegen.empty();
        this.readOnly = Codegen.empty();
        this.requesterPays = Codegen.empty();
        this.roleArn = Codegen.empty();
        this.smbAclEnabled = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.validUserLists = Codegen.empty();
        this.vpcEndpointDnsName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SmbFileShareState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> accessBasedEnumeration;
        private @Nullable Output<List<String>> adminUserLists;
        private @Nullable Output<String> arn;
        private @Nullable Output<String> auditDestinationArn;
        private @Nullable Output<String> authentication;
        private @Nullable Output<String> bucketRegion;
        private @Nullable Output<SmbFileShareCacheAttributesGetArgs> cacheAttributes;
        private @Nullable Output<String> caseSensitivity;
        private @Nullable Output<String> defaultStorageClass;
        private @Nullable Output<String> fileShareName;
        private @Nullable Output<String> fileshareId;
        private @Nullable Output<String> gatewayArn;
        private @Nullable Output<Boolean> guessMimeTypeEnabled;
        private @Nullable Output<List<String>> invalidUserLists;
        private @Nullable Output<Boolean> kmsEncrypted;
        private @Nullable Output<String> kmsKeyArn;
        private @Nullable Output<String> locationArn;
        private @Nullable Output<String> notificationPolicy;
        private @Nullable Output<String> objectAcl;
        private @Nullable Output<Boolean> oplocksEnabled;
        private @Nullable Output<String> path;
        private @Nullable Output<Boolean> readOnly;
        private @Nullable Output<Boolean> requesterPays;
        private @Nullable Output<String> roleArn;
        private @Nullable Output<Boolean> smbAclEnabled;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<List<String>> validUserLists;
        private @Nullable Output<String> vpcEndpointDnsName;

        public Builder() {
    	      // Empty
        }

        public Builder(SmbFileShareState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessBasedEnumeration = defaults.accessBasedEnumeration;
    	      this.adminUserLists = defaults.adminUserLists;
    	      this.arn = defaults.arn;
    	      this.auditDestinationArn = defaults.auditDestinationArn;
    	      this.authentication = defaults.authentication;
    	      this.bucketRegion = defaults.bucketRegion;
    	      this.cacheAttributes = defaults.cacheAttributes;
    	      this.caseSensitivity = defaults.caseSensitivity;
    	      this.defaultStorageClass = defaults.defaultStorageClass;
    	      this.fileShareName = defaults.fileShareName;
    	      this.fileshareId = defaults.fileshareId;
    	      this.gatewayArn = defaults.gatewayArn;
    	      this.guessMimeTypeEnabled = defaults.guessMimeTypeEnabled;
    	      this.invalidUserLists = defaults.invalidUserLists;
    	      this.kmsEncrypted = defaults.kmsEncrypted;
    	      this.kmsKeyArn = defaults.kmsKeyArn;
    	      this.locationArn = defaults.locationArn;
    	      this.notificationPolicy = defaults.notificationPolicy;
    	      this.objectAcl = defaults.objectAcl;
    	      this.oplocksEnabled = defaults.oplocksEnabled;
    	      this.path = defaults.path;
    	      this.readOnly = defaults.readOnly;
    	      this.requesterPays = defaults.requesterPays;
    	      this.roleArn = defaults.roleArn;
    	      this.smbAclEnabled = defaults.smbAclEnabled;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.validUserLists = defaults.validUserLists;
    	      this.vpcEndpointDnsName = defaults.vpcEndpointDnsName;
        }

        public Builder accessBasedEnumeration(@Nullable Output<Boolean> accessBasedEnumeration) {
            this.accessBasedEnumeration = accessBasedEnumeration;
            return this;
        }
        public Builder accessBasedEnumeration(@Nullable Boolean accessBasedEnumeration) {
            this.accessBasedEnumeration = Codegen.ofNullable(accessBasedEnumeration);
            return this;
        }
        public Builder adminUserLists(@Nullable Output<List<String>> adminUserLists) {
            this.adminUserLists = adminUserLists;
            return this;
        }
        public Builder adminUserLists(@Nullable List<String> adminUserLists) {
            this.adminUserLists = Codegen.ofNullable(adminUserLists);
            return this;
        }
        public Builder adminUserLists(String... adminUserLists) {
            return adminUserLists(List.of(adminUserLists));
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder auditDestinationArn(@Nullable Output<String> auditDestinationArn) {
            this.auditDestinationArn = auditDestinationArn;
            return this;
        }
        public Builder auditDestinationArn(@Nullable String auditDestinationArn) {
            this.auditDestinationArn = Codegen.ofNullable(auditDestinationArn);
            return this;
        }
        public Builder authentication(@Nullable Output<String> authentication) {
            this.authentication = authentication;
            return this;
        }
        public Builder authentication(@Nullable String authentication) {
            this.authentication = Codegen.ofNullable(authentication);
            return this;
        }
        public Builder bucketRegion(@Nullable Output<String> bucketRegion) {
            this.bucketRegion = bucketRegion;
            return this;
        }
        public Builder bucketRegion(@Nullable String bucketRegion) {
            this.bucketRegion = Codegen.ofNullable(bucketRegion);
            return this;
        }
        public Builder cacheAttributes(@Nullable Output<SmbFileShareCacheAttributesGetArgs> cacheAttributes) {
            this.cacheAttributes = cacheAttributes;
            return this;
        }
        public Builder cacheAttributes(@Nullable SmbFileShareCacheAttributesGetArgs cacheAttributes) {
            this.cacheAttributes = Codegen.ofNullable(cacheAttributes);
            return this;
        }
        public Builder caseSensitivity(@Nullable Output<String> caseSensitivity) {
            this.caseSensitivity = caseSensitivity;
            return this;
        }
        public Builder caseSensitivity(@Nullable String caseSensitivity) {
            this.caseSensitivity = Codegen.ofNullable(caseSensitivity);
            return this;
        }
        public Builder defaultStorageClass(@Nullable Output<String> defaultStorageClass) {
            this.defaultStorageClass = defaultStorageClass;
            return this;
        }
        public Builder defaultStorageClass(@Nullable String defaultStorageClass) {
            this.defaultStorageClass = Codegen.ofNullable(defaultStorageClass);
            return this;
        }
        public Builder fileShareName(@Nullable Output<String> fileShareName) {
            this.fileShareName = fileShareName;
            return this;
        }
        public Builder fileShareName(@Nullable String fileShareName) {
            this.fileShareName = Codegen.ofNullable(fileShareName);
            return this;
        }
        public Builder fileshareId(@Nullable Output<String> fileshareId) {
            this.fileshareId = fileshareId;
            return this;
        }
        public Builder fileshareId(@Nullable String fileshareId) {
            this.fileshareId = Codegen.ofNullable(fileshareId);
            return this;
        }
        public Builder gatewayArn(@Nullable Output<String> gatewayArn) {
            this.gatewayArn = gatewayArn;
            return this;
        }
        public Builder gatewayArn(@Nullable String gatewayArn) {
            this.gatewayArn = Codegen.ofNullable(gatewayArn);
            return this;
        }
        public Builder guessMimeTypeEnabled(@Nullable Output<Boolean> guessMimeTypeEnabled) {
            this.guessMimeTypeEnabled = guessMimeTypeEnabled;
            return this;
        }
        public Builder guessMimeTypeEnabled(@Nullable Boolean guessMimeTypeEnabled) {
            this.guessMimeTypeEnabled = Codegen.ofNullable(guessMimeTypeEnabled);
            return this;
        }
        public Builder invalidUserLists(@Nullable Output<List<String>> invalidUserLists) {
            this.invalidUserLists = invalidUserLists;
            return this;
        }
        public Builder invalidUserLists(@Nullable List<String> invalidUserLists) {
            this.invalidUserLists = Codegen.ofNullable(invalidUserLists);
            return this;
        }
        public Builder invalidUserLists(String... invalidUserLists) {
            return invalidUserLists(List.of(invalidUserLists));
        }
        public Builder kmsEncrypted(@Nullable Output<Boolean> kmsEncrypted) {
            this.kmsEncrypted = kmsEncrypted;
            return this;
        }
        public Builder kmsEncrypted(@Nullable Boolean kmsEncrypted) {
            this.kmsEncrypted = Codegen.ofNullable(kmsEncrypted);
            return this;
        }
        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            this.kmsKeyArn = kmsKeyArn;
            return this;
        }
        public Builder kmsKeyArn(@Nullable String kmsKeyArn) {
            this.kmsKeyArn = Codegen.ofNullable(kmsKeyArn);
            return this;
        }
        public Builder locationArn(@Nullable Output<String> locationArn) {
            this.locationArn = locationArn;
            return this;
        }
        public Builder locationArn(@Nullable String locationArn) {
            this.locationArn = Codegen.ofNullable(locationArn);
            return this;
        }
        public Builder notificationPolicy(@Nullable Output<String> notificationPolicy) {
            this.notificationPolicy = notificationPolicy;
            return this;
        }
        public Builder notificationPolicy(@Nullable String notificationPolicy) {
            this.notificationPolicy = Codegen.ofNullable(notificationPolicy);
            return this;
        }
        public Builder objectAcl(@Nullable Output<String> objectAcl) {
            this.objectAcl = objectAcl;
            return this;
        }
        public Builder objectAcl(@Nullable String objectAcl) {
            this.objectAcl = Codegen.ofNullable(objectAcl);
            return this;
        }
        public Builder oplocksEnabled(@Nullable Output<Boolean> oplocksEnabled) {
            this.oplocksEnabled = oplocksEnabled;
            return this;
        }
        public Builder oplocksEnabled(@Nullable Boolean oplocksEnabled) {
            this.oplocksEnabled = Codegen.ofNullable(oplocksEnabled);
            return this;
        }
        public Builder path(@Nullable Output<String> path) {
            this.path = path;
            return this;
        }
        public Builder path(@Nullable String path) {
            this.path = Codegen.ofNullable(path);
            return this;
        }
        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            this.readOnly = readOnly;
            return this;
        }
        public Builder readOnly(@Nullable Boolean readOnly) {
            this.readOnly = Codegen.ofNullable(readOnly);
            return this;
        }
        public Builder requesterPays(@Nullable Output<Boolean> requesterPays) {
            this.requesterPays = requesterPays;
            return this;
        }
        public Builder requesterPays(@Nullable Boolean requesterPays) {
            this.requesterPays = Codegen.ofNullable(requesterPays);
            return this;
        }
        public Builder roleArn(@Nullable Output<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = Codegen.ofNullable(roleArn);
            return this;
        }
        public Builder smbAclEnabled(@Nullable Output<Boolean> smbAclEnabled) {
            this.smbAclEnabled = smbAclEnabled;
            return this;
        }
        public Builder smbAclEnabled(@Nullable Boolean smbAclEnabled) {
            this.smbAclEnabled = Codegen.ofNullable(smbAclEnabled);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder validUserLists(@Nullable Output<List<String>> validUserLists) {
            this.validUserLists = validUserLists;
            return this;
        }
        public Builder validUserLists(@Nullable List<String> validUserLists) {
            this.validUserLists = Codegen.ofNullable(validUserLists);
            return this;
        }
        public Builder validUserLists(String... validUserLists) {
            return validUserLists(List.of(validUserLists));
        }
        public Builder vpcEndpointDnsName(@Nullable Output<String> vpcEndpointDnsName) {
            this.vpcEndpointDnsName = vpcEndpointDnsName;
            return this;
        }
        public Builder vpcEndpointDnsName(@Nullable String vpcEndpointDnsName) {
            this.vpcEndpointDnsName = Codegen.ofNullable(vpcEndpointDnsName);
            return this;
        }        public SmbFileShareState build() {
            return new SmbFileShareState(accessBasedEnumeration, adminUserLists, arn, auditDestinationArn, authentication, bucketRegion, cacheAttributes, caseSensitivity, defaultStorageClass, fileShareName, fileshareId, gatewayArn, guessMimeTypeEnabled, invalidUserLists, kmsEncrypted, kmsKeyArn, locationArn, notificationPolicy, objectAcl, oplocksEnabled, path, readOnly, requesterPays, roleArn, smbAclEnabled, tags, tagsAll, validUserLists, vpcEndpointDnsName);
        }
    }
}
