// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.VirtualNodeSpecListenerTimeoutTcpIdleGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualNodeSpecListenerTimeoutTcpGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNodeSpecListenerTimeoutTcpGetArgs Empty = new VirtualNodeSpecListenerTimeoutTcpGetArgs();

    /**
     * The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
     * 
     */
    @Import(name="idle")
    private @Nullable Output<VirtualNodeSpecListenerTimeoutTcpIdleGetArgs> idle;

    /**
     * @return The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
     * 
     */
    public Optional<Output<VirtualNodeSpecListenerTimeoutTcpIdleGetArgs>> idle() {
        return Optional.ofNullable(this.idle);
    }

    private VirtualNodeSpecListenerTimeoutTcpGetArgs() {}

    private VirtualNodeSpecListenerTimeoutTcpGetArgs(VirtualNodeSpecListenerTimeoutTcpGetArgs $) {
        this.idle = $.idle;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNodeSpecListenerTimeoutTcpGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNodeSpecListenerTimeoutTcpGetArgs $;

        public Builder() {
            $ = new VirtualNodeSpecListenerTimeoutTcpGetArgs();
        }

        public Builder(VirtualNodeSpecListenerTimeoutTcpGetArgs defaults) {
            $ = new VirtualNodeSpecListenerTimeoutTcpGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param idle The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
         * 
         * @return builder
         * 
         */
        public Builder idle(@Nullable Output<VirtualNodeSpecListenerTimeoutTcpIdleGetArgs> idle) {
            $.idle = idle;
            return this;
        }

        /**
         * @param idle The idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
         * 
         * @return builder
         * 
         */
        public Builder idle(VirtualNodeSpecListenerTimeoutTcpIdleGetArgs idle) {
            return idle(Output.of(idle));
        }

        public VirtualNodeSpecListenerTimeoutTcpGetArgs build() {
            return $;
        }
    }

}
