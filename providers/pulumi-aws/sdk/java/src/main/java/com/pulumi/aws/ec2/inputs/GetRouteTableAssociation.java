// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GetRouteTableAssociation extends com.pulumi.resources.InvokeArgs {

    public static final GetRouteTableAssociation Empty = new GetRouteTableAssociation();

    /**
     * ID of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
     * 
     */
    @Import(name="gatewayId", required=true)
    private String gatewayId;

    public String gatewayId() {
        return this.gatewayId;
    }

    /**
     * Whether the association is due to the main route table.
     * 
     */
    @Import(name="main", required=true)
    private Boolean main;

    public Boolean main() {
        return this.main;
    }

    /**
     * Association ID.
     * 
     */
    @Import(name="routeTableAssociationId", required=true)
    private String routeTableAssociationId;

    public String routeTableAssociationId() {
        return this.routeTableAssociationId;
    }

    /**
     * ID of the specific Route Table to retrieve.
     * 
     */
    @Import(name="routeTableId", required=true)
    private String routeTableId;

    public String routeTableId() {
        return this.routeTableId;
    }

    /**
     * ID of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
     * 
     */
    @Import(name="subnetId", required=true)
    private String subnetId;

    public String subnetId() {
        return this.subnetId;
    }

    private GetRouteTableAssociation() {}

    private GetRouteTableAssociation(GetRouteTableAssociation $) {
        this.gatewayId = $.gatewayId;
        this.main = $.main;
        this.routeTableAssociationId = $.routeTableAssociationId;
        this.routeTableId = $.routeTableId;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRouteTableAssociation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRouteTableAssociation $;

        public Builder() {
            $ = new GetRouteTableAssociation();
        }

        public Builder(GetRouteTableAssociation defaults) {
            $ = new GetRouteTableAssociation(Objects.requireNonNull(defaults));
        }

        public Builder gatewayId(String gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        public Builder main(Boolean main) {
            $.main = main;
            return this;
        }

        public Builder routeTableAssociationId(String routeTableAssociationId) {
            $.routeTableAssociationId = routeTableAssociationId;
            return this;
        }

        public Builder routeTableId(String routeTableId) {
            $.routeTableId = routeTableId;
            return this;
        }

        public Builder subnetId(String subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public GetRouteTableAssociation build() {
            $.gatewayId = Objects.requireNonNull($.gatewayId, "expected parameter 'gatewayId' to be non-null");
            $.main = Objects.requireNonNull($.main, "expected parameter 'main' to be non-null");
            $.routeTableAssociationId = Objects.requireNonNull($.routeTableAssociationId, "expected parameter 'routeTableAssociationId' to be non-null");
            $.routeTableId = Objects.requireNonNull($.routeTableId, "expected parameter 'routeTableId' to be non-null");
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            return $;
        }
    }

}
