// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.mq.outputs;

import com.pulumi.aws.mq.outputs.GetBrokerConfiguration;
import com.pulumi.aws.mq.outputs.GetBrokerEncryptionOption;
import com.pulumi.aws.mq.outputs.GetBrokerInstance;
import com.pulumi.aws.mq.outputs.GetBrokerLdapServerMetadata;
import com.pulumi.aws.mq.outputs.GetBrokerLogs;
import com.pulumi.aws.mq.outputs.GetBrokerMaintenanceWindowStartTime;
import com.pulumi.aws.mq.outputs.GetBrokerUser;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBrokerResult {
    private final String arn;
    private final String authenticationStrategy;
    private final Boolean autoMinorVersionUpgrade;
    private final String brokerId;
    private final String brokerName;
    private final GetBrokerConfiguration configuration;
    private final String deploymentMode;
    private final List<GetBrokerEncryptionOption> encryptionOptions;
    private final String engineType;
    private final String engineVersion;
    private final String hostInstanceType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<GetBrokerInstance> instances;
    private final List<GetBrokerLdapServerMetadata> ldapServerMetadatas;
    private final GetBrokerLogs logs;
    private final GetBrokerMaintenanceWindowStartTime maintenanceWindowStartTime;
    private final Boolean publiclyAccessible;
    private final List<String> securityGroups;
    private final String storageType;
    private final List<String> subnetIds;
    private final Map<String,String> tags;
    private final List<GetBrokerUser> users;

    @CustomType.Constructor
    private GetBrokerResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("authenticationStrategy") String authenticationStrategy,
        @CustomType.Parameter("autoMinorVersionUpgrade") Boolean autoMinorVersionUpgrade,
        @CustomType.Parameter("brokerId") String brokerId,
        @CustomType.Parameter("brokerName") String brokerName,
        @CustomType.Parameter("configuration") GetBrokerConfiguration configuration,
        @CustomType.Parameter("deploymentMode") String deploymentMode,
        @CustomType.Parameter("encryptionOptions") List<GetBrokerEncryptionOption> encryptionOptions,
        @CustomType.Parameter("engineType") String engineType,
        @CustomType.Parameter("engineVersion") String engineVersion,
        @CustomType.Parameter("hostInstanceType") String hostInstanceType,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instances") List<GetBrokerInstance> instances,
        @CustomType.Parameter("ldapServerMetadatas") List<GetBrokerLdapServerMetadata> ldapServerMetadatas,
        @CustomType.Parameter("logs") GetBrokerLogs logs,
        @CustomType.Parameter("maintenanceWindowStartTime") GetBrokerMaintenanceWindowStartTime maintenanceWindowStartTime,
        @CustomType.Parameter("publiclyAccessible") Boolean publiclyAccessible,
        @CustomType.Parameter("securityGroups") List<String> securityGroups,
        @CustomType.Parameter("storageType") String storageType,
        @CustomType.Parameter("subnetIds") List<String> subnetIds,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("users") List<GetBrokerUser> users) {
        this.arn = arn;
        this.authenticationStrategy = authenticationStrategy;
        this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
        this.brokerId = brokerId;
        this.brokerName = brokerName;
        this.configuration = configuration;
        this.deploymentMode = deploymentMode;
        this.encryptionOptions = encryptionOptions;
        this.engineType = engineType;
        this.engineVersion = engineVersion;
        this.hostInstanceType = hostInstanceType;
        this.id = id;
        this.instances = instances;
        this.ldapServerMetadatas = ldapServerMetadatas;
        this.logs = logs;
        this.maintenanceWindowStartTime = maintenanceWindowStartTime;
        this.publiclyAccessible = publiclyAccessible;
        this.securityGroups = securityGroups;
        this.storageType = storageType;
        this.subnetIds = subnetIds;
        this.tags = tags;
        this.users = users;
    }

    public String arn() {
        return this.arn;
    }
    public String authenticationStrategy() {
        return this.authenticationStrategy;
    }
    public Boolean autoMinorVersionUpgrade() {
        return this.autoMinorVersionUpgrade;
    }
    public String brokerId() {
        return this.brokerId;
    }
    public String brokerName() {
        return this.brokerName;
    }
    public GetBrokerConfiguration configuration() {
        return this.configuration;
    }
    public String deploymentMode() {
        return this.deploymentMode;
    }
    public List<GetBrokerEncryptionOption> encryptionOptions() {
        return this.encryptionOptions;
    }
    public String engineType() {
        return this.engineType;
    }
    public String engineVersion() {
        return this.engineVersion;
    }
    public String hostInstanceType() {
        return this.hostInstanceType;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetBrokerInstance> instances() {
        return this.instances;
    }
    public List<GetBrokerLdapServerMetadata> ldapServerMetadatas() {
        return this.ldapServerMetadatas;
    }
    public GetBrokerLogs logs() {
        return this.logs;
    }
    public GetBrokerMaintenanceWindowStartTime maintenanceWindowStartTime() {
        return this.maintenanceWindowStartTime;
    }
    public Boolean publiclyAccessible() {
        return this.publiclyAccessible;
    }
    public List<String> securityGroups() {
        return this.securityGroups;
    }
    public String storageType() {
        return this.storageType;
    }
    public List<String> subnetIds() {
        return this.subnetIds;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    public List<GetBrokerUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrokerResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String authenticationStrategy;
        private Boolean autoMinorVersionUpgrade;
        private String brokerId;
        private String brokerName;
        private GetBrokerConfiguration configuration;
        private String deploymentMode;
        private List<GetBrokerEncryptionOption> encryptionOptions;
        private String engineType;
        private String engineVersion;
        private String hostInstanceType;
        private String id;
        private List<GetBrokerInstance> instances;
        private List<GetBrokerLdapServerMetadata> ldapServerMetadatas;
        private GetBrokerLogs logs;
        private GetBrokerMaintenanceWindowStartTime maintenanceWindowStartTime;
        private Boolean publiclyAccessible;
        private List<String> securityGroups;
        private String storageType;
        private List<String> subnetIds;
        private Map<String,String> tags;
        private List<GetBrokerUser> users;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBrokerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.authenticationStrategy = defaults.authenticationStrategy;
    	      this.autoMinorVersionUpgrade = defaults.autoMinorVersionUpgrade;
    	      this.brokerId = defaults.brokerId;
    	      this.brokerName = defaults.brokerName;
    	      this.configuration = defaults.configuration;
    	      this.deploymentMode = defaults.deploymentMode;
    	      this.encryptionOptions = defaults.encryptionOptions;
    	      this.engineType = defaults.engineType;
    	      this.engineVersion = defaults.engineVersion;
    	      this.hostInstanceType = defaults.hostInstanceType;
    	      this.id = defaults.id;
    	      this.instances = defaults.instances;
    	      this.ldapServerMetadatas = defaults.ldapServerMetadatas;
    	      this.logs = defaults.logs;
    	      this.maintenanceWindowStartTime = defaults.maintenanceWindowStartTime;
    	      this.publiclyAccessible = defaults.publiclyAccessible;
    	      this.securityGroups = defaults.securityGroups;
    	      this.storageType = defaults.storageType;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.users = defaults.users;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder authenticationStrategy(String authenticationStrategy) {
            this.authenticationStrategy = Objects.requireNonNull(authenticationStrategy);
            return this;
        }
        public Builder autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
            this.autoMinorVersionUpgrade = Objects.requireNonNull(autoMinorVersionUpgrade);
            return this;
        }
        public Builder brokerId(String brokerId) {
            this.brokerId = Objects.requireNonNull(brokerId);
            return this;
        }
        public Builder brokerName(String brokerName) {
            this.brokerName = Objects.requireNonNull(brokerName);
            return this;
        }
        public Builder configuration(GetBrokerConfiguration configuration) {
            this.configuration = Objects.requireNonNull(configuration);
            return this;
        }
        public Builder deploymentMode(String deploymentMode) {
            this.deploymentMode = Objects.requireNonNull(deploymentMode);
            return this;
        }
        public Builder encryptionOptions(List<GetBrokerEncryptionOption> encryptionOptions) {
            this.encryptionOptions = Objects.requireNonNull(encryptionOptions);
            return this;
        }
        public Builder encryptionOptions(GetBrokerEncryptionOption... encryptionOptions) {
            return encryptionOptions(List.of(encryptionOptions));
        }
        public Builder engineType(String engineType) {
            this.engineType = Objects.requireNonNull(engineType);
            return this;
        }
        public Builder engineVersion(String engineVersion) {
            this.engineVersion = Objects.requireNonNull(engineVersion);
            return this;
        }
        public Builder hostInstanceType(String hostInstanceType) {
            this.hostInstanceType = Objects.requireNonNull(hostInstanceType);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instances(List<GetBrokerInstance> instances) {
            this.instances = Objects.requireNonNull(instances);
            return this;
        }
        public Builder instances(GetBrokerInstance... instances) {
            return instances(List.of(instances));
        }
        public Builder ldapServerMetadatas(List<GetBrokerLdapServerMetadata> ldapServerMetadatas) {
            this.ldapServerMetadatas = Objects.requireNonNull(ldapServerMetadatas);
            return this;
        }
        public Builder ldapServerMetadatas(GetBrokerLdapServerMetadata... ldapServerMetadatas) {
            return ldapServerMetadatas(List.of(ldapServerMetadatas));
        }
        public Builder logs(GetBrokerLogs logs) {
            this.logs = Objects.requireNonNull(logs);
            return this;
        }
        public Builder maintenanceWindowStartTime(GetBrokerMaintenanceWindowStartTime maintenanceWindowStartTime) {
            this.maintenanceWindowStartTime = Objects.requireNonNull(maintenanceWindowStartTime);
            return this;
        }
        public Builder publiclyAccessible(Boolean publiclyAccessible) {
            this.publiclyAccessible = Objects.requireNonNull(publiclyAccessible);
            return this;
        }
        public Builder securityGroups(List<String> securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        public Builder storageType(String storageType) {
            this.storageType = Objects.requireNonNull(storageType);
            return this;
        }
        public Builder subnetIds(List<String> subnetIds) {
            this.subnetIds = Objects.requireNonNull(subnetIds);
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder users(List<GetBrokerUser> users) {
            this.users = Objects.requireNonNull(users);
            return this;
        }
        public Builder users(GetBrokerUser... users) {
            return users(List.of(users));
        }        public GetBrokerResult build() {
            return new GetBrokerResult(arn, authenticationStrategy, autoMinorVersionUpgrade, brokerId, brokerName, configuration, deploymentMode, encryptionOptions, engineType, engineVersion, hostInstanceType, id, instances, ldapServerMetadatas, logs, maintenanceWindowStartTime, publiclyAccessible, securityGroups, storageType, subnetIds, tags, users);
        }
    }
}
