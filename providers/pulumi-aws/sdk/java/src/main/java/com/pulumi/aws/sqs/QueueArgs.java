// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.sqs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QueueArgs extends com.pulumi.resources.ResourceArgs {

    public static final QueueArgs Empty = new QueueArgs();

    /**
     * Enables content-based deduplication for FIFO queues. For more information, see the [related documentation](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing)
     * 
     */
    @Import(name="contentBasedDeduplication")
    private @Nullable Output<Boolean> contentBasedDeduplication;

    public Optional<Output<Boolean>> contentBasedDeduplication() {
        return Optional.ofNullable(this.contentBasedDeduplication);
    }

    /**
     * Specifies whether message deduplication occurs at the message group or queue level. Valid values are `messageGroup` and `queue` (default).
     * 
     */
    @Import(name="deduplicationScope")
    private @Nullable Output<String> deduplicationScope;

    public Optional<Output<String>> deduplicationScope() {
        return Optional.ofNullable(this.deduplicationScope);
    }

    /**
     * The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 seconds.
     * 
     */
    @Import(name="delaySeconds")
    private @Nullable Output<Integer> delaySeconds;

    public Optional<Output<Integer>> delaySeconds() {
        return Optional.ofNullable(this.delaySeconds);
    }

    /**
     * Boolean designating a FIFO queue. If not set, it defaults to `false` making it standard.
     * 
     */
    @Import(name="fifoQueue")
    private @Nullable Output<Boolean> fifoQueue;

    public Optional<Output<Boolean>> fifoQueue() {
        return Optional.ofNullable(this.fifoQueue);
    }

    /**
     * Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are `perQueue` (default) and `perMessageGroupId`.
     * 
     */
    @Import(name="fifoThroughputLimit")
    private @Nullable Output<String> fifoThroughputLimit;

    public Optional<Output<String>> fifoThroughputLimit() {
        return Optional.ofNullable(this.fifoThroughputLimit);
    }

    /**
     * The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). The default is 300 (5 minutes).
     * 
     */
    @Import(name="kmsDataKeyReusePeriodSeconds")
    private @Nullable Output<Integer> kmsDataKeyReusePeriodSeconds;

    public Optional<Output<Integer>> kmsDataKeyReusePeriodSeconds() {
        return Optional.ofNullable(this.kmsDataKeyReusePeriodSeconds);
    }

    /**
     * The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see [Key Terms](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-sse-key-terms).
     * 
     */
    @Import(name="kmsMasterKeyId")
    private @Nullable Output<String> kmsMasterKeyId;

    public Optional<Output<String>> kmsMasterKeyId() {
        return Optional.ofNullable(this.kmsMasterKeyId);
    }

    /**
     * The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).
     * 
     */
    @Import(name="maxMessageSize")
    private @Nullable Output<Integer> maxMessageSize;

    public Optional<Output<Integer>> maxMessageSize() {
        return Optional.ofNullable(this.maxMessageSize);
    }

    /**
     * The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).
     * 
     */
    @Import(name="messageRetentionSeconds")
    private @Nullable Output<Integer> messageRetentionSeconds;

    public Optional<Output<Integer>> messageRetentionSeconds() {
        return Optional.ofNullable(this.messageRetentionSeconds);
    }

    /**
     * The name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the `.fifo` suffix. If omitted, this provider will assign a random, unique name. Conflicts with `name_prefix`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`
     * 
     */
    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * The JSON policy for the SQS queue.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * The time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds). The default for this attribute is 0, meaning that the call will return immediately.
     * 
     */
    @Import(name="receiveWaitTimeSeconds")
    private @Nullable Output<Integer> receiveWaitTimeSeconds;

    public Optional<Output<Integer>> receiveWaitTimeSeconds() {
        return Optional.ofNullable(this.receiveWaitTimeSeconds);
    }

    /**
     * The JSON policy to set up the Dead Letter Queue redrive permission, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html).
     * 
     */
    @Import(name="redriveAllowPolicy")
    private @Nullable Output<String> redriveAllowPolicy;

    public Optional<Output<String>> redriveAllowPolicy() {
        return Optional.ofNullable(this.redriveAllowPolicy);
    }

    /**
     * The JSON policy to set up the Dead Letter Queue, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html). **Note:** when specifying `maxReceiveCount`, you must specify it as an integer (`5`), and not a string (`&#34;5&#34;`).
     * 
     */
    @Import(name="redrivePolicy")
    private @Nullable Output<String> redrivePolicy;

    public Optional<Output<String>> redrivePolicy() {
        return Optional.ofNullable(this.redrivePolicy);
    }

    /**
     * Boolean to enable server-side encryption (SSE) of message content with SQS-owned encryption keys. Defaults to `false`. See [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html).
     * 
     */
    @Import(name="sqsManagedSseEnabled")
    private @Nullable Output<Boolean> sqsManagedSseEnabled;

    public Optional<Output<Boolean>> sqsManagedSseEnabled() {
        return Optional.ofNullable(this.sqsManagedSseEnabled);
    }

    /**
     * A map of tags to assign to the queue. If configured with a provider `default_tags` configuration block) present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html).
     * 
     */
    @Import(name="visibilityTimeoutSeconds")
    private @Nullable Output<Integer> visibilityTimeoutSeconds;

    public Optional<Output<Integer>> visibilityTimeoutSeconds() {
        return Optional.ofNullable(this.visibilityTimeoutSeconds);
    }

    private QueueArgs() {}

    private QueueArgs(QueueArgs $) {
        this.contentBasedDeduplication = $.contentBasedDeduplication;
        this.deduplicationScope = $.deduplicationScope;
        this.delaySeconds = $.delaySeconds;
        this.fifoQueue = $.fifoQueue;
        this.fifoThroughputLimit = $.fifoThroughputLimit;
        this.kmsDataKeyReusePeriodSeconds = $.kmsDataKeyReusePeriodSeconds;
        this.kmsMasterKeyId = $.kmsMasterKeyId;
        this.maxMessageSize = $.maxMessageSize;
        this.messageRetentionSeconds = $.messageRetentionSeconds;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.policy = $.policy;
        this.receiveWaitTimeSeconds = $.receiveWaitTimeSeconds;
        this.redriveAllowPolicy = $.redriveAllowPolicy;
        this.redrivePolicy = $.redrivePolicy;
        this.sqsManagedSseEnabled = $.sqsManagedSseEnabled;
        this.tags = $.tags;
        this.visibilityTimeoutSeconds = $.visibilityTimeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QueueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QueueArgs $;

        public Builder() {
            $ = new QueueArgs();
        }

        public Builder(QueueArgs defaults) {
            $ = new QueueArgs(Objects.requireNonNull(defaults));
        }

        public Builder contentBasedDeduplication(@Nullable Output<Boolean> contentBasedDeduplication) {
            $.contentBasedDeduplication = contentBasedDeduplication;
            return this;
        }

        public Builder contentBasedDeduplication(Boolean contentBasedDeduplication) {
            return contentBasedDeduplication(Output.of(contentBasedDeduplication));
        }

        public Builder deduplicationScope(@Nullable Output<String> deduplicationScope) {
            $.deduplicationScope = deduplicationScope;
            return this;
        }

        public Builder deduplicationScope(String deduplicationScope) {
            return deduplicationScope(Output.of(deduplicationScope));
        }

        public Builder delaySeconds(@Nullable Output<Integer> delaySeconds) {
            $.delaySeconds = delaySeconds;
            return this;
        }

        public Builder delaySeconds(Integer delaySeconds) {
            return delaySeconds(Output.of(delaySeconds));
        }

        public Builder fifoQueue(@Nullable Output<Boolean> fifoQueue) {
            $.fifoQueue = fifoQueue;
            return this;
        }

        public Builder fifoQueue(Boolean fifoQueue) {
            return fifoQueue(Output.of(fifoQueue));
        }

        public Builder fifoThroughputLimit(@Nullable Output<String> fifoThroughputLimit) {
            $.fifoThroughputLimit = fifoThroughputLimit;
            return this;
        }

        public Builder fifoThroughputLimit(String fifoThroughputLimit) {
            return fifoThroughputLimit(Output.of(fifoThroughputLimit));
        }

        public Builder kmsDataKeyReusePeriodSeconds(@Nullable Output<Integer> kmsDataKeyReusePeriodSeconds) {
            $.kmsDataKeyReusePeriodSeconds = kmsDataKeyReusePeriodSeconds;
            return this;
        }

        public Builder kmsDataKeyReusePeriodSeconds(Integer kmsDataKeyReusePeriodSeconds) {
            return kmsDataKeyReusePeriodSeconds(Output.of(kmsDataKeyReusePeriodSeconds));
        }

        public Builder kmsMasterKeyId(@Nullable Output<String> kmsMasterKeyId) {
            $.kmsMasterKeyId = kmsMasterKeyId;
            return this;
        }

        public Builder kmsMasterKeyId(String kmsMasterKeyId) {
            return kmsMasterKeyId(Output.of(kmsMasterKeyId));
        }

        public Builder maxMessageSize(@Nullable Output<Integer> maxMessageSize) {
            $.maxMessageSize = maxMessageSize;
            return this;
        }

        public Builder maxMessageSize(Integer maxMessageSize) {
            return maxMessageSize(Output.of(maxMessageSize));
        }

        public Builder messageRetentionSeconds(@Nullable Output<Integer> messageRetentionSeconds) {
            $.messageRetentionSeconds = messageRetentionSeconds;
            return this;
        }

        public Builder messageRetentionSeconds(Integer messageRetentionSeconds) {
            return messageRetentionSeconds(Output.of(messageRetentionSeconds));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        public Builder receiveWaitTimeSeconds(@Nullable Output<Integer> receiveWaitTimeSeconds) {
            $.receiveWaitTimeSeconds = receiveWaitTimeSeconds;
            return this;
        }

        public Builder receiveWaitTimeSeconds(Integer receiveWaitTimeSeconds) {
            return receiveWaitTimeSeconds(Output.of(receiveWaitTimeSeconds));
        }

        public Builder redriveAllowPolicy(@Nullable Output<String> redriveAllowPolicy) {
            $.redriveAllowPolicy = redriveAllowPolicy;
            return this;
        }

        public Builder redriveAllowPolicy(String redriveAllowPolicy) {
            return redriveAllowPolicy(Output.of(redriveAllowPolicy));
        }

        public Builder redrivePolicy(@Nullable Output<String> redrivePolicy) {
            $.redrivePolicy = redrivePolicy;
            return this;
        }

        public Builder redrivePolicy(String redrivePolicy) {
            return redrivePolicy(Output.of(redrivePolicy));
        }

        public Builder sqsManagedSseEnabled(@Nullable Output<Boolean> sqsManagedSseEnabled) {
            $.sqsManagedSseEnabled = sqsManagedSseEnabled;
            return this;
        }

        public Builder sqsManagedSseEnabled(Boolean sqsManagedSseEnabled) {
            return sqsManagedSseEnabled(Output.of(sqsManagedSseEnabled));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder visibilityTimeoutSeconds(@Nullable Output<Integer> visibilityTimeoutSeconds) {
            $.visibilityTimeoutSeconds = visibilityTimeoutSeconds;
            return this;
        }

        public Builder visibilityTimeoutSeconds(Integer visibilityTimeoutSeconds) {
            return visibilityTimeoutSeconds(Output.of(visibilityTimeoutSeconds));
        }

        public QueueArgs build() {
            return $;
        }
    }

}
