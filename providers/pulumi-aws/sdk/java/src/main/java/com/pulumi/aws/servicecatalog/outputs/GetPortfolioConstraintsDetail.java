// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.servicecatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPortfolioConstraintsDetail {
    /**
     * @return Identifier of the constraint.
     * 
     */
    private final String constraintId;
    /**
     * @return Description of the constraint.
     * 
     */
    private final String description;
    private final String owner;
    /**
     * @return Portfolio identifier.
     * 
     */
    private final String portfolioId;
    /**
     * @return Product identifier.
     * 
     */
    private final String productId;
    /**
     * @return Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetPortfolioConstraintsDetail(
        @CustomType.Parameter("constraintId") String constraintId,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("owner") String owner,
        @CustomType.Parameter("portfolioId") String portfolioId,
        @CustomType.Parameter("productId") String productId,
        @CustomType.Parameter("type") String type) {
        this.constraintId = constraintId;
        this.description = description;
        this.owner = owner;
        this.portfolioId = portfolioId;
        this.productId = productId;
        this.type = type;
    }

    /**
     * @return Identifier of the constraint.
     * 
     */
    public String constraintId() {
        return this.constraintId;
    }
    /**
     * @return Description of the constraint.
     * 
     */
    public String description() {
        return this.description;
    }
    public String owner() {
        return this.owner;
    }
    /**
     * @return Portfolio identifier.
     * 
     */
    public String portfolioId() {
        return this.portfolioId;
    }
    /**
     * @return Product identifier.
     * 
     */
    public String productId() {
        return this.productId;
    }
    /**
     * @return Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPortfolioConstraintsDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String constraintId;
        private String description;
        private String owner;
        private String portfolioId;
        private String productId;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPortfolioConstraintsDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.constraintId = defaults.constraintId;
    	      this.description = defaults.description;
    	      this.owner = defaults.owner;
    	      this.portfolioId = defaults.portfolioId;
    	      this.productId = defaults.productId;
    	      this.type = defaults.type;
        }

        public Builder constraintId(String constraintId) {
            this.constraintId = Objects.requireNonNull(constraintId);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        public Builder portfolioId(String portfolioId) {
            this.portfolioId = Objects.requireNonNull(portfolioId);
            return this;
        }
        public Builder productId(String productId) {
            this.productId = Objects.requireNonNull(productId);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetPortfolioConstraintsDetail build() {
            return new GetPortfolioConstraintsDetail(constraintId, description, owner, portfolioId, productId, type);
        }
    }
}
