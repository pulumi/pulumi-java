// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.outputs;

import com.pulumi.aws.ec2.outputs.GetCustomerGatewayFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCustomerGatewayResult {
    /**
     * @return The ARN of the customer gateway.
     * 
     */
    private final String arn;
    /**
     * @return The gateway&#39;s Border Gateway Protocol (BGP) Autonomous System Number (ASN).
     * 
     */
    private final Integer bgpAsn;
    /**
     * @return The Amazon Resource Name (ARN) for the customer gateway certificate.
     * 
     */
    private final String certificateArn;
    /**
     * @return A name for the customer gateway device.
     * 
     */
    private final String deviceName;
    private final @Nullable List<GetCustomerGatewayFilter> filters;
    private final String id;
    /**
     * @return The IP address of the gateway&#39;s Internet-routable external interface.
     * 
     */
    private final String ipAddress;
    /**
     * @return Map of key-value pairs assigned to the gateway.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The type of customer gateway. The only type AWS supports at this time is &#34;ipsec.1&#34;.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetCustomerGatewayResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("bgpAsn") Integer bgpAsn,
        @CustomType.Parameter("certificateArn") String certificateArn,
        @CustomType.Parameter("deviceName") String deviceName,
        @CustomType.Parameter("filters") @Nullable List<GetCustomerGatewayFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ipAddress") String ipAddress,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("type") String type) {
        this.arn = arn;
        this.bgpAsn = bgpAsn;
        this.certificateArn = certificateArn;
        this.deviceName = deviceName;
        this.filters = filters;
        this.id = id;
        this.ipAddress = ipAddress;
        this.tags = tags;
        this.type = type;
    }

    /**
     * @return The ARN of the customer gateway.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The gateway&#39;s Border Gateway Protocol (BGP) Autonomous System Number (ASN).
     * 
     */
    public Integer bgpAsn() {
        return this.bgpAsn;
    }
    /**
     * @return The Amazon Resource Name (ARN) for the customer gateway certificate.
     * 
     */
    public String certificateArn() {
        return this.certificateArn;
    }
    /**
     * @return A name for the customer gateway device.
     * 
     */
    public String deviceName() {
        return this.deviceName;
    }
    public List<GetCustomerGatewayFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The IP address of the gateway&#39;s Internet-routable external interface.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return Map of key-value pairs assigned to the gateway.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The type of customer gateway. The only type AWS supports at this time is &#34;ipsec.1&#34;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomerGatewayResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private Integer bgpAsn;
        private String certificateArn;
        private String deviceName;
        private @Nullable List<GetCustomerGatewayFilter> filters;
        private String id;
        private String ipAddress;
        private Map<String,String> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCustomerGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.bgpAsn = defaults.bgpAsn;
    	      this.certificateArn = defaults.certificateArn;
    	      this.deviceName = defaults.deviceName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder bgpAsn(Integer bgpAsn) {
            this.bgpAsn = Objects.requireNonNull(bgpAsn);
            return this;
        }
        public Builder certificateArn(String certificateArn) {
            this.certificateArn = Objects.requireNonNull(certificateArn);
            return this;
        }
        public Builder deviceName(String deviceName) {
            this.deviceName = Objects.requireNonNull(deviceName);
            return this;
        }
        public Builder filters(@Nullable List<GetCustomerGatewayFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetCustomerGatewayFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetCustomerGatewayResult build() {
            return new GetCustomerGatewayResult(arn, bgpAsn, certificateArn, deviceName, filters, id, ipAddress, tags, type);
        }
    }
}
