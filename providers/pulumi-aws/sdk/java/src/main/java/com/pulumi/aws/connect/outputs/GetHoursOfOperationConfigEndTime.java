// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.connect.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetHoursOfOperationConfigEndTime {
    /**
     * @return Specifies the hour of opening.
     * 
     */
    private final Integer hours;
    /**
     * @return Specifies the minute of opening.
     * 
     */
    private final Integer minutes;

    @CustomType.Constructor
    private GetHoursOfOperationConfigEndTime(
        @CustomType.Parameter("hours") Integer hours,
        @CustomType.Parameter("minutes") Integer minutes) {
        this.hours = hours;
        this.minutes = minutes;
    }

    /**
     * @return Specifies the hour of opening.
     * 
     */
    public Integer hours() {
        return this.hours;
    }
    /**
     * @return Specifies the minute of opening.
     * 
     */
    public Integer minutes() {
        return this.minutes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHoursOfOperationConfigEndTime defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer hours;
        private Integer minutes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHoursOfOperationConfigEndTime defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hours = defaults.hours;
    	      this.minutes = defaults.minutes;
        }

        public Builder hours(Integer hours) {
            this.hours = Objects.requireNonNull(hours);
            return this;
        }
        public Builder minutes(Integer minutes) {
            this.minutes = Objects.requireNonNull(minutes);
            return this;
        }        public GetHoursOfOperationConfigEndTime build() {
            return new GetHoursOfOperationConfigEndTime(hours, minutes);
        }
    }
}
