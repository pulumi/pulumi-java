// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.dlm.inputs;

import com.pulumi.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class LifecyclePolicyPolicyDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LifecyclePolicyPolicyDetailsArgs Empty = new LifecyclePolicyPolicyDetailsArgs();

    /**
     * A list of resource types that should be targeted by the lifecycle policy. `VOLUME` is currently the only allowed value.
     * 
     */
    @Import(name="resourceTypes", required=true)
      private final Output<List<String>> resourceTypes;

    public Output<List<String>> resourceTypes() {
        return this.resourceTypes;
    }

    /**
     * See the `schedule` configuration block.
     * 
     */
    @Import(name="schedules", required=true)
      private final Output<List<LifecyclePolicyPolicyDetailsScheduleArgs>> schedules;

    public Output<List<LifecyclePolicyPolicyDetailsScheduleArgs>> schedules() {
        return this.schedules;
    }

    /**
     * A map of tag keys and their values. Any resources that match the `resource_types` and are tagged with _any_ of these tags will be targeted.
     * 
     */
    @Import(name="targetTags", required=true)
      private final Output<Map<String,String>> targetTags;

    public Output<Map<String,String>> targetTags() {
        return this.targetTags;
    }

    public LifecyclePolicyPolicyDetailsArgs(
        Output<List<String>> resourceTypes,
        Output<List<LifecyclePolicyPolicyDetailsScheduleArgs>> schedules,
        Output<Map<String,String>> targetTags) {
        this.resourceTypes = Objects.requireNonNull(resourceTypes, "expected parameter 'resourceTypes' to be non-null");
        this.schedules = Objects.requireNonNull(schedules, "expected parameter 'schedules' to be non-null");
        this.targetTags = Objects.requireNonNull(targetTags, "expected parameter 'targetTags' to be non-null");
    }

    private LifecyclePolicyPolicyDetailsArgs() {
        this.resourceTypes = Codegen.empty();
        this.schedules = Codegen.empty();
        this.targetTags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LifecyclePolicyPolicyDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> resourceTypes;
        private Output<List<LifecyclePolicyPolicyDetailsScheduleArgs>> schedules;
        private Output<Map<String,String>> targetTags;

        public Builder() {
    	      // Empty
        }

        public Builder(LifecyclePolicyPolicyDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceTypes = defaults.resourceTypes;
    	      this.schedules = defaults.schedules;
    	      this.targetTags = defaults.targetTags;
        }

        public Builder resourceTypes(Output<List<String>> resourceTypes) {
            this.resourceTypes = Objects.requireNonNull(resourceTypes);
            return this;
        }
        public Builder resourceTypes(List<String> resourceTypes) {
            this.resourceTypes = Output.of(Objects.requireNonNull(resourceTypes));
            return this;
        }
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        public Builder schedules(Output<List<LifecyclePolicyPolicyDetailsScheduleArgs>> schedules) {
            this.schedules = Objects.requireNonNull(schedules);
            return this;
        }
        public Builder schedules(List<LifecyclePolicyPolicyDetailsScheduleArgs> schedules) {
            this.schedules = Output.of(Objects.requireNonNull(schedules));
            return this;
        }
        public Builder schedules(LifecyclePolicyPolicyDetailsScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }
        public Builder targetTags(Output<Map<String,String>> targetTags) {
            this.targetTags = Objects.requireNonNull(targetTags);
            return this;
        }
        public Builder targetTags(Map<String,String> targetTags) {
            this.targetTags = Output.of(Objects.requireNonNull(targetTags));
            return this;
        }        public LifecyclePolicyPolicyDetailsArgs build() {
            return new LifecyclePolicyPolicyDetailsArgs(resourceTypes, schedules, targetTags);
        }
    }
}
