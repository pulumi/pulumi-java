// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticsearch.inputs;

import com.pulumi.aws.elasticsearch.inputs.DomainAdvancedSecurityOptionsGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainAutoTuneOptionsGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainClusterConfigGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainCognitoOptionsGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainDomainEndpointOptionsGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainEbsOptionsGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainEncryptAtRestGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainLogPublishingOptionGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainNodeToNodeEncryptionGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainSnapshotOptionsGetArgs;
import com.pulumi.aws.elasticsearch.inputs.DomainVpcOptionsGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainState extends com.pulumi.resources.ResourceArgs {

    public static final DomainState Empty = new DomainState();

    /**
     * IAM policy document specifying the access policies for the domain.
     * 
     */
    @Import(name="accessPolicies")
      private final @Nullable Output<String> accessPolicies;

    public Output<String> accessPolicies() {
        return this.accessPolicies == null ? Codegen.empty() : this.accessPolicies;
    }

    @Import(name="advancedOptions")
      private final @Nullable Output<Map<String,String>> advancedOptions;

    public Output<Map<String,String>> advancedOptions() {
        return this.advancedOptions == null ? Codegen.empty() : this.advancedOptions;
    }

    /**
     * Configuration block for [fine-grained access control](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/fgac.html). Detailed below.
     * 
     */
    @Import(name="advancedSecurityOptions")
      private final @Nullable Output<DomainAdvancedSecurityOptionsGetArgs> advancedSecurityOptions;

    public Output<DomainAdvancedSecurityOptionsGetArgs> advancedSecurityOptions() {
        return this.advancedSecurityOptions == null ? Codegen.empty() : this.advancedSecurityOptions;
    }

    /**
     * ARN of the domain.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Configuration block for the Auto-Tune options of the domain. Detailed below.
     * 
     */
    @Import(name="autoTuneOptions")
      private final @Nullable Output<DomainAutoTuneOptionsGetArgs> autoTuneOptions;

    public Output<DomainAutoTuneOptionsGetArgs> autoTuneOptions() {
        return this.autoTuneOptions == null ? Codegen.empty() : this.autoTuneOptions;
    }

    /**
     * Configuration block for the cluster of the domain. Detailed below.
     * 
     */
    @Import(name="clusterConfig")
      private final @Nullable Output<DomainClusterConfigGetArgs> clusterConfig;

    public Output<DomainClusterConfigGetArgs> clusterConfig() {
        return this.clusterConfig == null ? Codegen.empty() : this.clusterConfig;
    }

    /**
     * Configuration block for authenticating Kibana with Cognito. Detailed below.
     * 
     */
    @Import(name="cognitoOptions")
      private final @Nullable Output<DomainCognitoOptionsGetArgs> cognitoOptions;

    public Output<DomainCognitoOptionsGetArgs> cognitoOptions() {
        return this.cognitoOptions == null ? Codegen.empty() : this.cognitoOptions;
    }

    /**
     * Configuration block for domain endpoint HTTP(S) related options. Detailed below.
     * 
     */
    @Import(name="domainEndpointOptions")
      private final @Nullable Output<DomainDomainEndpointOptionsGetArgs> domainEndpointOptions;

    public Output<DomainDomainEndpointOptionsGetArgs> domainEndpointOptions() {
        return this.domainEndpointOptions == null ? Codegen.empty() : this.domainEndpointOptions;
    }

    /**
     * Unique identifier for the domain.
     * 
     */
    @Import(name="domainId")
      private final @Nullable Output<String> domainId;

    public Output<String> domainId() {
        return this.domainId == null ? Codegen.empty() : this.domainId;
    }

    /**
     * Name of the domain.
     * 
     */
    @Import(name="domainName")
      private final @Nullable Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName == null ? Codegen.empty() : this.domainName;
    }

    /**
     * Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/elasticsearch-service/pricing/). Detailed below.
     * 
     */
    @Import(name="ebsOptions")
      private final @Nullable Output<DomainEbsOptionsGetArgs> ebsOptions;

    public Output<DomainEbsOptionsGetArgs> ebsOptions() {
        return this.ebsOptions == null ? Codegen.empty() : this.ebsOptions;
    }

    /**
     * Version of Elasticsearch to deploy. Defaults to `1.5`.
     * 
     */
    @Import(name="elasticsearchVersion")
      private final @Nullable Output<String> elasticsearchVersion;

    public Output<String> elasticsearchVersion() {
        return this.elasticsearchVersion == null ? Codegen.empty() : this.elasticsearchVersion;
    }

    /**
     * Configuration block for encrypt at rest options. Only available for [certain instance types](http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html). Detailed below.
     * 
     */
    @Import(name="encryptAtRest")
      private final @Nullable Output<DomainEncryptAtRestGetArgs> encryptAtRest;

    public Output<DomainEncryptAtRestGetArgs> encryptAtRest() {
        return this.encryptAtRest == null ? Codegen.empty() : this.encryptAtRest;
    }

    /**
     * Domain-specific endpoint used to submit index, search, and data upload requests.
     * 
     */
    @Import(name="endpoint")
      private final @Nullable Output<String> endpoint;

    public Output<String> endpoint() {
        return this.endpoint == null ? Codegen.empty() : this.endpoint;
    }

    /**
     * Domain-specific endpoint for kibana without https scheme.
     * 
     */
    @Import(name="kibanaEndpoint")
      private final @Nullable Output<String> kibanaEndpoint;

    public Output<String> kibanaEndpoint() {
        return this.kibanaEndpoint == null ? Codegen.empty() : this.kibanaEndpoint;
    }

    /**
     * Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
     * 
     */
    @Import(name="logPublishingOptions")
      private final @Nullable Output<List<DomainLogPublishingOptionGetArgs>> logPublishingOptions;

    public Output<List<DomainLogPublishingOptionGetArgs>> logPublishingOptions() {
        return this.logPublishingOptions == null ? Codegen.empty() : this.logPublishingOptions;
    }

    /**
     * Configuration block for node-to-node encryption options. Detailed below.
     * 
     */
    @Import(name="nodeToNodeEncryption")
      private final @Nullable Output<DomainNodeToNodeEncryptionGetArgs> nodeToNodeEncryption;

    public Output<DomainNodeToNodeEncryptionGetArgs> nodeToNodeEncryption() {
        return this.nodeToNodeEncryption == null ? Codegen.empty() : this.nodeToNodeEncryption;
    }

    /**
     * Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running Elasticsearch 5.3 and later, Amazon ES takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions of Elasticsearch, Amazon ES takes daily automated snapshots.
     * 
     */
    @Import(name="snapshotOptions")
      private final @Nullable Output<DomainSnapshotOptionsGetArgs> snapshotOptions;

    public Output<DomainSnapshotOptionsGetArgs> snapshotOptions() {
        return this.snapshotOptions == null ? Codegen.empty() : this.snapshotOptions;
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    /**
     * Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-vpc-limitations)). Detailed below.
     * 
     */
    @Import(name="vpcOptions")
      private final @Nullable Output<DomainVpcOptionsGetArgs> vpcOptions;

    public Output<DomainVpcOptionsGetArgs> vpcOptions() {
        return this.vpcOptions == null ? Codegen.empty() : this.vpcOptions;
    }

    public DomainState(
        @Nullable Output<String> accessPolicies,
        @Nullable Output<Map<String,String>> advancedOptions,
        @Nullable Output<DomainAdvancedSecurityOptionsGetArgs> advancedSecurityOptions,
        @Nullable Output<String> arn,
        @Nullable Output<DomainAutoTuneOptionsGetArgs> autoTuneOptions,
        @Nullable Output<DomainClusterConfigGetArgs> clusterConfig,
        @Nullable Output<DomainCognitoOptionsGetArgs> cognitoOptions,
        @Nullable Output<DomainDomainEndpointOptionsGetArgs> domainEndpointOptions,
        @Nullable Output<String> domainId,
        @Nullable Output<String> domainName,
        @Nullable Output<DomainEbsOptionsGetArgs> ebsOptions,
        @Nullable Output<String> elasticsearchVersion,
        @Nullable Output<DomainEncryptAtRestGetArgs> encryptAtRest,
        @Nullable Output<String> endpoint,
        @Nullable Output<String> kibanaEndpoint,
        @Nullable Output<List<DomainLogPublishingOptionGetArgs>> logPublishingOptions,
        @Nullable Output<DomainNodeToNodeEncryptionGetArgs> nodeToNodeEncryption,
        @Nullable Output<DomainSnapshotOptionsGetArgs> snapshotOptions,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<DomainVpcOptionsGetArgs> vpcOptions) {
        this.accessPolicies = accessPolicies;
        this.advancedOptions = advancedOptions;
        this.advancedSecurityOptions = advancedSecurityOptions;
        this.arn = arn;
        this.autoTuneOptions = autoTuneOptions;
        this.clusterConfig = clusterConfig;
        this.cognitoOptions = cognitoOptions;
        this.domainEndpointOptions = domainEndpointOptions;
        this.domainId = domainId;
        this.domainName = domainName;
        this.ebsOptions = ebsOptions;
        this.elasticsearchVersion = elasticsearchVersion;
        this.encryptAtRest = encryptAtRest;
        this.endpoint = endpoint;
        this.kibanaEndpoint = kibanaEndpoint;
        this.logPublishingOptions = logPublishingOptions;
        this.nodeToNodeEncryption = nodeToNodeEncryption;
        this.snapshotOptions = snapshotOptions;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.vpcOptions = vpcOptions;
    }

    private DomainState() {
        this.accessPolicies = Codegen.empty();
        this.advancedOptions = Codegen.empty();
        this.advancedSecurityOptions = Codegen.empty();
        this.arn = Codegen.empty();
        this.autoTuneOptions = Codegen.empty();
        this.clusterConfig = Codegen.empty();
        this.cognitoOptions = Codegen.empty();
        this.domainEndpointOptions = Codegen.empty();
        this.domainId = Codegen.empty();
        this.domainName = Codegen.empty();
        this.ebsOptions = Codegen.empty();
        this.elasticsearchVersion = Codegen.empty();
        this.encryptAtRest = Codegen.empty();
        this.endpoint = Codegen.empty();
        this.kibanaEndpoint = Codegen.empty();
        this.logPublishingOptions = Codegen.empty();
        this.nodeToNodeEncryption = Codegen.empty();
        this.snapshotOptions = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.vpcOptions = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accessPolicies;
        private @Nullable Output<Map<String,String>> advancedOptions;
        private @Nullable Output<DomainAdvancedSecurityOptionsGetArgs> advancedSecurityOptions;
        private @Nullable Output<String> arn;
        private @Nullable Output<DomainAutoTuneOptionsGetArgs> autoTuneOptions;
        private @Nullable Output<DomainClusterConfigGetArgs> clusterConfig;
        private @Nullable Output<DomainCognitoOptionsGetArgs> cognitoOptions;
        private @Nullable Output<DomainDomainEndpointOptionsGetArgs> domainEndpointOptions;
        private @Nullable Output<String> domainId;
        private @Nullable Output<String> domainName;
        private @Nullable Output<DomainEbsOptionsGetArgs> ebsOptions;
        private @Nullable Output<String> elasticsearchVersion;
        private @Nullable Output<DomainEncryptAtRestGetArgs> encryptAtRest;
        private @Nullable Output<String> endpoint;
        private @Nullable Output<String> kibanaEndpoint;
        private @Nullable Output<List<DomainLogPublishingOptionGetArgs>> logPublishingOptions;
        private @Nullable Output<DomainNodeToNodeEncryptionGetArgs> nodeToNodeEncryption;
        private @Nullable Output<DomainSnapshotOptionsGetArgs> snapshotOptions;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<DomainVpcOptionsGetArgs> vpcOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicies = defaults.accessPolicies;
    	      this.advancedOptions = defaults.advancedOptions;
    	      this.advancedSecurityOptions = defaults.advancedSecurityOptions;
    	      this.arn = defaults.arn;
    	      this.autoTuneOptions = defaults.autoTuneOptions;
    	      this.clusterConfig = defaults.clusterConfig;
    	      this.cognitoOptions = defaults.cognitoOptions;
    	      this.domainEndpointOptions = defaults.domainEndpointOptions;
    	      this.domainId = defaults.domainId;
    	      this.domainName = defaults.domainName;
    	      this.ebsOptions = defaults.ebsOptions;
    	      this.elasticsearchVersion = defaults.elasticsearchVersion;
    	      this.encryptAtRest = defaults.encryptAtRest;
    	      this.endpoint = defaults.endpoint;
    	      this.kibanaEndpoint = defaults.kibanaEndpoint;
    	      this.logPublishingOptions = defaults.logPublishingOptions;
    	      this.nodeToNodeEncryption = defaults.nodeToNodeEncryption;
    	      this.snapshotOptions = defaults.snapshotOptions;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.vpcOptions = defaults.vpcOptions;
        }

        public Builder accessPolicies(@Nullable Output<String> accessPolicies) {
            this.accessPolicies = accessPolicies;
            return this;
        }
        public Builder advancedOptions(@Nullable Output<Map<String,String>> advancedOptions) {
            this.advancedOptions = advancedOptions;
            return this;
        }
        public Builder advancedOptions(@Nullable Map<String,String> advancedOptions) {
            this.advancedOptions = Codegen.ofNullable(advancedOptions);
            return this;
        }
        public Builder advancedSecurityOptions(@Nullable Output<DomainAdvancedSecurityOptionsGetArgs> advancedSecurityOptions) {
            this.advancedSecurityOptions = advancedSecurityOptions;
            return this;
        }
        public Builder advancedSecurityOptions(@Nullable DomainAdvancedSecurityOptionsGetArgs advancedSecurityOptions) {
            this.advancedSecurityOptions = Codegen.ofNullable(advancedSecurityOptions);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder autoTuneOptions(@Nullable Output<DomainAutoTuneOptionsGetArgs> autoTuneOptions) {
            this.autoTuneOptions = autoTuneOptions;
            return this;
        }
        public Builder autoTuneOptions(@Nullable DomainAutoTuneOptionsGetArgs autoTuneOptions) {
            this.autoTuneOptions = Codegen.ofNullable(autoTuneOptions);
            return this;
        }
        public Builder clusterConfig(@Nullable Output<DomainClusterConfigGetArgs> clusterConfig) {
            this.clusterConfig = clusterConfig;
            return this;
        }
        public Builder clusterConfig(@Nullable DomainClusterConfigGetArgs clusterConfig) {
            this.clusterConfig = Codegen.ofNullable(clusterConfig);
            return this;
        }
        public Builder cognitoOptions(@Nullable Output<DomainCognitoOptionsGetArgs> cognitoOptions) {
            this.cognitoOptions = cognitoOptions;
            return this;
        }
        public Builder cognitoOptions(@Nullable DomainCognitoOptionsGetArgs cognitoOptions) {
            this.cognitoOptions = Codegen.ofNullable(cognitoOptions);
            return this;
        }
        public Builder domainEndpointOptions(@Nullable Output<DomainDomainEndpointOptionsGetArgs> domainEndpointOptions) {
            this.domainEndpointOptions = domainEndpointOptions;
            return this;
        }
        public Builder domainEndpointOptions(@Nullable DomainDomainEndpointOptionsGetArgs domainEndpointOptions) {
            this.domainEndpointOptions = Codegen.ofNullable(domainEndpointOptions);
            return this;
        }
        public Builder domainId(@Nullable Output<String> domainId) {
            this.domainId = domainId;
            return this;
        }
        public Builder domainId(@Nullable String domainId) {
            this.domainId = Codegen.ofNullable(domainId);
            return this;
        }
        public Builder domainName(@Nullable Output<String> domainName) {
            this.domainName = domainName;
            return this;
        }
        public Builder domainName(@Nullable String domainName) {
            this.domainName = Codegen.ofNullable(domainName);
            return this;
        }
        public Builder ebsOptions(@Nullable Output<DomainEbsOptionsGetArgs> ebsOptions) {
            this.ebsOptions = ebsOptions;
            return this;
        }
        public Builder ebsOptions(@Nullable DomainEbsOptionsGetArgs ebsOptions) {
            this.ebsOptions = Codegen.ofNullable(ebsOptions);
            return this;
        }
        public Builder elasticsearchVersion(@Nullable Output<String> elasticsearchVersion) {
            this.elasticsearchVersion = elasticsearchVersion;
            return this;
        }
        public Builder elasticsearchVersion(@Nullable String elasticsearchVersion) {
            this.elasticsearchVersion = Codegen.ofNullable(elasticsearchVersion);
            return this;
        }
        public Builder encryptAtRest(@Nullable Output<DomainEncryptAtRestGetArgs> encryptAtRest) {
            this.encryptAtRest = encryptAtRest;
            return this;
        }
        public Builder encryptAtRest(@Nullable DomainEncryptAtRestGetArgs encryptAtRest) {
            this.encryptAtRest = Codegen.ofNullable(encryptAtRest);
            return this;
        }
        public Builder endpoint(@Nullable Output<String> endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = Codegen.ofNullable(endpoint);
            return this;
        }
        public Builder kibanaEndpoint(@Nullable Output<String> kibanaEndpoint) {
            this.kibanaEndpoint = kibanaEndpoint;
            return this;
        }
        public Builder kibanaEndpoint(@Nullable String kibanaEndpoint) {
            this.kibanaEndpoint = Codegen.ofNullable(kibanaEndpoint);
            return this;
        }
        public Builder logPublishingOptions(@Nullable Output<List<DomainLogPublishingOptionGetArgs>> logPublishingOptions) {
            this.logPublishingOptions = logPublishingOptions;
            return this;
        }
        public Builder logPublishingOptions(@Nullable List<DomainLogPublishingOptionGetArgs> logPublishingOptions) {
            this.logPublishingOptions = Codegen.ofNullable(logPublishingOptions);
            return this;
        }
        public Builder logPublishingOptions(DomainLogPublishingOptionGetArgs... logPublishingOptions) {
            return logPublishingOptions(List.of(logPublishingOptions));
        }
        public Builder nodeToNodeEncryption(@Nullable Output<DomainNodeToNodeEncryptionGetArgs> nodeToNodeEncryption) {
            this.nodeToNodeEncryption = nodeToNodeEncryption;
            return this;
        }
        public Builder nodeToNodeEncryption(@Nullable DomainNodeToNodeEncryptionGetArgs nodeToNodeEncryption) {
            this.nodeToNodeEncryption = Codegen.ofNullable(nodeToNodeEncryption);
            return this;
        }
        public Builder snapshotOptions(@Nullable Output<DomainSnapshotOptionsGetArgs> snapshotOptions) {
            this.snapshotOptions = snapshotOptions;
            return this;
        }
        public Builder snapshotOptions(@Nullable DomainSnapshotOptionsGetArgs snapshotOptions) {
            this.snapshotOptions = Codegen.ofNullable(snapshotOptions);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder vpcOptions(@Nullable Output<DomainVpcOptionsGetArgs> vpcOptions) {
            this.vpcOptions = vpcOptions;
            return this;
        }
        public Builder vpcOptions(@Nullable DomainVpcOptionsGetArgs vpcOptions) {
            this.vpcOptions = Codegen.ofNullable(vpcOptions);
            return this;
        }        public DomainState build() {
            return new DomainState(accessPolicies, advancedOptions, advancedSecurityOptions, arn, autoTuneOptions, clusterConfig, cognitoOptions, domainEndpointOptions, domainId, domainName, ebsOptions, elasticsearchVersion, encryptAtRest, endpoint, kibanaEndpoint, logPublishingOptions, nodeToNodeEncryption, snapshotOptions, tags, tagsAll, vpcOptions);
        }
    }
}
