// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.kinesisanalyticsv2.inputs;

import com.pulumi.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationApplicationCodeConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationApplicationConfigurationApplicationCodeConfigurationArgs Empty = new ApplicationApplicationConfigurationApplicationCodeConfigurationArgs();

    /**
     * The location and type of the application code.
     * 
     */
    @Import(name="codeContent")
      private final @Nullable Output<ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs> codeContent;

    public Output<ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs> codeContent() {
        return this.codeContent == null ? Codegen.empty() : this.codeContent;
    }

    /**
     * Specifies whether the code content is in text or zip format. Valid values: `PLAINTEXT`, `ZIPFILE`.
     * 
     */
    @Import(name="codeContentType", required=true)
      private final Output<String> codeContentType;

    public Output<String> codeContentType() {
        return this.codeContentType;
    }

    public ApplicationApplicationConfigurationApplicationCodeConfigurationArgs(
        @Nullable Output<ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs> codeContent,
        Output<String> codeContentType) {
        this.codeContent = codeContent;
        this.codeContentType = Objects.requireNonNull(codeContentType, "expected parameter 'codeContentType' to be non-null");
    }

    private ApplicationApplicationConfigurationApplicationCodeConfigurationArgs() {
        this.codeContent = Codegen.empty();
        this.codeContentType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationApplicationConfigurationApplicationCodeConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs> codeContent;
        private Output<String> codeContentType;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationApplicationConfigurationApplicationCodeConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.codeContent = defaults.codeContent;
    	      this.codeContentType = defaults.codeContentType;
        }

        public Builder codeContent(@Nullable Output<ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs> codeContent) {
            this.codeContent = codeContent;
            return this;
        }
        public Builder codeContent(@Nullable ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs codeContent) {
            this.codeContent = Codegen.ofNullable(codeContent);
            return this;
        }
        public Builder codeContentType(Output<String> codeContentType) {
            this.codeContentType = Objects.requireNonNull(codeContentType);
            return this;
        }
        public Builder codeContentType(String codeContentType) {
            this.codeContentType = Output.of(Objects.requireNonNull(codeContentType));
            return this;
        }        public ApplicationApplicationConfigurationApplicationCodeConfigurationArgs build() {
            return new ApplicationApplicationConfigurationApplicationCodeConfigurationArgs(codeContent, codeContentType);
        }
    }
}
