// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.outputs;

import com.pulumi.aws.appmesh.outputs.RouteSpecHttp2RouteAction;
import com.pulumi.aws.appmesh.outputs.RouteSpecHttp2RouteMatch;
import com.pulumi.aws.appmesh.outputs.RouteSpecHttp2RouteRetryPolicy;
import com.pulumi.aws.appmesh.outputs.RouteSpecHttp2RouteTimeout;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RouteSpecHttp2Route {
    /**
     * @return The action to take if a match is determined.
     * 
     */
    private final RouteSpecHttp2RouteAction action;
    /**
     * @return The criteria for determining an gRPC request match.
     * 
     */
    private final RouteSpecHttp2RouteMatch match;
    /**
     * @return The retry policy.
     * 
     */
    private final @Nullable RouteSpecHttp2RouteRetryPolicy retryPolicy;
    /**
     * @return The types of timeouts.
     * 
     */
    private final @Nullable RouteSpecHttp2RouteTimeout timeout;

    @CustomType.Constructor
    private RouteSpecHttp2Route(
        @CustomType.Parameter("action") RouteSpecHttp2RouteAction action,
        @CustomType.Parameter("match") RouteSpecHttp2RouteMatch match,
        @CustomType.Parameter("retryPolicy") @Nullable RouteSpecHttp2RouteRetryPolicy retryPolicy,
        @CustomType.Parameter("timeout") @Nullable RouteSpecHttp2RouteTimeout timeout) {
        this.action = action;
        this.match = match;
        this.retryPolicy = retryPolicy;
        this.timeout = timeout;
    }

    /**
     * @return The action to take if a match is determined.
     * 
     */
    public RouteSpecHttp2RouteAction action() {
        return this.action;
    }
    /**
     * @return The criteria for determining an gRPC request match.
     * 
     */
    public RouteSpecHttp2RouteMatch match() {
        return this.match;
    }
    /**
     * @return The retry policy.
     * 
     */
    public Optional<RouteSpecHttp2RouteRetryPolicy> retryPolicy() {
        return Optional.ofNullable(this.retryPolicy);
    }
    /**
     * @return The types of timeouts.
     * 
     */
    public Optional<RouteSpecHttp2RouteTimeout> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouteSpecHttp2Route defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteSpecHttp2RouteAction action;
        private RouteSpecHttp2RouteMatch match;
        private @Nullable RouteSpecHttp2RouteRetryPolicy retryPolicy;
        private @Nullable RouteSpecHttp2RouteTimeout timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(RouteSpecHttp2Route defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.match = defaults.match;
    	      this.retryPolicy = defaults.retryPolicy;
    	      this.timeout = defaults.timeout;
        }

        public Builder action(RouteSpecHttp2RouteAction action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder match(RouteSpecHttp2RouteMatch match) {
            this.match = Objects.requireNonNull(match);
            return this;
        }
        public Builder retryPolicy(@Nullable RouteSpecHttp2RouteRetryPolicy retryPolicy) {
            this.retryPolicy = retryPolicy;
            return this;
        }
        public Builder timeout(@Nullable RouteSpecHttp2RouteTimeout timeout) {
            this.timeout = timeout;
            return this;
        }        public RouteSpecHttp2Route build() {
            return new RouteSpecHttp2Route(action, match, retryPolicy, timeout);
        }
    }
}
