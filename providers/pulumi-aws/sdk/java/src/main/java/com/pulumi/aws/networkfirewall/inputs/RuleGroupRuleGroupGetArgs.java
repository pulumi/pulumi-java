// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkfirewall.inputs;

import com.pulumi.aws.networkfirewall.inputs.RuleGroupRuleGroupRuleVariablesGetArgs;
import com.pulumi.aws.networkfirewall.inputs.RuleGroupRuleGroupRulesSourceGetArgs;
import com.pulumi.aws.networkfirewall.inputs.RuleGroupRuleGroupStatefulRuleOptionsGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleGroupRuleGroupGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleGroupRuleGroupGetArgs Empty = new RuleGroupRuleGroupGetArgs();

    /**
     * A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for **stateful** rule groups. See Rule Variables below for details.
     * 
     */
    @Import(name="ruleVariables")
    private @Nullable Output<RuleGroupRuleGroupRuleVariablesGetArgs> ruleVariables;

    /**
     * @return A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for **stateful** rule groups. See Rule Variables below for details.
     * 
     */
    public Optional<Output<RuleGroupRuleGroupRuleVariablesGetArgs>> ruleVariables() {
        return Optional.ofNullable(this.ruleVariables);
    }

    /**
     * A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.
     * 
     */
    @Import(name="rulesSource", required=true)
    private Output<RuleGroupRuleGroupRulesSourceGetArgs> rulesSource;

    /**
     * @return A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.
     * 
     */
    public Output<RuleGroupRuleGroupRulesSourceGetArgs> rulesSource() {
        return this.rulesSource;
    }

    /**
     * A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.
     * 
     */
    @Import(name="statefulRuleOptions")
    private @Nullable Output<RuleGroupRuleGroupStatefulRuleOptionsGetArgs> statefulRuleOptions;

    /**
     * @return A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.
     * 
     */
    public Optional<Output<RuleGroupRuleGroupStatefulRuleOptionsGetArgs>> statefulRuleOptions() {
        return Optional.ofNullable(this.statefulRuleOptions);
    }

    private RuleGroupRuleGroupGetArgs() {}

    private RuleGroupRuleGroupGetArgs(RuleGroupRuleGroupGetArgs $) {
        this.ruleVariables = $.ruleVariables;
        this.rulesSource = $.rulesSource;
        this.statefulRuleOptions = $.statefulRuleOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleGroupRuleGroupGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleGroupRuleGroupGetArgs $;

        public Builder() {
            $ = new RuleGroupRuleGroupGetArgs();
        }

        public Builder(RuleGroupRuleGroupGetArgs defaults) {
            $ = new RuleGroupRuleGroupGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ruleVariables A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for **stateful** rule groups. See Rule Variables below for details.
         * 
         * @return builder
         * 
         */
        public Builder ruleVariables(@Nullable Output<RuleGroupRuleGroupRuleVariablesGetArgs> ruleVariables) {
            $.ruleVariables = ruleVariables;
            return this;
        }

        /**
         * @param ruleVariables A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for **stateful** rule groups. See Rule Variables below for details.
         * 
         * @return builder
         * 
         */
        public Builder ruleVariables(RuleGroupRuleGroupRuleVariablesGetArgs ruleVariables) {
            return ruleVariables(Output.of(ruleVariables));
        }

        /**
         * @param rulesSource A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.
         * 
         * @return builder
         * 
         */
        public Builder rulesSource(Output<RuleGroupRuleGroupRulesSourceGetArgs> rulesSource) {
            $.rulesSource = rulesSource;
            return this;
        }

        /**
         * @param rulesSource A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.
         * 
         * @return builder
         * 
         */
        public Builder rulesSource(RuleGroupRuleGroupRulesSourceGetArgs rulesSource) {
            return rulesSource(Output.of(rulesSource));
        }

        /**
         * @param statefulRuleOptions A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.
         * 
         * @return builder
         * 
         */
        public Builder statefulRuleOptions(@Nullable Output<RuleGroupRuleGroupStatefulRuleOptionsGetArgs> statefulRuleOptions) {
            $.statefulRuleOptions = statefulRuleOptions;
            return this;
        }

        /**
         * @param statefulRuleOptions A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.
         * 
         * @return builder
         * 
         */
        public Builder statefulRuleOptions(RuleGroupRuleGroupStatefulRuleOptionsGetArgs statefulRuleOptions) {
            return statefulRuleOptions(Output.of(statefulRuleOptions));
        }

        public RuleGroupRuleGroupGetArgs build() {
            $.rulesSource = Objects.requireNonNull($.rulesSource, "expected parameter 'rulesSource' to be non-null");
            return $;
        }
    }

}
