// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.appmesh.inputs;

import com.pulumi.aws.appmesh.inputs.RouteSpecGrpcRouteGetArgs;
import com.pulumi.aws.appmesh.inputs.RouteSpecHttp2RouteGetArgs;
import com.pulumi.aws.appmesh.inputs.RouteSpecHttpRouteGetArgs;
import com.pulumi.aws.appmesh.inputs.RouteSpecTcpRouteGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteSpecGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteSpecGetArgs Empty = new RouteSpecGetArgs();

    /**
     * The gRPC routing information for the route.
     * 
     */
    @Import(name="grpcRoute")
    private @Nullable Output<RouteSpecGrpcRouteGetArgs> grpcRoute;

    /**
     * @return The gRPC routing information for the route.
     * 
     */
    public Optional<Output<RouteSpecGrpcRouteGetArgs>> grpcRoute() {
        return Optional.ofNullable(this.grpcRoute);
    }

    /**
     * The HTTP/2 routing information for the route.
     * 
     */
    @Import(name="http2Route")
    private @Nullable Output<RouteSpecHttp2RouteGetArgs> http2Route;

    /**
     * @return The HTTP/2 routing information for the route.
     * 
     */
    public Optional<Output<RouteSpecHttp2RouteGetArgs>> http2Route() {
        return Optional.ofNullable(this.http2Route);
    }

    /**
     * The HTTP routing information for the route.
     * 
     */
    @Import(name="httpRoute")
    private @Nullable Output<RouteSpecHttpRouteGetArgs> httpRoute;

    /**
     * @return The HTTP routing information for the route.
     * 
     */
    public Optional<Output<RouteSpecHttpRouteGetArgs>> httpRoute() {
        return Optional.ofNullable(this.httpRoute);
    }

    /**
     * The priority for the route, between `0` and `1000`.
     * Routes are matched based on the specified value, where `0` is the highest priority.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority for the route, between `0` and `1000`.
     * Routes are matched based on the specified value, where `0` is the highest priority.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The TCP routing information for the route.
     * 
     */
    @Import(name="tcpRoute")
    private @Nullable Output<RouteSpecTcpRouteGetArgs> tcpRoute;

    /**
     * @return The TCP routing information for the route.
     * 
     */
    public Optional<Output<RouteSpecTcpRouteGetArgs>> tcpRoute() {
        return Optional.ofNullable(this.tcpRoute);
    }

    private RouteSpecGetArgs() {}

    private RouteSpecGetArgs(RouteSpecGetArgs $) {
        this.grpcRoute = $.grpcRoute;
        this.http2Route = $.http2Route;
        this.httpRoute = $.httpRoute;
        this.priority = $.priority;
        this.tcpRoute = $.tcpRoute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteSpecGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteSpecGetArgs $;

        public Builder() {
            $ = new RouteSpecGetArgs();
        }

        public Builder(RouteSpecGetArgs defaults) {
            $ = new RouteSpecGetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param grpcRoute The gRPC routing information for the route.
         * 
         * @return builder
         * 
         */
        public Builder grpcRoute(@Nullable Output<RouteSpecGrpcRouteGetArgs> grpcRoute) {
            $.grpcRoute = grpcRoute;
            return this;
        }

        /**
         * @param grpcRoute The gRPC routing information for the route.
         * 
         * @return builder
         * 
         */
        public Builder grpcRoute(RouteSpecGrpcRouteGetArgs grpcRoute) {
            return grpcRoute(Output.of(grpcRoute));
        }

        /**
         * @param http2Route The HTTP/2 routing information for the route.
         * 
         * @return builder
         * 
         */
        public Builder http2Route(@Nullable Output<RouteSpecHttp2RouteGetArgs> http2Route) {
            $.http2Route = http2Route;
            return this;
        }

        /**
         * @param http2Route The HTTP/2 routing information for the route.
         * 
         * @return builder
         * 
         */
        public Builder http2Route(RouteSpecHttp2RouteGetArgs http2Route) {
            return http2Route(Output.of(http2Route));
        }

        /**
         * @param httpRoute The HTTP routing information for the route.
         * 
         * @return builder
         * 
         */
        public Builder httpRoute(@Nullable Output<RouteSpecHttpRouteGetArgs> httpRoute) {
            $.httpRoute = httpRoute;
            return this;
        }

        /**
         * @param httpRoute The HTTP routing information for the route.
         * 
         * @return builder
         * 
         */
        public Builder httpRoute(RouteSpecHttpRouteGetArgs httpRoute) {
            return httpRoute(Output.of(httpRoute));
        }

        /**
         * @param priority The priority for the route, between `0` and `1000`.
         * Routes are matched based on the specified value, where `0` is the highest priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority for the route, between `0` and `1000`.
         * Routes are matched based on the specified value, where `0` is the highest priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param tcpRoute The TCP routing information for the route.
         * 
         * @return builder
         * 
         */
        public Builder tcpRoute(@Nullable Output<RouteSpecTcpRouteGetArgs> tcpRoute) {
            $.tcpRoute = tcpRoute;
            return this;
        }

        /**
         * @param tcpRoute The TCP routing information for the route.
         * 
         * @return builder
         * 
         */
        public Builder tcpRoute(RouteSpecTcpRouteGetArgs tcpRoute) {
            return tcpRoute(Output.of(tcpRoute));
        }

        public RouteSpecGetArgs build() {
            return $;
        }
    }

}
