// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.wafv2.inputs;

import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementForwardedIpConfigGetArgs;
import com.pulumi.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebAclRuleStatementRateBasedStatementGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAclRuleStatementRateBasedStatementGetArgs Empty = new WebAclRuleStatementRateBasedStatementGetArgs();

    /**
     * Setting that indicates how to aggregate the request counts. Valid values include: `FORWARDED_IP` or `IP`. Default: `IP`.
     * 
     */
    @Import(name="aggregateKeyType")
      private final @Nullable Output<String> aggregateKeyType;

    public Output<String> aggregateKeyType() {
        return this.aggregateKeyType == null ? Codegen.empty() : this.aggregateKeyType;
    }

    /**
     * The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. If `aggregate_key_type` is set to `FORWARDED_IP`, this block is required. See Forwarded IP Config below for details.
     * 
     */
    @Import(name="forwardedIpConfig")
      private final @Nullable Output<WebAclRuleStatementRateBasedStatementForwardedIpConfigGetArgs> forwardedIpConfig;

    public Output<WebAclRuleStatementRateBasedStatementForwardedIpConfigGetArgs> forwardedIpConfig() {
        return this.forwardedIpConfig == null ? Codegen.empty() : this.forwardedIpConfig;
    }

    /**
     * The limit on requests per 5-minute period for a single originating IP address.
     * 
     */
    @Import(name="limit", required=true)
      private final Output<Integer> limit;

    public Output<Integer> limit() {
        return this.limit;
    }

    /**
     * An optional nested statement that narrows the scope of the rate-based statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See Statement above for details.
     * 
     */
    @Import(name="scopeDownStatement")
      private final @Nullable Output<WebAclRuleStatementRateBasedStatementScopeDownStatementGetArgs> scopeDownStatement;

    public Output<WebAclRuleStatementRateBasedStatementScopeDownStatementGetArgs> scopeDownStatement() {
        return this.scopeDownStatement == null ? Codegen.empty() : this.scopeDownStatement;
    }

    public WebAclRuleStatementRateBasedStatementGetArgs(
        @Nullable Output<String> aggregateKeyType,
        @Nullable Output<WebAclRuleStatementRateBasedStatementForwardedIpConfigGetArgs> forwardedIpConfig,
        Output<Integer> limit,
        @Nullable Output<WebAclRuleStatementRateBasedStatementScopeDownStatementGetArgs> scopeDownStatement) {
        this.aggregateKeyType = aggregateKeyType;
        this.forwardedIpConfig = forwardedIpConfig;
        this.limit = Objects.requireNonNull(limit, "expected parameter 'limit' to be non-null");
        this.scopeDownStatement = scopeDownStatement;
    }

    private WebAclRuleStatementRateBasedStatementGetArgs() {
        this.aggregateKeyType = Codegen.empty();
        this.forwardedIpConfig = Codegen.empty();
        this.limit = Codegen.empty();
        this.scopeDownStatement = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebAclRuleStatementRateBasedStatementGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> aggregateKeyType;
        private @Nullable Output<WebAclRuleStatementRateBasedStatementForwardedIpConfigGetArgs> forwardedIpConfig;
        private Output<Integer> limit;
        private @Nullable Output<WebAclRuleStatementRateBasedStatementScopeDownStatementGetArgs> scopeDownStatement;

        public Builder() {
    	      // Empty
        }

        public Builder(WebAclRuleStatementRateBasedStatementGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregateKeyType = defaults.aggregateKeyType;
    	      this.forwardedIpConfig = defaults.forwardedIpConfig;
    	      this.limit = defaults.limit;
    	      this.scopeDownStatement = defaults.scopeDownStatement;
        }

        public Builder aggregateKeyType(@Nullable Output<String> aggregateKeyType) {
            this.aggregateKeyType = aggregateKeyType;
            return this;
        }
        public Builder aggregateKeyType(@Nullable String aggregateKeyType) {
            this.aggregateKeyType = Codegen.ofNullable(aggregateKeyType);
            return this;
        }
        public Builder forwardedIpConfig(@Nullable Output<WebAclRuleStatementRateBasedStatementForwardedIpConfigGetArgs> forwardedIpConfig) {
            this.forwardedIpConfig = forwardedIpConfig;
            return this;
        }
        public Builder forwardedIpConfig(@Nullable WebAclRuleStatementRateBasedStatementForwardedIpConfigGetArgs forwardedIpConfig) {
            this.forwardedIpConfig = Codegen.ofNullable(forwardedIpConfig);
            return this;
        }
        public Builder limit(Output<Integer> limit) {
            this.limit = Objects.requireNonNull(limit);
            return this;
        }
        public Builder limit(Integer limit) {
            this.limit = Output.of(Objects.requireNonNull(limit));
            return this;
        }
        public Builder scopeDownStatement(@Nullable Output<WebAclRuleStatementRateBasedStatementScopeDownStatementGetArgs> scopeDownStatement) {
            this.scopeDownStatement = scopeDownStatement;
            return this;
        }
        public Builder scopeDownStatement(@Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementGetArgs scopeDownStatement) {
            this.scopeDownStatement = Codegen.ofNullable(scopeDownStatement);
            return this;
        }        public WebAclRuleStatementRateBasedStatementGetArgs build() {
            return new WebAclRuleStatementRateBasedStatementGetArgs(aggregateKeyType, forwardedIpConfig, limit, scopeDownStatement);
        }
    }
}
