// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.elasticache.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GlobalReplicationGroupState extends com.pulumi.resources.ResourceArgs {

    public static final GlobalReplicationGroupState Empty = new GlobalReplicationGroupState();

    /**
     * (**DEPRECATED** use `engine_version_actual` instead) The full version number of the cache engine running on the members of this global replication group.
     * 
     * @deprecated
     * Use engine_version_actual instead
     * 
     */
    @Deprecated /* Use engine_version_actual instead */
    @Import(name="actualEngineVersion")
      private final @Nullable Output<String> actualEngineVersion;

    @Deprecated /* Use engine_version_actual instead */
    public Output<String> actualEngineVersion() {
        return this.actualEngineVersion == null ? Codegen.empty() : this.actualEngineVersion;
    }

    /**
     * The ARN of the ElastiCache Global Replication Group.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * A flag that indicate whether the encryption at rest is enabled.
     * 
     */
    @Import(name="atRestEncryptionEnabled")
      private final @Nullable Output<Boolean> atRestEncryptionEnabled;

    public Output<Boolean> atRestEncryptionEnabled() {
        return this.atRestEncryptionEnabled == null ? Codegen.empty() : this.atRestEncryptionEnabled;
    }

    /**
     * A flag that indicate whether AuthToken (password) is enabled.
     * 
     */
    @Import(name="authTokenEnabled")
      private final @Nullable Output<Boolean> authTokenEnabled;

    public Output<Boolean> authTokenEnabled() {
        return this.authTokenEnabled == null ? Codegen.empty() : this.authTokenEnabled;
    }

    /**
     * The instance class used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).
     * 
     */
    @Import(name="cacheNodeType")
      private final @Nullable Output<String> cacheNodeType;

    public Output<String> cacheNodeType() {
        return this.cacheNodeType == null ? Codegen.empty() : this.cacheNodeType;
    }

    /**
     * Indicates whether the Global Datastore is cluster enabled.
     * 
     */
    @Import(name="clusterEnabled")
      private final @Nullable Output<Boolean> clusterEnabled;

    public Output<Boolean> clusterEnabled() {
        return this.clusterEnabled == null ? Codegen.empty() : this.clusterEnabled;
    }

    /**
     * The name of the cache engine to be used for the clusters in this global replication group.
     * 
     */
    @Import(name="engine")
      private final @Nullable Output<String> engine;

    public Output<String> engine() {
        return this.engine == null ? Codegen.empty() : this.engine;
    }

    /**
     * The full version number of the cache engine running on the members of this global replication group.
     * 
     */
    @Import(name="engineVersionActual")
      private final @Nullable Output<String> engineVersionActual;

    public Output<String> engineVersionActual() {
        return this.engineVersionActual == null ? Codegen.empty() : this.engineVersionActual;
    }

    /**
     * A user-created description for the global replication group.
     * 
     */
    @Import(name="globalReplicationGroupDescription")
      private final @Nullable Output<String> globalReplicationGroupDescription;

    public Output<String> globalReplicationGroupDescription() {
        return this.globalReplicationGroupDescription == null ? Codegen.empty() : this.globalReplicationGroupDescription;
    }

    /**
     * The full ID of the global replication group.
     * 
     */
    @Import(name="globalReplicationGroupId")
      private final @Nullable Output<String> globalReplicationGroupId;

    public Output<String> globalReplicationGroupId() {
        return this.globalReplicationGroupId == null ? Codegen.empty() : this.globalReplicationGroupId;
    }

    /**
     * The suffix name of a Global Datastore. If `global_replication_group_id_suffix` is changed, creates a new resource.
     * 
     */
    @Import(name="globalReplicationGroupIdSuffix")
      private final @Nullable Output<String> globalReplicationGroupIdSuffix;

    public Output<String> globalReplicationGroupIdSuffix() {
        return this.globalReplicationGroupIdSuffix == null ? Codegen.empty() : this.globalReplicationGroupIdSuffix;
    }

    /**
     * The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If `primary_replication_group_id` is changed, creates a new resource.
     * 
     */
    @Import(name="primaryReplicationGroupId")
      private final @Nullable Output<String> primaryReplicationGroupId;

    public Output<String> primaryReplicationGroupId() {
        return this.primaryReplicationGroupId == null ? Codegen.empty() : this.primaryReplicationGroupId;
    }

    /**
     * A flag that indicates whether the encryption in transit is enabled.
     * 
     */
    @Import(name="transitEncryptionEnabled")
      private final @Nullable Output<Boolean> transitEncryptionEnabled;

    public Output<Boolean> transitEncryptionEnabled() {
        return this.transitEncryptionEnabled == null ? Codegen.empty() : this.transitEncryptionEnabled;
    }

    public GlobalReplicationGroupState(
        @Nullable Output<String> actualEngineVersion,
        @Nullable Output<String> arn,
        @Nullable Output<Boolean> atRestEncryptionEnabled,
        @Nullable Output<Boolean> authTokenEnabled,
        @Nullable Output<String> cacheNodeType,
        @Nullable Output<Boolean> clusterEnabled,
        @Nullable Output<String> engine,
        @Nullable Output<String> engineVersionActual,
        @Nullable Output<String> globalReplicationGroupDescription,
        @Nullable Output<String> globalReplicationGroupId,
        @Nullable Output<String> globalReplicationGroupIdSuffix,
        @Nullable Output<String> primaryReplicationGroupId,
        @Nullable Output<Boolean> transitEncryptionEnabled) {
        this.actualEngineVersion = actualEngineVersion;
        this.arn = arn;
        this.atRestEncryptionEnabled = atRestEncryptionEnabled;
        this.authTokenEnabled = authTokenEnabled;
        this.cacheNodeType = cacheNodeType;
        this.clusterEnabled = clusterEnabled;
        this.engine = engine;
        this.engineVersionActual = engineVersionActual;
        this.globalReplicationGroupDescription = globalReplicationGroupDescription;
        this.globalReplicationGroupId = globalReplicationGroupId;
        this.globalReplicationGroupIdSuffix = globalReplicationGroupIdSuffix;
        this.primaryReplicationGroupId = primaryReplicationGroupId;
        this.transitEncryptionEnabled = transitEncryptionEnabled;
    }

    private GlobalReplicationGroupState() {
        this.actualEngineVersion = Codegen.empty();
        this.arn = Codegen.empty();
        this.atRestEncryptionEnabled = Codegen.empty();
        this.authTokenEnabled = Codegen.empty();
        this.cacheNodeType = Codegen.empty();
        this.clusterEnabled = Codegen.empty();
        this.engine = Codegen.empty();
        this.engineVersionActual = Codegen.empty();
        this.globalReplicationGroupDescription = Codegen.empty();
        this.globalReplicationGroupId = Codegen.empty();
        this.globalReplicationGroupIdSuffix = Codegen.empty();
        this.primaryReplicationGroupId = Codegen.empty();
        this.transitEncryptionEnabled = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GlobalReplicationGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> actualEngineVersion;
        private @Nullable Output<String> arn;
        private @Nullable Output<Boolean> atRestEncryptionEnabled;
        private @Nullable Output<Boolean> authTokenEnabled;
        private @Nullable Output<String> cacheNodeType;
        private @Nullable Output<Boolean> clusterEnabled;
        private @Nullable Output<String> engine;
        private @Nullable Output<String> engineVersionActual;
        private @Nullable Output<String> globalReplicationGroupDescription;
        private @Nullable Output<String> globalReplicationGroupId;
        private @Nullable Output<String> globalReplicationGroupIdSuffix;
        private @Nullable Output<String> primaryReplicationGroupId;
        private @Nullable Output<Boolean> transitEncryptionEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(GlobalReplicationGroupState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualEngineVersion = defaults.actualEngineVersion;
    	      this.arn = defaults.arn;
    	      this.atRestEncryptionEnabled = defaults.atRestEncryptionEnabled;
    	      this.authTokenEnabled = defaults.authTokenEnabled;
    	      this.cacheNodeType = defaults.cacheNodeType;
    	      this.clusterEnabled = defaults.clusterEnabled;
    	      this.engine = defaults.engine;
    	      this.engineVersionActual = defaults.engineVersionActual;
    	      this.globalReplicationGroupDescription = defaults.globalReplicationGroupDescription;
    	      this.globalReplicationGroupId = defaults.globalReplicationGroupId;
    	      this.globalReplicationGroupIdSuffix = defaults.globalReplicationGroupIdSuffix;
    	      this.primaryReplicationGroupId = defaults.primaryReplicationGroupId;
    	      this.transitEncryptionEnabled = defaults.transitEncryptionEnabled;
        }

        public Builder actualEngineVersion(@Nullable Output<String> actualEngineVersion) {
            this.actualEngineVersion = actualEngineVersion;
            return this;
        }
        public Builder actualEngineVersion(@Nullable String actualEngineVersion) {
            this.actualEngineVersion = Codegen.ofNullable(actualEngineVersion);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder atRestEncryptionEnabled(@Nullable Output<Boolean> atRestEncryptionEnabled) {
            this.atRestEncryptionEnabled = atRestEncryptionEnabled;
            return this;
        }
        public Builder atRestEncryptionEnabled(@Nullable Boolean atRestEncryptionEnabled) {
            this.atRestEncryptionEnabled = Codegen.ofNullable(atRestEncryptionEnabled);
            return this;
        }
        public Builder authTokenEnabled(@Nullable Output<Boolean> authTokenEnabled) {
            this.authTokenEnabled = authTokenEnabled;
            return this;
        }
        public Builder authTokenEnabled(@Nullable Boolean authTokenEnabled) {
            this.authTokenEnabled = Codegen.ofNullable(authTokenEnabled);
            return this;
        }
        public Builder cacheNodeType(@Nullable Output<String> cacheNodeType) {
            this.cacheNodeType = cacheNodeType;
            return this;
        }
        public Builder cacheNodeType(@Nullable String cacheNodeType) {
            this.cacheNodeType = Codegen.ofNullable(cacheNodeType);
            return this;
        }
        public Builder clusterEnabled(@Nullable Output<Boolean> clusterEnabled) {
            this.clusterEnabled = clusterEnabled;
            return this;
        }
        public Builder clusterEnabled(@Nullable Boolean clusterEnabled) {
            this.clusterEnabled = Codegen.ofNullable(clusterEnabled);
            return this;
        }
        public Builder engine(@Nullable Output<String> engine) {
            this.engine = engine;
            return this;
        }
        public Builder engine(@Nullable String engine) {
            this.engine = Codegen.ofNullable(engine);
            return this;
        }
        public Builder engineVersionActual(@Nullable Output<String> engineVersionActual) {
            this.engineVersionActual = engineVersionActual;
            return this;
        }
        public Builder engineVersionActual(@Nullable String engineVersionActual) {
            this.engineVersionActual = Codegen.ofNullable(engineVersionActual);
            return this;
        }
        public Builder globalReplicationGroupDescription(@Nullable Output<String> globalReplicationGroupDescription) {
            this.globalReplicationGroupDescription = globalReplicationGroupDescription;
            return this;
        }
        public Builder globalReplicationGroupDescription(@Nullable String globalReplicationGroupDescription) {
            this.globalReplicationGroupDescription = Codegen.ofNullable(globalReplicationGroupDescription);
            return this;
        }
        public Builder globalReplicationGroupId(@Nullable Output<String> globalReplicationGroupId) {
            this.globalReplicationGroupId = globalReplicationGroupId;
            return this;
        }
        public Builder globalReplicationGroupId(@Nullable String globalReplicationGroupId) {
            this.globalReplicationGroupId = Codegen.ofNullable(globalReplicationGroupId);
            return this;
        }
        public Builder globalReplicationGroupIdSuffix(@Nullable Output<String> globalReplicationGroupIdSuffix) {
            this.globalReplicationGroupIdSuffix = globalReplicationGroupIdSuffix;
            return this;
        }
        public Builder globalReplicationGroupIdSuffix(@Nullable String globalReplicationGroupIdSuffix) {
            this.globalReplicationGroupIdSuffix = Codegen.ofNullable(globalReplicationGroupIdSuffix);
            return this;
        }
        public Builder primaryReplicationGroupId(@Nullable Output<String> primaryReplicationGroupId) {
            this.primaryReplicationGroupId = primaryReplicationGroupId;
            return this;
        }
        public Builder primaryReplicationGroupId(@Nullable String primaryReplicationGroupId) {
            this.primaryReplicationGroupId = Codegen.ofNullable(primaryReplicationGroupId);
            return this;
        }
        public Builder transitEncryptionEnabled(@Nullable Output<Boolean> transitEncryptionEnabled) {
            this.transitEncryptionEnabled = transitEncryptionEnabled;
            return this;
        }
        public Builder transitEncryptionEnabled(@Nullable Boolean transitEncryptionEnabled) {
            this.transitEncryptionEnabled = Codegen.ofNullable(transitEncryptionEnabled);
            return this;
        }        public GlobalReplicationGroupState build() {
            return new GlobalReplicationGroupState(actualEngineVersion, arn, atRestEncryptionEnabled, authTokenEnabled, cacheNodeType, clusterEnabled, engine, engineVersionActual, globalReplicationGroupDescription, globalReplicationGroupId, globalReplicationGroupIdSuffix, primaryReplicationGroupId, transitEncryptionEnabled);
        }
    }
}
