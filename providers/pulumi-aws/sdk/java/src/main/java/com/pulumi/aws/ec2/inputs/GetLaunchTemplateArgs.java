// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetLaunchTemplateFilter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetLaunchTemplateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLaunchTemplateArgs Empty = new GetLaunchTemplateArgs();

    /**
     * Configuration block(s) for filtering. Detailed below.
     * 
     */
    @Import(name="filters")
    private Output</* @Nullable */ List<GetLaunchTemplateFilter>> filters;

    /**
     * @return Configuration block(s) for filtering. Detailed below.
     * 
     */
    public Output</* @Nullable */ List<GetLaunchTemplateFilter>> filters() {
        return this.filters;
    }

    /**
     * The ID of the specific launch template to retrieve.
     * 
     */
    @Import(name="id")
    private Output</* @Nullable */ String> id;

    /**
     * @return The ID of the specific launch template to retrieve.
     * 
     */
    public Output</* @Nullable */ String> id() {
        return this.id;
    }

    /**
     * The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
     * 
     */
    @Import(name="name")
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
     * 
     */
    public Output</* @Nullable */ String> name() {
        return this.name;
    }

    /**
     * A map of tags, each pair of which must exactly match a pair on the desired Launch Template.
     * 
     */
    @Import(name="tags")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags, each pair of which must exactly match a pair on the desired Launch Template.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }

    private GetLaunchTemplateArgs() {}

    private GetLaunchTemplateArgs(GetLaunchTemplateArgs $) {
        this.filters = $.filters;
        this.id = $.id;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLaunchTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLaunchTemplateArgs $;

        public Builder() {
            $ = new GetLaunchTemplateArgs();
        }

        public Builder(GetLaunchTemplateArgs defaults) {
            $ = new GetLaunchTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters Configuration block(s) for filtering. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder filters(Output</* @Nullable */ List<GetLaunchTemplateFilter>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Configuration block(s) for filtering. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetLaunchTemplateFilter> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Configuration block(s) for filtering. Detailed below.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetLaunchTemplateFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id The ID of the specific launch template to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder id(Output</* @Nullable */ String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the specific launch template to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            return id(Output.of(id));
        }

        /**
         * @param name The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
         * 
         * @return builder
         * 
         */
        public Builder name(Output</* @Nullable */ String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A map of tags, each pair of which must exactly match a pair on the desired Launch Template.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output</* @Nullable */ Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags, each pair of which must exactly match a pair on the desired Launch Template.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetLaunchTemplateArgs build() {
            return $;
        }
    }

}
