// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.cloudfront.inputs;

import com.pulumi.aws.cloudfront.inputs.FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.util.Objects;


public final class FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs Empty = new FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs();

    /**
     * Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
     * 
     */
    @Import(name="contentTypeProfiles", required=true)
      private final Output<FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesGetArgs> contentTypeProfiles;

    public Output<FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesGetArgs> contentTypeProfiles() {
        return this.contentTypeProfiles;
    }

    /**
     * specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
     * 
     */
    @Import(name="forwardWhenContentTypeIsUnknown", required=true)
      private final Output<Boolean> forwardWhenContentTypeIsUnknown;

    public Output<Boolean> forwardWhenContentTypeIsUnknown() {
        return this.forwardWhenContentTypeIsUnknown;
    }

    public FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs(
        Output<FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesGetArgs> contentTypeProfiles,
        Output<Boolean> forwardWhenContentTypeIsUnknown) {
        this.contentTypeProfiles = Objects.requireNonNull(contentTypeProfiles, "expected parameter 'contentTypeProfiles' to be non-null");
        this.forwardWhenContentTypeIsUnknown = Objects.requireNonNull(forwardWhenContentTypeIsUnknown, "expected parameter 'forwardWhenContentTypeIsUnknown' to be non-null");
    }

    private FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs() {
        this.contentTypeProfiles = Codegen.empty();
        this.forwardWhenContentTypeIsUnknown = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesGetArgs> contentTypeProfiles;
        private Output<Boolean> forwardWhenContentTypeIsUnknown;

        public Builder() {
    	      // Empty
        }

        public Builder(FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentTypeProfiles = defaults.contentTypeProfiles;
    	      this.forwardWhenContentTypeIsUnknown = defaults.forwardWhenContentTypeIsUnknown;
        }

        public Builder contentTypeProfiles(Output<FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesGetArgs> contentTypeProfiles) {
            this.contentTypeProfiles = Objects.requireNonNull(contentTypeProfiles);
            return this;
        }
        public Builder contentTypeProfiles(FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesGetArgs contentTypeProfiles) {
            this.contentTypeProfiles = Output.of(Objects.requireNonNull(contentTypeProfiles));
            return this;
        }
        public Builder forwardWhenContentTypeIsUnknown(Output<Boolean> forwardWhenContentTypeIsUnknown) {
            this.forwardWhenContentTypeIsUnknown = Objects.requireNonNull(forwardWhenContentTypeIsUnknown);
            return this;
        }
        public Builder forwardWhenContentTypeIsUnknown(Boolean forwardWhenContentTypeIsUnknown) {
            this.forwardWhenContentTypeIsUnknown = Output.of(Objects.requireNonNull(forwardWhenContentTypeIsUnknown));
            return this;
        }        public FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs build() {
            return new FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs(contentTypeProfiles, forwardWhenContentTypeIsUnknown);
        }
    }
}
