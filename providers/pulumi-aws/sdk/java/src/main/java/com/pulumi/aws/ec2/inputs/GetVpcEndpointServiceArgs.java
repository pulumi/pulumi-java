// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetVpcEndpointServiceFilter;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVpcEndpointServiceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVpcEndpointServiceArgs Empty = new GetVpcEndpointServiceArgs();

    /**
     * Configuration block(s) for filtering. Detailed below.
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetVpcEndpointServiceFilter> filters;

    public Optional<List<GetVpcEndpointServiceFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The common name of an AWS service (e.g., `s3`).
     * 
     */
    @Import(name="service")
    private @Nullable String service;

    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }

    /**
     * The service name that is specified when creating a VPC endpoint. For AWS services the service name is usually in the form `com.amazonaws.&lt;region&gt;.&lt;service&gt;` (the SageMaker Notebook service is an exception to this rule, the service name is in the form `aws.sagemaker.&lt;region&gt;.notebook`).
     * 
     */
    @Import(name="serviceName")
    private @Nullable String serviceName;

    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The service type, `Gateway` or `Interface`.
     * 
     */
    @Import(name="serviceType")
    private @Nullable String serviceType;

    public Optional<String> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }

    /**
     * A map of tags, each pair of which must exactly match a pair on the desired VPC Endpoint Service.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetVpcEndpointServiceArgs() {}

    private GetVpcEndpointServiceArgs(GetVpcEndpointServiceArgs $) {
        this.filters = $.filters;
        this.service = $.service;
        this.serviceName = $.serviceName;
        this.serviceType = $.serviceType;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVpcEndpointServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVpcEndpointServiceArgs $;

        public Builder() {
            $ = new GetVpcEndpointServiceArgs();
        }

        public Builder(GetVpcEndpointServiceArgs defaults) {
            $ = new GetVpcEndpointServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetVpcEndpointServiceFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetVpcEndpointServiceFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder service(@Nullable String service) {
            $.service = service;
            return this;
        }

        public Builder serviceName(@Nullable String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder serviceType(@Nullable String serviceType) {
            $.serviceType = serviceType;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetVpcEndpointServiceArgs build() {
            return $;
        }
    }

}
