// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.networkmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetConnectionResult {
    /**
     * @return The ARN of the connection.
     * 
     */
    private final String arn;
    /**
     * @return The ID of the second device in the connection.
     * 
     */
    private final String connectedDeviceId;
    /**
     * @return The ID of the link for the second device.
     * 
     */
    private final String connectedLinkId;
    private final String connectionId;
    /**
     * @return A description of the connection.
     * 
     */
    private final String description;
    /**
     * @return The ID of the first device in the connection.
     * 
     */
    private final String deviceId;
    private final String globalNetworkId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The ID of the link for the first device.
     * 
     */
    private final String linkId;
    /**
     * @return Key-value tags for the connection.
     * 
     */
    private final Map<String,String> tags;

    @CustomType.Constructor
    private GetConnectionResult(
        @CustomType.Parameter("arn") String arn,
        @CustomType.Parameter("connectedDeviceId") String connectedDeviceId,
        @CustomType.Parameter("connectedLinkId") String connectedLinkId,
        @CustomType.Parameter("connectionId") String connectionId,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("deviceId") String deviceId,
        @CustomType.Parameter("globalNetworkId") String globalNetworkId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("linkId") String linkId,
        @CustomType.Parameter("tags") Map<String,String> tags) {
        this.arn = arn;
        this.connectedDeviceId = connectedDeviceId;
        this.connectedLinkId = connectedLinkId;
        this.connectionId = connectionId;
        this.description = description;
        this.deviceId = deviceId;
        this.globalNetworkId = globalNetworkId;
        this.id = id;
        this.linkId = linkId;
        this.tags = tags;
    }

    /**
     * @return The ARN of the connection.
     * 
     */
    public String arn() {
        return this.arn;
    }
    /**
     * @return The ID of the second device in the connection.
     * 
     */
    public String connectedDeviceId() {
        return this.connectedDeviceId;
    }
    /**
     * @return The ID of the link for the second device.
     * 
     */
    public String connectedLinkId() {
        return this.connectedLinkId;
    }
    public String connectionId() {
        return this.connectionId;
    }
    /**
     * @return A description of the connection.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the first device in the connection.
     * 
     */
    public String deviceId() {
        return this.deviceId;
    }
    public String globalNetworkId() {
        return this.globalNetworkId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the link for the first device.
     * 
     */
    public String linkId() {
        return this.linkId;
    }
    /**
     * @return Key-value tags for the connection.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String connectedDeviceId;
        private String connectedLinkId;
        private String connectionId;
        private String description;
        private String deviceId;
        private String globalNetworkId;
        private String id;
        private String linkId;
        private Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.connectedDeviceId = defaults.connectedDeviceId;
    	      this.connectedLinkId = defaults.connectedLinkId;
    	      this.connectionId = defaults.connectionId;
    	      this.description = defaults.description;
    	      this.deviceId = defaults.deviceId;
    	      this.globalNetworkId = defaults.globalNetworkId;
    	      this.id = defaults.id;
    	      this.linkId = defaults.linkId;
    	      this.tags = defaults.tags;
        }

        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        public Builder connectedDeviceId(String connectedDeviceId) {
            this.connectedDeviceId = Objects.requireNonNull(connectedDeviceId);
            return this;
        }
        public Builder connectedLinkId(String connectedLinkId) {
            this.connectedLinkId = Objects.requireNonNull(connectedLinkId);
            return this;
        }
        public Builder connectionId(String connectionId) {
            this.connectionId = Objects.requireNonNull(connectionId);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder deviceId(String deviceId) {
            this.deviceId = Objects.requireNonNull(deviceId);
            return this;
        }
        public Builder globalNetworkId(String globalNetworkId) {
            this.globalNetworkId = Objects.requireNonNull(globalNetworkId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder linkId(String linkId) {
            this.linkId = Objects.requireNonNull(linkId);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }        public GetConnectionResult build() {
            return new GetConnectionResult(arn, connectedDeviceId, connectedLinkId, connectionId, description, deviceId, globalNetworkId, id, linkId, tags);
        }
    }
}
