// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetInstanceFilter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetInstanceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceArgs Empty = new GetInstanceArgs();

    /**
     * One or more name/value pairs to use as filters. There are
     * several valid keys, for a full reference, check out
     * [describe-instances in the AWS CLI reference][1].
     * 
     */
    @Import(name="filters")
    private Output</* @Nullable */ List<GetInstanceFilter>> filters;

    /**
     * @return One or more name/value pairs to use as filters. There are
     * several valid keys, for a full reference, check out
     * [describe-instances in the AWS CLI reference][1].
     * 
     */
    public Output</* @Nullable */ List<GetInstanceFilter>> filters() {
        return this.filters;
    }

    /**
     * If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     * 
     */
    @Import(name="getPasswordData")
    private Output</* @Nullable */ Boolean> getPasswordData;

    /**
     * @return If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     * 
     */
    public Output</* @Nullable */ Boolean> getPasswordData() {
        return this.getPasswordData;
    }

    /**
     * Retrieve Base64 encoded User Data contents into the `user_data_base64` attribute. A SHA-1 hash of the User Data contents will always be present in the `user_data` attribute. Defaults to `false`.
     * 
     */
    @Import(name="getUserData")
    private Output</* @Nullable */ Boolean> getUserData;

    /**
     * @return Retrieve Base64 encoded User Data contents into the `user_data_base64` attribute. A SHA-1 hash of the User Data contents will always be present in the `user_data` attribute. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getUserData() {
        return this.getUserData;
    }

    /**
     * Specify the exact Instance ID with which to populate the data source.
     * 
     */
    @Import(name="instanceId")
    private Output</* @Nullable */ String> instanceId;

    /**
     * @return Specify the exact Instance ID with which to populate the data source.
     * 
     */
    public Output</* @Nullable */ String> instanceId() {
        return this.instanceId;
    }

    /**
     * A map of tags, each pair of which must
     * exactly match a pair on the desired Instance.
     * 
     */
    @Import(name="instanceTags")
    private Output</* @Nullable */ Map<String,String>> instanceTags;

    /**
     * @return A map of tags, each pair of which must
     * exactly match a pair on the desired Instance.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> instanceTags() {
        return this.instanceTags;
    }

    /**
     * A map of tags assigned to the Instance.
     * 
     */
    @Import(name="tags")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags assigned to the Instance.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> tags() {
        return this.tags;
    }

    private GetInstanceArgs() {}

    private GetInstanceArgs(GetInstanceArgs $) {
        this.filters = $.filters;
        this.getPasswordData = $.getPasswordData;
        this.getUserData = $.getUserData;
        this.instanceId = $.instanceId;
        this.instanceTags = $.instanceTags;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceArgs $;

        public Builder() {
            $ = new GetInstanceArgs();
        }

        public Builder(GetInstanceArgs defaults) {
            $ = new GetInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters One or more name/value pairs to use as filters. There are
         * several valid keys, for a full reference, check out
         * [describe-instances in the AWS CLI reference][1].
         * 
         * @return builder
         * 
         */
        public Builder filters(Output</* @Nullable */ List<GetInstanceFilter>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters One or more name/value pairs to use as filters. There are
         * several valid keys, for a full reference, check out
         * [describe-instances in the AWS CLI reference][1].
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetInstanceFilter> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters One or more name/value pairs to use as filters. There are
         * several valid keys, for a full reference, check out
         * [describe-instances in the AWS CLI reference][1].
         * 
         * @return builder
         * 
         */
        public Builder filters(GetInstanceFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param getPasswordData If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
         * 
         * @return builder
         * 
         */
        public Builder getPasswordData(Output</* @Nullable */ Boolean> getPasswordData) {
            $.getPasswordData = getPasswordData;
            return this;
        }

        /**
         * @param getPasswordData If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
         * 
         * @return builder
         * 
         */
        public Builder getPasswordData(@Nullable Boolean getPasswordData) {
            return getPasswordData(Output.of(getPasswordData));
        }

        /**
         * @param getUserData Retrieve Base64 encoded User Data contents into the `user_data_base64` attribute. A SHA-1 hash of the User Data contents will always be present in the `user_data` attribute. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder getUserData(Output</* @Nullable */ Boolean> getUserData) {
            $.getUserData = getUserData;
            return this;
        }

        /**
         * @param getUserData Retrieve Base64 encoded User Data contents into the `user_data_base64` attribute. A SHA-1 hash of the User Data contents will always be present in the `user_data` attribute. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder getUserData(@Nullable Boolean getUserData) {
            return getUserData(Output.of(getUserData));
        }

        /**
         * @param instanceId Specify the exact Instance ID with which to populate the data source.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output</* @Nullable */ String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Specify the exact Instance ID with which to populate the data source.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param instanceTags A map of tags, each pair of which must
         * exactly match a pair on the desired Instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceTags(Output</* @Nullable */ Map<String,String>> instanceTags) {
            $.instanceTags = instanceTags;
            return this;
        }

        /**
         * @param instanceTags A map of tags, each pair of which must
         * exactly match a pair on the desired Instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceTags(@Nullable Map<String,String> instanceTags) {
            return instanceTags(Output.of(instanceTags));
        }

        /**
         * @param tags A map of tags assigned to the Instance.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output</* @Nullable */ Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags assigned to the Instance.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GetInstanceArgs build() {
            return $;
        }
    }

}
