// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2.inputs;

import com.pulumi.aws.ec2.inputs.GetInstanceFilter;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstanceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceArgs Empty = new GetInstanceArgs();

    /**
     * One or more name/value pairs to use as filters. There are
     * several valid keys, for a full reference, check out
     * [describe-instances in the AWS CLI reference][1].
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetInstanceFilter> filters;

    public Optional<List<GetInstanceFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
     * 
     */
    @Import(name="getPasswordData")
    private @Nullable Boolean getPasswordData;

    public Optional<Boolean> getPasswordData() {
        return Optional.ofNullable(this.getPasswordData);
    }

    /**
     * Retrieve Base64 encoded User Data contents into the `user_data_base64` attribute. A SHA-1 hash of the User Data contents will always be present in the `user_data` attribute. Defaults to `false`.
     * 
     */
    @Import(name="getUserData")
    private @Nullable Boolean getUserData;

    public Optional<Boolean> getUserData() {
        return Optional.ofNullable(this.getUserData);
    }

    /**
     * Specify the exact Instance ID with which to populate the data source.
     * 
     */
    @Import(name="instanceId")
    private @Nullable String instanceId;

    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * A map of tags, each pair of which must
     * exactly match a pair on the desired Instance.
     * 
     */
    @Import(name="instanceTags")
    private @Nullable Map<String,String> instanceTags;

    public Optional<Map<String,String>> instanceTags() {
        return Optional.ofNullable(this.instanceTags);
    }

    /**
     * A map of tags assigned to the Instance.
     * 
     */
    @Import(name="tags")
    private @Nullable Map<String,String> tags;

    public Optional<Map<String,String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetInstanceArgs() {}

    private GetInstanceArgs(GetInstanceArgs $) {
        this.filters = $.filters;
        this.getPasswordData = $.getPasswordData;
        this.getUserData = $.getUserData;
        this.instanceId = $.instanceId;
        this.instanceTags = $.instanceTags;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceArgs $;

        public Builder() {
            $ = new GetInstanceArgs();
        }

        public Builder(GetInstanceArgs defaults) {
            $ = new GetInstanceArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetInstanceFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetInstanceFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder getPasswordData(@Nullable Boolean getPasswordData) {
            $.getPasswordData = getPasswordData;
            return this;
        }

        public Builder getUserData(@Nullable Boolean getUserData) {
            $.getUserData = getUserData;
            return this;
        }

        public Builder instanceId(@Nullable String instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        public Builder instanceTags(@Nullable Map<String,String> instanceTags) {
            $.instanceTags = instanceTags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            $.tags = tags;
            return this;
        }

        public GetInstanceArgs build() {
            return $;
        }
    }

}
