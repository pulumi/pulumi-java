// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.apprunner.inputs;

import com.pulumi.aws.apprunner.inputs.ServiceSourceConfigurationImageRepositoryImageConfigurationGetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceSourceConfigurationImageRepositoryGetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceSourceConfigurationImageRepositoryGetArgs Empty = new ServiceSourceConfigurationImageRepositoryGetArgs();

    /**
     * Configuration for running the identified image. See Image Configuration below for more details.
     * 
     */
    @Import(name="imageConfiguration")
    private @Nullable Output<ServiceSourceConfigurationImageRepositoryImageConfigurationGetArgs> imageConfiguration;

    public Optional<Output<ServiceSourceConfigurationImageRepositoryImageConfigurationGetArgs>> imageConfiguration() {
        return Optional.ofNullable(this.imageConfiguration);
    }

    /**
     * The identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
     * image name format, see Pulling an image in the Amazon ECR User Guide.
     * 
     */
    @Import(name="imageIdentifier", required=true)
    private Output<String> imageIdentifier;

    public Output<String> imageIdentifier() {
        return this.imageIdentifier;
    }

    /**
     * The type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: `ECR` , `ECR_PUBLIC`.
     * 
     */
    @Import(name="imageRepositoryType", required=true)
    private Output<String> imageRepositoryType;

    public Output<String> imageRepositoryType() {
        return this.imageRepositoryType;
    }

    private ServiceSourceConfigurationImageRepositoryGetArgs() {}

    private ServiceSourceConfigurationImageRepositoryGetArgs(ServiceSourceConfigurationImageRepositoryGetArgs $) {
        this.imageConfiguration = $.imageConfiguration;
        this.imageIdentifier = $.imageIdentifier;
        this.imageRepositoryType = $.imageRepositoryType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceSourceConfigurationImageRepositoryGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceSourceConfigurationImageRepositoryGetArgs $;

        public Builder() {
            $ = new ServiceSourceConfigurationImageRepositoryGetArgs();
        }

        public Builder(ServiceSourceConfigurationImageRepositoryGetArgs defaults) {
            $ = new ServiceSourceConfigurationImageRepositoryGetArgs(Objects.requireNonNull(defaults));
        }

        public Builder imageConfiguration(@Nullable Output<ServiceSourceConfigurationImageRepositoryImageConfigurationGetArgs> imageConfiguration) {
            $.imageConfiguration = imageConfiguration;
            return this;
        }

        public Builder imageConfiguration(ServiceSourceConfigurationImageRepositoryImageConfigurationGetArgs imageConfiguration) {
            return imageConfiguration(Output.of(imageConfiguration));
        }

        public Builder imageIdentifier(Output<String> imageIdentifier) {
            $.imageIdentifier = imageIdentifier;
            return this;
        }

        public Builder imageIdentifier(String imageIdentifier) {
            return imageIdentifier(Output.of(imageIdentifier));
        }

        public Builder imageRepositoryType(Output<String> imageRepositoryType) {
            $.imageRepositoryType = imageRepositoryType;
            return this;
        }

        public Builder imageRepositoryType(String imageRepositoryType) {
            return imageRepositoryType(Output.of(imageRepositoryType));
        }

        public ServiceSourceConfigurationImageRepositoryGetArgs build() {
            $.imageIdentifier = Objects.requireNonNull($.imageIdentifier, "expected parameter 'imageIdentifier' to be non-null");
            $.imageRepositoryType = Objects.requireNonNull($.imageRepositoryType, "expected parameter 'imageRepositoryType' to be non-null");
            return $;
        }
    }

}
