// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class TopicRuleS3Args extends com.pulumi.resources.ResourceArgs {

    public static final TopicRuleS3Args Empty = new TopicRuleS3Args();

    /**
     * The Amazon S3 bucket name.
     * 
     */
    @Import(name="bucketName", required=true)
    private Output<String> bucketName;

    /**
     * @return The Amazon S3 bucket name.
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }

    /**
     * The object key.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return The object key.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * The IAM role ARN that allows access to the CloudWatch alarm.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The IAM role ARN that allows access to the CloudWatch alarm.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    private TopicRuleS3Args() {}

    private TopicRuleS3Args(TopicRuleS3Args $) {
        this.bucketName = $.bucketName;
        this.key = $.key;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRuleS3Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRuleS3Args $;

        public Builder() {
            $ = new TopicRuleS3Args();
        }

        public Builder(TopicRuleS3Args defaults) {
            $ = new TopicRuleS3Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketName The Amazon S3 bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName The Amazon S3 bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param key The object key.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The object key.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param roleArn The IAM role ARN that allows access to the CloudWatch alarm.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The IAM role ARN that allows access to the CloudWatch alarm.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public TopicRuleS3Args build() {
            $.bucketName = Objects.requireNonNull($.bucketName, "expected parameter 'bucketName' to be non-null");
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
