// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.route53;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.route53.ResolverRuleAssociationArgs;
import io.pulumi.aws.route53.inputs.ResolverRuleAssociationState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Route53 Resolver rule association.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.route53.ResolverRuleAssociation("example", {
 *     resolverRuleId: aws_route53_resolver_rule.sys.id,
 *     vpcId: aws_vpc.foo.id,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.route53.ResolverRuleAssociation("example",
 *     resolver_rule_id=aws_route53_resolver_rule["sys"]["id"],
 *     vpc_id=aws_vpc["foo"]["id"])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Route53.ResolverRuleAssociation("example", new Aws.Route53.ResolverRuleAssociationArgs
 *         {
 *             ResolverRuleId = aws_route53_resolver_rule.Sys.Id,
 *             VpcId = aws_vpc.Foo.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/route53"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := route53.NewResolverRuleAssociation(ctx, "example", &route53.ResolverRuleAssociationArgs{
 * 			ResolverRuleId: pulumi.Any(aws_route53_resolver_rule.Sys.Id),
 * 			VpcId:          pulumi.Any(aws_vpc.Foo.Id),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Route53 Resolver rule associations can be imported using the `id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:route53/resolverRuleAssociation:ResolverRuleAssociation example rslvr-rrassoc-97242eaf88example
 * ```
 * 
 *  
 */
@ResourceType(type="aws:route53/resolverRuleAssociation:ResolverRuleAssociation")
public class ResolverRuleAssociation extends io.pulumi.resources.CustomResource {
    /**
     * A name for the association that you're creating between a resolver rule and a VPC.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A name for the association that you're creating between a resolver rule and a VPC.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the resolver rule that you want to associate with the VPC.
     * 
     */
    @Export(name="resolverRuleId", type=String.class, parameters={})
    private Output<String> resolverRuleId;

    /**
     * @return The ID of the resolver rule that you want to associate with the VPC.
     * 
     */
    public Output<String> getResolverRuleId() {
        return this.resolverRuleId;
    }
    /**
     * The ID of the VPC that you want to associate the resolver rule with.
     * 
     */
    @Export(name="vpcId", type=String.class, parameters={})
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC that you want to associate the resolver rule with.
     * 
     */
    public Output<String> getVpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ResolverRuleAssociation(String name) {
        this(name, ResolverRuleAssociationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ResolverRuleAssociation(String name, ResolverRuleAssociationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ResolverRuleAssociation(String name, ResolverRuleAssociationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:route53/resolverRuleAssociation:ResolverRuleAssociation", name, args == null ? ResolverRuleAssociationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ResolverRuleAssociation(String name, Output<String> id, @Nullable ResolverRuleAssociationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:route53/resolverRuleAssociation:ResolverRuleAssociation", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ResolverRuleAssociation get(String name, Output<String> id, @Nullable ResolverRuleAssociationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ResolverRuleAssociation(name, id, state, options);
    }
}
