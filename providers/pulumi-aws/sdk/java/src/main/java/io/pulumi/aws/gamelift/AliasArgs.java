// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.gamelift;

import io.pulumi.aws.gamelift.inputs.AliasRoutingStrategyArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AliasArgs extends io.pulumi.resources.ResourceArgs {

    public static final AliasArgs Empty = new AliasArgs();

    /**
     * Description of the alias.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Name of the alias.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Specifies the fleet and/or routing type to use for the alias.
     * 
     */
    @InputImport(name="routingStrategy", required=true)
      private final Input<AliasRoutingStrategyArgs> routingStrategy;

    public Input<AliasRoutingStrategyArgs> getRoutingStrategy() {
        return this.routingStrategy;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public AliasArgs(
        @Nullable Input<String> description,
        @Nullable Input<String> name,
        Input<AliasRoutingStrategyArgs> routingStrategy,
        @Nullable Input<Map<String,String>> tags) {
        this.description = description;
        this.name = name;
        this.routingStrategy = Objects.requireNonNull(routingStrategy, "expected parameter 'routingStrategy' to be non-null");
        this.tags = tags;
    }

    private AliasArgs() {
        this.description = Input.empty();
        this.name = Input.empty();
        this.routingStrategy = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> name;
        private Input<AliasRoutingStrategyArgs> routingStrategy;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AliasArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.routingStrategy = defaults.routingStrategy;
    	      this.tags = defaults.tags;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder routingStrategy(Input<AliasRoutingStrategyArgs> routingStrategy) {
            this.routingStrategy = Objects.requireNonNull(routingStrategy);
            return this;
        }

        public Builder routingStrategy(AliasRoutingStrategyArgs routingStrategy) {
            this.routingStrategy = Input.of(Objects.requireNonNull(routingStrategy));
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public AliasArgs build() {
            return new AliasArgs(description, name, routingStrategy, tags);
        }
    }
}
