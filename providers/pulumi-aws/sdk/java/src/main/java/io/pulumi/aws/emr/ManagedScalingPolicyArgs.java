// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.emr;

import io.pulumi.aws.emr.inputs.ManagedScalingPolicyComputeLimitArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ManagedScalingPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ManagedScalingPolicyArgs Empty = new ManagedScalingPolicyArgs();

    /**
     * The id of the EMR cluster
     * 
     */
    @InputImport(name="clusterId", required=true)
      private final Input<String> clusterId;

    public Input<String> getClusterId() {
        return this.clusterId;
    }

    /**
     * Configuration block with compute limit settings. Described below.
     * 
     */
    @InputImport(name="computeLimits", required=true)
      private final Input<List<ManagedScalingPolicyComputeLimitArgs>> computeLimits;

    public Input<List<ManagedScalingPolicyComputeLimitArgs>> getComputeLimits() {
        return this.computeLimits;
    }

    public ManagedScalingPolicyArgs(
        Input<String> clusterId,
        Input<List<ManagedScalingPolicyComputeLimitArgs>> computeLimits) {
        this.clusterId = Objects.requireNonNull(clusterId, "expected parameter 'clusterId' to be non-null");
        this.computeLimits = Objects.requireNonNull(computeLimits, "expected parameter 'computeLimits' to be non-null");
    }

    private ManagedScalingPolicyArgs() {
        this.clusterId = Input.empty();
        this.computeLimits = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedScalingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> clusterId;
        private Input<List<ManagedScalingPolicyComputeLimitArgs>> computeLimits;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedScalingPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.computeLimits = defaults.computeLimits;
        }

        public Builder setClusterId(Input<String> clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }

        public Builder setClusterId(String clusterId) {
            this.clusterId = Input.of(Objects.requireNonNull(clusterId));
            return this;
        }

        public Builder setComputeLimits(Input<List<ManagedScalingPolicyComputeLimitArgs>> computeLimits) {
            this.computeLimits = Objects.requireNonNull(computeLimits);
            return this;
        }

        public Builder setComputeLimits(List<ManagedScalingPolicyComputeLimitArgs> computeLimits) {
            this.computeLimits = Input.of(Objects.requireNonNull(computeLimits));
            return this;
        }
        public ManagedScalingPolicyArgs build() {
            return new ManagedScalingPolicyArgs(clusterId, computeLimits);
        }
    }
}
