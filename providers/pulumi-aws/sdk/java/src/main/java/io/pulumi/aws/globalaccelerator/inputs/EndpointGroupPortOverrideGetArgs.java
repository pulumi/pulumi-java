// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.globalaccelerator.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;


public final class EndpointGroupPortOverrideGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final EndpointGroupPortOverrideGetArgs Empty = new EndpointGroupPortOverrideGetArgs();

    /**
     * The endpoint port that you want a listener port to be mapped to. This is the port on the endpoint, such as the Application Load Balancer or Amazon EC2 instance.
     * 
     */
    @InputImport(name="endpointPort", required=true)
    private final Input<Integer> endpointPort;

    public Input<Integer> getEndpointPort() {
        return this.endpointPort;
    }

    /**
     * The listener port that you want to map to a specific endpoint port. This is the port that user traffic arrives to the Global Accelerator on.
     * 
     */
    @InputImport(name="listenerPort", required=true)
    private final Input<Integer> listenerPort;

    public Input<Integer> getListenerPort() {
        return this.listenerPort;
    }

    public EndpointGroupPortOverrideGetArgs(
        Input<Integer> endpointPort,
        Input<Integer> listenerPort) {
        this.endpointPort = Objects.requireNonNull(endpointPort, "expected parameter 'endpointPort' to be non-null");
        this.listenerPort = Objects.requireNonNull(listenerPort, "expected parameter 'listenerPort' to be non-null");
    }

    private EndpointGroupPortOverrideGetArgs() {
        this.endpointPort = Input.empty();
        this.listenerPort = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointGroupPortOverrideGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> endpointPort;
        private Input<Integer> listenerPort;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointGroupPortOverrideGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointPort = defaults.endpointPort;
    	      this.listenerPort = defaults.listenerPort;
        }

        public Builder setEndpointPort(Input<Integer> endpointPort) {
            this.endpointPort = Objects.requireNonNull(endpointPort);
            return this;
        }

        public Builder setEndpointPort(Integer endpointPort) {
            this.endpointPort = Input.of(Objects.requireNonNull(endpointPort));
            return this;
        }

        public Builder setListenerPort(Input<Integer> listenerPort) {
            this.listenerPort = Objects.requireNonNull(listenerPort);
            return this;
        }

        public Builder setListenerPort(Integer listenerPort) {
            this.listenerPort = Input.of(Objects.requireNonNull(listenerPort));
            return this;
        }
        public EndpointGroupPortOverrideGetArgs build() {
            return new EndpointGroupPortOverrideGetArgs(endpointPort, listenerPort);
        }
    }
}
