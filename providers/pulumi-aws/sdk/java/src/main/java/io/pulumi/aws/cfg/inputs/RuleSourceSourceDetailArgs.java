// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cfg.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RuleSourceSourceDetailArgs extends io.pulumi.resources.ResourceArgs {

    public static final RuleSourceSourceDetailArgs Empty = new RuleSourceSourceDetailArgs();

    /**
     * The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWS resources. This defaults to `aws.config` and is the only valid value.
     * 
     */
    @InputImport(name="eventSource")
      private final @Nullable Output<String> eventSource;

    public Output<String> getEventSource() {
        return this.eventSource == null ? Output.empty() : this.eventSource;
    }

    /**
     * The frequency that you want AWS Config to run evaluations for a rule that is triggered periodically. If specified, requires `message_type` to be `ScheduledNotification`.
     * 
     */
    @InputImport(name="maximumExecutionFrequency")
      private final @Nullable Output<String> maximumExecutionFrequency;

    public Output<String> getMaximumExecutionFrequency() {
        return this.maximumExecutionFrequency == null ? Output.empty() : this.maximumExecutionFrequency;
    }

    /**
     * The type of notification that triggers AWS Config to run an evaluation for a rule. You can specify the following notification types:
     * 
     */
    @InputImport(name="messageType")
      private final @Nullable Output<String> messageType;

    public Output<String> getMessageType() {
        return this.messageType == null ? Output.empty() : this.messageType;
    }

    public RuleSourceSourceDetailArgs(
        @Nullable Output<String> eventSource,
        @Nullable Output<String> maximumExecutionFrequency,
        @Nullable Output<String> messageType) {
        this.eventSource = eventSource;
        this.maximumExecutionFrequency = maximumExecutionFrequency;
        this.messageType = messageType;
    }

    private RuleSourceSourceDetailArgs() {
        this.eventSource = Output.empty();
        this.maximumExecutionFrequency = Output.empty();
        this.messageType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleSourceSourceDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> eventSource;
        private @Nullable Output<String> maximumExecutionFrequency;
        private @Nullable Output<String> messageType;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleSourceSourceDetailArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventSource = defaults.eventSource;
    	      this.maximumExecutionFrequency = defaults.maximumExecutionFrequency;
    	      this.messageType = defaults.messageType;
        }

        public Builder eventSource(@Nullable Output<String> eventSource) {
            this.eventSource = eventSource;
            return this;
        }

        public Builder eventSource(@Nullable String eventSource) {
            this.eventSource = Output.ofNullable(eventSource);
            return this;
        }

        public Builder maximumExecutionFrequency(@Nullable Output<String> maximumExecutionFrequency) {
            this.maximumExecutionFrequency = maximumExecutionFrequency;
            return this;
        }

        public Builder maximumExecutionFrequency(@Nullable String maximumExecutionFrequency) {
            this.maximumExecutionFrequency = Output.ofNullable(maximumExecutionFrequency);
            return this;
        }

        public Builder messageType(@Nullable Output<String> messageType) {
            this.messageType = messageType;
            return this;
        }

        public Builder messageType(@Nullable String messageType) {
            this.messageType = Output.ofNullable(messageType);
            return this;
        }
        public RuleSourceSourceDetailArgs build() {
            return new RuleSourceSourceDetailArgs(eventSource, maximumExecutionFrequency, messageType);
        }
    }
}
