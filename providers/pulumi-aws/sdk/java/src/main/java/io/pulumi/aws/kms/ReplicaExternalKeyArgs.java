// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.kms;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ReplicaExternalKeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ReplicaExternalKeyArgs Empty = new ReplicaExternalKeyArgs();

    /**
     * A flag to indicate whether to bypass the key policy lockout safety check.
     * Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
     * For more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.
     * The default value is `false`.
     * 
     */
    @InputImport(name="bypassPolicyLockoutSafetyCheck")
    private final @Nullable Input<Boolean> bypassPolicyLockoutSafetyCheck;

    public Input<Boolean> getBypassPolicyLockoutSafetyCheck() {
        return this.bypassPolicyLockoutSafetyCheck == null ? Input.empty() : this.bypassPolicyLockoutSafetyCheck;
    }

    /**
     * The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
     * If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`.
     * 
     */
    @InputImport(name="deletionWindowInDays")
    private final @Nullable Input<Integer> deletionWindowInDays;

    public Input<Integer> getDeletionWindowInDays() {
        return this.deletionWindowInDays == null ? Input.empty() : this.deletionWindowInDays;
    }

    /**
     * A description of the KMS key.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. Keys pending import can only be `false`. Imported keys default to `true` unless expired.
     * 
     */
    @InputImport(name="enabled")
    private final @Nullable Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled == null ? Input.empty() : this.enabled;
    }

    /**
     * Base64 encoded 256-bit symmetric encryption key material to import. The KMS key is permanently associated with this key material. The same key material can be [reimported](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html#reimport-key-material), but you cannot import different key material.
     * 
     */
    @InputImport(name="keyMaterialBase64")
    private final @Nullable Input<String> keyMaterialBase64;

    public Input<String> getKeyMaterialBase64() {
        return this.keyMaterialBase64 == null ? Input.empty() : this.keyMaterialBase64;
    }

    @InputImport(name="policy")
    private final @Nullable Input<String> policy;

    public Input<String> getPolicy() {
        return this.policy == null ? Input.empty() : this.policy;
    }

    /**
     * The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region.
     * 
     */
    @InputImport(name="primaryKeyArn", required=true)
    private final Input<String> primaryKeyArn;

    public Input<String> getPrimaryKeyArn() {
        return this.primaryKeyArn;
    }

    /**
     * A map of tags to assign to the replica key. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the key becomes unusable. If not specified, key material does not expire. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     * 
     */
    @InputImport(name="validTo")
    private final @Nullable Input<String> validTo;

    public Input<String> getValidTo() {
        return this.validTo == null ? Input.empty() : this.validTo;
    }

    public ReplicaExternalKeyArgs(
        @Nullable Input<Boolean> bypassPolicyLockoutSafetyCheck,
        @Nullable Input<Integer> deletionWindowInDays,
        @Nullable Input<String> description,
        @Nullable Input<Boolean> enabled,
        @Nullable Input<String> keyMaterialBase64,
        @Nullable Input<String> policy,
        Input<String> primaryKeyArn,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<String> validTo) {
        this.bypassPolicyLockoutSafetyCheck = bypassPolicyLockoutSafetyCheck;
        this.deletionWindowInDays = deletionWindowInDays;
        this.description = description;
        this.enabled = enabled;
        this.keyMaterialBase64 = keyMaterialBase64;
        this.policy = policy;
        this.primaryKeyArn = Objects.requireNonNull(primaryKeyArn, "expected parameter 'primaryKeyArn' to be non-null");
        this.tags = tags;
        this.validTo = validTo;
    }

    private ReplicaExternalKeyArgs() {
        this.bypassPolicyLockoutSafetyCheck = Input.empty();
        this.deletionWindowInDays = Input.empty();
        this.description = Input.empty();
        this.enabled = Input.empty();
        this.keyMaterialBase64 = Input.empty();
        this.policy = Input.empty();
        this.primaryKeyArn = Input.empty();
        this.tags = Input.empty();
        this.validTo = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicaExternalKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> bypassPolicyLockoutSafetyCheck;
        private @Nullable Input<Integer> deletionWindowInDays;
        private @Nullable Input<String> description;
        private @Nullable Input<Boolean> enabled;
        private @Nullable Input<String> keyMaterialBase64;
        private @Nullable Input<String> policy;
        private Input<String> primaryKeyArn;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<String> validTo;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicaExternalKeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bypassPolicyLockoutSafetyCheck = defaults.bypassPolicyLockoutSafetyCheck;
    	      this.deletionWindowInDays = defaults.deletionWindowInDays;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.keyMaterialBase64 = defaults.keyMaterialBase64;
    	      this.policy = defaults.policy;
    	      this.primaryKeyArn = defaults.primaryKeyArn;
    	      this.tags = defaults.tags;
    	      this.validTo = defaults.validTo;
        }

        public Builder setBypassPolicyLockoutSafetyCheck(@Nullable Input<Boolean> bypassPolicyLockoutSafetyCheck) {
            this.bypassPolicyLockoutSafetyCheck = bypassPolicyLockoutSafetyCheck;
            return this;
        }

        public Builder setBypassPolicyLockoutSafetyCheck(@Nullable Boolean bypassPolicyLockoutSafetyCheck) {
            this.bypassPolicyLockoutSafetyCheck = Input.ofNullable(bypassPolicyLockoutSafetyCheck);
            return this;
        }

        public Builder setDeletionWindowInDays(@Nullable Input<Integer> deletionWindowInDays) {
            this.deletionWindowInDays = deletionWindowInDays;
            return this;
        }

        public Builder setDeletionWindowInDays(@Nullable Integer deletionWindowInDays) {
            this.deletionWindowInDays = Input.ofNullable(deletionWindowInDays);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setEnabled(@Nullable Input<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = Input.ofNullable(enabled);
            return this;
        }

        public Builder setKeyMaterialBase64(@Nullable Input<String> keyMaterialBase64) {
            this.keyMaterialBase64 = keyMaterialBase64;
            return this;
        }

        public Builder setKeyMaterialBase64(@Nullable String keyMaterialBase64) {
            this.keyMaterialBase64 = Input.ofNullable(keyMaterialBase64);
            return this;
        }

        public Builder setPolicy(@Nullable Input<String> policy) {
            this.policy = policy;
            return this;
        }

        public Builder setPolicy(@Nullable String policy) {
            this.policy = Input.ofNullable(policy);
            return this;
        }

        public Builder setPrimaryKeyArn(Input<String> primaryKeyArn) {
            this.primaryKeyArn = Objects.requireNonNull(primaryKeyArn);
            return this;
        }

        public Builder setPrimaryKeyArn(String primaryKeyArn) {
            this.primaryKeyArn = Input.of(Objects.requireNonNull(primaryKeyArn));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setValidTo(@Nullable Input<String> validTo) {
            this.validTo = validTo;
            return this;
        }

        public Builder setValidTo(@Nullable String validTo) {
            this.validTo = Input.ofNullable(validTo);
            return this;
        }
        public ReplicaExternalKeyArgs build() {
            return new ReplicaExternalKeyArgs(bypassPolicyLockoutSafetyCheck, deletionWindowInDays, description, enabled, keyMaterialBase64, policy, primaryKeyArn, tags, validTo);
        }
    }
}
