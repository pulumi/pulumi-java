// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cognito.inputs;

import io.pulumi.aws.cognito.inputs.IdentityPoolRoleAttachmentRoleMappingGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IdentityPoolRoleAttachmentState extends io.pulumi.resources.ResourceArgs {

    public static final IdentityPoolRoleAttachmentState Empty = new IdentityPoolRoleAttachmentState();

    /**
     * An identity pool ID in the format REGION:GUID.
     * 
     */
    @Import(name="identityPoolId")
      private final @Nullable Output<String> identityPoolId;

    public Output<String> getIdentityPoolId() {
        return this.identityPoolId == null ? Output.empty() : this.identityPoolId;
    }

    /**
     * A List of Role Mapping.
     * 
     */
    @Import(name="roleMappings")
      private final @Nullable Output<List<IdentityPoolRoleAttachmentRoleMappingGetArgs>> roleMappings;

    public Output<List<IdentityPoolRoleAttachmentRoleMappingGetArgs>> getRoleMappings() {
        return this.roleMappings == null ? Output.empty() : this.roleMappings;
    }

    /**
     * The map of roles associated with this pool. For a given role, the key will be either "authenticated" or "unauthenticated" and the value will be the Role ARN.
     * 
     */
    @Import(name="roles")
      private final @Nullable Output<Map<String,String>> roles;

    public Output<Map<String,String>> getRoles() {
        return this.roles == null ? Output.empty() : this.roles;
    }

    public IdentityPoolRoleAttachmentState(
        @Nullable Output<String> identityPoolId,
        @Nullable Output<List<IdentityPoolRoleAttachmentRoleMappingGetArgs>> roleMappings,
        @Nullable Output<Map<String,String>> roles) {
        this.identityPoolId = identityPoolId;
        this.roleMappings = roleMappings;
        this.roles = roles;
    }

    private IdentityPoolRoleAttachmentState() {
        this.identityPoolId = Output.empty();
        this.roleMappings = Output.empty();
        this.roles = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IdentityPoolRoleAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> identityPoolId;
        private @Nullable Output<List<IdentityPoolRoleAttachmentRoleMappingGetArgs>> roleMappings;
        private @Nullable Output<Map<String,String>> roles;

        public Builder() {
    	      // Empty
        }

        public Builder(IdentityPoolRoleAttachmentState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityPoolId = defaults.identityPoolId;
    	      this.roleMappings = defaults.roleMappings;
    	      this.roles = defaults.roles;
        }

        public Builder identityPoolId(@Nullable Output<String> identityPoolId) {
            this.identityPoolId = identityPoolId;
            return this;
        }

        public Builder identityPoolId(@Nullable String identityPoolId) {
            this.identityPoolId = Output.ofNullable(identityPoolId);
            return this;
        }

        public Builder roleMappings(@Nullable Output<List<IdentityPoolRoleAttachmentRoleMappingGetArgs>> roleMappings) {
            this.roleMappings = roleMappings;
            return this;
        }

        public Builder roleMappings(@Nullable List<IdentityPoolRoleAttachmentRoleMappingGetArgs> roleMappings) {
            this.roleMappings = Output.ofNullable(roleMappings);
            return this;
        }

        public Builder roles(@Nullable Output<Map<String,String>> roles) {
            this.roles = roles;
            return this;
        }

        public Builder roles(@Nullable Map<String,String> roles) {
            this.roles = Output.ofNullable(roles);
            return this;
        }
        public IdentityPoolRoleAttachmentState build() {
            return new IdentityPoolRoleAttachmentState(identityPoolId, roleMappings, roles);
        }
    }
}
