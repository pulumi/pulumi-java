// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.networkfirewall;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.networkfirewall.LoggingConfigurationArgs;
import io.pulumi.aws.networkfirewall.inputs.LoggingConfigurationState;
import io.pulumi.aws.networkfirewall.outputs.LoggingConfigurationLoggingConfiguration;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an AWS Network Firewall Logging Configuration Resource
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Logging to S3
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.networkfirewall.LoggingConfiguration("example", {
 *     firewallArn: aws_networkfirewall_firewall.example.arn,
 *     loggingConfiguration: {
 *         logDestinationConfigs: [{
 *             logDestination: {
 *                 bucketName: aws_s3_bucket.example.bucket,
 *                 prefix: "/example",
 *             },
 *             logDestinationType: "S3",
 *             logType: "FLOW",
 *         }],
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.networkfirewall.LoggingConfiguration("example",
 *     firewall_arn=aws_networkfirewall_firewall["example"]["arn"],
 *     logging_configuration=aws.networkfirewall.LoggingConfigurationLoggingConfigurationArgs(
 *         log_destination_configs=[aws.networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs(
 *             log_destination={
 *                 "bucketName": aws_s3_bucket["example"]["bucket"],
 *                 "prefix": "/example",
 *             },
 *             log_destination_type="S3",
 *             log_type="FLOW",
 *         )],
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.NetworkFirewall.LoggingConfiguration("example", new Aws.NetworkFirewall.LoggingConfigurationArgs
 *         {
 *             FirewallArn = aws_networkfirewall_firewall.Example.Arn,
 *             LoggingConfiguration = new Aws.NetworkFirewall.Inputs.LoggingConfigurationLoggingConfigurationArgs
 *             {
 *                 LogDestinationConfigs = 
 *                 {
 *                     new Aws.NetworkFirewall.Inputs.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs
 *                     {
 *                         LogDestination = 
 *                         {
 *                             { "bucketName", aws_s3_bucket.Example.Bucket },
 *                             { "prefix", "/example" },
 *                         },
 *                         LogDestinationType = "S3",
 *                         LogType = "FLOW",
 *                     },
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/networkfirewall"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := networkfirewall.NewLoggingConfiguration(ctx, "example", &networkfirewall.LoggingConfigurationArgs{
 * 			FirewallArn: pulumi.Any(aws_networkfirewall_firewall.Example.Arn),
 * 			LoggingConfiguration: &networkfirewall.LoggingConfigurationLoggingConfigurationArgs{
 * 				LogDestinationConfigs: networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArray{
 * 					&networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs{
 * 						LogDestination: pulumi.StringMap{
 * 							"bucketName": pulumi.Any(aws_s3_bucket.Example.Bucket),
 * 							"prefix":     pulumi.String("/example"),
 * 						},
 * 						LogDestinationType: pulumi.String("S3"),
 * 						LogType:            pulumi.String("FLOW"),
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Logging to CloudWatch
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.networkfirewall.LoggingConfiguration("example", {
 *     firewallArn: aws_networkfirewall_firewall.example.arn,
 *     loggingConfiguration: {
 *         logDestinationConfigs: [{
 *             logDestination: {
 *                 logGroup: aws_cloudwatch_log_group.example.name,
 *             },
 *             logDestinationType: "CloudWatchLogs",
 *             logType: "ALERT",
 *         }],
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.networkfirewall.LoggingConfiguration("example",
 *     firewall_arn=aws_networkfirewall_firewall["example"]["arn"],
 *     logging_configuration=aws.networkfirewall.LoggingConfigurationLoggingConfigurationArgs(
 *         log_destination_configs=[aws.networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs(
 *             log_destination={
 *                 "logGroup": aws_cloudwatch_log_group["example"]["name"],
 *             },
 *             log_destination_type="CloudWatchLogs",
 *             log_type="ALERT",
 *         )],
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.NetworkFirewall.LoggingConfiguration("example", new Aws.NetworkFirewall.LoggingConfigurationArgs
 *         {
 *             FirewallArn = aws_networkfirewall_firewall.Example.Arn,
 *             LoggingConfiguration = new Aws.NetworkFirewall.Inputs.LoggingConfigurationLoggingConfigurationArgs
 *             {
 *                 LogDestinationConfigs = 
 *                 {
 *                     new Aws.NetworkFirewall.Inputs.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs
 *                     {
 *                         LogDestination = 
 *                         {
 *                             { "logGroup", aws_cloudwatch_log_group.Example.Name },
 *                         },
 *                         LogDestinationType = "CloudWatchLogs",
 *                         LogType = "ALERT",
 *                     },
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/networkfirewall"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := networkfirewall.NewLoggingConfiguration(ctx, "example", &networkfirewall.LoggingConfigurationArgs{
 * 			FirewallArn: pulumi.Any(aws_networkfirewall_firewall.Example.Arn),
 * 			LoggingConfiguration: &networkfirewall.LoggingConfigurationLoggingConfigurationArgs{
 * 				LogDestinationConfigs: networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArray{
 * 					&networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs{
 * 						LogDestination: pulumi.StringMap{
 * 							"logGroup": pulumi.Any(aws_cloudwatch_log_group.Example.Name),
 * 						},
 * 						LogDestinationType: pulumi.String("CloudWatchLogs"),
 * 						LogType:            pulumi.String("ALERT"),
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Logging to Kinesis Data Firehose
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.networkfirewall.LoggingConfiguration("example", {
 *     firewallArn: aws_networkfirewall_firewall.example.arn,
 *     loggingConfiguration: {
 *         logDestinationConfigs: [{
 *             logDestination: {
 *                 deliveryStream: aws_kinesis_firehose_delivery_stream.example.name,
 *             },
 *             logDestinationType: "KinesisDataFirehose",
 *             logType: "ALERT",
 *         }],
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.networkfirewall.LoggingConfiguration("example",
 *     firewall_arn=aws_networkfirewall_firewall["example"]["arn"],
 *     logging_configuration=aws.networkfirewall.LoggingConfigurationLoggingConfigurationArgs(
 *         log_destination_configs=[aws.networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs(
 *             log_destination={
 *                 "deliveryStream": aws_kinesis_firehose_delivery_stream["example"]["name"],
 *             },
 *             log_destination_type="KinesisDataFirehose",
 *             log_type="ALERT",
 *         )],
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.NetworkFirewall.LoggingConfiguration("example", new Aws.NetworkFirewall.LoggingConfigurationArgs
 *         {
 *             FirewallArn = aws_networkfirewall_firewall.Example.Arn,
 *             LoggingConfiguration = new Aws.NetworkFirewall.Inputs.LoggingConfigurationLoggingConfigurationArgs
 *             {
 *                 LogDestinationConfigs = 
 *                 {
 *                     new Aws.NetworkFirewall.Inputs.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs
 *                     {
 *                         LogDestination = 
 *                         {
 *                             { "deliveryStream", aws_kinesis_firehose_delivery_stream.Example.Name },
 *                         },
 *                         LogDestinationType = "KinesisDataFirehose",
 *                         LogType = "ALERT",
 *                     },
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/networkfirewall"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := networkfirewall.NewLoggingConfiguration(ctx, "example", &networkfirewall.LoggingConfigurationArgs{
 * 			FirewallArn: pulumi.Any(aws_networkfirewall_firewall.Example.Arn),
 * 			LoggingConfiguration: &networkfirewall.LoggingConfigurationLoggingConfigurationArgs{
 * 				LogDestinationConfigs: networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArray{
 * 					&networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs{
 * 						LogDestination: pulumi.StringMap{
 * 							"deliveryStream": pulumi.Any(aws_kinesis_firehose_delivery_stream.Example.Name),
 * 						},
 * 						LogDestinationType: pulumi.String("KinesisDataFirehose"),
 * 						LogType:            pulumi.String("ALERT"),
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Network Firewall Logging Configurations can be imported using the `firewall_arn` e.g
 * 
 * ```sh
 *  $ pulumi import aws:networkfirewall/loggingConfiguration:LoggingConfiguration example arn:aws:network-firewall:us-west-1:123456789012:firewall/example
 * ```
 * 
 *  
 */
@ResourceType(type="aws:networkfirewall/loggingConfiguration:LoggingConfiguration")
public class LoggingConfiguration extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the Network Firewall firewall.
     * 
     */
    @Export(name="firewallArn", type=String.class, parameters={})
    private Output<String> firewallArn;

    /**
     * @return The Amazon Resource Name (ARN) of the Network Firewall firewall.
     * 
     */
    public Output<String> getFirewallArn() {
        return this.firewallArn;
    }
    /**
     * A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
     * 
     */
    @Export(name="loggingConfiguration", type=LoggingConfigurationLoggingConfiguration.class, parameters={})
    private Output<LoggingConfigurationLoggingConfiguration> loggingConfiguration;

    /**
     * @return A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
     * 
     */
    public Output<LoggingConfigurationLoggingConfiguration> getLoggingConfiguration() {
        return this.loggingConfiguration;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoggingConfiguration(String name) {
        this(name, LoggingConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoggingConfiguration(String name, LoggingConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoggingConfiguration(String name, LoggingConfigurationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:networkfirewall/loggingConfiguration:LoggingConfiguration", name, args == null ? LoggingConfigurationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private LoggingConfiguration(String name, Output<String> id, @Nullable LoggingConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:networkfirewall/loggingConfiguration:LoggingConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoggingConfiguration get(String name, Output<String> id, @Nullable LoggingConfigurationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new LoggingConfiguration(name, id, state, options);
    }
}
