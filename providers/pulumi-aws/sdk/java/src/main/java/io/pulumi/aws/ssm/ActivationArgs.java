// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssm;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ActivationArgs extends io.pulumi.resources.ResourceArgs {

    public static final ActivationArgs Empty = new ActivationArgs();

    /**
     * The description of the resource that you want to register.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * UTC timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time. This provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    @Import(name="expirationDate")
      private final @Nullable Output<String> expirationDate;

    public Output<String> getExpirationDate() {
        return this.expirationDate == null ? Output.empty() : this.expirationDate;
    }

    /**
     * The IAM Role to attach to the managed instance.
     * 
     */
    @Import(name="iamRole", required=true)
      private final Output<String> iamRole;

    public Output<String> getIamRole() {
        return this.iamRole;
    }

    /**
     * The default name of the registered managed instance.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The maximum number of managed instances you want to register. The default value is 1 instance.
     * 
     */
    @Import(name="registrationLimit")
      private final @Nullable Output<Integer> registrationLimit;

    public Output<Integer> getRegistrationLimit() {
        return this.registrationLimit == null ? Output.empty() : this.registrationLimit;
    }

    /**
     * A map of tags to assign to the object. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    public ActivationArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> expirationDate,
        Output<String> iamRole,
        @Nullable Output<String> name,
        @Nullable Output<Integer> registrationLimit,
        @Nullable Output<Map<String,String>> tags) {
        this.description = description;
        this.expirationDate = expirationDate;
        this.iamRole = Objects.requireNonNull(iamRole, "expected parameter 'iamRole' to be non-null");
        this.name = name;
        this.registrationLimit = registrationLimit;
        this.tags = tags;
    }

    private ActivationArgs() {
        this.description = Output.empty();
        this.expirationDate = Output.empty();
        this.iamRole = Output.empty();
        this.name = Output.empty();
        this.registrationLimit = Output.empty();
        this.tags = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActivationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> expirationDate;
        private Output<String> iamRole;
        private @Nullable Output<String> name;
        private @Nullable Output<Integer> registrationLimit;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ActivationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.expirationDate = defaults.expirationDate;
    	      this.iamRole = defaults.iamRole;
    	      this.name = defaults.name;
    	      this.registrationLimit = defaults.registrationLimit;
    	      this.tags = defaults.tags;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder expirationDate(@Nullable Output<String> expirationDate) {
            this.expirationDate = expirationDate;
            return this;
        }
        public Builder expirationDate(@Nullable String expirationDate) {
            this.expirationDate = Output.ofNullable(expirationDate);
            return this;
        }
        public Builder iamRole(Output<String> iamRole) {
            this.iamRole = Objects.requireNonNull(iamRole);
            return this;
        }
        public Builder iamRole(String iamRole) {
            this.iamRole = Output.of(Objects.requireNonNull(iamRole));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder registrationLimit(@Nullable Output<Integer> registrationLimit) {
            this.registrationLimit = registrationLimit;
            return this;
        }
        public Builder registrationLimit(@Nullable Integer registrationLimit) {
            this.registrationLimit = Output.ofNullable(registrationLimit);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }        public ActivationArgs build() {
            return new ActivationArgs(description, expirationDate, iamRole, name, registrationLimit, tags);
        }
    }
}
