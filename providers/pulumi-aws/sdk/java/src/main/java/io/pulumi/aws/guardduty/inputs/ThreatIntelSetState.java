// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.guardduty.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ThreatIntelSetState extends io.pulumi.resources.ResourceArgs {

    public static final ThreatIntelSetState Empty = new ThreatIntelSetState();

    /**
     * Specifies whether GuardDuty is to start using the uploaded ThreatIntelSet.
     * 
     */
    @Import(name="activate")
      private final @Nullable Output<Boolean> activate;

    public Output<Boolean> activate() {
        return this.activate == null ? Codegen.empty() : this.activate;
    }

    /**
     * Amazon Resource Name (ARN) of the GuardDuty ThreatIntelSet.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * The detector ID of the GuardDuty.
     * 
     */
    @Import(name="detectorId")
      private final @Nullable Output<String> detectorId;

    public Output<String> detectorId() {
        return this.detectorId == null ? Codegen.empty() : this.detectorId;
    }

    /**
     * The format of the file that contains the ThreatIntelSet. Valid values: `TXT` | `STIX` | `OTX_CSV` | `ALIEN_VAULT` | `PROOF_POINT` | `FIRE_EYE`
     * 
     */
    @Import(name="format")
      private final @Nullable Output<String> format;

    public Output<String> format() {
        return this.format == null ? Codegen.empty() : this.format;
    }

    /**
     * The URI of the file that contains the ThreatIntelSet.
     * 
     */
    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The friendly name to identify the ThreatIntelSet.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    public ThreatIntelSetState(
        @Nullable Output<Boolean> activate,
        @Nullable Output<String> arn,
        @Nullable Output<String> detectorId,
        @Nullable Output<String> format,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll) {
        this.activate = activate;
        this.arn = arn;
        this.detectorId = detectorId;
        this.format = format;
        this.location = location;
        this.name = name;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private ThreatIntelSetState() {
        this.activate = Codegen.empty();
        this.arn = Codegen.empty();
        this.detectorId = Codegen.empty();
        this.format = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThreatIntelSetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> activate;
        private @Nullable Output<String> arn;
        private @Nullable Output<String> detectorId;
        private @Nullable Output<String> format;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(ThreatIntelSetState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activate = defaults.activate;
    	      this.arn = defaults.arn;
    	      this.detectorId = defaults.detectorId;
    	      this.format = defaults.format;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder activate(@Nullable Output<Boolean> activate) {
            this.activate = activate;
            return this;
        }
        public Builder activate(@Nullable Boolean activate) {
            this.activate = Codegen.ofNullable(activate);
            return this;
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder detectorId(@Nullable Output<String> detectorId) {
            this.detectorId = detectorId;
            return this;
        }
        public Builder detectorId(@Nullable String detectorId) {
            this.detectorId = Codegen.ofNullable(detectorId);
            return this;
        }
        public Builder format(@Nullable Output<String> format) {
            this.format = format;
            return this;
        }
        public Builder format(@Nullable String format) {
            this.format = Codegen.ofNullable(format);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }        public ThreatIntelSetState build() {
            return new ThreatIntelSetState(activate, arn, detectorId, format, location, name, tags, tagsAll);
        }
    }
}
