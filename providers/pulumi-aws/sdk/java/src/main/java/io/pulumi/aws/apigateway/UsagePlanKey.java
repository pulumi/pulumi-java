// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.apigateway.UsagePlanKeyArgs;
import io.pulumi.aws.apigateway.inputs.UsagePlanKeyState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an API Gateway Usage Plan Key.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const test = new aws.apigateway.RestApi("test", {});
 * // ...
 * const myusageplan = new aws.apigateway.UsagePlan("myusageplan", {apiStages: [{
 *     apiId: test.id,
 *     stage: aws_api_gateway_deployment.foo.stage_name,
 * }]});
 * const mykey = new aws.apigateway.ApiKey("mykey", {});
 * const main = new aws.apigateway.UsagePlanKey("main", {
 *     keyId: mykey.id,
 *     keyType: "API_KEY",
 *     usagePlanId: myusageplan.id,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * test = aws.apigateway.RestApi("test")
 * # ...
 * myusageplan = aws.apigateway.UsagePlan("myusageplan", api_stages=[aws.apigateway.UsagePlanApiStageArgs(
 *     api_id=test.id,
 *     stage=aws_api_gateway_deployment["foo"]["stage_name"],
 * )])
 * mykey = aws.apigateway.ApiKey("mykey")
 * main = aws.apigateway.UsagePlanKey("main",
 *     key_id=mykey.id,
 *     key_type="API_KEY",
 *     usage_plan_id=myusageplan.id)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var test = new Aws.ApiGateway.RestApi("test", new Aws.ApiGateway.RestApiArgs
 *         {
 *         });
 *         // ...
 *         var myusageplan = new Aws.ApiGateway.UsagePlan("myusageplan", new Aws.ApiGateway.UsagePlanArgs
 *         {
 *             ApiStages = 
 *             {
 *                 new Aws.ApiGateway.Inputs.UsagePlanApiStageArgs
 *                 {
 *                     ApiId = test.Id,
 *                     Stage = aws_api_gateway_deployment.Foo.Stage_name,
 *                 },
 *             },
 *         });
 *         var mykey = new Aws.ApiGateway.ApiKey("mykey", new Aws.ApiGateway.ApiKeyArgs
 *         {
 *         });
 *         var main = new Aws.ApiGateway.UsagePlanKey("main", new Aws.ApiGateway.UsagePlanKeyArgs
 *         {
 *             KeyId = mykey.Id,
 *             KeyType = "API_KEY",
 *             UsagePlanId = myusageplan.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		test, err := apigateway.NewRestApi(ctx, "test", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		myusageplan, err := apigateway.NewUsagePlan(ctx, "myusageplan", &apigateway.UsagePlanArgs{
 * 			ApiStages: apigateway.UsagePlanApiStageArray{
 * 				&apigateway.UsagePlanApiStageArgs{
 * 					ApiId: test.ID(),
 * 					Stage: pulumi.Any(aws_api_gateway_deployment.Foo.Stage_name),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		mykey, err := apigateway.NewApiKey(ctx, "mykey", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = apigateway.NewUsagePlanKey(ctx, "main", &apigateway.UsagePlanKeyArgs{
 * 			KeyId:       mykey.ID(),
 * 			KeyType:     pulumi.String("API_KEY"),
 * 			UsagePlanId: myusageplan.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * AWS API Gateway Usage Plan Key can be imported using the `USAGE-PLAN-ID/USAGE-PLAN-KEY-ID`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:apigateway/usagePlanKey:UsagePlanKey key 12345abcde/zzz
 * ```
 * 
 *  
 */
@ResourceType(type="aws:apigateway/usagePlanKey:UsagePlanKey")
public class UsagePlanKey extends io.pulumi.resources.CustomResource {
    /**
     * The identifier of the API key resource.
     * 
     */
    @Export(name="keyId", type=String.class, parameters={})
    private Output<String> keyId;

    /**
     * @return The identifier of the API key resource.
     * 
     */
    public Output<String> getKeyId() {
        return this.keyId;
    }
    /**
     * The type of the API key resource. Currently, the valid key type is API_KEY.
     * 
     */
    @Export(name="keyType", type=String.class, parameters={})
    private Output<String> keyType;

    /**
     * @return The type of the API key resource. Currently, the valid key type is API_KEY.
     * 
     */
    public Output<String> getKeyType() {
        return this.keyType;
    }
    /**
     * The name of a usage plan key.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of a usage plan key.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The Id of the usage plan resource representing to associate the key to.
     * 
     */
    @Export(name="usagePlanId", type=String.class, parameters={})
    private Output<String> usagePlanId;

    /**
     * @return The Id of the usage plan resource representing to associate the key to.
     * 
     */
    public Output<String> getUsagePlanId() {
        return this.usagePlanId;
    }
    /**
     * The value of a usage plan key.
     * 
     */
    @Export(name="value", type=String.class, parameters={})
    private Output<String> value;

    /**
     * @return The value of a usage plan key.
     * 
     */
    public Output<String> getValue() {
        return this.value;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UsagePlanKey(String name) {
        this(name, UsagePlanKeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UsagePlanKey(String name, UsagePlanKeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UsagePlanKey(String name, UsagePlanKeyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/usagePlanKey:UsagePlanKey", name, args == null ? UsagePlanKeyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private UsagePlanKey(String name, Output<String> id, @Nullable UsagePlanKeyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/usagePlanKey:UsagePlanKey", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UsagePlanKey get(String name, Output<String> id, @Nullable UsagePlanKeyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UsagePlanKey(name, id, state, options);
    }
}
