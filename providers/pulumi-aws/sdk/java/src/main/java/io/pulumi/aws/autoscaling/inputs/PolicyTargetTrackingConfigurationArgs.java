// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.autoscaling.inputs;

import io.pulumi.aws.autoscaling.inputs.PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs;
import io.pulumi.aws.autoscaling.inputs.PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PolicyTargetTrackingConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicyTargetTrackingConfigurationArgs Empty = new PolicyTargetTrackingConfigurationArgs();

    /**
     * A customized metric. Conflicts with `predefined_metric_specification`.
     * 
     */
    @InputImport(name="customizedMetricSpecification")
      private final @Nullable Input<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs> customizedMetricSpecification;

    public Input<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs> getCustomizedMetricSpecification() {
        return this.customizedMetricSpecification == null ? Input.empty() : this.customizedMetricSpecification;
    }

    /**
     * Indicates whether scale in by the target tracking policy is disabled.
     * 
     */
    @InputImport(name="disableScaleIn")
      private final @Nullable Input<Boolean> disableScaleIn;

    public Input<Boolean> getDisableScaleIn() {
        return this.disableScaleIn == null ? Input.empty() : this.disableScaleIn;
    }

    /**
     * A predefined metric. Conflicts with `customized_metric_specification`.
     * 
     */
    @InputImport(name="predefinedMetricSpecification")
      private final @Nullable Input<PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs> predefinedMetricSpecification;

    public Input<PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs> getPredefinedMetricSpecification() {
        return this.predefinedMetricSpecification == null ? Input.empty() : this.predefinedMetricSpecification;
    }

    /**
     * The target value for the metric.
     * 
     */
    @InputImport(name="targetValue", required=true)
      private final Input<Double> targetValue;

    public Input<Double> getTargetValue() {
        return this.targetValue;
    }

    public PolicyTargetTrackingConfigurationArgs(
        @Nullable Input<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs> customizedMetricSpecification,
        @Nullable Input<Boolean> disableScaleIn,
        @Nullable Input<PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs> predefinedMetricSpecification,
        Input<Double> targetValue) {
        this.customizedMetricSpecification = customizedMetricSpecification;
        this.disableScaleIn = disableScaleIn;
        this.predefinedMetricSpecification = predefinedMetricSpecification;
        this.targetValue = Objects.requireNonNull(targetValue, "expected parameter 'targetValue' to be non-null");
    }

    private PolicyTargetTrackingConfigurationArgs() {
        this.customizedMetricSpecification = Input.empty();
        this.disableScaleIn = Input.empty();
        this.predefinedMetricSpecification = Input.empty();
        this.targetValue = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyTargetTrackingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs> customizedMetricSpecification;
        private @Nullable Input<Boolean> disableScaleIn;
        private @Nullable Input<PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs> predefinedMetricSpecification;
        private Input<Double> targetValue;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyTargetTrackingConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customizedMetricSpecification = defaults.customizedMetricSpecification;
    	      this.disableScaleIn = defaults.disableScaleIn;
    	      this.predefinedMetricSpecification = defaults.predefinedMetricSpecification;
    	      this.targetValue = defaults.targetValue;
        }

        public Builder setCustomizedMetricSpecification(@Nullable Input<PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs> customizedMetricSpecification) {
            this.customizedMetricSpecification = customizedMetricSpecification;
            return this;
        }

        public Builder setCustomizedMetricSpecification(@Nullable PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs customizedMetricSpecification) {
            this.customizedMetricSpecification = Input.ofNullable(customizedMetricSpecification);
            return this;
        }

        public Builder setDisableScaleIn(@Nullable Input<Boolean> disableScaleIn) {
            this.disableScaleIn = disableScaleIn;
            return this;
        }

        public Builder setDisableScaleIn(@Nullable Boolean disableScaleIn) {
            this.disableScaleIn = Input.ofNullable(disableScaleIn);
            return this;
        }

        public Builder setPredefinedMetricSpecification(@Nullable Input<PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs> predefinedMetricSpecification) {
            this.predefinedMetricSpecification = predefinedMetricSpecification;
            return this;
        }

        public Builder setPredefinedMetricSpecification(@Nullable PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs predefinedMetricSpecification) {
            this.predefinedMetricSpecification = Input.ofNullable(predefinedMetricSpecification);
            return this;
        }

        public Builder setTargetValue(Input<Double> targetValue) {
            this.targetValue = Objects.requireNonNull(targetValue);
            return this;
        }

        public Builder setTargetValue(Double targetValue) {
            this.targetValue = Input.of(Objects.requireNonNull(targetValue));
            return this;
        }
        public PolicyTargetTrackingConfigurationArgs build() {
            return new PolicyTargetTrackingConfigurationArgs(customizedMetricSpecification, disableScaleIn, predefinedMetricSpecification, targetValue);
        }
    }
}
