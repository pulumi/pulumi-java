// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.amplify.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainAssociationSubDomainGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final DomainAssociationSubDomainGetArgs Empty = new DomainAssociationSubDomainGetArgs();

    /**
     * The branch name setting for the subdomain.
     * 
     */
    @InputImport(name="branchName", required=true)
    private final Input<String> branchName;

    public Input<String> getBranchName() {
        return this.branchName;
    }

    /**
     * The DNS record for the subdomain.
     * 
     */
    @InputImport(name="dnsRecord")
    private final @Nullable Input<String> dnsRecord;

    public Input<String> getDnsRecord() {
        return this.dnsRecord == null ? Input.empty() : this.dnsRecord;
    }

    /**
     * The prefix setting for the subdomain.
     * 
     */
    @InputImport(name="prefix", required=true)
    private final Input<String> prefix;

    public Input<String> getPrefix() {
        return this.prefix;
    }

    /**
     * The verified status of the subdomain.
     * 
     */
    @InputImport(name="verified")
    private final @Nullable Input<Boolean> verified;

    public Input<Boolean> getVerified() {
        return this.verified == null ? Input.empty() : this.verified;
    }

    public DomainAssociationSubDomainGetArgs(
        Input<String> branchName,
        @Nullable Input<String> dnsRecord,
        Input<String> prefix,
        @Nullable Input<Boolean> verified) {
        this.branchName = Objects.requireNonNull(branchName, "expected parameter 'branchName' to be non-null");
        this.dnsRecord = dnsRecord;
        this.prefix = Objects.requireNonNull(prefix, "expected parameter 'prefix' to be non-null");
        this.verified = verified;
    }

    private DomainAssociationSubDomainGetArgs() {
        this.branchName = Input.empty();
        this.dnsRecord = Input.empty();
        this.prefix = Input.empty();
        this.verified = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainAssociationSubDomainGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> branchName;
        private @Nullable Input<String> dnsRecord;
        private Input<String> prefix;
        private @Nullable Input<Boolean> verified;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainAssociationSubDomainGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchName = defaults.branchName;
    	      this.dnsRecord = defaults.dnsRecord;
    	      this.prefix = defaults.prefix;
    	      this.verified = defaults.verified;
        }

        public Builder setBranchName(Input<String> branchName) {
            this.branchName = Objects.requireNonNull(branchName);
            return this;
        }

        public Builder setBranchName(String branchName) {
            this.branchName = Input.of(Objects.requireNonNull(branchName));
            return this;
        }

        public Builder setDnsRecord(@Nullable Input<String> dnsRecord) {
            this.dnsRecord = dnsRecord;
            return this;
        }

        public Builder setDnsRecord(@Nullable String dnsRecord) {
            this.dnsRecord = Input.ofNullable(dnsRecord);
            return this;
        }

        public Builder setPrefix(Input<String> prefix) {
            this.prefix = Objects.requireNonNull(prefix);
            return this;
        }

        public Builder setPrefix(String prefix) {
            this.prefix = Input.of(Objects.requireNonNull(prefix));
            return this;
        }

        public Builder setVerified(@Nullable Input<Boolean> verified) {
            this.verified = verified;
            return this;
        }

        public Builder setVerified(@Nullable Boolean verified) {
            this.verified = Input.ofNullable(verified);
            return this;
        }
        public DomainAssociationSubDomainGetArgs build() {
            return new DomainAssociationSubDomainGetArgs(branchName, dnsRecord, prefix, verified);
        }
    }
}
