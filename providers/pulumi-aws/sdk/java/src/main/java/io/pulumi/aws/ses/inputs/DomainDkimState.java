// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ses.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DomainDkimState extends io.pulumi.resources.ResourceArgs {

    public static final DomainDkimState Empty = new DomainDkimState();

    /**
     * DKIM tokens generated by SES.
     * These tokens should be used to create CNAME records used to verify SES Easy DKIM.
     * See below for an example of how this might be achieved
     * when the domain is hosted in Route 53 and managed by this provider.
     * Find out more about verifying domains in Amazon SES
     * in the [AWS SES docs](http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html).
     * 
     */
    @Import(name="dkimTokens")
      private final @Nullable Output<List<String>> dkimTokens;

    public Output<List<String>> getDkimTokens() {
        return this.dkimTokens == null ? Output.empty() : this.dkimTokens;
    }

    /**
     * Verified domain name to generate DKIM tokens for.
     * 
     */
    @Import(name="domain")
      private final @Nullable Output<String> domain;

    public Output<String> getDomain() {
        return this.domain == null ? Output.empty() : this.domain;
    }

    public DomainDkimState(
        @Nullable Output<List<String>> dkimTokens,
        @Nullable Output<String> domain) {
        this.dkimTokens = dkimTokens;
        this.domain = domain;
    }

    private DomainDkimState() {
        this.dkimTokens = Output.empty();
        this.domain = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainDkimState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> dkimTokens;
        private @Nullable Output<String> domain;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainDkimState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dkimTokens = defaults.dkimTokens;
    	      this.domain = defaults.domain;
        }

        public Builder dkimTokens(@Nullable Output<List<String>> dkimTokens) {
            this.dkimTokens = dkimTokens;
            return this;
        }
        public Builder dkimTokens(@Nullable List<String> dkimTokens) {
            this.dkimTokens = Output.ofNullable(dkimTokens);
            return this;
        }
        public Builder dkimTokens(String... dkimTokens) {
            return dkimTokens(List.of(dkimTokens));
        }
        public Builder domain(@Nullable Output<String> domain) {
            this.domain = domain;
            return this;
        }
        public Builder domain(@Nullable String domain) {
            this.domain = Output.ofNullable(domain);
            return this;
        }        public DomainDkimState build() {
            return new DomainDkimState(dkimTokens, domain);
        }
    }
}
