// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.eks.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.util.Objects;


public final class NodeGroupScalingConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final NodeGroupScalingConfigGetArgs Empty = new NodeGroupScalingConfigGetArgs();

    /**
     * Desired number of worker nodes.
     * 
     */
    @Import(name="desiredSize", required=true)
      private final Output<Integer> desiredSize;

    public Output<Integer> getDesiredSize() {
        return this.desiredSize;
    }

    /**
     * Maximum number of worker nodes.
     * 
     */
    @Import(name="maxSize", required=true)
      private final Output<Integer> maxSize;

    public Output<Integer> getMaxSize() {
        return this.maxSize;
    }

    /**
     * Minimum number of worker nodes.
     * 
     */
    @Import(name="minSize", required=true)
      private final Output<Integer> minSize;

    public Output<Integer> getMinSize() {
        return this.minSize;
    }

    public NodeGroupScalingConfigGetArgs(
        Output<Integer> desiredSize,
        Output<Integer> maxSize,
        Output<Integer> minSize) {
        this.desiredSize = Objects.requireNonNull(desiredSize, "expected parameter 'desiredSize' to be non-null");
        this.maxSize = Objects.requireNonNull(maxSize, "expected parameter 'maxSize' to be non-null");
        this.minSize = Objects.requireNonNull(minSize, "expected parameter 'minSize' to be non-null");
    }

    private NodeGroupScalingConfigGetArgs() {
        this.desiredSize = Codegen.empty();
        this.maxSize = Codegen.empty();
        this.minSize = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeGroupScalingConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> desiredSize;
        private Output<Integer> maxSize;
        private Output<Integer> minSize;

        public Builder() {
    	      // Empty
        }

        public Builder(NodeGroupScalingConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.desiredSize = defaults.desiredSize;
    	      this.maxSize = defaults.maxSize;
    	      this.minSize = defaults.minSize;
        }

        public Builder desiredSize(Output<Integer> desiredSize) {
            this.desiredSize = Objects.requireNonNull(desiredSize);
            return this;
        }
        public Builder desiredSize(Integer desiredSize) {
            this.desiredSize = Output.of(Objects.requireNonNull(desiredSize));
            return this;
        }
        public Builder maxSize(Output<Integer> maxSize) {
            this.maxSize = Objects.requireNonNull(maxSize);
            return this;
        }
        public Builder maxSize(Integer maxSize) {
            this.maxSize = Output.of(Objects.requireNonNull(maxSize));
            return this;
        }
        public Builder minSize(Output<Integer> minSize) {
            this.minSize = Objects.requireNonNull(minSize);
            return this;
        }
        public Builder minSize(Integer minSize) {
            this.minSize = Output.of(Objects.requireNonNull(minSize));
            return this;
        }        public NodeGroupScalingConfigGetArgs build() {
            return new NodeGroupScalingConfigGetArgs(desiredSize, maxSize, minSize);
        }
    }
}
