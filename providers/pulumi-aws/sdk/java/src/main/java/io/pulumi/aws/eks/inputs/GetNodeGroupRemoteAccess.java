// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.eks.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetNodeGroupRemoteAccess extends io.pulumi.resources.InvokeArgs {

    public static final GetNodeGroupRemoteAccess Empty = new GetNodeGroupRemoteAccess();

    /**
     * EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
     * 
     */
    @InputImport(name="ec2SshKey", required=true)
      private final String ec2SshKey;

    public String getEc2SshKey() {
        return this.ec2SshKey;
    }

    /**
     * Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
     * 
     */
    @InputImport(name="sourceSecurityGroupIds", required=true)
      private final List<String> sourceSecurityGroupIds;

    public List<String> getSourceSecurityGroupIds() {
        return this.sourceSecurityGroupIds;
    }

    public GetNodeGroupRemoteAccess(
        String ec2SshKey,
        List<String> sourceSecurityGroupIds) {
        this.ec2SshKey = Objects.requireNonNull(ec2SshKey, "expected parameter 'ec2SshKey' to be non-null");
        this.sourceSecurityGroupIds = Objects.requireNonNull(sourceSecurityGroupIds, "expected parameter 'sourceSecurityGroupIds' to be non-null");
    }

    private GetNodeGroupRemoteAccess() {
        this.ec2SshKey = null;
        this.sourceSecurityGroupIds = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodeGroupRemoteAccess defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ec2SshKey;
        private List<String> sourceSecurityGroupIds;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNodeGroupRemoteAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ec2SshKey = defaults.ec2SshKey;
    	      this.sourceSecurityGroupIds = defaults.sourceSecurityGroupIds;
        }

        public Builder ec2SshKey(String ec2SshKey) {
            this.ec2SshKey = Objects.requireNonNull(ec2SshKey);
            return this;
        }

        public Builder sourceSecurityGroupIds(List<String> sourceSecurityGroupIds) {
            this.sourceSecurityGroupIds = Objects.requireNonNull(sourceSecurityGroupIds);
            return this;
        }
        public GetNodeGroupRemoteAccess build() {
            return new GetNodeGroupRemoteAccess(ec2SshKey, sourceSecurityGroupIds);
        }
    }
}
