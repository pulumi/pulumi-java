// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.emr.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterEc2AttributesArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterEc2AttributesArgs Empty = new ClusterEc2AttributesArgs();

    /**
     * String containing a comma separated list of additional Amazon EC2 security group IDs for the master node.
     * 
     */
    @InputImport(name="additionalMasterSecurityGroups")
      private final @Nullable Input<String> additionalMasterSecurityGroups;

    public Input<String> getAdditionalMasterSecurityGroups() {
        return this.additionalMasterSecurityGroups == null ? Input.empty() : this.additionalMasterSecurityGroups;
    }

    /**
     * String containing a comma separated list of additional Amazon EC2 security group IDs for the slave nodes as a comma separated string.
     * 
     */
    @InputImport(name="additionalSlaveSecurityGroups")
      private final @Nullable Input<String> additionalSlaveSecurityGroups;

    public Input<String> getAdditionalSlaveSecurityGroups() {
        return this.additionalSlaveSecurityGroups == null ? Input.empty() : this.additionalSlaveSecurityGroups;
    }

    /**
     * Identifier of the Amazon EC2 EMR-Managed security group for the master node.
     * 
     */
    @InputImport(name="emrManagedMasterSecurityGroup")
      private final @Nullable Input<String> emrManagedMasterSecurityGroup;

    public Input<String> getEmrManagedMasterSecurityGroup() {
        return this.emrManagedMasterSecurityGroup == null ? Input.empty() : this.emrManagedMasterSecurityGroup;
    }

    /**
     * Identifier of the Amazon EC2 EMR-Managed security group for the slave nodes.
     * 
     */
    @InputImport(name="emrManagedSlaveSecurityGroup")
      private final @Nullable Input<String> emrManagedSlaveSecurityGroup;

    public Input<String> getEmrManagedSlaveSecurityGroup() {
        return this.emrManagedSlaveSecurityGroup == null ? Input.empty() : this.emrManagedSlaveSecurityGroup;
    }

    /**
     * Instance Profile for EC2 instances of the cluster assume this role.
     * 
     */
    @InputImport(name="instanceProfile", required=true)
      private final Input<String> instanceProfile;

    public Input<String> getInstanceProfile() {
        return this.instanceProfile;
    }

    /**
     * Amazon EC2 key pair that can be used to ssh to the master node as the user called `hadoop`.
     * 
     */
    @InputImport(name="keyName")
      private final @Nullable Input<String> keyName;

    public Input<String> getKeyName() {
        return this.keyName == null ? Input.empty() : this.keyName;
    }

    /**
     * Identifier of the Amazon EC2 service-access security group - required when the cluster runs on a private subnet.
     * 
     */
    @InputImport(name="serviceAccessSecurityGroup")
      private final @Nullable Input<String> serviceAccessSecurityGroup;

    public Input<String> getServiceAccessSecurityGroup() {
        return this.serviceAccessSecurityGroup == null ? Input.empty() : this.serviceAccessSecurityGroup;
    }

    /**
     * VPC subnet id where you want the job flow to launch. Cannot specify the `cc1.4xlarge` instance type for nodes of a job flow launched in an Amazon VPC.
     * 
     */
    @InputImport(name="subnetId")
      private final @Nullable Input<String> subnetId;

    public Input<String> getSubnetId() {
        return this.subnetId == null ? Input.empty() : this.subnetId;
    }

    /**
     * List of VPC subnet id-s where you want the job flow to launch.  Amazon EMR identifies the best Availability Zone to launch instances according to your fleet specifications.
     * 
     */
    @InputImport(name="subnetIds")
      private final @Nullable Input<List<String>> subnetIds;

    public Input<List<String>> getSubnetIds() {
        return this.subnetIds == null ? Input.empty() : this.subnetIds;
    }

    public ClusterEc2AttributesArgs(
        @Nullable Input<String> additionalMasterSecurityGroups,
        @Nullable Input<String> additionalSlaveSecurityGroups,
        @Nullable Input<String> emrManagedMasterSecurityGroup,
        @Nullable Input<String> emrManagedSlaveSecurityGroup,
        Input<String> instanceProfile,
        @Nullable Input<String> keyName,
        @Nullable Input<String> serviceAccessSecurityGroup,
        @Nullable Input<String> subnetId,
        @Nullable Input<List<String>> subnetIds) {
        this.additionalMasterSecurityGroups = additionalMasterSecurityGroups;
        this.additionalSlaveSecurityGroups = additionalSlaveSecurityGroups;
        this.emrManagedMasterSecurityGroup = emrManagedMasterSecurityGroup;
        this.emrManagedSlaveSecurityGroup = emrManagedSlaveSecurityGroup;
        this.instanceProfile = Objects.requireNonNull(instanceProfile, "expected parameter 'instanceProfile' to be non-null");
        this.keyName = keyName;
        this.serviceAccessSecurityGroup = serviceAccessSecurityGroup;
        this.subnetId = subnetId;
        this.subnetIds = subnetIds;
    }

    private ClusterEc2AttributesArgs() {
        this.additionalMasterSecurityGroups = Input.empty();
        this.additionalSlaveSecurityGroups = Input.empty();
        this.emrManagedMasterSecurityGroup = Input.empty();
        this.emrManagedSlaveSecurityGroup = Input.empty();
        this.instanceProfile = Input.empty();
        this.keyName = Input.empty();
        this.serviceAccessSecurityGroup = Input.empty();
        this.subnetId = Input.empty();
        this.subnetIds = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterEc2AttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> additionalMasterSecurityGroups;
        private @Nullable Input<String> additionalSlaveSecurityGroups;
        private @Nullable Input<String> emrManagedMasterSecurityGroup;
        private @Nullable Input<String> emrManagedSlaveSecurityGroup;
        private Input<String> instanceProfile;
        private @Nullable Input<String> keyName;
        private @Nullable Input<String> serviceAccessSecurityGroup;
        private @Nullable Input<String> subnetId;
        private @Nullable Input<List<String>> subnetIds;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterEc2AttributesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalMasterSecurityGroups = defaults.additionalMasterSecurityGroups;
    	      this.additionalSlaveSecurityGroups = defaults.additionalSlaveSecurityGroups;
    	      this.emrManagedMasterSecurityGroup = defaults.emrManagedMasterSecurityGroup;
    	      this.emrManagedSlaveSecurityGroup = defaults.emrManagedSlaveSecurityGroup;
    	      this.instanceProfile = defaults.instanceProfile;
    	      this.keyName = defaults.keyName;
    	      this.serviceAccessSecurityGroup = defaults.serviceAccessSecurityGroup;
    	      this.subnetId = defaults.subnetId;
    	      this.subnetIds = defaults.subnetIds;
        }

        public Builder additionalMasterSecurityGroups(@Nullable Input<String> additionalMasterSecurityGroups) {
            this.additionalMasterSecurityGroups = additionalMasterSecurityGroups;
            return this;
        }

        public Builder additionalMasterSecurityGroups(@Nullable String additionalMasterSecurityGroups) {
            this.additionalMasterSecurityGroups = Input.ofNullable(additionalMasterSecurityGroups);
            return this;
        }

        public Builder additionalSlaveSecurityGroups(@Nullable Input<String> additionalSlaveSecurityGroups) {
            this.additionalSlaveSecurityGroups = additionalSlaveSecurityGroups;
            return this;
        }

        public Builder additionalSlaveSecurityGroups(@Nullable String additionalSlaveSecurityGroups) {
            this.additionalSlaveSecurityGroups = Input.ofNullable(additionalSlaveSecurityGroups);
            return this;
        }

        public Builder emrManagedMasterSecurityGroup(@Nullable Input<String> emrManagedMasterSecurityGroup) {
            this.emrManagedMasterSecurityGroup = emrManagedMasterSecurityGroup;
            return this;
        }

        public Builder emrManagedMasterSecurityGroup(@Nullable String emrManagedMasterSecurityGroup) {
            this.emrManagedMasterSecurityGroup = Input.ofNullable(emrManagedMasterSecurityGroup);
            return this;
        }

        public Builder emrManagedSlaveSecurityGroup(@Nullable Input<String> emrManagedSlaveSecurityGroup) {
            this.emrManagedSlaveSecurityGroup = emrManagedSlaveSecurityGroup;
            return this;
        }

        public Builder emrManagedSlaveSecurityGroup(@Nullable String emrManagedSlaveSecurityGroup) {
            this.emrManagedSlaveSecurityGroup = Input.ofNullable(emrManagedSlaveSecurityGroup);
            return this;
        }

        public Builder instanceProfile(Input<String> instanceProfile) {
            this.instanceProfile = Objects.requireNonNull(instanceProfile);
            return this;
        }

        public Builder instanceProfile(String instanceProfile) {
            this.instanceProfile = Input.of(Objects.requireNonNull(instanceProfile));
            return this;
        }

        public Builder keyName(@Nullable Input<String> keyName) {
            this.keyName = keyName;
            return this;
        }

        public Builder keyName(@Nullable String keyName) {
            this.keyName = Input.ofNullable(keyName);
            return this;
        }

        public Builder serviceAccessSecurityGroup(@Nullable Input<String> serviceAccessSecurityGroup) {
            this.serviceAccessSecurityGroup = serviceAccessSecurityGroup;
            return this;
        }

        public Builder serviceAccessSecurityGroup(@Nullable String serviceAccessSecurityGroup) {
            this.serviceAccessSecurityGroup = Input.ofNullable(serviceAccessSecurityGroup);
            return this;
        }

        public Builder subnetId(@Nullable Input<String> subnetId) {
            this.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = Input.ofNullable(subnetId);
            return this;
        }

        public Builder subnetIds(@Nullable Input<List<String>> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = Input.ofNullable(subnetIds);
            return this;
        }
        public ClusterEc2AttributesArgs build() {
            return new ClusterEc2AttributesArgs(additionalMasterSecurityGroups, additionalSlaveSecurityGroups, emrManagedMasterSecurityGroup, emrManagedSlaveSecurityGroup, instanceProfile, keyName, serviceAccessSecurityGroup, subnetId, subnetIds);
        }
    }
}
