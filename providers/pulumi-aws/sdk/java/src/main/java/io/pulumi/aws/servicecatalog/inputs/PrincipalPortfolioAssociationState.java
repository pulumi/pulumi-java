// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.servicecatalog.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PrincipalPortfolioAssociationState extends io.pulumi.resources.ResourceArgs {

    public static final PrincipalPortfolioAssociationState Empty = new PrincipalPortfolioAssociationState();

    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
     * 
     */
    @Import(name="acceptLanguage")
      private final @Nullable Output<String> acceptLanguage;

    public Output<String> getAcceptLanguage() {
        return this.acceptLanguage == null ? Output.empty() : this.acceptLanguage;
    }

    /**
     * Portfolio identifier.
     * 
     */
    @Import(name="portfolioId")
      private final @Nullable Output<String> portfolioId;

    public Output<String> getPortfolioId() {
        return this.portfolioId == null ? Output.empty() : this.portfolioId;
    }

    /**
     * Principal ARN.
     * 
     */
    @Import(name="principalArn")
      private final @Nullable Output<String> principalArn;

    public Output<String> getPrincipalArn() {
        return this.principalArn == null ? Output.empty() : this.principalArn;
    }

    /**
     * Principal type. Setting this argument empty (e.g., `principal_type = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
     * 
     */
    @Import(name="principalType")
      private final @Nullable Output<String> principalType;

    public Output<String> getPrincipalType() {
        return this.principalType == null ? Output.empty() : this.principalType;
    }

    public PrincipalPortfolioAssociationState(
        @Nullable Output<String> acceptLanguage,
        @Nullable Output<String> portfolioId,
        @Nullable Output<String> principalArn,
        @Nullable Output<String> principalType) {
        this.acceptLanguage = acceptLanguage;
        this.portfolioId = portfolioId;
        this.principalArn = principalArn;
        this.principalType = principalType;
    }

    private PrincipalPortfolioAssociationState() {
        this.acceptLanguage = Output.empty();
        this.portfolioId = Output.empty();
        this.principalArn = Output.empty();
        this.principalType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrincipalPortfolioAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> acceptLanguage;
        private @Nullable Output<String> portfolioId;
        private @Nullable Output<String> principalArn;
        private @Nullable Output<String> principalType;

        public Builder() {
    	      // Empty
        }

        public Builder(PrincipalPortfolioAssociationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptLanguage = defaults.acceptLanguage;
    	      this.portfolioId = defaults.portfolioId;
    	      this.principalArn = defaults.principalArn;
    	      this.principalType = defaults.principalType;
        }

        public Builder acceptLanguage(@Nullable Output<String> acceptLanguage) {
            this.acceptLanguage = acceptLanguage;
            return this;
        }

        public Builder acceptLanguage(@Nullable String acceptLanguage) {
            this.acceptLanguage = Output.ofNullable(acceptLanguage);
            return this;
        }

        public Builder portfolioId(@Nullable Output<String> portfolioId) {
            this.portfolioId = portfolioId;
            return this;
        }

        public Builder portfolioId(@Nullable String portfolioId) {
            this.portfolioId = Output.ofNullable(portfolioId);
            return this;
        }

        public Builder principalArn(@Nullable Output<String> principalArn) {
            this.principalArn = principalArn;
            return this;
        }

        public Builder principalArn(@Nullable String principalArn) {
            this.principalArn = Output.ofNullable(principalArn);
            return this;
        }

        public Builder principalType(@Nullable Output<String> principalType) {
            this.principalType = principalType;
            return this;
        }

        public Builder principalType(@Nullable String principalType) {
            this.principalType = Output.ofNullable(principalType);
            return this;
        }
        public PrincipalPortfolioAssociationState build() {
            return new PrincipalPortfolioAssociationState(acceptLanguage, portfolioId, principalArn, principalType);
        }
    }
}
