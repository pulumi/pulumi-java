// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.autoscaling;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.autoscaling.AttachmentArgs;
import io.pulumi.aws.autoscaling.inputs.AttachmentState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an Auto Scaling Attachment resource.
 * 
 * > **NOTE on Auto Scaling Groups and ASG Attachments:** This provider currently provides
 * both a standalone `aws.autoscaling.Attachment` resource
 * (describing an ASG attached to an ELB or ALB), and an `aws.autoscaling.Group`
 * with `load_balancers` and `target_group_arns` defined in-line. These two methods are not
 * mutually-exclusive. If `aws.autoscaling.Attachment` resources are used, either alone or with inline
 * `load_balancers` or `target_group_arns`, the `aws.autoscaling.Group` resource must be configured
 * to [ignore changes](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to the `load_balancers` and `target_group_arns` arguments.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * // Create a new load balancer attachment
 * const asgAttachmentBar = new aws.autoscaling.Attachment("asgAttachmentBar", {
 *     autoscalingGroupName: aws_autoscaling_group.asg.id,
 *     elb: aws_elb.bar.id,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * # Create a new load balancer attachment
 * asg_attachment_bar = aws.autoscaling.Attachment("asgAttachmentBar",
 *     autoscaling_group_name=aws_autoscaling_group["asg"]["id"],
 *     elb=aws_elb["bar"]["id"])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         // Create a new load balancer attachment
 *         var asgAttachmentBar = new Aws.AutoScaling.Attachment("asgAttachmentBar", new Aws.AutoScaling.AttachmentArgs
 *         {
 *             AutoscalingGroupName = aws_autoscaling_group.Asg.Id,
 *             Elb = aws_elb.Bar.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/autoscaling"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := autoscaling.NewAttachment(ctx, "asgAttachmentBar", &autoscaling.AttachmentArgs{
 * 			AutoscalingGroupName: pulumi.Any(aws_autoscaling_group.Asg.Id),
 * 			Elb:                  pulumi.Any(aws_elb.Bar.Id),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * // Create a new ALB Target Group attachment
 * const asgAttachmentBar = new aws.autoscaling.Attachment("asgAttachmentBar", {
 *     autoscalingGroupName: aws_autoscaling_group.asg.id,
 *     albTargetGroupArn: aws_lb_target_group.test.arn,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * # Create a new ALB Target Group attachment
 * asg_attachment_bar = aws.autoscaling.Attachment("asgAttachmentBar",
 *     autoscaling_group_name=aws_autoscaling_group["asg"]["id"],
 *     alb_target_group_arn=aws_lb_target_group["test"]["arn"])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         // Create a new ALB Target Group attachment
 *         var asgAttachmentBar = new Aws.AutoScaling.Attachment("asgAttachmentBar", new Aws.AutoScaling.AttachmentArgs
 *         {
 *             AutoscalingGroupName = aws_autoscaling_group.Asg.Id,
 *             AlbTargetGroupArn = aws_lb_target_group.Test.Arn,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/autoscaling"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := autoscaling.NewAttachment(ctx, "asgAttachmentBar", &autoscaling.AttachmentArgs{
 * 			AutoscalingGroupName: pulumi.Any(aws_autoscaling_group.Asg.Id),
 * 			AlbTargetGroupArn:    pulumi.Any(aws_lb_target_group.Test.Arn),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * ## With An AutoScaling Group Resource
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * // ... other configuration ...
 * const asg = new aws.autoscaling.Group("asg", {});
 * const asgAttachmentBar = new aws.autoscaling.Attachment("asgAttachmentBar", {
 *     autoscalingGroupName: asg.id,
 *     elb: aws_elb.test.id,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * # ... other configuration ...
 * asg = aws.autoscaling.Group("asg")
 * asg_attachment_bar = aws.autoscaling.Attachment("asgAttachmentBar",
 *     autoscaling_group_name=asg.id,
 *     elb=aws_elb["test"]["id"])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         // ... other configuration ...
 *         var asg = new Aws.AutoScaling.Group("asg", new Aws.AutoScaling.GroupArgs
 *         {
 *         });
 *         var asgAttachmentBar = new Aws.AutoScaling.Attachment("asgAttachmentBar", new Aws.AutoScaling.AttachmentArgs
 *         {
 *             AutoscalingGroupName = asg.Id,
 *             Elb = aws_elb.Test.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/autoscaling"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		asg, err := autoscaling.NewGroup(ctx, "asg", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = autoscaling.NewAttachment(ctx, "asgAttachmentBar", &autoscaling.AttachmentArgs{
 * 			AutoscalingGroupName: asg.ID(),
 * 			Elb:                  pulumi.Any(aws_elb.Test.Id),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 */
@ResourceType(type="aws:autoscaling/attachment:Attachment")
public class Attachment extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of an ALB Target Group.
     * 
     */
    @Export(name="albTargetGroupArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> albTargetGroupArn;

    /**
     * @return The ARN of an ALB Target Group.
     * 
     */
    public Output</* @Nullable */ String> getAlbTargetGroupArn() {
        return this.albTargetGroupArn;
    }
    /**
     * Name of ASG to associate with the ELB.
     * 
     */
    @Export(name="autoscalingGroupName", type=String.class, parameters={})
    private Output<String> autoscalingGroupName;

    /**
     * @return Name of ASG to associate with the ELB.
     * 
     */
    public Output<String> getAutoscalingGroupName() {
        return this.autoscalingGroupName;
    }
    /**
     * The name of the ELB.
     * 
     */
    @Export(name="elb", type=String.class, parameters={})
    private Output</* @Nullable */ String> elb;

    /**
     * @return The name of the ELB.
     * 
     */
    public Output</* @Nullable */ String> getElb() {
        return this.elb;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Attachment(String name) {
        this(name, AttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Attachment(String name, AttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Attachment(String name, AttachmentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:autoscaling/attachment:Attachment", name, args == null ? AttachmentArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Attachment(String name, Output<String> id, @Nullable AttachmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:autoscaling/attachment:Attachment", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Attachment get(String name, Output<String> id, @Nullable AttachmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Attachment(name, id, state, options);
    }
}
