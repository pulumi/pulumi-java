// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ec2.SubnetArgs;
import io.pulumi.aws.ec2.inputs.SubnetState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an VPC subnet resource.
 * 
 * > **NOTE:** Due to [AWS Lambda improved VPC networking changes that began deploying in September 2019](https://aws.amazon.com/blogs/compute/announcing-improved-vpc-networking-for-aws-lambda-functions/), subnets associated with Lambda Functions can take up to 45 minutes to successfully delete.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Basic Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const main = new aws.ec2.Subnet("main", {
 *     vpcId: aws_vpc.main.id,
 *     cidrBlock: "10.0.1.0/24",
 *     tags: {
 *         Name: "Main",
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * main = aws.ec2.Subnet("main",
 *     vpc_id=aws_vpc["main"]["id"],
 *     cidr_block="10.0.1.0/24",
 *     tags={
 *         "Name": "Main",
 *     })
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var main = new Aws.Ec2.Subnet("main", new Aws.Ec2.SubnetArgs
 *         {
 *             VpcId = aws_vpc.Main.Id,
 *             CidrBlock = "10.0.1.0/24",
 *             Tags = 
 *             {
 *                 { "Name", "Main" },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := ec2.NewSubnet(ctx, "main", &ec2.SubnetArgs{
 * 			VpcId:     pulumi.Any(aws_vpc.Main.Id),
 * 			CidrBlock: pulumi.String("10.0.1.0/24"),
 * 			Tags: pulumi.StringMap{
 * 				"Name": pulumi.String("Main"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Subnets In Secondary VPC CIDR Blocks
 * 
 * When managing subnets in one of a VPC's secondary CIDR blocks created using a `aws.ec2.VpcIpv4CidrBlockAssociation`
 * resource, it is recommended to reference that resource's `vpc_id` attribute to ensure correct dependency ordering.
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const secondaryCidr = new aws.ec2.VpcIpv4CidrBlockAssociation("secondaryCidr", {
 *     vpcId: aws_vpc.main.id,
 *     cidrBlock: "172.2.0.0/16",
 * });
 * const inSecondaryCidr = new aws.ec2.Subnet("inSecondaryCidr", {
 *     vpcId: secondaryCidr.vpcId,
 *     cidrBlock: "172.2.0.0/24",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * secondary_cidr = aws.ec2.VpcIpv4CidrBlockAssociation("secondaryCidr",
 *     vpc_id=aws_vpc["main"]["id"],
 *     cidr_block="172.2.0.0/16")
 * in_secondary_cidr = aws.ec2.Subnet("inSecondaryCidr",
 *     vpc_id=secondary_cidr.vpc_id,
 *     cidr_block="172.2.0.0/24")
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var secondaryCidr = new Aws.Ec2.VpcIpv4CidrBlockAssociation("secondaryCidr", new Aws.Ec2.VpcIpv4CidrBlockAssociationArgs
 *         {
 *             VpcId = aws_vpc.Main.Id,
 *             CidrBlock = "172.2.0.0/16",
 *         });
 *         var inSecondaryCidr = new Aws.Ec2.Subnet("inSecondaryCidr", new Aws.Ec2.SubnetArgs
 *         {
 *             VpcId = secondaryCidr.VpcId,
 *             CidrBlock = "172.2.0.0/24",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		secondaryCidr, err := ec2.NewVpcIpv4CidrBlockAssociation(ctx, "secondaryCidr", &ec2.VpcIpv4CidrBlockAssociationArgs{
 * 			VpcId:     pulumi.Any(aws_vpc.Main.Id),
 * 			CidrBlock: pulumi.String("172.2.0.0/16"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = ec2.NewSubnet(ctx, "inSecondaryCidr", &ec2.SubnetArgs{
 * 			VpcId:     secondaryCidr.VpcId,
 * 			CidrBlock: pulumi.String("172.2.0.0/24"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Subnets can be imported using the `subnet id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ec2/subnet:Subnet public_subnet subnet-9d4a7b6c
 * ```
 * 
 *  
 */
@ResourceType(type="aws:ec2/subnet:Subnet")
public class Subnet extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the subnet.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the subnet.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Specify true to indicate
     * that network interfaces created in the specified subnet should be
     * assigned an IPv6 address. Default is `false`
     * 
     */
    @Export(name="assignIpv6AddressOnCreation", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> assignIpv6AddressOnCreation;

    /**
     * @return Specify true to indicate
     * that network interfaces created in the specified subnet should be
     * assigned an IPv6 address. Default is `false`
     * 
     */
    public Output</* @Nullable */ Boolean> getAssignIpv6AddressOnCreation() {
        return this.assignIpv6AddressOnCreation;
    }
    /**
     * AZ for the subnet.
     * 
     */
    @Export(name="availabilityZone", type=String.class, parameters={})
    private Output<String> availabilityZone;

    /**
     * @return AZ for the subnet.
     * 
     */
    public Output<String> getAvailabilityZone() {
        return this.availabilityZone;
    }
    /**
     * AZ ID of the subnet. This argument is not supported in all regions or partitions. If necessary, use `availability_zone` instead.
     * 
     */
    @Export(name="availabilityZoneId", type=String.class, parameters={})
    private Output<String> availabilityZoneId;

    /**
     * @return AZ ID of the subnet. This argument is not supported in all regions or partitions. If necessary, use `availability_zone` instead.
     * 
     */
    public Output<String> getAvailabilityZoneId() {
        return this.availabilityZoneId;
    }
    /**
     * The IPv4 CIDR block for the subnet.
     * 
     */
    @Export(name="cidrBlock", type=String.class, parameters={})
    private Output</* @Nullable */ String> cidrBlock;

    /**
     * @return The IPv4 CIDR block for the subnet.
     * 
     */
    public Output</* @Nullable */ String> getCidrBlock() {
        return this.cidrBlock;
    }
    /**
     * The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured.
     * 
     */
    @Export(name="customerOwnedIpv4Pool", type=String.class, parameters={})
    private Output</* @Nullable */ String> customerOwnedIpv4Pool;

    /**
     * @return The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured.
     * 
     */
    public Output</* @Nullable */ String> getCustomerOwnedIpv4Pool() {
        return this.customerOwnedIpv4Pool;
    }
    /**
     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `false`.
     * 
     */
    @Export(name="enableDns64", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableDns64;

    /**
     * @return Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnableDns64() {
        return this.enableDns64;
    }
    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`.
     * 
     */
    @Export(name="enableResourceNameDnsARecordOnLaunch", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableResourceNameDnsARecordOnLaunch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnableResourceNameDnsARecordOnLaunch() {
        return this.enableResourceNameDnsARecordOnLaunch;
    }
    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `false`.
     * 
     */
    @Export(name="enableResourceNameDnsAaaaRecordOnLaunch", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableResourceNameDnsAaaaRecordOnLaunch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnableResourceNameDnsAaaaRecordOnLaunch() {
        return this.enableResourceNameDnsAaaaRecordOnLaunch;
    }
    /**
     * The IPv6 network range for the subnet,
     * in CIDR notation. The subnet size must use a /64 prefix length.
     * 
     */
    @Export(name="ipv6CidrBlock", type=String.class, parameters={})
    private Output</* @Nullable */ String> ipv6CidrBlock;

    /**
     * @return The IPv6 network range for the subnet,
     * in CIDR notation. The subnet size must use a /64 prefix length.
     * 
     */
    public Output</* @Nullable */ String> getIpv6CidrBlock() {
        return this.ipv6CidrBlock;
    }
    /**
     * The association ID for the IPv6 CIDR block.
     * 
     */
    @Export(name="ipv6CidrBlockAssociationId", type=String.class, parameters={})
    private Output<String> ipv6CidrBlockAssociationId;

    /**
     * @return The association ID for the IPv6 CIDR block.
     * 
     */
    public Output<String> getIpv6CidrBlockAssociationId() {
        return this.ipv6CidrBlockAssociationId;
    }
    /**
     * Indicates whether to create an IPv6-only subnet. Default: `false`.
     * 
     */
    @Export(name="ipv6Native", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> ipv6Native;

    /**
     * @return Indicates whether to create an IPv6-only subnet. Default: `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getIpv6Native() {
        return this.ipv6Native;
    }
    /**
     * Specify `true` to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`.
     * 
     */
    @Export(name="mapCustomerOwnedIpOnLaunch", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> mapCustomerOwnedIpOnLaunch;

    /**
     * @return Specify `true` to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getMapCustomerOwnedIpOnLaunch() {
        return this.mapCustomerOwnedIpOnLaunch;
    }
    /**
     * Specify true to indicate
     * that instances launched into the subnet should be assigned
     * a public IP address. Default is `false`.
     * 
     */
    @Export(name="mapPublicIpOnLaunch", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> mapPublicIpOnLaunch;

    /**
     * @return Specify true to indicate
     * that instances launched into the subnet should be assigned
     * a public IP address. Default is `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getMapPublicIpOnLaunch() {
        return this.mapPublicIpOnLaunch;
    }
    /**
     * The Amazon Resource Name (ARN) of the Outpost.
     * 
     */
    @Export(name="outpostArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> outpostArn;

    /**
     * @return The Amazon Resource Name (ARN) of the Outpost.
     * 
     */
    public Output</* @Nullable */ String> getOutpostArn() {
        return this.outpostArn;
    }
    /**
     * The ID of the AWS account that owns the subnet.
     * 
     */
    @Export(name="ownerId", type=String.class, parameters={})
    private Output<String> ownerId;

    /**
     * @return The ID of the AWS account that owns the subnet.
     * 
     */
    public Output<String> getOwnerId() {
        return this.ownerId;
    }
    /**
     * The type of hostnames to assign to instances in the subnet at launch. For IPv4-only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`.
     * 
     */
    @Export(name="privateDnsHostnameTypeOnLaunch", type=String.class, parameters={})
    private Output<String> privateDnsHostnameTypeOnLaunch;

    /**
     * @return The type of hostnames to assign to instances in the subnet at launch. For IPv4-only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`.
     * 
     */
    public Output<String> getPrivateDnsHostnameTypeOnLaunch() {
        return this.privateDnsHostnameTypeOnLaunch;
    }
    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * The VPC ID.
     * 
     */
    @Export(name="vpcId", type=String.class, parameters={})
    private Output<String> vpcId;

    /**
     * @return The VPC ID.
     * 
     */
    public Output<String> getVpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Subnet(String name) {
        this(name, SubnetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Subnet(String name, SubnetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Subnet(String name, SubnetArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/subnet:Subnet", name, args == null ? SubnetArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Subnet(String name, Output<String> id, @Nullable SubnetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ec2/subnet:Subnet", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Subnet get(String name, Output<String> id, @Nullable SubnetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Subnet(name, id, state, options);
    }
}
