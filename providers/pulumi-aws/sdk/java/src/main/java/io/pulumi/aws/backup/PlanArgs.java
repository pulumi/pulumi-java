// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.backup;

import io.pulumi.aws.backup.inputs.PlanAdvancedBackupSettingArgs;
import io.pulumi.aws.backup.inputs.PlanRuleArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PlanArgs extends io.pulumi.resources.ResourceArgs {

    public static final PlanArgs Empty = new PlanArgs();

    /**
     * An object that specifies backup options for each resource type.
     * 
     */
    @Import(name="advancedBackupSettings")
      private final @Nullable Output<List<PlanAdvancedBackupSettingArgs>> advancedBackupSettings;

    public Output<List<PlanAdvancedBackupSettingArgs>> advancedBackupSettings() {
        return this.advancedBackupSettings == null ? Codegen.empty() : this.advancedBackupSettings;
    }

    /**
     * The display name of a backup plan.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * A rule object that specifies a scheduled task that is used to back up a selection of resources.
     * 
     */
    @Import(name="rules", required=true)
      private final Output<List<PlanRuleArgs>> rules;

    public Output<List<PlanRuleArgs>> rules() {
        return this.rules;
    }

    /**
     * Metadata that you can assign to help organize the plans you create. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public PlanArgs(
        @Nullable Output<List<PlanAdvancedBackupSettingArgs>> advancedBackupSettings,
        @Nullable Output<String> name,
        Output<List<PlanRuleArgs>> rules,
        @Nullable Output<Map<String,String>> tags) {
        this.advancedBackupSettings = advancedBackupSettings;
        this.name = name;
        this.rules = Objects.requireNonNull(rules, "expected parameter 'rules' to be non-null");
        this.tags = tags;
    }

    private PlanArgs() {
        this.advancedBackupSettings = Codegen.empty();
        this.name = Codegen.empty();
        this.rules = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<PlanAdvancedBackupSettingArgs>> advancedBackupSettings;
        private @Nullable Output<String> name;
        private Output<List<PlanRuleArgs>> rules;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(PlanArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedBackupSettings = defaults.advancedBackupSettings;
    	      this.name = defaults.name;
    	      this.rules = defaults.rules;
    	      this.tags = defaults.tags;
        }

        public Builder advancedBackupSettings(@Nullable Output<List<PlanAdvancedBackupSettingArgs>> advancedBackupSettings) {
            this.advancedBackupSettings = advancedBackupSettings;
            return this;
        }
        public Builder advancedBackupSettings(@Nullable List<PlanAdvancedBackupSettingArgs> advancedBackupSettings) {
            this.advancedBackupSettings = Codegen.ofNullable(advancedBackupSettings);
            return this;
        }
        public Builder advancedBackupSettings(PlanAdvancedBackupSettingArgs... advancedBackupSettings) {
            return advancedBackupSettings(List.of(advancedBackupSettings));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder rules(Output<List<PlanRuleArgs>> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(List<PlanRuleArgs> rules) {
            this.rules = Output.of(Objects.requireNonNull(rules));
            return this;
        }
        public Builder rules(PlanRuleArgs... rules) {
            return rules(List.of(rules));
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public PlanArgs build() {
            return new PlanArgs(advancedBackupSettings, name, rules, tags);
        }
    }
}
