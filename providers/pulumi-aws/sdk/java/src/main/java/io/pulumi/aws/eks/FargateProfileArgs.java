// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.eks;

import io.pulumi.aws.eks.inputs.FargateProfileSelectorArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FargateProfileArgs extends io.pulumi.resources.ResourceArgs {

    public static final FargateProfileArgs Empty = new FargateProfileArgs();

    /**
     * Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
     * 
     */
    @InputImport(name="clusterName", required=true)
      private final Input<String> clusterName;

    public Input<String> getClusterName() {
        return this.clusterName;
    }

    /**
     * Name of the EKS Fargate Profile.
     * 
     */
    @InputImport(name="fargateProfileName")
      private final @Nullable Input<String> fargateProfileName;

    public Input<String> getFargateProfileName() {
        return this.fargateProfileName == null ? Input.empty() : this.fargateProfileName;
    }

    /**
     * Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Fargate Profile.
     * 
     */
    @InputImport(name="podExecutionRoleArn", required=true)
      private final Input<String> podExecutionRoleArn;

    public Input<String> getPodExecutionRoleArn() {
        return this.podExecutionRoleArn;
    }

    /**
     * Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.
     * 
     */
    @InputImport(name="selectors", required=true)
      private final Input<List<FargateProfileSelectorArgs>> selectors;

    public Input<List<FargateProfileSelectorArgs>> getSelectors() {
        return this.selectors;
    }

    /**
     * Identifiers of private EC2 Subnets to associate with the EKS Fargate Profile. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).
     * 
     */
    @InputImport(name="subnetIds")
      private final @Nullable Input<List<String>> subnetIds;

    public Input<List<String>> getSubnetIds() {
        return this.subnetIds == null ? Input.empty() : this.subnetIds;
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public FargateProfileArgs(
        Input<String> clusterName,
        @Nullable Input<String> fargateProfileName,
        Input<String> podExecutionRoleArn,
        Input<List<FargateProfileSelectorArgs>> selectors,
        @Nullable Input<List<String>> subnetIds,
        @Nullable Input<Map<String,String>> tags) {
        this.clusterName = Objects.requireNonNull(clusterName, "expected parameter 'clusterName' to be non-null");
        this.fargateProfileName = fargateProfileName;
        this.podExecutionRoleArn = Objects.requireNonNull(podExecutionRoleArn, "expected parameter 'podExecutionRoleArn' to be non-null");
        this.selectors = Objects.requireNonNull(selectors, "expected parameter 'selectors' to be non-null");
        this.subnetIds = subnetIds;
        this.tags = tags;
    }

    private FargateProfileArgs() {
        this.clusterName = Input.empty();
        this.fargateProfileName = Input.empty();
        this.podExecutionRoleArn = Input.empty();
        this.selectors = Input.empty();
        this.subnetIds = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FargateProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> clusterName;
        private @Nullable Input<String> fargateProfileName;
        private Input<String> podExecutionRoleArn;
        private Input<List<FargateProfileSelectorArgs>> selectors;
        private @Nullable Input<List<String>> subnetIds;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(FargateProfileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.fargateProfileName = defaults.fargateProfileName;
    	      this.podExecutionRoleArn = defaults.podExecutionRoleArn;
    	      this.selectors = defaults.selectors;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
        }

        public Builder clusterName(Input<String> clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }

        public Builder clusterName(String clusterName) {
            this.clusterName = Input.of(Objects.requireNonNull(clusterName));
            return this;
        }

        public Builder fargateProfileName(@Nullable Input<String> fargateProfileName) {
            this.fargateProfileName = fargateProfileName;
            return this;
        }

        public Builder fargateProfileName(@Nullable String fargateProfileName) {
            this.fargateProfileName = Input.ofNullable(fargateProfileName);
            return this;
        }

        public Builder podExecutionRoleArn(Input<String> podExecutionRoleArn) {
            this.podExecutionRoleArn = Objects.requireNonNull(podExecutionRoleArn);
            return this;
        }

        public Builder podExecutionRoleArn(String podExecutionRoleArn) {
            this.podExecutionRoleArn = Input.of(Objects.requireNonNull(podExecutionRoleArn));
            return this;
        }

        public Builder selectors(Input<List<FargateProfileSelectorArgs>> selectors) {
            this.selectors = Objects.requireNonNull(selectors);
            return this;
        }

        public Builder selectors(List<FargateProfileSelectorArgs> selectors) {
            this.selectors = Input.of(Objects.requireNonNull(selectors));
            return this;
        }

        public Builder subnetIds(@Nullable Input<List<String>> subnetIds) {
            this.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(@Nullable List<String> subnetIds) {
            this.subnetIds = Input.ofNullable(subnetIds);
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public FargateProfileArgs build() {
            return new FargateProfileArgs(clusterName, fargateProfileName, podExecutionRoleArn, selectors, subnetIds, tags);
        }
    }
}
