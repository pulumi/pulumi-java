// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIpRangesArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetIpRangesArgs Empty = new GetIpRangesArgs();

    /**
     * Filter IP ranges by regions (or include all regions, if
     * omitted). Valid items are `global` (for `cloudfront`) as well as all AWS regions
     * (e.g., `eu-central-1`)
     * 
     */
    @Import(name="regions")
      private final @Nullable List<String> regions;

    public List<String> getRegions() {
        return this.regions == null ? List.of() : this.regions;
    }

    /**
     * Filter IP ranges by services. Valid items are `amazon`
     * (for amazon.com), `amazon_connect`, `api_gateway`, `cloud9`, `cloudfront`,
     * `codebuild`, `dynamodb`, `ec2`, `ec2_instance_connect`, `globalaccelerator`,
     * `route53`, `route53_healthchecks`, `s3` and `workspaces_gateways`. See the
     * [`service` attribute][2] documentation for other possible values.
     * 
     */
    @Import(name="services", required=true)
      private final List<String> services;

    public List<String> getServices() {
        return this.services;
    }

    /**
     * Custom URL for source JSON file. Syntax must match [AWS IP Address Ranges documentation](https://docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html). Defaults to `https://ip-ranges.amazonaws.com/ip-ranges.json`.
     * 
     */
    @Import(name="url")
      private final @Nullable String url;

    public Optional<String> getUrl() {
        return this.url == null ? Optional.empty() : Optional.ofNullable(this.url);
    }

    public GetIpRangesArgs(
        @Nullable List<String> regions,
        List<String> services,
        @Nullable String url) {
        this.regions = regions;
        this.services = Objects.requireNonNull(services, "expected parameter 'services' to be non-null");
        this.url = url;
    }

    private GetIpRangesArgs() {
        this.regions = List.of();
        this.services = List.of();
        this.url = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpRangesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> regions;
        private List<String> services;
        private @Nullable String url;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIpRangesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.regions = defaults.regions;
    	      this.services = defaults.services;
    	      this.url = defaults.url;
        }

        public Builder regions(@Nullable List<String> regions) {
            this.regions = regions;
            return this;
        }
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }
        public Builder services(List<String> services) {
            this.services = Objects.requireNonNull(services);
            return this;
        }
        public Builder services(String... services) {
            return services(List.of(services));
        }
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }        public GetIpRangesArgs build() {
            return new GetIpRangesArgs(regions, services, url);
        }
    }
}
