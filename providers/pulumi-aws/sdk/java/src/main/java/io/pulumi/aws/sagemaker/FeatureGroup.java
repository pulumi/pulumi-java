// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.sagemaker.FeatureGroupArgs;
import io.pulumi.aws.sagemaker.inputs.FeatureGroupState;
import io.pulumi.aws.sagemaker.outputs.FeatureGroupFeatureDefinition;
import io.pulumi.aws.sagemaker.outputs.FeatureGroupOfflineStoreConfig;
import io.pulumi.aws.sagemaker.outputs.FeatureGroupOnlineStoreConfig;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a SageMaker Feature Group resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * Basic usage:
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.sagemaker.FeatureGroup("example", {
 *     featureGroupName: "example",
 *     recordIdentifierFeatureName: "example",
 *     eventTimeFeatureName: "example",
 *     roleArn: aws_iam_role.test.arn,
 *     featureDefinitions: [{
 *         featureName: "example",
 *         featureType: "String",
 *     }],
 *     onlineStoreConfig: {
 *         enableOnlineStore: true,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.sagemaker.FeatureGroup("example",
 *     feature_group_name="example",
 *     record_identifier_feature_name="example",
 *     event_time_feature_name="example",
 *     role_arn=aws_iam_role["test"]["arn"],
 *     feature_definitions=[aws.sagemaker.FeatureGroupFeatureDefinitionArgs(
 *         feature_name="example",
 *         feature_type="String",
 *     )],
 *     online_store_config=aws.sagemaker.FeatureGroupOnlineStoreConfigArgs(
 *         enable_online_store=True,
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Sagemaker.FeatureGroup("example", new Aws.Sagemaker.FeatureGroupArgs
 *         {
 *             FeatureGroupName = "example",
 *             RecordIdentifierFeatureName = "example",
 *             EventTimeFeatureName = "example",
 *             RoleArn = aws_iam_role.Test.Arn,
 *             FeatureDefinitions = 
 *             {
 *                 new Aws.Sagemaker.Inputs.FeatureGroupFeatureDefinitionArgs
 *                 {
 *                     FeatureName = "example",
 *                     FeatureType = "String",
 *                 },
 *             },
 *             OnlineStoreConfig = new Aws.Sagemaker.Inputs.FeatureGroupOnlineStoreConfigArgs
 *             {
 *                 EnableOnlineStore = true,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/sagemaker"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := sagemaker.NewFeatureGroup(ctx, "example", &sagemaker.FeatureGroupArgs{
 * 			FeatureGroupName:            pulumi.String("example"),
 * 			RecordIdentifierFeatureName: pulumi.String("example"),
 * 			EventTimeFeatureName:        pulumi.String("example"),
 * 			RoleArn:                     pulumi.Any(aws_iam_role.Test.Arn),
 * 			FeatureDefinitions: sagemaker.FeatureGroupFeatureDefinitionArray{
 * 				&sagemaker.FeatureGroupFeatureDefinitionArgs{
 * 					FeatureName: pulumi.String("example"),
 * 					FeatureType: pulumi.String("String"),
 * 				},
 * 			},
 * 			OnlineStoreConfig: &sagemaker.FeatureGroupOnlineStoreConfigArgs{
 * 				EnableOnlineStore: pulumi.Bool(true),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Feature Groups can be imported using the `name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:sagemaker/featureGroup:FeatureGroup test_feature_group feature_group-foo
 * ```
 * 
 *  
 */
@ResourceType(type="aws:sagemaker/featureGroup:FeatureGroup")
public class FeatureGroup extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * A free-form description of a Feature Group.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A free-form description of a Feature Group.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The name of the feature that stores the EventTime of a Record in a Feature Group.
     * 
     */
    @Export(name="eventTimeFeatureName", type=String.class, parameters={})
    private Output<String> eventTimeFeatureName;

    /**
     * @return The name of the feature that stores the EventTime of a Record in a Feature Group.
     * 
     */
    public Output<String> getEventTimeFeatureName() {
        return this.eventTimeFeatureName;
    }
    /**
     * A list of Feature names and types. See Feature Definition Below.
     * 
     */
    @Export(name="featureDefinitions", type=List.class, parameters={FeatureGroupFeatureDefinition.class})
    private Output<List<FeatureGroupFeatureDefinition>> featureDefinitions;

    /**
     * @return A list of Feature names and types. See Feature Definition Below.
     * 
     */
    public Output<List<FeatureGroupFeatureDefinition>> getFeatureDefinitions() {
        return this.featureDefinitions;
    }
    /**
     * The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
     * 
     */
    @Export(name="featureGroupName", type=String.class, parameters={})
    private Output<String> featureGroupName;

    /**
     * @return The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
     * 
     */
    public Output<String> getFeatureGroupName() {
        return this.featureGroupName;
    }
    /**
     * The Offline Feature Store Configuration. See Offline Store Config Below.
     * 
     */
    @Export(name="offlineStoreConfig", type=FeatureGroupOfflineStoreConfig.class, parameters={})
    private Output</* @Nullable */ FeatureGroupOfflineStoreConfig> offlineStoreConfig;

    /**
     * @return The Offline Feature Store Configuration. See Offline Store Config Below.
     * 
     */
    public Output</* @Nullable */ FeatureGroupOfflineStoreConfig> getOfflineStoreConfig() {
        return this.offlineStoreConfig;
    }
    /**
     * The Online Feature Store Configuration. See Online Store Config Below.
     * 
     */
    @Export(name="onlineStoreConfig", type=FeatureGroupOnlineStoreConfig.class, parameters={})
    private Output</* @Nullable */ FeatureGroupOnlineStoreConfig> onlineStoreConfig;

    /**
     * @return The Online Feature Store Configuration. See Online Store Config Below.
     * 
     */
    public Output</* @Nullable */ FeatureGroupOnlineStoreConfig> getOnlineStoreConfig() {
        return this.onlineStoreConfig;
    }
    /**
     * The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
     * 
     */
    @Export(name="recordIdentifierFeatureName", type=String.class, parameters={})
    private Output<String> recordIdentifierFeatureName;

    /**
     * @return The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
     * 
     */
    public Output<String> getRecordIdentifierFeatureName() {
        return this.recordIdentifierFeatureName;
    }
    /**
     * The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
     * 
     */
    @Export(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
     * 
     */
    public Output<String> getRoleArn() {
        return this.roleArn;
    }
    /**
     * Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FeatureGroup(String name) {
        this(name, FeatureGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FeatureGroup(String name, FeatureGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FeatureGroup(String name, FeatureGroupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:sagemaker/featureGroup:FeatureGroup", name, args == null ? FeatureGroupArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private FeatureGroup(String name, Output<String> id, @Nullable FeatureGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:sagemaker/featureGroup:FeatureGroup", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FeatureGroup get(String name, Output<String> id, @Nullable FeatureGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new FeatureGroup(name, id, state, options);
    }
}
