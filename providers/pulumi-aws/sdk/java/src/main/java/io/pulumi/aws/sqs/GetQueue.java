// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sqs;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.sqs.inputs.GetQueueArgs;
import io.pulumi.aws.sqs.outputs.GetQueueResult;
import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetQueue {
    private GetQueue() {}
    public interface BuilderApplicator {
        public void apply(GetQueueArgs.Builder a);
    }
    private static GetQueueArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = GetQueueArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     * Use this data source to get the ARN and URL of queue in AWS Simple Queue Service (SQS).
 * By using this data source, you can reference SQS queues without having to hardcode
 * the ARNs as input.
 * 
 * ## Example Usage
 * 
     *
     * A collection of arguments for invoking getQueue.
 * 
     *
     * A collection of values returned by getQueue.
 * 
     */
    public static CompletableFuture<GetQueueResult> invokeAsync(BuilderApplicator argsBuilder, @Nullable InvokeOptions options) {
        return invokeAsync(buildArgs(argsBuilder), Utilities.withVersion(options));
    }
    /**
         * Use this data source to get the ARN and URL of queue in AWS Simple Queue Service (SQS).
     * By using this data source, you can reference SQS queues without having to hardcode
     * the ARNs as input.
     * 
     * ## Example Usage
     * 
     *
         * A collection of arguments for invoking getQueue.
     * 
     *
         * A collection of values returned by getQueue.
     * 
     */
    public static CompletableFuture<GetQueueResult> invokeAsync(GetQueueArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:sqs/getQueue:getQueue", TypeShape.of(GetQueueResult.class), args == null ? GetQueueArgs.Empty : args, Utilities.withVersion(options));
    }
}
