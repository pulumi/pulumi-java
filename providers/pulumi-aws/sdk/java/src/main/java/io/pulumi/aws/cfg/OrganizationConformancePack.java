// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cfg;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cfg.OrganizationConformancePackArgs;
import io.pulumi.aws.cfg.inputs.OrganizationConformancePackState;
import io.pulumi.aws.cfg.outputs.OrganizationConformancePackInputParameter;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages a Config Organization Conformance Pack. More information can be found in the [Managing Conformance Packs Across all Accounts in Your Organization](https://docs.aws.amazon.com/config/latest/developerguide/conformance-pack-organization-apis.html) and [AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) documentation. Example conformance pack templates may be found in the [AWS Config Rules Repository](https://github.com/awslabs/aws-config-rules/tree/master/aws-config-conformance-packs).
 * 
 * > **NOTE:** This resource must be created in the Organization master account or a delegated administrator account, and the Organization must have all features enabled. Every Organization account except those configured in the `excluded_accounts` argument must have a Configuration Recorder with proper IAM permissions before the Organization Conformance Pack will successfully create or update. See also the `aws.cfg.Recorder` resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Using Template Body
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleOrganization = new aws.organizations.Organization("exampleOrganization", {
 *     awsServiceAccessPrincipals: ["config-multiaccountsetup.amazonaws.com"],
 *     featureSet: "ALL",
 * });
 * const exampleOrganizationConformancePack = new aws.cfg.OrganizationConformancePack("exampleOrganizationConformancePack", {
 *     inputParameters: [{
 *         parameterName: "AccessKeysRotatedParameterMaxAccessKeyAge",
 *         parameterValue: "90",
 *     }],
 *     templateBody: `Parameters:
 *   AccessKeysRotatedParameterMaxAccessKeyAge:
 *     Type: String
 * Resources:
 *   IAMPasswordPolicy:
 *     Properties:
 *       ConfigRuleName: IAMPasswordPolicy
 *       Source:
 *         Owner: AWS
 *         SourceIdentifier: IAM_PASSWORD_POLICY
 *     Type: AWS::Config::ConfigRule
 * `,
 * }, {
 *     dependsOn: [
 *         aws_config_configuration_recorder.example,
 *         exampleOrganization,
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_organization = aws.organizations.Organization("exampleOrganization",
 *     aws_service_access_principals=["config-multiaccountsetup.amazonaws.com"],
 *     feature_set="ALL")
 * example_organization_conformance_pack = aws.cfg.OrganizationConformancePack("exampleOrganizationConformancePack",
 *     input_parameters=[aws.cfg.OrganizationConformancePackInputParameterArgs(
 *         parameter_name="AccessKeysRotatedParameterMaxAccessKeyAge",
 *         parameter_value="90",
 *     )],
 *     template_body="""Parameters:
 *   AccessKeysRotatedParameterMaxAccessKeyAge:
 *     Type: String
 * Resources:
 *   IAMPasswordPolicy:
 *     Properties:
 *       ConfigRuleName: IAMPasswordPolicy
 *       Source:
 *         Owner: AWS
 *         SourceIdentifier: IAM_PASSWORD_POLICY
 *     Type: AWS::Config::ConfigRule
 * """,
 *     opts=pulumi.ResourceOptions(depends_on=[
 *             aws_config_configuration_recorder["example"],
 *             example_organization,
 *         ]))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleOrganization = new Aws.Organizations.Organization("exampleOrganization", new Aws.Organizations.OrganizationArgs
 *         {
 *             AwsServiceAccessPrincipals = 
 *             {
 *                 "config-multiaccountsetup.amazonaws.com",
 *             },
 *             FeatureSet = "ALL",
 *         });
 *         var exampleOrganizationConformancePack = new Aws.Cfg.OrganizationConformancePack("exampleOrganizationConformancePack", new Aws.Cfg.OrganizationConformancePackArgs
 *         {
 *             InputParameters = 
 *             {
 *                 new Aws.Cfg.Inputs.OrganizationConformancePackInputParameterArgs
 *                 {
 *                     ParameterName = "AccessKeysRotatedParameterMaxAccessKeyAge",
 *                     ParameterValue = "90",
 *                 },
 *             },
 *             TemplateBody = @"Parameters:
 *   AccessKeysRotatedParameterMaxAccessKeyAge:
 *     Type: String
 * Resources:
 *   IAMPasswordPolicy:
 *     Properties:
 *       ConfigRuleName: IAMPasswordPolicy
 *       Source:
 *         Owner: AWS
 *         SourceIdentifier: IAM_PASSWORD_POLICY
 *     Type: AWS::Config::ConfigRule
 * ",
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 aws_config_configuration_recorder.Example,
 *                 exampleOrganization,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cfg"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/organizations"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleOrganization, err := organizations.NewOrganization(ctx, "exampleOrganization", &organizations.OrganizationArgs{
 * 			AwsServiceAccessPrincipals: pulumi.StringArray{
 * 				pulumi.String("config-multiaccountsetup.amazonaws.com"),
 * 			},
 * 			FeatureSet: pulumi.String("ALL"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cfg.NewOrganizationConformancePack(ctx, "exampleOrganizationConformancePack", &cfg.OrganizationConformancePackArgs{
 * 			InputParameters: cfg.OrganizationConformancePackInputParameterArray{
 * 				&cfg.OrganizationConformancePackInputParameterArgs{
 * 					ParameterName:  pulumi.String("AccessKeysRotatedParameterMaxAccessKeyAge"),
 * 					ParameterValue: pulumi.String("90"),
 * 				},
 * 			},
 * 			TemplateBody: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v", "Parameters:\n", "  AccessKeysRotatedParameterMaxAccessKeyAge:\n", "    Type: String\n", "Resources:\n", "  IAMPasswordPolicy:\n", "    Properties:\n", "      ConfigRuleName: IAMPasswordPolicy\n", "      Source:\n", "        Owner: AWS\n", "        SourceIdentifier: IAM_PASSWORD_POLICY\n", "    Type: AWS::Config::ConfigRule\n")),
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			aws_config_configuration_recorder.Example,
 * 			exampleOrganization,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Using Template S3 URI
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleOrganization = new aws.organizations.Organization("exampleOrganization", {
 *     awsServiceAccessPrincipals: ["config-multiaccountsetup.amazonaws.com"],
 *     featureSet: "ALL",
 * });
 * const exampleBucket = new aws.s3.Bucket("exampleBucket", {});
 * const exampleBucketObject = new aws.s3.BucketObject("exampleBucketObject", {
 *     bucket: exampleBucket.id,
 *     key: "example-key",
 *     content: `Resources:
 *   IAMPasswordPolicy:
 *     Properties:
 *       ConfigRuleName: IAMPasswordPolicy
 *       Source:
 *         Owner: AWS
 *         SourceIdentifier: IAM_PASSWORD_POLICY
 *     Type: AWS::Config::ConfigRule
 * `,
 * });
 * const exampleOrganizationConformancePack = new aws.cfg.OrganizationConformancePack("exampleOrganizationConformancePack", {templateS3Uri: pulumi.interpolate`s3://${exampleBucket.bucket}/${exampleBucketObject.key}`}, {
 *     dependsOn: [
 *         aws_config_configuration_recorder.example,
 *         exampleOrganization,
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_organization = aws.organizations.Organization("exampleOrganization",
 *     aws_service_access_principals=["config-multiaccountsetup.amazonaws.com"],
 *     feature_set="ALL")
 * example_bucket = aws.s3.Bucket("exampleBucket")
 * example_bucket_object = aws.s3.BucketObject("exampleBucketObject",
 *     bucket=example_bucket.id,
 *     key="example-key",
 *     content="""Resources:
 *   IAMPasswordPolicy:
 *     Properties:
 *       ConfigRuleName: IAMPasswordPolicy
 *       Source:
 *         Owner: AWS
 *         SourceIdentifier: IAM_PASSWORD_POLICY
 *     Type: AWS::Config::ConfigRule
 * """)
 * example_organization_conformance_pack = aws.cfg.OrganizationConformancePack("exampleOrganizationConformancePack", template_s3_uri=pulumi.Output.all(example_bucket.bucket, example_bucket_object.key).apply(lambda bucket, key: f"s3://{bucket}/{key}"),
 * opts=pulumi.ResourceOptions(depends_on=[
 *         aws_config_configuration_recorder["example"],
 *         example_organization,
 *     ]))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleOrganization = new Aws.Organizations.Organization("exampleOrganization", new Aws.Organizations.OrganizationArgs
 *         {
 *             AwsServiceAccessPrincipals = 
 *             {
 *                 "config-multiaccountsetup.amazonaws.com",
 *             },
 *             FeatureSet = "ALL",
 *         });
 *         var exampleBucket = new Aws.S3.Bucket("exampleBucket", new Aws.S3.BucketArgs
 *         {
 *         });
 *         var exampleBucketObject = new Aws.S3.BucketObject("exampleBucketObject", new Aws.S3.BucketObjectArgs
 *         {
 *             Bucket = exampleBucket.Id,
 *             Key = "example-key",
 *             Content = @"Resources:
 *   IAMPasswordPolicy:
 *     Properties:
 *       ConfigRuleName: IAMPasswordPolicy
 *       Source:
 *         Owner: AWS
 *         SourceIdentifier: IAM_PASSWORD_POLICY
 *     Type: AWS::Config::ConfigRule
 * ",
 *         });
 *         var exampleOrganizationConformancePack = new Aws.Cfg.OrganizationConformancePack("exampleOrganizationConformancePack", new Aws.Cfg.OrganizationConformancePackArgs
 *         {
 *             TemplateS3Uri = Output.Tuple(exampleBucket.BucketName, exampleBucketObject.Key).Apply(values =>
 *             {
 *                 var bucket = values.Item1;
 *                 var key = values.Item2;
 *                 return $"s3://{bucket}/{key}";
 *             }),
 *         }, new CustomResourceOptions
 *         {
 *             DependsOn = 
 *             {
 *                 aws_config_configuration_recorder.Example,
 *                 exampleOrganization,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cfg"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/organizations"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleOrganization, err := organizations.NewOrganization(ctx, "exampleOrganization", &organizations.OrganizationArgs{
 * 			AwsServiceAccessPrincipals: pulumi.StringArray{
 * 				pulumi.String("config-multiaccountsetup.amazonaws.com"),
 * 			},
 * 			FeatureSet: pulumi.String("ALL"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleBucket, err := s3.NewBucket(ctx, "exampleBucket", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleBucketObject, err := s3.NewBucketObject(ctx, "exampleBucketObject", &s3.BucketObjectArgs{
 * 			Bucket:  exampleBucket.ID(),
 * 			Key:     pulumi.String("example-key"),
 * 			Content: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v", "Resources:\n", "  IAMPasswordPolicy:\n", "    Properties:\n", "      ConfigRuleName: IAMPasswordPolicy\n", "      Source:\n", "        Owner: AWS\n", "        SourceIdentifier: IAM_PASSWORD_POLICY\n", "    Type: AWS::Config::ConfigRule\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cfg.NewOrganizationConformancePack(ctx, "exampleOrganizationConformancePack", &cfg.OrganizationConformancePackArgs{
 * 			TemplateS3Uri: pulumi.All(exampleBucket.Bucket, exampleBucketObject.Key).ApplyT(func(_args []interface{}) (string, error) {
 * 				bucket := _args[0].(string)
 * 				key := _args[1].(string)
 * 				return fmt.Sprintf("%v%v%v%v", "s3://", bucket, "/", key), nil
 * 			}).(pulumi.StringOutput),
 * 		}, pulumi.DependsOn([]pulumi.Resource{
 * 			aws_config_configuration_recorder.Example,
 * 			exampleOrganization,
 * 		}))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Config Organization Conformance Packs can be imported using the `name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:cfg/organizationConformancePack:OrganizationConformancePack example example
 * ```
 * 
 *  
 */
@ResourceType(type="aws:cfg/organizationConformancePack:OrganizationConformancePack")
public class OrganizationConformancePack extends io.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name (ARN) of the organization conformance pack.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of the organization conformance pack.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Amazon S3 bucket where AWS Config stores conformance pack templates. Delivery bucket must begin with `awsconfigconforms` prefix. Maximum length of 63.
     * 
     */
    @Export(name="deliveryS3Bucket", type=String.class, parameters={})
    private Output</* @Nullable */ String> deliveryS3Bucket;

    /**
     * @return Amazon S3 bucket where AWS Config stores conformance pack templates. Delivery bucket must begin with `awsconfigconforms` prefix. Maximum length of 63.
     * 
     */
    public Output</* @Nullable */ String> getDeliveryS3Bucket() {
        return this.deliveryS3Bucket;
    }
    /**
     * The prefix for the Amazon S3 bucket. Maximum length of 1024.
     * 
     */
    @Export(name="deliveryS3KeyPrefix", type=String.class, parameters={})
    private Output</* @Nullable */ String> deliveryS3KeyPrefix;

    /**
     * @return The prefix for the Amazon S3 bucket. Maximum length of 1024.
     * 
     */
    public Output</* @Nullable */ String> getDeliveryS3KeyPrefix() {
        return this.deliveryS3KeyPrefix;
    }
    /**
     * Set of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack. Maximum of 1000 accounts.
     * 
     */
    @Export(name="excludedAccounts", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> excludedAccounts;

    /**
     * @return Set of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack. Maximum of 1000 accounts.
     * 
     */
    public Output</* @Nullable */ List<String>> getExcludedAccounts() {
        return this.excludedAccounts;
    }
    /**
     * Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `template_body` or in the template stored in Amazon S3 if using `template_s3_uri`.
     * 
     */
    @Export(name="inputParameters", type=List.class, parameters={OrganizationConformancePackInputParameter.class})
    private Output</* @Nullable */ List<OrganizationConformancePackInputParameter>> inputParameters;

    /**
     * @return Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `template_body` or in the template stored in Amazon S3 if using `template_s3_uri`.
     * 
     */
    public Output</* @Nullable */ List<OrganizationConformancePackInputParameter>> getInputParameters() {
        return this.inputParameters;
    }
    /**
     * The name of the organization conformance pack. Must begin with a letter and contain from 1 to 128 alphanumeric characters and hyphens.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the organization conformance pack. Must begin with a letter and contain from 1 to 128 alphanumeric characters and hyphens.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
     * 
     */
    @Export(name="templateBody", type=String.class, parameters={})
    private Output</* @Nullable */ String> templateBody;

    /**
     * @return A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
     * 
     */
    public Output</* @Nullable */ String> getTemplateBody() {
        return this.templateBody;
    }
    /**
     * Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
     * 
     */
    @Export(name="templateS3Uri", type=String.class, parameters={})
    private Output</* @Nullable */ String> templateS3Uri;

    /**
     * @return Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
     * 
     */
    public Output</* @Nullable */ String> getTemplateS3Uri() {
        return this.templateS3Uri;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OrganizationConformancePack(String name) {
        this(name, OrganizationConformancePackArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OrganizationConformancePack(String name, @Nullable OrganizationConformancePackArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OrganizationConformancePack(String name, @Nullable OrganizationConformancePackArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cfg/organizationConformancePack:OrganizationConformancePack", name, args == null ? OrganizationConformancePackArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private OrganizationConformancePack(String name, Output<String> id, @Nullable OrganizationConformancePackState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cfg/organizationConformancePack:OrganizationConformancePack", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OrganizationConformancePack get(String name, Output<String> id, @Nullable OrganizationConformancePackState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new OrganizationConformancePack(name, id, state, options);
    }
}
