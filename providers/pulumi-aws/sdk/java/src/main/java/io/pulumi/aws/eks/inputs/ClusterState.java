// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.eks.inputs;

import io.pulumi.aws.eks.inputs.ClusterCertificateAuthorityGetArgs;
import io.pulumi.aws.eks.inputs.ClusterEncryptionConfigGetArgs;
import io.pulumi.aws.eks.inputs.ClusterIdentityGetArgs;
import io.pulumi.aws.eks.inputs.ClusterKubernetesNetworkConfigGetArgs;
import io.pulumi.aws.eks.inputs.ClusterVpcConfigGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterState extends io.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * ARN of the cluster.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * Attribute block containing `certificate-authority-data` for your cluster. Detailed below.
     * 
     */
    @Import(name="certificateAuthority")
      private final @Nullable Output<ClusterCertificateAuthorityGetArgs> certificateAuthority;

    public Output<ClusterCertificateAuthorityGetArgs> getCertificateAuthority() {
        return this.certificateAuthority == null ? Output.empty() : this.certificateAuthority;
    }

    /**
     * Unix epoch timestamp in seconds for when the cluster was created.
     * 
     */
    @Import(name="createdAt")
      private final @Nullable Output<String> createdAt;

    public Output<String> getCreatedAt() {
        return this.createdAt == null ? Output.empty() : this.createdAt;
    }

    /**
     * List of the desired control plane logging to enable. For more information, see [Amazon EKS Control Plane Logging](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html).
     * 
     */
    @Import(name="enabledClusterLogTypes")
      private final @Nullable Output<List<String>> enabledClusterLogTypes;

    public Output<List<String>> getEnabledClusterLogTypes() {
        return this.enabledClusterLogTypes == null ? Output.empty() : this.enabledClusterLogTypes;
    }

    /**
     * Configuration block with encryption configuration for the cluster. Only available on Kubernetes 1.13 and above clusters created after March 6, 2020. Detailed below.
     * 
     */
    @Import(name="encryptionConfig")
      private final @Nullable Output<ClusterEncryptionConfigGetArgs> encryptionConfig;

    public Output<ClusterEncryptionConfigGetArgs> getEncryptionConfig() {
        return this.encryptionConfig == null ? Output.empty() : this.encryptionConfig;
    }

    /**
     * Endpoint for your Kubernetes API server.
     * 
     */
    @Import(name="endpoint")
      private final @Nullable Output<String> endpoint;

    public Output<String> getEndpoint() {
        return this.endpoint == null ? Output.empty() : this.endpoint;
    }

    /**
     * Attribute block containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. Detailed below.
     * 
     */
    @Import(name="identities")
      private final @Nullable Output<List<ClusterIdentityGetArgs>> identities;

    public Output<List<ClusterIdentityGetArgs>> getIdentities() {
        return this.identities == null ? Output.empty() : this.identities;
    }

    /**
     * Configuration block with kubernetes network configuration for the cluster. Detailed below. If removed, this provider will only perform drift detection if a configuration value is provided.
     * 
     */
    @Import(name="kubernetesNetworkConfig")
      private final @Nullable Output<ClusterKubernetesNetworkConfigGetArgs> kubernetesNetworkConfig;

    public Output<ClusterKubernetesNetworkConfigGetArgs> getKubernetesNetworkConfig() {
        return this.kubernetesNetworkConfig == null ? Output.empty() : this.kubernetesNetworkConfig;
    }

    /**
     * Name of the cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Platform version for the cluster.
     * 
     */
    @Import(name="platformVersion")
      private final @Nullable Output<String> platformVersion;

    public Output<String> getPlatformVersion() {
        return this.platformVersion == null ? Output.empty() : this.platformVersion;
    }

    /**
     * ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
     * 
     */
    @Import(name="roleArn")
      private final @Nullable Output<String> roleArn;

    public Output<String> getRoleArn() {
        return this.roleArn == null ? Output.empty() : this.roleArn;
    }

    /**
     * Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`.
     * 
     */
    @Import(name="status")
      private final @Nullable Output<String> status;

    public Output<String> getStatus() {
        return this.status == null ? Output.empty() : this.status;
    }

    /**
     * Key-value map of resource tags.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider.
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    /**
     * Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<String> version;

    public Output<String> getVersion() {
        return this.version == null ? Output.empty() : this.version;
    }

    /**
     * Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.
     * 
     */
    @Import(name="vpcConfig")
      private final @Nullable Output<ClusterVpcConfigGetArgs> vpcConfig;

    public Output<ClusterVpcConfigGetArgs> getVpcConfig() {
        return this.vpcConfig == null ? Output.empty() : this.vpcConfig;
    }

    public ClusterState(
        @Nullable Output<String> arn,
        @Nullable Output<ClusterCertificateAuthorityGetArgs> certificateAuthority,
        @Nullable Output<String> createdAt,
        @Nullable Output<List<String>> enabledClusterLogTypes,
        @Nullable Output<ClusterEncryptionConfigGetArgs> encryptionConfig,
        @Nullable Output<String> endpoint,
        @Nullable Output<List<ClusterIdentityGetArgs>> identities,
        @Nullable Output<ClusterKubernetesNetworkConfigGetArgs> kubernetesNetworkConfig,
        @Nullable Output<String> name,
        @Nullable Output<String> platformVersion,
        @Nullable Output<String> roleArn,
        @Nullable Output<String> status,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> version,
        @Nullable Output<ClusterVpcConfigGetArgs> vpcConfig) {
        this.arn = arn;
        this.certificateAuthority = certificateAuthority;
        this.createdAt = createdAt;
        this.enabledClusterLogTypes = enabledClusterLogTypes;
        this.encryptionConfig = encryptionConfig;
        this.endpoint = endpoint;
        this.identities = identities;
        this.kubernetesNetworkConfig = kubernetesNetworkConfig;
        this.name = name;
        this.platformVersion = platformVersion;
        this.roleArn = roleArn;
        this.status = status;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.version = version;
        this.vpcConfig = vpcConfig;
    }

    private ClusterState() {
        this.arn = Output.empty();
        this.certificateAuthority = Output.empty();
        this.createdAt = Output.empty();
        this.enabledClusterLogTypes = Output.empty();
        this.encryptionConfig = Output.empty();
        this.endpoint = Output.empty();
        this.identities = Output.empty();
        this.kubernetesNetworkConfig = Output.empty();
        this.name = Output.empty();
        this.platformVersion = Output.empty();
        this.roleArn = Output.empty();
        this.status = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.version = Output.empty();
        this.vpcConfig = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<ClusterCertificateAuthorityGetArgs> certificateAuthority;
        private @Nullable Output<String> createdAt;
        private @Nullable Output<List<String>> enabledClusterLogTypes;
        private @Nullable Output<ClusterEncryptionConfigGetArgs> encryptionConfig;
        private @Nullable Output<String> endpoint;
        private @Nullable Output<List<ClusterIdentityGetArgs>> identities;
        private @Nullable Output<ClusterKubernetesNetworkConfigGetArgs> kubernetesNetworkConfig;
        private @Nullable Output<String> name;
        private @Nullable Output<String> platformVersion;
        private @Nullable Output<String> roleArn;
        private @Nullable Output<String> status;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> version;
        private @Nullable Output<ClusterVpcConfigGetArgs> vpcConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.certificateAuthority = defaults.certificateAuthority;
    	      this.createdAt = defaults.createdAt;
    	      this.enabledClusterLogTypes = defaults.enabledClusterLogTypes;
    	      this.encryptionConfig = defaults.encryptionConfig;
    	      this.endpoint = defaults.endpoint;
    	      this.identities = defaults.identities;
    	      this.kubernetesNetworkConfig = defaults.kubernetesNetworkConfig;
    	      this.name = defaults.name;
    	      this.platformVersion = defaults.platformVersion;
    	      this.roleArn = defaults.roleArn;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.version = defaults.version;
    	      this.vpcConfig = defaults.vpcConfig;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }
        public Builder certificateAuthority(@Nullable Output<ClusterCertificateAuthorityGetArgs> certificateAuthority) {
            this.certificateAuthority = certificateAuthority;
            return this;
        }
        public Builder certificateAuthority(@Nullable ClusterCertificateAuthorityGetArgs certificateAuthority) {
            this.certificateAuthority = Output.ofNullable(certificateAuthority);
            return this;
        }
        public Builder createdAt(@Nullable Output<String> createdAt) {
            this.createdAt = createdAt;
            return this;
        }
        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = Output.ofNullable(createdAt);
            return this;
        }
        public Builder enabledClusterLogTypes(@Nullable Output<List<String>> enabledClusterLogTypes) {
            this.enabledClusterLogTypes = enabledClusterLogTypes;
            return this;
        }
        public Builder enabledClusterLogTypes(@Nullable List<String> enabledClusterLogTypes) {
            this.enabledClusterLogTypes = Output.ofNullable(enabledClusterLogTypes);
            return this;
        }
        public Builder enabledClusterLogTypes(String... enabledClusterLogTypes) {
            return enabledClusterLogTypes(List.of(enabledClusterLogTypes));
        }
        public Builder encryptionConfig(@Nullable Output<ClusterEncryptionConfigGetArgs> encryptionConfig) {
            this.encryptionConfig = encryptionConfig;
            return this;
        }
        public Builder encryptionConfig(@Nullable ClusterEncryptionConfigGetArgs encryptionConfig) {
            this.encryptionConfig = Output.ofNullable(encryptionConfig);
            return this;
        }
        public Builder endpoint(@Nullable Output<String> endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = Output.ofNullable(endpoint);
            return this;
        }
        public Builder identities(@Nullable Output<List<ClusterIdentityGetArgs>> identities) {
            this.identities = identities;
            return this;
        }
        public Builder identities(@Nullable List<ClusterIdentityGetArgs> identities) {
            this.identities = Output.ofNullable(identities);
            return this;
        }
        public Builder identities(ClusterIdentityGetArgs... identities) {
            return identities(List.of(identities));
        }
        public Builder kubernetesNetworkConfig(@Nullable Output<ClusterKubernetesNetworkConfigGetArgs> kubernetesNetworkConfig) {
            this.kubernetesNetworkConfig = kubernetesNetworkConfig;
            return this;
        }
        public Builder kubernetesNetworkConfig(@Nullable ClusterKubernetesNetworkConfigGetArgs kubernetesNetworkConfig) {
            this.kubernetesNetworkConfig = Output.ofNullable(kubernetesNetworkConfig);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder platformVersion(@Nullable Output<String> platformVersion) {
            this.platformVersion = platformVersion;
            return this;
        }
        public Builder platformVersion(@Nullable String platformVersion) {
            this.platformVersion = Output.ofNullable(platformVersion);
            return this;
        }
        public Builder roleArn(@Nullable Output<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = Output.ofNullable(roleArn);
            return this;
        }
        public Builder status(@Nullable Output<String> status) {
            this.status = status;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = Output.ofNullable(status);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }
        public Builder version(@Nullable Output<String> version) {
            this.version = version;
            return this;
        }
        public Builder version(@Nullable String version) {
            this.version = Output.ofNullable(version);
            return this;
        }
        public Builder vpcConfig(@Nullable Output<ClusterVpcConfigGetArgs> vpcConfig) {
            this.vpcConfig = vpcConfig;
            return this;
        }
        public Builder vpcConfig(@Nullable ClusterVpcConfigGetArgs vpcConfig) {
            this.vpcConfig = Output.ofNullable(vpcConfig);
            return this;
        }        public ClusterState build() {
            return new ClusterState(arn, certificateAuthority, createdAt, enabledClusterLogTypes, encryptionConfig, endpoint, identities, kubernetesNetworkConfig, name, platformVersion, roleArn, status, tags, tagsAll, version, vpcConfig);
        }
    }
}
