// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appmesh.inputs;

import io.pulumi.aws.appmesh.inputs.RouteSpecHttp2RouteMatchHeaderMatchGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RouteSpecHttp2RouteMatchHeaderGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final RouteSpecHttp2RouteMatchHeaderGetArgs Empty = new RouteSpecHttp2RouteMatchHeaderGetArgs();

    /**
     * If `true`, the match is on the opposite of the `match` method and value. Default is `false`.
     * 
     */
    @Import(name="invert")
      private final @Nullable Output<Boolean> invert;

    public Output<Boolean> getInvert() {
        return this.invert == null ? Output.empty() : this.invert;
    }

    /**
     * The method and value to match the header value sent with a request. Specify one match method.
     * 
     */
    @Import(name="match")
      private final @Nullable Output<RouteSpecHttp2RouteMatchHeaderMatchGetArgs> match;

    public Output<RouteSpecHttp2RouteMatchHeaderMatchGetArgs> getMatch() {
        return this.match == null ? Output.empty() : this.match;
    }

    /**
     * A name for the HTTP header in the client request that will be matched on.
     * 
     */
    @Import(name="name", required=true)
      private final Output<String> name;

    public Output<String> getName() {
        return this.name;
    }

    public RouteSpecHttp2RouteMatchHeaderGetArgs(
        @Nullable Output<Boolean> invert,
        @Nullable Output<RouteSpecHttp2RouteMatchHeaderMatchGetArgs> match,
        Output<String> name) {
        this.invert = invert;
        this.match = match;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private RouteSpecHttp2RouteMatchHeaderGetArgs() {
        this.invert = Output.empty();
        this.match = Output.empty();
        this.name = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouteSpecHttp2RouteMatchHeaderGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> invert;
        private @Nullable Output<RouteSpecHttp2RouteMatchHeaderMatchGetArgs> match;
        private Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(RouteSpecHttp2RouteMatchHeaderGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.invert = defaults.invert;
    	      this.match = defaults.match;
    	      this.name = defaults.name;
        }

        public Builder invert(@Nullable Output<Boolean> invert) {
            this.invert = invert;
            return this;
        }
        public Builder invert(@Nullable Boolean invert) {
            this.invert = Output.ofNullable(invert);
            return this;
        }
        public Builder match(@Nullable Output<RouteSpecHttp2RouteMatchHeaderMatchGetArgs> match) {
            this.match = match;
            return this;
        }
        public Builder match(@Nullable RouteSpecHttp2RouteMatchHeaderMatchGetArgs match) {
            this.match = Output.ofNullable(match);
            return this;
        }
        public Builder name(Output<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder name(String name) {
            this.name = Output.of(Objects.requireNonNull(name));
            return this;
        }        public RouteSpecHttp2RouteMatchHeaderGetArgs build() {
            return new RouteSpecHttp2RouteMatchHeaderGetArgs(invert, match, name);
        }
    }
}
