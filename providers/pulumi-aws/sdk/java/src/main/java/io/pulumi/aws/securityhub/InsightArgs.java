// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.securityhub;

import io.pulumi.aws.securityhub.inputs.InsightFiltersArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InsightArgs extends io.pulumi.resources.ResourceArgs {

    public static final InsightArgs Empty = new InsightArgs();

    /**
     * A configuration block including one or more (up to 10 distinct) attributes used to filter the findings included in the insight. The insight only includes findings that match criteria defined in the filters. See filters below for more details.
     * 
     */
    @Import(name="filters", required=true)
      private final Output<InsightFiltersArgs> filters;

    public Output<InsightFiltersArgs> getFilters() {
        return this.filters;
    }

    /**
     * The attribute used to group the findings for the insight e.g., if an insight is grouped by `ResourceId`, then the insight produces a list of resource identifiers.
     * 
     */
    @Import(name="groupByAttribute", required=true)
      private final Output<String> groupByAttribute;

    public Output<String> getGroupByAttribute() {
        return this.groupByAttribute;
    }

    /**
     * The name of the custom insight.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    public InsightArgs(
        Output<InsightFiltersArgs> filters,
        Output<String> groupByAttribute,
        @Nullable Output<String> name) {
        this.filters = Objects.requireNonNull(filters, "expected parameter 'filters' to be non-null");
        this.groupByAttribute = Objects.requireNonNull(groupByAttribute, "expected parameter 'groupByAttribute' to be non-null");
        this.name = name;
    }

    private InsightArgs() {
        this.filters = Output.empty();
        this.groupByAttribute = Output.empty();
        this.name = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InsightArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<InsightFiltersArgs> filters;
        private Output<String> groupByAttribute;
        private @Nullable Output<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(InsightArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.groupByAttribute = defaults.groupByAttribute;
    	      this.name = defaults.name;
        }

        public Builder filters(Output<InsightFiltersArgs> filters) {
            this.filters = Objects.requireNonNull(filters);
            return this;
        }
        public Builder filters(InsightFiltersArgs filters) {
            this.filters = Output.of(Objects.requireNonNull(filters));
            return this;
        }
        public Builder groupByAttribute(Output<String> groupByAttribute) {
            this.groupByAttribute = Objects.requireNonNull(groupByAttribute);
            return this;
        }
        public Builder groupByAttribute(String groupByAttribute) {
            this.groupByAttribute = Output.of(Objects.requireNonNull(groupByAttribute));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }        public InsightArgs build() {
            return new InsightArgs(filters, groupByAttribute, name);
        }
    }
}
