// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cognito;

import io.pulumi.aws.cognito.inputs.IdentityPoolRoleAttachmentRoleMappingArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IdentityPoolRoleAttachmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final IdentityPoolRoleAttachmentArgs Empty = new IdentityPoolRoleAttachmentArgs();

    /**
     * An identity pool ID in the format REGION:GUID.
     * 
     */
    @InputImport(name="identityPoolId", required=true)
      private final Output<String> identityPoolId;

    public Output<String> getIdentityPoolId() {
        return this.identityPoolId;
    }

    /**
     * A List of Role Mapping.
     * 
     */
    @InputImport(name="roleMappings")
      private final @Nullable Output<List<IdentityPoolRoleAttachmentRoleMappingArgs>> roleMappings;

    public Output<List<IdentityPoolRoleAttachmentRoleMappingArgs>> getRoleMappings() {
        return this.roleMappings == null ? Output.empty() : this.roleMappings;
    }

    /**
     * The map of roles associated with this pool. For a given role, the key will be either "authenticated" or "unauthenticated" and the value will be the Role ARN.
     * 
     */
    @InputImport(name="roles", required=true)
      private final Output<Map<String,String>> roles;

    public Output<Map<String,String>> getRoles() {
        return this.roles;
    }

    public IdentityPoolRoleAttachmentArgs(
        Output<String> identityPoolId,
        @Nullable Output<List<IdentityPoolRoleAttachmentRoleMappingArgs>> roleMappings,
        Output<Map<String,String>> roles) {
        this.identityPoolId = Objects.requireNonNull(identityPoolId, "expected parameter 'identityPoolId' to be non-null");
        this.roleMappings = roleMappings;
        this.roles = Objects.requireNonNull(roles, "expected parameter 'roles' to be non-null");
    }

    private IdentityPoolRoleAttachmentArgs() {
        this.identityPoolId = Output.empty();
        this.roleMappings = Output.empty();
        this.roles = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IdentityPoolRoleAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> identityPoolId;
        private @Nullable Output<List<IdentityPoolRoleAttachmentRoleMappingArgs>> roleMappings;
        private Output<Map<String,String>> roles;

        public Builder() {
    	      // Empty
        }

        public Builder(IdentityPoolRoleAttachmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityPoolId = defaults.identityPoolId;
    	      this.roleMappings = defaults.roleMappings;
    	      this.roles = defaults.roles;
        }

        public Builder identityPoolId(Output<String> identityPoolId) {
            this.identityPoolId = Objects.requireNonNull(identityPoolId);
            return this;
        }

        public Builder identityPoolId(String identityPoolId) {
            this.identityPoolId = Output.of(Objects.requireNonNull(identityPoolId));
            return this;
        }

        public Builder roleMappings(@Nullable Output<List<IdentityPoolRoleAttachmentRoleMappingArgs>> roleMappings) {
            this.roleMappings = roleMappings;
            return this;
        }

        public Builder roleMappings(@Nullable List<IdentityPoolRoleAttachmentRoleMappingArgs> roleMappings) {
            this.roleMappings = Output.ofNullable(roleMappings);
            return this;
        }

        public Builder roles(Output<Map<String,String>> roles) {
            this.roles = Objects.requireNonNull(roles);
            return this;
        }

        public Builder roles(Map<String,String> roles) {
            this.roles = Output.of(Objects.requireNonNull(roles));
            return this;
        }
        public IdentityPoolRoleAttachmentArgs build() {
            return new IdentityPoolRoleAttachmentArgs(identityPoolId, roleMappings, roles);
        }
    }
}
