// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssm.inputs;

import io.pulumi.aws.ssm.inputs.MaintenanceWindowTargetTargetGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MaintenanceWindowTargetState extends io.pulumi.resources.ResourceArgs {

    public static final MaintenanceWindowTargetState Empty = new MaintenanceWindowTargetState();

    /**
     * The description of the maintenance window target.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The name of the maintenance window target.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
     * 
     */
    @Import(name="ownerInformation")
      private final @Nullable Output<String> ownerInformation;

    public Output<String> getOwnerInformation() {
        return this.ownerInformation == null ? Output.empty() : this.ownerInformation;
    }

    /**
     * The type of target being registered with the Maintenance Window. Possible values are `INSTANCE` and `RESOURCE_GROUP`.
     * 
     */
    @Import(name="resourceType")
      private final @Nullable Output<String> resourceType;

    public Output<String> getPropResourceType() {
        return this.resourceType == null ? Output.empty() : this.resourceType;
    }

    /**
     * The targets to register with the maintenance window. In other words, the instances to run commands on when the maintenance window runs. You can specify targets using instance IDs, resource group names, or tags that have been applied to instances. For more information about these examples formats see
     * (https://docs.aws.amazon.com/systems-manager/latest/userguide/mw-cli-tutorial-targets-examples.html)
     * 
     */
    @Import(name="targets")
      private final @Nullable Output<List<MaintenanceWindowTargetTargetGetArgs>> targets;

    public Output<List<MaintenanceWindowTargetTargetGetArgs>> getTargets() {
        return this.targets == null ? Output.empty() : this.targets;
    }

    /**
     * The Id of the maintenance window to register the target with.
     * 
     */
    @Import(name="windowId")
      private final @Nullable Output<String> windowId;

    public Output<String> getWindowId() {
        return this.windowId == null ? Output.empty() : this.windowId;
    }

    public MaintenanceWindowTargetState(
        @Nullable Output<String> description,
        @Nullable Output<String> name,
        @Nullable Output<String> ownerInformation,
        @Nullable Output<String> resourceType,
        @Nullable Output<List<MaintenanceWindowTargetTargetGetArgs>> targets,
        @Nullable Output<String> windowId) {
        this.description = description;
        this.name = name;
        this.ownerInformation = ownerInformation;
        this.resourceType = resourceType;
        this.targets = targets;
        this.windowId = windowId;
    }

    private MaintenanceWindowTargetState() {
        this.description = Output.empty();
        this.name = Output.empty();
        this.ownerInformation = Output.empty();
        this.resourceType = Output.empty();
        this.targets = Output.empty();
        this.windowId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MaintenanceWindowTargetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> name;
        private @Nullable Output<String> ownerInformation;
        private @Nullable Output<String> resourceType;
        private @Nullable Output<List<MaintenanceWindowTargetTargetGetArgs>> targets;
        private @Nullable Output<String> windowId;

        public Builder() {
    	      // Empty
        }

        public Builder(MaintenanceWindowTargetState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.ownerInformation = defaults.ownerInformation;
    	      this.resourceType = defaults.resourceType;
    	      this.targets = defaults.targets;
    	      this.windowId = defaults.windowId;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder ownerInformation(@Nullable Output<String> ownerInformation) {
            this.ownerInformation = ownerInformation;
            return this;
        }
        public Builder ownerInformation(@Nullable String ownerInformation) {
            this.ownerInformation = Output.ofNullable(ownerInformation);
            return this;
        }
        public Builder resourceType(@Nullable Output<String> resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = Output.ofNullable(resourceType);
            return this;
        }
        public Builder targets(@Nullable Output<List<MaintenanceWindowTargetTargetGetArgs>> targets) {
            this.targets = targets;
            return this;
        }
        public Builder targets(@Nullable List<MaintenanceWindowTargetTargetGetArgs> targets) {
            this.targets = Output.ofNullable(targets);
            return this;
        }
        public Builder targets(MaintenanceWindowTargetTargetGetArgs... targets) {
            return targets(List.of(targets));
        }
        public Builder windowId(@Nullable Output<String> windowId) {
            this.windowId = windowId;
            return this;
        }
        public Builder windowId(@Nullable String windowId) {
            this.windowId = Output.ofNullable(windowId);
            return this;
        }        public MaintenanceWindowTargetState build() {
            return new MaintenanceWindowTargetState(description, name, ownerInformation, resourceType, targets, windowId);
        }
    }
}
