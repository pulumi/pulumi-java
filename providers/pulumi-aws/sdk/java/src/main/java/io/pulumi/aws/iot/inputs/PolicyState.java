// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iot.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PolicyState extends io.pulumi.resources.ResourceArgs {

    public static final PolicyState Empty = new PolicyState();

    /**
     * The ARN assigned by AWS to this policy.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * The default version of this policy.
     * 
     */
    @InputImport(name="defaultVersionId")
      private final @Nullable Input<String> defaultVersionId;

    public Input<String> getDefaultVersionId() {
        return this.defaultVersionId == null ? Input.empty() : this.defaultVersionId;
    }

    /**
     * The name of the policy.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The policy document. This is a JSON formatted string. Use the [IoT Developer Guide](http://docs.aws.amazon.com/iot/latest/developerguide/iot-policies.html) for more information on IoT Policies.
     * 
     */
    @InputImport(name="policy")
      private final @Nullable Input<String> policy;

    public Input<String> getPolicy() {
        return this.policy == null ? Input.empty() : this.policy;
    }

    public PolicyState(
        @Nullable Input<String> arn,
        @Nullable Input<String> defaultVersionId,
        @Nullable Input<String> name,
        @Nullable Input<String> policy) {
        this.arn = arn;
        this.defaultVersionId = defaultVersionId;
        this.name = name;
        this.policy = policy;
    }

    private PolicyState() {
        this.arn = Input.empty();
        this.defaultVersionId = Input.empty();
        this.name = Input.empty();
        this.policy = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> defaultVersionId;
        private @Nullable Input<String> name;
        private @Nullable Input<String> policy;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.defaultVersionId = defaults.defaultVersionId;
    	      this.name = defaults.name;
    	      this.policy = defaults.policy;
        }

        public Builder arn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder defaultVersionId(@Nullable Input<String> defaultVersionId) {
            this.defaultVersionId = defaultVersionId;
            return this;
        }

        public Builder defaultVersionId(@Nullable String defaultVersionId) {
            this.defaultVersionId = Input.ofNullable(defaultVersionId);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder policy(@Nullable Input<String> policy) {
            this.policy = policy;
            return this;
        }

        public Builder policy(@Nullable String policy) {
            this.policy = Input.ofNullable(policy);
            return this;
        }
        public PolicyState build() {
            return new PolicyState(arn, defaultVersionId, name, policy);
        }
    }
}
