// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront.inputs;

import io.pulumi.aws.cloudfront.inputs.GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig extends io.pulumi.resources.InvokeArgs {

    public static final GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig Empty = new GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig();

    /**
     * Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`.
     * 
     */
    @InputImport(name="headerBehavior", required=true)
      private final String headerBehavior;

    public String getHeaderBehavior() {
        return this.headerBehavior;
    }

    /**
     * Object that contains a list of header names. See Items for more information.
     * 
     */
    @InputImport(name="headers", required=true)
      private final List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader> headers;

    public List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader> getHeaders() {
        return this.headers;
    }

    public GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig(
        String headerBehavior,
        List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader> headers) {
        this.headerBehavior = Objects.requireNonNull(headerBehavior, "expected parameter 'headerBehavior' to be non-null");
        this.headers = Objects.requireNonNull(headers, "expected parameter 'headers' to be non-null");
    }

    private GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig() {
        this.headerBehavior = null;
        this.headers = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String headerBehavior;
        private List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader> headers;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.headerBehavior = defaults.headerBehavior;
    	      this.headers = defaults.headers;
        }

        public Builder setHeaderBehavior(String headerBehavior) {
            this.headerBehavior = Objects.requireNonNull(headerBehavior);
            return this;
        }

        public Builder setHeaders(List<GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader> headers) {
            this.headers = Objects.requireNonNull(headers);
            return this;
        }
        public GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig build() {
            return new GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig(headerBehavior, headers);
        }
    }
}
