// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class UserPolicyAttachmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserPolicyAttachmentArgs Empty = new UserPolicyAttachmentArgs();

    /**
     * The ARN of the policy you want to apply
     * 
     */
    @Import(name="policyArn", required=true)
      private final Output<String> policyArn;

    public Output<String> getPolicyArn() {
        return this.policyArn;
    }

    /**
     * The user the policy should be applied to
     * 
     */
    @Import(name="user", required=true)
      private final Output<String> user;

    public Output<String> getUser() {
        return this.user;
    }

    public UserPolicyAttachmentArgs(
        Output<String> policyArn,
        Output<String> user) {
        this.policyArn = Objects.requireNonNull(policyArn, "expected parameter 'policyArn' to be non-null");
        this.user = Objects.requireNonNull(user, "expected parameter 'user' to be non-null");
    }

    private UserPolicyAttachmentArgs() {
        this.policyArn = Output.empty();
        this.user = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserPolicyAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> policyArn;
        private Output<String> user;

        public Builder() {
    	      // Empty
        }

        public Builder(UserPolicyAttachmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policyArn = defaults.policyArn;
    	      this.user = defaults.user;
        }

        public Builder policyArn(Output<String> policyArn) {
            this.policyArn = Objects.requireNonNull(policyArn);
            return this;
        }
        public Builder policyArn(String policyArn) {
            this.policyArn = Output.of(Objects.requireNonNull(policyArn));
            return this;
        }
        public Builder user(Output<String> user) {
            this.user = Objects.requireNonNull(user);
            return this;
        }        public UserPolicyAttachmentArgs build() {
            return new UserPolicyAttachmentArgs(policyArn, user);
        }
    }
}
