// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.serverlessrepository.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApplicationArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetApplicationArgs Empty = new GetApplicationArgs();

    /**
     * The ARN of the application.
     * 
     */
    @Import(name="applicationId", required=true)
      private final String applicationId;

    public String applicationId() {
        return this.applicationId;
    }

    /**
     * The requested version of the application. By default, retrieves the latest version.
     * 
     */
    @Import(name="semanticVersion")
      private final @Nullable String semanticVersion;

    public Optional<String> semanticVersion() {
        return this.semanticVersion == null ? Optional.empty() : Optional.ofNullable(this.semanticVersion);
    }

    public GetApplicationArgs(
        String applicationId,
        @Nullable String semanticVersion) {
        this.applicationId = Objects.requireNonNull(applicationId, "expected parameter 'applicationId' to be non-null");
        this.semanticVersion = semanticVersion;
    }

    private GetApplicationArgs() {
        this.applicationId = null;
        this.semanticVersion = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String applicationId;
        private @Nullable String semanticVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.semanticVersion = defaults.semanticVersion;
        }

        public Builder applicationId(String applicationId) {
            this.applicationId = Objects.requireNonNull(applicationId);
            return this;
        }
        public Builder semanticVersion(@Nullable String semanticVersion) {
            this.semanticVersion = semanticVersion;
            return this;
        }        public GetApplicationArgs build() {
            return new GetApplicationArgs(applicationId, semanticVersion);
        }
    }
}
