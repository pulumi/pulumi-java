// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3control;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.s3control.MultiRegionAccessPointPolicyArgs;
import io.pulumi.aws.s3control.inputs.MultiRegionAccessPointPolicyState;
import io.pulumi.aws.s3control.outputs.MultiRegionAccessPointPolicyDetails;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a resource to manage an S3 Multi-Region Access Point access control policy.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Basic Example
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const currentCallerIdentity = aws.getCallerIdentity({});
 * const currentPartition = aws.getPartition({});
 * const fooBucket = new aws.s3.Bucket("fooBucket", {});
 * const exampleMultiRegionAccessPoint = new aws.s3control.MultiRegionAccessPoint("exampleMultiRegionAccessPoint", {details: {
 *     name: "example",
 *     regions: [{
 *         bucket: fooBucket.id,
 *     }],
 * }});
 * const exampleMultiRegionAccessPointPolicy = new aws.s3control.MultiRegionAccessPointPolicy("exampleMultiRegionAccessPointPolicy", {details: {
 *     name: exampleMultiRegionAccessPoint.id.apply(id => id.split(":"))[1],
 *     policy: pulumi.all([currentCallerIdentity, currentPartition, currentCallerIdentity, exampleMultiRegionAccessPoint.alias]).apply(([currentCallerIdentity, currentPartition, currentCallerIdentity1, alias]) => JSON.stringify({
 *         Version: "2012-10-17",
 *         Statement: [{
 *             Sid: "Example",
 *             Effect: "Allow",
 *             Principal: {
 *                 AWS: currentCallerIdentity.accountId,
 *             },
 *             Action: [
 *                 "s3:GetObject",
 *                 "s3:PutObject",
 *             ],
 *             Resource: `arn:${currentPartition.partition}:s3::${currentCallerIdentity1.accountId}:accesspoint/${alias}/object/*`,
 *         }],
 *     })),
 * }});
 * ```
 * ```python
 * import pulumi
 * import json
 * import pulumi_aws as aws
 * 
 * current_caller_identity = aws.get_caller_identity()
 * current_partition = aws.get_partition()
 * foo_bucket = aws.s3.Bucket("fooBucket")
 * example_multi_region_access_point = aws.s3control.MultiRegionAccessPoint("exampleMultiRegionAccessPoint", details=aws.s3control.MultiRegionAccessPointDetailsArgs(
 *     name="example",
 *     regions=[aws.s3control.MultiRegionAccessPointDetailsRegionArgs(
 *         bucket=foo_bucket.id,
 *     )],
 * ))
 * example_multi_region_access_point_policy = aws.s3control.MultiRegionAccessPointPolicy("exampleMultiRegionAccessPointPolicy", details=aws.s3control.MultiRegionAccessPointPolicyDetailsArgs(
 *     name=example_multi_region_access_point.id.apply(lambda id: id.split(":"))[1],
 *     policy=example_multi_region_access_point.alias.apply(lambda alias: json.dumps({
 *         "Version": "2012-10-17",
 *         "Statement": [{
 *             "Sid": "Example",
 *             "Effect": "Allow",
 *             "Principal": {
 *                 "AWS": current_caller_identity.account_id,
 *             },
 *             "Action": [
 *                 "s3:GetObject",
 *                 "s3:PutObject",
 *             ],
 *             "Resource": f"arn:{current_partition.partition}:s3::{current_caller_identity.account_id}:accesspoint/{alias}/object/*",
 *         }],
 *     })),
 * ))
 * ```
 * ```csharp
 * using System.Collections.Generic;
 * using System.Text.Json;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var currentCallerIdentity = Output.Create(Aws.GetCallerIdentity.InvokeAsync());
 *         var currentPartition = Output.Create(Aws.GetPartition.InvokeAsync());
 *         var fooBucket = new Aws.S3.Bucket("fooBucket", new Aws.S3.BucketArgs
 *         {
 *         });
 *         var exampleMultiRegionAccessPoint = new Aws.S3Control.MultiRegionAccessPoint("exampleMultiRegionAccessPoint", new Aws.S3Control.MultiRegionAccessPointArgs
 *         {
 *             Details = new Aws.S3Control.Inputs.MultiRegionAccessPointDetailsArgs
 *             {
 *                 Name = "example",
 *                 Regions = 
 *                 {
 *                     new Aws.S3Control.Inputs.MultiRegionAccessPointDetailsRegionArgs
 *                     {
 *                         Bucket = fooBucket.Id,
 *                     },
 *                 },
 *             },
 *         });
 *         var exampleMultiRegionAccessPointPolicy = new Aws.S3Control.MultiRegionAccessPointPolicy("exampleMultiRegionAccessPointPolicy", new Aws.S3Control.MultiRegionAccessPointPolicyArgs
 *         {
 *             Details = new Aws.S3Control.Inputs.MultiRegionAccessPointPolicyDetailsArgs
 *             {
 *                 Name = exampleMultiRegionAccessPoint.Id.Apply(id => id.Split(":"))[1],
 *                 Policy = Output.Tuple(currentCallerIdentity, currentPartition, currentCallerIdentity, exampleMultiRegionAccessPoint.Alias).Apply(values =>
 *                 {
 *                     var currentCallerIdentity = values.Item1;
 *                     var currentPartition = values.Item2;
 *                     var currentCallerIdentity1 = values.Item3;
 *                     var @alias = values.Item4;
 *                     return JsonSerializer.Serialize(new Dictionary<string, object?>
 *                     {
 *                         { "Version", "2012-10-17" },
 *                         { "Statement", new[]
 *                             {
 *                                 new Dictionary<string, object?>
 *                                 {
 *                                     { "Sid", "Example" },
 *                                     { "Effect", "Allow" },
 *                                     { "Principal", new Dictionary<string, object?>
 *                                     {
 *                                         { "AWS", currentCallerIdentity.AccountId },
 *                                     } },
 *                                     { "Action", new[]
 *                                         {
 *                                             "s3:GetObject",
 *                                             "s3:PutObject",
 *                                         }
 *                                      },
 *                                     { "Resource", $"arn:{currentPartition.Partition}:s3::{currentCallerIdentity1.AccountId}:accesspoint/{@alias}/object/*" },
 *                                 },
 *                             }
 *                          },
 *                     });
 *                 }),
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Multi-Region Access Point Policies can be imported using the `account_id` and `name` of the Multi-Region Access Point separated by a colon (`:`), e.g.
 * 
 * ```sh
 *  $ pulumi import aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy example 123456789012:example
 * ```
 * 
 *  
 */
@ResourceType(type="aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy")
public class MultiRegionAccessPointPolicy extends io.pulumi.resources.CustomResource {
    @Export(name="accountId", type=String.class, parameters={})
    private Output<String> accountId;

    public Output<String> getAccountId() {
        return this.accountId;
    }
    /**
     * A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
     * 
     */
    @Export(name="details", type=MultiRegionAccessPointPolicyDetails.class, parameters={})
    private Output<MultiRegionAccessPointPolicyDetails> details;

    /**
     * @return A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
     * 
     */
    public Output<MultiRegionAccessPointPolicyDetails> getDetails() {
        return this.details;
    }
    /**
     * The last established policy for the Multi-Region Access Point.
     * 
     */
    @Export(name="established", type=String.class, parameters={})
    private Output<String> established;

    /**
     * @return The last established policy for the Multi-Region Access Point.
     * 
     */
    public Output<String> getEstablished() {
        return this.established;
    }
    /**
     * The proposed policy for the Multi-Region Access Point.
     * 
     */
    @Export(name="proposed", type=String.class, parameters={})
    private Output<String> proposed;

    /**
     * @return The proposed policy for the Multi-Region Access Point.
     * 
     */
    public Output<String> getProposed() {
        return this.proposed;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MultiRegionAccessPointPolicy(String name) {
        this(name, MultiRegionAccessPointPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MultiRegionAccessPointPolicy(String name, MultiRegionAccessPointPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MultiRegionAccessPointPolicy(String name, MultiRegionAccessPointPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy", name, args == null ? MultiRegionAccessPointPolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private MultiRegionAccessPointPolicy(String name, Output<String> id, @Nullable MultiRegionAccessPointPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MultiRegionAccessPointPolicy get(String name, Output<String> id, @Nullable MultiRegionAccessPointPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new MultiRegionAccessPointPolicy(name, id, state, options);
    }
}
