// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.rds.OptionGroupArgs;
import io.pulumi.aws.rds.inputs.OptionGroupState;
import io.pulumi.aws.rds.outputs.OptionGroupOption;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an RDS DB option group resource. Documentation of the available options for various RDS engines can be found at:
 * 
 * * [MariaDB Options](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.MariaDB.Options.html)
 * * [Microsoft SQL Server Options](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.SQLServer.Options.html)
 * * [MySQL Options](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.MySQL.Options.html)
 * * [Oracle Options](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.Options.html)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.rds.OptionGroup("example", {
 *     optionGroupDescription: "Option Group",
 *     engineName: "sqlserver-ee",
 *     majorEngineVersion: "11.00",
 *     options: [
 *         {
 *             optionName: "Timezone",
 *             optionSettings: [{
 *                 name: "TIME_ZONE",
 *                 value: "UTC",
 *             }],
 *         },
 *         {
 *             optionName: "SQLSERVER_BACKUP_RESTORE",
 *             optionSettings: [{
 *                 name: "IAM_ROLE_ARN",
 *                 value: aws_iam_role.example.arn,
 *             }],
 *         },
 *         {
 *             optionName: "TDE",
 *         },
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.rds.OptionGroup("example",
 *     option_group_description="Option Group",
 *     engine_name="sqlserver-ee",
 *     major_engine_version="11.00",
 *     options=[
 *         aws.rds.OptionGroupOptionArgs(
 *             option_name="Timezone",
 *             option_settings=[aws.rds.OptionGroupOptionOptionSettingArgs(
 *                 name="TIME_ZONE",
 *                 value="UTC",
 *             )],
 *         ),
 *         aws.rds.OptionGroupOptionArgs(
 *             option_name="SQLSERVER_BACKUP_RESTORE",
 *             option_settings=[aws.rds.OptionGroupOptionOptionSettingArgs(
 *                 name="IAM_ROLE_ARN",
 *                 value=aws_iam_role["example"]["arn"],
 *             )],
 *         ),
 *         aws.rds.OptionGroupOptionArgs(
 *             option_name="TDE",
 *         ),
 *     ])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Rds.OptionGroup("example", new Aws.Rds.OptionGroupArgs
 *         {
 *             OptionGroupDescription = "Option Group",
 *             EngineName = "sqlserver-ee",
 *             MajorEngineVersion = "11.00",
 *             Options = 
 *             {
 *                 new Aws.Rds.Inputs.OptionGroupOptionArgs
 *                 {
 *                     OptionName = "Timezone",
 *                     OptionSettings = 
 *                     {
 *                         new Aws.Rds.Inputs.OptionGroupOptionOptionSettingArgs
 *                         {
 *                             Name = "TIME_ZONE",
 *                             Value = "UTC",
 *                         },
 *                     },
 *                 },
 *                 new Aws.Rds.Inputs.OptionGroupOptionArgs
 *                 {
 *                     OptionName = "SQLSERVER_BACKUP_RESTORE",
 *                     OptionSettings = 
 *                     {
 *                         new Aws.Rds.Inputs.OptionGroupOptionOptionSettingArgs
 *                         {
 *                             Name = "IAM_ROLE_ARN",
 *                             Value = aws_iam_role.Example.Arn,
 *                         },
 *                     },
 *                 },
 *                 new Aws.Rds.Inputs.OptionGroupOptionArgs
 *                 {
 *                     OptionName = "TDE",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/rds"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := rds.NewOptionGroup(ctx, "example", &rds.OptionGroupArgs{
 * 			OptionGroupDescription: pulumi.String("Option Group"),
 * 			EngineName:             pulumi.String("sqlserver-ee"),
 * 			MajorEngineVersion:     pulumi.String("11.00"),
 * 			Options: rds.OptionGroupOptionArray{
 * 				&rds.OptionGroupOptionArgs{
 * 					OptionName: pulumi.String("Timezone"),
 * 					OptionSettings: rds.OptionGroupOptionOptionSettingArray{
 * 						&rds.OptionGroupOptionOptionSettingArgs{
 * 							Name:  pulumi.String("TIME_ZONE"),
 * 							Value: pulumi.String("UTC"),
 * 						},
 * 					},
 * 				},
 * 				&rds.OptionGroupOptionArgs{
 * 					OptionName: pulumi.String("SQLSERVER_BACKUP_RESTORE"),
 * 					OptionSettings: rds.OptionGroupOptionOptionSettingArray{
 * 						&rds.OptionGroupOptionOptionSettingArgs{
 * 							Name:  pulumi.String("IAM_ROLE_ARN"),
 * 							Value: pulumi.Any(aws_iam_role.Example.Arn),
 * 						},
 * 					},
 * 				},
 * 				&rds.OptionGroupOptionArgs{
 * 					OptionName: pulumi.String("TDE"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * > **Note**: Any modifications to the `aws.rds.OptionGroup` are set to happen immediately as we default to applying immediately.
 * 
 * > **WARNING:** You can perform a destroy on a `aws.rds.OptionGroup`, as long as it is not associated with any Amazon RDS resource. An option group can be associated with a DB instance, a manual DB snapshot, or an automated DB snapshot.
 * 
 * If you try to delete an option group that is associated with an Amazon RDS resource, an error similar to the following is returned:
 * 
 * > An error occurred (InvalidOptionGroupStateFault) when calling the DeleteOptionGroup operation: The option group 'optionGroupName' cannot be deleted because it is in use.
 * 
 * More information about this can be found [here](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithOptionGroups.html#USER_WorkingWithOptionGroups.Delete).
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * DB Option groups can be imported using the `name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:rds/optionGroup:OptionGroup example mysql-option-group
 * ```
 * 
 *  
 */
@ResourceType(type="aws:rds/optionGroup:OptionGroup")
public class OptionGroup extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the db option group.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the db option group.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Specifies the name of the engine that this option group should be associated with.
     * 
     */
    @Export(name="engineName", type=String.class, parameters={})
    private Output<String> engineName;

    /**
     * @return Specifies the name of the engine that this option group should be associated with.
     * 
     */
    public Output<String> getEngineName() {
        return this.engineName;
    }
    /**
     * Specifies the major version of the engine that this option group should be associated with.
     * 
     */
    @Export(name="majorEngineVersion", type=String.class, parameters={})
    private Output<String> majorEngineVersion;

    /**
     * @return Specifies the major version of the engine that this option group should be associated with.
     * 
     */
    public Output<String> getMajorEngineVersion() {
        return this.majorEngineVersion;
    }
    /**
     * The Name of the setting.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The Name of the setting.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`. Must be lowercase, to match as it is stored in AWS.
     * 
     */
    @Export(name="namePrefix", type=String.class, parameters={})
    private Output<String> namePrefix;

    /**
     * @return Creates a unique name beginning with the specified prefix. Conflicts with `name`. Must be lowercase, to match as it is stored in AWS.
     * 
     */
    public Output<String> getNamePrefix() {
        return this.namePrefix;
    }
    /**
     * The description of the option group. Defaults to "Managed by Pulumi".
     * 
     */
    @Export(name="optionGroupDescription", type=String.class, parameters={})
    private Output<String> optionGroupDescription;

    /**
     * @return The description of the option group. Defaults to "Managed by Pulumi".
     * 
     */
    public Output<String> getOptionGroupDescription() {
        return this.optionGroupDescription;
    }
    /**
     * A list of Options to apply.
     * 
     */
    @Export(name="options", type=List.class, parameters={OptionGroupOption.class})
    private Output</* @Nullable */ List<OptionGroupOption>> options;

    /**
     * @return A list of Options to apply.
     * 
     */
    public Output</* @Nullable */ List<OptionGroupOption>> getOptions() {
        return this.options;
    }
    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OptionGroup(String name) {
        this(name, OptionGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OptionGroup(String name, OptionGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OptionGroup(String name, OptionGroupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/optionGroup:OptionGroup", name, args == null ? OptionGroupArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private OptionGroup(String name, Output<String> id, @Nullable OptionGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/optionGroup:OptionGroup", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OptionGroup get(String name, Output<String> id, @Nullable OptionGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new OptionGroup(name, id, state, options);
    }
}
