// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lightsail;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.lightsail.StaticIpAttachmentArgs;
import io.pulumi.aws.lightsail.inputs.StaticIpAttachmentState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a static IP address attachment - relationship between a Lightsail static IP & Lightsail instance.
 * 
 * > **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones in Amazon Lightsail"](https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail) for more details
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const testStaticIp = new aws.lightsail.StaticIp("testStaticIp", {});
 * const testInstance = new aws.lightsail.Instance("testInstance", {
 *     availabilityZone: "us-east-1b",
 *     blueprintId: "string",
 *     bundleId: "string",
 *     keyPairName: "some_key_name",
 * });
 * const testStaticIpAttachment = new aws.lightsail.StaticIpAttachment("testStaticIpAttachment", {
 *     staticIpName: testStaticIp.id,
 *     instanceName: testInstance.id,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * test_static_ip = aws.lightsail.StaticIp("testStaticIp")
 * test_instance = aws.lightsail.Instance("testInstance",
 *     availability_zone="us-east-1b",
 *     blueprint_id="string",
 *     bundle_id="string",
 *     key_pair_name="some_key_name")
 * test_static_ip_attachment = aws.lightsail.StaticIpAttachment("testStaticIpAttachment",
 *     static_ip_name=test_static_ip.id,
 *     instance_name=test_instance.id)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var testStaticIp = new Aws.LightSail.StaticIp("testStaticIp", new Aws.LightSail.StaticIpArgs
 *         {
 *         });
 *         var testInstance = new Aws.LightSail.Instance("testInstance", new Aws.LightSail.InstanceArgs
 *         {
 *             AvailabilityZone = "us-east-1b",
 *             BlueprintId = "string",
 *             BundleId = "string",
 *             KeyPairName = "some_key_name",
 *         });
 *         var testStaticIpAttachment = new Aws.LightSail.StaticIpAttachment("testStaticIpAttachment", new Aws.LightSail.StaticIpAttachmentArgs
 *         {
 *             StaticIpName = testStaticIp.Id,
 *             InstanceName = testInstance.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/lightsail"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		testStaticIp, err := lightsail.NewStaticIp(ctx, "testStaticIp", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		testInstance, err := lightsail.NewInstance(ctx, "testInstance", &lightsail.InstanceArgs{
 * 			AvailabilityZone: pulumi.String("us-east-1b"),
 * 			BlueprintId:      pulumi.String("string"),
 * 			BundleId:         pulumi.String("string"),
 * 			KeyPairName:      pulumi.String("some_key_name"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = lightsail.NewStaticIpAttachment(ctx, "testStaticIpAttachment", &lightsail.StaticIpAttachmentArgs{
 * 			StaticIpName: testStaticIp.ID(),
 * 			InstanceName: testInstance.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:lightsail/staticIpAttachment:StaticIpAttachment")
public class StaticIpAttachment extends io.pulumi.resources.CustomResource {
    /**
     * The name of the Lightsail instance to attach the IP to
     * 
     */
    @Export(name="instanceName", type=String.class, parameters={})
    private Output<String> instanceName;

    /**
     * @return The name of the Lightsail instance to attach the IP to
     * 
     */
    public Output<String> getInstanceName() {
        return this.instanceName;
    }
    /**
     * The allocated static IP address
     * 
     */
    @Export(name="ipAddress", type=String.class, parameters={})
    private Output<String> ipAddress;

    /**
     * @return The allocated static IP address
     * 
     */
    public Output<String> getIpAddress() {
        return this.ipAddress;
    }
    /**
     * The name of the allocated static IP
     * 
     */
    @Export(name="staticIpName", type=String.class, parameters={})
    private Output<String> staticIpName;

    /**
     * @return The name of the allocated static IP
     * 
     */
    public Output<String> getStaticIpName() {
        return this.staticIpName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StaticIpAttachment(String name) {
        this(name, StaticIpAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StaticIpAttachment(String name, StaticIpAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StaticIpAttachment(String name, StaticIpAttachmentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:lightsail/staticIpAttachment:StaticIpAttachment", name, args == null ? StaticIpAttachmentArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private StaticIpAttachment(String name, Output<String> id, @Nullable StaticIpAttachmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:lightsail/staticIpAttachment:StaticIpAttachment", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StaticIpAttachment get(String name, Output<String> id, @Nullable StaticIpAttachmentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new StaticIpAttachment(name, id, state, options);
    }
}
