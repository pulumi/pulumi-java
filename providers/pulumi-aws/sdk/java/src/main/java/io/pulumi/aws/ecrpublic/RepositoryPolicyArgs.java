// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ecrpublic;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class RepositoryPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final RepositoryPolicyArgs Empty = new RepositoryPolicyArgs();

    @InputImport(name="policy", required=true)
      private final Input<String> policy;

    public Input<String> getPolicy() {
        return this.policy;
    }

    /**
     * Name of the repository to apply the policy.
     * 
     */
    @InputImport(name="repositoryName", required=true)
      private final Input<String> repositoryName;

    public Input<String> getRepositoryName() {
        return this.repositoryName;
    }

    public RepositoryPolicyArgs(
        Input<String> policy,
        Input<String> repositoryName) {
        this.policy = Objects.requireNonNull(policy, "expected parameter 'policy' to be non-null");
        this.repositoryName = Objects.requireNonNull(repositoryName, "expected parameter 'repositoryName' to be non-null");
    }

    private RepositoryPolicyArgs() {
        this.policy = Input.empty();
        this.repositoryName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> policy;
        private Input<String> repositoryName;

        public Builder() {
    	      // Empty
        }

        public Builder(RepositoryPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policy = defaults.policy;
    	      this.repositoryName = defaults.repositoryName;
        }

        public Builder setPolicy(Input<String> policy) {
            this.policy = Objects.requireNonNull(policy);
            return this;
        }

        public Builder setPolicy(String policy) {
            this.policy = Input.of(Objects.requireNonNull(policy));
            return this;
        }

        public Builder setRepositoryName(Input<String> repositoryName) {
            this.repositoryName = Objects.requireNonNull(repositoryName);
            return this;
        }

        public Builder setRepositoryName(String repositoryName) {
            this.repositoryName = Input.of(Objects.requireNonNull(repositoryName));
            return this;
        }
        public RepositoryPolicyArgs build() {
            return new RepositoryPolicyArgs(policy, repositoryName);
        }
    }
}
