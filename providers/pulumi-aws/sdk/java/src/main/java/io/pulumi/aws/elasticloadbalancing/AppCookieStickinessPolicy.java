// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticloadbalancing;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.elasticloadbalancing.AppCookieStickinessPolicyArgs;
import io.pulumi.aws.elasticloadbalancing.inputs.AppCookieStickinessPolicyState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an application cookie stickiness policy, which allows an ELB to wed its sticky cookie's expiration to a cookie generated by your application.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const lb = new aws.elb.LoadBalancer("lb", {
 *     availabilityZones: ["us-east-1a"],
 *     listeners: [{
 *         instancePort: 8000,
 *         instanceProtocol: "http",
 *         lbPort: 80,
 *         lbProtocol: "http",
 *     }],
 * });
 * const foo = new aws.elb.AppCookieStickinessPolicy("foo", {
 *     loadBalancer: lb.name,
 *     lbPort: 80,
 *     cookieName: "MyAppCookie",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * lb = aws.elb.LoadBalancer("lb",
 *     availability_zones=["us-east-1a"],
 *     listeners=[aws.elb.LoadBalancerListenerArgs(
 *         instance_port=8000,
 *         instance_protocol="http",
 *         lb_port=80,
 *         lb_protocol="http",
 *     )])
 * foo = aws.elb.AppCookieStickinessPolicy("foo",
 *     load_balancer=lb.name,
 *     lb_port=80,
 *     cookie_name="MyAppCookie")
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var lb = new Aws.Elb.LoadBalancer("lb", new Aws.Elb.LoadBalancerArgs
 *         {
 *             AvailabilityZones = 
 *             {
 *                 "us-east-1a",
 *             },
 *             Listeners = 
 *             {
 *                 new Aws.Elb.Inputs.LoadBalancerListenerArgs
 *                 {
 *                     InstancePort = 8000,
 *                     InstanceProtocol = "http",
 *                     LbPort = 80,
 *                     LbProtocol = "http",
 *                 },
 *             },
 *         });
 *         var foo = new Aws.Elb.AppCookieStickinessPolicy("foo", new Aws.Elb.AppCookieStickinessPolicyArgs
 *         {
 *             LoadBalancer = lb.Name,
 *             LbPort = 80,
 *             CookieName = "MyAppCookie",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/elb"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		lb, err := elb.NewLoadBalancer(ctx, "lb", &elb.LoadBalancerArgs{
 * 			AvailabilityZones: pulumi.StringArray{
 * 				pulumi.String("us-east-1a"),
 * 			},
 * 			Listeners: elb.LoadBalancerListenerArray{
 * 				&elb.LoadBalancerListenerArgs{
 * 					InstancePort:     pulumi.Int(8000),
 * 					InstanceProtocol: pulumi.String("http"),
 * 					LbPort:           pulumi.Int(80),
 * 					LbProtocol:       pulumi.String("http"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = elb.NewAppCookieStickinessPolicy(ctx, "foo", &elb.AppCookieStickinessPolicyArgs{
 * 			LoadBalancer: lb.Name,
 * 			LbPort:       pulumi.Int(80),
 * 			CookieName:   pulumi.String("MyAppCookie"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Application cookie stickiness policies can be imported using the ELB name, port, and policy name separated by colons (`:`), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:elasticloadbalancing/appCookieStickinessPolicy:AppCookieStickinessPolicy example my-elb:80:my-policy
 * ```
 * 
 *  
 * @Deprecated
 * aws.elasticloadbalancing.AppCookieStickinessPolicy has been deprecated in favor of aws.elb.AppCookieStickinessPolicy
 */
@Deprecated /* aws.elasticloadbalancing.AppCookieStickinessPolicy has been deprecated in favor of aws.elb.AppCookieStickinessPolicy */
@ResourceType(type="aws:elasticloadbalancing/appCookieStickinessPolicy:AppCookieStickinessPolicy")
public class AppCookieStickinessPolicy extends io.pulumi.resources.CustomResource {
    /**
     * The application cookie whose lifetime the ELB's cookie should follow.
     * 
     */
    @Export(name="cookieName", type=String.class, parameters={})
    private Output<String> cookieName;

    /**
     * @return The application cookie whose lifetime the ELB's cookie should follow.
     * 
     */
    public Output<String> getCookieName() {
        return this.cookieName;
    }
    /**
     * The load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     * 
     */
    @Export(name="lbPort", type=Integer.class, parameters={})
    private Output<Integer> lbPort;

    /**
     * @return The load balancer port to which the policy
     * should be applied. This must be an active listener on the load
     * balancer.
     * 
     */
    public Output<Integer> getLbPort() {
        return this.lbPort;
    }
    /**
     * The name of load balancer to which the policy
     * should be attached.
     * 
     */
    @Export(name="loadBalancer", type=String.class, parameters={})
    private Output<String> loadBalancer;

    /**
     * @return The name of load balancer to which the policy
     * should be attached.
     * 
     */
    public Output<String> getLoadBalancer() {
        return this.loadBalancer;
    }
    /**
     * The name of the stickiness policy.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the stickiness policy.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppCookieStickinessPolicy(String name) {
        this(name, AppCookieStickinessPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppCookieStickinessPolicy(String name, AppCookieStickinessPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppCookieStickinessPolicy(String name, AppCookieStickinessPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:elasticloadbalancing/appCookieStickinessPolicy:AppCookieStickinessPolicy", name, args == null ? AppCookieStickinessPolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private AppCookieStickinessPolicy(String name, Output<String> id, @Nullable AppCookieStickinessPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:elasticloadbalancing/appCookieStickinessPolicy:AppCookieStickinessPolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppCookieStickinessPolicy get(String name, Output<String> id, @Nullable AppCookieStickinessPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new AppCookieStickinessPolicy(name, id, state, options);
    }
}
