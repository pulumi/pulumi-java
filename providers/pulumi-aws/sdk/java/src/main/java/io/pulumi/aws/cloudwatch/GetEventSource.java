// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudwatch;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cloudwatch.inputs.GetEventSourceArgs;
import io.pulumi.aws.cloudwatch.outputs.GetEventSourceResult;
import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetEventSource {
    private GetEventSource() {}
    public interface BuilderApplicator {
        public void apply(GetEventSourceArgs.Builder a);
    }
    private static GetEventSourceArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = GetEventSourceArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     * Use this data source to get information about an EventBridge Partner Event Source. This data source will only return one partner event source. An error will be returned if multiple sources match the same name prefix.
 * 
 * > **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.
 * 
 * ## Example Usage
 * 
     *
     * A collection of arguments for invoking getEventSource.
 * 
     *
     * A collection of values returned by getEventSource.
 * 
     */
    public static CompletableFuture<GetEventSourceResult> invokeAsync(BuilderApplicator argsBuilder, @Nullable InvokeOptions options) {
        return invokeAsync(buildArgs(argsBuilder), Utilities.withVersion(options));
    }
    /**
         * Use this data source to get information about an EventBridge Partner Event Source. This data source will only return one partner event source. An error will be returned if multiple sources match the same name prefix.
     * 
     * > **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.
     * 
     * ## Example Usage
     * 
     *
         * A collection of arguments for invoking getEventSource.
     * 
     *
         * A collection of values returned by getEventSource.
     * 
     */
    public static CompletableFuture<GetEventSourceResult> invokeAsync(@Nullable GetEventSourceArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:cloudwatch/getEventSource:getEventSource", TypeShape.of(GetEventSourceResult.class), args == null ? GetEventSourceArgs.Empty : args, Utilities.withVersion(options));
    }
}
