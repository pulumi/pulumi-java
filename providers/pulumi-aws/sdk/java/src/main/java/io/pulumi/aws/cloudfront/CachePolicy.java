// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cloudfront.CachePolicyArgs;
import io.pulumi.aws.cloudfront.inputs.CachePolicyState;
import io.pulumi.aws.cloudfront.outputs.CachePolicyParametersInCacheKeyAndForwardedToOrigin;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * The following example below creates a CloudFront cache policy.
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.cloudfront.CachePolicy("example", {
 *     comment: "test comment",
 *     defaultTtl: 50,
 *     maxTtl: 100,
 *     minTtl: 1,
 *     parametersInCacheKeyAndForwardedToOrigin: {
 *         cookiesConfig: {
 *             cookieBehavior: "whitelist",
 *             cookies: {
 *                 items: ["example"],
 *             },
 *         },
 *         headersConfig: {
 *             headerBehavior: "whitelist",
 *             headers: {
 *                 items: ["example"],
 *             },
 *         },
 *         queryStringsConfig: {
 *             queryStringBehavior: "whitelist",
 *             queryStrings: {
 *                 items: ["example"],
 *             },
 *         },
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.cloudfront.CachePolicy("example",
 *     comment="test comment",
 *     default_ttl=50,
 *     max_ttl=100,
 *     min_ttl=1,
 *     parameters_in_cache_key_and_forwarded_to_origin=aws.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginArgs(
 *         cookies_config=aws.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs(
 *             cookie_behavior="whitelist",
 *             cookies=aws.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs(
 *                 items=["example"],
 *             ),
 *         ),
 *         headers_config=aws.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs(
 *             header_behavior="whitelist",
 *             headers=aws.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs(
 *                 items=["example"],
 *             ),
 *         ),
 *         query_strings_config=aws.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs(
 *             query_string_behavior="whitelist",
 *             query_strings=aws.cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs(
 *                 items=["example"],
 *             ),
 *         ),
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.CloudFront.CachePolicy("example", new Aws.CloudFront.CachePolicyArgs
 *         {
 *             Comment = "test comment",
 *             DefaultTtl = 50,
 *             MaxTtl = 100,
 *             MinTtl = 1,
 *             ParametersInCacheKeyAndForwardedToOrigin = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginArgs
 *             {
 *                 CookiesConfig = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs
 *                 {
 *                     CookieBehavior = "whitelist",
 *                     Cookies = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs
 *                     {
 *                         Items = 
 *                         {
 *                             "example",
 *                         },
 *                     },
 *                 },
 *                 HeadersConfig = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs
 *                 {
 *                     HeaderBehavior = "whitelist",
 *                     Headers = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs
 *                     {
 *                         Items = 
 *                         {
 *                             "example",
 *                         },
 *                     },
 *                 },
 *                 QueryStringsConfig = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs
 *                 {
 *                     QueryStringBehavior = "whitelist",
 *                     QueryStrings = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs
 *                     {
 *                         Items = 
 *                         {
 *                             "example",
 *                         },
 *                     },
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cloudfront"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := cloudfront.NewCachePolicy(ctx, "example", &cloudfront.CachePolicyArgs{
 * 			Comment:    pulumi.String("test comment"),
 * 			DefaultTtl: pulumi.Int(50),
 * 			MaxTtl:     pulumi.Int(100),
 * 			MinTtl:     pulumi.Int(1),
 * 			ParametersInCacheKeyAndForwardedToOrigin: &cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginArgs{
 * 				CookiesConfig: &cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs{
 * 					CookieBehavior: pulumi.String("whitelist"),
 * 					Cookies: &cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs{
 * 						Items: pulumi.StringArray{
 * 							pulumi.String("example"),
 * 						},
 * 					},
 * 				},
 * 				HeadersConfig: &cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs{
 * 					HeaderBehavior: pulumi.String("whitelist"),
 * 					Headers: &cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs{
 * 						Items: pulumi.StringArray{
 * 							pulumi.String("example"),
 * 						},
 * 					},
 * 				},
 * 				QueryStringsConfig: &cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs{
 * 					QueryStringBehavior: pulumi.String("whitelist"),
 * 					QueryStrings: &cloudfront.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs{
 * 						Items: pulumi.StringArray{
 * 							pulumi.String("example"),
 * 						},
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Cloudfront Cache Policies can be imported using the `id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:cloudfront/cachePolicy:CachePolicy policy 658327ea-f89d-4fab-a63d-7e88639e58f6
 * ```
 * 
 *  
 */
@ResourceType(type="aws:cloudfront/cachePolicy:CachePolicy")
public class CachePolicy extends io.pulumi.resources.CustomResource {
    /**
     * A comment to describe the cache policy.
     * 
     */
    @Export(name="comment", type=String.class, parameters={})
    private Output</* @Nullable */ String> comment;

    /**
     * @return A comment to describe the cache policy.
     * 
     */
    public Output</* @Nullable */ String> getComment() {
        return this.comment;
    }
    /**
     * The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    @Export(name="defaultTtl", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> defaultTtl;

    /**
     * @return The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    public Output</* @Nullable */ Integer> getDefaultTtl() {
        return this.defaultTtl;
    }
    /**
     * The current version of the cache policy.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return The current version of the cache policy.
     * 
     */
    public Output<String> getEtag() {
        return this.etag;
    }
    /**
     * The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    @Export(name="maxTtl", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxTtl;

    /**
     * @return The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    public Output</* @Nullable */ Integer> getMaxTtl() {
        return this.maxTtl;
    }
    /**
     * The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    @Export(name="minTtl", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> minTtl;

    /**
     * @return The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
     * 
     */
    public Output</* @Nullable */ Integer> getMinTtl() {
        return this.minTtl;
    }
    /**
     * A unique name to identify the cache policy.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A unique name to identify the cache policy.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
     * 
     */
    @Export(name="parametersInCacheKeyAndForwardedToOrigin", type=CachePolicyParametersInCacheKeyAndForwardedToOrigin.class, parameters={})
    private Output<CachePolicyParametersInCacheKeyAndForwardedToOrigin> parametersInCacheKeyAndForwardedToOrigin;

    /**
     * @return The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
     * 
     */
    public Output<CachePolicyParametersInCacheKeyAndForwardedToOrigin> getParametersInCacheKeyAndForwardedToOrigin() {
        return this.parametersInCacheKeyAndForwardedToOrigin;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CachePolicy(String name) {
        this(name, CachePolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CachePolicy(String name, CachePolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CachePolicy(String name, CachePolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudfront/cachePolicy:CachePolicy", name, args == null ? CachePolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private CachePolicy(String name, Output<String> id, @Nullable CachePolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudfront/cachePolicy:CachePolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CachePolicy get(String name, Output<String> id, @Nullable CachePolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new CachePolicy(name, id, state, options);
    }
}
