// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.pinpoint;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EmailChannelArgs extends io.pulumi.resources.ResourceArgs {

    public static final EmailChannelArgs Empty = new EmailChannelArgs();

    /**
     * The application ID.
     * 
     */
    @InputImport(name="applicationId", required=true)
      private final Input<String> applicationId;

    public Input<String> getApplicationId() {
        return this.applicationId;
    }

    /**
     * The ARN of the Amazon SES configuration set that you want to apply to messages that you send through the channel.
     * 
     */
    @InputImport(name="configurationSet")
      private final @Nullable Input<String> configurationSet;

    public Input<String> getConfigurationSet() {
        return this.configurationSet == null ? Input.empty() : this.configurationSet;
    }

    /**
     * Whether the channel is enabled or disabled. Defaults to `true`.
     * 
     */
    @InputImport(name="enabled")
      private final @Nullable Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled == null ? Input.empty() : this.enabled;
    }

    /**
     * The email address used to send emails from. You can use email only (`user@example.com`) or friendly address (`User <user@example.com>`). This field comply with [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt).
     * 
     */
    @InputImport(name="fromAddress", required=true)
      private final Input<String> fromAddress;

    public Input<String> getFromAddress() {
        return this.fromAddress;
    }

    /**
     * The ARN of an identity verified with SES.
     * 
     */
    @InputImport(name="identity", required=true)
      private final Input<String> identity;

    public Input<String> getIdentity() {
        return this.identity;
    }

    /**
     * The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
     * 
     */
    @InputImport(name="roleArn")
      private final @Nullable Input<String> roleArn;

    public Input<String> getRoleArn() {
        return this.roleArn == null ? Input.empty() : this.roleArn;
    }

    public EmailChannelArgs(
        Input<String> applicationId,
        @Nullable Input<String> configurationSet,
        @Nullable Input<Boolean> enabled,
        Input<String> fromAddress,
        Input<String> identity,
        @Nullable Input<String> roleArn) {
        this.applicationId = Objects.requireNonNull(applicationId, "expected parameter 'applicationId' to be non-null");
        this.configurationSet = configurationSet;
        this.enabled = enabled;
        this.fromAddress = Objects.requireNonNull(fromAddress, "expected parameter 'fromAddress' to be non-null");
        this.identity = Objects.requireNonNull(identity, "expected parameter 'identity' to be non-null");
        this.roleArn = roleArn;
    }

    private EmailChannelArgs() {
        this.applicationId = Input.empty();
        this.configurationSet = Input.empty();
        this.enabled = Input.empty();
        this.fromAddress = Input.empty();
        this.identity = Input.empty();
        this.roleArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EmailChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> applicationId;
        private @Nullable Input<String> configurationSet;
        private @Nullable Input<Boolean> enabled;
        private Input<String> fromAddress;
        private Input<String> identity;
        private @Nullable Input<String> roleArn;

        public Builder() {
    	      // Empty
        }

        public Builder(EmailChannelArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.configurationSet = defaults.configurationSet;
    	      this.enabled = defaults.enabled;
    	      this.fromAddress = defaults.fromAddress;
    	      this.identity = defaults.identity;
    	      this.roleArn = defaults.roleArn;
        }

        public Builder setApplicationId(Input<String> applicationId) {
            this.applicationId = Objects.requireNonNull(applicationId);
            return this;
        }

        public Builder setApplicationId(String applicationId) {
            this.applicationId = Input.of(Objects.requireNonNull(applicationId));
            return this;
        }

        public Builder setConfigurationSet(@Nullable Input<String> configurationSet) {
            this.configurationSet = configurationSet;
            return this;
        }

        public Builder setConfigurationSet(@Nullable String configurationSet) {
            this.configurationSet = Input.ofNullable(configurationSet);
            return this;
        }

        public Builder setEnabled(@Nullable Input<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = Input.ofNullable(enabled);
            return this;
        }

        public Builder setFromAddress(Input<String> fromAddress) {
            this.fromAddress = Objects.requireNonNull(fromAddress);
            return this;
        }

        public Builder setFromAddress(String fromAddress) {
            this.fromAddress = Input.of(Objects.requireNonNull(fromAddress));
            return this;
        }

        public Builder setIdentity(Input<String> identity) {
            this.identity = Objects.requireNonNull(identity);
            return this;
        }

        public Builder setIdentity(String identity) {
            this.identity = Input.of(Objects.requireNonNull(identity));
            return this;
        }

        public Builder setRoleArn(@Nullable Input<String> roleArn) {
            this.roleArn = roleArn;
            return this;
        }

        public Builder setRoleArn(@Nullable String roleArn) {
            this.roleArn = Input.ofNullable(roleArn);
            return this;
        }
        public EmailChannelArgs build() {
            return new EmailChannelArgs(applicationId, configurationSet, enabled, fromAddress, identity, roleArn);
        }
    }
}
