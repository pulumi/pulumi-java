// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lambda.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetCodeSigningConfigPolicy extends io.pulumi.resources.InvokeArgs {

    public static final GetCodeSigningConfigPolicy Empty = new GetCodeSigningConfigPolicy();

    /**
     * Code signing configuration policy for deployment validation failure.
     * 
     */
    @Import(name="untrustedArtifactOnDeployment", required=true)
      private final String untrustedArtifactOnDeployment;

    public String getUntrustedArtifactOnDeployment() {
        return this.untrustedArtifactOnDeployment;
    }

    public GetCodeSigningConfigPolicy(String untrustedArtifactOnDeployment) {
        this.untrustedArtifactOnDeployment = Objects.requireNonNull(untrustedArtifactOnDeployment, "expected parameter 'untrustedArtifactOnDeployment' to be non-null");
    }

    private GetCodeSigningConfigPolicy() {
        this.untrustedArtifactOnDeployment = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCodeSigningConfigPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String untrustedArtifactOnDeployment;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCodeSigningConfigPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.untrustedArtifactOnDeployment = defaults.untrustedArtifactOnDeployment;
        }

        public Builder untrustedArtifactOnDeployment(String untrustedArtifactOnDeployment) {
            this.untrustedArtifactOnDeployment = Objects.requireNonNull(untrustedArtifactOnDeployment);
            return this;
        }        public GetCodeSigningConfigPolicy build() {
            return new GetCodeSigningConfigPolicy(untrustedArtifactOnDeployment);
        }
    }
}
