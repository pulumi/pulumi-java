// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.connect.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetContactFlowResult {
    /**
     * The Amazon Resource Name (ARN) of the Contact Flow.
     * 
     */
    private final String arn;
    private final String contactFlowId;
    /**
     * Specifies the logic of the Contact Flow.
     * 
     */
    private final String content;
    /**
     * Specifies the description of the Contact Flow.
     * 
     */
    private final String description;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String instanceId;
    private final String name;
    /**
     * A the map of tags to assign to the Contact Flow.
     * 
     */
    private final Map<String,String> tags;
    /**
     * Specifies the type of Contact Flow.
     * 
     */
    private final @Nullable String type;

    @OutputCustomType.Constructor({"arn","contactFlowId","content","description","id","instanceId","name","tags","type"})
    private GetContactFlowResult(
        String arn,
        String contactFlowId,
        String content,
        String description,
        String id,
        String instanceId,
        String name,
        Map<String,String> tags,
        @Nullable String type) {
        this.arn = Objects.requireNonNull(arn);
        this.contactFlowId = Objects.requireNonNull(contactFlowId);
        this.content = Objects.requireNonNull(content);
        this.description = Objects.requireNonNull(description);
        this.id = Objects.requireNonNull(id);
        this.instanceId = Objects.requireNonNull(instanceId);
        this.name = Objects.requireNonNull(name);
        this.tags = Objects.requireNonNull(tags);
        this.type = type;
    }

    /**
     * The Amazon Resource Name (ARN) of the Contact Flow.
     * 
     */
    public String getArn() {
        return this.arn;
    }
    public String getContactFlowId() {
        return this.contactFlowId;
    }
    /**
     * Specifies the logic of the Contact Flow.
     * 
     */
    public String getContent() {
        return this.content;
    }
    /**
     * Specifies the description of the Contact Flow.
     * 
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    public String getId() {
        return this.id;
    }
    public String getInstanceId() {
        return this.instanceId;
    }
    public String getName() {
        return this.name;
    }
    /**
     * A the map of tags to assign to the Contact Flow.
     * 
     */
    public Map<String,String> getTags() {
        return this.tags;
    }
    /**
     * Specifies the type of Contact Flow.
     * 
     */
    public Optional<String> getType() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContactFlowResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arn;
        private String contactFlowId;
        private String content;
        private String description;
        private String id;
        private String instanceId;
        private String name;
        private Map<String,String> tags;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetContactFlowResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.contactFlowId = defaults.contactFlowId;
    	      this.content = defaults.content;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder setArn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }

        public Builder setContactFlowId(String contactFlowId) {
            this.contactFlowId = Objects.requireNonNull(contactFlowId);
            return this;
        }

        public Builder setContent(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setId(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder setInstanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setTags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetContactFlowResult build() {
            return new GetContactFlowResult(arn, contactFlowId, content, description, id, instanceId, name, tags, type);
        }
    }
}
