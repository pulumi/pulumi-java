// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudformation.inputs;

import io.pulumi.aws.cloudformation.inputs.StackSetInstanceDeploymentTargetsGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StackSetInstanceState extends io.pulumi.resources.ResourceArgs {

    public static final StackSetInstanceState Empty = new StackSetInstanceState();

    /**
     * Target AWS Account ID to create a Stack based on the StackSet. Defaults to current account.
     * 
     */
    @InputImport(name="accountId")
      private final @Nullable Input<String> accountId;

    public Input<String> getAccountId() {
        return this.accountId == null ? Input.empty() : this.accountId;
    }

    /**
     * The AWS Organizations accounts to which StackSets deploys. StackSets doesn't deploy stack instances to the organization management account, even if the organization management account is in your organization or in an OU in your organization. Drift detection is not possible for this argument. See deployment_targets below.
     * 
     */
    @InputImport(name="deploymentTargets")
      private final @Nullable Input<StackSetInstanceDeploymentTargetsGetArgs> deploymentTargets;

    public Input<StackSetInstanceDeploymentTargetsGetArgs> getDeploymentTargets() {
        return this.deploymentTargets == null ? Input.empty() : this.deploymentTargets;
    }

    /**
     * The organization root ID or organizational unit (OU) IDs specified for `deployment_targets`.
     * 
     */
    @InputImport(name="organizationalUnitId")
      private final @Nullable Input<String> organizationalUnitId;

    public Input<String> getOrganizationalUnitId() {
        return this.organizationalUnitId == null ? Input.empty() : this.organizationalUnitId;
    }

    /**
     * Key-value map of input parameters to override from the StackSet for this Instance.
     * 
     */
    @InputImport(name="parameterOverrides")
      private final @Nullable Input<Map<String,String>> parameterOverrides;

    public Input<Map<String,String>> getParameterOverrides() {
        return this.parameterOverrides == null ? Input.empty() : this.parameterOverrides;
    }

    /**
     * Target AWS Region to create a Stack based on the StackSet. Defaults to current region.
     * 
     */
    @InputImport(name="region")
      private final @Nullable Input<String> region;

    public Input<String> getRegion() {
        return this.region == null ? Input.empty() : this.region;
    }

    /**
     * During resource destroy, remove Instance from StackSet while keeping the Stack and its associated resources. Must be enabled in the state _before_ destroy operation to take effect. You cannot reassociate a retained Stack or add an existing, saved Stack to a new StackSet. Defaults to `false`.
     * 
     */
    @InputImport(name="retainStack")
      private final @Nullable Input<Boolean> retainStack;

    public Input<Boolean> getRetainStack() {
        return this.retainStack == null ? Input.empty() : this.retainStack;
    }

    /**
     * Stack identifier
     * 
     */
    @InputImport(name="stackId")
      private final @Nullable Input<String> stackId;

    public Input<String> getStackId() {
        return this.stackId == null ? Input.empty() : this.stackId;
    }

    /**
     * Name of the StackSet.
     * 
     */
    @InputImport(name="stackSetName")
      private final @Nullable Input<String> stackSetName;

    public Input<String> getStackSetName() {
        return this.stackSetName == null ? Input.empty() : this.stackSetName;
    }

    public StackSetInstanceState(
        @Nullable Input<String> accountId,
        @Nullable Input<StackSetInstanceDeploymentTargetsGetArgs> deploymentTargets,
        @Nullable Input<String> organizationalUnitId,
        @Nullable Input<Map<String,String>> parameterOverrides,
        @Nullable Input<String> region,
        @Nullable Input<Boolean> retainStack,
        @Nullable Input<String> stackId,
        @Nullable Input<String> stackSetName) {
        this.accountId = accountId;
        this.deploymentTargets = deploymentTargets;
        this.organizationalUnitId = organizationalUnitId;
        this.parameterOverrides = parameterOverrides;
        this.region = region;
        this.retainStack = retainStack;
        this.stackId = stackId;
        this.stackSetName = stackSetName;
    }

    private StackSetInstanceState() {
        this.accountId = Input.empty();
        this.deploymentTargets = Input.empty();
        this.organizationalUnitId = Input.empty();
        this.parameterOverrides = Input.empty();
        this.region = Input.empty();
        this.retainStack = Input.empty();
        this.stackId = Input.empty();
        this.stackSetName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StackSetInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> accountId;
        private @Nullable Input<StackSetInstanceDeploymentTargetsGetArgs> deploymentTargets;
        private @Nullable Input<String> organizationalUnitId;
        private @Nullable Input<Map<String,String>> parameterOverrides;
        private @Nullable Input<String> region;
        private @Nullable Input<Boolean> retainStack;
        private @Nullable Input<String> stackId;
        private @Nullable Input<String> stackSetName;

        public Builder() {
    	      // Empty
        }

        public Builder(StackSetInstanceState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.deploymentTargets = defaults.deploymentTargets;
    	      this.organizationalUnitId = defaults.organizationalUnitId;
    	      this.parameterOverrides = defaults.parameterOverrides;
    	      this.region = defaults.region;
    	      this.retainStack = defaults.retainStack;
    	      this.stackId = defaults.stackId;
    	      this.stackSetName = defaults.stackSetName;
        }

        public Builder accountId(@Nullable Input<String> accountId) {
            this.accountId = accountId;
            return this;
        }

        public Builder accountId(@Nullable String accountId) {
            this.accountId = Input.ofNullable(accountId);
            return this;
        }

        public Builder deploymentTargets(@Nullable Input<StackSetInstanceDeploymentTargetsGetArgs> deploymentTargets) {
            this.deploymentTargets = deploymentTargets;
            return this;
        }

        public Builder deploymentTargets(@Nullable StackSetInstanceDeploymentTargetsGetArgs deploymentTargets) {
            this.deploymentTargets = Input.ofNullable(deploymentTargets);
            return this;
        }

        public Builder organizationalUnitId(@Nullable Input<String> organizationalUnitId) {
            this.organizationalUnitId = organizationalUnitId;
            return this;
        }

        public Builder organizationalUnitId(@Nullable String organizationalUnitId) {
            this.organizationalUnitId = Input.ofNullable(organizationalUnitId);
            return this;
        }

        public Builder parameterOverrides(@Nullable Input<Map<String,String>> parameterOverrides) {
            this.parameterOverrides = parameterOverrides;
            return this;
        }

        public Builder parameterOverrides(@Nullable Map<String,String> parameterOverrides) {
            this.parameterOverrides = Input.ofNullable(parameterOverrides);
            return this;
        }

        public Builder region(@Nullable Input<String> region) {
            this.region = region;
            return this;
        }

        public Builder region(@Nullable String region) {
            this.region = Input.ofNullable(region);
            return this;
        }

        public Builder retainStack(@Nullable Input<Boolean> retainStack) {
            this.retainStack = retainStack;
            return this;
        }

        public Builder retainStack(@Nullable Boolean retainStack) {
            this.retainStack = Input.ofNullable(retainStack);
            return this;
        }

        public Builder stackId(@Nullable Input<String> stackId) {
            this.stackId = stackId;
            return this;
        }

        public Builder stackId(@Nullable String stackId) {
            this.stackId = Input.ofNullable(stackId);
            return this;
        }

        public Builder stackSetName(@Nullable Input<String> stackSetName) {
            this.stackSetName = stackSetName;
            return this;
        }

        public Builder stackSetName(@Nullable String stackSetName) {
            this.stackSetName = Input.ofNullable(stackSetName);
            return this;
        }
        public StackSetInstanceState build() {
            return new StackSetInstanceState(accountId, deploymentTargets, organizationalUnitId, parameterOverrides, region, retainStack, stackId, stackSetName);
        }
    }
}
