// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.apigateway.UsagePlanArgs;
import io.pulumi.aws.apigateway.inputs.UsagePlanState;
import io.pulumi.aws.apigateway.outputs.UsagePlanApiStage;
import io.pulumi.aws.apigateway.outputs.UsagePlanQuotaSettings;
import io.pulumi.aws.apigateway.outputs.UsagePlanThrottleSettings;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an API Gateway Usage Plan.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as crypto from "crypto";
 * 
 * const exampleRestApi = new aws.apigateway.RestApi("exampleRestApi", {body: JSON.stringify({
 *     openapi: "3.0.1",
 *     info: {
 *         title: "example",
 *         version: "1.0",
 *     },
 *     paths: {
 *         "/path1": {
 *             get: {
 *                 "x-amazon-apigateway-integration": {
 *                     httpMethod: "GET",
 *                     payloadFormatVersion: "1.0",
 *                     type: "HTTP_PROXY",
 *                     uri: "https://ip-ranges.amazonaws.com/ip-ranges.json",
 *                 },
 *             },
 *         },
 *     },
 * })});
 * const exampleDeployment = new aws.apigateway.Deployment("exampleDeployment", {
 *     restApi: exampleRestApi.id,
 *     triggers: {
 *         redeployment: exampleRestApi.body.apply(body => JSON.stringify(body)).apply(toJSON => crypto.createHash('sha1').update(toJSON).digest('hex')),
 *     },
 * });
 * const development = new aws.apigateway.Stage("development", {
 *     deployment: exampleDeployment.id,
 *     restApi: exampleRestApi.id,
 *     stageName: "development",
 * });
 * const production = new aws.apigateway.Stage("production", {
 *     deployment: exampleDeployment.id,
 *     restApi: exampleRestApi.id,
 *     stageName: "production",
 * });
 * const exampleUsagePlan = new aws.apigateway.UsagePlan("exampleUsagePlan", {
 *     description: "my description",
 *     productCode: "MYCODE",
 *     apiStages: [
 *         {
 *             apiId: exampleRestApi.id,
 *             stage: development.stageName,
 *         },
 *         {
 *             apiId: exampleRestApi.id,
 *             stage: production.stageName,
 *         },
 *     ],
 *     quotaSettings: {
 *         limit: 20,
 *         offset: 2,
 *         period: "WEEK",
 *     },
 *     throttleSettings: {
 *         burstLimit: 5,
 *         rateLimit: 10,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import hashlib
 * import json
 * import pulumi_aws as aws
 * 
 * example_rest_api = aws.apigateway.RestApi("exampleRestApi", body=json.dumps({
 *     "openapi": "3.0.1",
 *     "info": {
 *         "title": "example",
 *         "version": "1.0",
 *     },
 *     "paths": {
 *         "/path1": {
 *             "get": {
 *                 "x-amazon-apigateway-integration": {
 *                     "httpMethod": "GET",
 *                     "payloadFormatVersion": "1.0",
 *                     "type": "HTTP_PROXY",
 *                     "uri": "https://ip-ranges.amazonaws.com/ip-ranges.json",
 *                 },
 *             },
 *         },
 *     },
 * }))
 * example_deployment = aws.apigateway.Deployment("exampleDeployment",
 *     rest_api=example_rest_api.id,
 *     triggers={
 *         "redeployment": example_rest_api.body.apply(lambda body: json.dumps(body)).apply(lambda to_json: hashlib.sha1(to_json.encode()).hexdigest()),
 *     })
 * development = aws.apigateway.Stage("development",
 *     deployment=example_deployment.id,
 *     rest_api=example_rest_api.id,
 *     stage_name="development")
 * production = aws.apigateway.Stage("production",
 *     deployment=example_deployment.id,
 *     rest_api=example_rest_api.id,
 *     stage_name="production")
 * example_usage_plan = aws.apigateway.UsagePlan("exampleUsagePlan",
 *     description="my description",
 *     product_code="MYCODE",
 *     api_stages=[
 *         aws.apigateway.UsagePlanApiStageArgs(
 *             api_id=example_rest_api.id,
 *             stage=development.stage_name,
 *         ),
 *         aws.apigateway.UsagePlanApiStageArgs(
 *             api_id=example_rest_api.id,
 *             stage=production.stage_name,
 *         ),
 *     ],
 *     quota_settings=aws.apigateway.UsagePlanQuotaSettingsArgs(
 *         limit=20,
 *         offset=2,
 *         period="WEEK",
 *     ),
 *     throttle_settings=aws.apigateway.UsagePlanThrottleSettingsArgs(
 *         burst_limit=5,
 *         rate_limit=10,
 *     ))
 * ```
 * ```csharp
 * using System.Collections.Generic;
 * using System.Security.Cryptography;
 * using System.Text;
 * using System.Text.Json;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ComputeSHA1(string input) {
 * 		return BitConverter.ToString(
 * 			SHA1.Create().ComputeHash(Encoding.UTF8.GetBytes(input))
 * 		).Replace("-","").ToLowerInvariant());
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var exampleRestApi = new Aws.ApiGateway.RestApi("exampleRestApi", new Aws.ApiGateway.RestApiArgs
 *         {
 *             Body = JsonSerializer.Serialize(new Dictionary<string, object?>
 *             {
 *                 { "openapi", "3.0.1" },
 *                 { "info", new Dictionary<string, object?>
 *                 {
 *                     { "title", "example" },
 *                     { "version", "1.0" },
 *                 } },
 *                 { "paths", new Dictionary<string, object?>
 *                 {
 *                     { "/path1", new Dictionary<string, object?>
 *                     {
 *                         { "get", new Dictionary<string, object?>
 *                         {
 *                             { "x-amazon-apigateway-integration", new Dictionary<string, object?>
 *                             {
 *                                 { "httpMethod", "GET" },
 *                                 { "payloadFormatVersion", "1.0" },
 *                                 { "type", "HTTP_PROXY" },
 *                                 { "uri", "https://ip-ranges.amazonaws.com/ip-ranges.json" },
 *                             } },
 *                         } },
 *                     } },
 *                 } },
 *             }),
 *         });
 *         var exampleDeployment = new Aws.ApiGateway.Deployment("exampleDeployment", new Aws.ApiGateway.DeploymentArgs
 *         {
 *             RestApi = exampleRestApi.Id,
 *             Triggers = 
 *             {
 *                 { "redeployment", exampleRestApi.Body.Apply(body => JsonSerializer.Serialize(body)).Apply(toJSON => ComputeSHA1(toJSON)) },
 *             },
 *         });
 *         var development = new Aws.ApiGateway.Stage("development", new Aws.ApiGateway.StageArgs
 *         {
 *             Deployment = exampleDeployment.Id,
 *             RestApi = exampleRestApi.Id,
 *             StageName = "development",
 *         });
 *         var production = new Aws.ApiGateway.Stage("production", new Aws.ApiGateway.StageArgs
 *         {
 *             Deployment = exampleDeployment.Id,
 *             RestApi = exampleRestApi.Id,
 *             StageName = "production",
 *         });
 *         var exampleUsagePlan = new Aws.ApiGateway.UsagePlan("exampleUsagePlan", new Aws.ApiGateway.UsagePlanArgs
 *         {
 *             Description = "my description",
 *             ProductCode = "MYCODE",
 *             ApiStages = 
 *             {
 *                 new Aws.ApiGateway.Inputs.UsagePlanApiStageArgs
 *                 {
 *                     ApiId = exampleRestApi.Id,
 *                     Stage = development.StageName,
 *                 },
 *                 new Aws.ApiGateway.Inputs.UsagePlanApiStageArgs
 *                 {
 *                     ApiId = exampleRestApi.Id,
 *                     Stage = production.StageName,
 *                 },
 *             },
 *             QuotaSettings = new Aws.ApiGateway.Inputs.UsagePlanQuotaSettingsArgs
 *             {
 *                 Limit = 20,
 *                 Offset = 2,
 *                 Period = "WEEK",
 *             },
 *             ThrottleSettings = new Aws.ApiGateway.Inputs.UsagePlanThrottleSettingsArgs
 *             {
 *                 BurstLimit = 5,
 *                 RateLimit = 10,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"crypto/sha1"
 * 	"encoding/json"
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigateway"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func sha1Hash(input string) string {
 * 	hash := sha1.Sum([]byte(input))
 * 	return hex.EncodeToString(hash[:])
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		tmpJSON0, err := json.Marshal(map[string]interface{}{
 * 			"openapi": "3.0.1",
 * 			"info": map[string]interface{}{
 * 				"title":   "example",
 * 				"version": "1.0",
 * 			},
 * 			"paths": map[string]interface{}{
 * 				"/path1": map[string]interface{}{
 * 					"get": map[string]interface{}{
 * 						"x-amazon-apigateway-integration": map[string]interface{}{
 * 							"httpMethod":           "GET",
 * 							"payloadFormatVersion": "1.0",
 * 							"type":                 "HTTP_PROXY",
 * 							"uri":                  "https://ip-ranges.amazonaws.com/ip-ranges.json",
 * 						},
 * 					},
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		json0 := string(tmpJSON0)
 * 		exampleRestApi, err := apigateway.NewRestApi(ctx, "exampleRestApi", &apigateway.RestApiArgs{
 * 			Body: pulumi.String(json0),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleDeployment, err := apigateway.NewDeployment(ctx, "exampleDeployment", &apigateway.DeploymentArgs{
 * 			RestApi: exampleRestApi.ID(),
 * 			Triggers: pulumi.StringMap{
 * 				"redeployment": exampleRestApi.Body.ApplyT(func(body string) (pulumi.String, error) {
 * 					var _zero pulumi.String
 * 					tmpJSON1, err := json.Marshal(body)
 * 					if err != nil {
 * 						return _zero, err
 * 					}
 * 					json1 := string(tmpJSON1)
 * 					return json1, nil
 * 				}).(pulumi.StringOutput).ApplyT(func(toJSON string) (pulumi.String, error) {
 * 					return sha1Hash(toJSON), nil
 * 				}).(pulumi.StringOutput),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		development, err := apigateway.NewStage(ctx, "development", &apigateway.StageArgs{
 * 			Deployment: exampleDeployment.ID(),
 * 			RestApi:    exampleRestApi.ID(),
 * 			StageName:  pulumi.String("development"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		production, err := apigateway.NewStage(ctx, "production", &apigateway.StageArgs{
 * 			Deployment: exampleDeployment.ID(),
 * 			RestApi:    exampleRestApi.ID(),
 * 			StageName:  pulumi.String("production"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = apigateway.NewUsagePlan(ctx, "exampleUsagePlan", &apigateway.UsagePlanArgs{
 * 			Description: pulumi.String("my description"),
 * 			ProductCode: pulumi.String("MYCODE"),
 * 			ApiStages: apigateway.UsagePlanApiStageArray{
 * 				&apigateway.UsagePlanApiStageArgs{
 * 					ApiId: exampleRestApi.ID(),
 * 					Stage: development.StageName,
 * 				},
 * 				&apigateway.UsagePlanApiStageArgs{
 * 					ApiId: exampleRestApi.ID(),
 * 					Stage: production.StageName,
 * 				},
 * 			},
 * 			QuotaSettings: &apigateway.UsagePlanQuotaSettingsArgs{
 * 				Limit:  pulumi.Int(20),
 * 				Offset: pulumi.Int(2),
 * 				Period: pulumi.String("WEEK"),
 * 			},
 * 			ThrottleSettings: &apigateway.UsagePlanThrottleSettingsArgs{
 * 				BurstLimit: pulumi.Int(5),
 * 				RateLimit:  pulumi.Float64(10),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * AWS API Gateway Usage Plan can be imported using the `id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:apigateway/usagePlan:UsagePlan myusageplan <usage_plan_id>
 * ```
 * 
 *  
 */
@ResourceType(type="aws:apigateway/usagePlan:UsagePlan")
public class UsagePlan extends io.pulumi.resources.CustomResource {
    /**
     * The associated API stages of the usage plan.
     * 
     */
    @Export(name="apiStages", type=List.class, parameters={UsagePlanApiStage.class})
    private Output</* @Nullable */ List<UsagePlanApiStage>> apiStages;

    /**
     * @return The associated API stages of the usage plan.
     * 
     */
    public Output</* @Nullable */ List<UsagePlanApiStage>> getApiStages() {
        return this.apiStages;
    }
    /**
     * Amazon Resource Name (ARN)
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN)
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The description of a usage plan.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of a usage plan.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * The name of the usage plan.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the usage plan.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The AWS Marketplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
     * 
     */
    @Export(name="productCode", type=String.class, parameters={})
    private Output</* @Nullable */ String> productCode;

    /**
     * @return The AWS Marketplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
     * 
     */
    public Output</* @Nullable */ String> getProductCode() {
        return this.productCode;
    }
    /**
     * The quota settings of the usage plan.
     * 
     */
    @Export(name="quotaSettings", type=UsagePlanQuotaSettings.class, parameters={})
    private Output</* @Nullable */ UsagePlanQuotaSettings> quotaSettings;

    /**
     * @return The quota settings of the usage plan.
     * 
     */
    public Output</* @Nullable */ UsagePlanQuotaSettings> getQuotaSettings() {
        return this.quotaSettings;
    }
    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * The throttling limits of the usage plan.
     * 
     */
    @Export(name="throttleSettings", type=UsagePlanThrottleSettings.class, parameters={})
    private Output</* @Nullable */ UsagePlanThrottleSettings> throttleSettings;

    /**
     * @return The throttling limits of the usage plan.
     * 
     */
    public Output</* @Nullable */ UsagePlanThrottleSettings> getThrottleSettings() {
        return this.throttleSettings;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UsagePlan(String name) {
        this(name, UsagePlanArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UsagePlan(String name, @Nullable UsagePlanArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UsagePlan(String name, @Nullable UsagePlanArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/usagePlan:UsagePlan", name, args == null ? UsagePlanArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private UsagePlan(String name, Output<String> id, @Nullable UsagePlanState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:apigateway/usagePlan:UsagePlan", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UsagePlan get(String name, Output<String> id, @Nullable UsagePlanState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UsagePlan(name, id, state, options);
    }
}
