// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iot;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CertificateArgs extends io.pulumi.resources.ResourceArgs {

    public static final CertificateArgs Empty = new CertificateArgs();

    /**
     * Boolean flag to indicate if the certificate should be active
     * 
     */
    @Import(name="active", required=true)
      private final Output<Boolean> active;

    public Output<Boolean> active() {
        return this.active;
    }

    /**
     * The certificate signing request. Review
     * [CreateCertificateFromCsr](https://docs.aws.amazon.com/iot/latest/apireference/API_CreateCertificateFromCsr.html)
     * for more information on generating a certificate from a certificate signing request (CSR).
     * If none is specified both the certificate and keys will be generated, review [CreateKeysAndCertificate](https://docs.aws.amazon.com/iot/latest/apireference/API_CreateKeysAndCertificate.html)
     * for more information on generating keys and a certificate.
     * 
     */
    @Import(name="csr")
      private final @Nullable Output<String> csr;

    public Output<String> csr() {
        return this.csr == null ? Codegen.empty() : this.csr;
    }

    public CertificateArgs(
        Output<Boolean> active,
        @Nullable Output<String> csr) {
        this.active = Objects.requireNonNull(active, "expected parameter 'active' to be non-null");
        this.csr = csr;
    }

    private CertificateArgs() {
        this.active = Codegen.empty();
        this.csr = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> active;
        private @Nullable Output<String> csr;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.csr = defaults.csr;
        }

        public Builder active(Output<Boolean> active) {
            this.active = Objects.requireNonNull(active);
            return this;
        }
        public Builder active(Boolean active) {
            this.active = Output.of(Objects.requireNonNull(active));
            return this;
        }
        public Builder csr(@Nullable Output<String> csr) {
            this.csr = csr;
            return this;
        }
        public Builder csr(@Nullable String csr) {
            this.csr = Codegen.ofNullable(csr);
            return this;
        }        public CertificateArgs build() {
            return new CertificateArgs(active, csr);
        }
    }
}
