// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cfg.inputs;

import io.pulumi.aws.cfg.inputs.RemediationConfigurationExecutionControlsGetArgs;
import io.pulumi.aws.cfg.inputs.RemediationConfigurationParameterGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RemediationConfigurationState extends io.pulumi.resources.ResourceArgs {

    public static final RemediationConfigurationState Empty = new RemediationConfigurationState();

    /**
     * ARN of the Config Remediation Configuration.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Remediation is triggered automatically if `true`.
     * 
     */
    @Import(name="automatic")
      private final @Nullable Output<Boolean> automatic;

    public Output<Boolean> getAutomatic() {
        return this.automatic == null ? Codegen.empty() : this.automatic;
    }

    /**
     * Name of the AWS Config rule.
     * 
     */
    @Import(name="configRuleName")
      private final @Nullable Output<String> configRuleName;

    public Output<String> getConfigRuleName() {
        return this.configRuleName == null ? Codegen.empty() : this.configRuleName;
    }

    /**
     * Configuration block for execution controls. See below.
     * 
     */
    @Import(name="executionControls")
      private final @Nullable Output<RemediationConfigurationExecutionControlsGetArgs> executionControls;

    public Output<RemediationConfigurationExecutionControlsGetArgs> getExecutionControls() {
        return this.executionControls == null ? Codegen.empty() : this.executionControls;
    }

    /**
     * Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
     * 
     */
    @Import(name="maximumAutomaticAttempts")
      private final @Nullable Output<Integer> maximumAutomaticAttempts;

    public Output<Integer> getMaximumAutomaticAttempts() {
        return this.maximumAutomaticAttempts == null ? Codegen.empty() : this.maximumAutomaticAttempts;
    }

    /**
     * Can be specified multiple times for each parameter. Each parameter block supports arguments below.
     * 
     */
    @Import(name="parameters")
      private final @Nullable Output<List<RemediationConfigurationParameterGetArgs>> parameters;

    public Output<List<RemediationConfigurationParameterGetArgs>> getParameters() {
        return this.parameters == null ? Codegen.empty() : this.parameters;
    }

    /**
     * Type of resource.
     * 
     */
    @Import(name="resourceType")
      private final @Nullable Output<String> resourceType;

    public Output<String> getPropResourceType() {
        return this.resourceType == null ? Codegen.empty() : this.resourceType;
    }

    /**
     * Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
     * 
     */
    @Import(name="retryAttemptSeconds")
      private final @Nullable Output<Integer> retryAttemptSeconds;

    public Output<Integer> getRetryAttemptSeconds() {
        return this.retryAttemptSeconds == null ? Codegen.empty() : this.retryAttemptSeconds;
    }

    /**
     * Target ID is the name of the public document.
     * 
     */
    @Import(name="targetId")
      private final @Nullable Output<String> targetId;

    public Output<String> getTargetId() {
        return this.targetId == null ? Codegen.empty() : this.targetId;
    }

    /**
     * Type of the target. Target executes remediation. For example, SSM document.
     * 
     */
    @Import(name="targetType")
      private final @Nullable Output<String> targetType;

    public Output<String> getTargetType() {
        return this.targetType == null ? Codegen.empty() : this.targetType;
    }

    /**
     * Version of the target. For example, version of the SSM document
     * 
     */
    @Import(name="targetVersion")
      private final @Nullable Output<String> targetVersion;

    public Output<String> getTargetVersion() {
        return this.targetVersion == null ? Codegen.empty() : this.targetVersion;
    }

    public RemediationConfigurationState(
        @Nullable Output<String> arn,
        @Nullable Output<Boolean> automatic,
        @Nullable Output<String> configRuleName,
        @Nullable Output<RemediationConfigurationExecutionControlsGetArgs> executionControls,
        @Nullable Output<Integer> maximumAutomaticAttempts,
        @Nullable Output<List<RemediationConfigurationParameterGetArgs>> parameters,
        @Nullable Output<String> resourceType,
        @Nullable Output<Integer> retryAttemptSeconds,
        @Nullable Output<String> targetId,
        @Nullable Output<String> targetType,
        @Nullable Output<String> targetVersion) {
        this.arn = arn;
        this.automatic = automatic;
        this.configRuleName = configRuleName;
        this.executionControls = executionControls;
        this.maximumAutomaticAttempts = maximumAutomaticAttempts;
        this.parameters = parameters;
        this.resourceType = resourceType;
        this.retryAttemptSeconds = retryAttemptSeconds;
        this.targetId = targetId;
        this.targetType = targetType;
        this.targetVersion = targetVersion;
    }

    private RemediationConfigurationState() {
        this.arn = Codegen.empty();
        this.automatic = Codegen.empty();
        this.configRuleName = Codegen.empty();
        this.executionControls = Codegen.empty();
        this.maximumAutomaticAttempts = Codegen.empty();
        this.parameters = Codegen.empty();
        this.resourceType = Codegen.empty();
        this.retryAttemptSeconds = Codegen.empty();
        this.targetId = Codegen.empty();
        this.targetType = Codegen.empty();
        this.targetVersion = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RemediationConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<Boolean> automatic;
        private @Nullable Output<String> configRuleName;
        private @Nullable Output<RemediationConfigurationExecutionControlsGetArgs> executionControls;
        private @Nullable Output<Integer> maximumAutomaticAttempts;
        private @Nullable Output<List<RemediationConfigurationParameterGetArgs>> parameters;
        private @Nullable Output<String> resourceType;
        private @Nullable Output<Integer> retryAttemptSeconds;
        private @Nullable Output<String> targetId;
        private @Nullable Output<String> targetType;
        private @Nullable Output<String> targetVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(RemediationConfigurationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.automatic = defaults.automatic;
    	      this.configRuleName = defaults.configRuleName;
    	      this.executionControls = defaults.executionControls;
    	      this.maximumAutomaticAttempts = defaults.maximumAutomaticAttempts;
    	      this.parameters = defaults.parameters;
    	      this.resourceType = defaults.resourceType;
    	      this.retryAttemptSeconds = defaults.retryAttemptSeconds;
    	      this.targetId = defaults.targetId;
    	      this.targetType = defaults.targetType;
    	      this.targetVersion = defaults.targetVersion;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder automatic(@Nullable Output<Boolean> automatic) {
            this.automatic = automatic;
            return this;
        }
        public Builder automatic(@Nullable Boolean automatic) {
            this.automatic = Codegen.ofNullable(automatic);
            return this;
        }
        public Builder configRuleName(@Nullable Output<String> configRuleName) {
            this.configRuleName = configRuleName;
            return this;
        }
        public Builder configRuleName(@Nullable String configRuleName) {
            this.configRuleName = Codegen.ofNullable(configRuleName);
            return this;
        }
        public Builder executionControls(@Nullable Output<RemediationConfigurationExecutionControlsGetArgs> executionControls) {
            this.executionControls = executionControls;
            return this;
        }
        public Builder executionControls(@Nullable RemediationConfigurationExecutionControlsGetArgs executionControls) {
            this.executionControls = Codegen.ofNullable(executionControls);
            return this;
        }
        public Builder maximumAutomaticAttempts(@Nullable Output<Integer> maximumAutomaticAttempts) {
            this.maximumAutomaticAttempts = maximumAutomaticAttempts;
            return this;
        }
        public Builder maximumAutomaticAttempts(@Nullable Integer maximumAutomaticAttempts) {
            this.maximumAutomaticAttempts = Codegen.ofNullable(maximumAutomaticAttempts);
            return this;
        }
        public Builder parameters(@Nullable Output<List<RemediationConfigurationParameterGetArgs>> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(@Nullable List<RemediationConfigurationParameterGetArgs> parameters) {
            this.parameters = Codegen.ofNullable(parameters);
            return this;
        }
        public Builder parameters(RemediationConfigurationParameterGetArgs... parameters) {
            return parameters(List.of(parameters));
        }
        public Builder resourceType(@Nullable Output<String> resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = Codegen.ofNullable(resourceType);
            return this;
        }
        public Builder retryAttemptSeconds(@Nullable Output<Integer> retryAttemptSeconds) {
            this.retryAttemptSeconds = retryAttemptSeconds;
            return this;
        }
        public Builder retryAttemptSeconds(@Nullable Integer retryAttemptSeconds) {
            this.retryAttemptSeconds = Codegen.ofNullable(retryAttemptSeconds);
            return this;
        }
        public Builder targetId(@Nullable Output<String> targetId) {
            this.targetId = targetId;
            return this;
        }
        public Builder targetId(@Nullable String targetId) {
            this.targetId = Codegen.ofNullable(targetId);
            return this;
        }
        public Builder targetType(@Nullable Output<String> targetType) {
            this.targetType = targetType;
            return this;
        }
        public Builder targetType(@Nullable String targetType) {
            this.targetType = Codegen.ofNullable(targetType);
            return this;
        }
        public Builder targetVersion(@Nullable Output<String> targetVersion) {
            this.targetVersion = targetVersion;
            return this;
        }
        public Builder targetVersion(@Nullable String targetVersion) {
            this.targetVersion = Codegen.ofNullable(targetVersion);
            return this;
        }        public RemediationConfigurationState build() {
            return new RemediationConfigurationState(arn, automatic, configRuleName, executionControls, maximumAutomaticAttempts, parameters, resourceType, retryAttemptSeconds, targetId, targetType, targetVersion);
        }
    }
}
