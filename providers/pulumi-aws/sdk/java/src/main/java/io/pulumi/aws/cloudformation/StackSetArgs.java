// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudformation;

import io.pulumi.aws.cloudformation.inputs.StackSetAutoDeploymentArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StackSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final StackSetArgs Empty = new StackSetArgs();

    /**
     * Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the `SELF_MANAGED` permission model.
     * 
     */
    @InputImport(name="administrationRoleArn")
      private final @Nullable Output<String> administrationRoleArn;

    public Output<String> getAdministrationRoleArn() {
        return this.administrationRoleArn == null ? Output.empty() : this.administrationRoleArn;
    }

    /**
     * Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the `SERVICE_MANAGED` permission model.
     * 
     */
    @InputImport(name="autoDeployment")
      private final @Nullable Output<StackSetAutoDeploymentArgs> autoDeployment;

    public Output<StackSetAutoDeploymentArgs> getAutoDeployment() {
        return this.autoDeployment == null ? Output.empty() : this.autoDeployment;
    }

    /**
     * A list of capabilities. Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_AUTO_EXPAND`.
     * 
     */
    @InputImport(name="capabilities")
      private final @Nullable Output<List<String>> capabilities;

    public Output<List<String>> getCapabilities() {
        return this.capabilities == null ? Output.empty() : this.capabilities;
    }

    /**
     * Description of the StackSet.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Name of the IAM Role in all target accounts for StackSet operations. Defaults to `AWSCloudFormationStackSetExecutionRole` when using the `SELF_MANAGED` permission model. This should not be defined when using the `SERVICE_MANAGED` permission model.
     * 
     */
    @InputImport(name="executionRoleName")
      private final @Nullable Output<String> executionRoleName;

    public Output<String> getExecutionRoleName() {
        return this.executionRoleName == null ? Output.empty() : this.executionRoleName;
    }

    /**
     * Name of the StackSet. The name must be unique in the region where you create your StackSet. The name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Key-value map of input parameters for the StackSet template. All template parameters, including those with a `Default`, must be configured or ignored with `lifecycle` configuration block `ignore_changes` argument. All `NoEcho` template parameters must be ignored with the `lifecycle` configuration block `ignore_changes` argument.
     * 
     */
    @InputImport(name="parameters")
      private final @Nullable Output<Map<String,String>> parameters;

    public Output<Map<String,String>> getParameters() {
        return this.parameters == null ? Output.empty() : this.parameters;
    }

    /**
     * Describes how the IAM roles required for your StackSet are created. Valid values: `SELF_MANAGED` (default), `SERVICE_MANAGED`.
     * 
     */
    @InputImport(name="permissionModel")
      private final @Nullable Output<String> permissionModel;

    public Output<String> getPermissionModel() {
        return this.permissionModel == null ? Output.empty() : this.permissionModel;
    }

    /**
     * Key-value map of tags to associate with this StackSet and the Stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the Stacks. A maximum number of 50 tags can be specified. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with `template_url`.
     * 
     */
    @InputImport(name="templateBody")
      private final @Nullable Output<String> templateBody;

    public Output<String> getTemplateBody() {
        return this.templateBody == null ? Output.empty() : this.templateBody;
    }

    /**
     * String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with `template_body`.
     * 
     */
    @InputImport(name="templateUrl")
      private final @Nullable Output<String> templateUrl;

    public Output<String> getTemplateUrl() {
        return this.templateUrl == null ? Output.empty() : this.templateUrl;
    }

    public StackSetArgs(
        @Nullable Output<String> administrationRoleArn,
        @Nullable Output<StackSetAutoDeploymentArgs> autoDeployment,
        @Nullable Output<List<String>> capabilities,
        @Nullable Output<String> description,
        @Nullable Output<String> executionRoleName,
        @Nullable Output<String> name,
        @Nullable Output<Map<String,String>> parameters,
        @Nullable Output<String> permissionModel,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> templateBody,
        @Nullable Output<String> templateUrl) {
        this.administrationRoleArn = administrationRoleArn;
        this.autoDeployment = autoDeployment;
        this.capabilities = capabilities;
        this.description = description;
        this.executionRoleName = executionRoleName;
        this.name = name;
        this.parameters = parameters;
        this.permissionModel = permissionModel;
        this.tags = tags;
        this.templateBody = templateBody;
        this.templateUrl = templateUrl;
    }

    private StackSetArgs() {
        this.administrationRoleArn = Output.empty();
        this.autoDeployment = Output.empty();
        this.capabilities = Output.empty();
        this.description = Output.empty();
        this.executionRoleName = Output.empty();
        this.name = Output.empty();
        this.parameters = Output.empty();
        this.permissionModel = Output.empty();
        this.tags = Output.empty();
        this.templateBody = Output.empty();
        this.templateUrl = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StackSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> administrationRoleArn;
        private @Nullable Output<StackSetAutoDeploymentArgs> autoDeployment;
        private @Nullable Output<List<String>> capabilities;
        private @Nullable Output<String> description;
        private @Nullable Output<String> executionRoleName;
        private @Nullable Output<String> name;
        private @Nullable Output<Map<String,String>> parameters;
        private @Nullable Output<String> permissionModel;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> templateBody;
        private @Nullable Output<String> templateUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(StackSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administrationRoleArn = defaults.administrationRoleArn;
    	      this.autoDeployment = defaults.autoDeployment;
    	      this.capabilities = defaults.capabilities;
    	      this.description = defaults.description;
    	      this.executionRoleName = defaults.executionRoleName;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.permissionModel = defaults.permissionModel;
    	      this.tags = defaults.tags;
    	      this.templateBody = defaults.templateBody;
    	      this.templateUrl = defaults.templateUrl;
        }

        public Builder administrationRoleArn(@Nullable Output<String> administrationRoleArn) {
            this.administrationRoleArn = administrationRoleArn;
            return this;
        }

        public Builder administrationRoleArn(@Nullable String administrationRoleArn) {
            this.administrationRoleArn = Output.ofNullable(administrationRoleArn);
            return this;
        }

        public Builder autoDeployment(@Nullable Output<StackSetAutoDeploymentArgs> autoDeployment) {
            this.autoDeployment = autoDeployment;
            return this;
        }

        public Builder autoDeployment(@Nullable StackSetAutoDeploymentArgs autoDeployment) {
            this.autoDeployment = Output.ofNullable(autoDeployment);
            return this;
        }

        public Builder capabilities(@Nullable Output<List<String>> capabilities) {
            this.capabilities = capabilities;
            return this;
        }

        public Builder capabilities(@Nullable List<String> capabilities) {
            this.capabilities = Output.ofNullable(capabilities);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder executionRoleName(@Nullable Output<String> executionRoleName) {
            this.executionRoleName = executionRoleName;
            return this;
        }

        public Builder executionRoleName(@Nullable String executionRoleName) {
            this.executionRoleName = Output.ofNullable(executionRoleName);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder parameters(@Nullable Map<String,String> parameters) {
            this.parameters = Output.ofNullable(parameters);
            return this;
        }

        public Builder permissionModel(@Nullable Output<String> permissionModel) {
            this.permissionModel = permissionModel;
            return this;
        }

        public Builder permissionModel(@Nullable String permissionModel) {
            this.permissionModel = Output.ofNullable(permissionModel);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder templateBody(@Nullable Output<String> templateBody) {
            this.templateBody = templateBody;
            return this;
        }

        public Builder templateBody(@Nullable String templateBody) {
            this.templateBody = Output.ofNullable(templateBody);
            return this;
        }

        public Builder templateUrl(@Nullable Output<String> templateUrl) {
            this.templateUrl = templateUrl;
            return this;
        }

        public Builder templateUrl(@Nullable String templateUrl) {
            this.templateUrl = Output.ofNullable(templateUrl);
            return this;
        }
        public StackSetArgs build() {
            return new StackSetArgs(administrationRoleArn, autoDeployment, capabilities, description, executionRoleName, name, parameters, permissionModel, tags, templateBody, templateUrl);
        }
    }
}
