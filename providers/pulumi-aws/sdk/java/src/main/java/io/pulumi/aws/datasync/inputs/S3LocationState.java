// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.datasync.inputs;

import io.pulumi.aws.datasync.inputs.S3LocationS3ConfigGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class S3LocationState extends io.pulumi.resources.ResourceArgs {

    public static final S3LocationState Empty = new S3LocationState();

    /**
     * A list of DataSync Agent ARNs with which this location will be associated.
     * 
     */
    @Import(name="agentArns")
      private final @Nullable Output<List<String>> agentArns;

    public Output<List<String>> agentArns() {
        return this.agentArns == null ? Codegen.empty() : this.agentArns;
    }

    /**
     * Amazon Resource Name (ARN) of the DataSync Location.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> arn() {
        return this.arn == null ? Codegen.empty() : this.arn;
    }

    /**
     * Amazon Resource Name (ARN) of the S3 Bucket.
     * 
     */
    @Import(name="s3BucketArn")
      private final @Nullable Output<String> s3BucketArn;

    public Output<String> s3BucketArn() {
        return this.s3BucketArn == null ? Codegen.empty() : this.s3BucketArn;
    }

    /**
     * Configuration block containing information for connecting to S3.
     * 
     */
    @Import(name="s3Config")
      private final @Nullable Output<S3LocationS3ConfigGetArgs> s3Config;

    public Output<S3LocationS3ConfigGetArgs> s3Config() {
        return this.s3Config == null ? Codegen.empty() : this.s3Config;
    }

    /**
     * The Amazon S3 storage class that you want to store your files in when this location is used as a task destination. [Valid values](https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes)
     * 
     */
    @Import(name="s3StorageClass")
      private final @Nullable Output<String> s3StorageClass;

    public Output<String> s3StorageClass() {
        return this.s3StorageClass == null ? Codegen.empty() : this.s3StorageClass;
    }

    /**
     * Prefix to perform actions as source or destination.
     * 
     */
    @Import(name="subdirectory")
      private final @Nullable Output<String> subdirectory;

    public Output<String> subdirectory() {
        return this.subdirectory == null ? Codegen.empty() : this.subdirectory;
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> tagsAll() {
        return this.tagsAll == null ? Codegen.empty() : this.tagsAll;
    }

    @Import(name="uri")
      private final @Nullable Output<String> uri;

    public Output<String> uri() {
        return this.uri == null ? Codegen.empty() : this.uri;
    }

    public S3LocationState(
        @Nullable Output<List<String>> agentArns,
        @Nullable Output<String> arn,
        @Nullable Output<String> s3BucketArn,
        @Nullable Output<S3LocationS3ConfigGetArgs> s3Config,
        @Nullable Output<String> s3StorageClass,
        @Nullable Output<String> subdirectory,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> uri) {
        this.agentArns = agentArns;
        this.arn = arn;
        this.s3BucketArn = s3BucketArn;
        this.s3Config = s3Config;
        this.s3StorageClass = s3StorageClass;
        this.subdirectory = subdirectory;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.uri = uri;
    }

    private S3LocationState() {
        this.agentArns = Codegen.empty();
        this.arn = Codegen.empty();
        this.s3BucketArn = Codegen.empty();
        this.s3Config = Codegen.empty();
        this.s3StorageClass = Codegen.empty();
        this.subdirectory = Codegen.empty();
        this.tags = Codegen.empty();
        this.tagsAll = Codegen.empty();
        this.uri = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(S3LocationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> agentArns;
        private @Nullable Output<String> arn;
        private @Nullable Output<String> s3BucketArn;
        private @Nullable Output<S3LocationS3ConfigGetArgs> s3Config;
        private @Nullable Output<String> s3StorageClass;
        private @Nullable Output<String> subdirectory;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> uri;

        public Builder() {
    	      // Empty
        }

        public Builder(S3LocationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentArns = defaults.agentArns;
    	      this.arn = defaults.arn;
    	      this.s3BucketArn = defaults.s3BucketArn;
    	      this.s3Config = defaults.s3Config;
    	      this.s3StorageClass = defaults.s3StorageClass;
    	      this.subdirectory = defaults.subdirectory;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.uri = defaults.uri;
        }

        public Builder agentArns(@Nullable Output<List<String>> agentArns) {
            this.agentArns = agentArns;
            return this;
        }
        public Builder agentArns(@Nullable List<String> agentArns) {
            this.agentArns = Codegen.ofNullable(agentArns);
            return this;
        }
        public Builder agentArns(String... agentArns) {
            return agentArns(List.of(agentArns));
        }
        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }
        public Builder arn(@Nullable String arn) {
            this.arn = Codegen.ofNullable(arn);
            return this;
        }
        public Builder s3BucketArn(@Nullable Output<String> s3BucketArn) {
            this.s3BucketArn = s3BucketArn;
            return this;
        }
        public Builder s3BucketArn(@Nullable String s3BucketArn) {
            this.s3BucketArn = Codegen.ofNullable(s3BucketArn);
            return this;
        }
        public Builder s3Config(@Nullable Output<S3LocationS3ConfigGetArgs> s3Config) {
            this.s3Config = s3Config;
            return this;
        }
        public Builder s3Config(@Nullable S3LocationS3ConfigGetArgs s3Config) {
            this.s3Config = Codegen.ofNullable(s3Config);
            return this;
        }
        public Builder s3StorageClass(@Nullable Output<String> s3StorageClass) {
            this.s3StorageClass = s3StorageClass;
            return this;
        }
        public Builder s3StorageClass(@Nullable String s3StorageClass) {
            this.s3StorageClass = Codegen.ofNullable(s3StorageClass);
            return this;
        }
        public Builder subdirectory(@Nullable Output<String> subdirectory) {
            this.subdirectory = subdirectory;
            return this;
        }
        public Builder subdirectory(@Nullable String subdirectory) {
            this.subdirectory = Codegen.ofNullable(subdirectory);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }
        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Codegen.ofNullable(tagsAll);
            return this;
        }
        public Builder uri(@Nullable Output<String> uri) {
            this.uri = uri;
            return this;
        }
        public Builder uri(@Nullable String uri) {
            this.uri = Codegen.ofNullable(uri);
            return this;
        }        public S3LocationState build() {
            return new S3LocationState(agentArns, arn, s3BucketArn, s3Config, s3StorageClass, subdirectory, tags, tagsAll, uri);
        }
    }
}
