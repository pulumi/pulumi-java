// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.emr;

import io.pulumi.aws.emr.inputs.ClusterAutoTerminationPolicyArgs;
import io.pulumi.aws.emr.inputs.ClusterBootstrapActionArgs;
import io.pulumi.aws.emr.inputs.ClusterCoreInstanceFleetArgs;
import io.pulumi.aws.emr.inputs.ClusterCoreInstanceGroupArgs;
import io.pulumi.aws.emr.inputs.ClusterEc2AttributesArgs;
import io.pulumi.aws.emr.inputs.ClusterKerberosAttributesArgs;
import io.pulumi.aws.emr.inputs.ClusterMasterInstanceFleetArgs;
import io.pulumi.aws.emr.inputs.ClusterMasterInstanceGroupArgs;
import io.pulumi.aws.emr.inputs.ClusterStepArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore this provider cannot detect drift from the actual EMR cluster if its value is changed outside this provider.
     * 
     */
    @InputImport(name="additionalInfo")
      private final @Nullable Input<String> additionalInfo;

    public Input<String> getAdditionalInfo() {
        return this.additionalInfo == null ? Input.empty() : this.additionalInfo;
    }

    /**
     * List of applications for the cluster. Valid values are: `Flink`, `Hadoop`, `Hive`, `Mahout`, `Pig`, `Spark`, and `JupyterHub` (as of EMR 5.14.0). Case insensitive.
     * 
     */
    @InputImport(name="applications")
      private final @Nullable Input<List<String>> applications;

    public Input<List<String>> getApplications() {
        return this.applications == null ? Input.empty() : this.applications;
    }

    /**
     * An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
     * 
     */
    @InputImport(name="autoTerminationPolicy")
      private final @Nullable Input<ClusterAutoTerminationPolicyArgs> autoTerminationPolicy;

    public Input<ClusterAutoTerminationPolicyArgs> getAutoTerminationPolicy() {
        return this.autoTerminationPolicy == null ? Input.empty() : this.autoTerminationPolicy;
    }

    /**
     * IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
     * 
     */
    @InputImport(name="autoscalingRole")
      private final @Nullable Input<String> autoscalingRole;

    public Input<String> getAutoscalingRole() {
        return this.autoscalingRole == null ? Input.empty() : this.autoscalingRole;
    }

    /**
     * Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
     * 
     */
    @InputImport(name="bootstrapActions")
      private final @Nullable Input<List<ClusterBootstrapActionArgs>> bootstrapActions;

    public Input<List<ClusterBootstrapActionArgs>> getBootstrapActions() {
        return this.bootstrapActions == null ? Input.empty() : this.bootstrapActions;
    }

    /**
     * Configuration classification that applies when provisioning cluster instances, which can include configurations for applications and software that run on the cluster. List of `configuration` blocks.
     * 
     */
    @InputImport(name="configurations")
      private final @Nullable Input<String> configurations;

    public Input<String> getConfigurations() {
        return this.configurations == null ? Input.empty() : this.configurations;
    }

    /**
     * JSON string for supplying list of configurations for the EMR cluster.
     * 
     */
    @InputImport(name="configurationsJson")
      private final @Nullable Input<String> configurationsJson;

    public Input<String> getConfigurationsJson() {
        return this.configurationsJson == null ? Input.empty() : this.configurationsJson;
    }

    /**
     * Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `core_instance_group` configuration blocks are set. Detailed below.
     * 
     */
    @InputImport(name="coreInstanceFleet")
      private final @Nullable Input<ClusterCoreInstanceFleetArgs> coreInstanceFleet;

    public Input<ClusterCoreInstanceFleetArgs> getCoreInstanceFleet() {
        return this.coreInstanceFleet == null ? Input.empty() : this.coreInstanceFleet;
    }

    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
     * 
     */
    @InputImport(name="coreInstanceGroup")
      private final @Nullable Input<ClusterCoreInstanceGroupArgs> coreInstanceGroup;

    public Input<ClusterCoreInstanceGroupArgs> getCoreInstanceGroup() {
        return this.coreInstanceGroup == null ? Input.empty() : this.coreInstanceGroup;
    }

    /**
     * Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
     * 
     */
    @InputImport(name="customAmiId")
      private final @Nullable Input<String> customAmiId;

    public Input<String> getCustomAmiId() {
        return this.customAmiId == null ? Input.empty() : this.customAmiId;
    }

    /**
     * Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
     * 
     */
    @InputImport(name="ebsRootVolumeSize")
      private final @Nullable Input<Integer> ebsRootVolumeSize;

    public Input<Integer> getEbsRootVolumeSize() {
        return this.ebsRootVolumeSize == null ? Input.empty() : this.ebsRootVolumeSize;
    }

    /**
     * Attributes for the EC2 instances running the job flow. See below.
     * 
     */
    @InputImport(name="ec2Attributes")
      private final @Nullable Input<ClusterEc2AttributesArgs> ec2Attributes;

    public Input<ClusterEc2AttributesArgs> getEc2Attributes() {
        return this.ec2Attributes == null ? Input.empty() : this.ec2Attributes;
    }

    /**
     * Switch on/off run cluster with no steps or when all steps are complete (default is on)
     * 
     */
    @InputImport(name="keepJobFlowAliveWhenNoSteps")
      private final @Nullable Input<Boolean> keepJobFlowAliveWhenNoSteps;

    public Input<Boolean> getKeepJobFlowAliveWhenNoSteps() {
        return this.keepJobFlowAliveWhenNoSteps == null ? Input.empty() : this.keepJobFlowAliveWhenNoSteps;
    }

    /**
     * Kerberos configuration for the cluster. See below.
     * 
     */
    @InputImport(name="kerberosAttributes")
      private final @Nullable Input<ClusterKerberosAttributesArgs> kerberosAttributes;

    public Input<ClusterKerberosAttributesArgs> getKerberosAttributes() {
        return this.kerberosAttributes == null ? Input.empty() : this.kerberosAttributes;
    }

    /**
     * AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
     * 
     */
    @InputImport(name="logEncryptionKmsKeyId")
      private final @Nullable Input<String> logEncryptionKmsKeyId;

    public Input<String> getLogEncryptionKmsKeyId() {
        return this.logEncryptionKmsKeyId == null ? Input.empty() : this.logEncryptionKmsKeyId;
    }

    /**
     * S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
     * 
     */
    @InputImport(name="logUri")
      private final @Nullable Input<String> logUri;

    public Input<String> getLogUri() {
        return this.logUri == null ? Input.empty() : this.logUri;
    }

    /**
     * Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `master_instance_group` configuration blocks are set. Detailed below.
     * 
     */
    @InputImport(name="masterInstanceFleet")
      private final @Nullable Input<ClusterMasterInstanceFleetArgs> masterInstanceFleet;

    public Input<ClusterMasterInstanceFleetArgs> getMasterInstanceFleet() {
        return this.masterInstanceFleet == null ? Input.empty() : this.masterInstanceFleet;
    }

    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
     * 
     */
    @InputImport(name="masterInstanceGroup")
      private final @Nullable Input<ClusterMasterInstanceGroupArgs> masterInstanceGroup;

    public Input<ClusterMasterInstanceGroupArgs> getMasterInstanceGroup() {
        return this.masterInstanceGroup == null ? Input.empty() : this.masterInstanceGroup;
    }

    /**
     * Name of the step.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Release label for the Amazon EMR release.
     * 
     */
    @InputImport(name="releaseLabel", required=true)
      private final Input<String> releaseLabel;

    public Input<String> getReleaseLabel() {
        return this.releaseLabel;
    }

    /**
     * Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
     * 
     */
    @InputImport(name="scaleDownBehavior")
      private final @Nullable Input<String> scaleDownBehavior;

    public Input<String> getScaleDownBehavior() {
        return this.scaleDownBehavior == null ? Input.empty() : this.scaleDownBehavior;
    }

    /**
     * Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater.
     * 
     */
    @InputImport(name="securityConfiguration")
      private final @Nullable Input<String> securityConfiguration;

    public Input<String> getSecurityConfiguration() {
        return this.securityConfiguration == null ? Input.empty() : this.securityConfiguration;
    }

    /**
     * IAM role that will be assumed by the Amazon EMR service to access AWS resources.
     * 
     */
    @InputImport(name="serviceRole", required=true)
      private final Input<String> serviceRole;

    public Input<String> getServiceRole() {
        return this.serviceRole;
    }

    /**
     * Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater (default is 1).
     * 
     */
    @InputImport(name="stepConcurrencyLevel")
      private final @Nullable Input<Integer> stepConcurrencyLevel;

    public Input<Integer> getStepConcurrencyLevel() {
        return this.stepConcurrencyLevel == null ? Input.empty() : this.stepConcurrencyLevel;
    }

    /**
     * List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
     * 
     */
    @InputImport(name="steps")
      private final @Nullable Input<List<ClusterStepArgs>> steps;

    public Input<List<ClusterStepArgs>> getSteps() {
        return this.steps == null ? Input.empty() : this.steps;
    }

    /**
     * list of tags to apply to the EMR Cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
     * 
     */
    @InputImport(name="terminationProtection")
      private final @Nullable Input<Boolean> terminationProtection;

    public Input<Boolean> getTerminationProtection() {
        return this.terminationProtection == null ? Input.empty() : this.terminationProtection;
    }

    /**
     * Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
     * 
     */
    @InputImport(name="visibleToAllUsers")
      private final @Nullable Input<Boolean> visibleToAllUsers;

    public Input<Boolean> getVisibleToAllUsers() {
        return this.visibleToAllUsers == null ? Input.empty() : this.visibleToAllUsers;
    }

    public ClusterArgs(
        @Nullable Input<String> additionalInfo,
        @Nullable Input<List<String>> applications,
        @Nullable Input<ClusterAutoTerminationPolicyArgs> autoTerminationPolicy,
        @Nullable Input<String> autoscalingRole,
        @Nullable Input<List<ClusterBootstrapActionArgs>> bootstrapActions,
        @Nullable Input<String> configurations,
        @Nullable Input<String> configurationsJson,
        @Nullable Input<ClusterCoreInstanceFleetArgs> coreInstanceFleet,
        @Nullable Input<ClusterCoreInstanceGroupArgs> coreInstanceGroup,
        @Nullable Input<String> customAmiId,
        @Nullable Input<Integer> ebsRootVolumeSize,
        @Nullable Input<ClusterEc2AttributesArgs> ec2Attributes,
        @Nullable Input<Boolean> keepJobFlowAliveWhenNoSteps,
        @Nullable Input<ClusterKerberosAttributesArgs> kerberosAttributes,
        @Nullable Input<String> logEncryptionKmsKeyId,
        @Nullable Input<String> logUri,
        @Nullable Input<ClusterMasterInstanceFleetArgs> masterInstanceFleet,
        @Nullable Input<ClusterMasterInstanceGroupArgs> masterInstanceGroup,
        @Nullable Input<String> name,
        Input<String> releaseLabel,
        @Nullable Input<String> scaleDownBehavior,
        @Nullable Input<String> securityConfiguration,
        Input<String> serviceRole,
        @Nullable Input<Integer> stepConcurrencyLevel,
        @Nullable Input<List<ClusterStepArgs>> steps,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Boolean> terminationProtection,
        @Nullable Input<Boolean> visibleToAllUsers) {
        this.additionalInfo = additionalInfo;
        this.applications = applications;
        this.autoTerminationPolicy = autoTerminationPolicy;
        this.autoscalingRole = autoscalingRole;
        this.bootstrapActions = bootstrapActions;
        this.configurations = configurations;
        this.configurationsJson = configurationsJson;
        this.coreInstanceFleet = coreInstanceFleet;
        this.coreInstanceGroup = coreInstanceGroup;
        this.customAmiId = customAmiId;
        this.ebsRootVolumeSize = ebsRootVolumeSize;
        this.ec2Attributes = ec2Attributes;
        this.keepJobFlowAliveWhenNoSteps = keepJobFlowAliveWhenNoSteps;
        this.kerberosAttributes = kerberosAttributes;
        this.logEncryptionKmsKeyId = logEncryptionKmsKeyId;
        this.logUri = logUri;
        this.masterInstanceFleet = masterInstanceFleet;
        this.masterInstanceGroup = masterInstanceGroup;
        this.name = name;
        this.releaseLabel = Objects.requireNonNull(releaseLabel, "expected parameter 'releaseLabel' to be non-null");
        this.scaleDownBehavior = scaleDownBehavior;
        this.securityConfiguration = securityConfiguration;
        this.serviceRole = Objects.requireNonNull(serviceRole, "expected parameter 'serviceRole' to be non-null");
        this.stepConcurrencyLevel = stepConcurrencyLevel;
        this.steps = steps;
        this.tags = tags;
        this.terminationProtection = terminationProtection;
        this.visibleToAllUsers = visibleToAllUsers;
    }

    private ClusterArgs() {
        this.additionalInfo = Input.empty();
        this.applications = Input.empty();
        this.autoTerminationPolicy = Input.empty();
        this.autoscalingRole = Input.empty();
        this.bootstrapActions = Input.empty();
        this.configurations = Input.empty();
        this.configurationsJson = Input.empty();
        this.coreInstanceFleet = Input.empty();
        this.coreInstanceGroup = Input.empty();
        this.customAmiId = Input.empty();
        this.ebsRootVolumeSize = Input.empty();
        this.ec2Attributes = Input.empty();
        this.keepJobFlowAliveWhenNoSteps = Input.empty();
        this.kerberosAttributes = Input.empty();
        this.logEncryptionKmsKeyId = Input.empty();
        this.logUri = Input.empty();
        this.masterInstanceFleet = Input.empty();
        this.masterInstanceGroup = Input.empty();
        this.name = Input.empty();
        this.releaseLabel = Input.empty();
        this.scaleDownBehavior = Input.empty();
        this.securityConfiguration = Input.empty();
        this.serviceRole = Input.empty();
        this.stepConcurrencyLevel = Input.empty();
        this.steps = Input.empty();
        this.tags = Input.empty();
        this.terminationProtection = Input.empty();
        this.visibleToAllUsers = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> additionalInfo;
        private @Nullable Input<List<String>> applications;
        private @Nullable Input<ClusterAutoTerminationPolicyArgs> autoTerminationPolicy;
        private @Nullable Input<String> autoscalingRole;
        private @Nullable Input<List<ClusterBootstrapActionArgs>> bootstrapActions;
        private @Nullable Input<String> configurations;
        private @Nullable Input<String> configurationsJson;
        private @Nullable Input<ClusterCoreInstanceFleetArgs> coreInstanceFleet;
        private @Nullable Input<ClusterCoreInstanceGroupArgs> coreInstanceGroup;
        private @Nullable Input<String> customAmiId;
        private @Nullable Input<Integer> ebsRootVolumeSize;
        private @Nullable Input<ClusterEc2AttributesArgs> ec2Attributes;
        private @Nullable Input<Boolean> keepJobFlowAliveWhenNoSteps;
        private @Nullable Input<ClusterKerberosAttributesArgs> kerberosAttributes;
        private @Nullable Input<String> logEncryptionKmsKeyId;
        private @Nullable Input<String> logUri;
        private @Nullable Input<ClusterMasterInstanceFleetArgs> masterInstanceFleet;
        private @Nullable Input<ClusterMasterInstanceGroupArgs> masterInstanceGroup;
        private @Nullable Input<String> name;
        private Input<String> releaseLabel;
        private @Nullable Input<String> scaleDownBehavior;
        private @Nullable Input<String> securityConfiguration;
        private Input<String> serviceRole;
        private @Nullable Input<Integer> stepConcurrencyLevel;
        private @Nullable Input<List<ClusterStepArgs>> steps;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Boolean> terminationProtection;
        private @Nullable Input<Boolean> visibleToAllUsers;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalInfo = defaults.additionalInfo;
    	      this.applications = defaults.applications;
    	      this.autoTerminationPolicy = defaults.autoTerminationPolicy;
    	      this.autoscalingRole = defaults.autoscalingRole;
    	      this.bootstrapActions = defaults.bootstrapActions;
    	      this.configurations = defaults.configurations;
    	      this.configurationsJson = defaults.configurationsJson;
    	      this.coreInstanceFleet = defaults.coreInstanceFleet;
    	      this.coreInstanceGroup = defaults.coreInstanceGroup;
    	      this.customAmiId = defaults.customAmiId;
    	      this.ebsRootVolumeSize = defaults.ebsRootVolumeSize;
    	      this.ec2Attributes = defaults.ec2Attributes;
    	      this.keepJobFlowAliveWhenNoSteps = defaults.keepJobFlowAliveWhenNoSteps;
    	      this.kerberosAttributes = defaults.kerberosAttributes;
    	      this.logEncryptionKmsKeyId = defaults.logEncryptionKmsKeyId;
    	      this.logUri = defaults.logUri;
    	      this.masterInstanceFleet = defaults.masterInstanceFleet;
    	      this.masterInstanceGroup = defaults.masterInstanceGroup;
    	      this.name = defaults.name;
    	      this.releaseLabel = defaults.releaseLabel;
    	      this.scaleDownBehavior = defaults.scaleDownBehavior;
    	      this.securityConfiguration = defaults.securityConfiguration;
    	      this.serviceRole = defaults.serviceRole;
    	      this.stepConcurrencyLevel = defaults.stepConcurrencyLevel;
    	      this.steps = defaults.steps;
    	      this.tags = defaults.tags;
    	      this.terminationProtection = defaults.terminationProtection;
    	      this.visibleToAllUsers = defaults.visibleToAllUsers;
        }

        public Builder additionalInfo(@Nullable Input<String> additionalInfo) {
            this.additionalInfo = additionalInfo;
            return this;
        }

        public Builder additionalInfo(@Nullable String additionalInfo) {
            this.additionalInfo = Input.ofNullable(additionalInfo);
            return this;
        }

        public Builder applications(@Nullable Input<List<String>> applications) {
            this.applications = applications;
            return this;
        }

        public Builder applications(@Nullable List<String> applications) {
            this.applications = Input.ofNullable(applications);
            return this;
        }

        public Builder autoTerminationPolicy(@Nullable Input<ClusterAutoTerminationPolicyArgs> autoTerminationPolicy) {
            this.autoTerminationPolicy = autoTerminationPolicy;
            return this;
        }

        public Builder autoTerminationPolicy(@Nullable ClusterAutoTerminationPolicyArgs autoTerminationPolicy) {
            this.autoTerminationPolicy = Input.ofNullable(autoTerminationPolicy);
            return this;
        }

        public Builder autoscalingRole(@Nullable Input<String> autoscalingRole) {
            this.autoscalingRole = autoscalingRole;
            return this;
        }

        public Builder autoscalingRole(@Nullable String autoscalingRole) {
            this.autoscalingRole = Input.ofNullable(autoscalingRole);
            return this;
        }

        public Builder bootstrapActions(@Nullable Input<List<ClusterBootstrapActionArgs>> bootstrapActions) {
            this.bootstrapActions = bootstrapActions;
            return this;
        }

        public Builder bootstrapActions(@Nullable List<ClusterBootstrapActionArgs> bootstrapActions) {
            this.bootstrapActions = Input.ofNullable(bootstrapActions);
            return this;
        }

        public Builder configurations(@Nullable Input<String> configurations) {
            this.configurations = configurations;
            return this;
        }

        public Builder configurations(@Nullable String configurations) {
            this.configurations = Input.ofNullable(configurations);
            return this;
        }

        public Builder configurationsJson(@Nullable Input<String> configurationsJson) {
            this.configurationsJson = configurationsJson;
            return this;
        }

        public Builder configurationsJson(@Nullable String configurationsJson) {
            this.configurationsJson = Input.ofNullable(configurationsJson);
            return this;
        }

        public Builder coreInstanceFleet(@Nullable Input<ClusterCoreInstanceFleetArgs> coreInstanceFleet) {
            this.coreInstanceFleet = coreInstanceFleet;
            return this;
        }

        public Builder coreInstanceFleet(@Nullable ClusterCoreInstanceFleetArgs coreInstanceFleet) {
            this.coreInstanceFleet = Input.ofNullable(coreInstanceFleet);
            return this;
        }

        public Builder coreInstanceGroup(@Nullable Input<ClusterCoreInstanceGroupArgs> coreInstanceGroup) {
            this.coreInstanceGroup = coreInstanceGroup;
            return this;
        }

        public Builder coreInstanceGroup(@Nullable ClusterCoreInstanceGroupArgs coreInstanceGroup) {
            this.coreInstanceGroup = Input.ofNullable(coreInstanceGroup);
            return this;
        }

        public Builder customAmiId(@Nullable Input<String> customAmiId) {
            this.customAmiId = customAmiId;
            return this;
        }

        public Builder customAmiId(@Nullable String customAmiId) {
            this.customAmiId = Input.ofNullable(customAmiId);
            return this;
        }

        public Builder ebsRootVolumeSize(@Nullable Input<Integer> ebsRootVolumeSize) {
            this.ebsRootVolumeSize = ebsRootVolumeSize;
            return this;
        }

        public Builder ebsRootVolumeSize(@Nullable Integer ebsRootVolumeSize) {
            this.ebsRootVolumeSize = Input.ofNullable(ebsRootVolumeSize);
            return this;
        }

        public Builder ec2Attributes(@Nullable Input<ClusterEc2AttributesArgs> ec2Attributes) {
            this.ec2Attributes = ec2Attributes;
            return this;
        }

        public Builder ec2Attributes(@Nullable ClusterEc2AttributesArgs ec2Attributes) {
            this.ec2Attributes = Input.ofNullable(ec2Attributes);
            return this;
        }

        public Builder keepJobFlowAliveWhenNoSteps(@Nullable Input<Boolean> keepJobFlowAliveWhenNoSteps) {
            this.keepJobFlowAliveWhenNoSteps = keepJobFlowAliveWhenNoSteps;
            return this;
        }

        public Builder keepJobFlowAliveWhenNoSteps(@Nullable Boolean keepJobFlowAliveWhenNoSteps) {
            this.keepJobFlowAliveWhenNoSteps = Input.ofNullable(keepJobFlowAliveWhenNoSteps);
            return this;
        }

        public Builder kerberosAttributes(@Nullable Input<ClusterKerberosAttributesArgs> kerberosAttributes) {
            this.kerberosAttributes = kerberosAttributes;
            return this;
        }

        public Builder kerberosAttributes(@Nullable ClusterKerberosAttributesArgs kerberosAttributes) {
            this.kerberosAttributes = Input.ofNullable(kerberosAttributes);
            return this;
        }

        public Builder logEncryptionKmsKeyId(@Nullable Input<String> logEncryptionKmsKeyId) {
            this.logEncryptionKmsKeyId = logEncryptionKmsKeyId;
            return this;
        }

        public Builder logEncryptionKmsKeyId(@Nullable String logEncryptionKmsKeyId) {
            this.logEncryptionKmsKeyId = Input.ofNullable(logEncryptionKmsKeyId);
            return this;
        }

        public Builder logUri(@Nullable Input<String> logUri) {
            this.logUri = logUri;
            return this;
        }

        public Builder logUri(@Nullable String logUri) {
            this.logUri = Input.ofNullable(logUri);
            return this;
        }

        public Builder masterInstanceFleet(@Nullable Input<ClusterMasterInstanceFleetArgs> masterInstanceFleet) {
            this.masterInstanceFleet = masterInstanceFleet;
            return this;
        }

        public Builder masterInstanceFleet(@Nullable ClusterMasterInstanceFleetArgs masterInstanceFleet) {
            this.masterInstanceFleet = Input.ofNullable(masterInstanceFleet);
            return this;
        }

        public Builder masterInstanceGroup(@Nullable Input<ClusterMasterInstanceGroupArgs> masterInstanceGroup) {
            this.masterInstanceGroup = masterInstanceGroup;
            return this;
        }

        public Builder masterInstanceGroup(@Nullable ClusterMasterInstanceGroupArgs masterInstanceGroup) {
            this.masterInstanceGroup = Input.ofNullable(masterInstanceGroup);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder releaseLabel(Input<String> releaseLabel) {
            this.releaseLabel = Objects.requireNonNull(releaseLabel);
            return this;
        }

        public Builder releaseLabel(String releaseLabel) {
            this.releaseLabel = Input.of(Objects.requireNonNull(releaseLabel));
            return this;
        }

        public Builder scaleDownBehavior(@Nullable Input<String> scaleDownBehavior) {
            this.scaleDownBehavior = scaleDownBehavior;
            return this;
        }

        public Builder scaleDownBehavior(@Nullable String scaleDownBehavior) {
            this.scaleDownBehavior = Input.ofNullable(scaleDownBehavior);
            return this;
        }

        public Builder securityConfiguration(@Nullable Input<String> securityConfiguration) {
            this.securityConfiguration = securityConfiguration;
            return this;
        }

        public Builder securityConfiguration(@Nullable String securityConfiguration) {
            this.securityConfiguration = Input.ofNullable(securityConfiguration);
            return this;
        }

        public Builder serviceRole(Input<String> serviceRole) {
            this.serviceRole = Objects.requireNonNull(serviceRole);
            return this;
        }

        public Builder serviceRole(String serviceRole) {
            this.serviceRole = Input.of(Objects.requireNonNull(serviceRole));
            return this;
        }

        public Builder stepConcurrencyLevel(@Nullable Input<Integer> stepConcurrencyLevel) {
            this.stepConcurrencyLevel = stepConcurrencyLevel;
            return this;
        }

        public Builder stepConcurrencyLevel(@Nullable Integer stepConcurrencyLevel) {
            this.stepConcurrencyLevel = Input.ofNullable(stepConcurrencyLevel);
            return this;
        }

        public Builder steps(@Nullable Input<List<ClusterStepArgs>> steps) {
            this.steps = steps;
            return this;
        }

        public Builder steps(@Nullable List<ClusterStepArgs> steps) {
            this.steps = Input.ofNullable(steps);
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder terminationProtection(@Nullable Input<Boolean> terminationProtection) {
            this.terminationProtection = terminationProtection;
            return this;
        }

        public Builder terminationProtection(@Nullable Boolean terminationProtection) {
            this.terminationProtection = Input.ofNullable(terminationProtection);
            return this;
        }

        public Builder visibleToAllUsers(@Nullable Input<Boolean> visibleToAllUsers) {
            this.visibleToAllUsers = visibleToAllUsers;
            return this;
        }

        public Builder visibleToAllUsers(@Nullable Boolean visibleToAllUsers) {
            this.visibleToAllUsers = Input.ofNullable(visibleToAllUsers);
            return this;
        }
        public ClusterArgs build() {
            return new ClusterArgs(additionalInfo, applications, autoTerminationPolicy, autoscalingRole, bootstrapActions, configurations, configurationsJson, coreInstanceFleet, coreInstanceGroup, customAmiId, ebsRootVolumeSize, ec2Attributes, keepJobFlowAliveWhenNoSteps, kerberosAttributes, logEncryptionKmsKeyId, logUri, masterInstanceFleet, masterInstanceGroup, name, releaseLabel, scaleDownBehavior, securityConfiguration, serviceRole, stepConcurrencyLevel, steps, tags, terminationProtection, visibleToAllUsers);
        }
    }
}
