// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.fsx;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.fsx.WindowsFileSystemArgs;
import io.pulumi.aws.fsx.inputs.WindowsFileSystemState;
import io.pulumi.aws.fsx.outputs.WindowsFileSystemAuditLogConfiguration;
import io.pulumi.aws.fsx.outputs.WindowsFileSystemSelfManagedActiveDirectory;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages a FSx Windows File System. See the [FSx Windows Guide](https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html) for more information.
 * 
 * > **NOTE:** Either the `active_directory_id` argument or `self_managed_active_directory` configuration block must be specified.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * FSx File Systems can be imported using the `id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:fsx/windowsFileSystem:WindowsFileSystem example fs-543ab12b1ca672f33
 * ```
 * 
 *  Certain resource arguments, like `security_group_ids` and the `self_managed_active_directory` configuation block `password`, do not have a FSx API method for reading the information after creation. If these arguments are set in the provider configuration on an imported resource, the povider will always show a difference. To workaround this behavior, either omit the argument from the configuration or use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to hide the difference, e.g. terraform resource "aws_fsx_windows_file_system" "example" {
 * 
 * # ... other configuration ...
 * 
 *  security_group_ids = [aws_security_group.example.id]
 * 
 * # There is no FSx API for reading security_group_ids
 * 
 *  lifecycle {
 * 
 *  ignore_changes = [security_group_ids]
 * 
 *  } }
 * 
 */
@ResourceType(type="aws:fsx/windowsFileSystem:WindowsFileSystem")
public class WindowsFileSystem extends io.pulumi.resources.CustomResource {
    /**
     * The ID for an existing Microsoft Active Directory instance that the file system should join when it's created. Cannot be specified with `self_managed_active_directory`.
     * 
     */
    @Export(name="activeDirectoryId", type=String.class, parameters={})
    private Output</* @Nullable */ String> activeDirectoryId;

    /**
     * @return The ID for an existing Microsoft Active Directory instance that the file system should join when it's created. Cannot be specified with `self_managed_active_directory`.
     * 
     */
    public Output</* @Nullable */ String> getActiveDirectoryId() {
        return this.activeDirectoryId;
    }
    /**
     * An array DNS alias names that you want to associate with the Amazon FSx file system.  For more information, see [Working with DNS Aliases](https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-dns-aliases.html)
     * 
     */
    @Export(name="aliases", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> aliases;

    /**
     * @return An array DNS alias names that you want to associate with the Amazon FSx file system.  For more information, see [Working with DNS Aliases](https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-dns-aliases.html)
     * 
     */
    public Output</* @Nullable */ List<String>> getAliases() {
        return this.aliases;
    }
    /**
     * Amazon Resource Name of the file system.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name of the file system.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The configuration that Amazon FSx for Windows File Server uses to audit and log user accesses of files, folders, and file shares on the Amazon FSx for Windows File Server file system. See below.
     * 
     */
    @Export(name="auditLogConfiguration", type=WindowsFileSystemAuditLogConfiguration.class, parameters={})
    private Output<WindowsFileSystemAuditLogConfiguration> auditLogConfiguration;

    /**
     * @return The configuration that Amazon FSx for Windows File Server uses to audit and log user accesses of files, folders, and file shares on the Amazon FSx for Windows File Server file system. See below.
     * 
     */
    public Output<WindowsFileSystemAuditLogConfiguration> getAuditLogConfiguration() {
        return this.auditLogConfiguration;
    }
    /**
     * The number of days to retain automatic backups. Minimum of `0` and maximum of `90`. Defaults to `7`. Set to `0` to disable.
     * 
     */
    @Export(name="automaticBackupRetentionDays", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> automaticBackupRetentionDays;

    /**
     * @return The number of days to retain automatic backups. Minimum of `0` and maximum of `90`. Defaults to `7`. Set to `0` to disable.
     * 
     */
    public Output</* @Nullable */ Integer> getAutomaticBackupRetentionDays() {
        return this.automaticBackupRetentionDays;
    }
    /**
     * The ID of the source backup to create the filesystem from.
     * 
     */
    @Export(name="backupId", type=String.class, parameters={})
    private Output</* @Nullable */ String> backupId;

    /**
     * @return The ID of the source backup to create the filesystem from.
     * 
     */
    public Output</* @Nullable */ String> getBackupId() {
        return this.backupId;
    }
    /**
     * A boolean flag indicating whether tags on the file system should be copied to backups. Defaults to `false`.
     * 
     */
    @Export(name="copyTagsToBackups", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> copyTagsToBackups;

    /**
     * @return A boolean flag indicating whether tags on the file system should be copied to backups. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getCopyTagsToBackups() {
        return this.copyTagsToBackups;
    }
    /**
     * The preferred time (in `HH:MM` format) to take daily automatic backups, in the UTC time zone.
     * 
     */
    @Export(name="dailyAutomaticBackupStartTime", type=String.class, parameters={})
    private Output<String> dailyAutomaticBackupStartTime;

    /**
     * @return The preferred time (in `HH:MM` format) to take daily automatic backups, in the UTC time zone.
     * 
     */
    public Output<String> getDailyAutomaticBackupStartTime() {
        return this.dailyAutomaticBackupStartTime;
    }
    /**
     * Specifies the file system deployment type, valid values are `MULTI_AZ_1`, `SINGLE_AZ_1` and `SINGLE_AZ_2`. Default value is `SINGLE_AZ_1`.
     * 
     */
    @Export(name="deploymentType", type=String.class, parameters={})
    private Output</* @Nullable */ String> deploymentType;

    /**
     * @return Specifies the file system deployment type, valid values are `MULTI_AZ_1`, `SINGLE_AZ_1` and `SINGLE_AZ_2`. Default value is `SINGLE_AZ_1`.
     * 
     */
    public Output</* @Nullable */ String> getDeploymentType() {
        return this.deploymentType;
    }
    /**
     * DNS name for the file system, e.g., `fs-12345678.corp.example.com` (domain name matching the Active Directory domain name)
     * 
     */
    @Export(name="dnsName", type=String.class, parameters={})
    private Output<String> dnsName;

    /**
     * @return DNS name for the file system, e.g., `fs-12345678.corp.example.com` (domain name matching the Active Directory domain name)
     * 
     */
    public Output<String> getDnsName() {
        return this.dnsName;
    }
    /**
     * ARN for the KMS Key to encrypt the file system at rest. Defaults to an AWS managed KMS Key.
     * 
     */
    @Export(name="kmsKeyId", type=String.class, parameters={})
    private Output<String> kmsKeyId;

    /**
     * @return ARN for the KMS Key to encrypt the file system at rest. Defaults to an AWS managed KMS Key.
     * 
     */
    public Output<String> getKmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * Set of Elastic Network Interface identifiers from which the file system is accessible.
     * 
     */
    @Export(name="networkInterfaceIds", type=List.class, parameters={String.class})
    private Output<List<String>> networkInterfaceIds;

    /**
     * @return Set of Elastic Network Interface identifiers from which the file system is accessible.
     * 
     */
    public Output<List<String>> getNetworkInterfaceIds() {
        return this.networkInterfaceIds;
    }
    /**
     * AWS account identifier that created the file system.
     * 
     */
    @Export(name="ownerId", type=String.class, parameters={})
    private Output<String> ownerId;

    /**
     * @return AWS account identifier that created the file system.
     * 
     */
    public Output<String> getOwnerId() {
        return this.ownerId;
    }
    /**
     * The IP address of the primary, or preferred, file server.
     * 
     */
    @Export(name="preferredFileServerIp", type=String.class, parameters={})
    private Output<String> preferredFileServerIp;

    /**
     * @return The IP address of the primary, or preferred, file server.
     * 
     */
    public Output<String> getPreferredFileServerIp() {
        return this.preferredFileServerIp;
    }
    /**
     * Specifies the subnet in which you want the preferred file server to be located. Required for when deployment type is `MULTI_AZ_1`.
     * 
     */
    @Export(name="preferredSubnetId", type=String.class, parameters={})
    private Output<String> preferredSubnetId;

    /**
     * @return Specifies the subnet in which you want the preferred file server to be located. Required for when deployment type is `MULTI_AZ_1`.
     * 
     */
    public Output<String> getPreferredSubnetId() {
        return this.preferredSubnetId;
    }
    /**
     * For `MULTI_AZ_1` deployment types, use this endpoint when performing administrative tasks on the file system using Amazon FSx Remote PowerShell. For `SINGLE_AZ_1` deployment types, this is the DNS name of the file system.
     * 
     */
    @Export(name="remoteAdministrationEndpoint", type=String.class, parameters={})
    private Output<String> remoteAdministrationEndpoint;

    /**
     * @return For `MULTI_AZ_1` deployment types, use this endpoint when performing administrative tasks on the file system using Amazon FSx Remote PowerShell. For `SINGLE_AZ_1` deployment types, this is the DNS name of the file system.
     * 
     */
    public Output<String> getRemoteAdministrationEndpoint() {
        return this.remoteAdministrationEndpoint;
    }
    /**
     * A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
     * 
     */
    @Export(name="securityGroupIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> securityGroupIds;

    /**
     * @return A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
     * 
     */
    public Output</* @Nullable */ List<String>> getSecurityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * Configuration block that Amazon FSx uses to join the Windows File Server instance to your self-managed (including on-premises) Microsoft Active Directory (AD) directory. Cannot be specified with `active_directory_id`. Detailed below.
     * 
     */
    @Export(name="selfManagedActiveDirectory", type=WindowsFileSystemSelfManagedActiveDirectory.class, parameters={})
    private Output</* @Nullable */ WindowsFileSystemSelfManagedActiveDirectory> selfManagedActiveDirectory;

    /**
     * @return Configuration block that Amazon FSx uses to join the Windows File Server instance to your self-managed (including on-premises) Microsoft Active Directory (AD) directory. Cannot be specified with `active_directory_id`. Detailed below.
     * 
     */
    public Output</* @Nullable */ WindowsFileSystemSelfManagedActiveDirectory> getSelfManagedActiveDirectory() {
        return this.selfManagedActiveDirectory;
    }
    /**
     * When enabled, will skip the default final backup taken when the file system is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
     * 
     */
    @Export(name="skipFinalBackup", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipFinalBackup;

    /**
     * @return When enabled, will skip the default final backup taken when the file system is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getSkipFinalBackup() {
        return this.skipFinalBackup;
    }
    /**
     * Storage capacity (GiB) of the file system. Minimum of 32 and maximum of 65536. If the storage type is set to `HDD` the minimum value is 2000. Required when not creating filesystem for a backup.
     * 
     */
    @Export(name="storageCapacity", type=Integer.class, parameters={})
    private Output<Integer> storageCapacity;

    /**
     * @return Storage capacity (GiB) of the file system. Minimum of 32 and maximum of 65536. If the storage type is set to `HDD` the minimum value is 2000. Required when not creating filesystem for a backup.
     * 
     */
    public Output<Integer> getStorageCapacity() {
        return this.storageCapacity;
    }
    /**
     * Specifies the storage type, Valid values are `SSD` and `HDD`. `HDD` is supported on `SINGLE_AZ_2` and `MULTI_AZ_1` Windows file system deployment types. Default value is `SSD`.
     * 
     */
    @Export(name="storageType", type=String.class, parameters={})
    private Output</* @Nullable */ String> storageType;

    /**
     * @return Specifies the storage type, Valid values are `SSD` and `HDD`. `HDD` is supported on `SINGLE_AZ_2` and `MULTI_AZ_1` Windows file system deployment types. Default value is `SSD`.
     * 
     */
    public Output</* @Nullable */ String> getStorageType() {
        return this.storageType;
    }
    /**
     * A list of IDs for the subnets that the file system will be accessible from. To specify more than a single subnet set `deployment_type` to `MULTI_AZ_1`.
     * 
     */
    @Export(name="subnetIds", type=List.class, parameters={String.class})
    private Output<List<String>> subnetIds;

    /**
     * @return A list of IDs for the subnets that the file system will be accessible from. To specify more than a single subnet set `deployment_type` to `MULTI_AZ_1`.
     * 
     */
    public Output<List<String>> getSubnetIds() {
        return this.subnetIds;
    }
    /**
     * A map of tags to assign to the file system. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the file system. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of `8` and maximum of `2048`.
     * 
     */
    @Export(name="throughputCapacity", type=Integer.class, parameters={})
    private Output<Integer> throughputCapacity;

    /**
     * @return Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of `8` and maximum of `2048`.
     * 
     */
    public Output<Integer> getThroughputCapacity() {
        return this.throughputCapacity;
    }
    /**
     * Identifier of the Virtual Private Cloud for the file system.
     * 
     */
    @Export(name="vpcId", type=String.class, parameters={})
    private Output<String> vpcId;

    /**
     * @return Identifier of the Virtual Private Cloud for the file system.
     * 
     */
    public Output<String> getVpcId() {
        return this.vpcId;
    }
    /**
     * The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
     * 
     */
    @Export(name="weeklyMaintenanceStartTime", type=String.class, parameters={})
    private Output<String> weeklyMaintenanceStartTime;

    /**
     * @return The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
     * 
     */
    public Output<String> getWeeklyMaintenanceStartTime() {
        return this.weeklyMaintenanceStartTime;
    }

    public interface BuilderApplicator {
        public void apply(WindowsFileSystemArgs.Builder a);
    }
    private static io.pulumi.aws.fsx.WindowsFileSystemArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.fsx.WindowsFileSystemArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public WindowsFileSystem(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WindowsFileSystem(String name) {
        this(name, WindowsFileSystemArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WindowsFileSystem(String name, WindowsFileSystemArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WindowsFileSystem(String name, WindowsFileSystemArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:fsx/windowsFileSystem:WindowsFileSystem", name, args == null ? WindowsFileSystemArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private WindowsFileSystem(String name, Output<String> id, @Nullable WindowsFileSystemState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:fsx/windowsFileSystem:WindowsFileSystem", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WindowsFileSystem get(String name, Output<String> id, @Nullable WindowsFileSystemState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new WindowsFileSystem(name, id, state, options);
    }
}
