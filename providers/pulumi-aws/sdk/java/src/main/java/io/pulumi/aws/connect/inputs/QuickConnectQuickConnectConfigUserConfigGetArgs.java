// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.connect.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class QuickConnectQuickConnectConfigUserConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final QuickConnectQuickConnectConfigUserConfigGetArgs Empty = new QuickConnectQuickConnectConfigUserConfigGetArgs();

    /**
     * Specifies the identifier of the contact flow.
     * 
     */
    @InputImport(name="contactFlowId", required=true)
      private final Input<String> contactFlowId;

    public Input<String> getContactFlowId() {
        return this.contactFlowId;
    }

    /**
     * Specifies the identifier for the user.
     * 
     */
    @InputImport(name="userId", required=true)
      private final Input<String> userId;

    public Input<String> getUserId() {
        return this.userId;
    }

    public QuickConnectQuickConnectConfigUserConfigGetArgs(
        Input<String> contactFlowId,
        Input<String> userId) {
        this.contactFlowId = Objects.requireNonNull(contactFlowId, "expected parameter 'contactFlowId' to be non-null");
        this.userId = Objects.requireNonNull(userId, "expected parameter 'userId' to be non-null");
    }

    private QuickConnectQuickConnectConfigUserConfigGetArgs() {
        this.contactFlowId = Input.empty();
        this.userId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QuickConnectQuickConnectConfigUserConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> contactFlowId;
        private Input<String> userId;

        public Builder() {
    	      // Empty
        }

        public Builder(QuickConnectQuickConnectConfigUserConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contactFlowId = defaults.contactFlowId;
    	      this.userId = defaults.userId;
        }

        public Builder contactFlowId(Input<String> contactFlowId) {
            this.contactFlowId = Objects.requireNonNull(contactFlowId);
            return this;
        }

        public Builder contactFlowId(String contactFlowId) {
            this.contactFlowId = Input.of(Objects.requireNonNull(contactFlowId));
            return this;
        }

        public Builder userId(Input<String> userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }

        public Builder userId(String userId) {
            this.userId = Input.of(Objects.requireNonNull(userId));
            return this;
        }
        public QuickConnectQuickConnectConfigUserConfigGetArgs build() {
            return new QuickConnectQuickConnectConfigUserConfigGetArgs(contactFlowId, userId);
        }
    }
}
