// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.efs;

import io.pulumi.aws.efs.inputs.AccessPointPosixUserArgs;
import io.pulumi.aws.efs.inputs.AccessPointRootDirectoryArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AccessPointArgs extends io.pulumi.resources.ResourceArgs {

    public static final AccessPointArgs Empty = new AccessPointArgs();

    /**
     * ID of the file system for which the access point is intended.
     * 
     */
    @Import(name="fileSystemId", required=true)
      private final Output<String> fileSystemId;

    public Output<String> getFileSystemId() {
        return this.fileSystemId;
    }

    /**
     * Operating system user and group applied to all file system requests made using the access point. Detailed below.
     * 
     */
    @Import(name="posixUser")
      private final @Nullable Output<AccessPointPosixUserArgs> posixUser;

    public Output<AccessPointPosixUserArgs> getPosixUser() {
        return this.posixUser == null ? Codegen.empty() : this.posixUser;
    }

    /**
     * Directory on the Amazon EFS file system that the access point provides access to. Detailed below.
     * 
     */
    @Import(name="rootDirectory")
      private final @Nullable Output<AccessPointRootDirectoryArgs> rootDirectory;

    public Output<AccessPointRootDirectoryArgs> getRootDirectory() {
        return this.rootDirectory == null ? Codegen.empty() : this.rootDirectory;
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public AccessPointArgs(
        Output<String> fileSystemId,
        @Nullable Output<AccessPointPosixUserArgs> posixUser,
        @Nullable Output<AccessPointRootDirectoryArgs> rootDirectory,
        @Nullable Output<Map<String,String>> tags) {
        this.fileSystemId = Objects.requireNonNull(fileSystemId, "expected parameter 'fileSystemId' to be non-null");
        this.posixUser = posixUser;
        this.rootDirectory = rootDirectory;
        this.tags = tags;
    }

    private AccessPointArgs() {
        this.fileSystemId = Codegen.empty();
        this.posixUser = Codegen.empty();
        this.rootDirectory = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessPointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> fileSystemId;
        private @Nullable Output<AccessPointPosixUserArgs> posixUser;
        private @Nullable Output<AccessPointRootDirectoryArgs> rootDirectory;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AccessPointArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.posixUser = defaults.posixUser;
    	      this.rootDirectory = defaults.rootDirectory;
    	      this.tags = defaults.tags;
        }

        public Builder fileSystemId(Output<String> fileSystemId) {
            this.fileSystemId = Objects.requireNonNull(fileSystemId);
            return this;
        }
        public Builder fileSystemId(String fileSystemId) {
            this.fileSystemId = Output.of(Objects.requireNonNull(fileSystemId));
            return this;
        }
        public Builder posixUser(@Nullable Output<AccessPointPosixUserArgs> posixUser) {
            this.posixUser = posixUser;
            return this;
        }
        public Builder posixUser(@Nullable AccessPointPosixUserArgs posixUser) {
            this.posixUser = Codegen.ofNullable(posixUser);
            return this;
        }
        public Builder rootDirectory(@Nullable Output<AccessPointRootDirectoryArgs> rootDirectory) {
            this.rootDirectory = rootDirectory;
            return this;
        }
        public Builder rootDirectory(@Nullable AccessPointRootDirectoryArgs rootDirectory) {
            this.rootDirectory = Codegen.ofNullable(rootDirectory);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public AccessPointArgs build() {
            return new AccessPointArgs(fileSystemId, posixUser, rootDirectory, tags);
        }
    }
}
