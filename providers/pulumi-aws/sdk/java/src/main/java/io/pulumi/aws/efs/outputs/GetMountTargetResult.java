// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.efs.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class GetMountTargetResult {
    private final @Nullable String accessPointId;
    /**
     * The unique and consistent identifier of the Availability Zone (AZ) that the mount target resides in.
     * 
     */
    private final String availabilityZoneId;
    /**
     * The name of the Availability Zone (AZ) that the mount target resides in.
     * 
     */
    private final String availabilityZoneName;
    /**
     * The DNS name for the EFS file system.
     * 
     */
    private final String dnsName;
    /**
     * Amazon Resource Name of the file system for which the mount target is intended.
     * 
     */
    private final String fileSystemArn;
    private final String fileSystemId;
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * Address at which the file system may be mounted via the mount target.
     * 
     */
    private final String ipAddress;
    /**
     * The DNS name for the given subnet/AZ per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
     * 
     */
    private final String mountTargetDnsName;
    private final String mountTargetId;
    /**
     * The ID of the network interface that Amazon EFS created when it created the mount target.
     * 
     */
    private final String networkInterfaceId;
    /**
     * AWS account ID that owns the resource.
     * 
     */
    private final String ownerId;
    /**
     * List of VPC security group IDs attached to the mount target.
     * 
     */
    private final List<String> securityGroups;
    /**
     * ID of the mount target's subnet.
     * 
     */
    private final String subnetId;

    @OutputCustomType.Constructor
    private GetMountTargetResult(
        @OutputCustomType.Parameter("accessPointId") @Nullable String accessPointId,
        @OutputCustomType.Parameter("availabilityZoneId") String availabilityZoneId,
        @OutputCustomType.Parameter("availabilityZoneName") String availabilityZoneName,
        @OutputCustomType.Parameter("dnsName") String dnsName,
        @OutputCustomType.Parameter("fileSystemArn") String fileSystemArn,
        @OutputCustomType.Parameter("fileSystemId") String fileSystemId,
        @OutputCustomType.Parameter("id") String id,
        @OutputCustomType.Parameter("ipAddress") String ipAddress,
        @OutputCustomType.Parameter("mountTargetDnsName") String mountTargetDnsName,
        @OutputCustomType.Parameter("mountTargetId") String mountTargetId,
        @OutputCustomType.Parameter("networkInterfaceId") String networkInterfaceId,
        @OutputCustomType.Parameter("ownerId") String ownerId,
        @OutputCustomType.Parameter("securityGroups") List<String> securityGroups,
        @OutputCustomType.Parameter("subnetId") String subnetId) {
        this.accessPointId = accessPointId;
        this.availabilityZoneId = availabilityZoneId;
        this.availabilityZoneName = availabilityZoneName;
        this.dnsName = dnsName;
        this.fileSystemArn = fileSystemArn;
        this.fileSystemId = fileSystemId;
        this.id = id;
        this.ipAddress = ipAddress;
        this.mountTargetDnsName = mountTargetDnsName;
        this.mountTargetId = mountTargetId;
        this.networkInterfaceId = networkInterfaceId;
        this.ownerId = ownerId;
        this.securityGroups = securityGroups;
        this.subnetId = subnetId;
    }

    public Optional<String> getAccessPointId() {
        return Optional.ofNullable(this.accessPointId);
    }
    /**
     * The unique and consistent identifier of the Availability Zone (AZ) that the mount target resides in.
     * 
    */
    public String getAvailabilityZoneId() {
        return this.availabilityZoneId;
    }
    /**
     * The name of the Availability Zone (AZ) that the mount target resides in.
     * 
    */
    public String getAvailabilityZoneName() {
        return this.availabilityZoneName;
    }
    /**
     * The DNS name for the EFS file system.
     * 
    */
    public String getDnsName() {
        return this.dnsName;
    }
    /**
     * Amazon Resource Name of the file system for which the mount target is intended.
     * 
    */
    public String getFileSystemArn() {
        return this.fileSystemArn;
    }
    public String getFileSystemId() {
        return this.fileSystemId;
    }
    /**
     * The provider-assigned unique ID for this managed resource.
     * 
    */
    public String getId() {
        return this.id;
    }
    /**
     * Address at which the file system may be mounted via the mount target.
     * 
    */
    public String getIpAddress() {
        return this.ipAddress;
    }
    /**
     * The DNS name for the given subnet/AZ per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
     * 
    */
    public String getMountTargetDnsName() {
        return this.mountTargetDnsName;
    }
    public String getMountTargetId() {
        return this.mountTargetId;
    }
    /**
     * The ID of the network interface that Amazon EFS created when it created the mount target.
     * 
    */
    public String getNetworkInterfaceId() {
        return this.networkInterfaceId;
    }
    /**
     * AWS account ID that owns the resource.
     * 
    */
    public String getOwnerId() {
        return this.ownerId;
    }
    /**
     * List of VPC security group IDs attached to the mount target.
     * 
    */
    public List<String> getSecurityGroups() {
        return this.securityGroups;
    }
    /**
     * ID of the mount target's subnet.
     * 
    */
    public String getSubnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMountTargetResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessPointId;
        private String availabilityZoneId;
        private String availabilityZoneName;
        private String dnsName;
        private String fileSystemArn;
        private String fileSystemId;
        private String id;
        private String ipAddress;
        private String mountTargetDnsName;
        private String mountTargetId;
        private String networkInterfaceId;
        private String ownerId;
        private List<String> securityGroups;
        private String subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMountTargetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPointId = defaults.accessPointId;
    	      this.availabilityZoneId = defaults.availabilityZoneId;
    	      this.availabilityZoneName = defaults.availabilityZoneName;
    	      this.dnsName = defaults.dnsName;
    	      this.fileSystemArn = defaults.fileSystemArn;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.mountTargetDnsName = defaults.mountTargetDnsName;
    	      this.mountTargetId = defaults.mountTargetId;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
    	      this.ownerId = defaults.ownerId;
    	      this.securityGroups = defaults.securityGroups;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder accessPointId(@Nullable String accessPointId) {
            this.accessPointId = accessPointId;
            return this;
        }

        public Builder availabilityZoneId(String availabilityZoneId) {
            this.availabilityZoneId = Objects.requireNonNull(availabilityZoneId);
            return this;
        }

        public Builder availabilityZoneName(String availabilityZoneName) {
            this.availabilityZoneName = Objects.requireNonNull(availabilityZoneName);
            return this;
        }

        public Builder dnsName(String dnsName) {
            this.dnsName = Objects.requireNonNull(dnsName);
            return this;
        }

        public Builder fileSystemArn(String fileSystemArn) {
            this.fileSystemArn = Objects.requireNonNull(fileSystemArn);
            return this;
        }

        public Builder fileSystemId(String fileSystemId) {
            this.fileSystemId = Objects.requireNonNull(fileSystemId);
            return this;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }

        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }

        public Builder mountTargetDnsName(String mountTargetDnsName) {
            this.mountTargetDnsName = Objects.requireNonNull(mountTargetDnsName);
            return this;
        }

        public Builder mountTargetId(String mountTargetId) {
            this.mountTargetId = Objects.requireNonNull(mountTargetId);
            return this;
        }

        public Builder networkInterfaceId(String networkInterfaceId) {
            this.networkInterfaceId = Objects.requireNonNull(networkInterfaceId);
            return this;
        }

        public Builder ownerId(String ownerId) {
            this.ownerId = Objects.requireNonNull(ownerId);
            return this;
        }

        public Builder securityGroups(List<String> securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }

        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        public GetMountTargetResult build() {
            return new GetMountTargetResult(accessPointId, availabilityZoneId, availabilityZoneName, dnsName, fileSystemArn, fileSystemId, id, ipAddress, mountTargetDnsName, mountTargetId, networkInterfaceId, ownerId, securityGroups, subnetId);
        }
    }
}
