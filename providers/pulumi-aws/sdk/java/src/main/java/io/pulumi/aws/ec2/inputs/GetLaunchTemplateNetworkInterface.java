// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLaunchTemplateNetworkInterface extends io.pulumi.resources.InvokeArgs {

    public static final GetLaunchTemplateNetworkInterface Empty = new GetLaunchTemplateNetworkInterface();

    @Import(name="associateCarrierIpAddress", required=true)
      private final String associateCarrierIpAddress;

    public String getAssociateCarrierIpAddress() {
        return this.associateCarrierIpAddress;
    }

    @Import(name="associatePublicIpAddress")
      private final @Nullable Boolean associatePublicIpAddress;

    public Optional<Boolean> getAssociatePublicIpAddress() {
        return this.associatePublicIpAddress == null ? Optional.empty() : Optional.ofNullable(this.associatePublicIpAddress);
    }

    @Import(name="deleteOnTermination")
      private final @Nullable Boolean deleteOnTermination;

    public Optional<Boolean> getDeleteOnTermination() {
        return this.deleteOnTermination == null ? Optional.empty() : Optional.ofNullable(this.deleteOnTermination);
    }

    /**
     * Description of the launch template.
     * 
     */
    @Import(name="description", required=true)
      private final String description;

    public String getDescription() {
        return this.description;
    }

    @Import(name="deviceIndex", required=true)
      private final Integer deviceIndex;

    public Integer getDeviceIndex() {
        return this.deviceIndex;
    }

    @Import(name="interfaceType", required=true)
      private final String interfaceType;

    public String getInterfaceType() {
        return this.interfaceType;
    }

    @Import(name="ipv4AddressCount", required=true)
      private final Integer ipv4AddressCount;

    public Integer getIpv4AddressCount() {
        return this.ipv4AddressCount;
    }

    @Import(name="ipv4Addresses", required=true)
      private final List<String> ipv4Addresses;

    public List<String> getIpv4Addresses() {
        return this.ipv4Addresses;
    }

    @Import(name="ipv6AddressCount", required=true)
      private final Integer ipv6AddressCount;

    public Integer getIpv6AddressCount() {
        return this.ipv6AddressCount;
    }

    @Import(name="ipv6Addresses", required=true)
      private final List<String> ipv6Addresses;

    public List<String> getIpv6Addresses() {
        return this.ipv6Addresses;
    }

    @Import(name="networkCardIndex")
      private final @Nullable Integer networkCardIndex;

    public Optional<Integer> getNetworkCardIndex() {
        return this.networkCardIndex == null ? Optional.empty() : Optional.ofNullable(this.networkCardIndex);
    }

    @Import(name="networkInterfaceId", required=true)
      private final String networkInterfaceId;

    public String getNetworkInterfaceId() {
        return this.networkInterfaceId;
    }

    @Import(name="privateIpAddress", required=true)
      private final String privateIpAddress;

    public String getPrivateIpAddress() {
        return this.privateIpAddress;
    }

    @Import(name="securityGroups", required=true)
      private final List<String> securityGroups;

    public List<String> getSecurityGroups() {
        return this.securityGroups;
    }

    @Import(name="subnetId", required=true)
      private final String subnetId;

    public String getSubnetId() {
        return this.subnetId;
    }

    public GetLaunchTemplateNetworkInterface(
        String associateCarrierIpAddress,
        @Nullable Boolean associatePublicIpAddress,
        @Nullable Boolean deleteOnTermination,
        String description,
        Integer deviceIndex,
        String interfaceType,
        Integer ipv4AddressCount,
        List<String> ipv4Addresses,
        Integer ipv6AddressCount,
        List<String> ipv6Addresses,
        @Nullable Integer networkCardIndex,
        String networkInterfaceId,
        String privateIpAddress,
        List<String> securityGroups,
        String subnetId) {
        this.associateCarrierIpAddress = Objects.requireNonNull(associateCarrierIpAddress, "expected parameter 'associateCarrierIpAddress' to be non-null");
        this.associatePublicIpAddress = associatePublicIpAddress;
        this.deleteOnTermination = deleteOnTermination;
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.deviceIndex = Objects.requireNonNull(deviceIndex, "expected parameter 'deviceIndex' to be non-null");
        this.interfaceType = Objects.requireNonNull(interfaceType, "expected parameter 'interfaceType' to be non-null");
        this.ipv4AddressCount = Objects.requireNonNull(ipv4AddressCount, "expected parameter 'ipv4AddressCount' to be non-null");
        this.ipv4Addresses = Objects.requireNonNull(ipv4Addresses, "expected parameter 'ipv4Addresses' to be non-null");
        this.ipv6AddressCount = Objects.requireNonNull(ipv6AddressCount, "expected parameter 'ipv6AddressCount' to be non-null");
        this.ipv6Addresses = Objects.requireNonNull(ipv6Addresses, "expected parameter 'ipv6Addresses' to be non-null");
        this.networkCardIndex = networkCardIndex;
        this.networkInterfaceId = Objects.requireNonNull(networkInterfaceId, "expected parameter 'networkInterfaceId' to be non-null");
        this.privateIpAddress = Objects.requireNonNull(privateIpAddress, "expected parameter 'privateIpAddress' to be non-null");
        this.securityGroups = Objects.requireNonNull(securityGroups, "expected parameter 'securityGroups' to be non-null");
        this.subnetId = Objects.requireNonNull(subnetId, "expected parameter 'subnetId' to be non-null");
    }

    private GetLaunchTemplateNetworkInterface() {
        this.associateCarrierIpAddress = null;
        this.associatePublicIpAddress = null;
        this.deleteOnTermination = null;
        this.description = null;
        this.deviceIndex = null;
        this.interfaceType = null;
        this.ipv4AddressCount = null;
        this.ipv4Addresses = List.of();
        this.ipv6AddressCount = null;
        this.ipv6Addresses = List.of();
        this.networkCardIndex = null;
        this.networkInterfaceId = null;
        this.privateIpAddress = null;
        this.securityGroups = List.of();
        this.subnetId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLaunchTemplateNetworkInterface defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String associateCarrierIpAddress;
        private @Nullable Boolean associatePublicIpAddress;
        private @Nullable Boolean deleteOnTermination;
        private String description;
        private Integer deviceIndex;
        private String interfaceType;
        private Integer ipv4AddressCount;
        private List<String> ipv4Addresses;
        private Integer ipv6AddressCount;
        private List<String> ipv6Addresses;
        private @Nullable Integer networkCardIndex;
        private String networkInterfaceId;
        private String privateIpAddress;
        private List<String> securityGroups;
        private String subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLaunchTemplateNetworkInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associateCarrierIpAddress = defaults.associateCarrierIpAddress;
    	      this.associatePublicIpAddress = defaults.associatePublicIpAddress;
    	      this.deleteOnTermination = defaults.deleteOnTermination;
    	      this.description = defaults.description;
    	      this.deviceIndex = defaults.deviceIndex;
    	      this.interfaceType = defaults.interfaceType;
    	      this.ipv4AddressCount = defaults.ipv4AddressCount;
    	      this.ipv4Addresses = defaults.ipv4Addresses;
    	      this.ipv6AddressCount = defaults.ipv6AddressCount;
    	      this.ipv6Addresses = defaults.ipv6Addresses;
    	      this.networkCardIndex = defaults.networkCardIndex;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.securityGroups = defaults.securityGroups;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder associateCarrierIpAddress(String associateCarrierIpAddress) {
            this.associateCarrierIpAddress = Objects.requireNonNull(associateCarrierIpAddress);
            return this;
        }

        public Builder associatePublicIpAddress(@Nullable Boolean associatePublicIpAddress) {
            this.associatePublicIpAddress = associatePublicIpAddress;
            return this;
        }

        public Builder deleteOnTermination(@Nullable Boolean deleteOnTermination) {
            this.deleteOnTermination = deleteOnTermination;
            return this;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder deviceIndex(Integer deviceIndex) {
            this.deviceIndex = Objects.requireNonNull(deviceIndex);
            return this;
        }

        public Builder interfaceType(String interfaceType) {
            this.interfaceType = Objects.requireNonNull(interfaceType);
            return this;
        }

        public Builder ipv4AddressCount(Integer ipv4AddressCount) {
            this.ipv4AddressCount = Objects.requireNonNull(ipv4AddressCount);
            return this;
        }

        public Builder ipv4Addresses(List<String> ipv4Addresses) {
            this.ipv4Addresses = Objects.requireNonNull(ipv4Addresses);
            return this;
        }

        public Builder ipv6AddressCount(Integer ipv6AddressCount) {
            this.ipv6AddressCount = Objects.requireNonNull(ipv6AddressCount);
            return this;
        }

        public Builder ipv6Addresses(List<String> ipv6Addresses) {
            this.ipv6Addresses = Objects.requireNonNull(ipv6Addresses);
            return this;
        }

        public Builder networkCardIndex(@Nullable Integer networkCardIndex) {
            this.networkCardIndex = networkCardIndex;
            return this;
        }

        public Builder networkInterfaceId(String networkInterfaceId) {
            this.networkInterfaceId = Objects.requireNonNull(networkInterfaceId);
            return this;
        }

        public Builder privateIpAddress(String privateIpAddress) {
            this.privateIpAddress = Objects.requireNonNull(privateIpAddress);
            return this;
        }

        public Builder securityGroups(List<String> securityGroups) {
            this.securityGroups = Objects.requireNonNull(securityGroups);
            return this;
        }

        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        public GetLaunchTemplateNetworkInterface build() {
            return new GetLaunchTemplateNetworkInterface(associateCarrierIpAddress, associatePublicIpAddress, deleteOnTermination, description, deviceIndex, interfaceType, ipv4AddressCount, ipv4Addresses, ipv6AddressCount, ipv6Addresses, networkCardIndex, networkInterfaceId, privateIpAddress, securityGroups, subnetId);
        }
    }
}
