// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.codebuild.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class ProjectSecondarySourceVersion {
    /**
     * An identifier for a source in the build project.
     * 
     */
    private final String sourceIdentifier;
    /**
     * The source version for the corresponding source identifier. See [AWS docs](https://docs.aws.amazon.com/codebuild/latest/APIReference/API_ProjectSourceVersion.html#CodeBuild-Type-ProjectSourceVersion-sourceVersion) for more details.
     * 
     */
    private final String sourceVersion;

    @OutputCustomType.Constructor({"sourceIdentifier","sourceVersion"})
    private ProjectSecondarySourceVersion(
        String sourceIdentifier,
        String sourceVersion) {
        this.sourceIdentifier = sourceIdentifier;
        this.sourceVersion = sourceVersion;
    }

    /**
     * An identifier for a source in the build project.
     * 
    */
    public String getSourceIdentifier() {
        return this.sourceIdentifier;
    }
    /**
     * The source version for the corresponding source identifier. See [AWS docs](https://docs.aws.amazon.com/codebuild/latest/APIReference/API_ProjectSourceVersion.html#CodeBuild-Type-ProjectSourceVersion-sourceVersion) for more details.
     * 
    */
    public String getSourceVersion() {
        return this.sourceVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectSecondarySourceVersion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String sourceIdentifier;
        private String sourceVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(ProjectSecondarySourceVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceIdentifier = defaults.sourceIdentifier;
    	      this.sourceVersion = defaults.sourceVersion;
        }

        public Builder setSourceIdentifier(String sourceIdentifier) {
            this.sourceIdentifier = Objects.requireNonNull(sourceIdentifier);
            return this;
        }

        public Builder setSourceVersion(String sourceVersion) {
            this.sourceVersion = Objects.requireNonNull(sourceVersion);
            return this;
        }
        public ProjectSecondarySourceVersion build() {
            return new ProjectSecondarySourceVersion(sourceIdentifier, sourceVersion);
        }
    }
}
