// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ebs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SnapshotArgs extends io.pulumi.resources.ResourceArgs {

    public static final SnapshotArgs Empty = new SnapshotArgs();

    /**
     * A description of what the snapshot is.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.
     * 
     */
    @InputImport(name="outpostArn")
      private final @Nullable Input<String> outpostArn;

    public Input<String> getOutpostArn() {
        return this.outpostArn == null ? Input.empty() : this.outpostArn;
    }

    /**
     * Indicates whether to permanently restore an archived snapshot.
     * 
     */
    @InputImport(name="permanentRestore")
      private final @Nullable Input<Boolean> permanentRestore;

    public Input<Boolean> getPermanentRestore() {
        return this.permanentRestore == null ? Input.empty() : this.permanentRestore;
    }

    /**
     * The name of the storage tier. Valid values are `archive` and `standard`. Default value is `standard`.
     * 
     */
    @InputImport(name="storageTier")
      private final @Nullable Input<String> storageTier;

    public Input<String> getStorageTier() {
        return this.storageTier == null ? Input.empty() : this.storageTier;
    }

    /**
     * A map of tags to assign to the snapshot. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.
     * 
     */
    @InputImport(name="temporaryRestoreDays")
      private final @Nullable Input<Integer> temporaryRestoreDays;

    public Input<Integer> getTemporaryRestoreDays() {
        return this.temporaryRestoreDays == null ? Input.empty() : this.temporaryRestoreDays;
    }

    /**
     * The Volume ID of which to make a snapshot.
     * 
     */
    @InputImport(name="volumeId", required=true)
      private final Input<String> volumeId;

    public Input<String> getVolumeId() {
        return this.volumeId;
    }

    public SnapshotArgs(
        @Nullable Input<String> description,
        @Nullable Input<String> outpostArn,
        @Nullable Input<Boolean> permanentRestore,
        @Nullable Input<String> storageTier,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Integer> temporaryRestoreDays,
        Input<String> volumeId) {
        this.description = description;
        this.outpostArn = outpostArn;
        this.permanentRestore = permanentRestore;
        this.storageTier = storageTier;
        this.tags = tags;
        this.temporaryRestoreDays = temporaryRestoreDays;
        this.volumeId = Objects.requireNonNull(volumeId, "expected parameter 'volumeId' to be non-null");
    }

    private SnapshotArgs() {
        this.description = Input.empty();
        this.outpostArn = Input.empty();
        this.permanentRestore = Input.empty();
        this.storageTier = Input.empty();
        this.tags = Input.empty();
        this.temporaryRestoreDays = Input.empty();
        this.volumeId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SnapshotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> outpostArn;
        private @Nullable Input<Boolean> permanentRestore;
        private @Nullable Input<String> storageTier;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Integer> temporaryRestoreDays;
        private Input<String> volumeId;

        public Builder() {
    	      // Empty
        }

        public Builder(SnapshotArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.outpostArn = defaults.outpostArn;
    	      this.permanentRestore = defaults.permanentRestore;
    	      this.storageTier = defaults.storageTier;
    	      this.tags = defaults.tags;
    	      this.temporaryRestoreDays = defaults.temporaryRestoreDays;
    	      this.volumeId = defaults.volumeId;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setOutpostArn(@Nullable Input<String> outpostArn) {
            this.outpostArn = outpostArn;
            return this;
        }

        public Builder setOutpostArn(@Nullable String outpostArn) {
            this.outpostArn = Input.ofNullable(outpostArn);
            return this;
        }

        public Builder setPermanentRestore(@Nullable Input<Boolean> permanentRestore) {
            this.permanentRestore = permanentRestore;
            return this;
        }

        public Builder setPermanentRestore(@Nullable Boolean permanentRestore) {
            this.permanentRestore = Input.ofNullable(permanentRestore);
            return this;
        }

        public Builder setStorageTier(@Nullable Input<String> storageTier) {
            this.storageTier = storageTier;
            return this;
        }

        public Builder setStorageTier(@Nullable String storageTier) {
            this.storageTier = Input.ofNullable(storageTier);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTemporaryRestoreDays(@Nullable Input<Integer> temporaryRestoreDays) {
            this.temporaryRestoreDays = temporaryRestoreDays;
            return this;
        }

        public Builder setTemporaryRestoreDays(@Nullable Integer temporaryRestoreDays) {
            this.temporaryRestoreDays = Input.ofNullable(temporaryRestoreDays);
            return this;
        }

        public Builder setVolumeId(Input<String> volumeId) {
            this.volumeId = Objects.requireNonNull(volumeId);
            return this;
        }

        public Builder setVolumeId(String volumeId) {
            this.volumeId = Input.of(Objects.requireNonNull(volumeId));
            return this;
        }
        public SnapshotArgs build() {
            return new SnapshotArgs(description, outpostArn, permanentRestore, storageTier, tags, temporaryRestoreDays, volumeId);
        }
    }
}
