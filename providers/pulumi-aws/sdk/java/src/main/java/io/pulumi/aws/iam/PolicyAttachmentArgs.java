// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PolicyAttachmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicyAttachmentArgs Empty = new PolicyAttachmentArgs();

    /**
     * The group(s) the policy should be applied to
     * 
     */
    @Import(name="groups")
      private final @Nullable Output<List<String>> groups;

    public Output<List<String>> groups() {
        return this.groups == null ? Codegen.empty() : this.groups;
    }

    /**
     * The name of the attachment. This cannot be an empty string.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The ARN of the policy you want to apply
     * 
     */
    @Import(name="policyArn", required=true)
      private final Output<String> policyArn;

    public Output<String> policyArn() {
        return this.policyArn;
    }

    /**
     * The role(s) the policy should be applied to
     * 
     */
    @Import(name="roles")
      private final @Nullable Output<List<String>> roles;

    public Output<List<String>> roles() {
        return this.roles == null ? Codegen.empty() : this.roles;
    }

    /**
     * The user(s) the policy should be applied to
     * 
     */
    @Import(name="users")
      private final @Nullable Output<List<String>> users;

    public Output<List<String>> users() {
        return this.users == null ? Codegen.empty() : this.users;
    }

    public PolicyAttachmentArgs(
        @Nullable Output<List<String>> groups,
        @Nullable Output<String> name,
        Output<String> policyArn,
        @Nullable Output<List<String>> roles,
        @Nullable Output<List<String>> users) {
        this.groups = groups;
        this.name = name;
        this.policyArn = Objects.requireNonNull(policyArn, "expected parameter 'policyArn' to be non-null");
        this.roles = roles;
        this.users = users;
    }

    private PolicyAttachmentArgs() {
        this.groups = Codegen.empty();
        this.name = Codegen.empty();
        this.policyArn = Codegen.empty();
        this.roles = Codegen.empty();
        this.users = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> groups;
        private @Nullable Output<String> name;
        private Output<String> policyArn;
        private @Nullable Output<List<String>> roles;
        private @Nullable Output<List<String>> users;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyAttachmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groups = defaults.groups;
    	      this.name = defaults.name;
    	      this.policyArn = defaults.policyArn;
    	      this.roles = defaults.roles;
    	      this.users = defaults.users;
        }

        public Builder groups(@Nullable Output<List<String>> groups) {
            this.groups = groups;
            return this;
        }
        public Builder groups(@Nullable List<String> groups) {
            this.groups = Codegen.ofNullable(groups);
            return this;
        }
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder policyArn(Output<String> policyArn) {
            this.policyArn = Objects.requireNonNull(policyArn);
            return this;
        }
        public Builder policyArn(String policyArn) {
            this.policyArn = Output.of(Objects.requireNonNull(policyArn));
            return this;
        }
        public Builder roles(@Nullable Output<List<String>> roles) {
            this.roles = roles;
            return this;
        }
        public Builder roles(@Nullable List<String> roles) {
            this.roles = Codegen.ofNullable(roles);
            return this;
        }
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }
        public Builder users(@Nullable Output<List<String>> users) {
            this.users = users;
            return this;
        }
        public Builder users(@Nullable List<String> users) {
            this.users = Codegen.ofNullable(users);
            return this;
        }
        public Builder users(String... users) {
            return users(List.of(users));
        }        public PolicyAttachmentArgs build() {
            return new PolicyAttachmentArgs(groups, name, policyArn, roles, users);
        }
    }
}
