// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appmesh.inputs;

import io.pulumi.aws.appmesh.inputs.VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateGetArgs;
import io.pulumi.aws.appmesh.inputs.VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VirtualGatewaySpecBackendDefaultsClientPolicyTlsGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualGatewaySpecBackendDefaultsClientPolicyTlsGetArgs Empty = new VirtualGatewaySpecBackendDefaultsClientPolicyTlsGetArgs();

    /**
     * The listener's TLS certificate.
     * 
     */
    @InputImport(name="certificate")
    private final @Nullable Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateGetArgs> certificate;

    public Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateGetArgs> getCertificate() {
        return this.certificate == null ? Input.empty() : this.certificate;
    }

    /**
     * Whether the policy is enforced. Default is `true`.
     * 
     */
    @InputImport(name="enforce")
    private final @Nullable Input<Boolean> enforce;

    public Input<Boolean> getEnforce() {
        return this.enforce == null ? Input.empty() : this.enforce;
    }

    /**
     * One or more ports that the policy is enforced for.
     * 
     */
    @InputImport(name="ports")
    private final @Nullable Input<List<Integer>> ports;

    public Input<List<Integer>> getPorts() {
        return this.ports == null ? Input.empty() : this.ports;
    }

    /**
     * The listener's Transport Layer Security (TLS) validation context.
     * 
     */
    @InputImport(name="validation", required=true)
    private final Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationGetArgs> validation;

    public Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationGetArgs> getValidation() {
        return this.validation;
    }

    public VirtualGatewaySpecBackendDefaultsClientPolicyTlsGetArgs(
        @Nullable Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateGetArgs> certificate,
        @Nullable Input<Boolean> enforce,
        @Nullable Input<List<Integer>> ports,
        Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationGetArgs> validation) {
        this.certificate = certificate;
        this.enforce = enforce;
        this.ports = ports;
        this.validation = Objects.requireNonNull(validation, "expected parameter 'validation' to be non-null");
    }

    private VirtualGatewaySpecBackendDefaultsClientPolicyTlsGetArgs() {
        this.certificate = Input.empty();
        this.enforce = Input.empty();
        this.ports = Input.empty();
        this.validation = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualGatewaySpecBackendDefaultsClientPolicyTlsGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateGetArgs> certificate;
        private @Nullable Input<Boolean> enforce;
        private @Nullable Input<List<Integer>> ports;
        private Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationGetArgs> validation;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualGatewaySpecBackendDefaultsClientPolicyTlsGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificate = defaults.certificate;
    	      this.enforce = defaults.enforce;
    	      this.ports = defaults.ports;
    	      this.validation = defaults.validation;
        }

        public Builder setCertificate(@Nullable Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateGetArgs> certificate) {
            this.certificate = certificate;
            return this;
        }

        public Builder setCertificate(@Nullable VirtualGatewaySpecBackendDefaultsClientPolicyTlsCertificateGetArgs certificate) {
            this.certificate = Input.ofNullable(certificate);
            return this;
        }

        public Builder setEnforce(@Nullable Input<Boolean> enforce) {
            this.enforce = enforce;
            return this;
        }

        public Builder setEnforce(@Nullable Boolean enforce) {
            this.enforce = Input.ofNullable(enforce);
            return this;
        }

        public Builder setPorts(@Nullable Input<List<Integer>> ports) {
            this.ports = ports;
            return this;
        }

        public Builder setPorts(@Nullable List<Integer> ports) {
            this.ports = Input.ofNullable(ports);
            return this;
        }

        public Builder setValidation(Input<VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationGetArgs> validation) {
            this.validation = Objects.requireNonNull(validation);
            return this;
        }

        public Builder setValidation(VirtualGatewaySpecBackendDefaultsClientPolicyTlsValidationGetArgs validation) {
            this.validation = Input.of(Objects.requireNonNull(validation));
            return this;
        }
        public VirtualGatewaySpecBackendDefaultsClientPolicyTlsGetArgs build() {
            return new VirtualGatewaySpecBackendDefaultsClientPolicyTlsGetArgs(certificate, enforce, ports, validation);
        }
    }
}
