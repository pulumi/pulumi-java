// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.inputs;

import io.pulumi.aws.s3.inputs.BucketReplicationConfigurationRuleDestinationAccessControlTranslationGetArgs;
import io.pulumi.aws.s3.inputs.BucketReplicationConfigurationRuleDestinationMetricsGetArgs;
import io.pulumi.aws.s3.inputs.BucketReplicationConfigurationRuleDestinationReplicationTimeGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BucketReplicationConfigurationRuleDestinationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketReplicationConfigurationRuleDestinationGetArgs Empty = new BucketReplicationConfigurationRuleDestinationGetArgs();

    /**
     * Specifies the overrides to use for object owners on replication. Must be used in conjunction with `account_id` owner override configuration.
     * 
     */
    @InputImport(name="accessControlTranslation")
      private final @Nullable Input<BucketReplicationConfigurationRuleDestinationAccessControlTranslationGetArgs> accessControlTranslation;

    public Input<BucketReplicationConfigurationRuleDestinationAccessControlTranslationGetArgs> getAccessControlTranslation() {
        return this.accessControlTranslation == null ? Input.empty() : this.accessControlTranslation;
    }

    /**
     * The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `access_control_translation` override configuration.
     * 
     */
    @InputImport(name="accountId")
      private final @Nullable Input<String> accountId;

    public Input<String> getAccountId() {
        return this.accountId == null ? Input.empty() : this.accountId;
    }

    /**
     * The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
     * 
     */
    @InputImport(name="bucket", required=true)
      private final Input<String> bucket;

    public Input<String> getBucket() {
        return this.bucket;
    }

    /**
     * Enables replication metrics (required for S3 RTC) (documented below).
     * 
     */
    @InputImport(name="metrics")
      private final @Nullable Input<BucketReplicationConfigurationRuleDestinationMetricsGetArgs> metrics;

    public Input<BucketReplicationConfigurationRuleDestinationMetricsGetArgs> getMetrics() {
        return this.metrics == null ? Input.empty() : this.metrics;
    }

    /**
     * Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
     * `sse_kms_encrypted_objects` source selection criteria.
     * 
     */
    @InputImport(name="replicaKmsKeyId")
      private final @Nullable Input<String> replicaKmsKeyId;

    public Input<String> getReplicaKmsKeyId() {
        return this.replicaKmsKeyId == null ? Input.empty() : this.replicaKmsKeyId;
    }

    /**
     * Enables S3 Replication Time Control (S3 RTC) (documented below).
     * 
     */
    @InputImport(name="replicationTime")
      private final @Nullable Input<BucketReplicationConfigurationRuleDestinationReplicationTimeGetArgs> replicationTime;

    public Input<BucketReplicationConfigurationRuleDestinationReplicationTimeGetArgs> getReplicationTime() {
        return this.replicationTime == null ? Input.empty() : this.replicationTime;
    }

    /**
     * The [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Destination.html#AmazonS3-Type-Destination-StorageClass) used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
     * 
     */
    @InputImport(name="storageClass")
      private final @Nullable Input<String> storageClass;

    public Input<String> getStorageClass() {
        return this.storageClass == null ? Input.empty() : this.storageClass;
    }

    public BucketReplicationConfigurationRuleDestinationGetArgs(
        @Nullable Input<BucketReplicationConfigurationRuleDestinationAccessControlTranslationGetArgs> accessControlTranslation,
        @Nullable Input<String> accountId,
        Input<String> bucket,
        @Nullable Input<BucketReplicationConfigurationRuleDestinationMetricsGetArgs> metrics,
        @Nullable Input<String> replicaKmsKeyId,
        @Nullable Input<BucketReplicationConfigurationRuleDestinationReplicationTimeGetArgs> replicationTime,
        @Nullable Input<String> storageClass) {
        this.accessControlTranslation = accessControlTranslation;
        this.accountId = accountId;
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.metrics = metrics;
        this.replicaKmsKeyId = replicaKmsKeyId;
        this.replicationTime = replicationTime;
        this.storageClass = storageClass;
    }

    private BucketReplicationConfigurationRuleDestinationGetArgs() {
        this.accessControlTranslation = Input.empty();
        this.accountId = Input.empty();
        this.bucket = Input.empty();
        this.metrics = Input.empty();
        this.replicaKmsKeyId = Input.empty();
        this.replicationTime = Input.empty();
        this.storageClass = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationConfigurationRuleDestinationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<BucketReplicationConfigurationRuleDestinationAccessControlTranslationGetArgs> accessControlTranslation;
        private @Nullable Input<String> accountId;
        private Input<String> bucket;
        private @Nullable Input<BucketReplicationConfigurationRuleDestinationMetricsGetArgs> metrics;
        private @Nullable Input<String> replicaKmsKeyId;
        private @Nullable Input<BucketReplicationConfigurationRuleDestinationReplicationTimeGetArgs> replicationTime;
        private @Nullable Input<String> storageClass;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketReplicationConfigurationRuleDestinationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlTranslation = defaults.accessControlTranslation;
    	      this.accountId = defaults.accountId;
    	      this.bucket = defaults.bucket;
    	      this.metrics = defaults.metrics;
    	      this.replicaKmsKeyId = defaults.replicaKmsKeyId;
    	      this.replicationTime = defaults.replicationTime;
    	      this.storageClass = defaults.storageClass;
        }

        public Builder setAccessControlTranslation(@Nullable Input<BucketReplicationConfigurationRuleDestinationAccessControlTranslationGetArgs> accessControlTranslation) {
            this.accessControlTranslation = accessControlTranslation;
            return this;
        }

        public Builder setAccessControlTranslation(@Nullable BucketReplicationConfigurationRuleDestinationAccessControlTranslationGetArgs accessControlTranslation) {
            this.accessControlTranslation = Input.ofNullable(accessControlTranslation);
            return this;
        }

        public Builder setAccountId(@Nullable Input<String> accountId) {
            this.accountId = accountId;
            return this;
        }

        public Builder setAccountId(@Nullable String accountId) {
            this.accountId = Input.ofNullable(accountId);
            return this;
        }

        public Builder setBucket(Input<String> bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }

        public Builder setBucket(String bucket) {
            this.bucket = Input.of(Objects.requireNonNull(bucket));
            return this;
        }

        public Builder setMetrics(@Nullable Input<BucketReplicationConfigurationRuleDestinationMetricsGetArgs> metrics) {
            this.metrics = metrics;
            return this;
        }

        public Builder setMetrics(@Nullable BucketReplicationConfigurationRuleDestinationMetricsGetArgs metrics) {
            this.metrics = Input.ofNullable(metrics);
            return this;
        }

        public Builder setReplicaKmsKeyId(@Nullable Input<String> replicaKmsKeyId) {
            this.replicaKmsKeyId = replicaKmsKeyId;
            return this;
        }

        public Builder setReplicaKmsKeyId(@Nullable String replicaKmsKeyId) {
            this.replicaKmsKeyId = Input.ofNullable(replicaKmsKeyId);
            return this;
        }

        public Builder setReplicationTime(@Nullable Input<BucketReplicationConfigurationRuleDestinationReplicationTimeGetArgs> replicationTime) {
            this.replicationTime = replicationTime;
            return this;
        }

        public Builder setReplicationTime(@Nullable BucketReplicationConfigurationRuleDestinationReplicationTimeGetArgs replicationTime) {
            this.replicationTime = Input.ofNullable(replicationTime);
            return this;
        }

        public Builder setStorageClass(@Nullable Input<String> storageClass) {
            this.storageClass = storageClass;
            return this;
        }

        public Builder setStorageClass(@Nullable String storageClass) {
            this.storageClass = Input.ofNullable(storageClass);
            return this;
        }
        public BucketReplicationConfigurationRuleDestinationGetArgs build() {
            return new BucketReplicationConfigurationRuleDestinationGetArgs(accessControlTranslation, accountId, bucket, metrics, replicaKmsKeyId, replicationTime, storageClass);
        }
    }
}
