// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cloudfront.MonitoringSubscriptionArgs;
import io.pulumi.aws.cloudfront.inputs.MonitoringSubscriptionState;
import io.pulumi.aws.cloudfront.outputs.MonitoringSubscriptionMonitoringSubscription;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a CloudFront real-time log configuration resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.cloudfront.MonitoringSubscription("example", {
 *     distributionId: aws_cloudfront_distribution.example.id,
 *     monitoringSubscription: {
 *         realtimeMetricsSubscriptionConfig: {
 *             realtimeMetricsSubscriptionStatus: "Enabled",
 *         },
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.cloudfront.MonitoringSubscription("example",
 *     distribution_id=aws_cloudfront_distribution["example"]["id"],
 *     monitoring_subscription=aws.cloudfront.MonitoringSubscriptionMonitoringSubscriptionArgs(
 *         realtime_metrics_subscription_config=aws.cloudfront.MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs(
 *             realtime_metrics_subscription_status="Enabled",
 *         ),
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.CloudFront.MonitoringSubscription("example", new Aws.CloudFront.MonitoringSubscriptionArgs
 *         {
 *             DistributionId = aws_cloudfront_distribution.Example.Id,
 *             MonitoringSubscription = new Aws.CloudFront.Inputs.MonitoringSubscriptionMonitoringSubscriptionArgs
 *             {
 *                 RealtimeMetricsSubscriptionConfig = new Aws.CloudFront.Inputs.MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs
 *                 {
 *                     RealtimeMetricsSubscriptionStatus = "Enabled",
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cloudfront"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := cloudfront.NewMonitoringSubscription(ctx, "example", &cloudfront.MonitoringSubscriptionArgs{
 * 			DistributionId: pulumi.Any(aws_cloudfront_distribution.Example.Id),
 * 			MonitoringSubscription: &cloudfront.MonitoringSubscriptionMonitoringSubscriptionArgs{
 * 				RealtimeMetricsSubscriptionConfig: &cloudfront.MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs{
 * 					RealtimeMetricsSubscriptionStatus: pulumi.String("Enabled"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * CloudFront monitoring subscription can be imported using the id, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:cloudfront/monitoringSubscription:MonitoringSubscription example E3QYSUHO4VYRGB
 * ```
 * 
 *  
 */
@ResourceType(type="aws:cloudfront/monitoringSubscription:MonitoringSubscription")
public class MonitoringSubscription extends io.pulumi.resources.CustomResource {
    /**
     * The ID of the distribution that you are enabling metrics for.
     * 
     */
    @Export(name="distributionId", type=String.class, parameters={})
    private Output<String> distributionId;

    /**
     * @return The ID of the distribution that you are enabling metrics for.
     * 
     */
    public Output<String> getDistributionId() {
        return this.distributionId;
    }
    /**
     * A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
     * 
     */
    @Export(name="monitoringSubscription", type=MonitoringSubscriptionMonitoringSubscription.class, parameters={})
    private Output<MonitoringSubscriptionMonitoringSubscription> monitoringSubscription;

    /**
     * @return A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
     * 
     */
    public Output<MonitoringSubscriptionMonitoringSubscription> getMonitoringSubscription() {
        return this.monitoringSubscription;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MonitoringSubscription(String name) {
        this(name, MonitoringSubscriptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MonitoringSubscription(String name, MonitoringSubscriptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MonitoringSubscription(String name, MonitoringSubscriptionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudfront/monitoringSubscription:MonitoringSubscription", name, args == null ? MonitoringSubscriptionArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private MonitoringSubscription(String name, Output<String> id, @Nullable MonitoringSubscriptionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cloudfront/monitoringSubscription:MonitoringSubscription", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MonitoringSubscription get(String name, Output<String> id, @Nullable MonitoringSubscriptionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new MonitoringSubscription(name, id, state, options);
    }
}
