// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.autoscaling;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.autoscaling.NotificationArgs;
import io.pulumi.aws.autoscaling.inputs.NotificationState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides an AutoScaling Group with Notification support, via SNS Topics. Each of
 * the `notifications` map to a [Notification Configuration](https://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_DescribeNotificationConfigurations.html) inside Amazon Web
 * Services, and are applied to each AutoScaling Group you supply.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * Basic usage:
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.sns.Topic("example", {});
 * // arn is an exported attribute
 * const bar = new aws.autoscaling.Group("bar", {});
 * // ...
 * const foo = new aws.autoscaling.Group("foo", {});
 * // ...
 * const exampleNotifications = new aws.autoscaling.Notification("exampleNotifications", {
 *     groupNames: [
 *         bar.name,
 *         foo.name,
 *     ],
 *     notifications: [
 *         "autoscaling:EC2_INSTANCE_LAUNCH",
 *         "autoscaling:EC2_INSTANCE_TERMINATE",
 *         "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
 *         "autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
 *     ],
 *     topicArn: example.arn,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.sns.Topic("example")
 * # arn is an exported attribute
 * bar = aws.autoscaling.Group("bar")
 * # ...
 * foo = aws.autoscaling.Group("foo")
 * # ...
 * example_notifications = aws.autoscaling.Notification("exampleNotifications",
 *     group_names=[
 *         bar.name,
 *         foo.name,
 *     ],
 *     notifications=[
 *         "autoscaling:EC2_INSTANCE_LAUNCH",
 *         "autoscaling:EC2_INSTANCE_TERMINATE",
 *         "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
 *         "autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
 *     ],
 *     topic_arn=example.arn)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.Sns.Topic("example", new Aws.Sns.TopicArgs
 *         {
 *         });
 *         // arn is an exported attribute
 *         var bar = new Aws.AutoScaling.Group("bar", new Aws.AutoScaling.GroupArgs
 *         {
 *         });
 *         // ...
 *         var foo = new Aws.AutoScaling.Group("foo", new Aws.AutoScaling.GroupArgs
 *         {
 *         });
 *         // ...
 *         var exampleNotifications = new Aws.AutoScaling.Notification("exampleNotifications", new Aws.AutoScaling.NotificationArgs
 *         {
 *             GroupNames = 
 *             {
 *                 bar.Name,
 *                 foo.Name,
 *             },
 *             Notifications = 
 *             {
 *                 "autoscaling:EC2_INSTANCE_LAUNCH",
 *                 "autoscaling:EC2_INSTANCE_TERMINATE",
 *                 "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
 *                 "autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
 *             },
 *             TopicArn = example.Arn,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/autoscaling"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/sns"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		example, err := sns.NewTopic(ctx, "example", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		bar, err := autoscaling.NewGroup(ctx, "bar", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		foo, err := autoscaling.NewGroup(ctx, "foo", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = autoscaling.NewNotification(ctx, "exampleNotifications", &autoscaling.NotificationArgs{
 * 			GroupNames: pulumi.StringArray{
 * 				bar.Name,
 * 				foo.Name,
 * 			},
 * 			Notifications: pulumi.StringArray{
 * 				pulumi.String("autoscaling:EC2_INSTANCE_LAUNCH"),
 * 				pulumi.String("autoscaling:EC2_INSTANCE_TERMINATE"),
 * 				pulumi.String("autoscaling:EC2_INSTANCE_LAUNCH_ERROR"),
 * 				pulumi.String("autoscaling:EC2_INSTANCE_TERMINATE_ERROR"),
 * 			},
 * 			TopicArn: example.Arn,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:autoscaling/notification:Notification")
public class Notification extends io.pulumi.resources.CustomResource {
    /**
     * A list of AutoScaling Group Names
     * 
     */
    @Export(name="groupNames", type=List.class, parameters={String.class})
    private Output<List<String>> groupNames;

    /**
     * @return A list of AutoScaling Group Names
     * 
     */
    public Output<List<String>> getGroupNames() {
        return this.groupNames;
    }
    /**
     * A list of Notification Types that trigger
     * notifications. Acceptable values are documented [in the AWS documentation here](https://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_NotificationConfiguration.html)
     * 
     */
    @Export(name="notifications", type=List.class, parameters={String.class})
    private Output<List<String>> notifications;

    /**
     * @return A list of Notification Types that trigger
     * notifications. Acceptable values are documented [in the AWS documentation here](https://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_NotificationConfiguration.html)
     * 
     */
    public Output<List<String>> getNotifications() {
        return this.notifications;
    }
    /**
     * The Topic ARN for notifications to be sent through
     * 
     */
    @Export(name="topicArn", type=String.class, parameters={})
    private Output<String> topicArn;

    /**
     * @return The Topic ARN for notifications to be sent through
     * 
     */
    public Output<String> getTopicArn() {
        return this.topicArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Notification(String name) {
        this(name, NotificationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Notification(String name, NotificationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Notification(String name, NotificationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:autoscaling/notification:Notification", name, args == null ? NotificationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Notification(String name, Output<String> id, @Nullable NotificationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:autoscaling/notification:Notification", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Notification get(String name, Output<String> id, @Nullable NotificationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Notification(name, id, state, options);
    }
}
