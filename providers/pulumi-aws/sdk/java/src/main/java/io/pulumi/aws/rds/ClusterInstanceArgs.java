// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds;

import io.pulumi.aws.rds.enums.InstanceType;
import io.pulumi.core.Either;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterInstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterInstanceArgs Empty = new ClusterInstanceArgs();

    /**
     * Specifies whether any database modifications
     * are applied immediately, or during the next maintenance window. Default is`false`.
     * 
     */
    @InputImport(name="applyImmediately")
    private final @Nullable Input<Boolean> applyImmediately;

    public Input<Boolean> getApplyImmediately() {
        return this.applyImmediately == null ? Input.empty() : this.applyImmediately;
    }

    /**
     * Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
     * 
     */
    @InputImport(name="autoMinorVersionUpgrade")
    private final @Nullable Input<Boolean> autoMinorVersionUpgrade;

    public Input<Boolean> getAutoMinorVersionUpgrade() {
        return this.autoMinorVersionUpgrade == null ? Input.empty() : this.autoMinorVersionUpgrade;
    }

    /**
     * The EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) about the details.
     * 
     */
    @InputImport(name="availabilityZone")
    private final @Nullable Input<String> availabilityZone;

    public Input<String> getAvailabilityZone() {
        return this.availabilityZone == null ? Input.empty() : this.availabilityZone;
    }

    /**
     * The identifier of the CA certificate for the DB instance.
     * 
     */
    @InputImport(name="caCertIdentifier")
    private final @Nullable Input<String> caCertIdentifier;

    public Input<String> getCaCertIdentifier() {
        return this.caCertIdentifier == null ? Input.empty() : this.caCertIdentifier;
    }

    /**
     * The identifier of the `aws.rds.Cluster` in which to launch this instance.
     * 
     */
    @InputImport(name="clusterIdentifier", required=true)
    private final Input<String> clusterIdentifier;

    public Input<String> getClusterIdentifier() {
        return this.clusterIdentifier;
    }

    /**
     * Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default `false`.
     * 
     */
    @InputImport(name="copyTagsToSnapshot")
    private final @Nullable Input<Boolean> copyTagsToSnapshot;

    public Input<Boolean> getCopyTagsToSnapshot() {
        return this.copyTagsToSnapshot == null ? Input.empty() : this.copyTagsToSnapshot;
    }

    /**
     * The name of the DB parameter group to associate with this instance.
     * 
     */
    @InputImport(name="dbParameterGroupName")
    private final @Nullable Input<String> dbParameterGroupName;

    public Input<String> getDbParameterGroupName() {
        return this.dbParameterGroupName == null ? Input.empty() : this.dbParameterGroupName;
    }

    /**
     * A DB subnet group to associate with this DB instance. **NOTE:** This must match the `db_subnet_group_name` of the attached `aws.rds.Cluster`.
     * 
     */
    @InputImport(name="dbSubnetGroupName")
    private final @Nullable Input<String> dbSubnetGroupName;

    public Input<String> getDbSubnetGroupName() {
        return this.dbSubnetGroupName == null ? Input.empty() : this.dbSubnetGroupName;
    }

    /**
     * The name of the database engine to be used for the RDS instance. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`.
     * For information on the difference between the available Aurora MySQL engines
     * see [Comparison between Aurora MySQL 1 and Aurora MySQL 2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Updates.20180206.html)
     * in the Amazon RDS User Guide.
     * 
     */
    @InputImport(name="engine")
    private final @Nullable Input<String> engine;

    public Input<String> getEngine() {
        return this.engine == null ? Input.empty() : this.engine;
    }

    /**
     * The database engine version.
     * 
     */
    @InputImport(name="engineVersion")
    private final @Nullable Input<String> engineVersion;

    public Input<String> getEngineVersion() {
        return this.engineVersion == null ? Input.empty() : this.engineVersion;
    }

    /**
     * The indentifier for the RDS instance, if omitted, this provider will assign a random, unique identifier.
     * 
     */
    @InputImport(name="identifier")
    private final @Nullable Input<String> identifier;

    public Input<String> getIdentifier() {
        return this.identifier == null ? Input.empty() : this.identifier;
    }

    /**
     * Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
     * 
     */
    @InputImport(name="identifierPrefix")
    private final @Nullable Input<String> identifierPrefix;

    public Input<String> getIdentifierPrefix() {
        return this.identifierPrefix == null ? Input.empty() : this.identifierPrefix;
    }

    /**
     * The instance class to use. For details on CPU
     * and memory, see [Scaling Aurora DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html). Aurora uses `db.*` instance classes/types. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) for currently available instance classes and complete details.
     * 
     */
    @InputImport(name="instanceClass", required=true)
    private final Input<Either<String,InstanceType>> instanceClass;

    public Input<Either<String,InstanceType>> getInstanceClass() {
        return this.instanceClass;
    }

    /**
     * The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
     * 
     */
    @InputImport(name="monitoringInterval")
    private final @Nullable Input<Integer> monitoringInterval;

    public Input<Integer> getMonitoringInterval() {
        return this.monitoringInterval == null ? Input.empty() : this.monitoringInterval;
    }

    /**
     * The ARN for the IAM role that permits RDS to send
     * enhanced monitoring metrics to CloudWatch Logs. You can find more information on the [AWS Documentation](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html)
     * what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
     * 
     */
    @InputImport(name="monitoringRoleArn")
    private final @Nullable Input<String> monitoringRoleArn;

    public Input<String> getMonitoringRoleArn() {
        return this.monitoringRoleArn == null ? Input.empty() : this.monitoringRoleArn;
    }

    /**
     * Specifies whether Performance Insights is enabled or not.
     * 
     */
    @InputImport(name="performanceInsightsEnabled")
    private final @Nullable Input<Boolean> performanceInsightsEnabled;

    public Input<Boolean> getPerformanceInsightsEnabled() {
        return this.performanceInsightsEnabled == null ? Input.empty() : this.performanceInsightsEnabled;
    }

    /**
     * ARN for the KMS key to encrypt Performance Insights data. When specifying `performance_insights_kms_key_id`, `performance_insights_enabled` needs to be set to true.
     * 
     */
    @InputImport(name="performanceInsightsKmsKeyId")
    private final @Nullable Input<String> performanceInsightsKmsKeyId;

    public Input<String> getPerformanceInsightsKmsKeyId() {
        return this.performanceInsightsKmsKeyId == null ? Input.empty() : this.performanceInsightsKmsKeyId;
    }

    /**
     * Amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years). When specifying `performance_insights_retention_period`, `performance_insights_enabled` needs to be set to true. Defaults to '7'.
     * 
     */
    @InputImport(name="performanceInsightsRetentionPeriod")
    private final @Nullable Input<Integer> performanceInsightsRetentionPeriod;

    public Input<Integer> getPerformanceInsightsRetentionPeriod() {
        return this.performanceInsightsRetentionPeriod == null ? Input.empty() : this.performanceInsightsRetentionPeriod;
    }

    /**
     * The daily time range during which automated backups are created if automated backups are enabled.
     * Eg: "04:00-09:00"
     * 
     */
    @InputImport(name="preferredBackupWindow")
    private final @Nullable Input<String> preferredBackupWindow;

    public Input<String> getPreferredBackupWindow() {
        return this.preferredBackupWindow == null ? Input.empty() : this.preferredBackupWindow;
    }

    /**
     * The window to perform maintenance in.
     * Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
     * 
     */
    @InputImport(name="preferredMaintenanceWindow")
    private final @Nullable Input<String> preferredMaintenanceWindow;

    public Input<String> getPreferredMaintenanceWindow() {
        return this.preferredMaintenanceWindow == null ? Input.empty() : this.preferredMaintenanceWindow;
    }

    /**
     * Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
     * 
     */
    @InputImport(name="promotionTier")
    private final @Nullable Input<Integer> promotionTier;

    public Input<Integer> getPromotionTier() {
        return this.promotionTier == null ? Input.empty() : this.promotionTier;
    }

    /**
     * Bool to control if instance is publicly accessible.
     * Default `false`. See the documentation on [Creating DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) for more
     * details on controlling this property.
     * 
     */
    @InputImport(name="publiclyAccessible")
    private final @Nullable Input<Boolean> publiclyAccessible;

    public Input<Boolean> getPubliclyAccessible() {
        return this.publiclyAccessible == null ? Input.empty() : this.publiclyAccessible;
    }

    /**
     * A map of tags to assign to the instance. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public ClusterInstanceArgs(
        @Nullable Input<Boolean> applyImmediately,
        @Nullable Input<Boolean> autoMinorVersionUpgrade,
        @Nullable Input<String> availabilityZone,
        @Nullable Input<String> caCertIdentifier,
        Input<String> clusterIdentifier,
        @Nullable Input<Boolean> copyTagsToSnapshot,
        @Nullable Input<String> dbParameterGroupName,
        @Nullable Input<String> dbSubnetGroupName,
        @Nullable Input<String> engine,
        @Nullable Input<String> engineVersion,
        @Nullable Input<String> identifier,
        @Nullable Input<String> identifierPrefix,
        Input<Either<String,InstanceType>> instanceClass,
        @Nullable Input<Integer> monitoringInterval,
        @Nullable Input<String> monitoringRoleArn,
        @Nullable Input<Boolean> performanceInsightsEnabled,
        @Nullable Input<String> performanceInsightsKmsKeyId,
        @Nullable Input<Integer> performanceInsightsRetentionPeriod,
        @Nullable Input<String> preferredBackupWindow,
        @Nullable Input<String> preferredMaintenanceWindow,
        @Nullable Input<Integer> promotionTier,
        @Nullable Input<Boolean> publiclyAccessible,
        @Nullable Input<Map<String,String>> tags) {
        this.applyImmediately = applyImmediately;
        this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
        this.availabilityZone = availabilityZone;
        this.caCertIdentifier = caCertIdentifier;
        this.clusterIdentifier = Objects.requireNonNull(clusterIdentifier, "expected parameter 'clusterIdentifier' to be non-null");
        this.copyTagsToSnapshot = copyTagsToSnapshot;
        this.dbParameterGroupName = dbParameterGroupName;
        this.dbSubnetGroupName = dbSubnetGroupName;
        this.engine = engine;
        this.engineVersion = engineVersion;
        this.identifier = identifier;
        this.identifierPrefix = identifierPrefix;
        this.instanceClass = Objects.requireNonNull(instanceClass, "expected parameter 'instanceClass' to be non-null");
        this.monitoringInterval = monitoringInterval;
        this.monitoringRoleArn = monitoringRoleArn;
        this.performanceInsightsEnabled = performanceInsightsEnabled;
        this.performanceInsightsKmsKeyId = performanceInsightsKmsKeyId;
        this.performanceInsightsRetentionPeriod = performanceInsightsRetentionPeriod;
        this.preferredBackupWindow = preferredBackupWindow;
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        this.promotionTier = promotionTier;
        this.publiclyAccessible = publiclyAccessible;
        this.tags = tags;
    }

    private ClusterInstanceArgs() {
        this.applyImmediately = Input.empty();
        this.autoMinorVersionUpgrade = Input.empty();
        this.availabilityZone = Input.empty();
        this.caCertIdentifier = Input.empty();
        this.clusterIdentifier = Input.empty();
        this.copyTagsToSnapshot = Input.empty();
        this.dbParameterGroupName = Input.empty();
        this.dbSubnetGroupName = Input.empty();
        this.engine = Input.empty();
        this.engineVersion = Input.empty();
        this.identifier = Input.empty();
        this.identifierPrefix = Input.empty();
        this.instanceClass = Input.empty();
        this.monitoringInterval = Input.empty();
        this.monitoringRoleArn = Input.empty();
        this.performanceInsightsEnabled = Input.empty();
        this.performanceInsightsKmsKeyId = Input.empty();
        this.performanceInsightsRetentionPeriod = Input.empty();
        this.preferredBackupWindow = Input.empty();
        this.preferredMaintenanceWindow = Input.empty();
        this.promotionTier = Input.empty();
        this.publiclyAccessible = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> applyImmediately;
        private @Nullable Input<Boolean> autoMinorVersionUpgrade;
        private @Nullable Input<String> availabilityZone;
        private @Nullable Input<String> caCertIdentifier;
        private Input<String> clusterIdentifier;
        private @Nullable Input<Boolean> copyTagsToSnapshot;
        private @Nullable Input<String> dbParameterGroupName;
        private @Nullable Input<String> dbSubnetGroupName;
        private @Nullable Input<String> engine;
        private @Nullable Input<String> engineVersion;
        private @Nullable Input<String> identifier;
        private @Nullable Input<String> identifierPrefix;
        private Input<Either<String,InstanceType>> instanceClass;
        private @Nullable Input<Integer> monitoringInterval;
        private @Nullable Input<String> monitoringRoleArn;
        private @Nullable Input<Boolean> performanceInsightsEnabled;
        private @Nullable Input<String> performanceInsightsKmsKeyId;
        private @Nullable Input<Integer> performanceInsightsRetentionPeriod;
        private @Nullable Input<String> preferredBackupWindow;
        private @Nullable Input<String> preferredMaintenanceWindow;
        private @Nullable Input<Integer> promotionTier;
        private @Nullable Input<Boolean> publiclyAccessible;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterInstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applyImmediately = defaults.applyImmediately;
    	      this.autoMinorVersionUpgrade = defaults.autoMinorVersionUpgrade;
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.caCertIdentifier = defaults.caCertIdentifier;
    	      this.clusterIdentifier = defaults.clusterIdentifier;
    	      this.copyTagsToSnapshot = defaults.copyTagsToSnapshot;
    	      this.dbParameterGroupName = defaults.dbParameterGroupName;
    	      this.dbSubnetGroupName = defaults.dbSubnetGroupName;
    	      this.engine = defaults.engine;
    	      this.engineVersion = defaults.engineVersion;
    	      this.identifier = defaults.identifier;
    	      this.identifierPrefix = defaults.identifierPrefix;
    	      this.instanceClass = defaults.instanceClass;
    	      this.monitoringInterval = defaults.monitoringInterval;
    	      this.monitoringRoleArn = defaults.monitoringRoleArn;
    	      this.performanceInsightsEnabled = defaults.performanceInsightsEnabled;
    	      this.performanceInsightsKmsKeyId = defaults.performanceInsightsKmsKeyId;
    	      this.performanceInsightsRetentionPeriod = defaults.performanceInsightsRetentionPeriod;
    	      this.preferredBackupWindow = defaults.preferredBackupWindow;
    	      this.preferredMaintenanceWindow = defaults.preferredMaintenanceWindow;
    	      this.promotionTier = defaults.promotionTier;
    	      this.publiclyAccessible = defaults.publiclyAccessible;
    	      this.tags = defaults.tags;
        }

        public Builder setApplyImmediately(@Nullable Input<Boolean> applyImmediately) {
            this.applyImmediately = applyImmediately;
            return this;
        }

        public Builder setApplyImmediately(@Nullable Boolean applyImmediately) {
            this.applyImmediately = Input.ofNullable(applyImmediately);
            return this;
        }

        public Builder setAutoMinorVersionUpgrade(@Nullable Input<Boolean> autoMinorVersionUpgrade) {
            this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
            return this;
        }

        public Builder setAutoMinorVersionUpgrade(@Nullable Boolean autoMinorVersionUpgrade) {
            this.autoMinorVersionUpgrade = Input.ofNullable(autoMinorVersionUpgrade);
            return this;
        }

        public Builder setAvailabilityZone(@Nullable Input<String> availabilityZone) {
            this.availabilityZone = availabilityZone;
            return this;
        }

        public Builder setAvailabilityZone(@Nullable String availabilityZone) {
            this.availabilityZone = Input.ofNullable(availabilityZone);
            return this;
        }

        public Builder setCaCertIdentifier(@Nullable Input<String> caCertIdentifier) {
            this.caCertIdentifier = caCertIdentifier;
            return this;
        }

        public Builder setCaCertIdentifier(@Nullable String caCertIdentifier) {
            this.caCertIdentifier = Input.ofNullable(caCertIdentifier);
            return this;
        }

        public Builder setClusterIdentifier(Input<String> clusterIdentifier) {
            this.clusterIdentifier = Objects.requireNonNull(clusterIdentifier);
            return this;
        }

        public Builder setClusterIdentifier(String clusterIdentifier) {
            this.clusterIdentifier = Input.of(Objects.requireNonNull(clusterIdentifier));
            return this;
        }

        public Builder setCopyTagsToSnapshot(@Nullable Input<Boolean> copyTagsToSnapshot) {
            this.copyTagsToSnapshot = copyTagsToSnapshot;
            return this;
        }

        public Builder setCopyTagsToSnapshot(@Nullable Boolean copyTagsToSnapshot) {
            this.copyTagsToSnapshot = Input.ofNullable(copyTagsToSnapshot);
            return this;
        }

        public Builder setDbParameterGroupName(@Nullable Input<String> dbParameterGroupName) {
            this.dbParameterGroupName = dbParameterGroupName;
            return this;
        }

        public Builder setDbParameterGroupName(@Nullable String dbParameterGroupName) {
            this.dbParameterGroupName = Input.ofNullable(dbParameterGroupName);
            return this;
        }

        public Builder setDbSubnetGroupName(@Nullable Input<String> dbSubnetGroupName) {
            this.dbSubnetGroupName = dbSubnetGroupName;
            return this;
        }

        public Builder setDbSubnetGroupName(@Nullable String dbSubnetGroupName) {
            this.dbSubnetGroupName = Input.ofNullable(dbSubnetGroupName);
            return this;
        }

        public Builder setEngine(@Nullable Input<String> engine) {
            this.engine = engine;
            return this;
        }

        public Builder setEngine(@Nullable String engine) {
            this.engine = Input.ofNullable(engine);
            return this;
        }

        public Builder setEngineVersion(@Nullable Input<String> engineVersion) {
            this.engineVersion = engineVersion;
            return this;
        }

        public Builder setEngineVersion(@Nullable String engineVersion) {
            this.engineVersion = Input.ofNullable(engineVersion);
            return this;
        }

        public Builder setIdentifier(@Nullable Input<String> identifier) {
            this.identifier = identifier;
            return this;
        }

        public Builder setIdentifier(@Nullable String identifier) {
            this.identifier = Input.ofNullable(identifier);
            return this;
        }

        public Builder setIdentifierPrefix(@Nullable Input<String> identifierPrefix) {
            this.identifierPrefix = identifierPrefix;
            return this;
        }

        public Builder setIdentifierPrefix(@Nullable String identifierPrefix) {
            this.identifierPrefix = Input.ofNullable(identifierPrefix);
            return this;
        }

        public Builder setInstanceClass(Input<Either<String,InstanceType>> instanceClass) {
            this.instanceClass = Objects.requireNonNull(instanceClass);
            return this;
        }

        public Builder setInstanceClass(Either<String,InstanceType> instanceClass) {
            this.instanceClass = Input.of(Objects.requireNonNull(instanceClass));
            return this;
        }

        public Builder setMonitoringInterval(@Nullable Input<Integer> monitoringInterval) {
            this.monitoringInterval = monitoringInterval;
            return this;
        }

        public Builder setMonitoringInterval(@Nullable Integer monitoringInterval) {
            this.monitoringInterval = Input.ofNullable(monitoringInterval);
            return this;
        }

        public Builder setMonitoringRoleArn(@Nullable Input<String> monitoringRoleArn) {
            this.monitoringRoleArn = monitoringRoleArn;
            return this;
        }

        public Builder setMonitoringRoleArn(@Nullable String monitoringRoleArn) {
            this.monitoringRoleArn = Input.ofNullable(monitoringRoleArn);
            return this;
        }

        public Builder setPerformanceInsightsEnabled(@Nullable Input<Boolean> performanceInsightsEnabled) {
            this.performanceInsightsEnabled = performanceInsightsEnabled;
            return this;
        }

        public Builder setPerformanceInsightsEnabled(@Nullable Boolean performanceInsightsEnabled) {
            this.performanceInsightsEnabled = Input.ofNullable(performanceInsightsEnabled);
            return this;
        }

        public Builder setPerformanceInsightsKmsKeyId(@Nullable Input<String> performanceInsightsKmsKeyId) {
            this.performanceInsightsKmsKeyId = performanceInsightsKmsKeyId;
            return this;
        }

        public Builder setPerformanceInsightsKmsKeyId(@Nullable String performanceInsightsKmsKeyId) {
            this.performanceInsightsKmsKeyId = Input.ofNullable(performanceInsightsKmsKeyId);
            return this;
        }

        public Builder setPerformanceInsightsRetentionPeriod(@Nullable Input<Integer> performanceInsightsRetentionPeriod) {
            this.performanceInsightsRetentionPeriod = performanceInsightsRetentionPeriod;
            return this;
        }

        public Builder setPerformanceInsightsRetentionPeriod(@Nullable Integer performanceInsightsRetentionPeriod) {
            this.performanceInsightsRetentionPeriod = Input.ofNullable(performanceInsightsRetentionPeriod);
            return this;
        }

        public Builder setPreferredBackupWindow(@Nullable Input<String> preferredBackupWindow) {
            this.preferredBackupWindow = preferredBackupWindow;
            return this;
        }

        public Builder setPreferredBackupWindow(@Nullable String preferredBackupWindow) {
            this.preferredBackupWindow = Input.ofNullable(preferredBackupWindow);
            return this;
        }

        public Builder setPreferredMaintenanceWindow(@Nullable Input<String> preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = preferredMaintenanceWindow;
            return this;
        }

        public Builder setPreferredMaintenanceWindow(@Nullable String preferredMaintenanceWindow) {
            this.preferredMaintenanceWindow = Input.ofNullable(preferredMaintenanceWindow);
            return this;
        }

        public Builder setPromotionTier(@Nullable Input<Integer> promotionTier) {
            this.promotionTier = promotionTier;
            return this;
        }

        public Builder setPromotionTier(@Nullable Integer promotionTier) {
            this.promotionTier = Input.ofNullable(promotionTier);
            return this;
        }

        public Builder setPubliclyAccessible(@Nullable Input<Boolean> publiclyAccessible) {
            this.publiclyAccessible = publiclyAccessible;
            return this;
        }

        public Builder setPubliclyAccessible(@Nullable Boolean publiclyAccessible) {
            this.publiclyAccessible = Input.ofNullable(publiclyAccessible);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public ClusterInstanceArgs build() {
            return new ClusterInstanceArgs(applyImmediately, autoMinorVersionUpgrade, availabilityZone, caCertIdentifier, clusterIdentifier, copyTagsToSnapshot, dbParameterGroupName, dbSubnetGroupName, engine, engineVersion, identifier, identifierPrefix, instanceClass, monitoringInterval, monitoringRoleArn, performanceInsightsEnabled, performanceInsightsKmsKeyId, performanceInsightsRetentionPeriod, preferredBackupWindow, preferredMaintenanceWindow, promotionTier, publiclyAccessible, tags);
        }
    }
}
