// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class BucketGrant {
    /**
     * Canonical user id to grant for. Used only when `type` is `CanonicalUser`.
     * 
     */
    private final @Nullable String id;
    /**
     * List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `READ_ACP`, `WRITE_ACP`, `FULL_CONTROL`.
     * 
     */
    private final List<String> permissions;
    /**
     * - Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`. `AmazonCustomerByEmail` is not supported.
     * 
     */
    private final String type;
    /**
     * Uri address to grant for. Used only when `type` is `Group`.
     * 
     */
    private final @Nullable String uri;

    @OutputCustomType.Constructor({"id","permissions","type","uri"})
    private BucketGrant(
        @Nullable String id,
        List<String> permissions,
        String type,
        @Nullable String uri) {
        this.id = id;
        this.permissions = Objects.requireNonNull(permissions);
        this.type = Objects.requireNonNull(type);
        this.uri = uri;
    }

    /**
     * Canonical user id to grant for. Used only when `type` is `CanonicalUser`.
     * 
     */
    public Optional<String> getId() {
        return Optional.ofNullable(this.id);
    }
    /**
     * List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `READ_ACP`, `WRITE_ACP`, `FULL_CONTROL`.
     * 
     */
    public List<String> getPermissions() {
        return this.permissions;
    }
    /**
     * - Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`. `AmazonCustomerByEmail` is not supported.
     * 
     */
    public String getType() {
        return this.type;
    }
    /**
     * Uri address to grant for. Used only when `type` is `Group`.
     * 
     */
    public Optional<String> getUri() {
        return Optional.ofNullable(this.uri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketGrant defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String id;
        private List<String> permissions;
        private String type;
        private @Nullable String uri;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketGrant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.permissions = defaults.permissions;
    	      this.type = defaults.type;
    	      this.uri = defaults.uri;
        }

        public Builder setId(@Nullable String id) {
            this.id = id;
            return this;
        }

        public Builder setPermissions(List<String> permissions) {
            this.permissions = Objects.requireNonNull(permissions);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUri(@Nullable String uri) {
            this.uri = uri;
            return this;
        }
        public BucketGrant build() {
            return new BucketGrant(id, permissions, type, uri);
        }
    }
}
