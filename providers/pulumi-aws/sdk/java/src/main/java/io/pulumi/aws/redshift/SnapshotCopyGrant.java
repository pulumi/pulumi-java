// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.redshift;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.redshift.SnapshotCopyGrantArgs;
import io.pulumi.aws.redshift.inputs.SnapshotCopyGrantState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Creates a snapshot copy grant that allows AWS Redshift to encrypt copied snapshots with a customer master key from AWS KMS in a destination region.
 * 
 * Note that the grant must exist in the destination region, and not in the region of the cluster.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Redshift Snapshot Copy Grants support import by name, e.g., console
 * 
 * ```sh
 *  $ pulumi import aws:redshift/snapshotCopyGrant:SnapshotCopyGrant test my-grant
 * ```
 * 
 */
@ResourceType(type="aws:redshift/snapshotCopyGrant:SnapshotCopyGrant")
public class SnapshotCopyGrant extends io.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name (ARN) of snapshot copy grant
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of snapshot copy grant
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The unique identifier for the customer master key (CMK) that the grant applies to. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK in a different AWS account, you must use the key ARN. If not specified, the default key is used.
     * 
     */
    @Export(name="kmsKeyId", type=String.class, parameters={})
    private Output<String> kmsKeyId;

    /**
     * @return The unique identifier for the customer master key (CMK) that the grant applies to. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK in a different AWS account, you must use the key ARN. If not specified, the default key is used.
     * 
     */
    public Output<String> getKmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * A friendly name for identifying the grant.
     * 
     */
    @Export(name="snapshotCopyGrantName", type=String.class, parameters={})
    private Output<String> snapshotCopyGrantName;

    /**
     * @return A friendly name for identifying the grant.
     * 
     */
    public Output<String> getSnapshotCopyGrantName() {
        return this.snapshotCopyGrantName;
    }
    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SnapshotCopyGrant(String name) {
        this(name, SnapshotCopyGrantArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SnapshotCopyGrant(String name, SnapshotCopyGrantArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SnapshotCopyGrant(String name, SnapshotCopyGrantArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:redshift/snapshotCopyGrant:SnapshotCopyGrant", name, args == null ? SnapshotCopyGrantArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private SnapshotCopyGrant(String name, Output<String> id, @Nullable SnapshotCopyGrantState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:redshift/snapshotCopyGrant:SnapshotCopyGrant", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SnapshotCopyGrant get(String name, Output<String> id, @Nullable SnapshotCopyGrantState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new SnapshotCopyGrant(name, id, state, options);
    }
}
