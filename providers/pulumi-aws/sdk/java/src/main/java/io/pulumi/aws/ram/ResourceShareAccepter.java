// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ram;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ram.ResourceShareAccepterArgs;
import io.pulumi.aws.ram.inputs.ResourceShareAccepterState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manage accepting a Resource Access Manager (RAM) Resource Share invitation. From a _receiver_ AWS account, accept an invitation to share resources that were shared by a _sender_ AWS account. To create a resource share in the _sender_, see the `aws.ram.ResourceShare` resource.
 * 
 * > **Note:** If both AWS accounts are in the same Organization and [RAM Sharing with AWS Organizations is enabled](https://docs.aws.amazon.com/ram/latest/userguide/getting-started-sharing.html#getting-started-sharing-orgs), this resource is not necessary as RAM Resource Share invitations are not used.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * This configuration provides an example of using multiple AWS providers to configure two different AWS accounts. In the _sender_ account, the configuration creates a `aws.ram.ResourceShare` and uses a data source in the _receiver_ account to create a `aws.ram.PrincipalAssociation` resource with the _receiver's_ account ID. In the _receiver_ account, the configuration accepts the invitation to share resources with the `aws.ram.ResourceShareAccepter`.
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const alternate = new aws.Provider("alternate", {profile: "profile1"});
 * const senderShare = new aws.ram.ResourceShare("senderShare", {
 *     allowExternalPrincipals: true,
 *     tags: {
 *         Name: "tf-test-resource-share",
 *     },
 * }, {
 *     provider: aws.alternate,
 * });
 * const receiver = aws.getCallerIdentity({});
 * const senderInvite = new aws.ram.PrincipalAssociation("senderInvite", {
 *     principal: receiver.then(receiver => receiver.accountId),
 *     resourceShareArn: senderShare.arn,
 * }, {
 *     provider: aws.alternate,
 * });
 * const receiverAccept = new aws.ram.ResourceShareAccepter("receiverAccept", {shareArn: senderInvite.resourceShareArn});
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * import pulumi_pulumi as pulumi
 * 
 * alternate = pulumi.providers.Aws("alternate", profile="profile1")
 * sender_share = aws.ram.ResourceShare("senderShare",
 *     allow_external_principals=True,
 *     tags={
 *         "Name": "tf-test-resource-share",
 *     },
 *     opts=pulumi.ResourceOptions(provider=aws["alternate"]))
 * receiver = aws.get_caller_identity()
 * sender_invite = aws.ram.PrincipalAssociation("senderInvite",
 *     principal=receiver.account_id,
 *     resource_share_arn=sender_share.arn,
 *     opts=pulumi.ResourceOptions(provider=aws["alternate"]))
 * receiver_accept = aws.ram.ResourceShareAccepter("receiverAccept", share_arn=sender_invite.resource_share_arn)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var alternate = new Aws.Provider("alternate", new Aws.ProviderArgs
 *         {
 *             Profile = "profile1",
 *         });
 *         var senderShare = new Aws.Ram.ResourceShare("senderShare", new Aws.Ram.ResourceShareArgs
 *         {
 *             AllowExternalPrincipals = true,
 *             Tags = 
 *             {
 *                 { "Name", "tf-test-resource-share" },
 *             },
 *         }, new CustomResourceOptions
 *         {
 *             Provider = aws.Alternate,
 *         });
 *         var receiver = Output.Create(Aws.GetCallerIdentity.InvokeAsync());
 *         var senderInvite = new Aws.Ram.PrincipalAssociation("senderInvite", new Aws.Ram.PrincipalAssociationArgs
 *         {
 *             Principal = receiver.Apply(receiver => receiver.AccountId),
 *             ResourceShareArn = senderShare.Arn,
 *         }, new CustomResourceOptions
 *         {
 *             Provider = aws.Alternate,
 *         });
 *         var receiverAccept = new Aws.Ram.ResourceShareAccepter("receiverAccept", new Aws.Ram.ResourceShareAccepterArgs
 *         {
 *             ShareArn = senderInvite.ResourceShareArn,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/providers"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ram"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := providers.Newaws(ctx, "alternate", &providers.awsArgs{
 * 			Profile: "profile1",
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		senderShare, err := ram.NewResourceShare(ctx, "senderShare", &ram.ResourceShareArgs{
 * 			AllowExternalPrincipals: pulumi.Bool(true),
 * 			Tags: pulumi.StringMap{
 * 				"Name": pulumi.String("tf-test-resource-share"),
 * 			},
 * 		}, pulumi.Provider(aws.Alternate))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		receiver, err := aws.GetCallerIdentity(ctx, nil, nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		senderInvite, err := ram.NewPrincipalAssociation(ctx, "senderInvite", &ram.PrincipalAssociationArgs{
 * 			Principal:        pulumi.String(receiver.AccountId),
 * 			ResourceShareArn: senderShare.Arn,
 * 		}, pulumi.Provider(aws.Alternate))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = ram.NewResourceShareAccepter(ctx, "receiverAccept", &ram.ResourceShareAccepterArgs{
 * 			ShareArn: senderInvite.ResourceShareArn,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Resource share accepters can be imported using the resource share ARN, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:ram/resourceShareAccepter:ResourceShareAccepter example arn:aws:ram:us-east-1:123456789012:resource-share/c4b56393-e8d9-89d9-6dc9-883752de4767
 * ```
 * 
 *  
 */
@ResourceType(type="aws:ram/resourceShareAccepter:ResourceShareAccepter")
public class ResourceShareAccepter extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the resource share invitation.
     * 
     */
    @Export(name="invitationArn", type=String.class, parameters={})
    private Output<String> invitationArn;

    /**
     * @return The ARN of the resource share invitation.
     * 
     */
    public Output<String> getInvitationArn() {
        return this.invitationArn;
    }
    /**
     * The account ID of the receiver account which accepts the invitation.
     * 
     */
    @Export(name="receiverAccountId", type=String.class, parameters={})
    private Output<String> receiverAccountId;

    /**
     * @return The account ID of the receiver account which accepts the invitation.
     * 
     */
    public Output<String> getReceiverAccountId() {
        return this.receiverAccountId;
    }
    /**
     * A list of the resource ARNs shared via the resource share.
     * 
     */
    @Export(name="resources", type=List.class, parameters={String.class})
    private Output<List<String>> resources;

    /**
     * @return A list of the resource ARNs shared via the resource share.
     * 
     */
    public Output<List<String>> getResources() {
        return this.resources;
    }
    /**
     * The account ID of the sender account which submits the invitation.
     * 
     */
    @Export(name="senderAccountId", type=String.class, parameters={})
    private Output<String> senderAccountId;

    /**
     * @return The account ID of the sender account which submits the invitation.
     * 
     */
    public Output<String> getSenderAccountId() {
        return this.senderAccountId;
    }
    /**
     * The ARN of the resource share.
     * 
     */
    @Export(name="shareArn", type=String.class, parameters={})
    private Output<String> shareArn;

    /**
     * @return The ARN of the resource share.
     * 
     */
    public Output<String> getShareArn() {
        return this.shareArn;
    }
    /**
     * The ID of the resource share as displayed in the console.
     * 
     */
    @Export(name="shareId", type=String.class, parameters={})
    private Output<String> shareId;

    /**
     * @return The ID of the resource share as displayed in the console.
     * 
     */
    public Output<String> getShareId() {
        return this.shareId;
    }
    /**
     * The name of the resource share.
     * 
     */
    @Export(name="shareName", type=String.class, parameters={})
    private Output<String> shareName;

    /**
     * @return The name of the resource share.
     * 
     */
    public Output<String> getShareName() {
        return this.shareName;
    }
    /**
     * The status of the resource share (ACTIVE, PENDING, FAILED, DELETING, DELETED).
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The status of the resource share (ACTIVE, PENDING, FAILED, DELETING, DELETED).
     * 
     */
    public Output<String> getStatus() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ResourceShareAccepter(String name) {
        this(name, ResourceShareAccepterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ResourceShareAccepter(String name, ResourceShareAccepterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ResourceShareAccepter(String name, ResourceShareAccepterArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ram/resourceShareAccepter:ResourceShareAccepter", name, args == null ? ResourceShareAccepterArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ResourceShareAccepter(String name, Output<String> id, @Nullable ResourceShareAccepterState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:ram/resourceShareAccepter:ResourceShareAccepter", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ResourceShareAccepter get(String name, Output<String> id, @Nullable ResourceShareAccepterState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ResourceShareAccepter(name, id, state, options);
    }
}
