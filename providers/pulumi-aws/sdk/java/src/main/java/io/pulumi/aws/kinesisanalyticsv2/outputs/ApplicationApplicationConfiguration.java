// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.kinesisanalyticsv2.outputs;

import io.pulumi.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationApplicationCodeConfiguration;
import io.pulumi.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationApplicationSnapshotConfiguration;
import io.pulumi.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationEnvironmentProperties;
import io.pulumi.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationFlinkApplicationConfiguration;
import io.pulumi.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationRunConfiguration;
import io.pulumi.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationSqlApplicationConfiguration;
import io.pulumi.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationVpcConfiguration;
import io.pulumi.core.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ApplicationApplicationConfiguration {
    /**
     * The code location and type parameters for the application.
     * 
     */
    private final ApplicationApplicationConfigurationApplicationCodeConfiguration applicationCodeConfiguration;
    /**
     * Describes whether snapshots are enabled for a Flink-based application.
     * 
     */
    private final @Nullable ApplicationApplicationConfigurationApplicationSnapshotConfiguration applicationSnapshotConfiguration;
    /**
     * Describes execution properties for a Flink-based application.
     * 
     */
    private final @Nullable ApplicationApplicationConfigurationEnvironmentProperties environmentProperties;
    /**
     * The configuration of a Flink-based application.
     * 
     */
    private final @Nullable ApplicationApplicationConfigurationFlinkApplicationConfiguration flinkApplicationConfiguration;
    /**
     * Describes the starting properties for a Flink-based application.
     * 
     */
    private final @Nullable ApplicationApplicationConfigurationRunConfiguration runConfiguration;
    /**
     * The configuration of a SQL-based application.
     * 
     */
    private final @Nullable ApplicationApplicationConfigurationSqlApplicationConfiguration sqlApplicationConfiguration;
    /**
     * The VPC configuration of a Flink-based application.
     * 
     */
    private final @Nullable ApplicationApplicationConfigurationVpcConfiguration vpcConfiguration;

    @OutputCustomType.Constructor
    private ApplicationApplicationConfiguration(
        @OutputCustomType.Parameter("applicationCodeConfiguration") ApplicationApplicationConfigurationApplicationCodeConfiguration applicationCodeConfiguration,
        @OutputCustomType.Parameter("applicationSnapshotConfiguration") @Nullable ApplicationApplicationConfigurationApplicationSnapshotConfiguration applicationSnapshotConfiguration,
        @OutputCustomType.Parameter("environmentProperties") @Nullable ApplicationApplicationConfigurationEnvironmentProperties environmentProperties,
        @OutputCustomType.Parameter("flinkApplicationConfiguration") @Nullable ApplicationApplicationConfigurationFlinkApplicationConfiguration flinkApplicationConfiguration,
        @OutputCustomType.Parameter("runConfiguration") @Nullable ApplicationApplicationConfigurationRunConfiguration runConfiguration,
        @OutputCustomType.Parameter("sqlApplicationConfiguration") @Nullable ApplicationApplicationConfigurationSqlApplicationConfiguration sqlApplicationConfiguration,
        @OutputCustomType.Parameter("vpcConfiguration") @Nullable ApplicationApplicationConfigurationVpcConfiguration vpcConfiguration) {
        this.applicationCodeConfiguration = applicationCodeConfiguration;
        this.applicationSnapshotConfiguration = applicationSnapshotConfiguration;
        this.environmentProperties = environmentProperties;
        this.flinkApplicationConfiguration = flinkApplicationConfiguration;
        this.runConfiguration = runConfiguration;
        this.sqlApplicationConfiguration = sqlApplicationConfiguration;
        this.vpcConfiguration = vpcConfiguration;
    }

    /**
     * The code location and type parameters for the application.
     * 
    */
    public ApplicationApplicationConfigurationApplicationCodeConfiguration getApplicationCodeConfiguration() {
        return this.applicationCodeConfiguration;
    }
    /**
     * Describes whether snapshots are enabled for a Flink-based application.
     * 
    */
    public Optional<ApplicationApplicationConfigurationApplicationSnapshotConfiguration> getApplicationSnapshotConfiguration() {
        return Optional.ofNullable(this.applicationSnapshotConfiguration);
    }
    /**
     * Describes execution properties for a Flink-based application.
     * 
    */
    public Optional<ApplicationApplicationConfigurationEnvironmentProperties> getEnvironmentProperties() {
        return Optional.ofNullable(this.environmentProperties);
    }
    /**
     * The configuration of a Flink-based application.
     * 
    */
    public Optional<ApplicationApplicationConfigurationFlinkApplicationConfiguration> getFlinkApplicationConfiguration() {
        return Optional.ofNullable(this.flinkApplicationConfiguration);
    }
    /**
     * Describes the starting properties for a Flink-based application.
     * 
    */
    public Optional<ApplicationApplicationConfigurationRunConfiguration> getRunConfiguration() {
        return Optional.ofNullable(this.runConfiguration);
    }
    /**
     * The configuration of a SQL-based application.
     * 
    */
    public Optional<ApplicationApplicationConfigurationSqlApplicationConfiguration> getSqlApplicationConfiguration() {
        return Optional.ofNullable(this.sqlApplicationConfiguration);
    }
    /**
     * The VPC configuration of a Flink-based application.
     * 
    */
    public Optional<ApplicationApplicationConfigurationVpcConfiguration> getVpcConfiguration() {
        return Optional.ofNullable(this.vpcConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationApplicationConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationApplicationConfigurationApplicationCodeConfiguration applicationCodeConfiguration;
        private @Nullable ApplicationApplicationConfigurationApplicationSnapshotConfiguration applicationSnapshotConfiguration;
        private @Nullable ApplicationApplicationConfigurationEnvironmentProperties environmentProperties;
        private @Nullable ApplicationApplicationConfigurationFlinkApplicationConfiguration flinkApplicationConfiguration;
        private @Nullable ApplicationApplicationConfigurationRunConfiguration runConfiguration;
        private @Nullable ApplicationApplicationConfigurationSqlApplicationConfiguration sqlApplicationConfiguration;
        private @Nullable ApplicationApplicationConfigurationVpcConfiguration vpcConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationApplicationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationCodeConfiguration = defaults.applicationCodeConfiguration;
    	      this.applicationSnapshotConfiguration = defaults.applicationSnapshotConfiguration;
    	      this.environmentProperties = defaults.environmentProperties;
    	      this.flinkApplicationConfiguration = defaults.flinkApplicationConfiguration;
    	      this.runConfiguration = defaults.runConfiguration;
    	      this.sqlApplicationConfiguration = defaults.sqlApplicationConfiguration;
    	      this.vpcConfiguration = defaults.vpcConfiguration;
        }

        public Builder setApplicationCodeConfiguration(ApplicationApplicationConfigurationApplicationCodeConfiguration applicationCodeConfiguration) {
            this.applicationCodeConfiguration = Objects.requireNonNull(applicationCodeConfiguration);
            return this;
        }

        public Builder setApplicationSnapshotConfiguration(@Nullable ApplicationApplicationConfigurationApplicationSnapshotConfiguration applicationSnapshotConfiguration) {
            this.applicationSnapshotConfiguration = applicationSnapshotConfiguration;
            return this;
        }

        public Builder setEnvironmentProperties(@Nullable ApplicationApplicationConfigurationEnvironmentProperties environmentProperties) {
            this.environmentProperties = environmentProperties;
            return this;
        }

        public Builder setFlinkApplicationConfiguration(@Nullable ApplicationApplicationConfigurationFlinkApplicationConfiguration flinkApplicationConfiguration) {
            this.flinkApplicationConfiguration = flinkApplicationConfiguration;
            return this;
        }

        public Builder setRunConfiguration(@Nullable ApplicationApplicationConfigurationRunConfiguration runConfiguration) {
            this.runConfiguration = runConfiguration;
            return this;
        }

        public Builder setSqlApplicationConfiguration(@Nullable ApplicationApplicationConfigurationSqlApplicationConfiguration sqlApplicationConfiguration) {
            this.sqlApplicationConfiguration = sqlApplicationConfiguration;
            return this;
        }

        public Builder setVpcConfiguration(@Nullable ApplicationApplicationConfigurationVpcConfiguration vpcConfiguration) {
            this.vpcConfiguration = vpcConfiguration;
            return this;
        }
        public ApplicationApplicationConfiguration build() {
            return new ApplicationApplicationConfiguration(applicationCodeConfiguration, applicationSnapshotConfiguration, environmentProperties, flinkApplicationConfiguration, runConfiguration, sqlApplicationConfiguration, vpcConfiguration);
        }
    }
}
