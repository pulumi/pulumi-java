// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3;

import io.pulumi.aws.s3.inputs.AnalyticsConfigurationFilterArgs;
import io.pulumi.aws.s3.inputs.AnalyticsConfigurationStorageClassAnalysisArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AnalyticsConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AnalyticsConfigurationArgs Empty = new AnalyticsConfigurationArgs();

    /**
     * The name of the bucket this analytics configuration is associated with.
     * 
     */
    @InputImport(name="bucket", required=true)
      private final Output<String> bucket;

    public Output<String> getBucket() {
        return this.bucket;
    }

    /**
     * Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).
     * 
     */
    @InputImport(name="filter")
      private final @Nullable Output<AnalyticsConfigurationFilterArgs> filter;

    public Output<AnalyticsConfigurationFilterArgs> getFilter() {
        return this.filter == null ? Output.empty() : this.filter;
    }

    /**
     * Unique identifier of the analytics configuration for the bucket.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Configuration for the analytics data export (documented below).
     * 
     */
    @InputImport(name="storageClassAnalysis")
      private final @Nullable Output<AnalyticsConfigurationStorageClassAnalysisArgs> storageClassAnalysis;

    public Output<AnalyticsConfigurationStorageClassAnalysisArgs> getStorageClassAnalysis() {
        return this.storageClassAnalysis == null ? Output.empty() : this.storageClassAnalysis;
    }

    public AnalyticsConfigurationArgs(
        Output<String> bucket,
        @Nullable Output<AnalyticsConfigurationFilterArgs> filter,
        @Nullable Output<String> name,
        @Nullable Output<AnalyticsConfigurationStorageClassAnalysisArgs> storageClassAnalysis) {
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.filter = filter;
        this.name = name;
        this.storageClassAnalysis = storageClassAnalysis;
    }

    private AnalyticsConfigurationArgs() {
        this.bucket = Output.empty();
        this.filter = Output.empty();
        this.name = Output.empty();
        this.storageClassAnalysis = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnalyticsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> bucket;
        private @Nullable Output<AnalyticsConfigurationFilterArgs> filter;
        private @Nullable Output<String> name;
        private @Nullable Output<AnalyticsConfigurationStorageClassAnalysisArgs> storageClassAnalysis;

        public Builder() {
    	      // Empty
        }

        public Builder(AnalyticsConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.filter = defaults.filter;
    	      this.name = defaults.name;
    	      this.storageClassAnalysis = defaults.storageClassAnalysis;
        }

        public Builder bucket(Output<String> bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }

        public Builder bucket(String bucket) {
            this.bucket = Output.of(Objects.requireNonNull(bucket));
            return this;
        }

        public Builder filter(@Nullable Output<AnalyticsConfigurationFilterArgs> filter) {
            this.filter = filter;
            return this;
        }

        public Builder filter(@Nullable AnalyticsConfigurationFilterArgs filter) {
            this.filter = Output.ofNullable(filter);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder storageClassAnalysis(@Nullable Output<AnalyticsConfigurationStorageClassAnalysisArgs> storageClassAnalysis) {
            this.storageClassAnalysis = storageClassAnalysis;
            return this;
        }

        public Builder storageClassAnalysis(@Nullable AnalyticsConfigurationStorageClassAnalysisArgs storageClassAnalysis) {
            this.storageClassAnalysis = Output.ofNullable(storageClassAnalysis);
            return this;
        }
        public AnalyticsConfigurationArgs build() {
            return new AnalyticsConfigurationArgs(bucket, filter, name, storageClassAnalysis);
        }
    }
}
