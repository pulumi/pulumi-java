// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.servicediscovery;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.servicediscovery.ServiceArgs;
import io.pulumi.aws.servicediscovery.inputs.ServiceState;
import io.pulumi.aws.servicediscovery.outputs.ServiceDnsConfig;
import io.pulumi.aws.servicediscovery.outputs.ServiceHealthCheckConfig;
import io.pulumi.aws.servicediscovery.outputs.ServiceHealthCheckCustomConfig;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a Service Discovery Service resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleVpc = new aws.ec2.Vpc("exampleVpc", {
 *     cidrBlock: "10.0.0.0/16",
 *     enableDnsSupport: true,
 *     enableDnsHostnames: true,
 * });
 * const examplePrivateDnsNamespace = new aws.servicediscovery.PrivateDnsNamespace("examplePrivateDnsNamespace", {
 *     description: "example",
 *     vpc: exampleVpc.id,
 * });
 * const exampleService = new aws.servicediscovery.Service("exampleService", {
 *     dnsConfig: {
 *         namespaceId: examplePrivateDnsNamespace.id,
 *         dnsRecords: [{
 *             ttl: 10,
 *             type: "A",
 *         }],
 *         routingPolicy: "MULTIVALUE",
 *     },
 *     healthCheckCustomConfig: {
 *         failureThreshold: 1,
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_vpc = aws.ec2.Vpc("exampleVpc",
 *     cidr_block="10.0.0.0/16",
 *     enable_dns_support=True,
 *     enable_dns_hostnames=True)
 * example_private_dns_namespace = aws.servicediscovery.PrivateDnsNamespace("examplePrivateDnsNamespace",
 *     description="example",
 *     vpc=example_vpc.id)
 * example_service = aws.servicediscovery.Service("exampleService",
 *     dns_config=aws.servicediscovery.ServiceDnsConfigArgs(
 *         namespace_id=example_private_dns_namespace.id,
 *         dns_records=[aws.servicediscovery.ServiceDnsConfigDnsRecordArgs(
 *             ttl=10,
 *             type="A",
 *         )],
 *         routing_policy="MULTIVALUE",
 *     ),
 *     health_check_custom_config=aws.servicediscovery.ServiceHealthCheckCustomConfigArgs(
 *         failure_threshold=1,
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleVpc = new Aws.Ec2.Vpc("exampleVpc", new Aws.Ec2.VpcArgs
 *         {
 *             CidrBlock = "10.0.0.0/16",
 *             EnableDnsSupport = true,
 *             EnableDnsHostnames = true,
 *         });
 *         var examplePrivateDnsNamespace = new Aws.ServiceDiscovery.PrivateDnsNamespace("examplePrivateDnsNamespace", new Aws.ServiceDiscovery.PrivateDnsNamespaceArgs
 *         {
 *             Description = "example",
 *             Vpc = exampleVpc.Id,
 *         });
 *         var exampleService = new Aws.ServiceDiscovery.Service("exampleService", new Aws.ServiceDiscovery.ServiceArgs
 *         {
 *             DnsConfig = new Aws.ServiceDiscovery.Inputs.ServiceDnsConfigArgs
 *             {
 *                 NamespaceId = examplePrivateDnsNamespace.Id,
 *                 DnsRecords = 
 *                 {
 *                     new Aws.ServiceDiscovery.Inputs.ServiceDnsConfigDnsRecordArgs
 *                     {
 *                         Ttl = 10,
 *                         Type = "A",
 *                     },
 *                 },
 *                 RoutingPolicy = "MULTIVALUE",
 *             },
 *             HealthCheckCustomConfig = new Aws.ServiceDiscovery.Inputs.ServiceHealthCheckCustomConfigArgs
 *             {
 *                 FailureThreshold = 1,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/servicediscovery"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleVpc, err := ec2.NewVpc(ctx, "exampleVpc", &ec2.VpcArgs{
 * 			CidrBlock:          pulumi.String("10.0.0.0/16"),
 * 			EnableDnsSupport:   pulumi.Bool(true),
 * 			EnableDnsHostnames: pulumi.Bool(true),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		examplePrivateDnsNamespace, err := servicediscovery.NewPrivateDnsNamespace(ctx, "examplePrivateDnsNamespace", &servicediscovery.PrivateDnsNamespaceArgs{
 * 			Description: pulumi.String("example"),
 * 			Vpc:         exampleVpc.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = servicediscovery.NewService(ctx, "exampleService", &servicediscovery.ServiceArgs{
 * 			DnsConfig: &servicediscovery.ServiceDnsConfigArgs{
 * 				NamespaceId: examplePrivateDnsNamespace.ID(),
 * 				DnsRecords: servicediscovery.ServiceDnsConfigDnsRecordArray{
 * 					&servicediscovery.ServiceDnsConfigDnsRecordArgs{
 * 						Ttl:  pulumi.Int(10),
 * 						Type: pulumi.String("A"),
 * 					},
 * 				},
 * 				RoutingPolicy: pulumi.String("MULTIVALUE"),
 * 			},
 * 			HealthCheckCustomConfig: &servicediscovery.ServiceHealthCheckCustomConfigArgs{
 * 				FailureThreshold: pulumi.Int(1),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const examplePublicDnsNamespace = new aws.servicediscovery.PublicDnsNamespace("examplePublicDnsNamespace", {description: "example"});
 * const exampleService = new aws.servicediscovery.Service("exampleService", {
 *     dnsConfig: {
 *         namespaceId: examplePublicDnsNamespace.id,
 *         dnsRecords: [{
 *             ttl: 10,
 *             type: "A",
 *         }],
 *     },
 *     healthCheckConfig: {
 *         failureThreshold: 10,
 *         resourcePath: "path",
 *         type: "HTTP",
 *     },
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_public_dns_namespace = aws.servicediscovery.PublicDnsNamespace("examplePublicDnsNamespace", description="example")
 * example_service = aws.servicediscovery.Service("exampleService",
 *     dns_config=aws.servicediscovery.ServiceDnsConfigArgs(
 *         namespace_id=example_public_dns_namespace.id,
 *         dns_records=[aws.servicediscovery.ServiceDnsConfigDnsRecordArgs(
 *             ttl=10,
 *             type="A",
 *         )],
 *     ),
 *     health_check_config=aws.servicediscovery.ServiceHealthCheckConfigArgs(
 *         failure_threshold=10,
 *         resource_path="path",
 *         type="HTTP",
 *     ))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var examplePublicDnsNamespace = new Aws.ServiceDiscovery.PublicDnsNamespace("examplePublicDnsNamespace", new Aws.ServiceDiscovery.PublicDnsNamespaceArgs
 *         {
 *             Description = "example",
 *         });
 *         var exampleService = new Aws.ServiceDiscovery.Service("exampleService", new Aws.ServiceDiscovery.ServiceArgs
 *         {
 *             DnsConfig = new Aws.ServiceDiscovery.Inputs.ServiceDnsConfigArgs
 *             {
 *                 NamespaceId = examplePublicDnsNamespace.Id,
 *                 DnsRecords = 
 *                 {
 *                     new Aws.ServiceDiscovery.Inputs.ServiceDnsConfigDnsRecordArgs
 *                     {
 *                         Ttl = 10,
 *                         Type = "A",
 *                     },
 *                 },
 *             },
 *             HealthCheckConfig = new Aws.ServiceDiscovery.Inputs.ServiceHealthCheckConfigArgs
 *             {
 *                 FailureThreshold = 10,
 *                 ResourcePath = "path",
 *                 Type = "HTTP",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/servicediscovery"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		examplePublicDnsNamespace, err := servicediscovery.NewPublicDnsNamespace(ctx, "examplePublicDnsNamespace", &servicediscovery.PublicDnsNamespaceArgs{
 * 			Description: pulumi.String("example"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = servicediscovery.NewService(ctx, "exampleService", &servicediscovery.ServiceArgs{
 * 			DnsConfig: &servicediscovery.ServiceDnsConfigArgs{
 * 				NamespaceId: examplePublicDnsNamespace.ID(),
 * 				DnsRecords: servicediscovery.ServiceDnsConfigDnsRecordArray{
 * 					&servicediscovery.ServiceDnsConfigDnsRecordArgs{
 * 						Ttl:  pulumi.Int(10),
 * 						Type: pulumi.String("A"),
 * 					},
 * 				},
 * 			},
 * 			HealthCheckConfig: &servicediscovery.ServiceHealthCheckConfigArgs{
 * 				FailureThreshold: pulumi.Int(10),
 * 				ResourcePath:     pulumi.String("path"),
 * 				Type:             pulumi.String("HTTP"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Service Discovery Service can be imported using the service ID, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:servicediscovery/service:Service example 0123456789
 * ```
 * 
 *  
 */
@ResourceType(type="aws:servicediscovery/service:Service")
public class Service extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the service.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the service.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The description of the service.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the service.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance.
     * 
     */
    @Export(name="dnsConfig", type=ServiceDnsConfig.class, parameters={})
    private Output</* @Nullable */ ServiceDnsConfig> dnsConfig;

    /**
     * @return A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance.
     * 
     */
    public Output</* @Nullable */ ServiceDnsConfig> getDnsConfig() {
        return this.dnsConfig;
    }
    /**
     * A boolean that indicates all instances should be deleted from the service so that the service can be destroyed without error. These instances are not recoverable.
     * 
     */
    @Export(name="forceDestroy", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> forceDestroy;

    /**
     * @return A boolean that indicates all instances should be deleted from the service so that the service can be destroyed without error. These instances are not recoverable.
     * 
     */
    public Output</* @Nullable */ Boolean> getForceDestroy() {
        return this.forceDestroy;
    }
    /**
     * A complex type that contains settings for an optional health check. Only for Public DNS namespaces.
     * 
     */
    @Export(name="healthCheckConfig", type=ServiceHealthCheckConfig.class, parameters={})
    private Output</* @Nullable */ ServiceHealthCheckConfig> healthCheckConfig;

    /**
     * @return A complex type that contains settings for an optional health check. Only for Public DNS namespaces.
     * 
     */
    public Output</* @Nullable */ ServiceHealthCheckConfig> getHealthCheckConfig() {
        return this.healthCheckConfig;
    }
    /**
     * A complex type that contains settings for ECS managed health checks.
     * 
     */
    @Export(name="healthCheckCustomConfig", type=ServiceHealthCheckCustomConfig.class, parameters={})
    private Output</* @Nullable */ ServiceHealthCheckCustomConfig> healthCheckCustomConfig;

    /**
     * @return A complex type that contains settings for ECS managed health checks.
     * 
     */
    public Output</* @Nullable */ ServiceHealthCheckCustomConfig> getHealthCheckCustomConfig() {
        return this.healthCheckCustomConfig;
    }
    /**
     * The name of the service.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the service.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the namespace to use for DNS configuration.
     * 
     */
    @Export(name="namespaceId", type=String.class, parameters={})
    private Output<String> namespaceId;

    /**
     * @return The ID of the namespace to use for DNS configuration.
     * 
     */
    public Output<String> getNamespaceId() {
        return this.namespaceId;
    }
    /**
     * A map of tags to assign to the service. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the service. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Export(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Service(String name) {
        this(name, ServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Service(String name, @Nullable ServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Service(String name, @Nullable ServiceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:servicediscovery/service:Service", name, args == null ? ServiceArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Service(String name, Output<String> id, @Nullable ServiceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:servicediscovery/service:Service", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Service get(String name, Output<String> id, @Nullable ServiceState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Service(name, id, state, options);
    }
}
