// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.ec2.inputs.AmiFromInstanceEbsBlockDeviceArgs;
import io.pulumi.aws.ec2.inputs.AmiFromInstanceEphemeralBlockDeviceArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AmiFromInstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final AmiFromInstanceArgs Empty = new AmiFromInstanceArgs();

    /**
     * A longer, human-readable description for the AMI.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     * 
     */
    @Import(name="ebsBlockDevices")
      private final @Nullable Output<List<AmiFromInstanceEbsBlockDeviceArgs>> ebsBlockDevices;

    public Output<List<AmiFromInstanceEbsBlockDeviceArgs>> ebsBlockDevices() {
        return this.ebsBlockDevices == null ? Codegen.empty() : this.ebsBlockDevices;
    }

    /**
     * Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     * 
     */
    @Import(name="ephemeralBlockDevices")
      private final @Nullable Output<List<AmiFromInstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public Output<List<AmiFromInstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices() {
        return this.ephemeralBlockDevices == null ? Codegen.empty() : this.ephemeralBlockDevices;
    }

    /**
     * A region-unique name for the AMI.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Boolean that overrides the behavior of stopping
     * the instance before snapshotting. This is risky since it may cause a snapshot of an
     * inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
     * guarantees that no filesystem writes will be underway at the time of snapshot.
     * 
     */
    @Import(name="snapshotWithoutReboot")
      private final @Nullable Output<Boolean> snapshotWithoutReboot;

    public Output<Boolean> snapshotWithoutReboot() {
        return this.snapshotWithoutReboot == null ? Codegen.empty() : this.snapshotWithoutReboot;
    }

    /**
     * The id of the instance to use as the basis of the AMI.
     * 
     */
    @Import(name="sourceInstanceId", required=true)
      private final Output<String> sourceInstanceId;

    public Output<String> sourceInstanceId() {
        return this.sourceInstanceId;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public AmiFromInstanceArgs(
        @Nullable Output<String> description,
        @Nullable Output<List<AmiFromInstanceEbsBlockDeviceArgs>> ebsBlockDevices,
        @Nullable Output<List<AmiFromInstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices,
        @Nullable Output<String> name,
        @Nullable Output<Boolean> snapshotWithoutReboot,
        Output<String> sourceInstanceId,
        @Nullable Output<Map<String,String>> tags) {
        this.description = description;
        this.ebsBlockDevices = ebsBlockDevices;
        this.ephemeralBlockDevices = ephemeralBlockDevices;
        this.name = name;
        this.snapshotWithoutReboot = snapshotWithoutReboot;
        this.sourceInstanceId = Objects.requireNonNull(sourceInstanceId, "expected parameter 'sourceInstanceId' to be non-null");
        this.tags = tags;
    }

    private AmiFromInstanceArgs() {
        this.description = Codegen.empty();
        this.ebsBlockDevices = Codegen.empty();
        this.ephemeralBlockDevices = Codegen.empty();
        this.name = Codegen.empty();
        this.snapshotWithoutReboot = Codegen.empty();
        this.sourceInstanceId = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AmiFromInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<List<AmiFromInstanceEbsBlockDeviceArgs>> ebsBlockDevices;
        private @Nullable Output<List<AmiFromInstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices;
        private @Nullable Output<String> name;
        private @Nullable Output<Boolean> snapshotWithoutReboot;
        private Output<String> sourceInstanceId;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(AmiFromInstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.ebsBlockDevices = defaults.ebsBlockDevices;
    	      this.ephemeralBlockDevices = defaults.ephemeralBlockDevices;
    	      this.name = defaults.name;
    	      this.snapshotWithoutReboot = defaults.snapshotWithoutReboot;
    	      this.sourceInstanceId = defaults.sourceInstanceId;
    	      this.tags = defaults.tags;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder ebsBlockDevices(@Nullable Output<List<AmiFromInstanceEbsBlockDeviceArgs>> ebsBlockDevices) {
            this.ebsBlockDevices = ebsBlockDevices;
            return this;
        }
        public Builder ebsBlockDevices(@Nullable List<AmiFromInstanceEbsBlockDeviceArgs> ebsBlockDevices) {
            this.ebsBlockDevices = Codegen.ofNullable(ebsBlockDevices);
            return this;
        }
        public Builder ebsBlockDevices(AmiFromInstanceEbsBlockDeviceArgs... ebsBlockDevices) {
            return ebsBlockDevices(List.of(ebsBlockDevices));
        }
        public Builder ephemeralBlockDevices(@Nullable Output<List<AmiFromInstanceEphemeralBlockDeviceArgs>> ephemeralBlockDevices) {
            this.ephemeralBlockDevices = ephemeralBlockDevices;
            return this;
        }
        public Builder ephemeralBlockDevices(@Nullable List<AmiFromInstanceEphemeralBlockDeviceArgs> ephemeralBlockDevices) {
            this.ephemeralBlockDevices = Codegen.ofNullable(ephemeralBlockDevices);
            return this;
        }
        public Builder ephemeralBlockDevices(AmiFromInstanceEphemeralBlockDeviceArgs... ephemeralBlockDevices) {
            return ephemeralBlockDevices(List.of(ephemeralBlockDevices));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder snapshotWithoutReboot(@Nullable Output<Boolean> snapshotWithoutReboot) {
            this.snapshotWithoutReboot = snapshotWithoutReboot;
            return this;
        }
        public Builder snapshotWithoutReboot(@Nullable Boolean snapshotWithoutReboot) {
            this.snapshotWithoutReboot = Codegen.ofNullable(snapshotWithoutReboot);
            return this;
        }
        public Builder sourceInstanceId(Output<String> sourceInstanceId) {
            this.sourceInstanceId = Objects.requireNonNull(sourceInstanceId);
            return this;
        }
        public Builder sourceInstanceId(String sourceInstanceId) {
            this.sourceInstanceId = Output.of(Objects.requireNonNull(sourceInstanceId));
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public AmiFromInstanceArgs build() {
            return new AmiFromInstanceArgs(description, ebsBlockDevices, ephemeralBlockDevices, name, snapshotWithoutReboot, sourceInstanceId, tags);
        }
    }
}
