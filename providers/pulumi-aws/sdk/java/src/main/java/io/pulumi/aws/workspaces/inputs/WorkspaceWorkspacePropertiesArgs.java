// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.workspaces.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WorkspaceWorkspacePropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final WorkspaceWorkspacePropertiesArgs Empty = new WorkspaceWorkspacePropertiesArgs();

    /**
     * The compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO` and `GRAPHICSPRO`.
     * 
     */
    @InputImport(name="computeTypeName")
      private final @Nullable Input<String> computeTypeName;

    public Input<String> getComputeTypeName() {
        return this.computeTypeName == null ? Input.empty() : this.computeTypeName;
    }

    /**
     * The size of the root volume.
     * 
     */
    @InputImport(name="rootVolumeSizeGib")
      private final @Nullable Input<Integer> rootVolumeSizeGib;

    public Input<Integer> getRootVolumeSizeGib() {
        return this.rootVolumeSizeGib == null ? Input.empty() : this.rootVolumeSizeGib;
    }

    /**
     * The running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
     * 
     */
    @InputImport(name="runningMode")
      private final @Nullable Input<String> runningMode;

    public Input<String> getRunningMode() {
        return this.runningMode == null ? Input.empty() : this.runningMode;
    }

    /**
     * The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
     * 
     */
    @InputImport(name="runningModeAutoStopTimeoutInMinutes")
      private final @Nullable Input<Integer> runningModeAutoStopTimeoutInMinutes;

    public Input<Integer> getRunningModeAutoStopTimeoutInMinutes() {
        return this.runningModeAutoStopTimeoutInMinutes == null ? Input.empty() : this.runningModeAutoStopTimeoutInMinutes;
    }

    /**
     * The size of the user storage.
     * 
     */
    @InputImport(name="userVolumeSizeGib")
      private final @Nullable Input<Integer> userVolumeSizeGib;

    public Input<Integer> getUserVolumeSizeGib() {
        return this.userVolumeSizeGib == null ? Input.empty() : this.userVolumeSizeGib;
    }

    public WorkspaceWorkspacePropertiesArgs(
        @Nullable Input<String> computeTypeName,
        @Nullable Input<Integer> rootVolumeSizeGib,
        @Nullable Input<String> runningMode,
        @Nullable Input<Integer> runningModeAutoStopTimeoutInMinutes,
        @Nullable Input<Integer> userVolumeSizeGib) {
        this.computeTypeName = computeTypeName;
        this.rootVolumeSizeGib = rootVolumeSizeGib;
        this.runningMode = runningMode;
        this.runningModeAutoStopTimeoutInMinutes = runningModeAutoStopTimeoutInMinutes;
        this.userVolumeSizeGib = userVolumeSizeGib;
    }

    private WorkspaceWorkspacePropertiesArgs() {
        this.computeTypeName = Input.empty();
        this.rootVolumeSizeGib = Input.empty();
        this.runningMode = Input.empty();
        this.runningModeAutoStopTimeoutInMinutes = Input.empty();
        this.userVolumeSizeGib = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceWorkspacePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> computeTypeName;
        private @Nullable Input<Integer> rootVolumeSizeGib;
        private @Nullable Input<String> runningMode;
        private @Nullable Input<Integer> runningModeAutoStopTimeoutInMinutes;
        private @Nullable Input<Integer> userVolumeSizeGib;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkspaceWorkspacePropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeTypeName = defaults.computeTypeName;
    	      this.rootVolumeSizeGib = defaults.rootVolumeSizeGib;
    	      this.runningMode = defaults.runningMode;
    	      this.runningModeAutoStopTimeoutInMinutes = defaults.runningModeAutoStopTimeoutInMinutes;
    	      this.userVolumeSizeGib = defaults.userVolumeSizeGib;
        }

        public Builder computeTypeName(@Nullable Input<String> computeTypeName) {
            this.computeTypeName = computeTypeName;
            return this;
        }

        public Builder computeTypeName(@Nullable String computeTypeName) {
            this.computeTypeName = Input.ofNullable(computeTypeName);
            return this;
        }

        public Builder rootVolumeSizeGib(@Nullable Input<Integer> rootVolumeSizeGib) {
            this.rootVolumeSizeGib = rootVolumeSizeGib;
            return this;
        }

        public Builder rootVolumeSizeGib(@Nullable Integer rootVolumeSizeGib) {
            this.rootVolumeSizeGib = Input.ofNullable(rootVolumeSizeGib);
            return this;
        }

        public Builder runningMode(@Nullable Input<String> runningMode) {
            this.runningMode = runningMode;
            return this;
        }

        public Builder runningMode(@Nullable String runningMode) {
            this.runningMode = Input.ofNullable(runningMode);
            return this;
        }

        public Builder runningModeAutoStopTimeoutInMinutes(@Nullable Input<Integer> runningModeAutoStopTimeoutInMinutes) {
            this.runningModeAutoStopTimeoutInMinutes = runningModeAutoStopTimeoutInMinutes;
            return this;
        }

        public Builder runningModeAutoStopTimeoutInMinutes(@Nullable Integer runningModeAutoStopTimeoutInMinutes) {
            this.runningModeAutoStopTimeoutInMinutes = Input.ofNullable(runningModeAutoStopTimeoutInMinutes);
            return this;
        }

        public Builder userVolumeSizeGib(@Nullable Input<Integer> userVolumeSizeGib) {
            this.userVolumeSizeGib = userVolumeSizeGib;
            return this;
        }

        public Builder userVolumeSizeGib(@Nullable Integer userVolumeSizeGib) {
            this.userVolumeSizeGib = Input.ofNullable(userVolumeSizeGib);
            return this;
        }
        public WorkspaceWorkspacePropertiesArgs build() {
            return new WorkspaceWorkspacePropertiesArgs(computeTypeName, rootVolumeSizeGib, runningMode, runningModeAutoStopTimeoutInMinutes, userVolumeSizeGib);
        }
    }
}
