// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.directconnect;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.directconnect.GatewayAssociationArgs;
import io.pulumi.aws.directconnect.inputs.GatewayAssociationState;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Associates a Direct Connect Gateway with a VGW or transit gateway.
 * 
 * To create a cross-account association, create an `aws.directconnect.GatewayAssociationProposal` resource
 * in the AWS account that owns the VGW or transit gateway and then accept the proposal in the AWS account that owns the Direct Connect Gateway
 * by creating an `aws.directconnect.GatewayAssociation` resource with the `proposal_id` and `associated_gateway_owner_account_id` attributes set.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Direct Connect gateway associations can be imported using `dx_gateway_id` together with `associated_gateway_id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:directconnect/gatewayAssociation:GatewayAssociation example 345508c3-7215-4aef-9832-07c125d5bd0f/vgw-98765432
 * ```
 * 
 */
@ResourceType(type="aws:directconnect/gatewayAssociation:GatewayAssociation")
public class GatewayAssociation extends io.pulumi.resources.CustomResource {
    /**
     * VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
     * 
     */
    @OutputExport(name="allowedPrefixes", type=List.class, parameters={String.class})
    private Output<List<String>> allowedPrefixes;

    /**
     * @return VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
     * 
     */
    public Output<List<String>> getAllowedPrefixes() {
        return this.allowedPrefixes;
    }
    /**
     * The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
     * Used for single account Direct Connect gateway associations.
     * 
     */
    @OutputExport(name="associatedGatewayId", type=String.class, parameters={})
    private Output<String> associatedGatewayId;

    /**
     * @return The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
     * Used for single account Direct Connect gateway associations.
     * 
     */
    public Output<String> getAssociatedGatewayId() {
        return this.associatedGatewayId;
    }
    /**
     * The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
     * Used for cross-account Direct Connect gateway associations.
     * 
     */
    @OutputExport(name="associatedGatewayOwnerAccountId", type=String.class, parameters={})
    private Output<String> associatedGatewayOwnerAccountId;

    /**
     * @return The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
     * Used for cross-account Direct Connect gateway associations.
     * 
     */
    public Output<String> getAssociatedGatewayOwnerAccountId() {
        return this.associatedGatewayOwnerAccountId;
    }
    /**
     * The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.
     * 
     */
    @OutputExport(name="associatedGatewayType", type=String.class, parameters={})
    private Output<String> associatedGatewayType;

    /**
     * @return The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.
     * 
     */
    public Output<String> getAssociatedGatewayType() {
        return this.associatedGatewayType;
    }
    /**
     * The ID of the Direct Connect gateway association.
     * 
     */
    @OutputExport(name="dxGatewayAssociationId", type=String.class, parameters={})
    private Output<String> dxGatewayAssociationId;

    /**
     * @return The ID of the Direct Connect gateway association.
     * 
     */
    public Output<String> getDxGatewayAssociationId() {
        return this.dxGatewayAssociationId;
    }
    /**
     * The ID of the Direct Connect gateway.
     * 
     */
    @OutputExport(name="dxGatewayId", type=String.class, parameters={})
    private Output<String> dxGatewayId;

    /**
     * @return The ID of the Direct Connect gateway.
     * 
     */
    public Output<String> getDxGatewayId() {
        return this.dxGatewayId;
    }
    /**
     * The ID of the AWS account that owns the Direct Connect gateway.
     * 
     */
    @OutputExport(name="dxGatewayOwnerAccountId", type=String.class, parameters={})
    private Output<String> dxGatewayOwnerAccountId;

    /**
     * @return The ID of the AWS account that owns the Direct Connect gateway.
     * 
     */
    public Output<String> getDxGatewayOwnerAccountId() {
        return this.dxGatewayOwnerAccountId;
    }
    /**
     * The ID of the Direct Connect gateway association proposal.
     * Used for cross-account Direct Connect gateway associations.
     * 
     */
    @OutputExport(name="proposalId", type=String.class, parameters={})
    private Output</* @Nullable */ String> proposalId;

    /**
     * @return The ID of the Direct Connect gateway association proposal.
     * Used for cross-account Direct Connect gateway associations.
     * 
     */
    public Output</* @Nullable */ String> getProposalId() {
        return this.proposalId;
    }
    /**
     * @deprecated
     * use 'associated_gateway_id' argument instead
     * 
     */
    @Deprecated /* use 'associated_gateway_id' argument instead */
    @OutputExport(name="vpnGatewayId", type=String.class, parameters={})
    private Output</* @Nullable */ String> vpnGatewayId;

    public Output</* @Nullable */ String> getVpnGatewayId() {
        return this.vpnGatewayId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GatewayAssociation(String name, GatewayAssociationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:directconnect/gatewayAssociation:GatewayAssociation", name, args == null ? GatewayAssociationArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private GatewayAssociation(String name, Input<String> id, @Nullable GatewayAssociationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:directconnect/gatewayAssociation:GatewayAssociation", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GatewayAssociation get(String name, Input<String> id, @Nullable GatewayAssociationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new GatewayAssociation(name, id, state, options);
    }
}
