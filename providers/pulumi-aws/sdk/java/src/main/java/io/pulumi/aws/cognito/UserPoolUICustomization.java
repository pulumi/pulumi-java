// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cognito;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cognito.UserPoolUICustomizationArgs;
import io.pulumi.aws.cognito.inputs.UserPoolUICustomizationState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Cognito User Pool UI Customization resource.
 * 
 * > **Note:** To use this resource, the user pool must have a domain associated with it. For more information, see the Amazon Cognito Developer Guide on [Customizing the Built-in Sign-In and Sign-up Webpages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-app-ui-customization.html).
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### UI customization settings for a single client
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * from "fs";
 * 
 * const exampleUserPool = new aws.cognito.UserPool("exampleUserPool", {});
 * const exampleUserPoolDomain = new aws.cognito.UserPoolDomain("exampleUserPoolDomain", {
 *     domain: "example",
 *     userPoolId: exampleUserPool.id,
 * });
 * const exampleUserPoolClient = new aws.cognito.UserPoolClient("exampleUserPoolClient", {userPoolId: exampleUserPool.id});
 * const exampleUserPoolUICustomization = new aws.cognito.UserPoolUICustomization("exampleUserPoolUICustomization", {
 *     clientId: exampleUserPoolClient.id,
 *     css: ".label-customizable {font-weight: 400;}",
 *     imageFile: Buffer.from(fs.readFileSync("logo.png"), 'binary').toString('base64'),
 *     userPoolId: exampleUserPoolDomain.userPoolId,
 * });
 * ```
 * ```python
 * import pulumi
 * import base64
 * import pulumi_aws as aws
 * 
 * example_user_pool = aws.cognito.UserPool("exampleUserPool")
 * example_user_pool_domain = aws.cognito.UserPoolDomain("exampleUserPoolDomain",
 *     domain="example",
 *     user_pool_id=example_user_pool.id)
 * example_user_pool_client = aws.cognito.UserPoolClient("exampleUserPoolClient", user_pool_id=example_user_pool.id)
 * example_user_pool_ui_customization = aws.cognito.UserPoolUICustomization("exampleUserPoolUICustomization",
 *     client_id=example_user_pool_client.id,
 *     css=".label-customizable {font-weight: 400;}",
 *     image_file=(lambda path: base64.b64encode(open(path).read().encode()).decode())("logo.png"),
 *     user_pool_id=example_user_pool_domain.user_pool_id)
 * ```
 * ```csharp
 * using System;
 * using System.IO;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ReadFileBase64(string path) {
 * 		return Convert.ToBase64String(Encoding.UTF8.GetBytes(File.ReadAllText(path)))
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var exampleUserPool = new Aws.Cognito.UserPool("exampleUserPool", new Aws.Cognito.UserPoolArgs
 *         {
 *         });
 *         var exampleUserPoolDomain = new Aws.Cognito.UserPoolDomain("exampleUserPoolDomain", new Aws.Cognito.UserPoolDomainArgs
 *         {
 *             Domain = "example",
 *             UserPoolId = exampleUserPool.Id,
 *         });
 *         var exampleUserPoolClient = new Aws.Cognito.UserPoolClient("exampleUserPoolClient", new Aws.Cognito.UserPoolClientArgs
 *         {
 *             UserPoolId = exampleUserPool.Id,
 *         });
 *         var exampleUserPoolUICustomization = new Aws.Cognito.UserPoolUICustomization("exampleUserPoolUICustomization", new Aws.Cognito.UserPoolUICustomizationArgs
 *         {
 *             ClientId = exampleUserPoolClient.Id,
 *             Css = ".label-customizable {font-weight: 400;}",
 *             ImageFile = ReadFileBase64("logo.png"),
 *             UserPoolId = exampleUserPoolDomain.UserPoolId,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/base64"
 * 	"io/ioutil"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cognito"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func filebase64OrPanic(path string) pulumi.StringPtrInput {
 * 	if fileData, err := ioutil.ReadFile(path); err == nil {
 * 		return pulumi.String(base64.StdEncoding.EncodeToString(fileData[:]))
 * 	} else {
 * 		panic(err.Error())
 * 	}
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleUserPool, err := cognito.NewUserPool(ctx, "exampleUserPool", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleUserPoolDomain, err := cognito.NewUserPoolDomain(ctx, "exampleUserPoolDomain", &cognito.UserPoolDomainArgs{
 * 			Domain:     pulumi.String("example"),
 * 			UserPoolId: exampleUserPool.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleUserPoolClient, err := cognito.NewUserPoolClient(ctx, "exampleUserPoolClient", &cognito.UserPoolClientArgs{
 * 			UserPoolId: exampleUserPool.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cognito.NewUserPoolUICustomization(ctx, "exampleUserPoolUICustomization", &cognito.UserPoolUICustomizationArgs{
 * 			ClientId:   exampleUserPoolClient.ID(),
 * 			Css:        pulumi.String(".label-customizable {font-weight: 400;}"),
 * 			ImageFile:  filebase64OrPanic("logo.png"),
 * 			UserPoolId: exampleUserPoolDomain.UserPoolId,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### UI customization settings for all clients
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * from "fs";
 * 
 * const exampleUserPool = new aws.cognito.UserPool("exampleUserPool", {});
 * const exampleUserPoolDomain = new aws.cognito.UserPoolDomain("exampleUserPoolDomain", {
 *     domain: "example",
 *     userPoolId: exampleUserPool.id,
 * });
 * const exampleUserPoolUICustomization = new aws.cognito.UserPoolUICustomization("exampleUserPoolUICustomization", {
 *     css: ".label-customizable {font-weight: 400;}",
 *     imageFile: Buffer.from(fs.readFileSync("logo.png"), 'binary').toString('base64'),
 *     userPoolId: exampleUserPoolDomain.userPoolId,
 * });
 * ```
 * ```python
 * import pulumi
 * import base64
 * import pulumi_aws as aws
 * 
 * example_user_pool = aws.cognito.UserPool("exampleUserPool")
 * example_user_pool_domain = aws.cognito.UserPoolDomain("exampleUserPoolDomain",
 *     domain="example",
 *     user_pool_id=example_user_pool.id)
 * example_user_pool_ui_customization = aws.cognito.UserPoolUICustomization("exampleUserPoolUICustomization",
 *     css=".label-customizable {font-weight: 400;}",
 *     image_file=(lambda path: base64.b64encode(open(path).read().encode()).decode())("logo.png"),
 *     user_pool_id=example_user_pool_domain.user_pool_id)
 * ```
 * ```csharp
 * using System;
 * using System.IO;
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 * 	private static string ReadFileBase64(string path) {
 * 		return Convert.ToBase64String(Encoding.UTF8.GetBytes(File.ReadAllText(path)))
 * 	}
 * 
 *     public MyStack()
 *     {
 *         var exampleUserPool = new Aws.Cognito.UserPool("exampleUserPool", new Aws.Cognito.UserPoolArgs
 *         {
 *         });
 *         var exampleUserPoolDomain = new Aws.Cognito.UserPoolDomain("exampleUserPoolDomain", new Aws.Cognito.UserPoolDomainArgs
 *         {
 *             Domain = "example",
 *             UserPoolId = exampleUserPool.Id,
 *         });
 *         var exampleUserPoolUICustomization = new Aws.Cognito.UserPoolUICustomization("exampleUserPoolUICustomization", new Aws.Cognito.UserPoolUICustomizationArgs
 *         {
 *             Css = ".label-customizable {font-weight: 400;}",
 *             ImageFile = ReadFileBase64("logo.png"),
 *             UserPoolId = exampleUserPoolDomain.UserPoolId,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"encoding/base64"
 * 	"io/ioutil"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cognito"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func filebase64OrPanic(path string) pulumi.StringPtrInput {
 * 	if fileData, err := ioutil.ReadFile(path); err == nil {
 * 		return pulumi.String(base64.StdEncoding.EncodeToString(fileData[:]))
 * 	} else {
 * 		panic(err.Error())
 * 	}
 * }
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleUserPool, err := cognito.NewUserPool(ctx, "exampleUserPool", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleUserPoolDomain, err := cognito.NewUserPoolDomain(ctx, "exampleUserPoolDomain", &cognito.UserPoolDomainArgs{
 * 			Domain:     pulumi.String("example"),
 * 			UserPoolId: exampleUserPool.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = cognito.NewUserPoolUICustomization(ctx, "exampleUserPoolUICustomization", &cognito.UserPoolUICustomizationArgs{
 * 			Css:        pulumi.String(".label-customizable {font-weight: 400;}"),
 * 			ImageFile:  filebase64OrPanic("logo.png"),
 * 			UserPoolId: exampleUserPoolDomain.UserPoolId,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Cognito User Pool UI Customizations can be imported using the `user_pool_id` and `client_id` separated by `,`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:cognito/userPoolUICustomization:UserPoolUICustomization example us-west-2_ZCTarbt5C,12bu4fuk3mlgqa2rtrujgp6egq
 * ```
 * 
 *  
 */
@ResourceType(type="aws:cognito/userPoolUICustomization:UserPoolUICustomization")
public class UserPoolUICustomization extends io.pulumi.resources.CustomResource {
    /**
     * The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `image_file` settings will be used for every client that has no UI customization set previously.
     * 
     */
    @Export(name="clientId", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientId;

    /**
     * @return The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `image_file` settings will be used for every client that has no UI customization set previously.
     * 
     */
    public Output</* @Nullable */ String> getClientId() {
        return this.clientId;
    }
    /**
     * The creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
     * 
     */
    @Export(name="creationDate", type=String.class, parameters={})
    private Output<String> creationDate;

    /**
     * @return The creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
     * 
     */
    public Output<String> getCreationDate() {
        return this.creationDate;
    }
    /**
     * The CSS values in the UI customization, provided as a String. At least one of `css` or `image_file` is required.
     * 
     */
    @Export(name="css", type=String.class, parameters={})
    private Output</* @Nullable */ String> css;

    /**
     * @return The CSS values in the UI customization, provided as a String. At least one of `css` or `image_file` is required.
     * 
     */
    public Output</* @Nullable */ String> getCss() {
        return this.css;
    }
    /**
     * The CSS version number.
     * 
     */
    @Export(name="cssVersion", type=String.class, parameters={})
    private Output<String> cssVersion;

    /**
     * @return The CSS version number.
     * 
     */
    public Output<String> getCssVersion() {
        return this.cssVersion;
    }
    /**
     * The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `image_file` is required.
     * 
     */
    @Export(name="imageFile", type=String.class, parameters={})
    private Output</* @Nullable */ String> imageFile;

    /**
     * @return The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `image_file` is required.
     * 
     */
    public Output</* @Nullable */ String> getImageFile() {
        return this.imageFile;
    }
    /**
     * The logo image URL for the UI customization.
     * 
     */
    @Export(name="imageUrl", type=String.class, parameters={})
    private Output<String> imageUrl;

    /**
     * @return The logo image URL for the UI customization.
     * 
     */
    public Output<String> getImageUrl() {
        return this.imageUrl;
    }
    /**
     * The last-modified date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
     * 
     */
    @Export(name="lastModifiedDate", type=String.class, parameters={})
    private Output<String> lastModifiedDate;

    /**
     * @return The last-modified date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
     * 
     */
    public Output<String> getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * The user pool ID for the user pool.
     * 
     */
    @Export(name="userPoolId", type=String.class, parameters={})
    private Output<String> userPoolId;

    /**
     * @return The user pool ID for the user pool.
     * 
     */
    public Output<String> getUserPoolId() {
        return this.userPoolId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserPoolUICustomization(String name) {
        this(name, UserPoolUICustomizationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserPoolUICustomization(String name, UserPoolUICustomizationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserPoolUICustomization(String name, UserPoolUICustomizationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cognito/userPoolUICustomization:UserPoolUICustomization", name, args == null ? UserPoolUICustomizationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private UserPoolUICustomization(String name, Output<String> id, @Nullable UserPoolUICustomizationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cognito/userPoolUICustomization:UserPoolUICustomization", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserPoolUICustomization get(String name, Output<String> id, @Nullable UserPoolUICustomizationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new UserPoolUICustomization(name, id, state, options);
    }
}
