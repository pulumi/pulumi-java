// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ssm.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AssociationOutputLocationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AssociationOutputLocationArgs Empty = new AssociationOutputLocationArgs();

    /**
     * The S3 bucket name.
     * 
     */
    @Import(name="s3BucketName", required=true)
      private final Output<String> s3BucketName;

    public Output<String> s3BucketName() {
        return this.s3BucketName;
    }

    /**
     * The S3 bucket prefix. Results stored in the root if not configured.
     * 
     */
    @Import(name="s3KeyPrefix")
      private final @Nullable Output<String> s3KeyPrefix;

    public Output<String> s3KeyPrefix() {
        return this.s3KeyPrefix == null ? Codegen.empty() : this.s3KeyPrefix;
    }

    /**
     * The S3 bucket region.
     * 
     */
    @Import(name="s3Region")
      private final @Nullable Output<String> s3Region;

    public Output<String> s3Region() {
        return this.s3Region == null ? Codegen.empty() : this.s3Region;
    }

    public AssociationOutputLocationArgs(
        Output<String> s3BucketName,
        @Nullable Output<String> s3KeyPrefix,
        @Nullable Output<String> s3Region) {
        this.s3BucketName = Objects.requireNonNull(s3BucketName, "expected parameter 's3BucketName' to be non-null");
        this.s3KeyPrefix = s3KeyPrefix;
        this.s3Region = s3Region;
    }

    private AssociationOutputLocationArgs() {
        this.s3BucketName = Codegen.empty();
        this.s3KeyPrefix = Codegen.empty();
        this.s3Region = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssociationOutputLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> s3BucketName;
        private @Nullable Output<String> s3KeyPrefix;
        private @Nullable Output<String> s3Region;

        public Builder() {
    	      // Empty
        }

        public Builder(AssociationOutputLocationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.s3BucketName = defaults.s3BucketName;
    	      this.s3KeyPrefix = defaults.s3KeyPrefix;
    	      this.s3Region = defaults.s3Region;
        }

        public Builder s3BucketName(Output<String> s3BucketName) {
            this.s3BucketName = Objects.requireNonNull(s3BucketName);
            return this;
        }
        public Builder s3BucketName(String s3BucketName) {
            this.s3BucketName = Output.of(Objects.requireNonNull(s3BucketName));
            return this;
        }
        public Builder s3KeyPrefix(@Nullable Output<String> s3KeyPrefix) {
            this.s3KeyPrefix = s3KeyPrefix;
            return this;
        }
        public Builder s3KeyPrefix(@Nullable String s3KeyPrefix) {
            this.s3KeyPrefix = Codegen.ofNullable(s3KeyPrefix);
            return this;
        }
        public Builder s3Region(@Nullable Output<String> s3Region) {
            this.s3Region = s3Region;
            return this;
        }
        public Builder s3Region(@Nullable String s3Region) {
            this.s3Region = Codegen.ofNullable(s3Region);
            return this;
        }        public AssociationOutputLocationArgs build() {
            return new AssociationOutputLocationArgs(s3BucketName, s3KeyPrefix, s3Region);
        }
    }
}
