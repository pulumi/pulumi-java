// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elastictranscoder.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipelineNotifications {
    /**
     * The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing a job in this pipeline.
     * 
     */
    private final @Nullable String completed;
    /**
     * The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition while processing a job in this pipeline.
     * 
     */
    private final @Nullable String error;
    /**
     * The topic ARN for the Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process a job in this pipeline.
     * 
     */
    private final @Nullable String progressing;
    /**
     * The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition while processing a job in this pipeline.
     * 
     */
    private final @Nullable String warning;

    @CustomType.Constructor
    private PipelineNotifications(
        @CustomType.Parameter("completed") @Nullable String completed,
        @CustomType.Parameter("error") @Nullable String error,
        @CustomType.Parameter("progressing") @Nullable String progressing,
        @CustomType.Parameter("warning") @Nullable String warning) {
        this.completed = completed;
        this.error = error;
        this.progressing = progressing;
        this.warning = warning;
    }

    /**
     * The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing a job in this pipeline.
     * 
    */
    public Optional<String> getCompleted() {
        return Optional.ofNullable(this.completed);
    }
    /**
     * The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition while processing a job in this pipeline.
     * 
    */
    public Optional<String> getError() {
        return Optional.ofNullable(this.error);
    }
    /**
     * The topic ARN for the Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process a job in this pipeline.
     * 
    */
    public Optional<String> getProgressing() {
        return Optional.ofNullable(this.progressing);
    }
    /**
     * The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition while processing a job in this pipeline.
     * 
    */
    public Optional<String> getWarning() {
        return Optional.ofNullable(this.warning);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineNotifications defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String completed;
        private @Nullable String error;
        private @Nullable String progressing;
        private @Nullable String warning;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineNotifications defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.completed = defaults.completed;
    	      this.error = defaults.error;
    	      this.progressing = defaults.progressing;
    	      this.warning = defaults.warning;
        }

        public Builder completed(@Nullable String completed) {
            this.completed = completed;
            return this;
        }
        public Builder error(@Nullable String error) {
            this.error = error;
            return this;
        }
        public Builder progressing(@Nullable String progressing) {
            this.progressing = progressing;
            return this;
        }
        public Builder warning(@Nullable String warning) {
            this.warning = warning;
            return this;
        }        public PipelineNotifications build() {
            return new PipelineNotifications(completed, error, progressing, warning);
        }
    }
}
