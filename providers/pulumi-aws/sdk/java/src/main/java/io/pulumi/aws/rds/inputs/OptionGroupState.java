// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds.inputs;

import io.pulumi.aws.rds.inputs.OptionGroupOptionGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OptionGroupState extends io.pulumi.resources.ResourceArgs {

    public static final OptionGroupState Empty = new OptionGroupState();

    /**
     * The ARN of the db option group.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * Specifies the name of the engine that this option group should be associated with.
     * 
     */
    @InputImport(name="engineName")
      private final @Nullable Input<String> engineName;

    public Input<String> getEngineName() {
        return this.engineName == null ? Input.empty() : this.engineName;
    }

    /**
     * Specifies the major version of the engine that this option group should be associated with.
     * 
     */
    @InputImport(name="majorEngineVersion")
      private final @Nullable Input<String> majorEngineVersion;

    public Input<String> getMajorEngineVersion() {
        return this.majorEngineVersion == null ? Input.empty() : this.majorEngineVersion;
    }

    /**
     * The Name of the setting.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`. Must be lowercase, to match as it is stored in AWS.
     * 
     */
    @InputImport(name="namePrefix")
      private final @Nullable Input<String> namePrefix;

    public Input<String> getNamePrefix() {
        return this.namePrefix == null ? Input.empty() : this.namePrefix;
    }

    /**
     * The description of the option group. Defaults to "Managed by Pulumi".
     * 
     */
    @InputImport(name="optionGroupDescription")
      private final @Nullable Input<String> optionGroupDescription;

    public Input<String> getOptionGroupDescription() {
        return this.optionGroupDescription == null ? Input.empty() : this.optionGroupDescription;
    }

    /**
     * A list of Options to apply.
     * 
     */
    @InputImport(name="options")
      private final @Nullable Input<List<OptionGroupOptionGetArgs>> options;

    public Input<List<OptionGroupOptionGetArgs>> getOptions() {
        return this.options == null ? Input.empty() : this.options;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    public OptionGroupState(
        @Nullable Input<String> arn,
        @Nullable Input<String> engineName,
        @Nullable Input<String> majorEngineVersion,
        @Nullable Input<String> name,
        @Nullable Input<String> namePrefix,
        @Nullable Input<String> optionGroupDescription,
        @Nullable Input<List<OptionGroupOptionGetArgs>> options,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll) {
        this.arn = arn;
        this.engineName = engineName;
        this.majorEngineVersion = majorEngineVersion;
        this.name = name;
        this.namePrefix = namePrefix;
        this.optionGroupDescription = optionGroupDescription == null ? Input.ofNullable("Managed by Pulumi") : optionGroupDescription;
        this.options = options;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private OptionGroupState() {
        this.arn = Input.empty();
        this.engineName = Input.empty();
        this.majorEngineVersion = Input.empty();
        this.name = Input.empty();
        this.namePrefix = Input.empty();
        this.optionGroupDescription = Input.empty();
        this.options = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OptionGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<String> engineName;
        private @Nullable Input<String> majorEngineVersion;
        private @Nullable Input<String> name;
        private @Nullable Input<String> namePrefix;
        private @Nullable Input<String> optionGroupDescription;
        private @Nullable Input<List<OptionGroupOptionGetArgs>> options;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(OptionGroupState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.engineName = defaults.engineName;
    	      this.majorEngineVersion = defaults.majorEngineVersion;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
    	      this.optionGroupDescription = defaults.optionGroupDescription;
    	      this.options = defaults.options;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder arn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder engineName(@Nullable Input<String> engineName) {
            this.engineName = engineName;
            return this;
        }

        public Builder engineName(@Nullable String engineName) {
            this.engineName = Input.ofNullable(engineName);
            return this;
        }

        public Builder majorEngineVersion(@Nullable Input<String> majorEngineVersion) {
            this.majorEngineVersion = majorEngineVersion;
            return this;
        }

        public Builder majorEngineVersion(@Nullable String majorEngineVersion) {
            this.majorEngineVersion = Input.ofNullable(majorEngineVersion);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder namePrefix(@Nullable Input<String> namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }

        public Builder namePrefix(@Nullable String namePrefix) {
            this.namePrefix = Input.ofNullable(namePrefix);
            return this;
        }

        public Builder optionGroupDescription(@Nullable Input<String> optionGroupDescription) {
            this.optionGroupDescription = optionGroupDescription;
            return this;
        }

        public Builder optionGroupDescription(@Nullable String optionGroupDescription) {
            this.optionGroupDescription = Input.ofNullable(optionGroupDescription);
            return this;
        }

        public Builder options(@Nullable Input<List<OptionGroupOptionGetArgs>> options) {
            this.options = options;
            return this;
        }

        public Builder options(@Nullable List<OptionGroupOptionGetArgs> options) {
            this.options = Input.ofNullable(options);
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }
        public OptionGroupState build() {
            return new OptionGroupState(arn, engineName, majorEngineVersion, name, namePrefix, optionGroupDescription, options, tags, tagsAll);
        }
    }
}
