// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.s3;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.s3.InventoryArgs;
import io.pulumi.aws.s3.inputs.InventoryState;
import io.pulumi.aws.s3.outputs.InventoryDestination;
import io.pulumi.aws.s3.outputs.InventoryFilter;
import io.pulumi.aws.s3.outputs.InventorySchedule;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a S3 bucket [inventory configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html) resource.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * S3 bucket inventory configurations can be imported using `bucket:inventory`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:s3/inventory:Inventory my-bucket-entire-bucket my-bucket:EntireBucket
 * ```
 * 
 */
@ResourceType(type="aws:s3/inventory:Inventory")
public class Inventory extends io.pulumi.resources.CustomResource {
    /**
     * The name of the source bucket that inventory lists the objects for.
     * 
     */
    @OutputExport(name="bucket", type=String.class, parameters={})
    private Output<String> bucket;

    /**
     * @return The name of the source bucket that inventory lists the objects for.
     * 
     */
    public Output<String> getBucket() {
        return this.bucket;
    }
    /**
     * Contains information about where to publish the inventory results (documented below).
     * 
     */
    @OutputExport(name="destination", type=InventoryDestination.class, parameters={})
    private Output<InventoryDestination> destination;

    /**
     * @return Contains information about where to publish the inventory results (documented below).
     * 
     */
    public Output<InventoryDestination> getDestination() {
        return this.destination;
    }
    /**
     * Specifies whether the inventory is enabled or disabled.
     * 
     */
    @OutputExport(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Specifies whether the inventory is enabled or disabled.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnabled() {
        return this.enabled;
    }
    /**
     * Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria (documented below).
     * 
     */
    @OutputExport(name="filter", type=InventoryFilter.class, parameters={})
    private Output</* @Nullable */ InventoryFilter> filter;

    /**
     * @return Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria (documented below).
     * 
     */
    public Output</* @Nullable */ InventoryFilter> getFilter() {
        return this.filter;
    }
    /**
     * Object versions to include in the inventory list. Valid values: `All`, `Current`.
     * 
     */
    @OutputExport(name="includedObjectVersions", type=String.class, parameters={})
    private Output<String> includedObjectVersions;

    /**
     * @return Object versions to include in the inventory list. Valid values: `All`, `Current`.
     * 
     */
    public Output<String> getIncludedObjectVersions() {
        return this.includedObjectVersions;
    }
    /**
     * Unique identifier of the inventory configuration for the bucket.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Unique identifier of the inventory configuration for the bucket.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * List of optional fields that are included in the inventory results. Please refer to the S3 [documentation](https://docs.aws.amazon.com/AmazonS3/latest/API/API_InventoryConfiguration.html#AmazonS3-Type-InventoryConfiguration-OptionalFields) for more details.
     * 
     */
    @OutputExport(name="optionalFields", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> optionalFields;

    /**
     * @return List of optional fields that are included in the inventory results. Please refer to the S3 [documentation](https://docs.aws.amazon.com/AmazonS3/latest/API/API_InventoryConfiguration.html#AmazonS3-Type-InventoryConfiguration-OptionalFields) for more details.
     * 
     */
    public Output</* @Nullable */ List<String>> getOptionalFields() {
        return this.optionalFields;
    }
    /**
     * Specifies the schedule for generating inventory results (documented below).
     * 
     */
    @OutputExport(name="schedule", type=InventorySchedule.class, parameters={})
    private Output<InventorySchedule> schedule;

    /**
     * @return Specifies the schedule for generating inventory results (documented below).
     * 
     */
    public Output<InventorySchedule> getSchedule() {
        return this.schedule;
    }

    public interface BuilderApplicator {
        public void apply(InventoryArgs.Builder a);
    }
    private static io.pulumi.aws.s3.InventoryArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.s3.InventoryArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public Inventory(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Inventory(String name) {
        this(name, InventoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Inventory(String name, InventoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Inventory(String name, InventoryArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/inventory:Inventory", name, args == null ? InventoryArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Inventory(String name, Input<String> id, @Nullable InventoryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:s3/inventory:Inventory", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Inventory get(String name, Input<String> id, @Nullable InventoryState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Inventory(name, id, state, options);
    }
}
