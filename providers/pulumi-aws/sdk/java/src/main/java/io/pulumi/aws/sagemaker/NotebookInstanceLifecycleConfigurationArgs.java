// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NotebookInstanceLifecycleConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final NotebookInstanceLifecycleConfigurationArgs Empty = new NotebookInstanceLifecycleConfigurationArgs();

    /**
     * The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
     * 
     */
    @Import(name="onCreate")
      private final @Nullable Output<String> onCreate;

    public Output<String> onCreate() {
        return this.onCreate == null ? Codegen.empty() : this.onCreate;
    }

    /**
     * A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
     * 
     */
    @Import(name="onStart")
      private final @Nullable Output<String> onStart;

    public Output<String> onStart() {
        return this.onStart == null ? Codegen.empty() : this.onStart;
    }

    public NotebookInstanceLifecycleConfigurationArgs(
        @Nullable Output<String> name,
        @Nullable Output<String> onCreate,
        @Nullable Output<String> onStart) {
        this.name = name;
        this.onCreate = onCreate;
        this.onStart = onStart;
    }

    private NotebookInstanceLifecycleConfigurationArgs() {
        this.name = Codegen.empty();
        this.onCreate = Codegen.empty();
        this.onStart = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotebookInstanceLifecycleConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> name;
        private @Nullable Output<String> onCreate;
        private @Nullable Output<String> onStart;

        public Builder() {
    	      // Empty
        }

        public Builder(NotebookInstanceLifecycleConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.onCreate = defaults.onCreate;
    	      this.onStart = defaults.onStart;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder onCreate(@Nullable Output<String> onCreate) {
            this.onCreate = onCreate;
            return this;
        }
        public Builder onCreate(@Nullable String onCreate) {
            this.onCreate = Codegen.ofNullable(onCreate);
            return this;
        }
        public Builder onStart(@Nullable Output<String> onStart) {
            this.onStart = onStart;
            return this;
        }
        public Builder onStart(@Nullable String onStart) {
            this.onStart = Codegen.ofNullable(onStart);
            return this;
        }        public NotebookInstanceLifecycleConfigurationArgs build() {
            return new NotebookInstanceLifecycleConfigurationArgs(name, onCreate, onStart);
        }
    }
}
