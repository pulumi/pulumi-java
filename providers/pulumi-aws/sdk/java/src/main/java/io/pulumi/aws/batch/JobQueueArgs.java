// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.batch;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobQueueArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobQueueArgs Empty = new JobQueueArgs();

    /**
     * Specifies the set of compute environments
     * mapped to a job queue and their order.  The position of the compute environments
     * in the list will dictate the order.
     * 
     */
    @InputImport(name="computeEnvironments", required=true)
      private final Input<List<String>> computeEnvironments;

    public Input<List<String>> getComputeEnvironments() {
        return this.computeEnvironments;
    }

    /**
     * Specifies the name of the job queue.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * The priority of the job queue. Job queues with a higher priority
     * are evaluated first when associated with the same compute environment.
     * 
     */
    @InputImport(name="priority", required=true)
      private final Input<Integer> priority;

    public Input<Integer> getPriority() {
        return this.priority;
    }

    /**
     * The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
     * 
     */
    @InputImport(name="schedulingPolicyArn")
      private final @Nullable Input<String> schedulingPolicyArn;

    public Input<String> getSchedulingPolicyArn() {
        return this.schedulingPolicyArn == null ? Input.empty() : this.schedulingPolicyArn;
    }

    /**
     * The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
     * 
     */
    @InputImport(name="state", required=true)
      private final Input<String> state;

    public Input<String> getState() {
        return this.state;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public JobQueueArgs(
        Input<List<String>> computeEnvironments,
        @Nullable Input<String> name,
        Input<Integer> priority,
        @Nullable Input<String> schedulingPolicyArn,
        Input<String> state,
        @Nullable Input<Map<String,String>> tags) {
        this.computeEnvironments = Objects.requireNonNull(computeEnvironments, "expected parameter 'computeEnvironments' to be non-null");
        this.name = name;
        this.priority = Objects.requireNonNull(priority, "expected parameter 'priority' to be non-null");
        this.schedulingPolicyArn = schedulingPolicyArn;
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
        this.tags = tags;
    }

    private JobQueueArgs() {
        this.computeEnvironments = Input.empty();
        this.name = Input.empty();
        this.priority = Input.empty();
        this.schedulingPolicyArn = Input.empty();
        this.state = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobQueueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> computeEnvironments;
        private @Nullable Input<String> name;
        private Input<Integer> priority;
        private @Nullable Input<String> schedulingPolicyArn;
        private Input<String> state;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(JobQueueArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeEnvironments = defaults.computeEnvironments;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.schedulingPolicyArn = defaults.schedulingPolicyArn;
    	      this.state = defaults.state;
    	      this.tags = defaults.tags;
        }

        public Builder computeEnvironments(Input<List<String>> computeEnvironments) {
            this.computeEnvironments = Objects.requireNonNull(computeEnvironments);
            return this;
        }

        public Builder computeEnvironments(List<String> computeEnvironments) {
            this.computeEnvironments = Input.of(Objects.requireNonNull(computeEnvironments));
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder priority(Input<Integer> priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }

        public Builder priority(Integer priority) {
            this.priority = Input.of(Objects.requireNonNull(priority));
            return this;
        }

        public Builder schedulingPolicyArn(@Nullable Input<String> schedulingPolicyArn) {
            this.schedulingPolicyArn = schedulingPolicyArn;
            return this;
        }

        public Builder schedulingPolicyArn(@Nullable String schedulingPolicyArn) {
            this.schedulingPolicyArn = Input.ofNullable(schedulingPolicyArn);
            return this;
        }

        public Builder state(Input<String> state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder state(String state) {
            this.state = Input.of(Objects.requireNonNull(state));
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public JobQueueArgs build() {
            return new JobQueueArgs(computeEnvironments, name, priority, schedulingPolicyArn, state, tags);
        }
    }
}
