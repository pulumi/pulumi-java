// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ses.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class ReceiptRuleBounceAction {
    /**
     * The message to send
     * 
     */
    private final String message;
    /**
     * The position of the action in the receipt rule
     * 
     */
    private final Integer position;
    /**
     * The email address of the sender
     * 
     */
    private final String sender;
    /**
     * The RFC 5321 SMTP reply code
     * 
     */
    private final String smtpReplyCode;
    /**
     * The RFC 3463 SMTP enhanced status code
     * 
     */
    private final @Nullable String statusCode;
    /**
     * The ARN of an SNS topic to notify
     * 
     */
    private final @Nullable String topicArn;

    @OutputCustomType.Constructor
    private ReceiptRuleBounceAction(
        @OutputCustomType.Parameter("message") String message,
        @OutputCustomType.Parameter("position") Integer position,
        @OutputCustomType.Parameter("sender") String sender,
        @OutputCustomType.Parameter("smtpReplyCode") String smtpReplyCode,
        @OutputCustomType.Parameter("statusCode") @Nullable String statusCode,
        @OutputCustomType.Parameter("topicArn") @Nullable String topicArn) {
        this.message = message;
        this.position = position;
        this.sender = sender;
        this.smtpReplyCode = smtpReplyCode;
        this.statusCode = statusCode;
        this.topicArn = topicArn;
    }

    /**
     * The message to send
     * 
    */
    public String getMessage() {
        return this.message;
    }
    /**
     * The position of the action in the receipt rule
     * 
    */
    public Integer getPosition() {
        return this.position;
    }
    /**
     * The email address of the sender
     * 
    */
    public String getSender() {
        return this.sender;
    }
    /**
     * The RFC 5321 SMTP reply code
     * 
    */
    public String getSmtpReplyCode() {
        return this.smtpReplyCode;
    }
    /**
     * The RFC 3463 SMTP enhanced status code
     * 
    */
    public Optional<String> getStatusCode() {
        return Optional.ofNullable(this.statusCode);
    }
    /**
     * The ARN of an SNS topic to notify
     * 
    */
    public Optional<String> getTopicArn() {
        return Optional.ofNullable(this.topicArn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReceiptRuleBounceAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String message;
        private Integer position;
        private String sender;
        private String smtpReplyCode;
        private @Nullable String statusCode;
        private @Nullable String topicArn;

        public Builder() {
    	      // Empty
        }

        public Builder(ReceiptRuleBounceAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.message = defaults.message;
    	      this.position = defaults.position;
    	      this.sender = defaults.sender;
    	      this.smtpReplyCode = defaults.smtpReplyCode;
    	      this.statusCode = defaults.statusCode;
    	      this.topicArn = defaults.topicArn;
        }

        public Builder setMessage(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }

        public Builder setPosition(Integer position) {
            this.position = Objects.requireNonNull(position);
            return this;
        }

        public Builder setSender(String sender) {
            this.sender = Objects.requireNonNull(sender);
            return this;
        }

        public Builder setSmtpReplyCode(String smtpReplyCode) {
            this.smtpReplyCode = Objects.requireNonNull(smtpReplyCode);
            return this;
        }

        public Builder setStatusCode(@Nullable String statusCode) {
            this.statusCode = statusCode;
            return this;
        }

        public Builder setTopicArn(@Nullable String topicArn) {
            this.topicArn = topicArn;
            return this;
        }
        public ReceiptRuleBounceAction build() {
            return new ReceiptRuleBounceAction(message, position, sender, smtpReplyCode, statusCode, topicArn);
        }
    }
}
