// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.mediaconvert.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class QueueReservationPlanSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final QueueReservationPlanSettingsArgs Empty = new QueueReservationPlanSettingsArgs();

    /**
     * The length of the term of your reserved queue pricing plan commitment. Valid value is `ONE_YEAR`.
     * 
     */
    @InputImport(name="commitment", required=true)
      private final Input<String> commitment;

    public Input<String> getCommitment() {
        return this.commitment;
    }

    /**
     * Specifies whether the term of your reserved queue pricing plan. Valid values are `AUTO_RENEW` or `EXPIRE`.
     * 
     */
    @InputImport(name="renewalType", required=true)
      private final Input<String> renewalType;

    public Input<String> getRenewalType() {
        return this.renewalType;
    }

    /**
     * Specifies the number of reserved transcode slots (RTS) for queue.
     * 
     */
    @InputImport(name="reservedSlots", required=true)
      private final Input<Integer> reservedSlots;

    public Input<Integer> getReservedSlots() {
        return this.reservedSlots;
    }

    public QueueReservationPlanSettingsArgs(
        Input<String> commitment,
        Input<String> renewalType,
        Input<Integer> reservedSlots) {
        this.commitment = Objects.requireNonNull(commitment, "expected parameter 'commitment' to be non-null");
        this.renewalType = Objects.requireNonNull(renewalType, "expected parameter 'renewalType' to be non-null");
        this.reservedSlots = Objects.requireNonNull(reservedSlots, "expected parameter 'reservedSlots' to be non-null");
    }

    private QueueReservationPlanSettingsArgs() {
        this.commitment = Input.empty();
        this.renewalType = Input.empty();
        this.reservedSlots = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueReservationPlanSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> commitment;
        private Input<String> renewalType;
        private Input<Integer> reservedSlots;

        public Builder() {
    	      // Empty
        }

        public Builder(QueueReservationPlanSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commitment = defaults.commitment;
    	      this.renewalType = defaults.renewalType;
    	      this.reservedSlots = defaults.reservedSlots;
        }

        public Builder setCommitment(Input<String> commitment) {
            this.commitment = Objects.requireNonNull(commitment);
            return this;
        }

        public Builder setCommitment(String commitment) {
            this.commitment = Input.of(Objects.requireNonNull(commitment));
            return this;
        }

        public Builder setRenewalType(Input<String> renewalType) {
            this.renewalType = Objects.requireNonNull(renewalType);
            return this;
        }

        public Builder setRenewalType(String renewalType) {
            this.renewalType = Input.of(Objects.requireNonNull(renewalType));
            return this;
        }

        public Builder setReservedSlots(Input<Integer> reservedSlots) {
            this.reservedSlots = Objects.requireNonNull(reservedSlots);
            return this;
        }

        public Builder setReservedSlots(Integer reservedSlots) {
            this.reservedSlots = Input.of(Objects.requireNonNull(reservedSlots));
            return this;
        }
        public QueueReservationPlanSettingsArgs build() {
            return new QueueReservationPlanSettingsArgs(commitment, renewalType, reservedSlots);
        }
    }
}
