// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.gamelift;

import io.pulumi.aws.gamelift.inputs.FleetEc2InboundPermissionArgs;
import io.pulumi.aws.gamelift.inputs.FleetResourceCreationLimitPolicyArgs;
import io.pulumi.aws.gamelift.inputs.FleetRuntimeConfigurationArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class FleetArgs extends io.pulumi.resources.ResourceArgs {

    public static final FleetArgs Empty = new FleetArgs();

    /**
     * ID of the Gamelift Build to be deployed on the fleet.
     * 
     */
    @Import(name="buildId", required=true)
      private final Output<String> buildId;

    public Output<String> buildId() {
        return this.buildId;
    }

    /**
     * Human-readable description of the fleet.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Range of IP addresses and port settings that permit inbound traffic to access server processes running on the fleet. See below.
     * 
     */
    @Import(name="ec2InboundPermissions")
      private final @Nullable Output<List<FleetEc2InboundPermissionArgs>> ec2InboundPermissions;

    public Output<List<FleetEc2InboundPermissionArgs>> ec2InboundPermissions() {
        return this.ec2InboundPermissions == null ? Codegen.empty() : this.ec2InboundPermissions;
    }

    /**
     * Name of an EC2 instance typeE.g., `t2.micro`
     * 
     */
    @Import(name="ec2InstanceType", required=true)
      private final Output<String> ec2InstanceType;

    public Output<String> ec2InstanceType() {
        return this.ec2InstanceType;
    }

    /**
     * Type of fleet. This value must be `ON_DEMAND` or `SPOT`. Defaults to `ON_DEMAND`.
     * 
     */
    @Import(name="fleetType")
      private final @Nullable Output<String> fleetType;

    public Output<String> fleetType() {
        return this.fleetType == null ? Codegen.empty() : this.fleetType;
    }

    /**
     * ARN of an IAM role that instances in the fleet can assume.
     * 
     */
    @Import(name="instanceRoleArn")
      private final @Nullable Output<String> instanceRoleArn;

    public Output<String> instanceRoleArn() {
        return this.instanceRoleArn == null ? Codegen.empty() : this.instanceRoleArn;
    }

    /**
     * List of names of metric groups to add this fleet to. A metric group tracks metrics across all fleets in the group. Defaults to `default`.
     * 
     */
    @Import(name="metricGroups")
      private final @Nullable Output<List<String>> metricGroups;

    public Output<List<String>> metricGroups() {
        return this.metricGroups == null ? Codegen.empty() : this.metricGroups;
    }

    /**
     * The name of the fleet.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * Game session protection policy to apply to all instances in this fleetE.g., `FullProtection`. Defaults to `NoProtection`.
     * 
     */
    @Import(name="newGameSessionProtectionPolicy")
      private final @Nullable Output<String> newGameSessionProtectionPolicy;

    public Output<String> newGameSessionProtectionPolicy() {
        return this.newGameSessionProtectionPolicy == null ? Codegen.empty() : this.newGameSessionProtectionPolicy;
    }

    /**
     * Policy that limits the number of game sessions an individual player can create over a span of time for this fleet. See below.
     * 
     */
    @Import(name="resourceCreationLimitPolicy")
      private final @Nullable Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy;

    public Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy() {
        return this.resourceCreationLimitPolicy == null ? Codegen.empty() : this.resourceCreationLimitPolicy;
    }

    /**
     * Instructions for launching server processes on each instance in the fleet. See below.
     * 
     */
    @Import(name="runtimeConfiguration")
      private final @Nullable Output<FleetRuntimeConfigurationArgs> runtimeConfiguration;

    public Output<FleetRuntimeConfigurationArgs> runtimeConfiguration() {
        return this.runtimeConfiguration == null ? Codegen.empty() : this.runtimeConfiguration;
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    public FleetArgs(
        Output<String> buildId,
        @Nullable Output<String> description,
        @Nullable Output<List<FleetEc2InboundPermissionArgs>> ec2InboundPermissions,
        Output<String> ec2InstanceType,
        @Nullable Output<String> fleetType,
        @Nullable Output<String> instanceRoleArn,
        @Nullable Output<List<String>> metricGroups,
        @Nullable Output<String> name,
        @Nullable Output<String> newGameSessionProtectionPolicy,
        @Nullable Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy,
        @Nullable Output<FleetRuntimeConfigurationArgs> runtimeConfiguration,
        @Nullable Output<Map<String,String>> tags) {
        this.buildId = Objects.requireNonNull(buildId, "expected parameter 'buildId' to be non-null");
        this.description = description;
        this.ec2InboundPermissions = ec2InboundPermissions;
        this.ec2InstanceType = Objects.requireNonNull(ec2InstanceType, "expected parameter 'ec2InstanceType' to be non-null");
        this.fleetType = fleetType;
        this.instanceRoleArn = instanceRoleArn;
        this.metricGroups = metricGroups;
        this.name = name;
        this.newGameSessionProtectionPolicy = newGameSessionProtectionPolicy;
        this.resourceCreationLimitPolicy = resourceCreationLimitPolicy;
        this.runtimeConfiguration = runtimeConfiguration;
        this.tags = tags;
    }

    private FleetArgs() {
        this.buildId = Codegen.empty();
        this.description = Codegen.empty();
        this.ec2InboundPermissions = Codegen.empty();
        this.ec2InstanceType = Codegen.empty();
        this.fleetType = Codegen.empty();
        this.instanceRoleArn = Codegen.empty();
        this.metricGroups = Codegen.empty();
        this.name = Codegen.empty();
        this.newGameSessionProtectionPolicy = Codegen.empty();
        this.resourceCreationLimitPolicy = Codegen.empty();
        this.runtimeConfiguration = Codegen.empty();
        this.tags = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FleetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> buildId;
        private @Nullable Output<String> description;
        private @Nullable Output<List<FleetEc2InboundPermissionArgs>> ec2InboundPermissions;
        private Output<String> ec2InstanceType;
        private @Nullable Output<String> fleetType;
        private @Nullable Output<String> instanceRoleArn;
        private @Nullable Output<List<String>> metricGroups;
        private @Nullable Output<String> name;
        private @Nullable Output<String> newGameSessionProtectionPolicy;
        private @Nullable Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy;
        private @Nullable Output<FleetRuntimeConfigurationArgs> runtimeConfiguration;
        private @Nullable Output<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(FleetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildId = defaults.buildId;
    	      this.description = defaults.description;
    	      this.ec2InboundPermissions = defaults.ec2InboundPermissions;
    	      this.ec2InstanceType = defaults.ec2InstanceType;
    	      this.fleetType = defaults.fleetType;
    	      this.instanceRoleArn = defaults.instanceRoleArn;
    	      this.metricGroups = defaults.metricGroups;
    	      this.name = defaults.name;
    	      this.newGameSessionProtectionPolicy = defaults.newGameSessionProtectionPolicy;
    	      this.resourceCreationLimitPolicy = defaults.resourceCreationLimitPolicy;
    	      this.runtimeConfiguration = defaults.runtimeConfiguration;
    	      this.tags = defaults.tags;
        }

        public Builder buildId(Output<String> buildId) {
            this.buildId = Objects.requireNonNull(buildId);
            return this;
        }
        public Builder buildId(String buildId) {
            this.buildId = Output.of(Objects.requireNonNull(buildId));
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder ec2InboundPermissions(@Nullable Output<List<FleetEc2InboundPermissionArgs>> ec2InboundPermissions) {
            this.ec2InboundPermissions = ec2InboundPermissions;
            return this;
        }
        public Builder ec2InboundPermissions(@Nullable List<FleetEc2InboundPermissionArgs> ec2InboundPermissions) {
            this.ec2InboundPermissions = Codegen.ofNullable(ec2InboundPermissions);
            return this;
        }
        public Builder ec2InboundPermissions(FleetEc2InboundPermissionArgs... ec2InboundPermissions) {
            return ec2InboundPermissions(List.of(ec2InboundPermissions));
        }
        public Builder ec2InstanceType(Output<String> ec2InstanceType) {
            this.ec2InstanceType = Objects.requireNonNull(ec2InstanceType);
            return this;
        }
        public Builder ec2InstanceType(String ec2InstanceType) {
            this.ec2InstanceType = Output.of(Objects.requireNonNull(ec2InstanceType));
            return this;
        }
        public Builder fleetType(@Nullable Output<String> fleetType) {
            this.fleetType = fleetType;
            return this;
        }
        public Builder fleetType(@Nullable String fleetType) {
            this.fleetType = Codegen.ofNullable(fleetType);
            return this;
        }
        public Builder instanceRoleArn(@Nullable Output<String> instanceRoleArn) {
            this.instanceRoleArn = instanceRoleArn;
            return this;
        }
        public Builder instanceRoleArn(@Nullable String instanceRoleArn) {
            this.instanceRoleArn = Codegen.ofNullable(instanceRoleArn);
            return this;
        }
        public Builder metricGroups(@Nullable Output<List<String>> metricGroups) {
            this.metricGroups = metricGroups;
            return this;
        }
        public Builder metricGroups(@Nullable List<String> metricGroups) {
            this.metricGroups = Codegen.ofNullable(metricGroups);
            return this;
        }
        public Builder metricGroups(String... metricGroups) {
            return metricGroups(List.of(metricGroups));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder newGameSessionProtectionPolicy(@Nullable Output<String> newGameSessionProtectionPolicy) {
            this.newGameSessionProtectionPolicy = newGameSessionProtectionPolicy;
            return this;
        }
        public Builder newGameSessionProtectionPolicy(@Nullable String newGameSessionProtectionPolicy) {
            this.newGameSessionProtectionPolicy = Codegen.ofNullable(newGameSessionProtectionPolicy);
            return this;
        }
        public Builder resourceCreationLimitPolicy(@Nullable Output<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy) {
            this.resourceCreationLimitPolicy = resourceCreationLimitPolicy;
            return this;
        }
        public Builder resourceCreationLimitPolicy(@Nullable FleetResourceCreationLimitPolicyArgs resourceCreationLimitPolicy) {
            this.resourceCreationLimitPolicy = Codegen.ofNullable(resourceCreationLimitPolicy);
            return this;
        }
        public Builder runtimeConfiguration(@Nullable Output<FleetRuntimeConfigurationArgs> runtimeConfiguration) {
            this.runtimeConfiguration = runtimeConfiguration;
            return this;
        }
        public Builder runtimeConfiguration(@Nullable FleetRuntimeConfigurationArgs runtimeConfiguration) {
            this.runtimeConfiguration = Codegen.ofNullable(runtimeConfiguration);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }        public FleetArgs build() {
            return new FleetArgs(buildId, description, ec2InboundPermissions, ec2InstanceType, fleetType, instanceRoleArn, metricGroups, name, newGameSessionProtectionPolicy, resourceCreationLimitPolicy, runtimeConfiguration, tags);
        }
    }
}
