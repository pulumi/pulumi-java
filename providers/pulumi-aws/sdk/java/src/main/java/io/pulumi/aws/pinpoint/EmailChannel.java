// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.pinpoint;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.pinpoint.EmailChannelArgs;
import io.pulumi.aws.pinpoint.inputs.EmailChannelState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Pinpoint Email Channel resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const app = new aws.pinpoint.App("app", {});
 * const role = new aws.iam.Role("role", {assumeRolePolicy: `{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": "sts:AssumeRole",
 *       "Principal": {
 *         "Service": "pinpoint.amazonaws.com"
 *       },
 *       "Effect": "Allow",
 *       "Sid": ""
 *     }
 *   ]
 * }
 * `});
 * const email = new aws.pinpoint.EmailChannel("email", {
 *     applicationId: app.applicationId,
 *     fromAddress: "user@example.com",
 *     roleArn: role.arn,
 * });
 * const identity = new aws.ses.DomainIdentity("identity", {domain: "example.com"});
 * const rolePolicy = new aws.iam.RolePolicy("rolePolicy", {
 *     role: role.id,
 *     policy: `{
 *   "Version": "2012-10-17",
 *   "Statement": {
 *     "Action": [
 *       "mobileanalytics:PutEvents",
 *       "mobileanalytics:PutItems"
 *     ],
 *     "Effect": "Allow",
 *     "Resource": [
 *       "*"
 *     ]
 *   }
 * }
 * `,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * app = aws.pinpoint.App("app")
 * role = aws.iam.Role("role", assume_role_policy="""{
 *   "Version": "2012-10-17",
 *   "Statement": [
 *     {
 *       "Action": "sts:AssumeRole",
 *       "Principal": {
 *         "Service": "pinpoint.amazonaws.com"
 *       },
 *       "Effect": "Allow",
 *       "Sid": ""
 *     }
 *   ]
 * }
 * """)
 * email = aws.pinpoint.EmailChannel("email",
 *     application_id=app.application_id,
 *     from_address="user@example.com",
 *     role_arn=role.arn)
 * identity = aws.ses.DomainIdentity("identity", domain="example.com")
 * role_policy = aws.iam.RolePolicy("rolePolicy",
 *     role=role.id,
 *     policy="""{
 *   "Version": "2012-10-17",
 *   "Statement": {
 *     "Action": [
 *       "mobileanalytics:PutEvents",
 *       "mobileanalytics:PutItems"
 *     ],
 *     "Effect": "Allow",
 *     "Resource": [
 *       "*"
 *     ]
 *   }
 * }
 * """)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var app = new Aws.Pinpoint.App("app", new Aws.Pinpoint.AppArgs
 *         {
 *         });
 *         var role = new Aws.Iam.Role("role", new Aws.Iam.RoleArgs
 *         {
 *             AssumeRolePolicy = @"{
 *   ""Version"": ""2012-10-17"",
 *   ""Statement"": [
 *     {
 *       ""Action"": ""sts:AssumeRole"",
 *       ""Principal"": {
 *         ""Service"": ""pinpoint.amazonaws.com""
 *       },
 *       ""Effect"": ""Allow"",
 *       ""Sid"": """"
 *     }
 *   ]
 * }
 * ",
 *         });
 *         var email = new Aws.Pinpoint.EmailChannel("email", new Aws.Pinpoint.EmailChannelArgs
 *         {
 *             ApplicationId = app.ApplicationId,
 *             FromAddress = "user@example.com",
 *             RoleArn = role.Arn,
 *         });
 *         var identity = new Aws.Ses.DomainIdentity("identity", new Aws.Ses.DomainIdentityArgs
 *         {
 *             Domain = "example.com",
 *         });
 *         var rolePolicy = new Aws.Iam.RolePolicy("rolePolicy", new Aws.Iam.RolePolicyArgs
 *         {
 *             Role = role.Id,
 *             Policy = @"{
 *   ""Version"": ""2012-10-17"",
 *   ""Statement"": {
 *     ""Action"": [
 *       ""mobileanalytics:PutEvents"",
 *       ""mobileanalytics:PutItems""
 *     ],
 *     ""Effect"": ""Allow"",
 *     ""Resource"": [
 *       ""*""
 *     ]
 *   }
 * }
 * ",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/pinpoint"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ses"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		app, err := pinpoint.NewApp(ctx, "app", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		role, err := iam.NewRole(ctx, "role", &iam.RoleArgs{
 * 			AssumeRolePolicy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Action\": \"sts:AssumeRole\",\n", "      \"Principal\": {\n", "        \"Service\": \"pinpoint.amazonaws.com\"\n", "      },\n", "      \"Effect\": \"Allow\",\n", "      \"Sid\": \"\"\n", "    }\n", "  ]\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = pinpoint.NewEmailChannel(ctx, "email", &pinpoint.EmailChannelArgs{
 * 			ApplicationId: app.ApplicationId,
 * 			FromAddress:   pulumi.String("user@example.com"),
 * 			RoleArn:       role.Arn,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = ses.NewDomainIdentity(ctx, "identity", &ses.DomainIdentityArgs{
 * 			Domain: pulumi.String("example.com"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewRolePolicy(ctx, "rolePolicy", &iam.RolePolicyArgs{
 * 			Role:   role.ID(),
 * 			Policy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": {\n", "    \"Action\": [\n", "      \"mobileanalytics:PutEvents\",\n", "      \"mobileanalytics:PutItems\"\n", "    ],\n", "    \"Effect\": \"Allow\",\n", "    \"Resource\": [\n", "      \"*\"\n", "    ]\n", "  }\n", "}\n")),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Pinpoint Email Channel can be imported using the `application-id`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:pinpoint/emailChannel:EmailChannel email application-id
 * ```
 * 
 *  
 */
@ResourceType(type="aws:pinpoint/emailChannel:EmailChannel")
public class EmailChannel extends io.pulumi.resources.CustomResource {
    /**
     * The application ID.
     * 
     */
    @Export(name="applicationId", type=String.class, parameters={})
    private Output<String> applicationId;

    /**
     * @return The application ID.
     * 
     */
    public Output<String> getApplicationId() {
        return this.applicationId;
    }
    /**
     * The ARN of the Amazon SES configuration set that you want to apply to messages that you send through the channel.
     * 
     */
    @Export(name="configurationSet", type=String.class, parameters={})
    private Output</* @Nullable */ String> configurationSet;

    /**
     * @return The ARN of the Amazon SES configuration set that you want to apply to messages that you send through the channel.
     * 
     */
    public Output</* @Nullable */ String> getConfigurationSet() {
        return this.configurationSet;
    }
    /**
     * Whether the channel is enabled or disabled. Defaults to `true`.
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Whether the channel is enabled or disabled. Defaults to `true`.
     * 
     */
    public Output</* @Nullable */ Boolean> getEnabled() {
        return this.enabled;
    }
    /**
     * The email address used to send emails from. You can use email only (`user@example.com`) or friendly address (`User <user@example.com>`). This field comply with [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt).
     * 
     */
    @Export(name="fromAddress", type=String.class, parameters={})
    private Output<String> fromAddress;

    /**
     * @return The email address used to send emails from. You can use email only (`user@example.com`) or friendly address (`User <user@example.com>`). This field comply with [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt).
     * 
     */
    public Output<String> getFromAddress() {
        return this.fromAddress;
    }
    /**
     * The ARN of an identity verified with SES.
     * 
     */
    @Export(name="identity", type=String.class, parameters={})
    private Output<String> identity;

    /**
     * @return The ARN of an identity verified with SES.
     * 
     */
    public Output<String> getIdentity() {
        return this.identity;
    }
    /**
     * Messages per second that can be sent.
     * 
     */
    @Export(name="messagesPerSecond", type=Integer.class, parameters={})
    private Output<Integer> messagesPerSecond;

    /**
     * @return Messages per second that can be sent.
     * 
     */
    public Output<Integer> getMessagesPerSecond() {
        return this.messagesPerSecond;
    }
    /**
     * The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
     * 
     */
    @Export(name="roleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> roleArn;

    /**
     * @return The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
     * 
     */
    public Output</* @Nullable */ String> getRoleArn() {
        return this.roleArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EmailChannel(String name) {
        this(name, EmailChannelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EmailChannel(String name, EmailChannelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EmailChannel(String name, EmailChannelArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:pinpoint/emailChannel:EmailChannel", name, args == null ? EmailChannelArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private EmailChannel(String name, Output<String> id, @Nullable EmailChannelState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:pinpoint/emailChannel:EmailChannel", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EmailChannel get(String name, Output<String> id, @Nullable EmailChannelState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new EmailChannel(name, id, state, options);
    }
}
