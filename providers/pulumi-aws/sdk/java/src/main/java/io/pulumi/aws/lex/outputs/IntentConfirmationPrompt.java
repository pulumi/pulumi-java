// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lex.outputs;

import io.pulumi.aws.lex.outputs.IntentConfirmationPromptMessage;
import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class IntentConfirmationPrompt {
    /**
     * The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
     * 
     */
    private final Integer maxAttempts;
    /**
     * A set of messages, each of which provides a message string and its type.
     * You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
     * Attributes are documented under message. Must contain between 1 and 15 messages.
     * 
     */
    private final List<IntentConfirmationPromptMessage> messages;
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     * 
     */
    private final @Nullable String responseCard;

    @OutputCustomType.Constructor({"maxAttempts","messages","responseCard"})
    private IntentConfirmationPrompt(
        Integer maxAttempts,
        List<IntentConfirmationPromptMessage> messages,
        @Nullable String responseCard) {
        this.maxAttempts = Objects.requireNonNull(maxAttempts);
        this.messages = Objects.requireNonNull(messages);
        this.responseCard = responseCard;
    }

    /**
     * The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
     * 
    */
    public Integer getMaxAttempts() {
        return this.maxAttempts;
    }
    /**
     * A set of messages, each of which provides a message string and its type.
     * You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
     * Attributes are documented under message. Must contain between 1 and 15 messages.
     * 
    */
    public List<IntentConfirmationPromptMessage> getMessages() {
        return this.messages;
    }
    /**
     * The response card. Amazon Lex will substitute session attributes and
     * slot values into the response card. For more information, see
     * [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
     * 
    */
    public Optional<String> getResponseCard() {
        return Optional.ofNullable(this.responseCard);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntentConfirmationPrompt defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer maxAttempts;
        private List<IntentConfirmationPromptMessage> messages;
        private @Nullable String responseCard;

        public Builder() {
    	      // Empty
        }

        public Builder(IntentConfirmationPrompt defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxAttempts = defaults.maxAttempts;
    	      this.messages = defaults.messages;
    	      this.responseCard = defaults.responseCard;
        }

        public Builder setMaxAttempts(Integer maxAttempts) {
            this.maxAttempts = Objects.requireNonNull(maxAttempts);
            return this;
        }

        public Builder setMessages(List<IntentConfirmationPromptMessage> messages) {
            this.messages = Objects.requireNonNull(messages);
            return this;
        }

        public Builder setResponseCard(@Nullable String responseCard) {
            this.responseCard = responseCard;
            return this;
        }
        public IntentConfirmationPrompt build() {
            return new IntentConfirmationPrompt(maxAttempts, messages, responseCard);
        }
    }
}
