// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticsearch;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.elasticsearch.DomainPolicyArgs;
import io.pulumi.aws.elasticsearch.inputs.DomainPolicyState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Allows setting policy to an Elasticsearch domain while referencing domain attributes (e.g., ARN)
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.elasticsearch.Domain("example", {elasticsearchVersion: "2.3"});
 * const main = new aws.elasticsearch.DomainPolicy("main", {
 *     domainName: example.domainName,
 *     accessPolicies: pulumi.interpolate`{
 *     "Version": "2012-10-17",
 *     "Statement": [
 *         {
 *             "Action": "es:*",
 *             "Principal": "*",
 *             "Effect": "Allow",
 *             "Condition": {
 *                 "IpAddress": {"aws:SourceIp": "127.0.0.1/32"}
 *             },
 *             "Resource": "${example.arn}/*"
 *         }
 *     ]
 * }
 * `,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.elasticsearch.Domain("example", elasticsearch_version="2.3")
 * main = aws.elasticsearch.DomainPolicy("main",
 *     domain_name=example.domain_name,
 *     access_policies=example.arn.apply(lambda arn: f"""{{
 *     "Version": "2012-10-17",
 *     "Statement": [
 *         {{
 *             "Action": "es:*",
 *             "Principal": "*",
 *             "Effect": "Allow",
 *             "Condition": {{
 *                 "IpAddress": {{"aws:SourceIp": "127.0.0.1/32"}}
 *             }},
 *             "Resource": "{arn}/*"
 *         }}
 *     ]
 * }}
 * """))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.ElasticSearch.Domain("example", new Aws.ElasticSearch.DomainArgs
 *         {
 *             ElasticsearchVersion = "2.3",
 *         });
 *         var main = new Aws.ElasticSearch.DomainPolicy("main", new Aws.ElasticSearch.DomainPolicyArgs
 *         {
 *             DomainName = example.DomainName,
 *             AccessPolicies = example.Arn.Apply(arn => @$"{{
 *     ""Version"": ""2012-10-17"",
 *     ""Statement"": [
 *         {{
 *             ""Action"": ""es:*"",
 *             ""Principal"": ""*"",
 *             ""Effect"": ""Allow"",
 *             ""Condition"": {{
 *                 ""IpAddress"": {{""aws:SourceIp"": ""127.0.0.1/32""}}
 *             }},
 *             ""Resource"": ""{arn}/*""
 *         }}
 *     ]
 * }}
 * "),
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"fmt"
 * 
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/elasticsearch"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		example, err := elasticsearch.NewDomain(ctx, "example", &elasticsearch.DomainArgs{
 * 			ElasticsearchVersion: pulumi.String("2.3"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = elasticsearch.NewDomainPolicy(ctx, "main", &elasticsearch.DomainPolicyArgs{
 * 			DomainName: example.DomainName,
 * 			AccessPolicies: example.Arn.ApplyT(func(arn string) (string, error) {
 * 				return fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "    \"Version\": \"2012-10-17\",\n", "    \"Statement\": [\n", "        {\n", "            \"Action\": \"es:*\",\n", "            \"Principal\": \"*\",\n", "            \"Effect\": \"Allow\",\n", "            \"Condition\": {\n", "                \"IpAddress\": {\"aws:SourceIp\": \"127.0.0.1/32\"}\n", "            },\n", "            \"Resource\": \"", arn, "/*\"\n", "        }\n", "    ]\n", "}\n"), nil
 * 			}).(pulumi.StringOutput),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:elasticsearch/domainPolicy:DomainPolicy")
public class DomainPolicy extends io.pulumi.resources.CustomResource {
    /**
     * IAM policy document specifying the access policies for the domain
     * 
     */
    @Export(name="accessPolicies", type=String.class, parameters={})
    private Output<String> accessPolicies;

    /**
     * @return IAM policy document specifying the access policies for the domain
     * 
     */
    public Output<String> getAccessPolicies() {
        return this.accessPolicies;
    }
    /**
     * Name of the domain.
     * 
     */
    @Export(name="domainName", type=String.class, parameters={})
    private Output<String> domainName;

    /**
     * @return Name of the domain.
     * 
     */
    public Output<String> getDomainName() {
        return this.domainName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainPolicy(String name) {
        this(name, DomainPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainPolicy(String name, DomainPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainPolicy(String name, DomainPolicyArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:elasticsearch/domainPolicy:DomainPolicy", name, args == null ? DomainPolicyArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private DomainPolicy(String name, Output<String> id, @Nullable DomainPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:elasticsearch/domainPolicy:DomainPolicy", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainPolicy get(String name, Output<String> id, @Nullable DomainPolicyState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DomainPolicy(name, id, state, options);
    }
}
