// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.imagebuilder;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.imagebuilder.ComponentArgs;
import io.pulumi.aws.imagebuilder.inputs.ComponentState;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages an Image Builder Component.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * `aws_imagebuilder_components` resources can be imported by using the Amazon Resource Name (ARN), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:imagebuilder/component:Component example arn:aws:imagebuilder:us-east-1:123456789012:component/example/1.0.0/1
 * ```
 * 
 *  Certain resource arguments, such as `uri`, cannot be read via the API and imported into the provider. The provider will display a difference for these arguments the first run after import if declared in the the provider configuration for an imported resource.
 * 
 */
@ResourceType(type="aws:imagebuilder/component:Component")
public class Component extends io.pulumi.resources.CustomResource {
    /**
     * (Required) Amazon Resource Name (ARN) of the component.
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return (Required) Amazon Resource Name (ARN) of the component.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Change description of the component.
     * 
     */
    @OutputExport(name="changeDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> changeDescription;

    /**
     * @return Change description of the component.
     * 
     */
    public Output</* @Nullable */ String> getChangeDescription() {
        return this.changeDescription;
    }
    /**
     * Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    @OutputExport(name="data", type=String.class, parameters={})
    private Output<String> data;

    /**
     * @return Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    public Output<String> getData() {
        return this.data;
    }
    /**
     * Date the component was created.
     * 
     */
    @OutputExport(name="dateCreated", type=String.class, parameters={})
    private Output<String> dateCreated;

    /**
     * @return Date the component was created.
     * 
     */
    public Output<String> getDateCreated() {
        return this.dateCreated;
    }
    /**
     * Description of the component.
     * 
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the component.
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * Encryption status of the component.
     * 
     */
    @OutputExport(name="encrypted", type=Boolean.class, parameters={})
    private Output<Boolean> encrypted;

    /**
     * @return Encryption status of the component.
     * 
     */
    public Output<Boolean> getEncrypted() {
        return this.encrypted;
    }
    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
     * 
     */
    @OutputExport(name="kmsKeyId", type=String.class, parameters={})
    private Output</* @Nullable */ String> kmsKeyId;

    /**
     * @return Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
     * 
     */
    public Output</* @Nullable */ String> getKmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * Name of the component.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the component.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * Owner of the component.
     * 
     */
    @OutputExport(name="owner", type=String.class, parameters={})
    private Output<String> owner;

    /**
     * @return Owner of the component.
     * 
     */
    public Output<String> getOwner() {
        return this.owner;
    }
    /**
     * Platform of the component.
     * 
     */
    @OutputExport(name="platform", type=String.class, parameters={})
    private Output<String> platform;

    /**
     * @return Platform of the component.
     * 
     */
    public Output<String> getPlatform() {
        return this.platform;
    }
    /**
     * Set of Operating Systems (OS) supported by the component.
     * 
     */
    @OutputExport(name="supportedOsVersions", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> supportedOsVersions;

    /**
     * @return Set of Operating Systems (OS) supported by the component.
     * 
     */
    public Output</* @Nullable */ List<String>> getSupportedOsVersions() {
        return this.supportedOsVersions;
    }
    /**
     * Key-value map of resource tags for the component. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags for the component. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @OutputExport(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }
    /**
     * Type of the component.
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of the component.
     * 
     */
    public Output<String> getType() {
        return this.type;
    }
    /**
     * S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
     * 
     */
    @OutputExport(name="uri", type=String.class, parameters={})
    private Output</* @Nullable */ String> uri;

    /**
     * @return S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
     * 
     */
    public Output</* @Nullable */ String> getUri() {
        return this.uri;
    }
    /**
     * Version of the component.
     * 
     */
    @OutputExport(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return Version of the component.
     * 
     */
    public Output<String> getVersion() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Component(String name) {
        this(name, ComponentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Component(String name, ComponentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Component(String name, ComponentArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:imagebuilder/component:Component", name, args == null ? ComponentArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Component(String name, Input<String> id, @Nullable ComponentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:imagebuilder/component:Component", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Component get(String name, Input<String> id, @Nullable ComponentState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Component(name, id, state, options);
    }
}
