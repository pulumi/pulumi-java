// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.iam.GroupMembershipArgs;
import io.pulumi.aws.iam.inputs.GroupMembershipState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * > **WARNING:** Multiple aws.iam.GroupMembership resources with the same group name will produce inconsistent behavior!
 * 
 * Provides a top level resource to manage IAM Group membership for IAM Users. For
 * more information on managing IAM Groups or IAM Users, see IAM Groups or
 * IAM Users
 * 
 * > **Note:** `aws.iam.GroupMembership` will conflict with itself if used more than once with the same group. To non-exclusively manage the users in a group, see the
 * `aws.iam.UserGroupMembership` resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const group = new aws.iam.Group("group", {});
 * const userOne = new aws.iam.User("userOne", {});
 * const userTwo = new aws.iam.User("userTwo", {});
 * const team = new aws.iam.GroupMembership("team", {
 *     users: [
 *         userOne.name,
 *         userTwo.name,
 *     ],
 *     group: group.name,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * group = aws.iam.Group("group")
 * user_one = aws.iam.User("userOne")
 * user_two = aws.iam.User("userTwo")
 * team = aws.iam.GroupMembership("team",
 *     users=[
 *         user_one.name,
 *         user_two.name,
 *     ],
 *     group=group.name)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var @group = new Aws.Iam.Group("group", new Aws.Iam.GroupArgs
 *         {
 *         });
 *         var userOne = new Aws.Iam.User("userOne", new Aws.Iam.UserArgs
 *         {
 *         });
 *         var userTwo = new Aws.Iam.User("userTwo", new Aws.Iam.UserArgs
 *         {
 *         });
 *         var team = new Aws.Iam.GroupMembership("team", new Aws.Iam.GroupMembershipArgs
 *         {
 *             Users = 
 *             {
 *                 userOne.Name,
 *                 userTwo.Name,
 *             },
 *             Group = @group.Name,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		group, err := iam.NewGroup(ctx, "group", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		userOne, err := iam.NewUser(ctx, "userOne", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		userTwo, err := iam.NewUser(ctx, "userTwo", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = iam.NewGroupMembership(ctx, "team", &iam.GroupMembershipArgs{
 * 			Users: pulumi.StringArray{
 * 				userOne.Name,
 * 				userTwo.Name,
 * 			},
 * 			Group: group.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:iam/groupMembership:GroupMembership")
public class GroupMembership extends io.pulumi.resources.CustomResource {
    /**
     * The IAM Group name to attach the list of `users` to
     * 
     */
    @Export(name="group", type=String.class, parameters={})
    private Output<String> group;

    /**
     * @return The IAM Group name to attach the list of `users` to
     * 
     */
    public Output<String> getGroup() {
        return this.group;
    }
    /**
     * The name to identify the Group Membership
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name to identify the Group Membership
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * A list of IAM User names to associate with the Group
     * 
     */
    @Export(name="users", type=List.class, parameters={String.class})
    private Output<List<String>> users;

    /**
     * @return A list of IAM User names to associate with the Group
     * 
     */
    public Output<List<String>> getUsers() {
        return this.users;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GroupMembership(String name) {
        this(name, GroupMembershipArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GroupMembership(String name, GroupMembershipArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GroupMembership(String name, GroupMembershipArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iam/groupMembership:GroupMembership", name, args == null ? GroupMembershipArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private GroupMembership(String name, Output<String> id, @Nullable GroupMembershipState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:iam/groupMembership:GroupMembership", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GroupMembership get(String name, Output<String> id, @Nullable GroupMembershipState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new GroupMembership(name, id, state, options);
    }
}
