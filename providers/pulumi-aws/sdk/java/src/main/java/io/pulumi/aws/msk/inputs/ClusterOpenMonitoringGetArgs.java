// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.msk.inputs;

import io.pulumi.aws.msk.inputs.ClusterOpenMonitoringPrometheusGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.util.Objects;


public final class ClusterOpenMonitoringGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterOpenMonitoringGetArgs Empty = new ClusterOpenMonitoringGetArgs();

    /**
     * Configuration block for Prometheus settings for open monitoring. See below.
     * 
     */
    @InputImport(name="prometheus", required=true)
      private final Input<ClusterOpenMonitoringPrometheusGetArgs> prometheus;

    public Input<ClusterOpenMonitoringPrometheusGetArgs> getPrometheus() {
        return this.prometheus;
    }

    public ClusterOpenMonitoringGetArgs(Input<ClusterOpenMonitoringPrometheusGetArgs> prometheus) {
        this.prometheus = Objects.requireNonNull(prometheus, "expected parameter 'prometheus' to be non-null");
    }

    private ClusterOpenMonitoringGetArgs() {
        this.prometheus = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterOpenMonitoringGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<ClusterOpenMonitoringPrometheusGetArgs> prometheus;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterOpenMonitoringGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.prometheus = defaults.prometheus;
        }

        public Builder setPrometheus(Input<ClusterOpenMonitoringPrometheusGetArgs> prometheus) {
            this.prometheus = Objects.requireNonNull(prometheus);
            return this;
        }

        public Builder setPrometheus(ClusterOpenMonitoringPrometheusGetArgs prometheus) {
            this.prometheus = Input.of(Objects.requireNonNull(prometheus));
            return this;
        }
        public ClusterOpenMonitoringGetArgs build() {
            return new ClusterOpenMonitoringGetArgs(prometheus);
        }
    }
}
