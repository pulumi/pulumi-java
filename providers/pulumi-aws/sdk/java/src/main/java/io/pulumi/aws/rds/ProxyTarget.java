// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.rds.ProxyTargetArgs;
import io.pulumi.aws.rds.inputs.ProxyTargetState;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an RDS DB proxy target resource.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * RDS DB Proxy Targets can be imported using the `db_proxy_name`, `target_group_name`, target type (e.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`), and resource identifier separated by forward slashes (`/`), e.g., Instances
 * 
 * ```sh
 *  $ pulumi import aws:rds/proxyTarget:ProxyTarget example example-proxy/default/RDS_INSTANCE/example-instance
 * ```
 * 
 *  Provisioned Clusters
 * 
 * ```sh
 *  $ pulumi import aws:rds/proxyTarget:ProxyTarget example example-proxy/default/TRACKED_CLUSTER/example-cluster
 * ```
 * 
 */
@ResourceType(type="aws:rds/proxyTarget:ProxyTarget")
public class ProxyTarget extends io.pulumi.resources.CustomResource {
    /**
     * DB cluster identifier.
     * 
     */
    @OutputExport(name="dbClusterIdentifier", type=String.class, parameters={})
    private Output</* @Nullable */ String> dbClusterIdentifier;

    /**
     * @return DB cluster identifier.
     * 
     */
    public Output</* @Nullable */ String> getDbClusterIdentifier() {
        return this.dbClusterIdentifier;
    }
    /**
     * DB instance identifier.
     * 
     */
    @OutputExport(name="dbInstanceIdentifier", type=String.class, parameters={})
    private Output</* @Nullable */ String> dbInstanceIdentifier;

    /**
     * @return DB instance identifier.
     * 
     */
    public Output</* @Nullable */ String> getDbInstanceIdentifier() {
        return this.dbInstanceIdentifier;
    }
    /**
     * The name of the DB proxy.
     * 
     */
    @OutputExport(name="dbProxyName", type=String.class, parameters={})
    private Output<String> dbProxyName;

    /**
     * @return The name of the DB proxy.
     * 
     */
    public Output<String> getDbProxyName() {
        return this.dbProxyName;
    }
    /**
     * Hostname for the target RDS DB Instance. Only returned for `RDS_INSTANCE` type.
     * 
     */
    @OutputExport(name="endpoint", type=String.class, parameters={})
    private Output<String> endpoint;

    /**
     * @return Hostname for the target RDS DB Instance. Only returned for `RDS_INSTANCE` type.
     * 
     */
    public Output<String> getEndpoint() {
        return this.endpoint;
    }
    /**
     * Port for the target RDS DB Instance or Aurora DB Cluster.
     * 
     */
    @OutputExport(name="port", type=Integer.class, parameters={})
    private Output<Integer> port;

    /**
     * @return Port for the target RDS DB Instance or Aurora DB Cluster.
     * 
     */
    public Output<Integer> getPort() {
        return this.port;
    }
    /**
     * Identifier representing the DB Instance or DB Cluster target.
     * 
     */
    @OutputExport(name="rdsResourceId", type=String.class, parameters={})
    private Output<String> rdsResourceId;

    /**
     * @return Identifier representing the DB Instance or DB Cluster target.
     * 
     */
    public Output<String> getRdsResourceId() {
        return this.rdsResourceId;
    }
    /**
     * Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.
     * 
     */
    @OutputExport(name="targetArn", type=String.class, parameters={})
    private Output<String> targetArn;

    /**
     * @return Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.
     * 
     */
    public Output<String> getTargetArn() {
        return this.targetArn;
    }
    /**
     * The name of the target group.
     * 
     */
    @OutputExport(name="targetGroupName", type=String.class, parameters={})
    private Output<String> targetGroupName;

    /**
     * @return The name of the target group.
     * 
     */
    public Output<String> getTargetGroupName() {
        return this.targetGroupName;
    }
    /**
     * DB Cluster identifier for the DB Instance target. Not returned unless manually importing an `RDS_INSTANCE` target that is part of a DB Cluster.
     * 
     */
    @OutputExport(name="trackedClusterId", type=String.class, parameters={})
    private Output<String> trackedClusterId;

    /**
     * @return DB Cluster identifier for the DB Instance target. Not returned unless manually importing an `RDS_INSTANCE` target that is part of a DB Cluster.
     * 
     */
    public Output<String> getTrackedClusterId() {
        return this.trackedClusterId;
    }
    /**
     * Type of targetE.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`
     * 
     */
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of targetE.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    public interface BuilderApplicator {
        public void apply(ProxyTargetArgs.Builder a);
    }
    private static io.pulumi.aws.rds.ProxyTargetArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.rds.ProxyTargetArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public ProxyTarget(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProxyTarget(String name) {
        this(name, ProxyTargetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProxyTarget(String name, ProxyTargetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProxyTarget(String name, ProxyTargetArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/proxyTarget:ProxyTarget", name, args == null ? ProxyTargetArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ProxyTarget(String name, Input<String> id, @Nullable ProxyTargetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/proxyTarget:ProxyTarget", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProxyTarget get(String name, Input<String> id, @Nullable ProxyTargetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ProxyTarget(name, id, state, options);
    }
}
