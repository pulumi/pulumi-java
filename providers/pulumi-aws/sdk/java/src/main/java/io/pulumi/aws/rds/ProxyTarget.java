// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.rds;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.rds.ProxyTargetArgs;
import io.pulumi.aws.rds.inputs.ProxyTargetState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an RDS DB proxy target resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const exampleProxy = new aws.rds.Proxy("exampleProxy", {
 *     debugLogging: false,
 *     engineFamily: "MYSQL",
 *     idleClientTimeout: 1800,
 *     requireTls: true,
 *     roleArn: aws_iam_role.example.arn,
 *     vpcSecurityGroupIds: [aws_security_group.example.id],
 *     vpcSubnetIds: [aws_subnet.example.id],
 *     auths: [{
 *         authScheme: "SECRETS",
 *         description: "example",
 *         iamAuth: "DISABLED",
 *         secretArn: aws_secretsmanager_secret.example.arn,
 *     }],
 *     tags: {
 *         Name: "example",
 *         Key: "value",
 *     },
 * });
 * const exampleProxyDefaultTargetGroup = new aws.rds.ProxyDefaultTargetGroup("exampleProxyDefaultTargetGroup", {
 *     dbProxyName: exampleProxy.name,
 *     connectionPoolConfig: {
 *         connectionBorrowTimeout: 120,
 *         initQuery: "SET x=1, y=2",
 *         maxConnectionsPercent: 100,
 *         maxIdleConnectionsPercent: 50,
 *         sessionPinningFilters: ["EXCLUDE_VARIABLE_SETS"],
 *     },
 * });
 * const exampleProxyTarget = new aws.rds.ProxyTarget("exampleProxyTarget", {
 *     dbInstanceIdentifier: aws_db_instance.example.id,
 *     dbProxyName: exampleProxy.name,
 *     targetGroupName: exampleProxyDefaultTargetGroup.name,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example_proxy = aws.rds.Proxy("exampleProxy",
 *     debug_logging=False,
 *     engine_family="MYSQL",
 *     idle_client_timeout=1800,
 *     require_tls=True,
 *     role_arn=aws_iam_role["example"]["arn"],
 *     vpc_security_group_ids=[aws_security_group["example"]["id"]],
 *     vpc_subnet_ids=[aws_subnet["example"]["id"]],
 *     auths=[aws.rds.ProxyAuthArgs(
 *         auth_scheme="SECRETS",
 *         description="example",
 *         iam_auth="DISABLED",
 *         secret_arn=aws_secretsmanager_secret["example"]["arn"],
 *     )],
 *     tags={
 *         "Name": "example",
 *         "Key": "value",
 *     })
 * example_proxy_default_target_group = aws.rds.ProxyDefaultTargetGroup("exampleProxyDefaultTargetGroup",
 *     db_proxy_name=example_proxy.name,
 *     connection_pool_config=aws.rds.ProxyDefaultTargetGroupConnectionPoolConfigArgs(
 *         connection_borrow_timeout=120,
 *         init_query="SET x=1, y=2",
 *         max_connections_percent=100,
 *         max_idle_connections_percent=50,
 *         session_pinning_filters=["EXCLUDE_VARIABLE_SETS"],
 *     ))
 * example_proxy_target = aws.rds.ProxyTarget("exampleProxyTarget",
 *     db_instance_identifier=aws_db_instance["example"]["id"],
 *     db_proxy_name=example_proxy.name,
 *     target_group_name=example_proxy_default_target_group.name)
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var exampleProxy = new Aws.Rds.Proxy("exampleProxy", new Aws.Rds.ProxyArgs
 *         {
 *             DebugLogging = false,
 *             EngineFamily = "MYSQL",
 *             IdleClientTimeout = 1800,
 *             RequireTls = true,
 *             RoleArn = aws_iam_role.Example.Arn,
 *             VpcSecurityGroupIds = 
 *             {
 *                 aws_security_group.Example.Id,
 *             },
 *             VpcSubnetIds = 
 *             {
 *                 aws_subnet.Example.Id,
 *             },
 *             Auths = 
 *             {
 *                 new Aws.Rds.Inputs.ProxyAuthArgs
 *                 {
 *                     AuthScheme = "SECRETS",
 *                     Description = "example",
 *                     IamAuth = "DISABLED",
 *                     SecretArn = aws_secretsmanager_secret.Example.Arn,
 *                 },
 *             },
 *             Tags = 
 *             {
 *                 { "Name", "example" },
 *                 { "Key", "value" },
 *             },
 *         });
 *         var exampleProxyDefaultTargetGroup = new Aws.Rds.ProxyDefaultTargetGroup("exampleProxyDefaultTargetGroup", new Aws.Rds.ProxyDefaultTargetGroupArgs
 *         {
 *             DbProxyName = exampleProxy.Name,
 *             ConnectionPoolConfig = new Aws.Rds.Inputs.ProxyDefaultTargetGroupConnectionPoolConfigArgs
 *             {
 *                 ConnectionBorrowTimeout = 120,
 *                 InitQuery = "SET x=1, y=2",
 *                 MaxConnectionsPercent = 100,
 *                 MaxIdleConnectionsPercent = 50,
 *                 SessionPinningFilters = 
 *                 {
 *                     "EXCLUDE_VARIABLE_SETS",
 *                 },
 *             },
 *         });
 *         var exampleProxyTarget = new Aws.Rds.ProxyTarget("exampleProxyTarget", new Aws.Rds.ProxyTargetArgs
 *         {
 *             DbInstanceIdentifier = aws_db_instance.Example.Id,
 *             DbProxyName = exampleProxy.Name,
 *             TargetGroupName = exampleProxyDefaultTargetGroup.Name,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/rds"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		exampleProxy, err := rds.NewProxy(ctx, "exampleProxy", &rds.ProxyArgs{
 * 			DebugLogging:      pulumi.Bool(false),
 * 			EngineFamily:      pulumi.String("MYSQL"),
 * 			IdleClientTimeout: pulumi.Int(1800),
 * 			RequireTls:        pulumi.Bool(true),
 * 			RoleArn:           pulumi.Any(aws_iam_role.Example.Arn),
 * 			VpcSecurityGroupIds: pulumi.StringArray{
 * 				pulumi.Any(aws_security_group.Example.Id),
 * 			},
 * 			VpcSubnetIds: pulumi.StringArray{
 * 				pulumi.Any(aws_subnet.Example.Id),
 * 			},
 * 			Auths: rds.ProxyAuthArray{
 * 				&rds.ProxyAuthArgs{
 * 					AuthScheme:  pulumi.String("SECRETS"),
 * 					Description: pulumi.String("example"),
 * 					IamAuth:     pulumi.String("DISABLED"),
 * 					SecretArn:   pulumi.Any(aws_secretsmanager_secret.Example.Arn),
 * 				},
 * 			},
 * 			Tags: pulumi.StringMap{
 * 				"Name": pulumi.String("example"),
 * 				"Key":  pulumi.String("value"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleProxyDefaultTargetGroup, err := rds.NewProxyDefaultTargetGroup(ctx, "exampleProxyDefaultTargetGroup", &rds.ProxyDefaultTargetGroupArgs{
 * 			DbProxyName: exampleProxy.Name,
 * 			ConnectionPoolConfig: &rds.ProxyDefaultTargetGroupConnectionPoolConfigArgs{
 * 				ConnectionBorrowTimeout:   pulumi.Int(120),
 * 				InitQuery:                 pulumi.String("SET x=1, y=2"),
 * 				MaxConnectionsPercent:     pulumi.Int(100),
 * 				MaxIdleConnectionsPercent: pulumi.Int(50),
 * 				SessionPinningFilters: pulumi.StringArray{
 * 					pulumi.String("EXCLUDE_VARIABLE_SETS"),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = rds.NewProxyTarget(ctx, "exampleProxyTarget", &rds.ProxyTargetArgs{
 * 			DbInstanceIdentifier: pulumi.Any(aws_db_instance.Example.Id),
 * 			DbProxyName:          exampleProxy.Name,
 * 			TargetGroupName:      exampleProxyDefaultTargetGroup.Name,
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * RDS DB Proxy Targets can be imported using the `db_proxy_name`, `target_group_name`, target type (e.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`), and resource identifier separated by forward slashes (`/`), e.g., Instances
 * 
 * ```sh
 *  $ pulumi import aws:rds/proxyTarget:ProxyTarget example example-proxy/default/RDS_INSTANCE/example-instance
 * ```
 * 
 *  Provisioned Clusters
 * 
 * ```sh
 *  $ pulumi import aws:rds/proxyTarget:ProxyTarget example example-proxy/default/TRACKED_CLUSTER/example-cluster
 * ```
 * 
 *  
 */
@ResourceType(type="aws:rds/proxyTarget:ProxyTarget")
public class ProxyTarget extends io.pulumi.resources.CustomResource {
    /**
     * DB cluster identifier.
     * 
     */
    @Export(name="dbClusterIdentifier", type=String.class, parameters={})
    private Output</* @Nullable */ String> dbClusterIdentifier;

    /**
     * @return DB cluster identifier.
     * 
     */
    public Output</* @Nullable */ String> getDbClusterIdentifier() {
        return this.dbClusterIdentifier;
    }
    /**
     * DB instance identifier.
     * 
     */
    @Export(name="dbInstanceIdentifier", type=String.class, parameters={})
    private Output</* @Nullable */ String> dbInstanceIdentifier;

    /**
     * @return DB instance identifier.
     * 
     */
    public Output</* @Nullable */ String> getDbInstanceIdentifier() {
        return this.dbInstanceIdentifier;
    }
    /**
     * The name of the DB proxy.
     * 
     */
    @Export(name="dbProxyName", type=String.class, parameters={})
    private Output<String> dbProxyName;

    /**
     * @return The name of the DB proxy.
     * 
     */
    public Output<String> getDbProxyName() {
        return this.dbProxyName;
    }
    /**
     * Hostname for the target RDS DB Instance. Only returned for `RDS_INSTANCE` type.
     * 
     */
    @Export(name="endpoint", type=String.class, parameters={})
    private Output<String> endpoint;

    /**
     * @return Hostname for the target RDS DB Instance. Only returned for `RDS_INSTANCE` type.
     * 
     */
    public Output<String> getEndpoint() {
        return this.endpoint;
    }
    /**
     * Port for the target RDS DB Instance or Aurora DB Cluster.
     * 
     */
    @Export(name="port", type=Integer.class, parameters={})
    private Output<Integer> port;

    /**
     * @return Port for the target RDS DB Instance or Aurora DB Cluster.
     * 
     */
    public Output<Integer> getPort() {
        return this.port;
    }
    /**
     * Identifier representing the DB Instance or DB Cluster target.
     * 
     */
    @Export(name="rdsResourceId", type=String.class, parameters={})
    private Output<String> rdsResourceId;

    /**
     * @return Identifier representing the DB Instance or DB Cluster target.
     * 
     */
    public Output<String> getRdsResourceId() {
        return this.rdsResourceId;
    }
    /**
     * Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.
     * 
     */
    @Export(name="targetArn", type=String.class, parameters={})
    private Output<String> targetArn;

    /**
     * @return Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.
     * 
     */
    public Output<String> getTargetArn() {
        return this.targetArn;
    }
    /**
     * The name of the target group.
     * 
     */
    @Export(name="targetGroupName", type=String.class, parameters={})
    private Output<String> targetGroupName;

    /**
     * @return The name of the target group.
     * 
     */
    public Output<String> getTargetGroupName() {
        return this.targetGroupName;
    }
    /**
     * DB Cluster identifier for the DB Instance target. Not returned unless manually importing an `RDS_INSTANCE` target that is part of a DB Cluster.
     * 
     */
    @Export(name="trackedClusterId", type=String.class, parameters={})
    private Output<String> trackedClusterId;

    /**
     * @return DB Cluster identifier for the DB Instance target. Not returned unless manually importing an `RDS_INSTANCE` target that is part of a DB Cluster.
     * 
     */
    public Output<String> getTrackedClusterId() {
        return this.trackedClusterId;
    }
    /**
     * Type of targetE.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of targetE.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`
     * 
     */
    public Output<String> getType() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProxyTarget(String name) {
        this(name, ProxyTargetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProxyTarget(String name, ProxyTargetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProxyTarget(String name, ProxyTargetArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/proxyTarget:ProxyTarget", name, args == null ? ProxyTargetArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private ProxyTarget(String name, Output<String> id, @Nullable ProxyTargetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:rds/proxyTarget:ProxyTarget", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProxyTarget get(String name, Output<String> id, @Nullable ProxyTargetState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ProxyTarget(name, id, state, options);
    }
}
