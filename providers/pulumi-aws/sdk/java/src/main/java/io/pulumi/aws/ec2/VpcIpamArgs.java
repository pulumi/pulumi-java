// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.ec2.inputs.VpcIpamOperatingRegionArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VpcIpamArgs extends io.pulumi.resources.ResourceArgs {

    public static final VpcIpamArgs Empty = new VpcIpamArgs();

    /**
     * A description for the IPAM.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Determines which locales can be chosen when you create pools. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the region_name parameter. You **must** set your provider block region as an operating_region.
     * 
     */
    @InputImport(name="operatingRegions", required=true)
    private final Input<List<VpcIpamOperatingRegionArgs>> operatingRegions;

    public Input<List<VpcIpamOperatingRegionArgs>> getOperatingRegions() {
        return this.operatingRegions;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public VpcIpamArgs(
        @Nullable Input<String> description,
        Input<List<VpcIpamOperatingRegionArgs>> operatingRegions,
        @Nullable Input<Map<String,String>> tags) {
        this.description = description;
        this.operatingRegions = Objects.requireNonNull(operatingRegions, "expected parameter 'operatingRegions' to be non-null");
        this.tags = tags;
    }

    private VpcIpamArgs() {
        this.description = Input.empty();
        this.operatingRegions = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpcIpamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private Input<List<VpcIpamOperatingRegionArgs>> operatingRegions;
        private @Nullable Input<Map<String,String>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(VpcIpamArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.operatingRegions = defaults.operatingRegions;
    	      this.tags = defaults.tags;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setOperatingRegions(Input<List<VpcIpamOperatingRegionArgs>> operatingRegions) {
            this.operatingRegions = Objects.requireNonNull(operatingRegions);
            return this;
        }

        public Builder setOperatingRegions(List<VpcIpamOperatingRegionArgs> operatingRegions) {
            this.operatingRegions = Input.of(Objects.requireNonNull(operatingRegions));
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }
        public VpcIpamArgs build() {
            return new VpcIpamArgs(description, operatingRegions, tags);
        }
    }
}
