// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.route53;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.route53.VpcAssociationAuthorizationArgs;
import io.pulumi.aws.route53.inputs.VpcAssociationAuthorizationState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Authorizes a VPC in a different account to be associated with a local Route53 Hosted Zone.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const alternate = new aws.Provider("alternate", {});
 * const exampleVpc = new aws.ec2.Vpc("exampleVpc", {
 *     cidrBlock: "10.6.0.0/16",
 *     enableDnsHostnames: true,
 *     enableDnsSupport: true,
 * });
 * const exampleZone = new aws.route53.Zone("exampleZone", {vpcs: [{
 *     vpcId: exampleVpc.id,
 * }]});
 * const alternateVpc = new aws.ec2.Vpc("alternateVpc", {
 *     cidrBlock: "10.7.0.0/16",
 *     enableDnsHostnames: true,
 *     enableDnsSupport: true,
 * }, {
 *     provider: "aws.alternate",
 * });
 * const exampleVpcAssociationAuthorization = new aws.route53.VpcAssociationAuthorization("exampleVpcAssociationAuthorization", {
 *     vpcId: alternateVpc.id,
 *     zoneId: exampleZone.id,
 * });
 * const exampleZoneAssociation = new aws.route53.ZoneAssociation("exampleZoneAssociation", {
 *     vpcId: exampleVpcAssociationAuthorization.vpcId,
 *     zoneId: exampleVpcAssociationAuthorization.zoneId,
 * }, {
 *     provider: "aws.alternate",
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * import pulumi_pulumi as pulumi
 * 
 * alternate = pulumi.providers.Aws("alternate")
 * example_vpc = aws.ec2.Vpc("exampleVpc",
 *     cidr_block="10.6.0.0/16",
 *     enable_dns_hostnames=True,
 *     enable_dns_support=True)
 * example_zone = aws.route53.Zone("exampleZone", vpcs=[aws.route53.ZoneVpcArgs(
 *     vpc_id=example_vpc.id,
 * )])
 * alternate_vpc = aws.ec2.Vpc("alternateVpc",
 *     cidr_block="10.7.0.0/16",
 *     enable_dns_hostnames=True,
 *     enable_dns_support=True,
 *     opts=pulumi.ResourceOptions(provider="aws.alternate"))
 * example_vpc_association_authorization = aws.route53.VpcAssociationAuthorization("exampleVpcAssociationAuthorization",
 *     vpc_id=alternate_vpc.id,
 *     zone_id=example_zone.id)
 * example_zone_association = aws.route53.ZoneAssociation("exampleZoneAssociation",
 *     vpc_id=example_vpc_association_authorization.vpc_id,
 *     zone_id=example_vpc_association_authorization.zone_id,
 *     opts=pulumi.ResourceOptions(provider="aws.alternate"))
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var alternate = new Aws.Provider("alternate", new Aws.ProviderArgs
 *         {
 *         });
 *         var exampleVpc = new Aws.Ec2.Vpc("exampleVpc", new Aws.Ec2.VpcArgs
 *         {
 *             CidrBlock = "10.6.0.0/16",
 *             EnableDnsHostnames = true,
 *             EnableDnsSupport = true,
 *         });
 *         var exampleZone = new Aws.Route53.Zone("exampleZone", new Aws.Route53.ZoneArgs
 *         {
 *             Vpcs = 
 *             {
 *                 new Aws.Route53.Inputs.ZoneVpcArgs
 *                 {
 *                     VpcId = exampleVpc.Id,
 *                 },
 *             },
 *         });
 *         var alternateVpc = new Aws.Ec2.Vpc("alternateVpc", new Aws.Ec2.VpcArgs
 *         {
 *             CidrBlock = "10.7.0.0/16",
 *             EnableDnsHostnames = true,
 *             EnableDnsSupport = true,
 *         }, new CustomResourceOptions
 *         {
 *             Provider = "aws.alternate",
 *         });
 *         var exampleVpcAssociationAuthorization = new Aws.Route53.VpcAssociationAuthorization("exampleVpcAssociationAuthorization", new Aws.Route53.VpcAssociationAuthorizationArgs
 *         {
 *             VpcId = alternateVpc.Id,
 *             ZoneId = exampleZone.Id,
 *         });
 *         var exampleZoneAssociation = new Aws.Route53.ZoneAssociation("exampleZoneAssociation", new Aws.Route53.ZoneAssociationArgs
 *         {
 *             VpcId = exampleVpcAssociationAuthorization.VpcId,
 *             ZoneId = exampleVpcAssociationAuthorization.ZoneId,
 *         }, new CustomResourceOptions
 *         {
 *             Provider = "aws.alternate",
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/providers"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/route53"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := providers.Newaws(ctx, "alternate", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleVpc, err := ec2.NewVpc(ctx, "exampleVpc", &ec2.VpcArgs{
 * 			CidrBlock:          pulumi.String("10.6.0.0/16"),
 * 			EnableDnsHostnames: pulumi.Bool(true),
 * 			EnableDnsSupport:   pulumi.Bool(true),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleZone, err := route53.NewZone(ctx, "exampleZone", &route53.ZoneArgs{
 * 			Vpcs: route53.ZoneVpcArray{
 * 				&route53.ZoneVpcArgs{
 * 					VpcId: exampleVpc.ID(),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		alternateVpc, err := ec2.NewVpc(ctx, "alternateVpc", &ec2.VpcArgs{
 * 			CidrBlock:          pulumi.String("10.7.0.0/16"),
 * 			EnableDnsHostnames: pulumi.Bool(true),
 * 			EnableDnsSupport:   pulumi.Bool(true),
 * 		}, pulumi.Provider("aws.alternate"))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		exampleVpcAssociationAuthorization, err := route53.NewVpcAssociationAuthorization(ctx, "exampleVpcAssociationAuthorization", &route53.VpcAssociationAuthorizationArgs{
 * 			VpcId:  alternateVpc.ID(),
 * 			ZoneId: exampleZone.ID(),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = route53.NewZoneAssociation(ctx, "exampleZoneAssociation", &route53.ZoneAssociationArgs{
 * 			VpcId:  exampleVpcAssociationAuthorization.VpcId,
 * 			ZoneId: exampleVpcAssociationAuthorization.ZoneId,
 * 		}, pulumi.Provider("aws.alternate"))
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Route 53 VPC Association Authorizations can be imported via the Hosted Zone ID and VPC ID, separated by a colon (`:`), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:route53/vpcAssociationAuthorization:VpcAssociationAuthorization example Z123456ABCDEFG:vpc-12345678
 * ```
 * 
 *  
 */
@ResourceType(type="aws:route53/vpcAssociationAuthorization:VpcAssociationAuthorization")
public class VpcAssociationAuthorization extends io.pulumi.resources.CustomResource {
    /**
     * The VPC to authorize for association with the private hosted zone.
     * 
     */
    @Export(name="vpcId", type=String.class, parameters={})
    private Output<String> vpcId;

    /**
     * @return The VPC to authorize for association with the private hosted zone.
     * 
     */
    public Output<String> getVpcId() {
        return this.vpcId;
    }
    /**
     * The VPC's region. Defaults to the region of the AWS provider.
     * 
     */
    @Export(name="vpcRegion", type=String.class, parameters={})
    private Output<String> vpcRegion;

    /**
     * @return The VPC's region. Defaults to the region of the AWS provider.
     * 
     */
    public Output<String> getVpcRegion() {
        return this.vpcRegion;
    }
    /**
     * The ID of the private hosted zone that you want to authorize associating a VPC with.
     * 
     */
    @Export(name="zoneId", type=String.class, parameters={})
    private Output<String> zoneId;

    /**
     * @return The ID of the private hosted zone that you want to authorize associating a VPC with.
     * 
     */
    public Output<String> getZoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpcAssociationAuthorization(String name) {
        this(name, VpcAssociationAuthorizationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpcAssociationAuthorization(String name, VpcAssociationAuthorizationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpcAssociationAuthorization(String name, VpcAssociationAuthorizationArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:route53/vpcAssociationAuthorization:VpcAssociationAuthorization", name, args == null ? VpcAssociationAuthorizationArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private VpcAssociationAuthorization(String name, Output<String> id, @Nullable VpcAssociationAuthorizationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:route53/vpcAssociationAuthorization:VpcAssociationAuthorization", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpcAssociationAuthorization get(String name, Output<String> id, @Nullable VpcAssociationAuthorizationState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VpcAssociationAuthorization(name, id, state, options);
    }
}
