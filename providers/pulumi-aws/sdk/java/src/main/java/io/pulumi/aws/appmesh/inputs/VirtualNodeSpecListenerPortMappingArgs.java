// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.appmesh.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class VirtualNodeSpecListenerPortMappingArgs extends io.pulumi.resources.ResourceArgs {

    public static final VirtualNodeSpecListenerPortMappingArgs Empty = new VirtualNodeSpecListenerPortMappingArgs();

    /**
     * The port used for the port mapping.
     * 
     */
    @InputImport(name="port", required=true)
      private final Input<Integer> port;

    public Input<Integer> getPort() {
        return this.port;
    }

    /**
     * The protocol used for the port mapping. Valid values are `http`, `http2`, `tcp` and `grpc`.
     * 
     */
    @InputImport(name="protocol", required=true)
      private final Input<String> protocol;

    public Input<String> getProtocol() {
        return this.protocol;
    }

    public VirtualNodeSpecListenerPortMappingArgs(
        Input<Integer> port,
        Input<String> protocol) {
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
        this.protocol = Objects.requireNonNull(protocol, "expected parameter 'protocol' to be non-null");
    }

    private VirtualNodeSpecListenerPortMappingArgs() {
        this.port = Input.empty();
        this.protocol = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualNodeSpecListenerPortMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> port;
        private Input<String> protocol;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualNodeSpecListenerPortMappingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
        }

        public Builder port(Input<Integer> port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public Builder port(Integer port) {
            this.port = Input.of(Objects.requireNonNull(port));
            return this;
        }

        public Builder protocol(Input<String> protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }

        public Builder protocol(String protocol) {
            this.protocol = Input.of(Objects.requireNonNull(protocol));
            return this;
        }
        public VirtualNodeSpecListenerPortMappingArgs build() {
            return new VirtualNodeSpecListenerPortMappingArgs(port, protocol);
        }
    }
}
