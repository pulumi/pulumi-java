// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.iam;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class UserGroupMembershipArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserGroupMembershipArgs Empty = new UserGroupMembershipArgs();

    /**
     * A list of IAM Groups to add the user to
     * 
     */
    @InputImport(name="groups", required=true)
      private final Input<List<String>> groups;

    public Input<List<String>> getGroups() {
        return this.groups;
    }

    /**
     * The name of the IAM User to add to groups
     * 
     */
    @InputImport(name="user", required=true)
      private final Input<String> user;

    public Input<String> getUser() {
        return this.user;
    }

    public UserGroupMembershipArgs(
        Input<List<String>> groups,
        Input<String> user) {
        this.groups = Objects.requireNonNull(groups, "expected parameter 'groups' to be non-null");
        this.user = Objects.requireNonNull(user, "expected parameter 'user' to be non-null");
    }

    private UserGroupMembershipArgs() {
        this.groups = Input.empty();
        this.user = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserGroupMembershipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> groups;
        private Input<String> user;

        public Builder() {
    	      // Empty
        }

        public Builder(UserGroupMembershipArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groups = defaults.groups;
    	      this.user = defaults.user;
        }

        public Builder setGroups(Input<List<String>> groups) {
            this.groups = Objects.requireNonNull(groups);
            return this;
        }

        public Builder setGroups(List<String> groups) {
            this.groups = Input.of(Objects.requireNonNull(groups));
            return this;
        }

        public Builder setUser(Input<String> user) {
            this.user = Objects.requireNonNull(user);
            return this;
        }

        public Builder setUser(String user) {
            this.user = Input.of(Objects.requireNonNull(user));
            return this;
        }
        public UserGroupMembershipArgs build() {
            return new UserGroupMembershipArgs(groups, user);
        }
    }
}
