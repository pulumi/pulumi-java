// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.glue.inputs;

import io.pulumi.aws.glue.inputs.UserDefinedFunctionResourceUriGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserDefinedFunctionState extends io.pulumi.resources.ResourceArgs {

    public static final UserDefinedFunctionState Empty = new UserDefinedFunctionState();

    @InputImport(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
     * 
     */
    @InputImport(name="catalogId")
      private final @Nullable Output<String> catalogId;

    public Output<String> getCatalogId() {
        return this.catalogId == null ? Output.empty() : this.catalogId;
    }

    /**
     * The Java class that contains the function code.
     * 
     */
    @InputImport(name="className")
      private final @Nullable Output<String> className;

    public Output<String> getClassName() {
        return this.className == null ? Output.empty() : this.className;
    }

    @InputImport(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime == null ? Output.empty() : this.createTime;
    }

    /**
     * The name of the Database to create the Function.
     * 
     */
    @InputImport(name="databaseName")
      private final @Nullable Output<String> databaseName;

    public Output<String> getDatabaseName() {
        return this.databaseName == null ? Output.empty() : this.databaseName;
    }

    /**
     * The name of the function.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The owner of the function.
     * 
     */
    @InputImport(name="ownerName")
      private final @Nullable Output<String> ownerName;

    public Output<String> getOwnerName() {
        return this.ownerName == null ? Output.empty() : this.ownerName;
    }

    /**
     * The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
     * 
     */
    @InputImport(name="ownerType")
      private final @Nullable Output<String> ownerType;

    public Output<String> getOwnerType() {
        return this.ownerType == null ? Output.empty() : this.ownerType;
    }

    /**
     * The configuration block for Resource URIs. See resource uris below for more details.
     * 
     */
    @InputImport(name="resourceUris")
      private final @Nullable Output<List<UserDefinedFunctionResourceUriGetArgs>> resourceUris;

    public Output<List<UserDefinedFunctionResourceUriGetArgs>> getResourceUris() {
        return this.resourceUris == null ? Output.empty() : this.resourceUris;
    }

    public UserDefinedFunctionState(
        @Nullable Output<String> arn,
        @Nullable Output<String> catalogId,
        @Nullable Output<String> className,
        @Nullable Output<String> createTime,
        @Nullable Output<String> databaseName,
        @Nullable Output<String> name,
        @Nullable Output<String> ownerName,
        @Nullable Output<String> ownerType,
        @Nullable Output<List<UserDefinedFunctionResourceUriGetArgs>> resourceUris) {
        this.arn = arn;
        this.catalogId = catalogId;
        this.className = className;
        this.createTime = createTime;
        this.databaseName = databaseName;
        this.name = name;
        this.ownerName = ownerName;
        this.ownerType = ownerType;
        this.resourceUris = resourceUris;
    }

    private UserDefinedFunctionState() {
        this.arn = Output.empty();
        this.catalogId = Output.empty();
        this.className = Output.empty();
        this.createTime = Output.empty();
        this.databaseName = Output.empty();
        this.name = Output.empty();
        this.ownerName = Output.empty();
        this.ownerType = Output.empty();
        this.resourceUris = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserDefinedFunctionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> arn;
        private @Nullable Output<String> catalogId;
        private @Nullable Output<String> className;
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> databaseName;
        private @Nullable Output<String> name;
        private @Nullable Output<String> ownerName;
        private @Nullable Output<String> ownerType;
        private @Nullable Output<List<UserDefinedFunctionResourceUriGetArgs>> resourceUris;

        public Builder() {
    	      // Empty
        }

        public Builder(UserDefinedFunctionState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.catalogId = defaults.catalogId;
    	      this.className = defaults.className;
    	      this.createTime = defaults.createTime;
    	      this.databaseName = defaults.databaseName;
    	      this.name = defaults.name;
    	      this.ownerName = defaults.ownerName;
    	      this.ownerType = defaults.ownerType;
    	      this.resourceUris = defaults.resourceUris;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder catalogId(@Nullable Output<String> catalogId) {
            this.catalogId = catalogId;
            return this;
        }

        public Builder catalogId(@Nullable String catalogId) {
            this.catalogId = Output.ofNullable(catalogId);
            return this;
        }

        public Builder className(@Nullable Output<String> className) {
            this.className = className;
            return this;
        }

        public Builder className(@Nullable String className) {
            this.className = Output.ofNullable(className);
            return this;
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder createTime(@Nullable String createTime) {
            this.createTime = Output.ofNullable(createTime);
            return this;
        }

        public Builder databaseName(@Nullable Output<String> databaseName) {
            this.databaseName = databaseName;
            return this;
        }

        public Builder databaseName(@Nullable String databaseName) {
            this.databaseName = Output.ofNullable(databaseName);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder ownerName(@Nullable Output<String> ownerName) {
            this.ownerName = ownerName;
            return this;
        }

        public Builder ownerName(@Nullable String ownerName) {
            this.ownerName = Output.ofNullable(ownerName);
            return this;
        }

        public Builder ownerType(@Nullable Output<String> ownerType) {
            this.ownerType = ownerType;
            return this;
        }

        public Builder ownerType(@Nullable String ownerType) {
            this.ownerType = Output.ofNullable(ownerType);
            return this;
        }

        public Builder resourceUris(@Nullable Output<List<UserDefinedFunctionResourceUriGetArgs>> resourceUris) {
            this.resourceUris = resourceUris;
            return this;
        }

        public Builder resourceUris(@Nullable List<UserDefinedFunctionResourceUriGetArgs> resourceUris) {
            this.resourceUris = Output.ofNullable(resourceUris);
            return this;
        }
        public UserDefinedFunctionState build() {
            return new UserDefinedFunctionState(arn, catalogId, className, createTime, databaseName, name, ownerName, ownerType, resourceUris);
        }
    }
}
