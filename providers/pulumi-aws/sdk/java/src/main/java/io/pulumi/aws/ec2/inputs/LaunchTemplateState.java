// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.inputs;

import io.pulumi.aws.ec2.inputs.LaunchTemplateBlockDeviceMappingGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateCapacityReservationSpecificationGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateCpuOptionsGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateCreditSpecificationGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateElasticGpuSpecificationGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateElasticInferenceAcceleratorGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateEnclaveOptionsGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateHibernationOptionsGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateIamInstanceProfileGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateInstanceMarketOptionsGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateLicenseSpecificationGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateMetadataOptionsGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateMonitoringGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateNetworkInterfaceGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplatePlacementGetArgs;
import io.pulumi.aws.ec2.inputs.LaunchTemplateTagSpecificationGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class LaunchTemplateState extends io.pulumi.resources.ResourceArgs {

    public static final LaunchTemplateState Empty = new LaunchTemplateState();

    /**
     * The Amazon Resource Name (ARN) of the instance profile.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * Specify volumes to attach to the instance besides the volumes specified by the AMI.
     * See Block Devices below for details.
     * 
     */
    @InputImport(name="blockDeviceMappings")
      private final @Nullable Input<List<LaunchTemplateBlockDeviceMappingGetArgs>> blockDeviceMappings;

    public Input<List<LaunchTemplateBlockDeviceMappingGetArgs>> getBlockDeviceMappings() {
        return this.blockDeviceMappings == null ? Input.empty() : this.blockDeviceMappings;
    }

    /**
     * Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
     * 
     */
    @InputImport(name="capacityReservationSpecification")
      private final @Nullable Input<LaunchTemplateCapacityReservationSpecificationGetArgs> capacityReservationSpecification;

    public Input<LaunchTemplateCapacityReservationSpecificationGetArgs> getCapacityReservationSpecification() {
        return this.capacityReservationSpecification == null ? Input.empty() : this.capacityReservationSpecification;
    }

    /**
     * The CPU options for the instance. See CPU Options below for more details.
     * 
     */
    @InputImport(name="cpuOptions")
      private final @Nullable Input<LaunchTemplateCpuOptionsGetArgs> cpuOptions;

    public Input<LaunchTemplateCpuOptionsGetArgs> getCpuOptions() {
        return this.cpuOptions == null ? Input.empty() : this.cpuOptions;
    }

    /**
     * Customize the credit specification of the instance. See Credit
     * Specification below for more details.
     * 
     */
    @InputImport(name="creditSpecification")
      private final @Nullable Input<LaunchTemplateCreditSpecificationGetArgs> creditSpecification;

    public Input<LaunchTemplateCreditSpecificationGetArgs> getCreditSpecification() {
        return this.creditSpecification == null ? Input.empty() : this.creditSpecification;
    }

    /**
     * Default Version of the launch template.
     * 
     */
    @InputImport(name="defaultVersion")
      private final @Nullable Input<Integer> defaultVersion;

    public Input<Integer> getDefaultVersion() {
        return this.defaultVersion == null ? Input.empty() : this.defaultVersion;
    }

    /**
     * Description of the launch template.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * If `true`, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
     * 
     */
    @InputImport(name="disableApiTermination")
      private final @Nullable Input<Boolean> disableApiTermination;

    public Input<Boolean> getDisableApiTermination() {
        return this.disableApiTermination == null ? Input.empty() : this.disableApiTermination;
    }

    /**
     * If `true`, the launched EC2 instance will be EBS-optimized.
     * 
     */
    @InputImport(name="ebsOptimized")
      private final @Nullable Input<String> ebsOptimized;

    public Input<String> getEbsOptimized() {
        return this.ebsOptimized == null ? Input.empty() : this.ebsOptimized;
    }

    /**
     * The elastic GPU to attach to the instance. See Elastic GPU
     * below for more details.
     * 
     */
    @InputImport(name="elasticGpuSpecifications")
      private final @Nullable Input<List<LaunchTemplateElasticGpuSpecificationGetArgs>> elasticGpuSpecifications;

    public Input<List<LaunchTemplateElasticGpuSpecificationGetArgs>> getElasticGpuSpecifications() {
        return this.elasticGpuSpecifications == null ? Input.empty() : this.elasticGpuSpecifications;
    }

    /**
     * Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
     * 
     */
    @InputImport(name="elasticInferenceAccelerator")
      private final @Nullable Input<LaunchTemplateElasticInferenceAcceleratorGetArgs> elasticInferenceAccelerator;

    public Input<LaunchTemplateElasticInferenceAcceleratorGetArgs> getElasticInferenceAccelerator() {
        return this.elasticInferenceAccelerator == null ? Input.empty() : this.elasticInferenceAccelerator;
    }

    /**
     * Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
     * 
     */
    @InputImport(name="enclaveOptions")
      private final @Nullable Input<LaunchTemplateEnclaveOptionsGetArgs> enclaveOptions;

    public Input<LaunchTemplateEnclaveOptionsGetArgs> getEnclaveOptions() {
        return this.enclaveOptions == null ? Input.empty() : this.enclaveOptions;
    }

    /**
     * The hibernation options for the instance. See Hibernation Options below for more details.
     * 
     */
    @InputImport(name="hibernationOptions")
      private final @Nullable Input<LaunchTemplateHibernationOptionsGetArgs> hibernationOptions;

    public Input<LaunchTemplateHibernationOptionsGetArgs> getHibernationOptions() {
        return this.hibernationOptions == null ? Input.empty() : this.hibernationOptions;
    }

    /**
     * The IAM Instance Profile to launch the instance with. See Instance Profile
     * below for more details.
     * 
     */
    @InputImport(name="iamInstanceProfile")
      private final @Nullable Input<LaunchTemplateIamInstanceProfileGetArgs> iamInstanceProfile;

    public Input<LaunchTemplateIamInstanceProfileGetArgs> getIamInstanceProfile() {
        return this.iamInstanceProfile == null ? Input.empty() : this.iamInstanceProfile;
    }

    /**
     * The AMI from which to launch the instance.
     * 
     */
    @InputImport(name="imageId")
      private final @Nullable Input<String> imageId;

    public Input<String> getImageId() {
        return this.imageId == null ? Input.empty() : this.imageId;
    }

    /**
     * Shutdown behavior for the instance. Can be `stop` or `terminate`.
     * (Default: `stop`).
     * 
     */
    @InputImport(name="instanceInitiatedShutdownBehavior")
      private final @Nullable Input<String> instanceInitiatedShutdownBehavior;

    public Input<String> getInstanceInitiatedShutdownBehavior() {
        return this.instanceInitiatedShutdownBehavior == null ? Input.empty() : this.instanceInitiatedShutdownBehavior;
    }

    /**
     * The market (purchasing) option for the instance. See Market Options
     * below for details.
     * 
     */
    @InputImport(name="instanceMarketOptions")
      private final @Nullable Input<LaunchTemplateInstanceMarketOptionsGetArgs> instanceMarketOptions;

    public Input<LaunchTemplateInstanceMarketOptionsGetArgs> getInstanceMarketOptions() {
        return this.instanceMarketOptions == null ? Input.empty() : this.instanceMarketOptions;
    }

    /**
     * The type of the instance.
     * 
     */
    @InputImport(name="instanceType")
      private final @Nullable Input<String> instanceType;

    public Input<String> getInstanceType() {
        return this.instanceType == null ? Input.empty() : this.instanceType;
    }

    /**
     * The kernel ID.
     * 
     */
    @InputImport(name="kernelId")
      private final @Nullable Input<String> kernelId;

    public Input<String> getKernelId() {
        return this.kernelId == null ? Input.empty() : this.kernelId;
    }

    /**
     * The key name to use for the instance.
     * 
     */
    @InputImport(name="keyName")
      private final @Nullable Input<String> keyName;

    public Input<String> getKeyName() {
        return this.keyName == null ? Input.empty() : this.keyName;
    }

    /**
     * The latest version of the launch template.
     * 
     */
    @InputImport(name="latestVersion")
      private final @Nullable Input<Integer> latestVersion;

    public Input<Integer> getLatestVersion() {
        return this.latestVersion == null ? Input.empty() : this.latestVersion;
    }

    /**
     * A list of license specifications to associate with. See License Specification below for more details.
     * 
     */
    @InputImport(name="licenseSpecifications")
      private final @Nullable Input<List<LaunchTemplateLicenseSpecificationGetArgs>> licenseSpecifications;

    public Input<List<LaunchTemplateLicenseSpecificationGetArgs>> getLicenseSpecifications() {
        return this.licenseSpecifications == null ? Input.empty() : this.licenseSpecifications;
    }

    /**
     * Customize the metadata options for the instance. See Metadata Options below for more details.
     * 
     */
    @InputImport(name="metadataOptions")
      private final @Nullable Input<LaunchTemplateMetadataOptionsGetArgs> metadataOptions;

    public Input<LaunchTemplateMetadataOptionsGetArgs> getMetadataOptions() {
        return this.metadataOptions == null ? Input.empty() : this.metadataOptions;
    }

    /**
     * The monitoring option for the instance. See Monitoring below for more details.
     * 
     */
    @InputImport(name="monitoring")
      private final @Nullable Input<LaunchTemplateMonitoringGetArgs> monitoring;

    public Input<LaunchTemplateMonitoringGetArgs> getMonitoring() {
        return this.monitoring == null ? Input.empty() : this.monitoring;
    }

    /**
     * The name of the launch template. If you leave this blank, this provider will auto-generate a unique name.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @InputImport(name="namePrefix")
      private final @Nullable Input<String> namePrefix;

    public Input<String> getNamePrefix() {
        return this.namePrefix == null ? Input.empty() : this.namePrefix;
    }

    /**
     * Customize network interfaces to be attached at instance boot time. See Network
     * Interfaces below for more details.
     * 
     */
    @InputImport(name="networkInterfaces")
      private final @Nullable Input<List<LaunchTemplateNetworkInterfaceGetArgs>> networkInterfaces;

    public Input<List<LaunchTemplateNetworkInterfaceGetArgs>> getNetworkInterfaces() {
        return this.networkInterfaces == null ? Input.empty() : this.networkInterfaces;
    }

    /**
     * The placement of the instance. See Placement below for more details.
     * 
     */
    @InputImport(name="placement")
      private final @Nullable Input<LaunchTemplatePlacementGetArgs> placement;

    public Input<LaunchTemplatePlacementGetArgs> getPlacement() {
        return this.placement == null ? Input.empty() : this.placement;
    }

    /**
     * The ID of the RAM disk.
     * 
     */
    @InputImport(name="ramDiskId")
      private final @Nullable Input<String> ramDiskId;

    public Input<String> getRamDiskId() {
        return this.ramDiskId == null ? Input.empty() : this.ramDiskId;
    }

    /**
     * A list of security group names to associate with. If you are creating Instances in a VPC, use
     * `vpc_security_group_ids` instead.
     * 
     */
    @InputImport(name="securityGroupNames")
      private final @Nullable Input<List<String>> securityGroupNames;

    public Input<List<String>> getSecurityGroupNames() {
        return this.securityGroupNames == null ? Input.empty() : this.securityGroupNames;
    }

    /**
     * The tags to apply to the resources during launch. See Tag Specifications below for more details.
     * 
     */
    @InputImport(name="tagSpecifications")
      private final @Nullable Input<List<LaunchTemplateTagSpecificationGetArgs>> tagSpecifications;

    public Input<List<LaunchTemplateTagSpecificationGetArgs>> getTagSpecifications() {
        return this.tagSpecifications == null ? Input.empty() : this.tagSpecifications;
    }

    /**
     * A map of tags to assign to the launch template. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    /**
     * Whether to update Default Version each update. Conflicts with `default_version`.
     * 
     */
    @InputImport(name="updateDefaultVersion")
      private final @Nullable Input<Boolean> updateDefaultVersion;

    public Input<Boolean> getUpdateDefaultVersion() {
        return this.updateDefaultVersion == null ? Input.empty() : this.updateDefaultVersion;
    }

    /**
     * The Base64-encoded user data to provide when launching the instance.
     * 
     */
    @InputImport(name="userData")
      private final @Nullable Input<String> userData;

    public Input<String> getUserData() {
        return this.userData == null ? Input.empty() : this.userData;
    }

    /**
     * A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
     * 
     */
    @InputImport(name="vpcSecurityGroupIds")
      private final @Nullable Input<List<String>> vpcSecurityGroupIds;

    public Input<List<String>> getVpcSecurityGroupIds() {
        return this.vpcSecurityGroupIds == null ? Input.empty() : this.vpcSecurityGroupIds;
    }

    public LaunchTemplateState(
        @Nullable Input<String> arn,
        @Nullable Input<List<LaunchTemplateBlockDeviceMappingGetArgs>> blockDeviceMappings,
        @Nullable Input<LaunchTemplateCapacityReservationSpecificationGetArgs> capacityReservationSpecification,
        @Nullable Input<LaunchTemplateCpuOptionsGetArgs> cpuOptions,
        @Nullable Input<LaunchTemplateCreditSpecificationGetArgs> creditSpecification,
        @Nullable Input<Integer> defaultVersion,
        @Nullable Input<String> description,
        @Nullable Input<Boolean> disableApiTermination,
        @Nullable Input<String> ebsOptimized,
        @Nullable Input<List<LaunchTemplateElasticGpuSpecificationGetArgs>> elasticGpuSpecifications,
        @Nullable Input<LaunchTemplateElasticInferenceAcceleratorGetArgs> elasticInferenceAccelerator,
        @Nullable Input<LaunchTemplateEnclaveOptionsGetArgs> enclaveOptions,
        @Nullable Input<LaunchTemplateHibernationOptionsGetArgs> hibernationOptions,
        @Nullable Input<LaunchTemplateIamInstanceProfileGetArgs> iamInstanceProfile,
        @Nullable Input<String> imageId,
        @Nullable Input<String> instanceInitiatedShutdownBehavior,
        @Nullable Input<LaunchTemplateInstanceMarketOptionsGetArgs> instanceMarketOptions,
        @Nullable Input<String> instanceType,
        @Nullable Input<String> kernelId,
        @Nullable Input<String> keyName,
        @Nullable Input<Integer> latestVersion,
        @Nullable Input<List<LaunchTemplateLicenseSpecificationGetArgs>> licenseSpecifications,
        @Nullable Input<LaunchTemplateMetadataOptionsGetArgs> metadataOptions,
        @Nullable Input<LaunchTemplateMonitoringGetArgs> monitoring,
        @Nullable Input<String> name,
        @Nullable Input<String> namePrefix,
        @Nullable Input<List<LaunchTemplateNetworkInterfaceGetArgs>> networkInterfaces,
        @Nullable Input<LaunchTemplatePlacementGetArgs> placement,
        @Nullable Input<String> ramDiskId,
        @Nullable Input<List<String>> securityGroupNames,
        @Nullable Input<List<LaunchTemplateTagSpecificationGetArgs>> tagSpecifications,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll,
        @Nullable Input<Boolean> updateDefaultVersion,
        @Nullable Input<String> userData,
        @Nullable Input<List<String>> vpcSecurityGroupIds) {
        this.arn = arn;
        this.blockDeviceMappings = blockDeviceMappings;
        this.capacityReservationSpecification = capacityReservationSpecification;
        this.cpuOptions = cpuOptions;
        this.creditSpecification = creditSpecification;
        this.defaultVersion = defaultVersion;
        this.description = description;
        this.disableApiTermination = disableApiTermination;
        this.ebsOptimized = ebsOptimized;
        this.elasticGpuSpecifications = elasticGpuSpecifications;
        this.elasticInferenceAccelerator = elasticInferenceAccelerator;
        this.enclaveOptions = enclaveOptions;
        this.hibernationOptions = hibernationOptions;
        this.iamInstanceProfile = iamInstanceProfile;
        this.imageId = imageId;
        this.instanceInitiatedShutdownBehavior = instanceInitiatedShutdownBehavior;
        this.instanceMarketOptions = instanceMarketOptions;
        this.instanceType = instanceType;
        this.kernelId = kernelId;
        this.keyName = keyName;
        this.latestVersion = latestVersion;
        this.licenseSpecifications = licenseSpecifications;
        this.metadataOptions = metadataOptions;
        this.monitoring = monitoring;
        this.name = name;
        this.namePrefix = namePrefix;
        this.networkInterfaces = networkInterfaces;
        this.placement = placement;
        this.ramDiskId = ramDiskId;
        this.securityGroupNames = securityGroupNames;
        this.tagSpecifications = tagSpecifications;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.updateDefaultVersion = updateDefaultVersion;
        this.userData = userData;
        this.vpcSecurityGroupIds = vpcSecurityGroupIds;
    }

    private LaunchTemplateState() {
        this.arn = Input.empty();
        this.blockDeviceMappings = Input.empty();
        this.capacityReservationSpecification = Input.empty();
        this.cpuOptions = Input.empty();
        this.creditSpecification = Input.empty();
        this.defaultVersion = Input.empty();
        this.description = Input.empty();
        this.disableApiTermination = Input.empty();
        this.ebsOptimized = Input.empty();
        this.elasticGpuSpecifications = Input.empty();
        this.elasticInferenceAccelerator = Input.empty();
        this.enclaveOptions = Input.empty();
        this.hibernationOptions = Input.empty();
        this.iamInstanceProfile = Input.empty();
        this.imageId = Input.empty();
        this.instanceInitiatedShutdownBehavior = Input.empty();
        this.instanceMarketOptions = Input.empty();
        this.instanceType = Input.empty();
        this.kernelId = Input.empty();
        this.keyName = Input.empty();
        this.latestVersion = Input.empty();
        this.licenseSpecifications = Input.empty();
        this.metadataOptions = Input.empty();
        this.monitoring = Input.empty();
        this.name = Input.empty();
        this.namePrefix = Input.empty();
        this.networkInterfaces = Input.empty();
        this.placement = Input.empty();
        this.ramDiskId = Input.empty();
        this.securityGroupNames = Input.empty();
        this.tagSpecifications = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
        this.updateDefaultVersion = Input.empty();
        this.userData = Input.empty();
        this.vpcSecurityGroupIds = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LaunchTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> arn;
        private @Nullable Input<List<LaunchTemplateBlockDeviceMappingGetArgs>> blockDeviceMappings;
        private @Nullable Input<LaunchTemplateCapacityReservationSpecificationGetArgs> capacityReservationSpecification;
        private @Nullable Input<LaunchTemplateCpuOptionsGetArgs> cpuOptions;
        private @Nullable Input<LaunchTemplateCreditSpecificationGetArgs> creditSpecification;
        private @Nullable Input<Integer> defaultVersion;
        private @Nullable Input<String> description;
        private @Nullable Input<Boolean> disableApiTermination;
        private @Nullable Input<String> ebsOptimized;
        private @Nullable Input<List<LaunchTemplateElasticGpuSpecificationGetArgs>> elasticGpuSpecifications;
        private @Nullable Input<LaunchTemplateElasticInferenceAcceleratorGetArgs> elasticInferenceAccelerator;
        private @Nullable Input<LaunchTemplateEnclaveOptionsGetArgs> enclaveOptions;
        private @Nullable Input<LaunchTemplateHibernationOptionsGetArgs> hibernationOptions;
        private @Nullable Input<LaunchTemplateIamInstanceProfileGetArgs> iamInstanceProfile;
        private @Nullable Input<String> imageId;
        private @Nullable Input<String> instanceInitiatedShutdownBehavior;
        private @Nullable Input<LaunchTemplateInstanceMarketOptionsGetArgs> instanceMarketOptions;
        private @Nullable Input<String> instanceType;
        private @Nullable Input<String> kernelId;
        private @Nullable Input<String> keyName;
        private @Nullable Input<Integer> latestVersion;
        private @Nullable Input<List<LaunchTemplateLicenseSpecificationGetArgs>> licenseSpecifications;
        private @Nullable Input<LaunchTemplateMetadataOptionsGetArgs> metadataOptions;
        private @Nullable Input<LaunchTemplateMonitoringGetArgs> monitoring;
        private @Nullable Input<String> name;
        private @Nullable Input<String> namePrefix;
        private @Nullable Input<List<LaunchTemplateNetworkInterfaceGetArgs>> networkInterfaces;
        private @Nullable Input<LaunchTemplatePlacementGetArgs> placement;
        private @Nullable Input<String> ramDiskId;
        private @Nullable Input<List<String>> securityGroupNames;
        private @Nullable Input<List<LaunchTemplateTagSpecificationGetArgs>> tagSpecifications;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;
        private @Nullable Input<Boolean> updateDefaultVersion;
        private @Nullable Input<String> userData;
        private @Nullable Input<List<String>> vpcSecurityGroupIds;

        public Builder() {
    	      // Empty
        }

        public Builder(LaunchTemplateState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.blockDeviceMappings = defaults.blockDeviceMappings;
    	      this.capacityReservationSpecification = defaults.capacityReservationSpecification;
    	      this.cpuOptions = defaults.cpuOptions;
    	      this.creditSpecification = defaults.creditSpecification;
    	      this.defaultVersion = defaults.defaultVersion;
    	      this.description = defaults.description;
    	      this.disableApiTermination = defaults.disableApiTermination;
    	      this.ebsOptimized = defaults.ebsOptimized;
    	      this.elasticGpuSpecifications = defaults.elasticGpuSpecifications;
    	      this.elasticInferenceAccelerator = defaults.elasticInferenceAccelerator;
    	      this.enclaveOptions = defaults.enclaveOptions;
    	      this.hibernationOptions = defaults.hibernationOptions;
    	      this.iamInstanceProfile = defaults.iamInstanceProfile;
    	      this.imageId = defaults.imageId;
    	      this.instanceInitiatedShutdownBehavior = defaults.instanceInitiatedShutdownBehavior;
    	      this.instanceMarketOptions = defaults.instanceMarketOptions;
    	      this.instanceType = defaults.instanceType;
    	      this.kernelId = defaults.kernelId;
    	      this.keyName = defaults.keyName;
    	      this.latestVersion = defaults.latestVersion;
    	      this.licenseSpecifications = defaults.licenseSpecifications;
    	      this.metadataOptions = defaults.metadataOptions;
    	      this.monitoring = defaults.monitoring;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.placement = defaults.placement;
    	      this.ramDiskId = defaults.ramDiskId;
    	      this.securityGroupNames = defaults.securityGroupNames;
    	      this.tagSpecifications = defaults.tagSpecifications;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.updateDefaultVersion = defaults.updateDefaultVersion;
    	      this.userData = defaults.userData;
    	      this.vpcSecurityGroupIds = defaults.vpcSecurityGroupIds;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setBlockDeviceMappings(@Nullable Input<List<LaunchTemplateBlockDeviceMappingGetArgs>> blockDeviceMappings) {
            this.blockDeviceMappings = blockDeviceMappings;
            return this;
        }

        public Builder setBlockDeviceMappings(@Nullable List<LaunchTemplateBlockDeviceMappingGetArgs> blockDeviceMappings) {
            this.blockDeviceMappings = Input.ofNullable(blockDeviceMappings);
            return this;
        }

        public Builder setCapacityReservationSpecification(@Nullable Input<LaunchTemplateCapacityReservationSpecificationGetArgs> capacityReservationSpecification) {
            this.capacityReservationSpecification = capacityReservationSpecification;
            return this;
        }

        public Builder setCapacityReservationSpecification(@Nullable LaunchTemplateCapacityReservationSpecificationGetArgs capacityReservationSpecification) {
            this.capacityReservationSpecification = Input.ofNullable(capacityReservationSpecification);
            return this;
        }

        public Builder setCpuOptions(@Nullable Input<LaunchTemplateCpuOptionsGetArgs> cpuOptions) {
            this.cpuOptions = cpuOptions;
            return this;
        }

        public Builder setCpuOptions(@Nullable LaunchTemplateCpuOptionsGetArgs cpuOptions) {
            this.cpuOptions = Input.ofNullable(cpuOptions);
            return this;
        }

        public Builder setCreditSpecification(@Nullable Input<LaunchTemplateCreditSpecificationGetArgs> creditSpecification) {
            this.creditSpecification = creditSpecification;
            return this;
        }

        public Builder setCreditSpecification(@Nullable LaunchTemplateCreditSpecificationGetArgs creditSpecification) {
            this.creditSpecification = Input.ofNullable(creditSpecification);
            return this;
        }

        public Builder setDefaultVersion(@Nullable Input<Integer> defaultVersion) {
            this.defaultVersion = defaultVersion;
            return this;
        }

        public Builder setDefaultVersion(@Nullable Integer defaultVersion) {
            this.defaultVersion = Input.ofNullable(defaultVersion);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisableApiTermination(@Nullable Input<Boolean> disableApiTermination) {
            this.disableApiTermination = disableApiTermination;
            return this;
        }

        public Builder setDisableApiTermination(@Nullable Boolean disableApiTermination) {
            this.disableApiTermination = Input.ofNullable(disableApiTermination);
            return this;
        }

        public Builder setEbsOptimized(@Nullable Input<String> ebsOptimized) {
            this.ebsOptimized = ebsOptimized;
            return this;
        }

        public Builder setEbsOptimized(@Nullable String ebsOptimized) {
            this.ebsOptimized = Input.ofNullable(ebsOptimized);
            return this;
        }

        public Builder setElasticGpuSpecifications(@Nullable Input<List<LaunchTemplateElasticGpuSpecificationGetArgs>> elasticGpuSpecifications) {
            this.elasticGpuSpecifications = elasticGpuSpecifications;
            return this;
        }

        public Builder setElasticGpuSpecifications(@Nullable List<LaunchTemplateElasticGpuSpecificationGetArgs> elasticGpuSpecifications) {
            this.elasticGpuSpecifications = Input.ofNullable(elasticGpuSpecifications);
            return this;
        }

        public Builder setElasticInferenceAccelerator(@Nullable Input<LaunchTemplateElasticInferenceAcceleratorGetArgs> elasticInferenceAccelerator) {
            this.elasticInferenceAccelerator = elasticInferenceAccelerator;
            return this;
        }

        public Builder setElasticInferenceAccelerator(@Nullable LaunchTemplateElasticInferenceAcceleratorGetArgs elasticInferenceAccelerator) {
            this.elasticInferenceAccelerator = Input.ofNullable(elasticInferenceAccelerator);
            return this;
        }

        public Builder setEnclaveOptions(@Nullable Input<LaunchTemplateEnclaveOptionsGetArgs> enclaveOptions) {
            this.enclaveOptions = enclaveOptions;
            return this;
        }

        public Builder setEnclaveOptions(@Nullable LaunchTemplateEnclaveOptionsGetArgs enclaveOptions) {
            this.enclaveOptions = Input.ofNullable(enclaveOptions);
            return this;
        }

        public Builder setHibernationOptions(@Nullable Input<LaunchTemplateHibernationOptionsGetArgs> hibernationOptions) {
            this.hibernationOptions = hibernationOptions;
            return this;
        }

        public Builder setHibernationOptions(@Nullable LaunchTemplateHibernationOptionsGetArgs hibernationOptions) {
            this.hibernationOptions = Input.ofNullable(hibernationOptions);
            return this;
        }

        public Builder setIamInstanceProfile(@Nullable Input<LaunchTemplateIamInstanceProfileGetArgs> iamInstanceProfile) {
            this.iamInstanceProfile = iamInstanceProfile;
            return this;
        }

        public Builder setIamInstanceProfile(@Nullable LaunchTemplateIamInstanceProfileGetArgs iamInstanceProfile) {
            this.iamInstanceProfile = Input.ofNullable(iamInstanceProfile);
            return this;
        }

        public Builder setImageId(@Nullable Input<String> imageId) {
            this.imageId = imageId;
            return this;
        }

        public Builder setImageId(@Nullable String imageId) {
            this.imageId = Input.ofNullable(imageId);
            return this;
        }

        public Builder setInstanceInitiatedShutdownBehavior(@Nullable Input<String> instanceInitiatedShutdownBehavior) {
            this.instanceInitiatedShutdownBehavior = instanceInitiatedShutdownBehavior;
            return this;
        }

        public Builder setInstanceInitiatedShutdownBehavior(@Nullable String instanceInitiatedShutdownBehavior) {
            this.instanceInitiatedShutdownBehavior = Input.ofNullable(instanceInitiatedShutdownBehavior);
            return this;
        }

        public Builder setInstanceMarketOptions(@Nullable Input<LaunchTemplateInstanceMarketOptionsGetArgs> instanceMarketOptions) {
            this.instanceMarketOptions = instanceMarketOptions;
            return this;
        }

        public Builder setInstanceMarketOptions(@Nullable LaunchTemplateInstanceMarketOptionsGetArgs instanceMarketOptions) {
            this.instanceMarketOptions = Input.ofNullable(instanceMarketOptions);
            return this;
        }

        public Builder setInstanceType(@Nullable Input<String> instanceType) {
            this.instanceType = instanceType;
            return this;
        }

        public Builder setInstanceType(@Nullable String instanceType) {
            this.instanceType = Input.ofNullable(instanceType);
            return this;
        }

        public Builder setKernelId(@Nullable Input<String> kernelId) {
            this.kernelId = kernelId;
            return this;
        }

        public Builder setKernelId(@Nullable String kernelId) {
            this.kernelId = Input.ofNullable(kernelId);
            return this;
        }

        public Builder setKeyName(@Nullable Input<String> keyName) {
            this.keyName = keyName;
            return this;
        }

        public Builder setKeyName(@Nullable String keyName) {
            this.keyName = Input.ofNullable(keyName);
            return this;
        }

        public Builder setLatestVersion(@Nullable Input<Integer> latestVersion) {
            this.latestVersion = latestVersion;
            return this;
        }

        public Builder setLatestVersion(@Nullable Integer latestVersion) {
            this.latestVersion = Input.ofNullable(latestVersion);
            return this;
        }

        public Builder setLicenseSpecifications(@Nullable Input<List<LaunchTemplateLicenseSpecificationGetArgs>> licenseSpecifications) {
            this.licenseSpecifications = licenseSpecifications;
            return this;
        }

        public Builder setLicenseSpecifications(@Nullable List<LaunchTemplateLicenseSpecificationGetArgs> licenseSpecifications) {
            this.licenseSpecifications = Input.ofNullable(licenseSpecifications);
            return this;
        }

        public Builder setMetadataOptions(@Nullable Input<LaunchTemplateMetadataOptionsGetArgs> metadataOptions) {
            this.metadataOptions = metadataOptions;
            return this;
        }

        public Builder setMetadataOptions(@Nullable LaunchTemplateMetadataOptionsGetArgs metadataOptions) {
            this.metadataOptions = Input.ofNullable(metadataOptions);
            return this;
        }

        public Builder setMonitoring(@Nullable Input<LaunchTemplateMonitoringGetArgs> monitoring) {
            this.monitoring = monitoring;
            return this;
        }

        public Builder setMonitoring(@Nullable LaunchTemplateMonitoringGetArgs monitoring) {
            this.monitoring = Input.ofNullable(monitoring);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNamePrefix(@Nullable Input<String> namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }

        public Builder setNamePrefix(@Nullable String namePrefix) {
            this.namePrefix = Input.ofNullable(namePrefix);
            return this;
        }

        public Builder setNetworkInterfaces(@Nullable Input<List<LaunchTemplateNetworkInterfaceGetArgs>> networkInterfaces) {
            this.networkInterfaces = networkInterfaces;
            return this;
        }

        public Builder setNetworkInterfaces(@Nullable List<LaunchTemplateNetworkInterfaceGetArgs> networkInterfaces) {
            this.networkInterfaces = Input.ofNullable(networkInterfaces);
            return this;
        }

        public Builder setPlacement(@Nullable Input<LaunchTemplatePlacementGetArgs> placement) {
            this.placement = placement;
            return this;
        }

        public Builder setPlacement(@Nullable LaunchTemplatePlacementGetArgs placement) {
            this.placement = Input.ofNullable(placement);
            return this;
        }

        public Builder setRamDiskId(@Nullable Input<String> ramDiskId) {
            this.ramDiskId = ramDiskId;
            return this;
        }

        public Builder setRamDiskId(@Nullable String ramDiskId) {
            this.ramDiskId = Input.ofNullable(ramDiskId);
            return this;
        }

        public Builder setSecurityGroupNames(@Nullable Input<List<String>> securityGroupNames) {
            this.securityGroupNames = securityGroupNames;
            return this;
        }

        public Builder setSecurityGroupNames(@Nullable List<String> securityGroupNames) {
            this.securityGroupNames = Input.ofNullable(securityGroupNames);
            return this;
        }

        public Builder setTagSpecifications(@Nullable Input<List<LaunchTemplateTagSpecificationGetArgs>> tagSpecifications) {
            this.tagSpecifications = tagSpecifications;
            return this;
        }

        public Builder setTagSpecifications(@Nullable List<LaunchTemplateTagSpecificationGetArgs> tagSpecifications) {
            this.tagSpecifications = Input.ofNullable(tagSpecifications);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }

        public Builder setUpdateDefaultVersion(@Nullable Input<Boolean> updateDefaultVersion) {
            this.updateDefaultVersion = updateDefaultVersion;
            return this;
        }

        public Builder setUpdateDefaultVersion(@Nullable Boolean updateDefaultVersion) {
            this.updateDefaultVersion = Input.ofNullable(updateDefaultVersion);
            return this;
        }

        public Builder setUserData(@Nullable Input<String> userData) {
            this.userData = userData;
            return this;
        }

        public Builder setUserData(@Nullable String userData) {
            this.userData = Input.ofNullable(userData);
            return this;
        }

        public Builder setVpcSecurityGroupIds(@Nullable Input<List<String>> vpcSecurityGroupIds) {
            this.vpcSecurityGroupIds = vpcSecurityGroupIds;
            return this;
        }

        public Builder setVpcSecurityGroupIds(@Nullable List<String> vpcSecurityGroupIds) {
            this.vpcSecurityGroupIds = Input.ofNullable(vpcSecurityGroupIds);
            return this;
        }
        public LaunchTemplateState build() {
            return new LaunchTemplateState(arn, blockDeviceMappings, capacityReservationSpecification, cpuOptions, creditSpecification, defaultVersion, description, disableApiTermination, ebsOptimized, elasticGpuSpecifications, elasticInferenceAccelerator, enclaveOptions, hibernationOptions, iamInstanceProfile, imageId, instanceInitiatedShutdownBehavior, instanceMarketOptions, instanceType, kernelId, keyName, latestVersion, licenseSpecifications, metadataOptions, monitoring, name, namePrefix, networkInterfaces, placement, ramDiskId, securityGroupNames, tagSpecifications, tags, tagsAll, updateDefaultVersion, userData, vpcSecurityGroupIds);
        }
    }
}
