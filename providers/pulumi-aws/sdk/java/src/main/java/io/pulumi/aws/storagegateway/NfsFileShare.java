// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.storagegateway;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.storagegateway.NfsFileShareArgs;
import io.pulumi.aws.storagegateway.inputs.NfsFileShareState;
import io.pulumi.aws.storagegateway.outputs.NfsFileShareCacheAttributes;
import io.pulumi.aws.storagegateway.outputs.NfsFileShareNfsFileShareDefaults;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages an AWS Storage Gateway NFS File Share.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * `aws_storagegateway_nfs_file_share` can be imported by using the NFS File Share Amazon Resource Name (ARN), e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:storagegateway/nfsFileShare:NfsFileShare example arn:aws:storagegateway:us-east-1:123456789012:share/share-12345678
 * ```
 * 
 */
@ResourceType(type="aws:storagegateway/nfsFileShare:NfsFileShare")
public class NfsFileShare extends io.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name (ARN) of the NFS File Share.
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name (ARN) of the NFS File Share.
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * The Amazon Resource Name (ARN) of the storage used for audit logs.
     * 
     */
    @OutputExport(name="auditDestinationArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> auditDestinationArn;

    /**
     * @return The Amazon Resource Name (ARN) of the storage used for audit logs.
     * 
     */
    public Output</* @Nullable */ String> getAuditDestinationArn() {
        return this.auditDestinationArn;
    }
    /**
     * Refresh cache information. see Cache Attributes for more details.
     * 
     */
    @OutputExport(name="cacheAttributes", type=NfsFileShareCacheAttributes.class, parameters={})
    private Output</* @Nullable */ NfsFileShareCacheAttributes> cacheAttributes;

    /**
     * @return Refresh cache information. see Cache Attributes for more details.
     * 
     */
    public Output</* @Nullable */ NfsFileShareCacheAttributes> getCacheAttributes() {
        return this.cacheAttributes;
    }
    /**
     * The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `["0.0.0.0/0"]` to not limit access. Minimum 1 item. Maximum 100 items.
     * 
     */
    @OutputExport(name="clientLists", type=List.class, parameters={String.class})
    private Output<List<String>> clientLists;

    /**
     * @return The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `["0.0.0.0/0"]` to not limit access. Minimum 1 item. Maximum 100 items.
     * 
     */
    public Output<List<String>> getClientLists() {
        return this.clientLists;
    }
    /**
     * The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     * 
     */
    @OutputExport(name="defaultStorageClass", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultStorageClass;

    /**
     * @return The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     * 
     */
    public Output</* @Nullable */ String> getDefaultStorageClass() {
        return this.defaultStorageClass;
    }
    /**
     * The name of the file share. Must be set if an S3 prefix name is set in `location_arn`.
     * 
     */
    @OutputExport(name="fileShareName", type=String.class, parameters={})
    private Output<String> fileShareName;

    /**
     * @return The name of the file share. Must be set if an S3 prefix name is set in `location_arn`.
     * 
     */
    public Output<String> getFileShareName() {
        return this.fileShareName;
    }
    /**
     * ID of the NFS File Share.
     * 
     */
    @OutputExport(name="fileshareId", type=String.class, parameters={})
    private Output<String> fileshareId;

    /**
     * @return ID of the NFS File Share.
     * 
     */
    public Output<String> getFileshareId() {
        return this.fileshareId;
    }
    /**
     * Amazon Resource Name (ARN) of the file gateway.
     * 
     */
    @OutputExport(name="gatewayArn", type=String.class, parameters={})
    private Output<String> gatewayArn;

    /**
     * @return Amazon Resource Name (ARN) of the file gateway.
     * 
     */
    public Output<String> getGatewayArn() {
        return this.gatewayArn;
    }
    /**
     * Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     * 
     */
    @OutputExport(name="guessMimeTypeEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> guessMimeTypeEnabled;

    /**
     * @return Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     * 
     */
    public Output</* @Nullable */ Boolean> getGuessMimeTypeEnabled() {
        return this.guessMimeTypeEnabled;
    }
    /**
     * Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     * 
     */
    @OutputExport(name="kmsEncrypted", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> kmsEncrypted;

    /**
     * @return Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getKmsEncrypted() {
        return this.kmsEncrypted;
    }
    /**
     * Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kms_encrypted` is true.
     * 
     */
    @OutputExport(name="kmsKeyArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> kmsKeyArn;

    /**
     * @return Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kms_encrypted` is true.
     * 
     */
    public Output</* @Nullable */ String> getKmsKeyArn() {
        return this.kmsKeyArn;
    }
    /**
     * The ARN of the backed storage used for storing file data.
     * 
     */
    @OutputExport(name="locationArn", type=String.class, parameters={})
    private Output<String> locationArn;

    /**
     * @return The ARN of the backed storage used for storing file data.
     * 
     */
    public Output<String> getLocationArn() {
        return this.locationArn;
    }
    /**
     * Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.
     * 
     */
    @OutputExport(name="nfsFileShareDefaults", type=NfsFileShareNfsFileShareDefaults.class, parameters={})
    private Output</* @Nullable */ NfsFileShareNfsFileShareDefaults> nfsFileShareDefaults;

    /**
     * @return Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.
     * 
     */
    public Output</* @Nullable */ NfsFileShareNfsFileShareDefaults> getNfsFileShareDefaults() {
        return this.nfsFileShareDefaults;
    }
    /**
     * The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     * 
     */
    @OutputExport(name="notificationPolicy", type=String.class, parameters={})
    private Output</* @Nullable */ String> notificationPolicy;

    /**
     * @return The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     * 
     */
    public Output</* @Nullable */ String> getNotificationPolicy() {
        return this.notificationPolicy;
    }
    /**
     * Access Control List permission for S3 bucket objects. Defaults to `private`.
     * 
     */
    @OutputExport(name="objectAcl", type=String.class, parameters={})
    private Output</* @Nullable */ String> objectAcl;

    /**
     * @return Access Control List permission for S3 bucket objects. Defaults to `private`.
     * 
     */
    public Output</* @Nullable */ String> getObjectAcl() {
        return this.objectAcl;
    }
    /**
     * File share path used by the NFS client to identify the mount point.
     * 
     */
    @OutputExport(name="path", type=String.class, parameters={})
    private Output<String> path;

    /**
     * @return File share path used by the NFS client to identify the mount point.
     * 
     */
    public Output<String> getPath() {
        return this.path;
    }
    /**
     * Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     * 
     */
    @OutputExport(name="readOnly", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> readOnly;

    /**
     * @return Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getReadOnly() {
        return this.readOnly;
    }
    /**
     * Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     * 
     */
    @OutputExport(name="requesterPays", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requesterPays;

    /**
     * @return Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     * 
     */
    public Output</* @Nullable */ Boolean> getRequesterPays() {
        return this.requesterPays;
    }
    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     * 
     */
    @OutputExport(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    /**
     * @return The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     * 
     */
    public Output<String> getRoleArn() {
        return this.roleArn;
    }
    /**
     * Maps a user to anonymous user. Defaults to `RootSquash`. Valid values: `RootSquash` (only root is mapped to anonymous user), `NoSquash` (no one is mapped to anonymous user), `AllSquash` (everyone is mapped to anonymous user)
     * 
     */
    @OutputExport(name="squash", type=String.class, parameters={})
    private Output</* @Nullable */ String> squash;

    /**
     * @return Maps a user to anonymous user. Defaults to `RootSquash`. Valid values: `RootSquash` (only root is mapped to anonymous user), `NoSquash` (no one is mapped to anonymous user), `AllSquash` (everyone is mapped to anonymous user)
     * 
     */
    public Output</* @Nullable */ String> getSquash() {
        return this.squash;
    }
    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @OutputExport(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NfsFileShare(String name) {
        this(name, NfsFileShareArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NfsFileShare(String name, NfsFileShareArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NfsFileShare(String name, NfsFileShareArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:storagegateway/nfsFileShare:NfsFileShare", name, args == null ? NfsFileShareArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private NfsFileShare(String name, Input<String> id, @Nullable NfsFileShareState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:storagegateway/nfsFileShare:NfsFileShare", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NfsFileShare get(String name, Input<String> id, @Nullable NfsFileShareState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new NfsFileShare(name, id, state, options);
    }
}
