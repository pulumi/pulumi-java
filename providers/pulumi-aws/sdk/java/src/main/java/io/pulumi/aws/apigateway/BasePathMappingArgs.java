// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BasePathMappingArgs extends io.pulumi.resources.ResourceArgs {

    public static final BasePathMappingArgs Empty = new BasePathMappingArgs();

    /**
     * Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
     * 
     */
    @Import(name="basePath")
      private final @Nullable Output<String> basePath;

    public Output<String> getBasePath() {
        return this.basePath == null ? Output.empty() : this.basePath;
    }

    /**
     * The already-registered domain name to connect the API to.
     * 
     */
    @Import(name="domainName", required=true)
      private final Output<String> domainName;

    public Output<String> getDomainName() {
        return this.domainName;
    }

    /**
     * The id of the API to connect.
     * 
     */
    @Import(name="restApi", required=true)
      private final Output<String> restApi;

    public Output<String> getRestApi() {
        return this.restApi;
    }

    /**
     * The name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
     * 
     */
    @Import(name="stageName")
      private final @Nullable Output<String> stageName;

    public Output<String> getStageName() {
        return this.stageName == null ? Output.empty() : this.stageName;
    }

    public BasePathMappingArgs(
        @Nullable Output<String> basePath,
        Output<String> domainName,
        Output<String> restApi,
        @Nullable Output<String> stageName) {
        this.basePath = basePath;
        this.domainName = Objects.requireNonNull(domainName, "expected parameter 'domainName' to be non-null");
        this.restApi = Objects.requireNonNull(restApi, "expected parameter 'restApi' to be non-null");
        this.stageName = stageName;
    }

    private BasePathMappingArgs() {
        this.basePath = Output.empty();
        this.domainName = Output.empty();
        this.restApi = Output.empty();
        this.stageName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BasePathMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> basePath;
        private Output<String> domainName;
        private Output<String> restApi;
        private @Nullable Output<String> stageName;

        public Builder() {
    	      // Empty
        }

        public Builder(BasePathMappingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basePath = defaults.basePath;
    	      this.domainName = defaults.domainName;
    	      this.restApi = defaults.restApi;
    	      this.stageName = defaults.stageName;
        }

        public Builder basePath(@Nullable Output<String> basePath) {
            this.basePath = basePath;
            return this;
        }

        public Builder basePath(@Nullable String basePath) {
            this.basePath = Output.ofNullable(basePath);
            return this;
        }

        public Builder domainName(Output<String> domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }

        public Builder domainName(String domainName) {
            this.domainName = Output.of(Objects.requireNonNull(domainName));
            return this;
        }

        public Builder restApi(Output<String> restApi) {
            this.restApi = Objects.requireNonNull(restApi);
            return this;
        }

        public Builder stageName(@Nullable Output<String> stageName) {
            this.stageName = stageName;
            return this;
        }

        public Builder stageName(@Nullable String stageName) {
            this.stageName = Output.ofNullable(stageName);
            return this;
        }
        public BasePathMappingArgs build() {
            return new BasePathMappingArgs(basePath, domainName, restApi, stageName);
        }
    }
}
