// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.dms.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ReplicationTaskState extends io.pulumi.resources.ResourceArgs {

    public static final ReplicationTaskState Empty = new ReplicationTaskState();

    /**
     * Indicates when you want a change data capture (CDC) operation to start. The value can be in date, checkpoint, or LSN/SCN format depending on the source engine. For more information, see [Determining a CDC native start point](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Task.CDC.html#CHAP_Task.CDC.StartPoint.Native).
     * 
     */
    @InputImport(name="cdcStartPosition")
    private final @Nullable Input<String> cdcStartPosition;

    public Input<String> getCdcStartPosition() {
        return this.cdcStartPosition == null ? Input.empty() : this.cdcStartPosition;
    }

    /**
     * The Unix timestamp integer for the start of the Change Data Capture (CDC) operation.
     * 
     */
    @InputImport(name="cdcStartTime")
    private final @Nullable Input<String> cdcStartTime;

    public Input<String> getCdcStartTime() {
        return this.cdcStartTime == null ? Input.empty() : this.cdcStartTime;
    }

    /**
     * The migration type. Can be one of `full-load | cdc | full-load-and-cdc`.
     * 
     */
    @InputImport(name="migrationType")
    private final @Nullable Input<String> migrationType;

    public Input<String> getMigrationType() {
        return this.migrationType == null ? Input.empty() : this.migrationType;
    }

    /**
     * The Amazon Resource Name (ARN) of the replication instance.
     * 
     */
    @InputImport(name="replicationInstanceArn")
    private final @Nullable Input<String> replicationInstanceArn;

    public Input<String> getReplicationInstanceArn() {
        return this.replicationInstanceArn == null ? Input.empty() : this.replicationInstanceArn;
    }

    /**
     * The Amazon Resource Name (ARN) for the replication task.
     * 
     */
    @InputImport(name="replicationTaskArn")
    private final @Nullable Input<String> replicationTaskArn;

    public Input<String> getReplicationTaskArn() {
        return this.replicationTaskArn == null ? Input.empty() : this.replicationTaskArn;
    }

    /**
     * The replication task identifier.
     * 
     */
    @InputImport(name="replicationTaskId")
    private final @Nullable Input<String> replicationTaskId;

    public Input<String> getReplicationTaskId() {
        return this.replicationTaskId == null ? Input.empty() : this.replicationTaskId;
    }

    /**
     * An escaped JSON string that contains the task settings. For a complete list of task settings, see [Task Settings for AWS Database Migration Service Tasks](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html).
     * 
     */
    @InputImport(name="replicationTaskSettings")
    private final @Nullable Input<String> replicationTaskSettings;

    public Input<String> getReplicationTaskSettings() {
        return this.replicationTaskSettings == null ? Input.empty() : this.replicationTaskSettings;
    }

    /**
     * The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.
     * 
     */
    @InputImport(name="sourceEndpointArn")
    private final @Nullable Input<String> sourceEndpointArn;

    public Input<String> getSourceEndpointArn() {
        return this.sourceEndpointArn == null ? Input.empty() : this.sourceEndpointArn;
    }

    /**
     * An escaped JSON string that contains the table mappings. For information on table mapping see [Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html)
     * 
     */
    @InputImport(name="tableMappings")
    private final @Nullable Input<String> tableMappings;

    public Input<String> getTableMappings() {
        return this.tableMappings == null ? Input.empty() : this.tableMappings;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
    private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
    private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    /**
     * The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint.
     * 
     */
    @InputImport(name="targetEndpointArn")
    private final @Nullable Input<String> targetEndpointArn;

    public Input<String> getTargetEndpointArn() {
        return this.targetEndpointArn == null ? Input.empty() : this.targetEndpointArn;
    }

    public ReplicationTaskState(
        @Nullable Input<String> cdcStartPosition,
        @Nullable Input<String> cdcStartTime,
        @Nullable Input<String> migrationType,
        @Nullable Input<String> replicationInstanceArn,
        @Nullable Input<String> replicationTaskArn,
        @Nullable Input<String> replicationTaskId,
        @Nullable Input<String> replicationTaskSettings,
        @Nullable Input<String> sourceEndpointArn,
        @Nullable Input<String> tableMappings,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll,
        @Nullable Input<String> targetEndpointArn) {
        this.cdcStartPosition = cdcStartPosition;
        this.cdcStartTime = cdcStartTime;
        this.migrationType = migrationType;
        this.replicationInstanceArn = replicationInstanceArn;
        this.replicationTaskArn = replicationTaskArn;
        this.replicationTaskId = replicationTaskId;
        this.replicationTaskSettings = replicationTaskSettings;
        this.sourceEndpointArn = sourceEndpointArn;
        this.tableMappings = tableMappings;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.targetEndpointArn = targetEndpointArn;
    }

    private ReplicationTaskState() {
        this.cdcStartPosition = Input.empty();
        this.cdcStartTime = Input.empty();
        this.migrationType = Input.empty();
        this.replicationInstanceArn = Input.empty();
        this.replicationTaskArn = Input.empty();
        this.replicationTaskId = Input.empty();
        this.replicationTaskSettings = Input.empty();
        this.sourceEndpointArn = Input.empty();
        this.tableMappings = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
        this.targetEndpointArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicationTaskState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> cdcStartPosition;
        private @Nullable Input<String> cdcStartTime;
        private @Nullable Input<String> migrationType;
        private @Nullable Input<String> replicationInstanceArn;
        private @Nullable Input<String> replicationTaskArn;
        private @Nullable Input<String> replicationTaskId;
        private @Nullable Input<String> replicationTaskSettings;
        private @Nullable Input<String> sourceEndpointArn;
        private @Nullable Input<String> tableMappings;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;
        private @Nullable Input<String> targetEndpointArn;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicationTaskState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cdcStartPosition = defaults.cdcStartPosition;
    	      this.cdcStartTime = defaults.cdcStartTime;
    	      this.migrationType = defaults.migrationType;
    	      this.replicationInstanceArn = defaults.replicationInstanceArn;
    	      this.replicationTaskArn = defaults.replicationTaskArn;
    	      this.replicationTaskId = defaults.replicationTaskId;
    	      this.replicationTaskSettings = defaults.replicationTaskSettings;
    	      this.sourceEndpointArn = defaults.sourceEndpointArn;
    	      this.tableMappings = defaults.tableMappings;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.targetEndpointArn = defaults.targetEndpointArn;
        }

        public Builder setCdcStartPosition(@Nullable Input<String> cdcStartPosition) {
            this.cdcStartPosition = cdcStartPosition;
            return this;
        }

        public Builder setCdcStartPosition(@Nullable String cdcStartPosition) {
            this.cdcStartPosition = Input.ofNullable(cdcStartPosition);
            return this;
        }

        public Builder setCdcStartTime(@Nullable Input<String> cdcStartTime) {
            this.cdcStartTime = cdcStartTime;
            return this;
        }

        public Builder setCdcStartTime(@Nullable String cdcStartTime) {
            this.cdcStartTime = Input.ofNullable(cdcStartTime);
            return this;
        }

        public Builder setMigrationType(@Nullable Input<String> migrationType) {
            this.migrationType = migrationType;
            return this;
        }

        public Builder setMigrationType(@Nullable String migrationType) {
            this.migrationType = Input.ofNullable(migrationType);
            return this;
        }

        public Builder setReplicationInstanceArn(@Nullable Input<String> replicationInstanceArn) {
            this.replicationInstanceArn = replicationInstanceArn;
            return this;
        }

        public Builder setReplicationInstanceArn(@Nullable String replicationInstanceArn) {
            this.replicationInstanceArn = Input.ofNullable(replicationInstanceArn);
            return this;
        }

        public Builder setReplicationTaskArn(@Nullable Input<String> replicationTaskArn) {
            this.replicationTaskArn = replicationTaskArn;
            return this;
        }

        public Builder setReplicationTaskArn(@Nullable String replicationTaskArn) {
            this.replicationTaskArn = Input.ofNullable(replicationTaskArn);
            return this;
        }

        public Builder setReplicationTaskId(@Nullable Input<String> replicationTaskId) {
            this.replicationTaskId = replicationTaskId;
            return this;
        }

        public Builder setReplicationTaskId(@Nullable String replicationTaskId) {
            this.replicationTaskId = Input.ofNullable(replicationTaskId);
            return this;
        }

        public Builder setReplicationTaskSettings(@Nullable Input<String> replicationTaskSettings) {
            this.replicationTaskSettings = replicationTaskSettings;
            return this;
        }

        public Builder setReplicationTaskSettings(@Nullable String replicationTaskSettings) {
            this.replicationTaskSettings = Input.ofNullable(replicationTaskSettings);
            return this;
        }

        public Builder setSourceEndpointArn(@Nullable Input<String> sourceEndpointArn) {
            this.sourceEndpointArn = sourceEndpointArn;
            return this;
        }

        public Builder setSourceEndpointArn(@Nullable String sourceEndpointArn) {
            this.sourceEndpointArn = Input.ofNullable(sourceEndpointArn);
            return this;
        }

        public Builder setTableMappings(@Nullable Input<String> tableMappings) {
            this.tableMappings = tableMappings;
            return this;
        }

        public Builder setTableMappings(@Nullable String tableMappings) {
            this.tableMappings = Input.ofNullable(tableMappings);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }

        public Builder setTargetEndpointArn(@Nullable Input<String> targetEndpointArn) {
            this.targetEndpointArn = targetEndpointArn;
            return this;
        }

        public Builder setTargetEndpointArn(@Nullable String targetEndpointArn) {
            this.targetEndpointArn = Input.ofNullable(targetEndpointArn);
            return this;
        }
        public ReplicationTaskState build() {
            return new ReplicationTaskState(cdcStartPosition, cdcStartTime, migrationType, replicationInstanceArn, replicationTaskArn, replicationTaskId, replicationTaskSettings, sourceEndpointArn, tableMappings, tags, tagsAll, targetEndpointArn);
        }
    }
}
