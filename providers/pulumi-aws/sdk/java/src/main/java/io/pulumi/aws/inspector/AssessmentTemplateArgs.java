// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.inspector;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AssessmentTemplateArgs extends io.pulumi.resources.ResourceArgs {

    public static final AssessmentTemplateArgs Empty = new AssessmentTemplateArgs();

    /**
     * The duration of the inspector run.
     * 
     */
    @Import(name="duration", required=true)
      private final Output<Integer> duration;

    public Output<Integer> getDuration() {
        return this.duration;
    }

    /**
     * The name of the assessment template.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The rules to be used during the run.
     * 
     */
    @Import(name="rulesPackageArns", required=true)
      private final Output<List<String>> rulesPackageArns;

    public Output<List<String>> getRulesPackageArns() {
        return this.rulesPackageArns;
    }

    /**
     * Key-value map of tags for the Inspector assessment template. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * The assessment target ARN to attach the template to.
     * 
     */
    @Import(name="targetArn", required=true)
      private final Output<String> targetArn;

    public Output<String> getTargetArn() {
        return this.targetArn;
    }

    public AssessmentTemplateArgs(
        Output<Integer> duration,
        @Nullable Output<String> name,
        Output<List<String>> rulesPackageArns,
        @Nullable Output<Map<String,String>> tags,
        Output<String> targetArn) {
        this.duration = Objects.requireNonNull(duration, "expected parameter 'duration' to be non-null");
        this.name = name;
        this.rulesPackageArns = Objects.requireNonNull(rulesPackageArns, "expected parameter 'rulesPackageArns' to be non-null");
        this.tags = tags;
        this.targetArn = Objects.requireNonNull(targetArn, "expected parameter 'targetArn' to be non-null");
    }

    private AssessmentTemplateArgs() {
        this.duration = Output.empty();
        this.name = Output.empty();
        this.rulesPackageArns = Output.empty();
        this.tags = Output.empty();
        this.targetArn = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssessmentTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> duration;
        private @Nullable Output<String> name;
        private Output<List<String>> rulesPackageArns;
        private @Nullable Output<Map<String,String>> tags;
        private Output<String> targetArn;

        public Builder() {
    	      // Empty
        }

        public Builder(AssessmentTemplateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.name = defaults.name;
    	      this.rulesPackageArns = defaults.rulesPackageArns;
    	      this.tags = defaults.tags;
    	      this.targetArn = defaults.targetArn;
        }

        public Builder duration(Output<Integer> duration) {
            this.duration = Objects.requireNonNull(duration);
            return this;
        }

        public Builder duration(Integer duration) {
            this.duration = Output.of(Objects.requireNonNull(duration));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder rulesPackageArns(Output<List<String>> rulesPackageArns) {
            this.rulesPackageArns = Objects.requireNonNull(rulesPackageArns);
            return this;
        }

        public Builder rulesPackageArns(List<String> rulesPackageArns) {
            this.rulesPackageArns = Output.of(Objects.requireNonNull(rulesPackageArns));
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder targetArn(Output<String> targetArn) {
            this.targetArn = Objects.requireNonNull(targetArn);
            return this;
        }

        public Builder targetArn(String targetArn) {
            this.targetArn = Output.of(Objects.requireNonNull(targetArn));
            return this;
        }
        public AssessmentTemplateArgs build() {
            return new AssessmentTemplateArgs(duration, name, rulesPackageArns, tags, targetArn);
        }
    }
}
