// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DefaultRouteTableRouteArgs extends io.pulumi.resources.ResourceArgs {

    public static final DefaultRouteTableRouteArgs Empty = new DefaultRouteTableRouteArgs();

    /**
     * The CIDR block of the route.
     * 
     */
    @Import(name="cidrBlock")
      private final @Nullable Output<String> cidrBlock;

    public Output<String> cidrBlock() {
        return this.cidrBlock == null ? Codegen.empty() : this.cidrBlock;
    }

    /**
     * The ID of a managed prefix list destination of the route.
     * 
     */
    @Import(name="destinationPrefixListId")
      private final @Nullable Output<String> destinationPrefixListId;

    public Output<String> destinationPrefixListId() {
        return this.destinationPrefixListId == null ? Codegen.empty() : this.destinationPrefixListId;
    }

    /**
     * Identifier of a VPC Egress Only Internet Gateway.
     * 
     */
    @Import(name="egressOnlyGatewayId")
      private final @Nullable Output<String> egressOnlyGatewayId;

    public Output<String> egressOnlyGatewayId() {
        return this.egressOnlyGatewayId == null ? Codegen.empty() : this.egressOnlyGatewayId;
    }

    /**
     * Identifier of a VPC internet gateway or a virtual private gateway.
     * 
     */
    @Import(name="gatewayId")
      private final @Nullable Output<String> gatewayId;

    public Output<String> gatewayId() {
        return this.gatewayId == null ? Codegen.empty() : this.gatewayId;
    }

    /**
     * Identifier of an EC2 instance.
     * 
     */
    @Import(name="instanceId")
      private final @Nullable Output<String> instanceId;

    public Output<String> instanceId() {
        return this.instanceId == null ? Codegen.empty() : this.instanceId;
    }

    /**
     * The Ipv6 CIDR block of the route
     * 
     */
    @Import(name="ipv6CidrBlock")
      private final @Nullable Output<String> ipv6CidrBlock;

    public Output<String> ipv6CidrBlock() {
        return this.ipv6CidrBlock == null ? Codegen.empty() : this.ipv6CidrBlock;
    }

    /**
     * Identifier of a VPC NAT gateway.
     * 
     */
    @Import(name="natGatewayId")
      private final @Nullable Output<String> natGatewayId;

    public Output<String> natGatewayId() {
        return this.natGatewayId == null ? Codegen.empty() : this.natGatewayId;
    }

    /**
     * Identifier of an EC2 network interface.
     * 
     */
    @Import(name="networkInterfaceId")
      private final @Nullable Output<String> networkInterfaceId;

    public Output<String> networkInterfaceId() {
        return this.networkInterfaceId == null ? Codegen.empty() : this.networkInterfaceId;
    }

    /**
     * Identifier of an EC2 Transit Gateway.
     * 
     */
    @Import(name="transitGatewayId")
      private final @Nullable Output<String> transitGatewayId;

    public Output<String> transitGatewayId() {
        return this.transitGatewayId == null ? Codegen.empty() : this.transitGatewayId;
    }

    /**
     * Identifier of a VPC Endpoint. This route must be removed prior to VPC Endpoint deletion.
     * 
     */
    @Import(name="vpcEndpointId")
      private final @Nullable Output<String> vpcEndpointId;

    public Output<String> vpcEndpointId() {
        return this.vpcEndpointId == null ? Codegen.empty() : this.vpcEndpointId;
    }

    /**
     * Identifier of a VPC peering connection.
     * 
     */
    @Import(name="vpcPeeringConnectionId")
      private final @Nullable Output<String> vpcPeeringConnectionId;

    public Output<String> vpcPeeringConnectionId() {
        return this.vpcPeeringConnectionId == null ? Codegen.empty() : this.vpcPeeringConnectionId;
    }

    public DefaultRouteTableRouteArgs(
        @Nullable Output<String> cidrBlock,
        @Nullable Output<String> destinationPrefixListId,
        @Nullable Output<String> egressOnlyGatewayId,
        @Nullable Output<String> gatewayId,
        @Nullable Output<String> instanceId,
        @Nullable Output<String> ipv6CidrBlock,
        @Nullable Output<String> natGatewayId,
        @Nullable Output<String> networkInterfaceId,
        @Nullable Output<String> transitGatewayId,
        @Nullable Output<String> vpcEndpointId,
        @Nullable Output<String> vpcPeeringConnectionId) {
        this.cidrBlock = cidrBlock;
        this.destinationPrefixListId = destinationPrefixListId;
        this.egressOnlyGatewayId = egressOnlyGatewayId;
        this.gatewayId = gatewayId;
        this.instanceId = instanceId;
        this.ipv6CidrBlock = ipv6CidrBlock;
        this.natGatewayId = natGatewayId;
        this.networkInterfaceId = networkInterfaceId;
        this.transitGatewayId = transitGatewayId;
        this.vpcEndpointId = vpcEndpointId;
        this.vpcPeeringConnectionId = vpcPeeringConnectionId;
    }

    private DefaultRouteTableRouteArgs() {
        this.cidrBlock = Codegen.empty();
        this.destinationPrefixListId = Codegen.empty();
        this.egressOnlyGatewayId = Codegen.empty();
        this.gatewayId = Codegen.empty();
        this.instanceId = Codegen.empty();
        this.ipv6CidrBlock = Codegen.empty();
        this.natGatewayId = Codegen.empty();
        this.networkInterfaceId = Codegen.empty();
        this.transitGatewayId = Codegen.empty();
        this.vpcEndpointId = Codegen.empty();
        this.vpcPeeringConnectionId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DefaultRouteTableRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> cidrBlock;
        private @Nullable Output<String> destinationPrefixListId;
        private @Nullable Output<String> egressOnlyGatewayId;
        private @Nullable Output<String> gatewayId;
        private @Nullable Output<String> instanceId;
        private @Nullable Output<String> ipv6CidrBlock;
        private @Nullable Output<String> natGatewayId;
        private @Nullable Output<String> networkInterfaceId;
        private @Nullable Output<String> transitGatewayId;
        private @Nullable Output<String> vpcEndpointId;
        private @Nullable Output<String> vpcPeeringConnectionId;

        public Builder() {
    	      // Empty
        }

        public Builder(DefaultRouteTableRouteArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.destinationPrefixListId = defaults.destinationPrefixListId;
    	      this.egressOnlyGatewayId = defaults.egressOnlyGatewayId;
    	      this.gatewayId = defaults.gatewayId;
    	      this.instanceId = defaults.instanceId;
    	      this.ipv6CidrBlock = defaults.ipv6CidrBlock;
    	      this.natGatewayId = defaults.natGatewayId;
    	      this.networkInterfaceId = defaults.networkInterfaceId;
    	      this.transitGatewayId = defaults.transitGatewayId;
    	      this.vpcEndpointId = defaults.vpcEndpointId;
    	      this.vpcPeeringConnectionId = defaults.vpcPeeringConnectionId;
        }

        public Builder cidrBlock(@Nullable Output<String> cidrBlock) {
            this.cidrBlock = cidrBlock;
            return this;
        }
        public Builder cidrBlock(@Nullable String cidrBlock) {
            this.cidrBlock = Codegen.ofNullable(cidrBlock);
            return this;
        }
        public Builder destinationPrefixListId(@Nullable Output<String> destinationPrefixListId) {
            this.destinationPrefixListId = destinationPrefixListId;
            return this;
        }
        public Builder destinationPrefixListId(@Nullable String destinationPrefixListId) {
            this.destinationPrefixListId = Codegen.ofNullable(destinationPrefixListId);
            return this;
        }
        public Builder egressOnlyGatewayId(@Nullable Output<String> egressOnlyGatewayId) {
            this.egressOnlyGatewayId = egressOnlyGatewayId;
            return this;
        }
        public Builder egressOnlyGatewayId(@Nullable String egressOnlyGatewayId) {
            this.egressOnlyGatewayId = Codegen.ofNullable(egressOnlyGatewayId);
            return this;
        }
        public Builder gatewayId(@Nullable Output<String> gatewayId) {
            this.gatewayId = gatewayId;
            return this;
        }
        public Builder gatewayId(@Nullable String gatewayId) {
            this.gatewayId = Codegen.ofNullable(gatewayId);
            return this;
        }
        public Builder instanceId(@Nullable Output<String> instanceId) {
            this.instanceId = instanceId;
            return this;
        }
        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = Codegen.ofNullable(instanceId);
            return this;
        }
        public Builder ipv6CidrBlock(@Nullable Output<String> ipv6CidrBlock) {
            this.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }
        public Builder ipv6CidrBlock(@Nullable String ipv6CidrBlock) {
            this.ipv6CidrBlock = Codegen.ofNullable(ipv6CidrBlock);
            return this;
        }
        public Builder natGatewayId(@Nullable Output<String> natGatewayId) {
            this.natGatewayId = natGatewayId;
            return this;
        }
        public Builder natGatewayId(@Nullable String natGatewayId) {
            this.natGatewayId = Codegen.ofNullable(natGatewayId);
            return this;
        }
        public Builder networkInterfaceId(@Nullable Output<String> networkInterfaceId) {
            this.networkInterfaceId = networkInterfaceId;
            return this;
        }
        public Builder networkInterfaceId(@Nullable String networkInterfaceId) {
            this.networkInterfaceId = Codegen.ofNullable(networkInterfaceId);
            return this;
        }
        public Builder transitGatewayId(@Nullable Output<String> transitGatewayId) {
            this.transitGatewayId = transitGatewayId;
            return this;
        }
        public Builder transitGatewayId(@Nullable String transitGatewayId) {
            this.transitGatewayId = Codegen.ofNullable(transitGatewayId);
            return this;
        }
        public Builder vpcEndpointId(@Nullable Output<String> vpcEndpointId) {
            this.vpcEndpointId = vpcEndpointId;
            return this;
        }
        public Builder vpcEndpointId(@Nullable String vpcEndpointId) {
            this.vpcEndpointId = Codegen.ofNullable(vpcEndpointId);
            return this;
        }
        public Builder vpcPeeringConnectionId(@Nullable Output<String> vpcPeeringConnectionId) {
            this.vpcPeeringConnectionId = vpcPeeringConnectionId;
            return this;
        }
        public Builder vpcPeeringConnectionId(@Nullable String vpcPeeringConnectionId) {
            this.vpcPeeringConnectionId = Codegen.ofNullable(vpcPeeringConnectionId);
            return this;
        }        public DefaultRouteTableRouteArgs build() {
            return new DefaultRouteTableRouteArgs(cidrBlock, destinationPrefixListId, egressOnlyGatewayId, gatewayId, instanceId, ipv6CidrBlock, natGatewayId, networkInterfaceId, transitGatewayId, vpcEndpointId, vpcPeeringConnectionId);
        }
    }
}
