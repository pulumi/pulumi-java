// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudfront.inputs;

import io.pulumi.aws.cloudfront.inputs.ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersGetArgs;
import io.pulumi.aws.cloudfront.inputs.ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsGetArgs;
import io.pulumi.aws.cloudfront.inputs.ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsGetArgs;
import io.pulumi.aws.cloudfront.inputs.ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResponseHeadersPolicyCorsConfigGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResponseHeadersPolicyCorsConfigGetArgs Empty = new ResponseHeadersPolicyCorsConfigGetArgs();

    /**
     * A Boolean value that CloudFront uses as the value for the `Access-Control-Allow-Credentials` HTTP response header.
     * 
     */
    @Import(name="accessControlAllowCredentials", required=true)
      private final Output<Boolean> accessControlAllowCredentials;

    public Output<Boolean> getAccessControlAllowCredentials() {
        return this.accessControlAllowCredentials;
    }

    /**
     * Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the `Access-Control-Allow-Headers` HTTP response header.
     * 
     */
    @Import(name="accessControlAllowHeaders", required=true)
      private final Output<ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersGetArgs> accessControlAllowHeaders;

    public Output<ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersGetArgs> getAccessControlAllowHeaders() {
        return this.accessControlAllowHeaders;
    }

    /**
     * Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the `Access-Control-Allow-Methods` HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`
     * 
     */
    @Import(name="accessControlAllowMethods", required=true)
      private final Output<ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsGetArgs> accessControlAllowMethods;

    public Output<ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsGetArgs> getAccessControlAllowMethods() {
        return this.accessControlAllowMethods;
    }

    /**
     * Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the `Access-Control-Allow-Origin` HTTP response header.
     * 
     */
    @Import(name="accessControlAllowOrigins", required=true)
      private final Output<ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsGetArgs> accessControlAllowOrigins;

    public Output<ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsGetArgs> getAccessControlAllowOrigins() {
        return this.accessControlAllowOrigins;
    }

    /**
     * Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the `Access-Control-Expose-Headers` HTTP response header.
     * 
     */
    @Import(name="accessControlExposeHeaders")
      private final @Nullable Output<ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersGetArgs> accessControlExposeHeaders;

    public Output<ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersGetArgs> getAccessControlExposeHeaders() {
        return this.accessControlExposeHeaders == null ? Codegen.empty() : this.accessControlExposeHeaders;
    }

    /**
     * A number that CloudFront uses as the value for the `max-age` directive in the `Strict-Transport-Security` HTTP response header.
     * 
     */
    @Import(name="accessControlMaxAgeSec")
      private final @Nullable Output<Integer> accessControlMaxAgeSec;

    public Output<Integer> getAccessControlMaxAgeSec() {
        return this.accessControlMaxAgeSec == null ? Codegen.empty() : this.accessControlMaxAgeSec;
    }

    /**
     * A Boolean value that determines how CloudFront behaves for the HTTP response header.
     * 
     */
    @Import(name="originOverride", required=true)
      private final Output<Boolean> originOverride;

    public Output<Boolean> getOriginOverride() {
        return this.originOverride;
    }

    public ResponseHeadersPolicyCorsConfigGetArgs(
        Output<Boolean> accessControlAllowCredentials,
        Output<ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersGetArgs> accessControlAllowHeaders,
        Output<ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsGetArgs> accessControlAllowMethods,
        Output<ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsGetArgs> accessControlAllowOrigins,
        @Nullable Output<ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersGetArgs> accessControlExposeHeaders,
        @Nullable Output<Integer> accessControlMaxAgeSec,
        Output<Boolean> originOverride) {
        this.accessControlAllowCredentials = Objects.requireNonNull(accessControlAllowCredentials, "expected parameter 'accessControlAllowCredentials' to be non-null");
        this.accessControlAllowHeaders = Objects.requireNonNull(accessControlAllowHeaders, "expected parameter 'accessControlAllowHeaders' to be non-null");
        this.accessControlAllowMethods = Objects.requireNonNull(accessControlAllowMethods, "expected parameter 'accessControlAllowMethods' to be non-null");
        this.accessControlAllowOrigins = Objects.requireNonNull(accessControlAllowOrigins, "expected parameter 'accessControlAllowOrigins' to be non-null");
        this.accessControlExposeHeaders = accessControlExposeHeaders;
        this.accessControlMaxAgeSec = accessControlMaxAgeSec;
        this.originOverride = Objects.requireNonNull(originOverride, "expected parameter 'originOverride' to be non-null");
    }

    private ResponseHeadersPolicyCorsConfigGetArgs() {
        this.accessControlAllowCredentials = Codegen.empty();
        this.accessControlAllowHeaders = Codegen.empty();
        this.accessControlAllowMethods = Codegen.empty();
        this.accessControlAllowOrigins = Codegen.empty();
        this.accessControlExposeHeaders = Codegen.empty();
        this.accessControlMaxAgeSec = Codegen.empty();
        this.originOverride = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResponseHeadersPolicyCorsConfigGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> accessControlAllowCredentials;
        private Output<ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersGetArgs> accessControlAllowHeaders;
        private Output<ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsGetArgs> accessControlAllowMethods;
        private Output<ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsGetArgs> accessControlAllowOrigins;
        private @Nullable Output<ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersGetArgs> accessControlExposeHeaders;
        private @Nullable Output<Integer> accessControlMaxAgeSec;
        private Output<Boolean> originOverride;

        public Builder() {
    	      // Empty
        }

        public Builder(ResponseHeadersPolicyCorsConfigGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControlAllowCredentials = defaults.accessControlAllowCredentials;
    	      this.accessControlAllowHeaders = defaults.accessControlAllowHeaders;
    	      this.accessControlAllowMethods = defaults.accessControlAllowMethods;
    	      this.accessControlAllowOrigins = defaults.accessControlAllowOrigins;
    	      this.accessControlExposeHeaders = defaults.accessControlExposeHeaders;
    	      this.accessControlMaxAgeSec = defaults.accessControlMaxAgeSec;
    	      this.originOverride = defaults.originOverride;
        }

        public Builder accessControlAllowCredentials(Output<Boolean> accessControlAllowCredentials) {
            this.accessControlAllowCredentials = Objects.requireNonNull(accessControlAllowCredentials);
            return this;
        }
        public Builder accessControlAllowCredentials(Boolean accessControlAllowCredentials) {
            this.accessControlAllowCredentials = Output.of(Objects.requireNonNull(accessControlAllowCredentials));
            return this;
        }
        public Builder accessControlAllowHeaders(Output<ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersGetArgs> accessControlAllowHeaders) {
            this.accessControlAllowHeaders = Objects.requireNonNull(accessControlAllowHeaders);
            return this;
        }
        public Builder accessControlAllowHeaders(ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersGetArgs accessControlAllowHeaders) {
            this.accessControlAllowHeaders = Output.of(Objects.requireNonNull(accessControlAllowHeaders));
            return this;
        }
        public Builder accessControlAllowMethods(Output<ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsGetArgs> accessControlAllowMethods) {
            this.accessControlAllowMethods = Objects.requireNonNull(accessControlAllowMethods);
            return this;
        }
        public Builder accessControlAllowMethods(ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsGetArgs accessControlAllowMethods) {
            this.accessControlAllowMethods = Output.of(Objects.requireNonNull(accessControlAllowMethods));
            return this;
        }
        public Builder accessControlAllowOrigins(Output<ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsGetArgs> accessControlAllowOrigins) {
            this.accessControlAllowOrigins = Objects.requireNonNull(accessControlAllowOrigins);
            return this;
        }
        public Builder accessControlAllowOrigins(ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsGetArgs accessControlAllowOrigins) {
            this.accessControlAllowOrigins = Output.of(Objects.requireNonNull(accessControlAllowOrigins));
            return this;
        }
        public Builder accessControlExposeHeaders(@Nullable Output<ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersGetArgs> accessControlExposeHeaders) {
            this.accessControlExposeHeaders = accessControlExposeHeaders;
            return this;
        }
        public Builder accessControlExposeHeaders(@Nullable ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersGetArgs accessControlExposeHeaders) {
            this.accessControlExposeHeaders = Codegen.ofNullable(accessControlExposeHeaders);
            return this;
        }
        public Builder accessControlMaxAgeSec(@Nullable Output<Integer> accessControlMaxAgeSec) {
            this.accessControlMaxAgeSec = accessControlMaxAgeSec;
            return this;
        }
        public Builder accessControlMaxAgeSec(@Nullable Integer accessControlMaxAgeSec) {
            this.accessControlMaxAgeSec = Codegen.ofNullable(accessControlMaxAgeSec);
            return this;
        }
        public Builder originOverride(Output<Boolean> originOverride) {
            this.originOverride = Objects.requireNonNull(originOverride);
            return this;
        }
        public Builder originOverride(Boolean originOverride) {
            this.originOverride = Output.of(Objects.requireNonNull(originOverride));
            return this;
        }        public ResponseHeadersPolicyCorsConfigGetArgs build() {
            return new ResponseHeadersPolicyCorsConfigGetArgs(accessControlAllowCredentials, accessControlAllowHeaders, accessControlAllowMethods, accessControlAllowOrigins, accessControlExposeHeaders, accessControlMaxAgeSec, originOverride);
        }
    }
}
