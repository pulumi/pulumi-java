// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.apigateway.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeploymentState extends io.pulumi.resources.ResourceArgs {

    public static final DeploymentState Empty = new DeploymentState();

    /**
     * The creation date of the deployment
     * 
     */
    @InputImport(name="createdDate")
      private final @Nullable Input<String> createdDate;

    public Input<String> getCreatedDate() {
        return this.createdDate == null ? Input.empty() : this.createdDate;
    }

    /**
     * Description of the deployment
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * The execution ARN to be used in `lambda_permission` resource's `source_arn`
     * when allowing API Gateway to invoke a Lambda function,
     * e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
     * 
     */
    @InputImport(name="executionArn")
      private final @Nullable Input<String> executionArn;

    public Input<String> getExecutionArn() {
        return this.executionArn == null ? Input.empty() : this.executionArn;
    }

    /**
     * The URL to invoke the API pointing to the stage,
     * e.g. `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
     * 
     */
    @InputImport(name="invokeUrl")
      private final @Nullable Input<String> invokeUrl;

    public Input<String> getInvokeUrl() {
        return this.invokeUrl == null ? Input.empty() : this.invokeUrl;
    }

    /**
     * REST API identifier.
     * 
     */
    @InputImport(name="restApi")
      private final @Nullable Input<String> restApi;

    public Input<String> getRestApi() {
        return this.restApi == null ? Input.empty() : this.restApi;
    }

    /**
     * Description to set on the stage managed by the `stage_name` argument.
     * 
     */
    @InputImport(name="stageDescription")
      private final @Nullable Input<String> stageDescription;

    public Input<String> getStageDescription() {
        return this.stageDescription == null ? Input.empty() : this.stageDescription;
    }

    /**
     * Name of the stage to create with this deployment. If the specified stage already exists, it will be updated to point to the new deployment. It is recommended to use the `aws.apigateway.Stage` resource instead to manage stages.
     * 
     */
    @InputImport(name="stageName")
      private final @Nullable Input<String> stageName;

    public Input<String> getStageName() {
        return this.stageName == null ? Input.empty() : this.stageName;
    }

    /**
     * Map of arbitrary keys and values that, when changed, will trigger a redeployment.
     * 
     */
    @InputImport(name="triggers")
      private final @Nullable Input<Map<String,String>> triggers;

    public Input<Map<String,String>> getTriggers() {
        return this.triggers == null ? Input.empty() : this.triggers;
    }

    /**
     * Map to set on the stage managed by the `stage_name` argument.
     * 
     */
    @InputImport(name="variables")
      private final @Nullable Input<Map<String,String>> variables;

    public Input<Map<String,String>> getVariables() {
        return this.variables == null ? Input.empty() : this.variables;
    }

    public DeploymentState(
        @Nullable Input<String> createdDate,
        @Nullable Input<String> description,
        @Nullable Input<String> executionArn,
        @Nullable Input<String> invokeUrl,
        @Nullable Input<String> restApi,
        @Nullable Input<String> stageDescription,
        @Nullable Input<String> stageName,
        @Nullable Input<Map<String,String>> triggers,
        @Nullable Input<Map<String,String>> variables) {
        this.createdDate = createdDate;
        this.description = description;
        this.executionArn = executionArn;
        this.invokeUrl = invokeUrl;
        this.restApi = restApi;
        this.stageDescription = stageDescription;
        this.stageName = stageName;
        this.triggers = triggers;
        this.variables = variables;
    }

    private DeploymentState() {
        this.createdDate = Input.empty();
        this.description = Input.empty();
        this.executionArn = Input.empty();
        this.invokeUrl = Input.empty();
        this.restApi = Input.empty();
        this.stageDescription = Input.empty();
        this.stageName = Input.empty();
        this.triggers = Input.empty();
        this.variables = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> createdDate;
        private @Nullable Input<String> description;
        private @Nullable Input<String> executionArn;
        private @Nullable Input<String> invokeUrl;
        private @Nullable Input<String> restApi;
        private @Nullable Input<String> stageDescription;
        private @Nullable Input<String> stageName;
        private @Nullable Input<Map<String,String>> triggers;
        private @Nullable Input<Map<String,String>> variables;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.executionArn = defaults.executionArn;
    	      this.invokeUrl = defaults.invokeUrl;
    	      this.restApi = defaults.restApi;
    	      this.stageDescription = defaults.stageDescription;
    	      this.stageName = defaults.stageName;
    	      this.triggers = defaults.triggers;
    	      this.variables = defaults.variables;
        }

        public Builder setCreatedDate(@Nullable Input<String> createdDate) {
            this.createdDate = createdDate;
            return this;
        }

        public Builder setCreatedDate(@Nullable String createdDate) {
            this.createdDate = Input.ofNullable(createdDate);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setExecutionArn(@Nullable Input<String> executionArn) {
            this.executionArn = executionArn;
            return this;
        }

        public Builder setExecutionArn(@Nullable String executionArn) {
            this.executionArn = Input.ofNullable(executionArn);
            return this;
        }

        public Builder setInvokeUrl(@Nullable Input<String> invokeUrl) {
            this.invokeUrl = invokeUrl;
            return this;
        }

        public Builder setInvokeUrl(@Nullable String invokeUrl) {
            this.invokeUrl = Input.ofNullable(invokeUrl);
            return this;
        }

        public Builder setRestApi(@Nullable Input<String> restApi) {
            this.restApi = restApi;
            return this;
        }

        public Builder setStageDescription(@Nullable Input<String> stageDescription) {
            this.stageDescription = stageDescription;
            return this;
        }

        public Builder setStageDescription(@Nullable String stageDescription) {
            this.stageDescription = Input.ofNullable(stageDescription);
            return this;
        }

        public Builder setStageName(@Nullable Input<String> stageName) {
            this.stageName = stageName;
            return this;
        }

        public Builder setStageName(@Nullable String stageName) {
            this.stageName = Input.ofNullable(stageName);
            return this;
        }

        public Builder setTriggers(@Nullable Input<Map<String,String>> triggers) {
            this.triggers = triggers;
            return this;
        }

        public Builder setTriggers(@Nullable Map<String,String> triggers) {
            this.triggers = Input.ofNullable(triggers);
            return this;
        }

        public Builder setVariables(@Nullable Input<Map<String,String>> variables) {
            this.variables = variables;
            return this;
        }

        public Builder setVariables(@Nullable Map<String,String> variables) {
            this.variables = Input.ofNullable(variables);
            return this;
        }
        public DeploymentState build() {
            return new DeploymentState(createdDate, description, executionArn, invokeUrl, restApi, stageDescription, stageName, triggers, variables);
        }
    }
}
