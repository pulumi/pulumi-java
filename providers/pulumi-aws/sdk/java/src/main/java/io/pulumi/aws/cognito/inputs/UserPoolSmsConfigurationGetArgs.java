// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cognito.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class UserPoolSmsConfigurationGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final UserPoolSmsConfigurationGetArgs Empty = new UserPoolSmsConfigurationGetArgs();

    /**
     * External ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
     * 
     */
    @InputImport(name="externalId", required=true)
      private final Input<String> externalId;

    public Input<String> getExternalId() {
        return this.externalId;
    }

    /**
     * ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
     * 
     */
    @InputImport(name="snsCallerArn", required=true)
      private final Input<String> snsCallerArn;

    public Input<String> getSnsCallerArn() {
        return this.snsCallerArn;
    }

    public UserPoolSmsConfigurationGetArgs(
        Input<String> externalId,
        Input<String> snsCallerArn) {
        this.externalId = Objects.requireNonNull(externalId, "expected parameter 'externalId' to be non-null");
        this.snsCallerArn = Objects.requireNonNull(snsCallerArn, "expected parameter 'snsCallerArn' to be non-null");
    }

    private UserPoolSmsConfigurationGetArgs() {
        this.externalId = Input.empty();
        this.snsCallerArn = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserPoolSmsConfigurationGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> externalId;
        private Input<String> snsCallerArn;

        public Builder() {
    	      // Empty
        }

        public Builder(UserPoolSmsConfigurationGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalId = defaults.externalId;
    	      this.snsCallerArn = defaults.snsCallerArn;
        }

        public Builder externalId(Input<String> externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }

        public Builder externalId(String externalId) {
            this.externalId = Input.of(Objects.requireNonNull(externalId));
            return this;
        }

        public Builder snsCallerArn(Input<String> snsCallerArn) {
            this.snsCallerArn = Objects.requireNonNull(snsCallerArn);
            return this;
        }

        public Builder snsCallerArn(String snsCallerArn) {
            this.snsCallerArn = Input.of(Objects.requireNonNull(snsCallerArn));
            return this;
        }
        public UserPoolSmsConfigurationGetArgs build() {
            return new UserPoolSmsConfigurationGetArgs(externalId, snsCallerArn);
        }
    }
}
