// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.organizations.inputs;

import io.pulumi.aws.organizations.inputs.OrganizationAccountGetArgs;
import io.pulumi.aws.organizations.inputs.OrganizationNonMasterAccountGetArgs;
import io.pulumi.aws.organizations.inputs.OrganizationRootGetArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class OrganizationState extends io.pulumi.resources.ResourceArgs {

    public static final OrganizationState Empty = new OrganizationState();

    /**
     * List of organization accounts including the master account. For a list excluding the master account, see the `non_master_accounts` attribute. All elements have these attributes:
     * 
     */
    @InputImport(name="accounts")
      private final @Nullable Input<List<OrganizationAccountGetArgs>> accounts;

    public Input<List<OrganizationAccountGetArgs>> getAccounts() {
        return this.accounts == null ? Input.empty() : this.accounts;
    }

    /**
     * ARN of the root
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `feature_set` set to `ALL`. For additional information, see the [AWS Organizations User Guide](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html).
     * 
     */
    @InputImport(name="awsServiceAccessPrincipals")
      private final @Nullable Input<List<String>> awsServiceAccessPrincipals;

    public Input<List<String>> getAwsServiceAccessPrincipals() {
        return this.awsServiceAccessPrincipals == null ? Input.empty() : this.awsServiceAccessPrincipals;
    }

    /**
     * List of Organizations policy types to enable in the Organization Root. Organization must have `feature_set` set to `ALL`. For additional information about valid policy types (e.g., `AISERVICES_OPT_OUT_POLICY`, `BACKUP_POLICY`, `SERVICE_CONTROL_POLICY`, and `TAG_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
     * 
     */
    @InputImport(name="enabledPolicyTypes")
      private final @Nullable Input<List<String>> enabledPolicyTypes;

    public Input<List<String>> getEnabledPolicyTypes() {
        return this.enabledPolicyTypes == null ? Input.empty() : this.enabledPolicyTypes;
    }

    /**
     * Specify "ALL" (default) or "CONSOLIDATED_BILLING".
     * 
     */
    @InputImport(name="featureSet")
      private final @Nullable Input<String> featureSet;

    public Input<String> getFeatureSet() {
        return this.featureSet == null ? Input.empty() : this.featureSet;
    }

    /**
     * ARN of the master account
     * 
     */
    @InputImport(name="masterAccountArn")
      private final @Nullable Input<String> masterAccountArn;

    public Input<String> getMasterAccountArn() {
        return this.masterAccountArn == null ? Input.empty() : this.masterAccountArn;
    }

    /**
     * Email address of the master account
     * 
     */
    @InputImport(name="masterAccountEmail")
      private final @Nullable Input<String> masterAccountEmail;

    public Input<String> getMasterAccountEmail() {
        return this.masterAccountEmail == null ? Input.empty() : this.masterAccountEmail;
    }

    /**
     * Identifier of the master account
     * 
     */
    @InputImport(name="masterAccountId")
      private final @Nullable Input<String> masterAccountId;

    public Input<String> getMasterAccountId() {
        return this.masterAccountId == null ? Input.empty() : this.masterAccountId;
    }

    /**
     * List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:
     * 
     */
    @InputImport(name="nonMasterAccounts")
      private final @Nullable Input<List<OrganizationNonMasterAccountGetArgs>> nonMasterAccounts;

    public Input<List<OrganizationNonMasterAccountGetArgs>> getNonMasterAccounts() {
        return this.nonMasterAccounts == null ? Input.empty() : this.nonMasterAccounts;
    }

    /**
     * List of organization roots. All elements have these attributes:
     * 
     */
    @InputImport(name="roots")
      private final @Nullable Input<List<OrganizationRootGetArgs>> roots;

    public Input<List<OrganizationRootGetArgs>> getRoots() {
        return this.roots == null ? Input.empty() : this.roots;
    }

    public OrganizationState(
        @Nullable Input<List<OrganizationAccountGetArgs>> accounts,
        @Nullable Input<String> arn,
        @Nullable Input<List<String>> awsServiceAccessPrincipals,
        @Nullable Input<List<String>> enabledPolicyTypes,
        @Nullable Input<String> featureSet,
        @Nullable Input<String> masterAccountArn,
        @Nullable Input<String> masterAccountEmail,
        @Nullable Input<String> masterAccountId,
        @Nullable Input<List<OrganizationNonMasterAccountGetArgs>> nonMasterAccounts,
        @Nullable Input<List<OrganizationRootGetArgs>> roots) {
        this.accounts = accounts;
        this.arn = arn;
        this.awsServiceAccessPrincipals = awsServiceAccessPrincipals;
        this.enabledPolicyTypes = enabledPolicyTypes;
        this.featureSet = featureSet;
        this.masterAccountArn = masterAccountArn;
        this.masterAccountEmail = masterAccountEmail;
        this.masterAccountId = masterAccountId;
        this.nonMasterAccounts = nonMasterAccounts;
        this.roots = roots;
    }

    private OrganizationState() {
        this.accounts = Input.empty();
        this.arn = Input.empty();
        this.awsServiceAccessPrincipals = Input.empty();
        this.enabledPolicyTypes = Input.empty();
        this.featureSet = Input.empty();
        this.masterAccountArn = Input.empty();
        this.masterAccountEmail = Input.empty();
        this.masterAccountId = Input.empty();
        this.nonMasterAccounts = Input.empty();
        this.roots = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<OrganizationAccountGetArgs>> accounts;
        private @Nullable Input<String> arn;
        private @Nullable Input<List<String>> awsServiceAccessPrincipals;
        private @Nullable Input<List<String>> enabledPolicyTypes;
        private @Nullable Input<String> featureSet;
        private @Nullable Input<String> masterAccountArn;
        private @Nullable Input<String> masterAccountEmail;
        private @Nullable Input<String> masterAccountId;
        private @Nullable Input<List<OrganizationNonMasterAccountGetArgs>> nonMasterAccounts;
        private @Nullable Input<List<OrganizationRootGetArgs>> roots;

        public Builder() {
    	      // Empty
        }

        public Builder(OrganizationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accounts = defaults.accounts;
    	      this.arn = defaults.arn;
    	      this.awsServiceAccessPrincipals = defaults.awsServiceAccessPrincipals;
    	      this.enabledPolicyTypes = defaults.enabledPolicyTypes;
    	      this.featureSet = defaults.featureSet;
    	      this.masterAccountArn = defaults.masterAccountArn;
    	      this.masterAccountEmail = defaults.masterAccountEmail;
    	      this.masterAccountId = defaults.masterAccountId;
    	      this.nonMasterAccounts = defaults.nonMasterAccounts;
    	      this.roots = defaults.roots;
        }

        public Builder accounts(@Nullable Input<List<OrganizationAccountGetArgs>> accounts) {
            this.accounts = accounts;
            return this;
        }

        public Builder accounts(@Nullable List<OrganizationAccountGetArgs> accounts) {
            this.accounts = Input.ofNullable(accounts);
            return this;
        }

        public Builder arn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder awsServiceAccessPrincipals(@Nullable Input<List<String>> awsServiceAccessPrincipals) {
            this.awsServiceAccessPrincipals = awsServiceAccessPrincipals;
            return this;
        }

        public Builder awsServiceAccessPrincipals(@Nullable List<String> awsServiceAccessPrincipals) {
            this.awsServiceAccessPrincipals = Input.ofNullable(awsServiceAccessPrincipals);
            return this;
        }

        public Builder enabledPolicyTypes(@Nullable Input<List<String>> enabledPolicyTypes) {
            this.enabledPolicyTypes = enabledPolicyTypes;
            return this;
        }

        public Builder enabledPolicyTypes(@Nullable List<String> enabledPolicyTypes) {
            this.enabledPolicyTypes = Input.ofNullable(enabledPolicyTypes);
            return this;
        }

        public Builder featureSet(@Nullable Input<String> featureSet) {
            this.featureSet = featureSet;
            return this;
        }

        public Builder featureSet(@Nullable String featureSet) {
            this.featureSet = Input.ofNullable(featureSet);
            return this;
        }

        public Builder masterAccountArn(@Nullable Input<String> masterAccountArn) {
            this.masterAccountArn = masterAccountArn;
            return this;
        }

        public Builder masterAccountArn(@Nullable String masterAccountArn) {
            this.masterAccountArn = Input.ofNullable(masterAccountArn);
            return this;
        }

        public Builder masterAccountEmail(@Nullable Input<String> masterAccountEmail) {
            this.masterAccountEmail = masterAccountEmail;
            return this;
        }

        public Builder masterAccountEmail(@Nullable String masterAccountEmail) {
            this.masterAccountEmail = Input.ofNullable(masterAccountEmail);
            return this;
        }

        public Builder masterAccountId(@Nullable Input<String> masterAccountId) {
            this.masterAccountId = masterAccountId;
            return this;
        }

        public Builder masterAccountId(@Nullable String masterAccountId) {
            this.masterAccountId = Input.ofNullable(masterAccountId);
            return this;
        }

        public Builder nonMasterAccounts(@Nullable Input<List<OrganizationNonMasterAccountGetArgs>> nonMasterAccounts) {
            this.nonMasterAccounts = nonMasterAccounts;
            return this;
        }

        public Builder nonMasterAccounts(@Nullable List<OrganizationNonMasterAccountGetArgs> nonMasterAccounts) {
            this.nonMasterAccounts = Input.ofNullable(nonMasterAccounts);
            return this;
        }

        public Builder roots(@Nullable Input<List<OrganizationRootGetArgs>> roots) {
            this.roots = roots;
            return this;
        }

        public Builder roots(@Nullable List<OrganizationRootGetArgs> roots) {
            this.roots = Input.ofNullable(roots);
            return this;
        }
        public OrganizationState build() {
            return new OrganizationState(accounts, arn, awsServiceAccessPrincipals, enabledPolicyTypes, featureSet, masterAccountArn, masterAccountEmail, masterAccountId, nonMasterAccounts, roots);
        }
    }
}
