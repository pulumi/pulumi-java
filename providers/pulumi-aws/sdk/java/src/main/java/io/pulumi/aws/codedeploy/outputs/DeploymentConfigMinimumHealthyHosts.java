// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.codedeploy.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class DeploymentConfigMinimumHealthyHosts {
    /**
     * The type can either be `FLEET_PERCENT` or `HOST_COUNT`.
     * 
     */
    private final @Nullable String type;
    /**
     * The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as
     * a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
     * deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
     * When the type is `HOST_COUNT`, the value represents the minimum number of healthy instances as an absolute value.
     * 
     */
    private final @Nullable Integer value;

    @OutputCustomType.Constructor({"type","value"})
    private DeploymentConfigMinimumHealthyHosts(
        @Nullable String type,
        @Nullable Integer value) {
        this.type = type;
        this.value = value;
    }

    /**
     * The type can either be `FLEET_PERCENT` or `HOST_COUNT`.
     * 
     */
    public Optional<String> getType() {
        return Optional.ofNullable(this.type);
    }
    /**
     * The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as
     * a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
     * deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
     * When the type is `HOST_COUNT`, the value represents the minimum number of healthy instances as an absolute value.
     * 
     */
    public Optional<Integer> getValue() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentConfigMinimumHealthyHosts defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String type;
        private @Nullable Integer value;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentConfigMinimumHealthyHosts defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        public Builder setType(@Nullable String type) {
            this.type = type;
            return this;
        }

        public Builder setValue(@Nullable Integer value) {
            this.value = value;
            return this;
        }
        public DeploymentConfigMinimumHealthyHosts build() {
            return new DeploymentConfigMinimumHealthyHosts(type, value);
        }
    }
}
