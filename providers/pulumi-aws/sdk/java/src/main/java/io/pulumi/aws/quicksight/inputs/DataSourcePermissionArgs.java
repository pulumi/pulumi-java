// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.quicksight.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DataSourcePermissionArgs extends io.pulumi.resources.ResourceArgs {

    public static final DataSourcePermissionArgs Empty = new DataSourcePermissionArgs();

    /**
     * Set of IAM actions to grant or revoke permissions on. Max of 16 items.
     * 
     */
    @Import(name="actions", required=true)
      private final Output<List<String>> actions;

    public Output<List<String>> actions() {
        return this.actions;
    }

    /**
     * The Amazon Resource Name (ARN) of the principal.
     * 
     */
    @Import(name="principal", required=true)
      private final Output<String> principal;

    public Output<String> principal() {
        return this.principal;
    }

    public DataSourcePermissionArgs(
        Output<List<String>> actions,
        Output<String> principal) {
        this.actions = Objects.requireNonNull(actions, "expected parameter 'actions' to be non-null");
        this.principal = Objects.requireNonNull(principal, "expected parameter 'principal' to be non-null");
    }

    private DataSourcePermissionArgs() {
        this.actions = Codegen.empty();
        this.principal = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourcePermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<List<String>> actions;
        private Output<String> principal;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourcePermissionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.principal = defaults.principal;
        }

        public Builder actions(Output<List<String>> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }
        public Builder actions(List<String> actions) {
            this.actions = Output.of(Objects.requireNonNull(actions));
            return this;
        }
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }
        public Builder principal(Output<String> principal) {
            this.principal = Objects.requireNonNull(principal);
            return this;
        }
        public Builder principal(String principal) {
            this.principal = Output.of(Objects.requireNonNull(principal));
            return this;
        }        public DataSourcePermissionArgs build() {
            return new DataSourcePermissionArgs(actions, principal);
        }
    }
}
