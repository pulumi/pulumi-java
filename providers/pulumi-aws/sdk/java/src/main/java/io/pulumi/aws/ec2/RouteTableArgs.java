// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2;

import io.pulumi.aws.ec2.inputs.RouteTableRouteArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RouteTableArgs extends io.pulumi.resources.ResourceArgs {

    public static final RouteTableArgs Empty = new RouteTableArgs();

    /**
     * A list of virtual gateways for propagation.
     * 
     */
    @InputImport(name="propagatingVgws")
      private final @Nullable Input<List<String>> propagatingVgws;

    public Input<List<String>> getPropagatingVgws() {
        return this.propagatingVgws == null ? Input.empty() : this.propagatingVgws;
    }

    /**
     * A list of route objects. Their keys are documented below.
     * 
     */
    @InputImport(name="routes")
      private final @Nullable Input<List<RouteTableRouteArgs>> routes;

    public Input<List<RouteTableRouteArgs>> getRoutes() {
        return this.routes == null ? Input.empty() : this.routes;
    }

    /**
     * A map of tags to assign to the resource.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * The VPC ID.
     * 
     */
    @InputImport(name="vpcId", required=true)
      private final Input<String> vpcId;

    public Input<String> getVpcId() {
        return this.vpcId;
    }

    public RouteTableArgs(
        @Nullable Input<List<String>> propagatingVgws,
        @Nullable Input<List<RouteTableRouteArgs>> routes,
        @Nullable Input<Map<String,String>> tags,
        Input<String> vpcId) {
        this.propagatingVgws = propagatingVgws;
        this.routes = routes;
        this.tags = tags;
        this.vpcId = Objects.requireNonNull(vpcId, "expected parameter 'vpcId' to be non-null");
    }

    private RouteTableArgs() {
        this.propagatingVgws = Input.empty();
        this.routes = Input.empty();
        this.tags = Input.empty();
        this.vpcId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouteTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> propagatingVgws;
        private @Nullable Input<List<RouteTableRouteArgs>> routes;
        private @Nullable Input<Map<String,String>> tags;
        private Input<String> vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(RouteTableArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.propagatingVgws = defaults.propagatingVgws;
    	      this.routes = defaults.routes;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder propagatingVgws(@Nullable Input<List<String>> propagatingVgws) {
            this.propagatingVgws = propagatingVgws;
            return this;
        }

        public Builder propagatingVgws(@Nullable List<String> propagatingVgws) {
            this.propagatingVgws = Input.ofNullable(propagatingVgws);
            return this;
        }

        public Builder routes(@Nullable Input<List<RouteTableRouteArgs>> routes) {
            this.routes = routes;
            return this;
        }

        public Builder routes(@Nullable List<RouteTableRouteArgs> routes) {
            this.routes = Input.ofNullable(routes);
            return this;
        }

        public Builder tags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder vpcId(Input<String> vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }

        public Builder vpcId(String vpcId) {
            this.vpcId = Input.of(Objects.requireNonNull(vpcId));
            return this;
        }
        public RouteTableArgs build() {
            return new RouteTableArgs(propagatingVgws, routes, tags, vpcId);
        }
    }
}
