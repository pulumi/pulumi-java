// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cloudformation;

import io.pulumi.aws.cloudformation.inputs.StackSetInstanceDeploymentTargetsArgs;
import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StackSetInstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final StackSetInstanceArgs Empty = new StackSetInstanceArgs();

    /**
     * Target AWS Account ID to create a Stack based on the StackSet. Defaults to current account.
     * 
     */
    @InputImport(name="accountId")
      private final @Nullable Input<String> accountId;

    public Input<String> getAccountId() {
        return this.accountId == null ? Input.empty() : this.accountId;
    }

    /**
     * The AWS Organizations accounts to which StackSets deploys. StackSets doesn't deploy stack instances to the organization management account, even if the organization management account is in your organization or in an OU in your organization. Drift detection is not possible for this argument. See deployment_targets below.
     * 
     */
    @InputImport(name="deploymentTargets")
      private final @Nullable Input<StackSetInstanceDeploymentTargetsArgs> deploymentTargets;

    public Input<StackSetInstanceDeploymentTargetsArgs> getDeploymentTargets() {
        return this.deploymentTargets == null ? Input.empty() : this.deploymentTargets;
    }

    /**
     * Key-value map of input parameters to override from the StackSet for this Instance.
     * 
     */
    @InputImport(name="parameterOverrides")
      private final @Nullable Input<Map<String,String>> parameterOverrides;

    public Input<Map<String,String>> getParameterOverrides() {
        return this.parameterOverrides == null ? Input.empty() : this.parameterOverrides;
    }

    /**
     * Target AWS Region to create a Stack based on the StackSet. Defaults to current region.
     * 
     */
    @InputImport(name="region")
      private final @Nullable Input<String> region;

    public Input<String> getRegion() {
        return this.region == null ? Input.empty() : this.region;
    }

    /**
     * During resource destroy, remove Instance from StackSet while keeping the Stack and its associated resources. Must be enabled in the state _before_ destroy operation to take effect. You cannot reassociate a retained Stack or add an existing, saved Stack to a new StackSet. Defaults to `false`.
     * 
     */
    @InputImport(name="retainStack")
      private final @Nullable Input<Boolean> retainStack;

    public Input<Boolean> getRetainStack() {
        return this.retainStack == null ? Input.empty() : this.retainStack;
    }

    /**
     * Name of the StackSet.
     * 
     */
    @InputImport(name="stackSetName", required=true)
      private final Input<String> stackSetName;

    public Input<String> getStackSetName() {
        return this.stackSetName;
    }

    public StackSetInstanceArgs(
        @Nullable Input<String> accountId,
        @Nullable Input<StackSetInstanceDeploymentTargetsArgs> deploymentTargets,
        @Nullable Input<Map<String,String>> parameterOverrides,
        @Nullable Input<String> region,
        @Nullable Input<Boolean> retainStack,
        Input<String> stackSetName) {
        this.accountId = accountId;
        this.deploymentTargets = deploymentTargets;
        this.parameterOverrides = parameterOverrides;
        this.region = region;
        this.retainStack = retainStack;
        this.stackSetName = Objects.requireNonNull(stackSetName, "expected parameter 'stackSetName' to be non-null");
    }

    private StackSetInstanceArgs() {
        this.accountId = Input.empty();
        this.deploymentTargets = Input.empty();
        this.parameterOverrides = Input.empty();
        this.region = Input.empty();
        this.retainStack = Input.empty();
        this.stackSetName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StackSetInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> accountId;
        private @Nullable Input<StackSetInstanceDeploymentTargetsArgs> deploymentTargets;
        private @Nullable Input<Map<String,String>> parameterOverrides;
        private @Nullable Input<String> region;
        private @Nullable Input<Boolean> retainStack;
        private Input<String> stackSetName;

        public Builder() {
    	      // Empty
        }

        public Builder(StackSetInstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.deploymentTargets = defaults.deploymentTargets;
    	      this.parameterOverrides = defaults.parameterOverrides;
    	      this.region = defaults.region;
    	      this.retainStack = defaults.retainStack;
    	      this.stackSetName = defaults.stackSetName;
        }

        public Builder setAccountId(@Nullable Input<String> accountId) {
            this.accountId = accountId;
            return this;
        }

        public Builder setAccountId(@Nullable String accountId) {
            this.accountId = Input.ofNullable(accountId);
            return this;
        }

        public Builder setDeploymentTargets(@Nullable Input<StackSetInstanceDeploymentTargetsArgs> deploymentTargets) {
            this.deploymentTargets = deploymentTargets;
            return this;
        }

        public Builder setDeploymentTargets(@Nullable StackSetInstanceDeploymentTargetsArgs deploymentTargets) {
            this.deploymentTargets = Input.ofNullable(deploymentTargets);
            return this;
        }

        public Builder setParameterOverrides(@Nullable Input<Map<String,String>> parameterOverrides) {
            this.parameterOverrides = parameterOverrides;
            return this;
        }

        public Builder setParameterOverrides(@Nullable Map<String,String> parameterOverrides) {
            this.parameterOverrides = Input.ofNullable(parameterOverrides);
            return this;
        }

        public Builder setRegion(@Nullable Input<String> region) {
            this.region = region;
            return this;
        }

        public Builder setRegion(@Nullable String region) {
            this.region = Input.ofNullable(region);
            return this;
        }

        public Builder setRetainStack(@Nullable Input<Boolean> retainStack) {
            this.retainStack = retainStack;
            return this;
        }

        public Builder setRetainStack(@Nullable Boolean retainStack) {
            this.retainStack = Input.ofNullable(retainStack);
            return this;
        }

        public Builder setStackSetName(Input<String> stackSetName) {
            this.stackSetName = Objects.requireNonNull(stackSetName);
            return this;
        }

        public Builder setStackSetName(String stackSetName) {
            this.stackSetName = Input.of(Objects.requireNonNull(stackSetName));
            return this;
        }
        public StackSetInstanceArgs build() {
            return new StackSetInstanceArgs(accountId, deploymentTargets, parameterOverrides, region, retainStack, stackSetName);
        }
    }
}
