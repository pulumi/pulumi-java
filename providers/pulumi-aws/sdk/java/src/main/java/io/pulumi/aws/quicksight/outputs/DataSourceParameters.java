// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.quicksight.outputs;

import io.pulumi.aws.quicksight.outputs.DataSourceParametersAmazonElasticsearch;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersAthena;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersAurora;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersAuroraPostgresql;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersAwsIotAnalytics;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersJira;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersMariaDb;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersMysql;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersOracle;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersPostgresql;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersPresto;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersRds;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersRedshift;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersS3;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersServiceNow;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersSnowflake;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersSpark;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersSqlServer;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersTeradata;
import io.pulumi.aws.quicksight.outputs.DataSourceParametersTwitter;
import io.pulumi.core.annotations.OutputCustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@OutputCustomType
public final class DataSourceParameters {
    /**
     * Parameters for connecting to Amazon Elasticsearch.
     * 
     */
    private final @Nullable DataSourceParametersAmazonElasticsearch amazonElasticsearch;
    /**
     * Parameters for connecting to Athena.
     * 
     */
    private final @Nullable DataSourceParametersAthena athena;
    /**
     * Parameters for connecting to Aurora MySQL.
     * 
     */
    private final @Nullable DataSourceParametersAurora aurora;
    /**
     * Parameters for connecting to Aurora Postgresql.
     * 
     */
    private final @Nullable DataSourceParametersAuroraPostgresql auroraPostgresql;
    /**
     * Parameters for connecting to AWS IOT Analytics.
     * 
     */
    private final @Nullable DataSourceParametersAwsIotAnalytics awsIotAnalytics;
    /**
     * Parameters for connecting to Jira.
     * 
     */
    private final @Nullable DataSourceParametersJira jira;
    /**
     * Parameters for connecting to MariaDB.
     * 
     */
    private final @Nullable DataSourceParametersMariaDb mariaDb;
    /**
     * Parameters for connecting to MySQL.
     * 
     */
    private final @Nullable DataSourceParametersMysql mysql;
    /**
     * Parameters for connecting to Oracle.
     * 
     */
    private final @Nullable DataSourceParametersOracle oracle;
    /**
     * Parameters for connecting to Postgresql.
     * 
     */
    private final @Nullable DataSourceParametersPostgresql postgresql;
    /**
     * Parameters for connecting to Presto.
     * 
     */
    private final @Nullable DataSourceParametersPresto presto;
    /**
     * Parameters for connecting to RDS.
     * 
     */
    private final @Nullable DataSourceParametersRds rds;
    /**
     * Parameters for connecting to Redshift.
     * 
     */
    private final @Nullable DataSourceParametersRedshift redshift;
    /**
     * Parameters for connecting to S3.
     * 
     */
    private final @Nullable DataSourceParametersS3 s3;
    /**
     * Parameters for connecting to ServiceNow.
     * 
     */
    private final @Nullable DataSourceParametersServiceNow serviceNow;
    /**
     * Parameters for connecting to Snowflake.
     * 
     */
    private final @Nullable DataSourceParametersSnowflake snowflake;
    /**
     * Parameters for connecting to Spark.
     * 
     */
    private final @Nullable DataSourceParametersSpark spark;
    /**
     * Parameters for connecting to SQL Server.
     * 
     */
    private final @Nullable DataSourceParametersSqlServer sqlServer;
    /**
     * Parameters for connecting to Teradata.
     * 
     */
    private final @Nullable DataSourceParametersTeradata teradata;
    /**
     * Parameters for connecting to Twitter.
     * 
     */
    private final @Nullable DataSourceParametersTwitter twitter;

    @OutputCustomType.Constructor
    private DataSourceParameters(
        @OutputCustomType.Parameter("amazonElasticsearch") @Nullable DataSourceParametersAmazonElasticsearch amazonElasticsearch,
        @OutputCustomType.Parameter("athena") @Nullable DataSourceParametersAthena athena,
        @OutputCustomType.Parameter("aurora") @Nullable DataSourceParametersAurora aurora,
        @OutputCustomType.Parameter("auroraPostgresql") @Nullable DataSourceParametersAuroraPostgresql auroraPostgresql,
        @OutputCustomType.Parameter("awsIotAnalytics") @Nullable DataSourceParametersAwsIotAnalytics awsIotAnalytics,
        @OutputCustomType.Parameter("jira") @Nullable DataSourceParametersJira jira,
        @OutputCustomType.Parameter("mariaDb") @Nullable DataSourceParametersMariaDb mariaDb,
        @OutputCustomType.Parameter("mysql") @Nullable DataSourceParametersMysql mysql,
        @OutputCustomType.Parameter("oracle") @Nullable DataSourceParametersOracle oracle,
        @OutputCustomType.Parameter("postgresql") @Nullable DataSourceParametersPostgresql postgresql,
        @OutputCustomType.Parameter("presto") @Nullable DataSourceParametersPresto presto,
        @OutputCustomType.Parameter("rds") @Nullable DataSourceParametersRds rds,
        @OutputCustomType.Parameter("redshift") @Nullable DataSourceParametersRedshift redshift,
        @OutputCustomType.Parameter("s3") @Nullable DataSourceParametersS3 s3,
        @OutputCustomType.Parameter("serviceNow") @Nullable DataSourceParametersServiceNow serviceNow,
        @OutputCustomType.Parameter("snowflake") @Nullable DataSourceParametersSnowflake snowflake,
        @OutputCustomType.Parameter("spark") @Nullable DataSourceParametersSpark spark,
        @OutputCustomType.Parameter("sqlServer") @Nullable DataSourceParametersSqlServer sqlServer,
        @OutputCustomType.Parameter("teradata") @Nullable DataSourceParametersTeradata teradata,
        @OutputCustomType.Parameter("twitter") @Nullable DataSourceParametersTwitter twitter) {
        this.amazonElasticsearch = amazonElasticsearch;
        this.athena = athena;
        this.aurora = aurora;
        this.auroraPostgresql = auroraPostgresql;
        this.awsIotAnalytics = awsIotAnalytics;
        this.jira = jira;
        this.mariaDb = mariaDb;
        this.mysql = mysql;
        this.oracle = oracle;
        this.postgresql = postgresql;
        this.presto = presto;
        this.rds = rds;
        this.redshift = redshift;
        this.s3 = s3;
        this.serviceNow = serviceNow;
        this.snowflake = snowflake;
        this.spark = spark;
        this.sqlServer = sqlServer;
        this.teradata = teradata;
        this.twitter = twitter;
    }

    /**
     * Parameters for connecting to Amazon Elasticsearch.
     * 
    */
    public Optional<DataSourceParametersAmazonElasticsearch> getAmazonElasticsearch() {
        return Optional.ofNullable(this.amazonElasticsearch);
    }
    /**
     * Parameters for connecting to Athena.
     * 
    */
    public Optional<DataSourceParametersAthena> getAthena() {
        return Optional.ofNullable(this.athena);
    }
    /**
     * Parameters for connecting to Aurora MySQL.
     * 
    */
    public Optional<DataSourceParametersAurora> getAurora() {
        return Optional.ofNullable(this.aurora);
    }
    /**
     * Parameters for connecting to Aurora Postgresql.
     * 
    */
    public Optional<DataSourceParametersAuroraPostgresql> getAuroraPostgresql() {
        return Optional.ofNullable(this.auroraPostgresql);
    }
    /**
     * Parameters for connecting to AWS IOT Analytics.
     * 
    */
    public Optional<DataSourceParametersAwsIotAnalytics> getAwsIotAnalytics() {
        return Optional.ofNullable(this.awsIotAnalytics);
    }
    /**
     * Parameters for connecting to Jira.
     * 
    */
    public Optional<DataSourceParametersJira> getJira() {
        return Optional.ofNullable(this.jira);
    }
    /**
     * Parameters for connecting to MariaDB.
     * 
    */
    public Optional<DataSourceParametersMariaDb> getMariaDb() {
        return Optional.ofNullable(this.mariaDb);
    }
    /**
     * Parameters for connecting to MySQL.
     * 
    */
    public Optional<DataSourceParametersMysql> getMysql() {
        return Optional.ofNullable(this.mysql);
    }
    /**
     * Parameters for connecting to Oracle.
     * 
    */
    public Optional<DataSourceParametersOracle> getOracle() {
        return Optional.ofNullable(this.oracle);
    }
    /**
     * Parameters for connecting to Postgresql.
     * 
    */
    public Optional<DataSourceParametersPostgresql> getPostgresql() {
        return Optional.ofNullable(this.postgresql);
    }
    /**
     * Parameters for connecting to Presto.
     * 
    */
    public Optional<DataSourceParametersPresto> getPresto() {
        return Optional.ofNullable(this.presto);
    }
    /**
     * Parameters for connecting to RDS.
     * 
    */
    public Optional<DataSourceParametersRds> getRds() {
        return Optional.ofNullable(this.rds);
    }
    /**
     * Parameters for connecting to Redshift.
     * 
    */
    public Optional<DataSourceParametersRedshift> getRedshift() {
        return Optional.ofNullable(this.redshift);
    }
    /**
     * Parameters for connecting to S3.
     * 
    */
    public Optional<DataSourceParametersS3> getS3() {
        return Optional.ofNullable(this.s3);
    }
    /**
     * Parameters for connecting to ServiceNow.
     * 
    */
    public Optional<DataSourceParametersServiceNow> getServiceNow() {
        return Optional.ofNullable(this.serviceNow);
    }
    /**
     * Parameters for connecting to Snowflake.
     * 
    */
    public Optional<DataSourceParametersSnowflake> getSnowflake() {
        return Optional.ofNullable(this.snowflake);
    }
    /**
     * Parameters for connecting to Spark.
     * 
    */
    public Optional<DataSourceParametersSpark> getSpark() {
        return Optional.ofNullable(this.spark);
    }
    /**
     * Parameters for connecting to SQL Server.
     * 
    */
    public Optional<DataSourceParametersSqlServer> getSqlServer() {
        return Optional.ofNullable(this.sqlServer);
    }
    /**
     * Parameters for connecting to Teradata.
     * 
    */
    public Optional<DataSourceParametersTeradata> getTeradata() {
        return Optional.ofNullable(this.teradata);
    }
    /**
     * Parameters for connecting to Twitter.
     * 
    */
    public Optional<DataSourceParametersTwitter> getTwitter() {
        return Optional.ofNullable(this.twitter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceParameters defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DataSourceParametersAmazonElasticsearch amazonElasticsearch;
        private @Nullable DataSourceParametersAthena athena;
        private @Nullable DataSourceParametersAurora aurora;
        private @Nullable DataSourceParametersAuroraPostgresql auroraPostgresql;
        private @Nullable DataSourceParametersAwsIotAnalytics awsIotAnalytics;
        private @Nullable DataSourceParametersJira jira;
        private @Nullable DataSourceParametersMariaDb mariaDb;
        private @Nullable DataSourceParametersMysql mysql;
        private @Nullable DataSourceParametersOracle oracle;
        private @Nullable DataSourceParametersPostgresql postgresql;
        private @Nullable DataSourceParametersPresto presto;
        private @Nullable DataSourceParametersRds rds;
        private @Nullable DataSourceParametersRedshift redshift;
        private @Nullable DataSourceParametersS3 s3;
        private @Nullable DataSourceParametersServiceNow serviceNow;
        private @Nullable DataSourceParametersSnowflake snowflake;
        private @Nullable DataSourceParametersSpark spark;
        private @Nullable DataSourceParametersSqlServer sqlServer;
        private @Nullable DataSourceParametersTeradata teradata;
        private @Nullable DataSourceParametersTwitter twitter;

        public Builder() {
    	      // Empty
        }

        public Builder(DataSourceParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amazonElasticsearch = defaults.amazonElasticsearch;
    	      this.athena = defaults.athena;
    	      this.aurora = defaults.aurora;
    	      this.auroraPostgresql = defaults.auroraPostgresql;
    	      this.awsIotAnalytics = defaults.awsIotAnalytics;
    	      this.jira = defaults.jira;
    	      this.mariaDb = defaults.mariaDb;
    	      this.mysql = defaults.mysql;
    	      this.oracle = defaults.oracle;
    	      this.postgresql = defaults.postgresql;
    	      this.presto = defaults.presto;
    	      this.rds = defaults.rds;
    	      this.redshift = defaults.redshift;
    	      this.s3 = defaults.s3;
    	      this.serviceNow = defaults.serviceNow;
    	      this.snowflake = defaults.snowflake;
    	      this.spark = defaults.spark;
    	      this.sqlServer = defaults.sqlServer;
    	      this.teradata = defaults.teradata;
    	      this.twitter = defaults.twitter;
        }

        public Builder setAmazonElasticsearch(@Nullable DataSourceParametersAmazonElasticsearch amazonElasticsearch) {
            this.amazonElasticsearch = amazonElasticsearch;
            return this;
        }

        public Builder setAthena(@Nullable DataSourceParametersAthena athena) {
            this.athena = athena;
            return this;
        }

        public Builder setAurora(@Nullable DataSourceParametersAurora aurora) {
            this.aurora = aurora;
            return this;
        }

        public Builder setAuroraPostgresql(@Nullable DataSourceParametersAuroraPostgresql auroraPostgresql) {
            this.auroraPostgresql = auroraPostgresql;
            return this;
        }

        public Builder setAwsIotAnalytics(@Nullable DataSourceParametersAwsIotAnalytics awsIotAnalytics) {
            this.awsIotAnalytics = awsIotAnalytics;
            return this;
        }

        public Builder setJira(@Nullable DataSourceParametersJira jira) {
            this.jira = jira;
            return this;
        }

        public Builder setMariaDb(@Nullable DataSourceParametersMariaDb mariaDb) {
            this.mariaDb = mariaDb;
            return this;
        }

        public Builder setMysql(@Nullable DataSourceParametersMysql mysql) {
            this.mysql = mysql;
            return this;
        }

        public Builder setOracle(@Nullable DataSourceParametersOracle oracle) {
            this.oracle = oracle;
            return this;
        }

        public Builder setPostgresql(@Nullable DataSourceParametersPostgresql postgresql) {
            this.postgresql = postgresql;
            return this;
        }

        public Builder setPresto(@Nullable DataSourceParametersPresto presto) {
            this.presto = presto;
            return this;
        }

        public Builder setRds(@Nullable DataSourceParametersRds rds) {
            this.rds = rds;
            return this;
        }

        public Builder setRedshift(@Nullable DataSourceParametersRedshift redshift) {
            this.redshift = redshift;
            return this;
        }

        public Builder setS3(@Nullable DataSourceParametersS3 s3) {
            this.s3 = s3;
            return this;
        }

        public Builder setServiceNow(@Nullable DataSourceParametersServiceNow serviceNow) {
            this.serviceNow = serviceNow;
            return this;
        }

        public Builder setSnowflake(@Nullable DataSourceParametersSnowflake snowflake) {
            this.snowflake = snowflake;
            return this;
        }

        public Builder setSpark(@Nullable DataSourceParametersSpark spark) {
            this.spark = spark;
            return this;
        }

        public Builder setSqlServer(@Nullable DataSourceParametersSqlServer sqlServer) {
            this.sqlServer = sqlServer;
            return this;
        }

        public Builder setTeradata(@Nullable DataSourceParametersTeradata teradata) {
            this.teradata = teradata;
            return this;
        }

        public Builder setTwitter(@Nullable DataSourceParametersTwitter twitter) {
            this.twitter = twitter;
            return this;
        }
        public DataSourceParameters build() {
            return new DataSourceParameters(amazonElasticsearch, athena, aurora, auroraPostgresql, awsIotAnalytics, jira, mariaDb, mysql, oracle, postgresql, presto, rds, redshift, s3, serviceNow, snowflake, spark, sqlServer, teradata, twitter);
        }
    }
}
