// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.cfg;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.cfg.RuleArgs;
import io.pulumi.aws.cfg.inputs.RuleState;
import io.pulumi.aws.cfg.outputs.RuleScope;
import io.pulumi.aws.cfg.outputs.RuleSource;
import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides an AWS Config Rule.
 * 
 * > **Note:** Config Rule requires an existing `Configuration Recorder` to be present. Use of `depends_on` is recommended (as shown below) to avoid race conditions.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Config Rule can be imported using the name, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:cfg/rule:Rule foo example
 * ```
 * 
 */
@ResourceType(type="aws:cfg/rule:Rule")
public class Rule extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the config rule
     * 
     */
    @OutputExport(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the config rule
     * 
     */
    public Output<String> getArn() {
        return this.arn;
    }
    /**
     * Description of the rule
     * 
     */
    @OutputExport(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the rule
     * 
     */
    public Output</* @Nullable */ String> getDescription() {
        return this.description;
    }
    /**
     * A string in JSON format that is passed to the AWS Config rule Lambda function.
     * 
     */
    @OutputExport(name="inputParameters", type=String.class, parameters={})
    private Output</* @Nullable */ String> inputParameters;

    /**
     * @return A string in JSON format that is passed to the AWS Config rule Lambda function.
     * 
     */
    public Output</* @Nullable */ String> getInputParameters() {
        return this.inputParameters;
    }
    /**
     * The frequency that you want AWS Config to run evaluations for a rule that is triggered periodically. If specified, requires `message_type` to be `ScheduledNotification`.
     * 
     */
    @OutputExport(name="maximumExecutionFrequency", type=String.class, parameters={})
    private Output</* @Nullable */ String> maximumExecutionFrequency;

    /**
     * @return The frequency that you want AWS Config to run evaluations for a rule that is triggered periodically. If specified, requires `message_type` to be `ScheduledNotification`.
     * 
     */
    public Output</* @Nullable */ String> getMaximumExecutionFrequency() {
        return this.maximumExecutionFrequency;
    }
    /**
     * The name of the rule
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the rule
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The ID of the config rule
     * 
     */
    @OutputExport(name="ruleId", type=String.class, parameters={})
    private Output<String> ruleId;

    /**
     * @return The ID of the config rule
     * 
     */
    public Output<String> getRuleId() {
        return this.ruleId;
    }
    /**
     * Scope defines which resources can trigger an evaluation for the rule as documented below.
     * 
     */
    @OutputExport(name="scope", type=RuleScope.class, parameters={})
    private Output</* @Nullable */ RuleScope> scope;

    /**
     * @return Scope defines which resources can trigger an evaluation for the rule as documented below.
     * 
     */
    public Output</* @Nullable */ RuleScope> getScope() {
        return this.scope;
    }
    /**
     * Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources as documented below.
     * 
     */
    @OutputExport(name="source", type=RuleSource.class, parameters={})
    private Output<RuleSource> source;

    /**
     * @return Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources as documented below.
     * 
     */
    public Output<RuleSource> getSource() {
        return this.source;
    }
    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @OutputExport(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Output</* @Nullable */ Map<String,String>> getTags() {
        return this.tags;
    }
    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @OutputExport(name="tagsAll", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tagsAll;

    /**
     * @return A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll;
    }

    public interface BuilderApplicator {
        public void apply(RuleArgs.Builder a);
    }
    private static io.pulumi.aws.cfg.RuleArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.aws.cfg.RuleArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public Rule(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Rule(String name) {
        this(name, RuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Rule(String name, RuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Rule(String name, RuleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cfg/rule:Rule", name, args == null ? RuleArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Rule(String name, Input<String> id, @Nullable RuleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:cfg/rule:Rule", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Rule get(String name, Input<String> id, @Nullable RuleState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Rule(name, id, state, options);
    }
}
