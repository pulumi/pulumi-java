// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ecr;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.ecr.inputs.GetRepositoryArgs;
import io.pulumi.aws.ecr.outputs.GetRepositoryResult;
import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetRepository {
    private GetRepository() {}
    public interface BuilderApplicator {
        public void apply(GetRepositoryArgs.Builder a);
    }
    private static GetRepositoryArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = GetRepositoryArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     * The ECR Repository data source allows the ARN, Repository URI and Registry ID to be retrieved for an ECR repository.
 * 
 * ## Example Usage
 * 
     *
     * A collection of arguments for invoking getRepository.
 * 
     *
     * A collection of values returned by getRepository.
 * 
     */
    public static CompletableFuture<GetRepositoryResult> invokeAsync(BuilderApplicator argsBuilder, @Nullable InvokeOptions options) {
        return invokeAsync(buildArgs(argsBuilder), Utilities.withVersion(options));
    }
    /**
         * The ECR Repository data source allows the ARN, Repository URI and Registry ID to be retrieved for an ECR repository.
     * 
     * ## Example Usage
     * 
     *
         * A collection of arguments for invoking getRepository.
     * 
     *
         * A collection of values returned by getRepository.
     * 
     */
    public static CompletableFuture<GetRepositoryResult> invokeAsync(GetRepositoryArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws:ecr/getRepository:getRepository", TypeShape.of(GetRepositoryResult.class), args == null ? GetRepositoryArgs.Empty : args, Utilities.withVersion(options));
    }
}
