// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.directconnect;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HostedPrivateVirtualInterfaceAccepterArgs extends io.pulumi.resources.ResourceArgs {

    public static final HostedPrivateVirtualInterfaceAccepterArgs Empty = new HostedPrivateVirtualInterfaceAccepterArgs();

    /**
     * The ID of the Direct Connect gateway to which to connect the virtual interface.
     * 
     */
    @Import(name="dxGatewayId")
      private final @Nullable Output<String> dxGatewayId;

    public Output<String> getDxGatewayId() {
        return this.dxGatewayId == null ? Output.empty() : this.dxGatewayId;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * The ID of the Direct Connect virtual interface to accept.
     * 
     */
    @Import(name="virtualInterfaceId", required=true)
      private final Output<String> virtualInterfaceId;

    public Output<String> getVirtualInterfaceId() {
        return this.virtualInterfaceId;
    }

    /**
     * The ID of the virtual private gateway to which to connect the virtual interface.
     * 
     */
    @Import(name="vpnGatewayId")
      private final @Nullable Output<String> vpnGatewayId;

    public Output<String> getVpnGatewayId() {
        return this.vpnGatewayId == null ? Output.empty() : this.vpnGatewayId;
    }

    public HostedPrivateVirtualInterfaceAccepterArgs(
        @Nullable Output<String> dxGatewayId,
        @Nullable Output<Map<String,String>> tags,
        Output<String> virtualInterfaceId,
        @Nullable Output<String> vpnGatewayId) {
        this.dxGatewayId = dxGatewayId;
        this.tags = tags;
        this.virtualInterfaceId = Objects.requireNonNull(virtualInterfaceId, "expected parameter 'virtualInterfaceId' to be non-null");
        this.vpnGatewayId = vpnGatewayId;
    }

    private HostedPrivateVirtualInterfaceAccepterArgs() {
        this.dxGatewayId = Output.empty();
        this.tags = Output.empty();
        this.virtualInterfaceId = Output.empty();
        this.vpnGatewayId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HostedPrivateVirtualInterfaceAccepterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> dxGatewayId;
        private @Nullable Output<Map<String,String>> tags;
        private Output<String> virtualInterfaceId;
        private @Nullable Output<String> vpnGatewayId;

        public Builder() {
    	      // Empty
        }

        public Builder(HostedPrivateVirtualInterfaceAccepterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dxGatewayId = defaults.dxGatewayId;
    	      this.tags = defaults.tags;
    	      this.virtualInterfaceId = defaults.virtualInterfaceId;
    	      this.vpnGatewayId = defaults.vpnGatewayId;
        }

        public Builder dxGatewayId(@Nullable Output<String> dxGatewayId) {
            this.dxGatewayId = dxGatewayId;
            return this;
        }
        public Builder dxGatewayId(@Nullable String dxGatewayId) {
            this.dxGatewayId = Output.ofNullable(dxGatewayId);
            return this;
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }
        public Builder virtualInterfaceId(Output<String> virtualInterfaceId) {
            this.virtualInterfaceId = Objects.requireNonNull(virtualInterfaceId);
            return this;
        }
        public Builder virtualInterfaceId(String virtualInterfaceId) {
            this.virtualInterfaceId = Output.of(Objects.requireNonNull(virtualInterfaceId));
            return this;
        }
        public Builder vpnGatewayId(@Nullable Output<String> vpnGatewayId) {
            this.vpnGatewayId = vpnGatewayId;
            return this;
        }
        public Builder vpnGatewayId(@Nullable String vpnGatewayId) {
            this.vpnGatewayId = Output.ofNullable(vpnGatewayId);
            return this;
        }        public HostedPrivateVirtualInterfaceAccepterArgs build() {
            return new HostedPrivateVirtualInterfaceAccepterArgs(dxGatewayId, tags, virtualInterfaceId, vpnGatewayId);
        }
    }
}
