// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.opsworks;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.opsworks.PermissionArgs;
import io.pulumi.aws.opsworks.inputs.PermissionState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides an OpsWorks permission resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const myStackPermission = new aws.opsworks.Permission("myStackPermission", {
 *     allowSsh: true,
 *     allowSudo: true,
 *     level: "iam_only",
 *     userArn: aws_iam_user.user.arn,
 *     stackId: aws_opsworks_stack.stack.id,
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * my_stack_permission = aws.opsworks.Permission("myStackPermission",
 *     allow_ssh=True,
 *     allow_sudo=True,
 *     level="iam_only",
 *     user_arn=aws_iam_user["user"]["arn"],
 *     stack_id=aws_opsworks_stack["stack"]["id"])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var myStackPermission = new Aws.OpsWorks.Permission("myStackPermission", new Aws.OpsWorks.PermissionArgs
 *         {
 *             AllowSsh = true,
 *             AllowSudo = true,
 *             Level = "iam_only",
 *             UserArn = aws_iam_user.User.Arn,
 *             StackId = aws_opsworks_stack.Stack.Id,
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/opsworks"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := opsworks.NewPermission(ctx, "myStackPermission", &opsworks.PermissionArgs{
 * 			AllowSsh:  pulumi.Bool(true),
 * 			AllowSudo: pulumi.Bool(true),
 * 			Level:     pulumi.String("iam_only"),
 * 			UserArn:   pulumi.Any(aws_iam_user.User.Arn),
 * 			StackId:   pulumi.Any(aws_opsworks_stack.Stack.Id),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:opsworks/permission:Permission")
public class Permission extends io.pulumi.resources.CustomResource {
    /**
     * Whether the user is allowed to use SSH to communicate with the instance
     * 
     */
    @Export(name="allowSsh", type=Boolean.class, parameters={})
    private Output<Boolean> allowSsh;

    /**
     * @return Whether the user is allowed to use SSH to communicate with the instance
     * 
     */
    public Output<Boolean> getAllowSsh() {
        return this.allowSsh;
    }
    /**
     * Whether the user is allowed to use sudo to elevate privileges
     * 
     */
    @Export(name="allowSudo", type=Boolean.class, parameters={})
    private Output<Boolean> allowSudo;

    /**
     * @return Whether the user is allowed to use sudo to elevate privileges
     * 
     */
    public Output<Boolean> getAllowSudo() {
        return this.allowSudo;
    }
    /**
     * The users permission level. Mus be one of `deny`, `show`, `deploy`, `manage`, `iam_only`
     * 
     */
    @Export(name="level", type=String.class, parameters={})
    private Output<String> level;

    /**
     * @return The users permission level. Mus be one of `deny`, `show`, `deploy`, `manage`, `iam_only`
     * 
     */
    public Output<String> getLevel() {
        return this.level;
    }
    /**
     * The stack to set the permissions for
     * 
     */
    @Export(name="stackId", type=String.class, parameters={})
    private Output<String> stackId;

    /**
     * @return The stack to set the permissions for
     * 
     */
    public Output<String> getStackId() {
        return this.stackId;
    }
    /**
     * The user's IAM ARN to set permissions for
     * 
     */
    @Export(name="userArn", type=String.class, parameters={})
    private Output<String> userArn;

    /**
     * @return The user's IAM ARN to set permissions for
     * 
     */
    public Output<String> getUserArn() {
        return this.userArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Permission(String name) {
        this(name, PermissionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Permission(String name, PermissionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Permission(String name, PermissionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:opsworks/permission:Permission", name, args == null ? PermissionArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Permission(String name, Output<String> id, @Nullable PermissionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:opsworks/permission:Permission", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Permission get(String name, Output<String> id, @Nullable PermissionState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Permission(name, id, state, options);
    }
}
