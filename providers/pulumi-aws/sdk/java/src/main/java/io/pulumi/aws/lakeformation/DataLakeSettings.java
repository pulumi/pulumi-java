// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.lakeformation;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.lakeformation.DataLakeSettingsArgs;
import io.pulumi.aws.lakeformation.inputs.DataLakeSettingsState;
import io.pulumi.aws.lakeformation.outputs.DataLakeSettingsCreateDatabaseDefaultPermission;
import io.pulumi.aws.lakeformation.outputs.DataLakeSettingsCreateTableDefaultPermission;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
 * 
 * > **NOTE:** Lake Formation introduces fine-grained access control for data in your data lake. Part of the changes include the `IAMAllowedPrincipals` principal in order to make Lake Formation backwards compatible with existing IAM and Glue permissions. For more information, see [Changing the Default Security Settings for Your Data Lake](https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html) and [Upgrading AWS Glue Data Permissions to the AWS Lake Formation Model](https://docs.aws.amazon.com/lake-formation/latest/dg/upgrade-glue-lake-formation.html).
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * ### Data Lake Admins
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.lakeformation.DataLakeSettings("example", {admins: [
 *     aws_iam_user.test.arn,
 *     aws_iam_role.test.arn,
 * ]});
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.lakeformation.DataLakeSettings("example", admins=[
 *     aws_iam_user["test"]["arn"],
 *     aws_iam_role["test"]["arn"],
 * ])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.LakeFormation.DataLakeSettings("example", new Aws.LakeFormation.DataLakeSettingsArgs
 *         {
 *             Admins = 
 *             {
 *                 aws_iam_user.Test.Arn,
 *                 aws_iam_role.Test.Arn,
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/lakeformation"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := lakeformation.NewDataLakeSettings(ctx, "example", &lakeformation.DataLakeSettingsArgs{
 * 			Admins: pulumi.StringArray{
 * 				pulumi.Any(aws_iam_user.Test.Arn),
 * 				pulumi.Any(aws_iam_role.Test.Arn),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% example %}}
 * ### Create Default Permissions
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const example = new aws.lakeformation.DataLakeSettings("example", {
 *     admins: [
 *         aws_iam_user.test.arn,
 *         aws_iam_role.test.arn,
 *     ],
 *     createDatabaseDefaultPermissions: [{
 *         permissions: [
 *             "SELECT",
 *             "ALTER",
 *             "DROP",
 *         ],
 *         principal: aws_iam_user.test.arn,
 *     }],
 *     createTableDefaultPermissions: [{
 *         permissions: ["ALL"],
 *         principal: aws_iam_role.test.arn,
 *     }],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * example = aws.lakeformation.DataLakeSettings("example",
 *     admins=[
 *         aws_iam_user["test"]["arn"],
 *         aws_iam_role["test"]["arn"],
 *     ],
 *     create_database_default_permissions=[aws.lakeformation.DataLakeSettingsCreateDatabaseDefaultPermissionArgs(
 *         permissions=[
 *             "SELECT",
 *             "ALTER",
 *             "DROP",
 *         ],
 *         principal=aws_iam_user["test"]["arn"],
 *     )],
 *     create_table_default_permissions=[aws.lakeformation.DataLakeSettingsCreateTableDefaultPermissionArgs(
 *         permissions=["ALL"],
 *         principal=aws_iam_role["test"]["arn"],
 *     )])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var example = new Aws.LakeFormation.DataLakeSettings("example", new Aws.LakeFormation.DataLakeSettingsArgs
 *         {
 *             Admins = 
 *             {
 *                 aws_iam_user.Test.Arn,
 *                 aws_iam_role.Test.Arn,
 *             },
 *             CreateDatabaseDefaultPermissions = 
 *             {
 *                 new Aws.LakeFormation.Inputs.DataLakeSettingsCreateDatabaseDefaultPermissionArgs
 *                 {
 *                     Permissions = 
 *                     {
 *                         "SELECT",
 *                         "ALTER",
 *                         "DROP",
 *                     },
 *                     Principal = aws_iam_user.Test.Arn,
 *                 },
 *             },
 *             CreateTableDefaultPermissions = 
 *             {
 *                 new Aws.LakeFormation.Inputs.DataLakeSettingsCreateTableDefaultPermissionArgs
 *                 {
 *                     Permissions = 
 *                     {
 *                         "ALL",
 *                     },
 *                     Principal = aws_iam_role.Test.Arn,
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/lakeformation"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		_, err := lakeformation.NewDataLakeSettings(ctx, "example", &lakeformation.DataLakeSettingsArgs{
 * 			Admins: pulumi.StringArray{
 * 				pulumi.Any(aws_iam_user.Test.Arn),
 * 				pulumi.Any(aws_iam_role.Test.Arn),
 * 			},
 * 			CreateDatabaseDefaultPermissions: lakeformation.DataLakeSettingsCreateDatabaseDefaultPermissionArray{
 * 				&lakeformation.DataLakeSettingsCreateDatabaseDefaultPermissionArgs{
 * 					Permissions: pulumi.StringArray{
 * 						pulumi.String("SELECT"),
 * 						pulumi.String("ALTER"),
 * 						pulumi.String("DROP"),
 * 					},
 * 					Principal: pulumi.Any(aws_iam_user.Test.Arn),
 * 				},
 * 			},
 * 			CreateTableDefaultPermissions: lakeformation.DataLakeSettingsCreateTableDefaultPermissionArray{
 * 				&lakeformation.DataLakeSettingsCreateTableDefaultPermissionArgs{
 * 					Permissions: pulumi.StringArray{
 * 						pulumi.String("ALL"),
 * 					},
 * 					Principal: pulumi.Any(aws_iam_role.Test.Arn),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 */
@ResourceType(type="aws:lakeformation/dataLakeSettings:DataLakeSettings")
public class DataLakeSettings extends io.pulumi.resources.CustomResource {
    /**
     * Set of ARNs of AWS Lake Formation principals (IAM users or roles).
     * 
     */
    @Export(name="admins", type=List.class, parameters={String.class})
    private Output<List<String>> admins;

    /**
     * @return Set of ARNs of AWS Lake Formation principals (IAM users or roles).
     * 
     */
    public Output<List<String>> getAdmins() {
        return this.admins;
    }
    /**
     * Identifier for the Data Catalog. By default, the account ID.
     * 
     */
    @Export(name="catalogId", type=String.class, parameters={})
    private Output</* @Nullable */ String> catalogId;

    /**
     * @return Identifier for the Data Catalog. By default, the account ID.
     * 
     */
    public Output</* @Nullable */ String> getCatalogId() {
        return this.catalogId;
    }
    /**
     * Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
     * 
     */
    @Export(name="createDatabaseDefaultPermissions", type=List.class, parameters={DataLakeSettingsCreateDatabaseDefaultPermission.class})
    private Output<List<DataLakeSettingsCreateDatabaseDefaultPermission>> createDatabaseDefaultPermissions;

    /**
     * @return Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
     * 
     */
    public Output<List<DataLakeSettingsCreateDatabaseDefaultPermission>> getCreateDatabaseDefaultPermissions() {
        return this.createDatabaseDefaultPermissions;
    }
    /**
     * Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
     * 
     */
    @Export(name="createTableDefaultPermissions", type=List.class, parameters={DataLakeSettingsCreateTableDefaultPermission.class})
    private Output<List<DataLakeSettingsCreateTableDefaultPermission>> createTableDefaultPermissions;

    /**
     * @return Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
     * 
     */
    public Output<List<DataLakeSettingsCreateTableDefaultPermission>> getCreateTableDefaultPermissions() {
        return this.createTableDefaultPermissions;
    }
    /**
     * List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
     * 
     */
    @Export(name="trustedResourceOwners", type=List.class, parameters={String.class})
    private Output<List<String>> trustedResourceOwners;

    /**
     * @return List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
     * 
     */
    public Output<List<String>> getTrustedResourceOwners() {
        return this.trustedResourceOwners;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataLakeSettings(String name) {
        this(name, DataLakeSettingsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataLakeSettings(String name, @Nullable DataLakeSettingsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataLakeSettings(String name, @Nullable DataLakeSettingsArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:lakeformation/dataLakeSettings:DataLakeSettings", name, args == null ? DataLakeSettingsArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private DataLakeSettings(String name, Output<String> id, @Nullable DataLakeSettingsState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:lakeformation/dataLakeSettings:DataLakeSettings", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataLakeSettings get(String name, Output<String> id, @Nullable DataLakeSettingsState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new DataLakeSettings(name, id, state, options);
    }
}
