// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.dms.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EndpointKafkaSettings {
    /**
     * Kafka broker location. Specify in the form broker-hostname-or-ip:port.
     * 
     */
    private final String broker;
    /**
     * Shows detailed control information for table definition, column definition, and table and column changes in the Kafka message output. The default is `false`.
     * 
     */
    private final @Nullable Boolean includeControlDetails;
    /**
     * Include NULL and empty columns for records migrated to the endpoint. The default is `false`.
     * 
     */
    private final @Nullable Boolean includeNullAndEmpty;
    /**
     * Shows the partition value within the Kafka message output unless the partition type is `schema-table-type`. The default is `false`.
     * 
     */
    private final @Nullable Boolean includePartitionValue;
    /**
     * Includes any data definition language (DDL) operations that change the table in the control data, such as `rename-table`, `drop-table`, `add-column`, `drop-column`, and `rename-column`. The default is `false`.
     * 
     */
    private final @Nullable Boolean includeTableAlterOperations;
    /**
     * Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for `transaction_id`, previous `transaction_id`, and `transaction_record_id` (the record offset within a transaction). The default is `false`.
     * 
     */
    private final @Nullable Boolean includeTransactionDetails;
    /**
     * The output format for the records created on the endpoint. The message format is `JSON` (default) or `JSON_UNFORMATTED` (a single line with no tab).
     * 
     */
    private final @Nullable String messageFormat;
    /**
     * The maximum size in bytes for records created on the endpoint The default is `1,000,000`.
     * 
     */
    private final @Nullable Integer messageMaxBytes;
    /**
     * Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the `no_hex_prefix` endpoint setting to enable migration of RAW data type columns without adding the `'0x'` prefix.
     * 
     */
    private final @Nullable Boolean noHexPrefix;
    /**
     * Prefixes schema and table names to partition values, when the partition type is `primary-key-type`. Doing this increases data distribution among Kafka partitions. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same partition, which causes throttling. The default is `false`.
     * 
     */
    private final @Nullable Boolean partitionIncludeSchemaTable;
    /**
     * The secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
     * 
     */
    private final @Nullable String saslPassword;
    /**
     * The secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
     * 
     */
    private final @Nullable String saslUsername;
    /**
     * Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include `ssl-encryption`, `ssl-authentication`, and `sasl-ssl`. `sasl-ssl` requires `sasl_username` and `sasl_password`.
     * 
     */
    private final @Nullable String securityProtocol;
    /**
     * The Amazon Resource Name (ARN) for the private certificate authority (CA) cert that AWS DMS uses to securely connect to your Kafka target endpoint.
     * 
     */
    private final @Nullable String sslCaCertificateArn;
    /**
     * The Amazon Resource Name (ARN) of the client certificate used to securely connect to a Kafka target endpoint.
     * 
     */
    private final @Nullable String sslClientCertificateArn;
    /**
     * The Amazon Resource Name (ARN) for the client private key used to securely connect to a Kafka target endpoint.
     * 
     */
    private final @Nullable String sslClientKeyArn;
    /**
     * The password for the client private key used to securely connect to a Kafka target endpoint.
     * 
     */
    private final @Nullable String sslClientKeyPassword;
    /**
     * Kafka topic for migration. Defaults to `kafka-default-topic`.
     * 
     */
    private final @Nullable String topic;

    @CustomType.Constructor
    private EndpointKafkaSettings(
        @CustomType.Parameter("broker") String broker,
        @CustomType.Parameter("includeControlDetails") @Nullable Boolean includeControlDetails,
        @CustomType.Parameter("includeNullAndEmpty") @Nullable Boolean includeNullAndEmpty,
        @CustomType.Parameter("includePartitionValue") @Nullable Boolean includePartitionValue,
        @CustomType.Parameter("includeTableAlterOperations") @Nullable Boolean includeTableAlterOperations,
        @CustomType.Parameter("includeTransactionDetails") @Nullable Boolean includeTransactionDetails,
        @CustomType.Parameter("messageFormat") @Nullable String messageFormat,
        @CustomType.Parameter("messageMaxBytes") @Nullable Integer messageMaxBytes,
        @CustomType.Parameter("noHexPrefix") @Nullable Boolean noHexPrefix,
        @CustomType.Parameter("partitionIncludeSchemaTable") @Nullable Boolean partitionIncludeSchemaTable,
        @CustomType.Parameter("saslPassword") @Nullable String saslPassword,
        @CustomType.Parameter("saslUsername") @Nullable String saslUsername,
        @CustomType.Parameter("securityProtocol") @Nullable String securityProtocol,
        @CustomType.Parameter("sslCaCertificateArn") @Nullable String sslCaCertificateArn,
        @CustomType.Parameter("sslClientCertificateArn") @Nullable String sslClientCertificateArn,
        @CustomType.Parameter("sslClientKeyArn") @Nullable String sslClientKeyArn,
        @CustomType.Parameter("sslClientKeyPassword") @Nullable String sslClientKeyPassword,
        @CustomType.Parameter("topic") @Nullable String topic) {
        this.broker = broker;
        this.includeControlDetails = includeControlDetails;
        this.includeNullAndEmpty = includeNullAndEmpty;
        this.includePartitionValue = includePartitionValue;
        this.includeTableAlterOperations = includeTableAlterOperations;
        this.includeTransactionDetails = includeTransactionDetails;
        this.messageFormat = messageFormat;
        this.messageMaxBytes = messageMaxBytes;
        this.noHexPrefix = noHexPrefix;
        this.partitionIncludeSchemaTable = partitionIncludeSchemaTable;
        this.saslPassword = saslPassword;
        this.saslUsername = saslUsername;
        this.securityProtocol = securityProtocol;
        this.sslCaCertificateArn = sslCaCertificateArn;
        this.sslClientCertificateArn = sslClientCertificateArn;
        this.sslClientKeyArn = sslClientKeyArn;
        this.sslClientKeyPassword = sslClientKeyPassword;
        this.topic = topic;
    }

    /**
     * Kafka broker location. Specify in the form broker-hostname-or-ip:port.
     * 
    */
    public String getBroker() {
        return this.broker;
    }
    /**
     * Shows detailed control information for table definition, column definition, and table and column changes in the Kafka message output. The default is `false`.
     * 
    */
    public Optional<Boolean> getIncludeControlDetails() {
        return Optional.ofNullable(this.includeControlDetails);
    }
    /**
     * Include NULL and empty columns for records migrated to the endpoint. The default is `false`.
     * 
    */
    public Optional<Boolean> getIncludeNullAndEmpty() {
        return Optional.ofNullable(this.includeNullAndEmpty);
    }
    /**
     * Shows the partition value within the Kafka message output unless the partition type is `schema-table-type`. The default is `false`.
     * 
    */
    public Optional<Boolean> getIncludePartitionValue() {
        return Optional.ofNullable(this.includePartitionValue);
    }
    /**
     * Includes any data definition language (DDL) operations that change the table in the control data, such as `rename-table`, `drop-table`, `add-column`, `drop-column`, and `rename-column`. The default is `false`.
     * 
    */
    public Optional<Boolean> getIncludeTableAlterOperations() {
        return Optional.ofNullable(this.includeTableAlterOperations);
    }
    /**
     * Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for `transaction_id`, previous `transaction_id`, and `transaction_record_id` (the record offset within a transaction). The default is `false`.
     * 
    */
    public Optional<Boolean> getIncludeTransactionDetails() {
        return Optional.ofNullable(this.includeTransactionDetails);
    }
    /**
     * The output format for the records created on the endpoint. The message format is `JSON` (default) or `JSON_UNFORMATTED` (a single line with no tab).
     * 
    */
    public Optional<String> getMessageFormat() {
        return Optional.ofNullable(this.messageFormat);
    }
    /**
     * The maximum size in bytes for records created on the endpoint The default is `1,000,000`.
     * 
    */
    public Optional<Integer> getMessageMaxBytes() {
        return Optional.ofNullable(this.messageMaxBytes);
    }
    /**
     * Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the `no_hex_prefix` endpoint setting to enable migration of RAW data type columns without adding the `'0x'` prefix.
     * 
    */
    public Optional<Boolean> getNoHexPrefix() {
        return Optional.ofNullable(this.noHexPrefix);
    }
    /**
     * Prefixes schema and table names to partition values, when the partition type is `primary-key-type`. Doing this increases data distribution among Kafka partitions. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same partition, which causes throttling. The default is `false`.
     * 
    */
    public Optional<Boolean> getPartitionIncludeSchemaTable() {
        return Optional.ofNullable(this.partitionIncludeSchemaTable);
    }
    /**
     * The secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
     * 
    */
    public Optional<String> getSaslPassword() {
        return Optional.ofNullable(this.saslPassword);
    }
    /**
     * The secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
     * 
    */
    public Optional<String> getSaslUsername() {
        return Optional.ofNullable(this.saslUsername);
    }
    /**
     * Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include `ssl-encryption`, `ssl-authentication`, and `sasl-ssl`. `sasl-ssl` requires `sasl_username` and `sasl_password`.
     * 
    */
    public Optional<String> getSecurityProtocol() {
        return Optional.ofNullable(this.securityProtocol);
    }
    /**
     * The Amazon Resource Name (ARN) for the private certificate authority (CA) cert that AWS DMS uses to securely connect to your Kafka target endpoint.
     * 
    */
    public Optional<String> getSslCaCertificateArn() {
        return Optional.ofNullable(this.sslCaCertificateArn);
    }
    /**
     * The Amazon Resource Name (ARN) of the client certificate used to securely connect to a Kafka target endpoint.
     * 
    */
    public Optional<String> getSslClientCertificateArn() {
        return Optional.ofNullable(this.sslClientCertificateArn);
    }
    /**
     * The Amazon Resource Name (ARN) for the client private key used to securely connect to a Kafka target endpoint.
     * 
    */
    public Optional<String> getSslClientKeyArn() {
        return Optional.ofNullable(this.sslClientKeyArn);
    }
    /**
     * The password for the client private key used to securely connect to a Kafka target endpoint.
     * 
    */
    public Optional<String> getSslClientKeyPassword() {
        return Optional.ofNullable(this.sslClientKeyPassword);
    }
    /**
     * Kafka topic for migration. Defaults to `kafka-default-topic`.
     * 
    */
    public Optional<String> getTopic() {
        return Optional.ofNullable(this.topic);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointKafkaSettings defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String broker;
        private @Nullable Boolean includeControlDetails;
        private @Nullable Boolean includeNullAndEmpty;
        private @Nullable Boolean includePartitionValue;
        private @Nullable Boolean includeTableAlterOperations;
        private @Nullable Boolean includeTransactionDetails;
        private @Nullable String messageFormat;
        private @Nullable Integer messageMaxBytes;
        private @Nullable Boolean noHexPrefix;
        private @Nullable Boolean partitionIncludeSchemaTable;
        private @Nullable String saslPassword;
        private @Nullable String saslUsername;
        private @Nullable String securityProtocol;
        private @Nullable String sslCaCertificateArn;
        private @Nullable String sslClientCertificateArn;
        private @Nullable String sslClientKeyArn;
        private @Nullable String sslClientKeyPassword;
        private @Nullable String topic;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointKafkaSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.broker = defaults.broker;
    	      this.includeControlDetails = defaults.includeControlDetails;
    	      this.includeNullAndEmpty = defaults.includeNullAndEmpty;
    	      this.includePartitionValue = defaults.includePartitionValue;
    	      this.includeTableAlterOperations = defaults.includeTableAlterOperations;
    	      this.includeTransactionDetails = defaults.includeTransactionDetails;
    	      this.messageFormat = defaults.messageFormat;
    	      this.messageMaxBytes = defaults.messageMaxBytes;
    	      this.noHexPrefix = defaults.noHexPrefix;
    	      this.partitionIncludeSchemaTable = defaults.partitionIncludeSchemaTable;
    	      this.saslPassword = defaults.saslPassword;
    	      this.saslUsername = defaults.saslUsername;
    	      this.securityProtocol = defaults.securityProtocol;
    	      this.sslCaCertificateArn = defaults.sslCaCertificateArn;
    	      this.sslClientCertificateArn = defaults.sslClientCertificateArn;
    	      this.sslClientKeyArn = defaults.sslClientKeyArn;
    	      this.sslClientKeyPassword = defaults.sslClientKeyPassword;
    	      this.topic = defaults.topic;
        }

        public Builder broker(String broker) {
            this.broker = Objects.requireNonNull(broker);
            return this;
        }

        public Builder includeControlDetails(@Nullable Boolean includeControlDetails) {
            this.includeControlDetails = includeControlDetails;
            return this;
        }

        public Builder includeNullAndEmpty(@Nullable Boolean includeNullAndEmpty) {
            this.includeNullAndEmpty = includeNullAndEmpty;
            return this;
        }

        public Builder includePartitionValue(@Nullable Boolean includePartitionValue) {
            this.includePartitionValue = includePartitionValue;
            return this;
        }

        public Builder includeTableAlterOperations(@Nullable Boolean includeTableAlterOperations) {
            this.includeTableAlterOperations = includeTableAlterOperations;
            return this;
        }

        public Builder includeTransactionDetails(@Nullable Boolean includeTransactionDetails) {
            this.includeTransactionDetails = includeTransactionDetails;
            return this;
        }

        public Builder messageFormat(@Nullable String messageFormat) {
            this.messageFormat = messageFormat;
            return this;
        }

        public Builder messageMaxBytes(@Nullable Integer messageMaxBytes) {
            this.messageMaxBytes = messageMaxBytes;
            return this;
        }

        public Builder noHexPrefix(@Nullable Boolean noHexPrefix) {
            this.noHexPrefix = noHexPrefix;
            return this;
        }

        public Builder partitionIncludeSchemaTable(@Nullable Boolean partitionIncludeSchemaTable) {
            this.partitionIncludeSchemaTable = partitionIncludeSchemaTable;
            return this;
        }

        public Builder saslPassword(@Nullable String saslPassword) {
            this.saslPassword = saslPassword;
            return this;
        }

        public Builder saslUsername(@Nullable String saslUsername) {
            this.saslUsername = saslUsername;
            return this;
        }

        public Builder securityProtocol(@Nullable String securityProtocol) {
            this.securityProtocol = securityProtocol;
            return this;
        }

        public Builder sslCaCertificateArn(@Nullable String sslCaCertificateArn) {
            this.sslCaCertificateArn = sslCaCertificateArn;
            return this;
        }

        public Builder sslClientCertificateArn(@Nullable String sslClientCertificateArn) {
            this.sslClientCertificateArn = sslClientCertificateArn;
            return this;
        }

        public Builder sslClientKeyArn(@Nullable String sslClientKeyArn) {
            this.sslClientKeyArn = sslClientKeyArn;
            return this;
        }

        public Builder sslClientKeyPassword(@Nullable String sslClientKeyPassword) {
            this.sslClientKeyPassword = sslClientKeyPassword;
            return this;
        }

        public Builder topic(@Nullable String topic) {
            this.topic = topic;
            return this;
        }
        public EndpointKafkaSettings build() {
            return new EndpointKafkaSettings(broker, includeControlDetails, includeNullAndEmpty, includePartitionValue, includeTableAlterOperations, includeTransactionDetails, messageFormat, messageMaxBytes, noHexPrefix, partitionIncludeSchemaTable, saslPassword, saslUsername, securityProtocol, sslCaCertificateArn, sslClientCertificateArn, sslClientKeyArn, sslClientKeyPassword, topic);
        }
    }
}
