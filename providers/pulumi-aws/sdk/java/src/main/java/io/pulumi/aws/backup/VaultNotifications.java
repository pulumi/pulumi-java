// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.backup;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.backup.VaultNotificationsArgs;
import io.pulumi.aws.backup.inputs.VaultNotificationsState;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides an AWS Backup vault notifications resource.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const testTopic = new aws.sns.Topic("testTopic", {});
 * const testPolicyDocument = testTopic.arn.apply(arn => aws.iam.getPolicyDocumentOutput({
 *     policyId: "__default_policy_ID",
 *     statements: [{
 *         actions: ["SNS:Publish"],
 *         effect: "Allow",
 *         principals: [{
 *             type: "Service",
 *             identifiers: ["backup.amazonaws.com"],
 *         }],
 *         resources: [arn],
 *         sid: "__default_statement_ID",
 *     }],
 * }));
 * const testTopicPolicy = new aws.sns.TopicPolicy("testTopicPolicy", {
 *     arn: testTopic.arn,
 *     policy: testPolicyDocument.apply(testPolicyDocument => testPolicyDocument.json),
 * });
 * const testVaultNotifications = new aws.backup.VaultNotifications("testVaultNotifications", {
 *     backupVaultName: "example_backup_vault",
 *     snsTopicArn: testTopic.arn,
 *     backupVaultEvents: [
 *         "BACKUP_JOB_STARTED",
 *         "RESTORE_JOB_COMPLETED",
 *     ],
 * });
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * test_topic = aws.sns.Topic("testTopic")
 * test_policy_document = test_topic.arn.apply(lambda arn: aws.iam.get_policy_document_output(policy_id="__default_policy_ID",
 *     statements=[aws.iam.GetPolicyDocumentStatementArgs(
 *         actions=["SNS:Publish"],
 *         effect="Allow",
 *         principals=[aws.iam.GetPolicyDocumentStatementPrincipalArgs(
 *             type="Service",
 *             identifiers=["backup.amazonaws.com"],
 *         )],
 *         resources=[arn],
 *         sid="__default_statement_ID",
 *     )]))
 * test_topic_policy = aws.sns.TopicPolicy("testTopicPolicy",
 *     arn=test_topic.arn,
 *     policy=test_policy_document.json)
 * test_vault_notifications = aws.backup.VaultNotifications("testVaultNotifications",
 *     backup_vault_name="example_backup_vault",
 *     sns_topic_arn=test_topic.arn,
 *     backup_vault_events=[
 *         "BACKUP_JOB_STARTED",
 *         "RESTORE_JOB_COMPLETED",
 *     ])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var testTopic = new Aws.Sns.Topic("testTopic", new Aws.Sns.TopicArgs
 *         {
 *         });
 *         var testPolicyDocument = testTopic.Arn.Apply(arn => Aws.Iam.GetPolicyDocument.Invoke(new Aws.Iam.GetPolicyDocumentInvokeArgs
 *         {
 *             PolicyId = "__default_policy_ID",
 *             Statements = 
 *             {
 *                 new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
 *                 {
 *                     Actions = 
 *                     {
 *                         "SNS:Publish",
 *                     },
 *                     Effect = "Allow",
 *                     Principals = 
 *                     {
 *                         new Aws.Iam.Inputs.GetPolicyDocumentStatementPrincipalInputArgs
 *                         {
 *                             Type = "Service",
 *                             Identifiers = 
 *                             {
 *                                 "backup.amazonaws.com",
 *                             },
 *                         },
 *                     },
 *                     Resources = 
 *                     {
 *                         arn,
 *                     },
 *                     Sid = "__default_statement_ID",
 *                 },
 *             },
 *         }));
 *         var testTopicPolicy = new Aws.Sns.TopicPolicy("testTopicPolicy", new Aws.Sns.TopicPolicyArgs
 *         {
 *             Arn = testTopic.Arn,
 *             Policy = testPolicyDocument.Apply(testPolicyDocument => testPolicyDocument.Json),
 *         });
 *         var testVaultNotifications = new Aws.Backup.VaultNotifications("testVaultNotifications", new Aws.Backup.VaultNotificationsArgs
 *         {
 *             BackupVaultName = "example_backup_vault",
 *             SnsTopicArn = testTopic.Arn,
 *             BackupVaultEvents = 
 *             {
 *                 "BACKUP_JOB_STARTED",
 *                 "RESTORE_JOB_COMPLETED",
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/backup"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/sns"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		testTopic, err := sns.NewTopic(ctx, "testTopic", nil)
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = sns.NewTopicPolicy(ctx, "testTopicPolicy", &sns.TopicPolicyArgs{
 * 			Arn: testTopic.Arn,
 * 			Policy: testPolicyDocument.ApplyT(func(testPolicyDocument iam.GetPolicyDocumentResult) (string, error) {
 * 				return testPolicyDocument.Json, nil
 * 			}).(pulumi.StringOutput),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = backup.NewVaultNotifications(ctx, "testVaultNotifications", &backup.VaultNotificationsArgs{
 * 			BackupVaultName: pulumi.String("example_backup_vault"),
 * 			SnsTopicArn:     testTopic.Arn,
 * 			BackupVaultEvents: pulumi.StringArray{
 * 				pulumi.String("BACKUP_JOB_STARTED"),
 * 				pulumi.String("RESTORE_JOB_COMPLETED"),
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Backup vault notifications can be imported using the `name`, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:backup/vaultNotifications:VaultNotifications test TestVault
 * ```
 * 
 *  
 */
@ResourceType(type="aws:backup/vaultNotifications:VaultNotifications")
public class VaultNotifications extends io.pulumi.resources.CustomResource {
    /**
     * The ARN of the vault.
     * 
     */
    @Export(name="backupVaultArn", type=String.class, parameters={})
    private Output<String> backupVaultArn;

    /**
     * @return The ARN of the vault.
     * 
     */
    public Output<String> getBackupVaultArn() {
        return this.backupVaultArn;
    }
    /**
     * An array of events that indicate the status of jobs to back up resources to the backup vault.
     * 
     */
    @Export(name="backupVaultEvents", type=List.class, parameters={String.class})
    private Output<List<String>> backupVaultEvents;

    /**
     * @return An array of events that indicate the status of jobs to back up resources to the backup vault.
     * 
     */
    public Output<List<String>> getBackupVaultEvents() {
        return this.backupVaultEvents;
    }
    /**
     * Name of the backup vault to add notifications for.
     * 
     */
    @Export(name="backupVaultName", type=String.class, parameters={})
    private Output<String> backupVaultName;

    /**
     * @return Name of the backup vault to add notifications for.
     * 
     */
    public Output<String> getBackupVaultName() {
        return this.backupVaultName;
    }
    /**
     * The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events
     * 
     */
    @Export(name="snsTopicArn", type=String.class, parameters={})
    private Output<String> snsTopicArn;

    /**
     * @return The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events
     * 
     */
    public Output<String> getSnsTopicArn() {
        return this.snsTopicArn;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VaultNotifications(String name) {
        this(name, VaultNotificationsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VaultNotifications(String name, VaultNotificationsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VaultNotifications(String name, VaultNotificationsArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:backup/vaultNotifications:VaultNotifications", name, args == null ? VaultNotificationsArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private VaultNotifications(String name, Output<String> id, @Nullable VaultNotificationsState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:backup/vaultNotifications:VaultNotifications", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VaultNotifications get(String name, Output<String> id, @Nullable VaultNotificationsState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VaultNotifications(name, id, state, options);
    }
}
