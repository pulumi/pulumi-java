// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.sagemaker.inputs;

import io.pulumi.aws.sagemaker.inputs.AppResourceSpecGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppState extends io.pulumi.resources.ResourceArgs {

    public static final AppState Empty = new AppState();

    /**
     * The name of the app.
     * 
     */
    @Import(name="appName")
      private final @Nullable Output<String> appName;

    public Output<String> getAppName() {
        return this.appName == null ? Output.empty() : this.appName;
    }

    /**
     * The type of app. Valid values are `JupyterServer`, `KernelGateway` and `TensorBoard`.
     * 
     */
    @Import(name="appType")
      private final @Nullable Output<String> appType;

    public Output<String> getAppType() {
        return this.appType == null ? Output.empty() : this.appType;
    }

    /**
     * The Amazon Resource Name (ARN) of the app.
     * 
     */
    @Import(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * The domain ID.
     * 
     */
    @Import(name="domainId")
      private final @Nullable Output<String> domainId;

    public Output<String> getDomainId() {
        return this.domainId == null ? Output.empty() : this.domainId;
    }

    /**
     * The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
     * 
     */
    @Import(name="resourceSpec")
      private final @Nullable Output<AppResourceSpecGetArgs> resourceSpec;

    public Output<AppResourceSpecGetArgs> getResourceSpec() {
        return this.resourceSpec == null ? Output.empty() : this.resourceSpec;
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @Import(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    /**
     * The user profile name.
     * 
     */
    @Import(name="userProfileName")
      private final @Nullable Output<String> userProfileName;

    public Output<String> getUserProfileName() {
        return this.userProfileName == null ? Output.empty() : this.userProfileName;
    }

    public AppState(
        @Nullable Output<String> appName,
        @Nullable Output<String> appType,
        @Nullable Output<String> arn,
        @Nullable Output<String> domainId,
        @Nullable Output<AppResourceSpecGetArgs> resourceSpec,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> userProfileName) {
        this.appName = appName;
        this.appType = appType;
        this.arn = arn;
        this.domainId = domainId;
        this.resourceSpec = resourceSpec;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.userProfileName = userProfileName;
    }

    private AppState() {
        this.appName = Output.empty();
        this.appType = Output.empty();
        this.arn = Output.empty();
        this.domainId = Output.empty();
        this.resourceSpec = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.userProfileName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> appName;
        private @Nullable Output<String> appType;
        private @Nullable Output<String> arn;
        private @Nullable Output<String> domainId;
        private @Nullable Output<AppResourceSpecGetArgs> resourceSpec;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> userProfileName;

        public Builder() {
    	      // Empty
        }

        public Builder(AppState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appName = defaults.appName;
    	      this.appType = defaults.appType;
    	      this.arn = defaults.arn;
    	      this.domainId = defaults.domainId;
    	      this.resourceSpec = defaults.resourceSpec;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.userProfileName = defaults.userProfileName;
        }

        public Builder appName(@Nullable Output<String> appName) {
            this.appName = appName;
            return this;
        }

        public Builder appName(@Nullable String appName) {
            this.appName = Output.ofNullable(appName);
            return this;
        }

        public Builder appType(@Nullable Output<String> appType) {
            this.appType = appType;
            return this;
        }

        public Builder appType(@Nullable String appType) {
            this.appType = Output.ofNullable(appType);
            return this;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder domainId(@Nullable Output<String> domainId) {
            this.domainId = domainId;
            return this;
        }

        public Builder domainId(@Nullable String domainId) {
            this.domainId = Output.ofNullable(domainId);
            return this;
        }

        public Builder resourceSpec(@Nullable Output<AppResourceSpecGetArgs> resourceSpec) {
            this.resourceSpec = resourceSpec;
            return this;
        }

        public Builder resourceSpec(@Nullable AppResourceSpecGetArgs resourceSpec) {
            this.resourceSpec = Output.ofNullable(resourceSpec);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }

        public Builder userProfileName(@Nullable Output<String> userProfileName) {
            this.userProfileName = userProfileName;
            return this;
        }

        public Builder userProfileName(@Nullable String userProfileName) {
            this.userProfileName = Output.ofNullable(userProfileName);
            return this;
        }
        public AppState build() {
            return new AppState(appName, appType, arn, domainId, resourceSpec, tags, tagsAll, userProfileName);
        }
    }
}
