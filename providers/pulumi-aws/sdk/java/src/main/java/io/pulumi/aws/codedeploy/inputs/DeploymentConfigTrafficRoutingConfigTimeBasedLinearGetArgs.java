// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.codedeploy.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs Empty = new DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs();

    /**
     * The number of minutes between each incremental traffic shift of a `TimeBasedLinear` deployment.
     * 
     */
    @InputImport(name="interval")
    private final @Nullable Input<Integer> interval;

    public Input<Integer> getInterval() {
        return this.interval == null ? Input.empty() : this.interval;
    }

    /**
     * The percentage of traffic that is shifted at the start of each increment of a `TimeBasedLinear` deployment.
     * 
     */
    @InputImport(name="percentage")
    private final @Nullable Input<Integer> percentage;

    public Input<Integer> getPercentage() {
        return this.percentage == null ? Input.empty() : this.percentage;
    }

    public DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs(
        @Nullable Input<Integer> interval,
        @Nullable Input<Integer> percentage) {
        this.interval = interval;
        this.percentage = percentage;
    }

    private DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs() {
        this.interval = Input.empty();
        this.percentage = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> interval;
        private @Nullable Input<Integer> percentage;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interval = defaults.interval;
    	      this.percentage = defaults.percentage;
        }

        public Builder setInterval(@Nullable Input<Integer> interval) {
            this.interval = interval;
            return this;
        }

        public Builder setInterval(@Nullable Integer interval) {
            this.interval = Input.ofNullable(interval);
            return this;
        }

        public Builder setPercentage(@Nullable Input<Integer> percentage) {
            this.percentage = percentage;
            return this;
        }

        public Builder setPercentage(@Nullable Integer percentage) {
            this.percentage = Input.ofNullable(percentage);
            return this;
        }
        public DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs build() {
            return new DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs(interval, percentage);
        }
    }
}
