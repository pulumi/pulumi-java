// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.timestreamwrite.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class TableRetentionPropertiesGetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TableRetentionPropertiesGetArgs Empty = new TableRetentionPropertiesGetArgs();

    /**
     * The duration for which data must be stored in the magnetic store. Minimum value of 1. Maximum value of 73000.
     * 
     */
    @Import(name="magneticStoreRetentionPeriodInDays", required=true)
      private final Output<Integer> magneticStoreRetentionPeriodInDays;

    public Output<Integer> getMagneticStoreRetentionPeriodInDays() {
        return this.magneticStoreRetentionPeriodInDays;
    }

    /**
     * The duration for which data must be stored in the memory store. Minimum value of 1. Maximum value of 8766.
     * 
     */
    @Import(name="memoryStoreRetentionPeriodInHours", required=true)
      private final Output<Integer> memoryStoreRetentionPeriodInHours;

    public Output<Integer> getMemoryStoreRetentionPeriodInHours() {
        return this.memoryStoreRetentionPeriodInHours;
    }

    public TableRetentionPropertiesGetArgs(
        Output<Integer> magneticStoreRetentionPeriodInDays,
        Output<Integer> memoryStoreRetentionPeriodInHours) {
        this.magneticStoreRetentionPeriodInDays = Objects.requireNonNull(magneticStoreRetentionPeriodInDays, "expected parameter 'magneticStoreRetentionPeriodInDays' to be non-null");
        this.memoryStoreRetentionPeriodInHours = Objects.requireNonNull(memoryStoreRetentionPeriodInHours, "expected parameter 'memoryStoreRetentionPeriodInHours' to be non-null");
    }

    private TableRetentionPropertiesGetArgs() {
        this.magneticStoreRetentionPeriodInDays = Output.empty();
        this.memoryStoreRetentionPeriodInHours = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableRetentionPropertiesGetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Integer> magneticStoreRetentionPeriodInDays;
        private Output<Integer> memoryStoreRetentionPeriodInHours;

        public Builder() {
    	      // Empty
        }

        public Builder(TableRetentionPropertiesGetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.magneticStoreRetentionPeriodInDays = defaults.magneticStoreRetentionPeriodInDays;
    	      this.memoryStoreRetentionPeriodInHours = defaults.memoryStoreRetentionPeriodInHours;
        }

        public Builder magneticStoreRetentionPeriodInDays(Output<Integer> magneticStoreRetentionPeriodInDays) {
            this.magneticStoreRetentionPeriodInDays = Objects.requireNonNull(magneticStoreRetentionPeriodInDays);
            return this;
        }

        public Builder magneticStoreRetentionPeriodInDays(Integer magneticStoreRetentionPeriodInDays) {
            this.magneticStoreRetentionPeriodInDays = Output.of(Objects.requireNonNull(magneticStoreRetentionPeriodInDays));
            return this;
        }

        public Builder memoryStoreRetentionPeriodInHours(Output<Integer> memoryStoreRetentionPeriodInHours) {
            this.memoryStoreRetentionPeriodInHours = Objects.requireNonNull(memoryStoreRetentionPeriodInHours);
            return this;
        }

        public Builder memoryStoreRetentionPeriodInHours(Integer memoryStoreRetentionPeriodInHours) {
            this.memoryStoreRetentionPeriodInHours = Output.of(Objects.requireNonNull(memoryStoreRetentionPeriodInHours));
            return this;
        }
        public TableRetentionPropertiesGetArgs build() {
            return new TableRetentionPropertiesGetArgs(magneticStoreRetentionPeriodInDays, memoryStoreRetentionPeriodInHours);
        }
    }
}
