// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.fms;

import io.pulumi.aws.fms.inputs.PolicyExcludeMapArgs;
import io.pulumi.aws.fms.inputs.PolicyIncludeMapArgs;
import io.pulumi.aws.fms.inputs.PolicySecurityServicePolicyDataArgs;
import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicyArgs Empty = new PolicyArgs();

    /**
     * If true, the request will also perform a clean-up process. Defaults to `true`. More information can be found here [AWS Firewall Manager delete policy](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_DeletePolicy.html)
     * 
     */
    @InputImport(name="deleteAllPolicyResources")
    private final @Nullable Input<Boolean> deleteAllPolicyResources;

    public Input<Boolean> getDeleteAllPolicyResources() {
        return this.deleteAllPolicyResources == null ? Input.empty() : this.deleteAllPolicyResources;
    }

    /**
     * A map of lists of accounts and OU's to exclude from the policy.
     * 
     */
    @InputImport(name="excludeMap")
    private final @Nullable Input<PolicyExcludeMapArgs> excludeMap;

    public Input<PolicyExcludeMapArgs> getExcludeMap() {
        return this.excludeMap == null ? Input.empty() : this.excludeMap;
    }

    /**
     * A boolean value, if true the tags that are specified in the `resource_tags` are not protected by this policy. If set to false and resource_tags are populated, resources that contain tags will be protected by this policy.
     * 
     */
    @InputImport(name="excludeResourceTags", required=true)
    private final Input<Boolean> excludeResourceTags;

    public Input<Boolean> getExcludeResourceTags() {
        return this.excludeResourceTags;
    }

    /**
     * A map of lists of accounts and OU's to include in the policy.
     * 
     */
    @InputImport(name="includeMap")
    private final @Nullable Input<PolicyIncludeMapArgs> includeMap;

    public Input<PolicyIncludeMapArgs> getIncludeMap() {
        return this.includeMap == null ? Input.empty() : this.includeMap;
    }

    /**
     * The friendly name of the AWS Firewall Manager Policy.
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * A boolean value, indicates if the policy should automatically applied to resources that already exist in the account.
     * 
     */
    @InputImport(name="remediationEnabled")
    private final @Nullable Input<Boolean> remediationEnabled;

    public Input<Boolean> getRemediationEnabled() {
        return this.remediationEnabled == null ? Input.empty() : this.remediationEnabled;
    }

    /**
     * A map of resource tags, that if present will filter protections on resources based on the exclude_resource_tags.
     * 
     */
    @InputImport(name="resourceTags")
    private final @Nullable Input<Map<String,String>> resourceTags;

    public Input<Map<String,String>> getResourceTags() {
        return this.resourceTags == null ? Input.empty() : this.resourceTags;
    }

    /**
     * A resource type to protect. Conflicts with `resource_type_list`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     * 
     */
    @InputImport(name="resourceType")
    private final @Nullable Input<String> resourceType;

    public Input<String> getPropResourceType() {
        return this.resourceType == null ? Input.empty() : this.resourceType;
    }

    /**
     * A list of resource types to protect. Conflicts with `resource_type`. See the [FMS API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_Policy.html#fms-Type-Policy-ResourceType) for more information about supported values.
     * 
     */
    @InputImport(name="resourceTypeLists")
    private final @Nullable Input<List<String>> resourceTypeLists;

    public Input<List<String>> getResourceTypeLists() {
        return this.resourceTypeLists == null ? Input.empty() : this.resourceTypeLists;
    }

    /**
     * The objects to include in Security Service Policy Data. Documented below.
     * 
     */
    @InputImport(name="securityServicePolicyData", required=true)
    private final Input<PolicySecurityServicePolicyDataArgs> securityServicePolicyData;

    public Input<PolicySecurityServicePolicyDataArgs> getSecurityServicePolicyData() {
        return this.securityServicePolicyData;
    }

    public PolicyArgs(
        @Nullable Input<Boolean> deleteAllPolicyResources,
        @Nullable Input<PolicyExcludeMapArgs> excludeMap,
        Input<Boolean> excludeResourceTags,
        @Nullable Input<PolicyIncludeMapArgs> includeMap,
        @Nullable Input<String> name,
        @Nullable Input<Boolean> remediationEnabled,
        @Nullable Input<Map<String,String>> resourceTags,
        @Nullable Input<String> resourceType,
        @Nullable Input<List<String>> resourceTypeLists,
        Input<PolicySecurityServicePolicyDataArgs> securityServicePolicyData) {
        this.deleteAllPolicyResources = deleteAllPolicyResources;
        this.excludeMap = excludeMap;
        this.excludeResourceTags = Objects.requireNonNull(excludeResourceTags, "expected parameter 'excludeResourceTags' to be non-null");
        this.includeMap = includeMap;
        this.name = name;
        this.remediationEnabled = remediationEnabled;
        this.resourceTags = resourceTags;
        this.resourceType = resourceType;
        this.resourceTypeLists = resourceTypeLists;
        this.securityServicePolicyData = Objects.requireNonNull(securityServicePolicyData, "expected parameter 'securityServicePolicyData' to be non-null");
    }

    private PolicyArgs() {
        this.deleteAllPolicyResources = Input.empty();
        this.excludeMap = Input.empty();
        this.excludeResourceTags = Input.empty();
        this.includeMap = Input.empty();
        this.name = Input.empty();
        this.remediationEnabled = Input.empty();
        this.resourceTags = Input.empty();
        this.resourceType = Input.empty();
        this.resourceTypeLists = Input.empty();
        this.securityServicePolicyData = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> deleteAllPolicyResources;
        private @Nullable Input<PolicyExcludeMapArgs> excludeMap;
        private Input<Boolean> excludeResourceTags;
        private @Nullable Input<PolicyIncludeMapArgs> includeMap;
        private @Nullable Input<String> name;
        private @Nullable Input<Boolean> remediationEnabled;
        private @Nullable Input<Map<String,String>> resourceTags;
        private @Nullable Input<String> resourceType;
        private @Nullable Input<List<String>> resourceTypeLists;
        private Input<PolicySecurityServicePolicyDataArgs> securityServicePolicyData;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteAllPolicyResources = defaults.deleteAllPolicyResources;
    	      this.excludeMap = defaults.excludeMap;
    	      this.excludeResourceTags = defaults.excludeResourceTags;
    	      this.includeMap = defaults.includeMap;
    	      this.name = defaults.name;
    	      this.remediationEnabled = defaults.remediationEnabled;
    	      this.resourceTags = defaults.resourceTags;
    	      this.resourceType = defaults.resourceType;
    	      this.resourceTypeLists = defaults.resourceTypeLists;
    	      this.securityServicePolicyData = defaults.securityServicePolicyData;
        }

        public Builder setDeleteAllPolicyResources(@Nullable Input<Boolean> deleteAllPolicyResources) {
            this.deleteAllPolicyResources = deleteAllPolicyResources;
            return this;
        }

        public Builder setDeleteAllPolicyResources(@Nullable Boolean deleteAllPolicyResources) {
            this.deleteAllPolicyResources = Input.ofNullable(deleteAllPolicyResources);
            return this;
        }

        public Builder setExcludeMap(@Nullable Input<PolicyExcludeMapArgs> excludeMap) {
            this.excludeMap = excludeMap;
            return this;
        }

        public Builder setExcludeMap(@Nullable PolicyExcludeMapArgs excludeMap) {
            this.excludeMap = Input.ofNullable(excludeMap);
            return this;
        }

        public Builder setExcludeResourceTags(Input<Boolean> excludeResourceTags) {
            this.excludeResourceTags = Objects.requireNonNull(excludeResourceTags);
            return this;
        }

        public Builder setExcludeResourceTags(Boolean excludeResourceTags) {
            this.excludeResourceTags = Input.of(Objects.requireNonNull(excludeResourceTags));
            return this;
        }

        public Builder setIncludeMap(@Nullable Input<PolicyIncludeMapArgs> includeMap) {
            this.includeMap = includeMap;
            return this;
        }

        public Builder setIncludeMap(@Nullable PolicyIncludeMapArgs includeMap) {
            this.includeMap = Input.ofNullable(includeMap);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setRemediationEnabled(@Nullable Input<Boolean> remediationEnabled) {
            this.remediationEnabled = remediationEnabled;
            return this;
        }

        public Builder setRemediationEnabled(@Nullable Boolean remediationEnabled) {
            this.remediationEnabled = Input.ofNullable(remediationEnabled);
            return this;
        }

        public Builder setResourceTags(@Nullable Input<Map<String,String>> resourceTags) {
            this.resourceTags = resourceTags;
            return this;
        }

        public Builder setResourceTags(@Nullable Map<String,String> resourceTags) {
            this.resourceTags = Input.ofNullable(resourceTags);
            return this;
        }

        public Builder setResourceType(@Nullable Input<String> resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        public Builder setResourceType(@Nullable String resourceType) {
            this.resourceType = Input.ofNullable(resourceType);
            return this;
        }

        public Builder setResourceTypeLists(@Nullable Input<List<String>> resourceTypeLists) {
            this.resourceTypeLists = resourceTypeLists;
            return this;
        }

        public Builder setResourceTypeLists(@Nullable List<String> resourceTypeLists) {
            this.resourceTypeLists = Input.ofNullable(resourceTypeLists);
            return this;
        }

        public Builder setSecurityServicePolicyData(Input<PolicySecurityServicePolicyDataArgs> securityServicePolicyData) {
            this.securityServicePolicyData = Objects.requireNonNull(securityServicePolicyData);
            return this;
        }

        public Builder setSecurityServicePolicyData(PolicySecurityServicePolicyDataArgs securityServicePolicyData) {
            this.securityServicePolicyData = Input.of(Objects.requireNonNull(securityServicePolicyData));
            return this;
        }
        public PolicyArgs build() {
            return new PolicyArgs(deleteAllPolicyResources, excludeMap, excludeResourceTags, includeMap, name, remediationEnabled, resourceTags, resourceType, resourceTypeLists, securityServicePolicyData);
        }
    }
}
