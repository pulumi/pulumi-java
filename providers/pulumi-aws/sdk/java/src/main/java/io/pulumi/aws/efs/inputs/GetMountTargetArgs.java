// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.efs.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMountTargetArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetMountTargetArgs Empty = new GetMountTargetArgs();

    /**
     * ID or ARN of the access point whose mount target that you want to find. It must be included if a `file_system_id` and `mount_target_id` are not included.
     * 
     */
    @Import(name="accessPointId")
      private final @Nullable String accessPointId;

    public Optional<String> getAccessPointId() {
        return this.accessPointId == null ? Optional.empty() : Optional.ofNullable(this.accessPointId);
    }

    /**
     * ID or ARN of the file system whose mount target that you want to find. It must be included if an `access_point_id` and `mount_target_id` are not included.
     * 
     */
    @Import(name="fileSystemId")
      private final @Nullable String fileSystemId;

    public Optional<String> getFileSystemId() {
        return this.fileSystemId == null ? Optional.empty() : Optional.ofNullable(this.fileSystemId);
    }

    /**
     * ID or ARN of the mount target that you want to find. It must be included in your request if an `access_point_id` and `file_system_id` are not included.
     * 
     */
    @Import(name="mountTargetId")
      private final @Nullable String mountTargetId;

    public Optional<String> getMountTargetId() {
        return this.mountTargetId == null ? Optional.empty() : Optional.ofNullable(this.mountTargetId);
    }

    public GetMountTargetArgs(
        @Nullable String accessPointId,
        @Nullable String fileSystemId,
        @Nullable String mountTargetId) {
        this.accessPointId = accessPointId;
        this.fileSystemId = fileSystemId;
        this.mountTargetId = mountTargetId;
    }

    private GetMountTargetArgs() {
        this.accessPointId = null;
        this.fileSystemId = null;
        this.mountTargetId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMountTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessPointId;
        private @Nullable String fileSystemId;
        private @Nullable String mountTargetId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMountTargetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPointId = defaults.accessPointId;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.mountTargetId = defaults.mountTargetId;
        }

        public Builder accessPointId(@Nullable String accessPointId) {
            this.accessPointId = accessPointId;
            return this;
        }

        public Builder fileSystemId(@Nullable String fileSystemId) {
            this.fileSystemId = fileSystemId;
            return this;
        }

        public Builder mountTargetId(@Nullable String mountTargetId) {
            this.mountTargetId = mountTargetId;
            return this;
        }
        public GetMountTargetArgs build() {
            return new GetMountTargetArgs(accessPointId, fileSystemId, mountTargetId);
        }
    }
}
