// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.memorydb.inputs;

import io.pulumi.aws.memorydb.inputs.UserAuthenticationModeGetArgs;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UserState extends io.pulumi.resources.ResourceArgs {

    public static final UserState Empty = new UserState();

    /**
     * The access permissions string used for this user.
     * 
     */
    @InputImport(name="accessString")
      private final @Nullable Output<String> accessString;

    public Output<String> getAccessString() {
        return this.accessString == null ? Output.empty() : this.accessString;
    }

    /**
     * The ARN of the user.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Output<String> arn;

    public Output<String> getArn() {
        return this.arn == null ? Output.empty() : this.arn;
    }

    /**
     * Denotes the user's authentication properties. Detailed below.
     * 
     */
    @InputImport(name="authenticationMode")
      private final @Nullable Output<UserAuthenticationModeGetArgs> authenticationMode;

    public Output<UserAuthenticationModeGetArgs> getAuthenticationMode() {
        return this.authenticationMode == null ? Output.empty() : this.authenticationMode;
    }

    /**
     * The minimum engine version supported for the user.
     * * `authentication_mode` configuration block
     * 
     */
    @InputImport(name="minimumEngineVersion")
      private final @Nullable Output<String> minimumEngineVersion;

    public Output<String> getMinimumEngineVersion() {
        return this.minimumEngineVersion == null ? Output.empty() : this.minimumEngineVersion;
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Output<Map<String,String>> tagsAll;

    public Output<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Output.empty() : this.tagsAll;
    }

    /**
     * Name of the MemoryDB user. Up to 40 characters.
     * 
     */
    @InputImport(name="userName")
      private final @Nullable Output<String> userName;

    public Output<String> getUserName() {
        return this.userName == null ? Output.empty() : this.userName;
    }

    public UserState(
        @Nullable Output<String> accessString,
        @Nullable Output<String> arn,
        @Nullable Output<UserAuthenticationModeGetArgs> authenticationMode,
        @Nullable Output<String> minimumEngineVersion,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<Map<String,String>> tagsAll,
        @Nullable Output<String> userName) {
        this.accessString = accessString;
        this.arn = arn;
        this.authenticationMode = authenticationMode;
        this.minimumEngineVersion = minimumEngineVersion;
        this.tags = tags;
        this.tagsAll = tagsAll;
        this.userName = userName;
    }

    private UserState() {
        this.accessString = Output.empty();
        this.arn = Output.empty();
        this.authenticationMode = Output.empty();
        this.minimumEngineVersion = Output.empty();
        this.tags = Output.empty();
        this.tagsAll = Output.empty();
        this.userName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accessString;
        private @Nullable Output<String> arn;
        private @Nullable Output<UserAuthenticationModeGetArgs> authenticationMode;
        private @Nullable Output<String> minimumEngineVersion;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<Map<String,String>> tagsAll;
        private @Nullable Output<String> userName;

        public Builder() {
    	      // Empty
        }

        public Builder(UserState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessString = defaults.accessString;
    	      this.arn = defaults.arn;
    	      this.authenticationMode = defaults.authenticationMode;
    	      this.minimumEngineVersion = defaults.minimumEngineVersion;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
    	      this.userName = defaults.userName;
        }

        public Builder accessString(@Nullable Output<String> accessString) {
            this.accessString = accessString;
            return this;
        }

        public Builder accessString(@Nullable String accessString) {
            this.accessString = Output.ofNullable(accessString);
            return this;
        }

        public Builder arn(@Nullable Output<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder arn(@Nullable String arn) {
            this.arn = Output.ofNullable(arn);
            return this;
        }

        public Builder authenticationMode(@Nullable Output<UserAuthenticationModeGetArgs> authenticationMode) {
            this.authenticationMode = authenticationMode;
            return this;
        }

        public Builder authenticationMode(@Nullable UserAuthenticationModeGetArgs authenticationMode) {
            this.authenticationMode = Output.ofNullable(authenticationMode);
            return this;
        }

        public Builder minimumEngineVersion(@Nullable Output<String> minimumEngineVersion) {
            this.minimumEngineVersion = minimumEngineVersion;
            return this;
        }

        public Builder minimumEngineVersion(@Nullable String minimumEngineVersion) {
            this.minimumEngineVersion = Output.ofNullable(minimumEngineVersion);
            return this;
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder tagsAll(@Nullable Output<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder tagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Output.ofNullable(tagsAll);
            return this;
        }

        public Builder userName(@Nullable Output<String> userName) {
            this.userName = userName;
            return this;
        }

        public Builder userName(@Nullable String userName) {
            this.userName = Output.ofNullable(userName);
            return this;
        }
        public UserState build() {
            return new UserState(accessString, arn, authenticationMode, minimumEngineVersion, tags, tagsAll, userName);
        }
    }
}
