// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.elasticsearch.outputs;

import io.pulumi.aws.elasticsearch.outputs.DomainSamlOptionsSamlOptionsIdp;
import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainSamlOptionsSamlOptions {
    /**
     * Whether SAML authentication is enabled.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * Information from your identity provider.
     * 
     */
    private final @Nullable DomainSamlOptionsSamlOptionsIdp idp;
    /**
     * This backend role from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
     * 
     */
    private final @Nullable String masterBackendRole;
    /**
     * This username from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
     * 
     */
    private final @Nullable String masterUserName;
    /**
     * Element of the SAML assertion to use for backend roles. Default is roles.
     * 
     */
    private final @Nullable String rolesKey;
    /**
     * Duration of a session in minutes after a user logs in. Default is 60. Maximum value is 1,440.
     * 
     */
    private final @Nullable Integer sessionTimeoutMinutes;
    /**
     * Element of the SAML assertion to use for username. Default is NameID.
     * 
     */
    private final @Nullable String subjectKey;

    @CustomType.Constructor
    private DomainSamlOptionsSamlOptions(
        @CustomType.Parameter("enabled") @Nullable Boolean enabled,
        @CustomType.Parameter("idp") @Nullable DomainSamlOptionsSamlOptionsIdp idp,
        @CustomType.Parameter("masterBackendRole") @Nullable String masterBackendRole,
        @CustomType.Parameter("masterUserName") @Nullable String masterUserName,
        @CustomType.Parameter("rolesKey") @Nullable String rolesKey,
        @CustomType.Parameter("sessionTimeoutMinutes") @Nullable Integer sessionTimeoutMinutes,
        @CustomType.Parameter("subjectKey") @Nullable String subjectKey) {
        this.enabled = enabled;
        this.idp = idp;
        this.masterBackendRole = masterBackendRole;
        this.masterUserName = masterUserName;
        this.rolesKey = rolesKey;
        this.sessionTimeoutMinutes = sessionTimeoutMinutes;
        this.subjectKey = subjectKey;
    }

    /**
     * Whether SAML authentication is enabled.
     * 
    */
    public Optional<Boolean> getEnabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * Information from your identity provider.
     * 
    */
    public Optional<DomainSamlOptionsSamlOptionsIdp> getIdp() {
        return Optional.ofNullable(this.idp);
    }
    /**
     * This backend role from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
     * 
    */
    public Optional<String> getMasterBackendRole() {
        return Optional.ofNullable(this.masterBackendRole);
    }
    /**
     * This username from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
     * 
    */
    public Optional<String> getMasterUserName() {
        return Optional.ofNullable(this.masterUserName);
    }
    /**
     * Element of the SAML assertion to use for backend roles. Default is roles.
     * 
    */
    public Optional<String> getRolesKey() {
        return Optional.ofNullable(this.rolesKey);
    }
    /**
     * Duration of a session in minutes after a user logs in. Default is 60. Maximum value is 1,440.
     * 
    */
    public Optional<Integer> getSessionTimeoutMinutes() {
        return Optional.ofNullable(this.sessionTimeoutMinutes);
    }
    /**
     * Element of the SAML assertion to use for username. Default is NameID.
     * 
    */
    public Optional<String> getSubjectKey() {
        return Optional.ofNullable(this.subjectKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainSamlOptionsSamlOptions defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enabled;
        private @Nullable DomainSamlOptionsSamlOptionsIdp idp;
        private @Nullable String masterBackendRole;
        private @Nullable String masterUserName;
        private @Nullable String rolesKey;
        private @Nullable Integer sessionTimeoutMinutes;
        private @Nullable String subjectKey;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainSamlOptionsSamlOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.idp = defaults.idp;
    	      this.masterBackendRole = defaults.masterBackendRole;
    	      this.masterUserName = defaults.masterUserName;
    	      this.rolesKey = defaults.rolesKey;
    	      this.sessionTimeoutMinutes = defaults.sessionTimeoutMinutes;
    	      this.subjectKey = defaults.subjectKey;
        }

        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder idp(@Nullable DomainSamlOptionsSamlOptionsIdp idp) {
            this.idp = idp;
            return this;
        }
        public Builder masterBackendRole(@Nullable String masterBackendRole) {
            this.masterBackendRole = masterBackendRole;
            return this;
        }
        public Builder masterUserName(@Nullable String masterUserName) {
            this.masterUserName = masterUserName;
            return this;
        }
        public Builder rolesKey(@Nullable String rolesKey) {
            this.rolesKey = rolesKey;
            return this;
        }
        public Builder sessionTimeoutMinutes(@Nullable Integer sessionTimeoutMinutes) {
            this.sessionTimeoutMinutes = sessionTimeoutMinutes;
            return this;
        }
        public Builder subjectKey(@Nullable String subjectKey) {
            this.subjectKey = subjectKey;
            return this;
        }        public DomainSamlOptionsSamlOptions build() {
            return new DomainSamlOptionsSamlOptions(enabled, idp, masterBackendRole, masterUserName, rolesKey, sessionTimeoutMinutes, subjectKey);
        }
    }
}
