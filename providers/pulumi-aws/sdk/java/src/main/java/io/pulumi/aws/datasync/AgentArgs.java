// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.datasync;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AgentArgs extends io.pulumi.resources.ResourceArgs {

    public static final AgentArgs Empty = new AgentArgs();

    /**
     * DataSync Agent activation key during resource creation. Conflicts with `ip_address`. If an `ip_address` is provided instead, the provider will retrieve the `activation_key` as part of the resource creation.
     * 
     */
    @Import(name="activationKey")
      private final @Nullable Output<String> activationKey;

    public Output<String> activationKey() {
        return this.activationKey == null ? Codegen.empty() : this.activationKey;
    }

    /**
     * DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activation_key`. DataSync Agent must be accessible on port 80 from where the provider is running.
     * 
     */
    @Import(name="ipAddress")
      private final @Nullable Output<String> ipAddress;

    public Output<String> ipAddress() {
        return this.ipAddress == null ? Codegen.empty() : this.ipAddress;
    }

    /**
     * Name of the DataSync Agent.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The IP address of the VPC endpoint the agent should connect to when retrieving an activation key during resource creation. Conflicts with `activation_key`.
     * 
     */
    @Import(name="privateLinkEndpoint")
      private final @Nullable Output<String> privateLinkEndpoint;

    public Output<String> privateLinkEndpoint() {
        return this.privateLinkEndpoint == null ? Codegen.empty() : this.privateLinkEndpoint;
    }

    /**
     * The ARNs of the security groups used to protect your data transfer task subnets.
     * 
     */
    @Import(name="securityGroupArns")
      private final @Nullable Output<List<String>> securityGroupArns;

    public Output<List<String>> securityGroupArns() {
        return this.securityGroupArns == null ? Codegen.empty() : this.securityGroupArns;
    }

    /**
     * The Amazon Resource Names (ARNs) of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
     * 
     */
    @Import(name="subnetArns")
      private final @Nullable Output<List<String>> subnetArns;

    public Output<List<String>> subnetArns() {
        return this.subnetArns == null ? Codegen.empty() : this.subnetArns;
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Agent. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @Import(name="tags")
      private final @Nullable Output<Map<String,String>> tags;

    public Output<Map<String,String>> tags() {
        return this.tags == null ? Codegen.empty() : this.tags;
    }

    /**
     * The ID of the VPC (virtual private cloud) endpoint that the agent has access to.
     * 
     */
    @Import(name="vpcEndpointId")
      private final @Nullable Output<String> vpcEndpointId;

    public Output<String> vpcEndpointId() {
        return this.vpcEndpointId == null ? Codegen.empty() : this.vpcEndpointId;
    }

    public AgentArgs(
        @Nullable Output<String> activationKey,
        @Nullable Output<String> ipAddress,
        @Nullable Output<String> name,
        @Nullable Output<String> privateLinkEndpoint,
        @Nullable Output<List<String>> securityGroupArns,
        @Nullable Output<List<String>> subnetArns,
        @Nullable Output<Map<String,String>> tags,
        @Nullable Output<String> vpcEndpointId) {
        this.activationKey = activationKey;
        this.ipAddress = ipAddress;
        this.name = name;
        this.privateLinkEndpoint = privateLinkEndpoint;
        this.securityGroupArns = securityGroupArns;
        this.subnetArns = subnetArns;
        this.tags = tags;
        this.vpcEndpointId = vpcEndpointId;
    }

    private AgentArgs() {
        this.activationKey = Codegen.empty();
        this.ipAddress = Codegen.empty();
        this.name = Codegen.empty();
        this.privateLinkEndpoint = Codegen.empty();
        this.securityGroupArns = Codegen.empty();
        this.subnetArns = Codegen.empty();
        this.tags = Codegen.empty();
        this.vpcEndpointId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> activationKey;
        private @Nullable Output<String> ipAddress;
        private @Nullable Output<String> name;
        private @Nullable Output<String> privateLinkEndpoint;
        private @Nullable Output<List<String>> securityGroupArns;
        private @Nullable Output<List<String>> subnetArns;
        private @Nullable Output<Map<String,String>> tags;
        private @Nullable Output<String> vpcEndpointId;

        public Builder() {
    	      // Empty
        }

        public Builder(AgentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activationKey = defaults.activationKey;
    	      this.ipAddress = defaults.ipAddress;
    	      this.name = defaults.name;
    	      this.privateLinkEndpoint = defaults.privateLinkEndpoint;
    	      this.securityGroupArns = defaults.securityGroupArns;
    	      this.subnetArns = defaults.subnetArns;
    	      this.tags = defaults.tags;
    	      this.vpcEndpointId = defaults.vpcEndpointId;
        }

        public Builder activationKey(@Nullable Output<String> activationKey) {
            this.activationKey = activationKey;
            return this;
        }
        public Builder activationKey(@Nullable String activationKey) {
            this.activationKey = Codegen.ofNullable(activationKey);
            return this;
        }
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = Codegen.ofNullable(ipAddress);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder privateLinkEndpoint(@Nullable Output<String> privateLinkEndpoint) {
            this.privateLinkEndpoint = privateLinkEndpoint;
            return this;
        }
        public Builder privateLinkEndpoint(@Nullable String privateLinkEndpoint) {
            this.privateLinkEndpoint = Codegen.ofNullable(privateLinkEndpoint);
            return this;
        }
        public Builder securityGroupArns(@Nullable Output<List<String>> securityGroupArns) {
            this.securityGroupArns = securityGroupArns;
            return this;
        }
        public Builder securityGroupArns(@Nullable List<String> securityGroupArns) {
            this.securityGroupArns = Codegen.ofNullable(securityGroupArns);
            return this;
        }
        public Builder securityGroupArns(String... securityGroupArns) {
            return securityGroupArns(List.of(securityGroupArns));
        }
        public Builder subnetArns(@Nullable Output<List<String>> subnetArns) {
            this.subnetArns = subnetArns;
            return this;
        }
        public Builder subnetArns(@Nullable List<String> subnetArns) {
            this.subnetArns = Codegen.ofNullable(subnetArns);
            return this;
        }
        public Builder subnetArns(String... subnetArns) {
            return subnetArns(List.of(subnetArns));
        }
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = Codegen.ofNullable(tags);
            return this;
        }
        public Builder vpcEndpointId(@Nullable Output<String> vpcEndpointId) {
            this.vpcEndpointId = vpcEndpointId;
            return this;
        }
        public Builder vpcEndpointId(@Nullable String vpcEndpointId) {
            this.vpcEndpointId = Codegen.ofNullable(vpcEndpointId);
            return this;
        }        public AgentArgs build() {
            return new AgentArgs(activationKey, ipAddress, name, privateLinkEndpoint, securityGroupArns, subnetArns, tags, vpcEndpointId);
        }
    }
}
