// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.ec2.inputs;

import io.pulumi.aws.ec2.inputs.GetInstanceTypeOfferingFilter;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstanceTypeOfferingArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetInstanceTypeOfferingArgs Empty = new GetInstanceTypeOfferingArgs();

    /**
     * One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypeOfferings.html) for supported filters. Detailed below.
     * 
     */
    @Import(name="filters")
      private final @Nullable List<GetInstanceTypeOfferingFilter> filters;

    public List<GetInstanceTypeOfferingFilter> getFilters() {
        return this.filters == null ? List.of() : this.filters;
    }

    /**
     * Location type. Defaults to `region`. Valid values: `availability-zone`, `availability-zone-id`, and `region`.
     * 
     */
    @Import(name="locationType")
      private final @Nullable String locationType;

    public Optional<String> getLocationType() {
        return this.locationType == null ? Optional.empty() : Optional.ofNullable(this.locationType);
    }

    /**
     * Ordered list of preferred EC2 Instance Types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     * 
     */
    @Import(name="preferredInstanceTypes")
      private final @Nullable List<String> preferredInstanceTypes;

    public List<String> getPreferredInstanceTypes() {
        return this.preferredInstanceTypes == null ? List.of() : this.preferredInstanceTypes;
    }

    public GetInstanceTypeOfferingArgs(
        @Nullable List<GetInstanceTypeOfferingFilter> filters,
        @Nullable String locationType,
        @Nullable List<String> preferredInstanceTypes) {
        this.filters = filters;
        this.locationType = locationType;
        this.preferredInstanceTypes = preferredInstanceTypes;
    }

    private GetInstanceTypeOfferingArgs() {
        this.filters = List.of();
        this.locationType = null;
        this.preferredInstanceTypes = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceTypeOfferingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<GetInstanceTypeOfferingFilter> filters;
        private @Nullable String locationType;
        private @Nullable List<String> preferredInstanceTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceTypeOfferingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.locationType = defaults.locationType;
    	      this.preferredInstanceTypes = defaults.preferredInstanceTypes;
        }

        public Builder filters(@Nullable List<GetInstanceTypeOfferingFilter> filters) {
            this.filters = filters;
            return this;
        }

        public Builder locationType(@Nullable String locationType) {
            this.locationType = locationType;
            return this;
        }

        public Builder preferredInstanceTypes(@Nullable List<String> preferredInstanceTypes) {
            this.preferredInstanceTypes = preferredInstanceTypes;
            return this;
        }
        public GetInstanceTypeOfferingArgs build() {
            return new GetInstanceTypeOfferingArgs(filters, locationType, preferredInstanceTypes);
        }
    }
}
