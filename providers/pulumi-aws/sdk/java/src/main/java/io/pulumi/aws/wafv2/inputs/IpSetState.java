// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.wafv2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IpSetState extends io.pulumi.resources.ResourceArgs {

    public static final IpSetState Empty = new IpSetState();

    /**
     * Contains an array of strings that specify one or more IP addresses or blocks of IP addresses in Classless Inter-Domain Routing (CIDR) notation. AWS WAF supports all address ranges for IP versions IPv4 and IPv6.
     * 
     */
    @InputImport(name="addresses")
      private final @Nullable Input<List<String>> addresses;

    public Input<List<String>> getAddresses() {
        return this.addresses == null ? Input.empty() : this.addresses;
    }

    /**
     * The Amazon Resource Name (ARN) that identifies the cluster.
     * 
     */
    @InputImport(name="arn")
      private final @Nullable Input<String> arn;

    public Input<String> getArn() {
        return this.arn == null ? Input.empty() : this.arn;
    }

    /**
     * A friendly description of the IP set.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Specify IPV4 or IPV6. Valid values are `IPV4` or `IPV6`.
     * 
     */
    @InputImport(name="ipAddressVersion")
      private final @Nullable Input<String> ipAddressVersion;

    public Input<String> getIpAddressVersion() {
        return this.ipAddressVersion == null ? Input.empty() : this.ipAddressVersion;
    }

    @InputImport(name="lockToken")
      private final @Nullable Input<String> lockToken;

    public Input<String> getLockToken() {
        return this.lockToken == null ? Input.empty() : this.lockToken;
    }

    /**
     * A friendly name of the IP set.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the Region US East (N. Virginia).
     * 
     */
    @InputImport(name="scope")
      private final @Nullable Input<String> scope;

    public Input<String> getScope() {
        return this.scope == null ? Input.empty() : this.scope;
    }

    /**
     * An array of key:value pairs to associate with the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Input<Map<String,String>> tags;

    public Input<Map<String,String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider .
     * 
     */
    @InputImport(name="tagsAll")
      private final @Nullable Input<Map<String,String>> tagsAll;

    public Input<Map<String,String>> getTagsAll() {
        return this.tagsAll == null ? Input.empty() : this.tagsAll;
    }

    public IpSetState(
        @Nullable Input<List<String>> addresses,
        @Nullable Input<String> arn,
        @Nullable Input<String> description,
        @Nullable Input<String> ipAddressVersion,
        @Nullable Input<String> lockToken,
        @Nullable Input<String> name,
        @Nullable Input<String> scope,
        @Nullable Input<Map<String,String>> tags,
        @Nullable Input<Map<String,String>> tagsAll) {
        this.addresses = addresses;
        this.arn = arn;
        this.description = description;
        this.ipAddressVersion = ipAddressVersion;
        this.lockToken = lockToken;
        this.name = name;
        this.scope = scope;
        this.tags = tags;
        this.tagsAll = tagsAll;
    }

    private IpSetState() {
        this.addresses = Input.empty();
        this.arn = Input.empty();
        this.description = Input.empty();
        this.ipAddressVersion = Input.empty();
        this.lockToken = Input.empty();
        this.name = Input.empty();
        this.scope = Input.empty();
        this.tags = Input.empty();
        this.tagsAll = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IpSetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> addresses;
        private @Nullable Input<String> arn;
        private @Nullable Input<String> description;
        private @Nullable Input<String> ipAddressVersion;
        private @Nullable Input<String> lockToken;
        private @Nullable Input<String> name;
        private @Nullable Input<String> scope;
        private @Nullable Input<Map<String,String>> tags;
        private @Nullable Input<Map<String,String>> tagsAll;

        public Builder() {
    	      // Empty
        }

        public Builder(IpSetState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addresses = defaults.addresses;
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.ipAddressVersion = defaults.ipAddressVersion;
    	      this.lockToken = defaults.lockToken;
    	      this.name = defaults.name;
    	      this.scope = defaults.scope;
    	      this.tags = defaults.tags;
    	      this.tagsAll = defaults.tagsAll;
        }

        public Builder setAddresses(@Nullable Input<List<String>> addresses) {
            this.addresses = addresses;
            return this;
        }

        public Builder setAddresses(@Nullable List<String> addresses) {
            this.addresses = Input.ofNullable(addresses);
            return this;
        }

        public Builder setArn(@Nullable Input<String> arn) {
            this.arn = arn;
            return this;
        }

        public Builder setArn(@Nullable String arn) {
            this.arn = Input.ofNullable(arn);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setIpAddressVersion(@Nullable Input<String> ipAddressVersion) {
            this.ipAddressVersion = ipAddressVersion;
            return this;
        }

        public Builder setIpAddressVersion(@Nullable String ipAddressVersion) {
            this.ipAddressVersion = Input.ofNullable(ipAddressVersion);
            return this;
        }

        public Builder setLockToken(@Nullable Input<String> lockToken) {
            this.lockToken = lockToken;
            return this;
        }

        public Builder setLockToken(@Nullable String lockToken) {
            this.lockToken = Input.ofNullable(lockToken);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setScope(@Nullable Input<String> scope) {
            this.scope = scope;
            return this;
        }

        public Builder setScope(@Nullable String scope) {
            this.scope = Input.ofNullable(scope);
            return this;
        }

        public Builder setTags(@Nullable Input<Map<String,String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable Map<String,String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTagsAll(@Nullable Input<Map<String,String>> tagsAll) {
            this.tagsAll = tagsAll;
            return this;
        }

        public Builder setTagsAll(@Nullable Map<String,String> tagsAll) {
            this.tagsAll = Input.ofNullable(tagsAll);
            return this;
        }
        public IpSetState build() {
            return new IpSetState(addresses, arn, description, ipAddressVersion, lockToken, name, scope, tags, tagsAll);
        }
    }
}
