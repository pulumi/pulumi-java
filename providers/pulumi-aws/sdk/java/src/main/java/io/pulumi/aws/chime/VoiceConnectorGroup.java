// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.chime;

import io.pulumi.aws.Utilities;
import io.pulumi.aws.chime.VoiceConnectorGroupArgs;
import io.pulumi.aws.chime.inputs.VoiceConnectorGroupState;
import io.pulumi.aws.chime.outputs.VoiceConnectorGroupConnector;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.Export;
import io.pulumi.core.annotations.ResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by including VoiceConnectorItems in the request.
 * 
 * You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.
 * 
 * {{% examples %}}
 * ## Example Usage
 * {{% example %}}
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * 
 * const vc1 = new aws.chime.VoiceConnector("vc1", {
 *     requireEncryption: true,
 *     awsRegion: "us-east-1",
 * });
 * const vc2 = new aws.chime.VoiceConnector("vc2", {
 *     requireEncryption: true,
 *     awsRegion: "us-west-2",
 * });
 * const group = new aws.chime.VoiceConnectorGroup("group", {connectors: [
 *     {
 *         voiceConnectorId: vc1.id,
 *         priority: 1,
 *     },
 *     {
 *         voiceConnectorId: vc2.id,
 *         priority: 3,
 *     },
 * ]});
 * ```
 * ```python
 * import pulumi
 * import pulumi_aws as aws
 * 
 * vc1 = aws.chime.VoiceConnector("vc1",
 *     require_encryption=True,
 *     aws_region="us-east-1")
 * vc2 = aws.chime.VoiceConnector("vc2",
 *     require_encryption=True,
 *     aws_region="us-west-2")
 * group = aws.chime.VoiceConnectorGroup("group", connectors=[
 *     aws.chime.VoiceConnectorGroupConnectorArgs(
 *         voice_connector_id=vc1.id,
 *         priority=1,
 *     ),
 *     aws.chime.VoiceConnectorGroupConnectorArgs(
 *         voice_connector_id=vc2.id,
 *         priority=3,
 *     ),
 * ])
 * ```
 * ```csharp
 * using Pulumi;
 * using Aws = Pulumi.Aws;
 * 
 * class MyStack : Stack
 * {
 *     public MyStack()
 *     {
 *         var vc1 = new Aws.Chime.VoiceConnector("vc1", new Aws.Chime.VoiceConnectorArgs
 *         {
 *             RequireEncryption = true,
 *             AwsRegion = "us-east-1",
 *         });
 *         var vc2 = new Aws.Chime.VoiceConnector("vc2", new Aws.Chime.VoiceConnectorArgs
 *         {
 *             RequireEncryption = true,
 *             AwsRegion = "us-west-2",
 *         });
 *         var @group = new Aws.Chime.VoiceConnectorGroup("group", new Aws.Chime.VoiceConnectorGroupArgs
 *         {
 *             Connectors = 
 *             {
 *                 new Aws.Chime.Inputs.VoiceConnectorGroupConnectorArgs
 *                 {
 *                     VoiceConnectorId = vc1.Id,
 *                     Priority = 1,
 *                 },
 *                 new Aws.Chime.Inputs.VoiceConnectorGroupConnectorArgs
 *                 {
 *                     VoiceConnectorId = vc2.Id,
 *                     Priority = 3,
 *                 },
 *             },
 *         });
 *     }
 * 
 * }
 * ```
 * ```go
 * package main
 * 
 * import (
 * 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/chime"
 * 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
 * )
 * 
 * func main() {
 * 	pulumi.Run(func(ctx *pulumi.Context) error {
 * 		vc1, err := chime.NewVoiceConnector(ctx, "vc1", &chime.VoiceConnectorArgs{
 * 			RequireEncryption: pulumi.Bool(true),
 * 			AwsRegion:         pulumi.String("us-east-1"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		vc2, err := chime.NewVoiceConnector(ctx, "vc2", &chime.VoiceConnectorArgs{
 * 			RequireEncryption: pulumi.Bool(true),
 * 			AwsRegion:         pulumi.String("us-west-2"),
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		_, err = chime.NewVoiceConnectorGroup(ctx, "group", &chime.VoiceConnectorGroupArgs{
 * 			Connectors: chime.VoiceConnectorGroupConnectorArray{
 * 				&chime.VoiceConnectorGroupConnectorArgs{
 * 					VoiceConnectorId: vc1.ID(),
 * 					Priority:         pulumi.Int(1),
 * 				},
 * 				&chime.VoiceConnectorGroupConnectorArgs{
 * 					VoiceConnectorId: vc2.ID(),
 * 					Priority:         pulumi.Int(3),
 * 				},
 * 			},
 * 		})
 * 		if err != nil {
 * 			return err
 * 		}
 * 		return nil
 * 	})
 * }
 * ```
 * {{% /example %}}
 * {{% /examples %}}
 * 
 * ## Import
 * 
 * Configuration Recorder can be imported using the name, e.g.,
 * 
 * ```sh
 *  $ pulumi import aws:chime/voiceConnectorGroup:VoiceConnectorGroup default example
 * ```
 * 
 *  
 */
@ResourceType(type="aws:chime/voiceConnectorGroup:VoiceConnectorGroup")
public class VoiceConnectorGroup extends io.pulumi.resources.CustomResource {
    /**
     * The Amazon Chime Voice Connectors to route inbound calls to.
     * 
     */
    @Export(name="connectors", type=List.class, parameters={VoiceConnectorGroupConnector.class})
    private Output</* @Nullable */ List<VoiceConnectorGroupConnector>> connectors;

    /**
     * @return The Amazon Chime Voice Connectors to route inbound calls to.
     * 
     */
    public Output</* @Nullable */ List<VoiceConnectorGroupConnector>> getConnectors() {
        return this.connectors;
    }
    /**
     * The name of the Amazon Chime Voice Connector group.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the Amazon Chime Voice Connector group.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VoiceConnectorGroup(String name) {
        this(name, VoiceConnectorGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VoiceConnectorGroup(String name, @Nullable VoiceConnectorGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VoiceConnectorGroup(String name, @Nullable VoiceConnectorGroupArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:chime/voiceConnectorGroup:VoiceConnectorGroup", name, args == null ? VoiceConnectorGroupArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private VoiceConnectorGroup(String name, Output<String> id, @Nullable VoiceConnectorGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("aws:chime/voiceConnectorGroup:VoiceConnectorGroup", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VoiceConnectorGroup get(String name, Output<String> id, @Nullable VoiceConnectorGroupState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new VoiceConnectorGroup(name, id, state, options);
    }
}
